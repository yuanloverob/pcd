{
  "cve_id": "CVE-2021-41268",
  "cve_desc": "Symfony/SecurityBundle is the security system for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Since the rework of the Remember me cookie in version 5.3.0, the cookie is not invalidated when the user changes their password. Attackers can therefore maintain their access to the account even if the password is changed as long as they have had the chance to login once and get a valid remember me cookie. Starting with version 5.3.12, Symfony makes the password part of the signature by default. In that way, when the password changes, then the cookie is not valid anymore.",
  "repo": "symfony/symfony",
  "patch_hash": "36a808b857cd3240244f4b224452fb1e70dc6dfc",
  "patch_info": {
    "commit_hash": "36a808b857cd3240244f4b224452fb1e70dc6dfc",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/36a808b857cd3240244f4b224452fb1e70dc6dfc",
    "files": [
      "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
      "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
      "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php"
    ],
    "message": "[SecurityBundle] Default signature_properties to the previous behavior",
    "before_after_code_files": [
      "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
      "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
      "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php": [
      "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "208:                 ->requiresAtLeastOneElement()",
      "209:                 ->info('An array of properties on your User that are used to sign the remember-me cookie. If any of these change, all existing cookies will become invalid.')",
      "210:                 ->example(['email', 'password'])",
      "211:             ->end()",
      "212:             ->arrayNode('token_provider')",
      "213:                 ->beforeNormalization()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "211:                 ->defaultValue(['password'])",
      "",
      "---------------"
    ],
    "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php": [
      "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: {",
      "22:     private $inner;",
      "24:     public function __construct(InMemoryUserProvider $inner)",
      "25:     {",
      "26:         $this->inner = $inner;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24:     public static $changePassword = false;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29:     public function loadUserByUsername($username)",
      "30:     {",
      "32:     }",
      "34:     public function loadUserByIdentifier(string $userIdentifier): UserInterface",
      "35:     {",
      "37:     }",
      "39:     public function refreshUser(UserInterface $user)",
      "40:     {",
      "47:     }",
      "49:     public function supportsClass($class)",
      "50:     {",
      "51:         return $this->inner->supportsClass($class);",
      "52:     }",
      "53: }",
      "",
      "[Removed Lines]",
      "31:         return $this->inner->loadUserByUsername($username);",
      "36:         return $this->inner->loadUserByIdentifier($userIdentifier);",
      "41:         $user = $this->inner->refreshUser($user);",
      "43:         $alterUser = \\Closure::bind(function (InMemoryUser $user) { $user->password = 'foo'; }, null, class_exists(User::class) ? User::class : InMemoryUser::class);",
      "44:         $alterUser($user);",
      "46:         return $user;",
      "",
      "[Added Lines]",
      "33:         return $this->changeUser($this->inner->loadUserByUsername($username));",
      "38:         return $this->changeUser($this->inner->loadUserByIdentifier($userIdentifier));",
      "43:         return $this->changeUser($this->inner->refreshUser($user));",
      "51:     private function changeUser(UserInterface $user): UserInterface",
      "52:     {",
      "53:         if (self::$changePassword) {",
      "54:             $alterUser = \\Closure::bind(function (InMemoryUser $user) { $user->password = 'changed!'; }, null, class_exists(User::class) ? User::class : InMemoryUser::class);",
      "55:             $alterUser($user);",
      "56:         }",
      "58:         return $user;",
      "59:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php": [
      "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional;",
      "14: class RememberMeTest extends AbstractWebTestCase",
      "15: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: use Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle\\Security\\UserChangingUserProvider;",
      "18:     protected function setUp(): void",
      "19:     {",
      "20:         UserChangingUserProvider::$changePassword = false;",
      "21:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "52:         $this->assertSame(302, $client->getResponse()->getStatusCode());",
      "53:         $cookieJar = $client->getCookieJar();",
      "56:         $client->request('GET', '/profile');",
      "57:         $this->assertRedirect($client->getResponse(), '/login');",
      "58:         $this->assertNull($cookieJar->get('REMEMBERME'));",
      "59:     }",
      "61:     public function testSessionLessRememberMeLogout()",
      "",
      "[Removed Lines]",
      "54:         $this->assertNotNull($cookieJar->get('REMEMBERME'));",
      "",
      "[Added Lines]",
      "61:         $this->assertNotNull($cookie = $cookieJar->get('REMEMBERME'));",
      "63:         UserChangingUserProvider::$changePassword = true;",
      "71:         $cookieJar->set($cookie);",
      "72:         $client->request('GET', '/profile');",
      "73:         $this->assertRedirect($client->getResponse(), '/login');",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "122:         $this->assertSame(302, $client->getResponse()->getStatusCode());",
      "123:         $cookieJar = $client->getCookieJar();",
      "126:         $client->request('GET', '/profile');",
      "127:         $this->assertRedirect($client->getResponse(), '/login');",
      "128:         $this->assertNull($cookieJar->get('REMEMBERME'));",
      "129:     }",
      "",
      "[Removed Lines]",
      "124:         $this->assertNotNull($cookieJar->get('REMEMBERME'));",
      "",
      "[Added Lines]",
      "139:         $this->assertNotNull($cookie = $cookieJar->get('REMEMBERME'));",
      "141:         UserChangingUserProvider::$changePassword = true;",
      "149:         $cookieJar->set($cookie);",
      "150:         $client->request('GET', '/profile');",
      "151:         $this->assertRedirect($client->getResponse(), '/login');",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "15670419d45b9f59f134715ad219d27f16d677a8",
      "candidate_info": {
        "commit_hash": "15670419d45b9f59f134715ad219d27f16d677a8",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/15670419d45b9f59f134715ad219d27f16d677a8",
        "files": [
          "src/Symfony/Bridge/Doctrine/SchemaListener/RememberMeTokenProviderDoctrineSchemaSubscriber.php",
          "src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php",
          "src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterGlobalSecurityEventListenersPass.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/ReplaceDecoratedRememberMeHandlerPass.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/LoginLinkFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "src/Symfony/Bundle/SecurityBundle/LoginLink/FirewallAwareLoginLinkHandler.php",
          "src/Symfony/Bundle/SecurityBundle/RememberMe/DecoratedRememberMeHandler.php",
          "src/Symfony/Bundle/SecurityBundle/RememberMe/FirewallAwareRememberMeHandler.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/schema/security-1.0.xsd",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_remember_me.php",
          "src/Symfony/Bundle/SecurityBundle/Security/FirewallAwareTrait.php",
          "src/Symfony/Bundle/SecurityBundle/Security/UserAuthenticator.php",
          "src/Symfony/Bundle/SecurityBundle/SecurityBundle.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Controller/ProfileController.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/RememberMeBundle.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/StaticTokenProvider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/ClearRememberMeTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/ClearRememberMe/bundles.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/ClearRememberMe/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/ClearRememberMe/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/ClearRememberMe/routing.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/bundles.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/clear_on_change_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/config_persistent.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/config_session.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/routing.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/stateless_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMeLogout/bundles.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMeLogout/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMeLogout/routing.yml",
          "src/Symfony/Component/Security/CHANGELOG.md",
          "src/Symfony/Component/Security/Core/Signature/Exception/ExpiredSignatureException.php",
          "src/Symfony/Component/Security/Core/Signature/Exception/InvalidSignatureException.php",
          "src/Symfony/Component/Security/Core/Signature/ExpiredSignatureStorage.php",
          "src/Symfony/Component/Security/Core/Signature/SignatureHasher.php",
          "src/Symfony/Component/Security/Core/Tests/Signature/ExpiredSignatureStorageTest.php",
          "src/Symfony/Component/Security/Http/Authenticator/Passport/Badge/RememberMeBadge.php",
          "src/Symfony/Component/Security/Http/Authenticator/RememberMeAuthenticator.php",
          "src/Symfony/Component/Security/Http/Event/DeauthenticatedEvent.php",
          "src/Symfony/Component/Security/Http/Event/TokenDeauthenticatedEvent.php",
          "src/Symfony/Component/Security/Http/EventListener/CheckRememberMeConditionsListener.php",
          "src/Symfony/Component/Security/Http/EventListener/RememberMeListener.php",
          "src/Symfony/Component/Security/Http/Firewall/ContextListener.php",
          "src/Symfony/Component/Security/Http/LoginLink/Exception/ExpiredLoginLinkException.php",
          "src/Symfony/Component/Security/Http/LoginLink/Exception/InvalidLoginLinkException.php",
          "src/Symfony/Component/Security/Http/LoginLink/ExpiredLoginLinkStorage.php",
          "src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandler.php",
          "src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeHandler.php",
          "src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php",
          "src/Symfony/Component/Security/Http/RememberMe/RememberMeDetails.php",
          "src/Symfony/Component/Security/Http/RememberMe/RememberMeHandlerInterface.php",
          "src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php",
          "src/Symfony/Component/Security/Http/RememberMe/SignatureRememberMeHandler.php",
          "src/Symfony/Component/Security/Http/Tests/Authenticator/RememberMeAuthenticatorTest.php",
          "src/Symfony/Component/Security/Http/Tests/EventListener/CheckRememberMeConditionsListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/EventListener/RememberMeListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/ContextListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/LoginLink/ExpiredLoginLinkStorageTest.php",
          "src/Symfony/Component/Security/Http/Tests/LoginLink/LoginLinkHandlerTest.php",
          "src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php",
          "src/Symfony/Component/Security/Http/Tests/RememberMe/SignatureRememberMeHandlerTest.php"
        ],
        "message": "[Security] Rework the remember me system",
        "before_after_code_files": [
          "src/Symfony/Bridge/Doctrine/SchemaListener/RememberMeTokenProviderDoctrineSchemaSubscriber.php||src/Symfony/Bridge/Doctrine/SchemaListener/RememberMeTokenProviderDoctrineSchemaSubscriber.php",
          "src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php||src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php",
          "src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php||src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterGlobalSecurityEventListenersPass.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterGlobalSecurityEventListenersPass.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/ReplaceDecoratedRememberMeHandlerPass.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/ReplaceDecoratedRememberMeHandlerPass.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/LoginLinkFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/LoginLinkFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "src/Symfony/Bundle/SecurityBundle/LoginLink/FirewallAwareLoginLinkHandler.php||src/Symfony/Bundle/SecurityBundle/LoginLink/FirewallAwareLoginLinkHandler.php",
          "src/Symfony/Bundle/SecurityBundle/RememberMe/DecoratedRememberMeHandler.php||src/Symfony/Bundle/SecurityBundle/RememberMe/DecoratedRememberMeHandler.php",
          "src/Symfony/Bundle/SecurityBundle/RememberMe/FirewallAwareRememberMeHandler.php||src/Symfony/Bundle/SecurityBundle/RememberMe/FirewallAwareRememberMeHandler.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/schemsecurity-1.0.xsd||src/Symfony/Bundle/SecurityBundle/Resources/config/schema/security-1.0.xsd",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_remember_me.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_remember_me.php",
          "src/Symfony/Bundle/SecurityBundle/Security/FirewallAwareTrait.php||src/Symfony/Bundle/SecurityBundle/Security/FirewallAwareTrait.php",
          "src/Symfony/Bundle/SecurityBundle/Security/UserAuthenticator.php||src/Symfony/Bundle/SecurityBundle/Security/UserAuthenticator.php",
          "src/Symfony/Bundle/SecurityBundle/SecurityBundle.php||src/Symfony/Bundle/SecurityBundle/SecurityBundle.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Controller/ProfileController.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Controller/ProfileController.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/ClearRememberMe/bundles.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/RememberMeBundle.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/StaticTokenProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/StaticTokenProvider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/ClearRememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/ClearRememberMeTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMeLogout/bundles.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/bundles.php",
          "src/Symfony/Component/Security/Core/Signature/Exception/ExpiredSignatureException.php||src/Symfony/Component/Security/Core/Signature/Exception/ExpiredSignatureException.php",
          "src/Symfony/Component/Security/Core/Signature/Exception/InvalidSignatureException.php||src/Symfony/Component/Security/Core/Signature/Exception/InvalidSignatureException.php",
          "src/Symfony/Component/Security/Http/LoginLink/ExpiredLoginLinkStorage.php||src/Symfony/Component/Security/Core/Signature/ExpiredSignatureStorage.php",
          "src/Symfony/Component/Security/Core/Signature/SignatureHasher.php||src/Symfony/Component/Security/Core/Signature/SignatureHasher.php",
          "src/Symfony/Component/Security/Http/Tests/LoginLink/ExpiredLoginLinkStorageTest.php||src/Symfony/Component/Security/Core/Tests/Signature/ExpiredSignatureStorageTest.php",
          "src/Symfony/Component/Security/Http/Authenticator/Passport/Badge/RememberMeBadge.php||src/Symfony/Component/Security/Http/Authenticator/Passport/Badge/RememberMeBadge.php",
          "src/Symfony/Component/Security/Http/Authenticator/RememberMeAuthenticator.php||src/Symfony/Component/Security/Http/Authenticator/RememberMeAuthenticator.php",
          "src/Symfony/Component/Security/Http/Event/DeauthenticatedEvent.php||src/Symfony/Component/Security/Http/Event/DeauthenticatedEvent.php",
          "src/Symfony/Component/Security/Http/Event/TokenDeauthenticatedEvent.php||src/Symfony/Component/Security/Http/Event/TokenDeauthenticatedEvent.php",
          "src/Symfony/Component/Security/Http/EventListener/CheckRememberMeConditionsListener.php||src/Symfony/Component/Security/Http/EventListener/CheckRememberMeConditionsListener.php",
          "src/Symfony/Component/Security/Http/EventListener/RememberMeListener.php||src/Symfony/Component/Security/Http/EventListener/RememberMeListener.php",
          "src/Symfony/Component/Security/Http/Firewall/ContextListener.php||src/Symfony/Component/Security/Http/Firewall/ContextListener.php",
          "src/Symfony/Component/Security/Http/LoginLink/Exception/ExpiredLoginLinkException.php||src/Symfony/Component/Security/Http/LoginLink/Exception/ExpiredLoginLinkException.php",
          "src/Symfony/Component/Security/Http/LoginLink/Exception/InvalidLoginLinkException.php||src/Symfony/Component/Security/Http/LoginLink/Exception/InvalidLoginLinkException.php",
          "src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandler.php||src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandler.php",
          "src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeHandler.php||src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeHandler.php",
          "src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php||src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php",
          "src/Symfony/Component/Security/Http/RememberMe/RememberMeDetails.php||src/Symfony/Component/Security/Http/RememberMe/RememberMeDetails.php",
          "src/Symfony/Component/Security/Http/RememberMe/RememberMeHandlerInterface.php||src/Symfony/Component/Security/Http/RememberMe/RememberMeHandlerInterface.php",
          "src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php||src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php",
          "src/Symfony/Component/Security/Http/RememberMe/SignatureRememberMeHandler.php||src/Symfony/Component/Security/Http/RememberMe/SignatureRememberMeHandler.php",
          "src/Symfony/Component/Security/Http/Tests/Authenticator/RememberMeAuthenticatorTest.php||src/Symfony/Component/Security/Http/Tests/Authenticator/RememberMeAuthenticatorTest.php",
          "src/Symfony/Component/Security/Http/Tests/EventListener/CheckRememberMeConditionsListenerTest.php||src/Symfony/Component/Security/Http/Tests/EventListener/CheckRememberMeConditionsListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/EventListener/RememberMeListenerTest.php||src/Symfony/Component/Security/Http/Tests/EventListener/RememberMeListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/ContextListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/ContextListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/LoginLink/LoginLinkHandlerTest.php||src/Symfony/Component/Security/Http/Tests/LoginLink/LoginLinkHandlerTest.php",
          "src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php||src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php",
          "src/Symfony/Component/Security/Http/Tests/RememberMe/SignatureRememberMeHandlerTest.php||src/Symfony/Component/Security/Http/Tests/RememberMe/SignatureRememberMeHandlerTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php"
          ],
          "candidate": [
            "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bridge/Doctrine/SchemaListener/RememberMeTokenProviderDoctrineSchemaSubscriber.php||src/Symfony/Bridge/Doctrine/SchemaListener/RememberMeTokenProviderDoctrineSchemaSubscriber.php": [
          "File: src/Symfony/Bridge/Doctrine/SchemaListener/RememberMeTokenProviderDoctrineSchemaSubscriber.php -> src/Symfony/Bridge/Doctrine/SchemaListener/RememberMeTokenProviderDoctrineSchemaSubscriber.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bridge\\Doctrine\\SchemaListener;",
          "14: use Doctrine\\Common\\EventSubscriber;",
          "15: use Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs;",
          "16: use Doctrine\\ORM\\Tools\\ToolEvents;",
          "17: use Symfony\\Bridge\\Doctrine\\Security\\RememberMe\\DoctrineTokenProvider;",
          "18: use Symfony\\Component\\Security\\Http\\RememberMe\\PersistentRememberMeHandler;",
          "19: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "26: final class RememberMeTokenProviderDoctrineSchemaSubscriber implements EventSubscriber",
          "27: {",
          "28:     private $rememberMeHandlers;",
          "33:     public function __construct(iterable $rememberMeHandlers)",
          "34:     {",
          "35:         $this->rememberMeHandlers = $rememberMeHandlers;",
          "36:     }",
          "38:     public function postGenerateSchema(GenerateSchemaEventArgs $event): void",
          "39:     {",
          "40:         $dbalConnection = $event->getEntityManager()->getConnection();",
          "42:         foreach ($this->rememberMeHandlers as $rememberMeHandler) {",
          "43:             if (",
          "44:                 $rememberMeHandler instanceof PersistentRememberMeHandler",
          "45:                 && ($tokenProvider = $rememberMeHandler->getTokenProvider()) instanceof DoctrineTokenProvider",
          "46:             ) {",
          "47:                 $tokenProvider->configureSchema($event->getSchema(), $dbalConnection);",
          "48:             }",
          "49:         }",
          "50:     }",
          "52:     public function getSubscribedEvents(): array",
          "53:     {",
          "54:         if (!class_exists(ToolEvents::class)) {",
          "55:             return [];",
          "56:         }",
          "58:         return [",
          "59:             ToolEvents::postGenerateSchema,",
          "60:         ];",
          "61:     }",
          "62: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php||src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php": [
          "File: src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php -> src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Doctrine\\DBAL\\Connection;",
          "15: use Doctrine\\DBAL\\Driver\\Result as DriverResult;",
          "16: use Doctrine\\DBAL\\Result;",
          "17: use Doctrine\\DBAL\\Types\\Types;",
          "18: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\PersistentToken;",
          "19: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\PersistentTokenInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: use Doctrine\\DBAL\\Schema\\Schema;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     public function loadTokenBySeries(string $series)",
          "54:     {",
          "58:         $paramValues = ['series' => $series];",
          "59:         $paramTypes = ['series' => \\PDO::PARAM_STR];",
          "60:         $stmt = $this->conn->executeQuery($sql, $paramValues, $paramTypes);",
          "",
          "[Removed Lines]",
          "56:         $sql = 'SELECT class, username, value, lastUsed AS last_used'",
          "57:             .' FROM rememberme_token WHERE series=:series';",
          "",
          "[Added Lines]",
          "57:         $sql = 'SELECT class, username, value, lastUsed AS last_used FROM rememberme_token WHERE series=:series';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:     public function updateToken(string $series, string $tokenValue, \\DateTime $lastUsed)",
          "89:     {",
          "92:         $paramValues = [",
          "93:             'value' => $tokenValue,",
          "94:             'lastUsed' => $lastUsed,",
          "",
          "[Removed Lines]",
          "90:         $sql = 'UPDATE rememberme_token SET value=:value, lastUsed=:lastUsed'",
          "91:             .' WHERE series=:series';",
          "",
          "[Added Lines]",
          "90:         $sql = 'UPDATE rememberme_token SET value=:value, lastUsed=:lastUsed WHERE series=:series';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "115:     public function createNewToken(PersistentTokenInterface $token)",
          "116:     {",
          "120:         $paramValues = [",
          "121:             'class' => $token->getClass(),",
          "",
          "[Removed Lines]",
          "117:         $sql = 'INSERT INTO rememberme_token'",
          "118:             .' (class, username, series, value, lastUsed)'",
          "119:             .' VALUES (:class, :username, :series, :value, :lastUsed)';",
          "",
          "[Added Lines]",
          "116:         $sql = 'INSERT INTO rememberme_token (class, username, series, value, lastUsed) VALUES (:class, :username, :series, :value, :lastUsed)';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "138:             $this->conn->executeUpdate($sql, $paramValues, $paramTypes);",
          "139:         }",
          "140:     }",
          "141: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:     public function configureSchema(Schema $schema, Connection $forConnection): void",
          "143:     {",
          "145:         if ($forConnection !== $this->conn) {",
          "146:             return;",
          "147:         }",
          "149:         if ($schema->hasTable('rememberme_token')) {",
          "150:             return;",
          "151:         }",
          "153:         $this->addTableToSchema($schema);",
          "154:     }",
          "156:     private function addTableToSchema(Schema $schema): void",
          "157:     {",
          "158:         $table = $schema->createTable('rememberme_token');",
          "159:         $table->addColumn('series', Types::STRING, ['length' => 88]);",
          "160:         $table->addColumn('value', Types::STRING, ['length' => 88]);",
          "161:         $table->addColumn('lastUsed', Types::DATETIME_MUTABLE);",
          "162:         $table->addColumn('class', Types::STRING, ['length' => 100]);",
          "163:         $table->addColumn('username', Types::STRING, ['length' => 200]);",
          "164:         $table->setPrimaryKey(['series']);",
          "165:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php||src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php": [
          "File: src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php -> src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:         'security.authenticator.login_linker',",
          "78:         'security.expression_language_provider',",
          "79:         'security.remember_me_aware',",
          "80:         'security.voter',",
          "81:         'serializer.encoder',",
          "82:         'serializer.normalizer',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:         'security.remember_me_handler',",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterGlobalSecurityEventListenersPass.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterGlobalSecurityEventListenersPass.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterGlobalSecurityEventListenersPass.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterGlobalSecurityEventListenersPass.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent;",
          "22: use Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent;",
          "23: use Symfony\\Component\\Security\\Http\\Event\\LogoutEvent;",
          "24: use Symfony\\Component\\Security\\Http\\SecurityEvents;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: use Symfony\\Component\\Security\\Http\\Event\\TokenDeauthenticatedEvent;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:         AuthenticationTokenCreatedEvent::class,",
          "45:         AuthenticationSuccessEvent::class,",
          "46:         InteractiveLoginEvent::class,",
          "49:         AuthenticationEvents::AUTHENTICATION_SUCCESS,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:         TokenDeauthenticatedEvent::class,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/ReplaceDecoratedRememberMeHandlerPass.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/ReplaceDecoratedRememberMeHandlerPass.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/ReplaceDecoratedRememberMeHandlerPass.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/ReplaceDecoratedRememberMeHandlerPass.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Compiler;",
          "14: use Symfony\\Bundle\\SecurityBundle\\RememberMe\\DecoratedRememberMeHandler;",
          "15: use Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface;",
          "16: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "25: final class ReplaceDecoratedRememberMeHandlerPass implements CompilerPassInterface",
          "26: {",
          "27:     private const HANDLER_TAG = 'security.remember_me_handler';",
          "32:     public function process(ContainerBuilder $container): void",
          "33:     {",
          "34:         $handledFirewalls = [];",
          "35:         foreach ($container->findTaggedServiceIds(self::HANDLER_TAG) as $definitionId => $rememberMeHandlerTags) {",
          "36:             $definition = $container->findDefinition($definitionId);",
          "37:             if (DecoratedRememberMeHandler::class !== $definition->getClass()) {",
          "38:                 continue;",
          "39:             }",
          "42:             $realRememberMeHandler = $container->findDefinition((string) $definition->getArgument(0));",
          "43:             if (null === $realRememberMeHandler) {",
          "44:                 throw new \\LogicException(sprintf('Invalid service definition for custom remember me handler; no service found with ID \"%s\".', (string) $definition->getArgument(0)));",
          "45:             }",
          "47:             foreach ($rememberMeHandlerTags as $rememberMeHandlerTag) {",
          "49:                 if (\\in_array($rememberMeHandlerTag['firewall'], $handledFirewalls, true)) {",
          "50:                     continue;",
          "51:                 }",
          "53:                 $rememberMeHandler = clone $realRememberMeHandler;",
          "54:                 $rememberMeHandler->addTag(self::HANDLER_TAG, $rememberMeHandlerTag);",
          "55:                 $container->setDefinition('security.authenticator.remember_me_handler.'.$rememberMeHandlerTag['firewall'], $rememberMeHandler);",
          "57:                 $handledFirewalls[] = $rememberMeHandlerTag['firewall'];",
          "58:             }",
          "59:         }",
          "60:     }",
          "61: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/LoginLinkFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/LoginLinkFactory.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/LoginLinkFactory.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/LoginLinkFactory.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:                 ->replaceArgument(1, $config['lifetime']);",
          "114:         }",
          "116:         $linkerId = 'security.authenticator.login_link_handler.'.$firewallName;",
          "117:         $linkerOptions = [",
          "118:             'route_name' => $config['check_route'],",
          "119:             'lifetime' => $config['lifetime'],",
          "121:         ];",
          "122:         $container",
          "123:             ->setDefinition($linkerId, new ChildDefinition('security.authenticator.abstract_login_link_handler'))",
          "124:             ->replaceArgument(1, new Reference($userProviderId))",
          "128:             ->addTag('security.authenticator.login_linker', ['firewall' => $firewallName])",
          "129:         ;",
          "",
          "[Removed Lines]",
          "120:             'max_uses' => $config['max_uses'] ?? null,",
          "125:             ->replaceArgument(3, $config['signature_properties'])",
          "126:             ->replaceArgument(5, $linkerOptions)",
          "127:             ->replaceArgument(6, $expiredStorageId ? new Reference($expiredStorageId) : null)",
          "",
          "[Added Lines]",
          "116:         $signatureHasherId = 'security.authenticator.login_link_signature_hasher.'.$firewallName;",
          "117:         $container",
          "118:             ->setDefinition($signatureHasherId, new ChildDefinition('security.authenticator.abstract_login_link_signature_hasher'))",
          "119:             ->replaceArgument(1, $config['signature_properties'])",
          "120:             ->replaceArgument(3, $expiredStorageId ? new Reference($expiredStorageId) : null)",
          "121:             ->replaceArgument(4, $config['max_uses'] ?? null)",
          "122:         ;",
          "132:             ->replaceArgument(2, new Reference($signatureHasherId))",
          "133:             ->replaceArgument(3, $linkerOptions)",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Security\\Factory;",
          "14: use Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition;",
          "15: use Symfony\\Component\\DependencyInjection\\Argument\\IteratorArgument;",
          "16: use Symfony\\Component\\DependencyInjection\\ChildDefinition;",
          "17: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "18: use Symfony\\Component\\DependencyInjection\\Definition;",
          "19: use Symfony\\Component\\DependencyInjection\\Reference;",
          "20: use Symfony\\Component\\HttpFoundation\\Cookie;",
          "21: use Symfony\\Component\\Security\\Http\\EventListener\\RememberMeLogoutListener;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use Symfony\\Bridge\\Doctrine\\Security\\RememberMe\\DoctrineTokenProvider;",
          "15: use Symfony\\Bundle\\SecurityBundle\\RememberMe\\DecoratedRememberMeHandler;",
          "17: use Symfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException;",
          "18: use Symfony\\Component\\Config\\FileLocator;",
          "23: use Symfony\\Component\\DependencyInjection\\Loader\\PhpFileLoader;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     public function createAuthenticator(ContainerBuilder $container, string $firewallName, array $config, string $userProviderId): string",
          "96:     {",
          "107:         $authenticatorId = 'security.authenticator.remember_me.'.$firewallName;",
          "108:         $container",
          "109:             ->setDefinition($authenticatorId, new ChildDefinition('security.authenticator.remember_me'))",
          "112:         ;",
          "114:         foreach ($container->findTaggedServiceIds('security.remember_me_aware') as $serviceId => $attributes) {",
          "116:             if ('security.context_listener' === substr($serviceId, 0, 25)) {",
          "122:                 continue;",
          "123:             }",
          "",
          "[Removed Lines]",
          "97:         $templateId = $this->generateRememberMeServicesTemplateId($config, $firewallName);",
          "98:         $rememberMeServicesId = $templateId.'.'.$firewallName;",
          "101:         $this->createRememberMeServices($container, $firewallName, $templateId, [new Reference($userProviderId)], $config);",
          "104:         $this->createRememberMeListener($container, $firewallName, $rememberMeServicesId);",
          "110:             ->replaceArgument(0, new Reference($rememberMeServicesId))",
          "111:             ->replaceArgument(3, $container->getDefinition($rememberMeServicesId)->getArgument(3))",
          "117:                 $container",
          "118:                     ->getDefinition($serviceId)",
          "119:                     ->addMethodCall('setRememberMeServices', [new Reference($rememberMeServicesId)])",
          "120:                 ;",
          "",
          "[Added Lines]",
          "102:         if (!$container->hasDefinition('security.authenticator.remember_me')) {",
          "103:             $loader = new PhpFileLoader($container, new FileLocator(\\dirname(__DIR__).'/../../Resources/config'));",
          "104:             $loader->load('security_authenticator_remember_me.php');",
          "105:         }",
          "108:         $rememberMeHandlerId = 'security.authenticator.remember_me_handler.'.$firewallName;",
          "109:         if (isset($config['service']) && isset($config['token_provider'])) {",
          "110:             throw new InvalidConfigurationException(sprintf('You cannot use both \"service\" and \"token_provider\" in \"security.firewalls.%s.remember_me\".', $firewallName));",
          "111:         }",
          "113:         if (isset($config['service'])) {",
          "114:             $container->register($rememberMeHandlerId, DecoratedRememberMeHandler::class)",
          "115:                 ->addArgument(new Reference($config['service']))",
          "116:                 ->addTag('security.remember_me_handler', ['firewall' => $firewallName]);",
          "117:         } elseif (isset($config['token_provider'])) {",
          "118:             $tokenProviderId = $this->createTokenProvider($container, $firewallName, $config['token_provider']);",
          "119:             $container->setDefinition($rememberMeHandlerId, new ChildDefinition('security.authenticator.persistent_remember_me_handler'))",
          "120:                 ->replaceArgument(0, new Reference($tokenProviderId))",
          "121:                 ->replaceArgument(2, new Reference($userProviderId))",
          "122:                 ->replaceArgument(4, $config)",
          "123:                 ->addTag('security.remember_me_handler', ['firewall' => $firewallName]);",
          "124:         } else {",
          "125:             $signatureHasherId = 'security.authenticator.remember_me_signature_hasher.'.$firewallName;",
          "126:             $container->setDefinition($signatureHasherId, new ChildDefinition('security.authenticator.remember_me_signature_hasher'))",
          "127:                 ->replaceArgument(1, $config['signature_properties'])",
          "128:             ;",
          "130:             $container->setDefinition($rememberMeHandlerId, new ChildDefinition('security.authenticator.signature_remember_me_handler'))",
          "131:                 ->replaceArgument(0, new Reference($signatureHasherId))",
          "132:                 ->replaceArgument(1, new Reference($userProviderId))",
          "133:                 ->replaceArgument(3, $config)",
          "134:                 ->addTag('security.remember_me_handler', ['firewall' => $firewallName]);",
          "135:         }",
          "138:         $rememberMeConditionsListenerId = 'security.listener.check_remember_me_conditions.'.$firewallName;",
          "139:         $container->setDefinition($rememberMeConditionsListenerId, new ChildDefinition('security.listener.check_remember_me_conditions'))",
          "140:             ->replaceArgument(0, array_intersect_key($config, ['always_remember_me' => true, 'remember_me_parameter' => true]))",
          "141:             ->addTag('kernel.event_subscriber', ['dispatcher' => 'security.event_dispatcher.'.$firewallName])",
          "142:         ;",
          "145:         $rememberMeListenerId = 'security.listener.remember_me.'.$firewallName;",
          "146:         $container->setDefinition($rememberMeListenerId, new ChildDefinition('security.listener.remember_me'))",
          "147:             ->replaceArgument(0, new Reference($rememberMeHandlerId))",
          "148:             ->addTag('kernel.event_subscriber', ['dispatcher' => 'security.event_dispatcher.'.$firewallName])",
          "149:         ;",
          "155:             ->replaceArgument(0, new Reference($rememberMeHandlerId))",
          "156:             ->replaceArgument(3, $config['name'] ?? $this->options['name'])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:         $builder",
          "149:             ->scalarNode('secret')->isRequired()->cannotBeEmpty()->end()",
          "150:             ->scalarNode('service')->end()",
          "152:             ->arrayNode('user_providers')",
          "153:                 ->beforeNormalization()",
          "154:                     ->ifString()->then(function ($v) { return [$v]; })",
          "",
          "[Removed Lines]",
          "151:             ->scalarNode('token_provider')->end()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156:                 ->prototype('scalar')->end()",
          "157:             ->end()",
          "158:             ->booleanNode('catch_exceptions')->defaultTrue()->end()",
          "161:         foreach ($this->options as $name => $value) {",
          "162:             if ('secure' === $name) {",
          "",
          "[Removed Lines]",
          "159:         ;",
          "",
          "[Added Lines]",
          "198:             ->arrayNode('signature_properties')",
          "199:                 ->prototype('scalar')->end()",
          "200:                 ->requiresAtLeastOneElement()",
          "201:                 ->info('An array of properties on your User that are used to sign the remember-me cookie. If any of these change, all existing cookies will become invalid.')",
          "202:                 ->example(['email', 'password'])",
          "203:             ->end()",
          "204:             ->arrayNode('token_provider')",
          "205:                 ->beforeNormalization()",
          "206:                     ->ifString()->then(function ($v) { return ['service' => $v]; })",
          "207:                 ->end()",
          "208:                 ->children()",
          "209:                     ->scalarNode('service')->info('The service ID of a custom rememberme token provider.')->end()",
          "210:                     ->arrayNode('doctrine')",
          "211:                         ->canBeEnabled()",
          "212:                         ->children()",
          "213:                             ->scalarNode('connection')->defaultNull()->end()",
          "214:                         ->end()",
          "215:                     ->end()",
          "216:                 ->end()",
          "217:             ->end();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "195:         $rememberMeServices->replaceArgument(2, $id);",
          "197:         if (isset($config['token_provider'])) {",
          "201:         }",
          "",
          "[Removed Lines]",
          "198:             $rememberMeServices->addMethodCall('setTokenProvider', [",
          "199:                 new Reference($config['token_provider']),",
          "200:             ]);",
          "",
          "[Added Lines]",
          "256:             $tokenProviderId = $this->createTokenProvider($container, $id, $config['token_provider']);",
          "257:             $rememberMeServices->addMethodCall('setTokenProvider', [new Reference($tokenProviderId)]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:         $rememberMeServices->replaceArgument(0, new IteratorArgument(array_unique($userProviders)));",
          "223:     }",
          "226:     {",
          "237:     }",
          "238: }",
          "",
          "[Removed Lines]",
          "225:     private function createRememberMeListener(ContainerBuilder $container, string $id, string $rememberMeServicesId): void",
          "227:         $container",
          "228:             ->setDefinition('security.listener.remember_me.'.$id, new ChildDefinition('security.listener.remember_me'))",
          "229:             ->addTag('kernel.event_subscriber', ['dispatcher' => 'security.event_dispatcher.'.$id])",
          "230:             ->replaceArgument(0, new Reference($rememberMeServicesId))",
          "231:         ;",
          "233:         $container",
          "234:             ->setDefinition('security.logout.listener.remember_me.'.$id, new Definition(RememberMeLogoutListener::class))",
          "235:             ->addTag('kernel.event_subscriber', ['dispatcher' => 'security.event_dispatcher.'.$id])",
          "236:             ->addArgument(new Reference($rememberMeServicesId));",
          "",
          "[Added Lines]",
          "282:     private function createTokenProvider(ContainerBuilder $container, string $firewallName, array $config): string",
          "284:         $tokenProviderId = $config['service'] ?? false;",
          "285:         if ($config['doctrine']['enabled'] ?? false) {",
          "286:             if (!class_exists(DoctrineTokenProvider::class)) {",
          "287:                 throw new InvalidConfigurationException('Cannot use the \"doctrine\" token provider for \"remember_me\" because the Doctrine Bridge is not installed. Try running \"composer require symfony/doctrine-bridge\".');",
          "288:             }",
          "290:             if (null === $config['doctrine']['connection']) {",
          "291:                 $connectionId = 'database_connection';",
          "292:             } else {",
          "293:                 $connectionId = 'doctrine.dbal.'.$config['doctrine']['connection'].'_connection';",
          "294:             }",
          "296:             $tokenProviderId = 'security.remember_me.doctrine_token_provider.'.$firewallName;",
          "297:             $container->register($tokenProviderId, DoctrineTokenProvider::class)",
          "298:                 ->addArgument(new Reference($connectionId));",
          "299:         }",
          "301:         if (!$tokenProviderId) {",
          "302:             throw new InvalidConfigurationException(sprintf('No token provider was set for firewall \"%s\". Either configure a service ID or set \"remember_me.token_provider.doctrine\" to true.', $firewallName));",
          "303:         }",
          "305:         return $tokenProviderId;",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: use Symfony\\Component\\EventDispatcher\\EventDispatcher;",
          "35: use Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage;",
          "36: use Symfony\\Component\\HttpKernel\\DependencyInjection\\Extension;",
          "37: use Symfony\\Component\\PasswordHasher\\Hasher\\NativePasswordHasher;",
          "38: use Symfony\\Component\\PasswordHasher\\Hasher\\Pbkdf2PasswordHasher;",
          "39: use Symfony\\Component\\PasswordHasher\\Hasher\\PlaintextPasswordHasher;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: use Symfony\\Component\\HttpKernel\\KernelEvents;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "393:         if (false === $firewall['stateless']) {",
          "394:             $contextKey = $firewall['context'] ?? $id;",
          "396:             $sessionStrategyId = 'security.authentication.session_strategy';",
          "398:             if ($this->authenticatorManagerEnabled) {",
          "",
          "[Removed Lines]",
          "395:             $listeners[] = new Reference($contextListenerId = $this->createContextListener($container, $contextKey));",
          "",
          "[Added Lines]",
          "396:             $listeners[] = new Reference($contextListenerId = $this->createContextListener($container, $contextKey, $this->authenticatorManagerEnabled ? $firewallEventDispatcherId : null));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "557:         return [$matcher, $listeners, $exceptionListener, null !== $logoutListenerId ? new Reference($logoutListenerId) : null];",
          "558:     }",
          "561:     {",
          "562:         if (isset($this->contextListeners[$contextKey])) {",
          "563:             return $this->contextListeners[$contextKey];",
          "",
          "[Removed Lines]",
          "560:     private function createContextListener(ContainerBuilder $container, string $contextKey)",
          "",
          "[Added Lines]",
          "561:     private function createContextListener(ContainerBuilder $container, string $contextKey, ?string $firewallEventDispatcherId)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "566:         $listenerId = 'security.context_listener.'.\\count($this->contextListeners);",
          "567:         $listener = $container->setDefinition($listenerId, new ChildDefinition('security.context_listener'));",
          "568:         $listener->replaceArgument(2, $contextKey);",
          "570:         return $this->contextListeners[$contextKey] = $listenerId;",
          "571:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:         if (null !== $firewallEventDispatcherId) {",
          "571:             $listener->replaceArgument(4, new Reference($firewallEventDispatcherId));",
          "572:             $listener->addTag('kernel.event_listener', ['event' => KernelEvents::RESPONSE, 'method' => 'onKernelResponse']);",
          "573:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/LoginLink/FirewallAwareLoginLinkHandler.php||src/Symfony/Bundle/SecurityBundle/LoginLink/FirewallAwareLoginLinkHandler.php": [
          "File: src/Symfony/Bundle/SecurityBundle/LoginLink/FirewallAwareLoginLinkHandler.php -> src/Symfony/Bundle/SecurityBundle/LoginLink/FirewallAwareLoginLinkHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\LoginLink;",
          "14: use Psr\\Container\\ContainerInterface;",
          "15: use Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap;",
          "16: use Symfony\\Component\\HttpFoundation\\Request;",
          "17: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: use Symfony\\Bundle\\SecurityBundle\\Security\\FirewallAwareTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: class FirewallAwareLoginLinkHandler implements LoginLinkHandlerInterface",
          "28: {",
          "33:     public function __construct(FirewallMap $firewallMap, ContainerInterface $loginLinkHandlerLocator, RequestStack $requestStack)",
          "34:     {",
          "35:         $this->firewallMap = $firewallMap;",
          "37:         $this->requestStack = $requestStack;",
          "38:     }",
          "40:     public function createLoginLink(UserInterface $user, Request $request = null): LoginLinkDetails",
          "41:     {",
          "43:     }",
          "45:     public function consumeLoginLink(Request $request): UserInterface",
          "46:     {",
          "67:     }",
          "68: }",
          "",
          "[Removed Lines]",
          "29:     private $firewallMap;",
          "30:     private $loginLinkHandlerLocator;",
          "31:     private $requestStack;",
          "36:         $this->loginLinkHandlerLocator = $loginLinkHandlerLocator;",
          "42:         return $this->getLoginLinkHandler()->createLoginLink($user, $request);",
          "47:         return $this->getLoginLinkHandler()->consumeLoginLink($request);",
          "48:     }",
          "50:     private function getLoginLinkHandler(): LoginLinkHandlerInterface",
          "51:     {",
          "52:         if (null === $request = $this->requestStack->getCurrentRequest()) {",
          "53:             throw new \\LogicException('Cannot determine the correct LoginLinkHandler to use: there is no active Request and so, the firewall cannot be determined. Try using the specific login link handler service.');",
          "54:         }",
          "56:         $firewall = $this->firewallMap->getFirewallConfig($request);",
          "57:         if (!$firewall) {",
          "58:             throw new \\LogicException('No login link handler found as the current route is not covered by a firewall.');",
          "59:         }",
          "61:         $firewallName = $firewall->getName();",
          "62:         if (!$this->loginLinkHandlerLocator->has($firewallName)) {",
          "63:             throw new \\LogicException(sprintf('No login link handler found. Did you add a login_link key under your \"%s\" firewall?', $firewallName));",
          "64:         }",
          "66:         return $this->loginLinkHandlerLocator->get($firewallName);",
          "",
          "[Added Lines]",
          "30:     use FirewallAwareTrait;",
          "32:     private const FIREWALL_OPTION = 'login_link';",
          "37:         $this->locator = $loginLinkHandlerLocator;",
          "43:         return $this->getForFirewall()->createLoginLink($user, $request);",
          "48:         return $this->getForFirewall()->consumeLoginLink($request);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/RememberMe/DecoratedRememberMeHandler.php||src/Symfony/Bundle/SecurityBundle/RememberMe/DecoratedRememberMeHandler.php": [
          "File: src/Symfony/Bundle/SecurityBundle/RememberMe/DecoratedRememberMeHandler.php -> src/Symfony/Bundle/SecurityBundle/RememberMe/DecoratedRememberMeHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\RememberMe;",
          "14: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "15: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeDetails;",
          "16: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "25: final class DecoratedRememberMeHandler implements RememberMeHandlerInterface",
          "26: {",
          "27:     private $handler;",
          "29:     public function __construct(RememberMeHandlerInterface $handler)",
          "30:     {",
          "31:         $this->handler = $handler;",
          "32:     }",
          "37:     public function createRememberMeCookie(UserInterface $user): void",
          "38:     {",
          "39:         $this->handler->createRememberMeCookie($user);",
          "40:     }",
          "45:     public function consumeRememberMeCookie(RememberMeDetails $rememberMeDetails): UserInterface",
          "46:     {",
          "47:         return $this->handler->consumeRememberMeCookie($rememberMeDetails);",
          "48:     }",
          "53:     public function clearRememberMeCookie(): void",
          "54:     {",
          "55:         $this->handler->clearRememberMeCookie();",
          "56:     }",
          "57: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/RememberMe/FirewallAwareRememberMeHandler.php||src/Symfony/Bundle/SecurityBundle/RememberMe/FirewallAwareRememberMeHandler.php": [
          "File: src/Symfony/Bundle/SecurityBundle/RememberMe/FirewallAwareRememberMeHandler.php -> src/Symfony/Bundle/SecurityBundle/RememberMe/FirewallAwareRememberMeHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\RememberMe;",
          "14: use Psr\\Container\\ContainerInterface;",
          "15: use Symfony\\Bundle\\SecurityBundle\\Security\\FirewallAwareTrait;",
          "16: use Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap;",
          "17: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "18: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "19: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeDetails;",
          "20: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "29: final class FirewallAwareRememberMeHandler implements RememberMeHandlerInterface",
          "30: {",
          "31:     use FirewallAwareTrait;",
          "33:     private const FIREWALL_OPTION = 'remember_me';",
          "35:     public function __construct(FirewallMap $firewallMap, ContainerInterface $rememberMeHandlerLocator, RequestStack $requestStack)",
          "36:     {",
          "37:         $this->firewallMap = $firewallMap;",
          "38:         $this->locator = $rememberMeHandlerLocator;",
          "39:         $this->requestStack = $requestStack;",
          "40:     }",
          "42:     public function createRememberMeCookie(UserInterface $user): void",
          "43:     {",
          "44:         $this->getForFirewall()->createRememberMeCookie($user);",
          "45:     }",
          "47:     public function consumeRememberMeCookie(RememberMeDetails $rememberMeDetails): UserInterface",
          "48:     {",
          "49:         return $this->getForFirewall()->consumeRememberMeCookie($rememberMeDetails);",
          "50:     }",
          "52:     public function clearRememberMeCookie(): void",
          "53:     {",
          "54:         $this->getForFirewall()->clearRememberMeCookie();",
          "55:     }",
          "56: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/schemsecurity-1.0.xsd||src/Symfony/Bundle/SecurityBundle/Resources/config/schema/security-1.0.xsd": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/schemsecurity-1.0.xsd -> src/Symfony/Bundle/SecurityBundle/Resources/config/schema/security-1.0.xsd",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337:         <xsd:sequence minOccurs=\"0\">",
          "338:             <xsd:choice minOccurs=\"0\" maxOccurs=\"unbounded\">",
          "339:                 <xsd:element name=\"user-provider\" type=\"xsd:string\" />",
          "340:             </xsd:choice>",
          "341:             <xsd:element name=\"token-provider\" type=\"remember_me_token_provider\" />",
          "342:         </xsd:sequence>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "358:     <xsd:complexType name=\"remember_me_token_provider\">",
          "359:         <xsd:sequence>",
          "360:             <xsd:element name=\"doctrine\" type=\"remember_me_token_provider_doctrine\" />",
          "361:         </xsd:sequence>",
          "362:         <xsd:attribute name=\"service\" type=\"xsd:string\" />",
          "363:     </xsd:complexType>",
          "365:     <xsd:complexType name=\"remember_me_token_provider_doctrine\">",
          "366:         <xsd:attribute name=\"enabled\" type=\"xsd:boolean\" />",
          "367:         <xsd:attribute name=\"connection\" type=\"xsd:string\" />",
          "368:     </xsd:complexType>",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator;",
          "21: use Symfony\\Component\\Security\\Http\\Authenticator\\HttpBasicAuthenticator;",
          "22: use Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator;",
          "24: use Symfony\\Component\\Security\\Http\\Authenticator\\RemoteUserAuthenticator;",
          "25: use Symfony\\Component\\Security\\Http\\Authenticator\\X509Authenticator;",
          "26: use Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent;",
          "27: use Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener;",
          "28: use Symfony\\Component\\Security\\Http\\EventListener\\LoginThrottlingListener;",
          "29: use Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener;",
          "31: use Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener;",
          "32: use Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener;",
          "33: use Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener;",
          "",
          "[Removed Lines]",
          "23: use Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator;",
          "30: use Symfony\\Component\\Security\\Http\\EventListener\\RememberMeListener;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:                 service('security.authentication.session_strategy'),",
          "108:             ])",
          "118:         ->set('security.listener.login_throttling', LoginThrottlingListener::class)",
          "119:             ->abstract()",
          "120:             ->args([",
          "",
          "[Removed Lines]",
          "110:         ->set('security.listener.remember_me', RememberMeListener::class)",
          "111:             ->abstract()",
          "112:             ->args([",
          "113:                 abstract_arg('remember me services'),",
          "114:                 service('logger')->nullOnInvalid(),",
          "115:             ])",
          "116:             ->tag('monolog.logger', ['channel' => 'security'])",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "154:             ])",
          "155:             ->call('setTranslator', [service('translator')->ignoreOnInvalid()])",
          "167:         ->set('security.authenticator.x509', X509Authenticator::class)",
          "168:             ->abstract()",
          "169:             ->args([",
          "",
          "[Removed Lines]",
          "157:         ->set('security.authenticator.remember_me', RememberMeAuthenticator::class)",
          "158:             ->abstract()",
          "159:             ->args([",
          "160:                 abstract_arg('remember me services'),",
          "161:                 param('kernel.secret'),",
          "162:                 service('security.token_storage'),",
          "163:                 abstract_arg('options'),",
          "164:                 service('security.authentication.session_strategy'),",
          "165:             ])",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\DependencyInjection\\Loader\\Configurator;",
          "14: use Symfony\\Bundle\\SecurityBundle\\LoginLink\\FirewallAwareLoginLinkHandler;",
          "15: use Symfony\\Component\\Security\\Http\\Authenticator\\LoginLinkAuthenticator;",
          "17: use Symfony\\Component\\Security\\Http\\LoginLink\\LoginLinkHandler;",
          "18: use Symfony\\Component\\Security\\Http\\LoginLink\\LoginLinkHandlerInterface;",
          "",
          "[Removed Lines]",
          "16: use Symfony\\Component\\Security\\Http\\LoginLink\\ExpiredLoginLinkStorage;",
          "",
          "[Added Lines]",
          "15: use Symfony\\Component\\Security\\Core\\Signature\\ExpiredSignatureStorage;",
          "16: use Symfony\\Component\\Security\\Core\\Signature\\SignatureHasher;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:             ->args([",
          "35:                 service('router'),",
          "36:                 abstract_arg('user provider'),",
          "37:                 service('property_accessor'),",
          "38:                 abstract_arg('signature properties'),",
          "39:                 '%kernel.secret%',",
          "42:             ])",
          "45:             ->abstract()",
          "46:             ->args([",
          "47:                 abstract_arg('cache pool service'),",
          "",
          "[Removed Lines]",
          "40:                 abstract_arg('options'),",
          "41:                 abstract_arg('expired login link storage'),",
          "44:         ->set('security.authenticator.expired_login_link_storage', ExpiredLoginLinkStorage::class)",
          "",
          "[Added Lines]",
          "38:                 abstract_arg('signature hasher'),",
          "39:                 abstract_arg('options'),",
          "40:             ])",
          "42:         ->set('security.authenticator.abstract_login_link_signature_hasher', SignatureHasher::class)",
          "43:             ->args([",
          "47:                 abstract_arg('expired signature storage'),",
          "48:                 abstract_arg('max signature uses'),",
          "51:         ->set('security.authenticator.expired_login_link_storage', ExpiredSignatureStorage::class)",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_remember_me.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_remember_me.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_remember_me.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_remember_me.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\DependencyInjection\\Loader\\Configurator;",
          "14: use Symfony\\Bundle\\SecurityBundle\\RememberMe\\FirewallAwareRememberMeHandler;",
          "15: use Symfony\\Component\\Security\\Core\\Signature\\SignatureHasher;",
          "16: use Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator;",
          "17: use Symfony\\Component\\Security\\Http\\EventListener\\CheckRememberMeConditionsListener;",
          "18: use Symfony\\Component\\Security\\Http\\EventListener\\RememberMeListener;",
          "19: use Symfony\\Component\\Security\\Http\\RememberMe\\PersistentRememberMeHandler;",
          "20: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "21: use Symfony\\Component\\Security\\Http\\RememberMe\\SignatureRememberMeHandler;",
          "23: return static function (ContainerConfigurator $container) {",
          "24:     $container->services()",
          "25:         ->set('security.authenticator.remember_me_signature_hasher', SignatureHasher::class)",
          "26:             ->args([",
          "27:                 service('property_accessor'),",
          "28:                 abstract_arg('signature properties'),",
          "29:                 '%kernel.secret%',",
          "30:                 null,",
          "31:                 null,",
          "32:             ])",
          "34:         ->set('security.authenticator.signature_remember_me_handler', SignatureRememberMeHandler::class)",
          "35:             ->abstract()",
          "36:             ->args([",
          "37:                 abstract_arg('signature hasher'),",
          "38:                 abstract_arg('user provider'),",
          "39:                 service('request_stack'),",
          "40:                 abstract_arg('options'),",
          "41:                 service('logger')->nullOnInvalid(),",
          "42:             ])",
          "43:             ->tag('monolog.logger', ['channel' => 'security'])",
          "45:         ->set('security.authenticator.persistent_remember_me_handler', PersistentRememberMeHandler::class)",
          "46:             ->abstract()",
          "47:             ->args([",
          "48:                 abstract_arg('token provider'),",
          "49:                 param('kernel.secret'),",
          "50:                 abstract_arg('user provider'),",
          "51:                 service('request_stack'),",
          "52:                 abstract_arg('options'),",
          "53:                 service('logger')->nullOnInvalid(),",
          "54:             ])",
          "55:             ->tag('monolog.logger', ['channel' => 'security'])",
          "57:         ->set('security.authenticator.firewall_aware_remember_me_handler', FirewallAwareRememberMeHandler::class)",
          "58:             ->args([",
          "59:                 service('security.firewall.map'),",
          "60:                 tagged_locator('security.remember_me_handler', 'firewall'),",
          "61:                 service('request_stack'),",
          "62:             ])",
          "63:         ->alias(RememberMeHandlerInterface::class, 'security.authenticator.firewall_aware_remember_me_handler')",
          "65:         ->set('security.listener.check_remember_me_conditions', CheckRememberMeConditionsListener::class)",
          "66:             ->abstract()",
          "67:             ->args([",
          "68:                 abstract_arg('options'),",
          "69:                 service('logger')->nullOnInvalid(),",
          "70:             ])",
          "72:         ->set('security.listener.remember_me', RememberMeListener::class)",
          "73:             ->abstract()",
          "74:             ->args([",
          "75:                 abstract_arg('remember me handler'),",
          "76:                 service('logger')->nullOnInvalid(),",
          "77:             ])",
          "78:             ->tag('monolog.logger', ['channel' => 'security'])",
          "80:         ->set('security.authenticator.remember_me', RememberMeAuthenticator::class)",
          "81:             ->abstract()",
          "82:             ->args([",
          "83:                 abstract_arg('remember me handler'),",
          "84:                 param('kernel.secret'),",
          "85:                 service('security.token_storage'),",
          "86:                 abstract_arg('options'),",
          "87:                 service('logger')->nullOnInvalid(),",
          "88:             ])",
          "89:             ->tag('monolog.logger', ['channel' => 'security'])",
          "90:     ;",
          "91: };",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Security/FirewallAwareTrait.php||src/Symfony/Bundle/SecurityBundle/Security/FirewallAwareTrait.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Security/FirewallAwareTrait.php -> src/Symfony/Bundle/SecurityBundle/Security/FirewallAwareTrait.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Security;",
          "22: trait FirewallAwareTrait",
          "23: {",
          "24:     private $locator;",
          "25:     private $requestStack;",
          "26:     private $firewallMap;",
          "28:     private function getForFirewall(): object",
          "29:     {",
          "30:         $serviceIdentifier = str_replace('FirewallAware', '', static::class);",
          "31:         if (null === $request = $this->requestStack->getCurrentRequest()) {",
          "32:             throw new \\LogicException('Cannot determine the correct '.$serviceIdentifier.' to use: there is no active Request and so, the firewall cannot be determined. Try using a specific '.$serviceIdentifier().' service.');",
          "33:         }",
          "35:         $firewall = $this->firewallMap->getFirewallConfig($request);",
          "36:         if (!$firewall) {",
          "37:             throw new \\LogicException('No '.$serviceIdentifier.' found as the current route is not covered by a firewall.');",
          "38:         }",
          "40:         $firewallName = $firewall->getName();",
          "41:         if (!$this->locator->has($firewallName)) {",
          "42:             $message = 'No '.$serviceIdentifier.' found for this firewall.';",
          "43:             if (\\defined(static::class.'::FIREWALL_OPTION')) {",
          "44:                 $message .= sprintf('Did you forget to add a \"'.static::FIREWALL_OPTION.'\" key under your \"%s\" firewall?', $firewallName);",
          "45:             }",
          "47:             throw new \\LogicException($message);",
          "48:         }",
          "50:         return $this->locator->get($firewallName);",
          "51:     }",
          "52: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Security/UserAuthenticator.php||src/Symfony/Bundle/SecurityBundle/Security/UserAuthenticator.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Security/UserAuthenticator.php -> src/Symfony/Bundle/SecurityBundle/Security/UserAuthenticator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: use Symfony\\Component\\HttpFoundation\\Request;",
          "16: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "17: use Symfony\\Component\\HttpFoundation\\Response;",
          "19: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "20: use Symfony\\Component\\Security\\Http\\Authentication\\UserAuthenticatorInterface;",
          "21: use Symfony\\Component\\Security\\Http\\Authenticator\\AuthenticatorInterface;",
          "",
          "[Removed Lines]",
          "18: use Symfony\\Component\\Security\\Core\\Exception\\LogicException;",
          "22: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\BadgeInterface;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: class UserAuthenticator implements UserAuthenticatorInterface",
          "34: {",
          "39:     public function __construct(FirewallMap $firewallMap, ContainerInterface $userAuthenticators, RequestStack $requestStack)",
          "40:     {",
          "41:         $this->firewallMap = $firewallMap;",
          "43:         $this->requestStack = $requestStack;",
          "44:     }",
          "",
          "[Removed Lines]",
          "35:     private $firewallMap;",
          "36:     private $userAuthenticators;",
          "37:     private $requestStack;",
          "42:         $this->userAuthenticators = $userAuthenticators;",
          "",
          "[Added Lines]",
          "33:     use FirewallAwareTrait;",
          "38:         $this->locator = $userAuthenticators;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:     public function authenticateUser(UserInterface $user, AuthenticatorInterface $authenticator, Request $request, array $badges = []): ?Response",
          "50:     {",
          "62:     }",
          "63: }",
          "",
          "[Removed Lines]",
          "51:         return $this->getUserAuthenticator()->authenticateUser($user, $authenticator, $request, $badges);",
          "52:     }",
          "54:     private function getUserAuthenticator(): UserAuthenticatorInterface",
          "55:     {",
          "56:         $firewallConfig = $this->firewallMap->getFirewallConfig($this->requestStack->getMainRequest());",
          "57:         if (null === $firewallConfig) {",
          "58:             throw new LogicException('Cannot call authenticate on this request, as it is not behind a firewall.');",
          "59:         }",
          "61:         return $this->userAuthenticators->get($firewallConfig->getName());",
          "",
          "[Added Lines]",
          "47:         return $this->getForFirewall()->authenticateUser($user, $authenticator, $request, $badges);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/SecurityBundle.php||src/Symfony/Bundle/SecurityBundle/SecurityBundle.php": [
          "File: src/Symfony/Bundle/SecurityBundle/SecurityBundle.php -> src/Symfony/Bundle/SecurityBundle/SecurityBundle.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Compiler\\RegisterGlobalSecurityEventListenersPass;",
          "20: use Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Compiler\\RegisterLdapLocatorPass;",
          "21: use Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Compiler\\RegisterTokenUsageTrackingPass;",
          "22: use Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Compiler\\SortFirewallListenersPass;",
          "23: use Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Security\\Factory\\AnonymousFactory;",
          "24: use Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Security\\Factory\\CustomAuthenticatorFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Compiler\\ReplaceDecoratedRememberMeHandlerPass;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:         $container->addCompilerPass(new RegisterGlobalSecurityEventListenersPass(), PassConfig::TYPE_BEFORE_REMOVING, -200);",
          "85:         $container->addCompilerPass(new SortFirewallListenersPass(), PassConfig::TYPE_BEFORE_REMOVING);",
          "87:         $container->addCompilerPass(new AddEventAliasesPass(array_merge(",
          "88:             AuthenticationEvents::ALIASES,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:         $container->addCompilerPass(new ReplaceDecoratedRememberMeHandlerPass(), PassConfig::TYPE_OPTIMIZE);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:         $this->assertEquals(3600, (string) $expiredStorage->getArgument(1));",
          "53:         $linker = $container->getDefinition($linkerId = 'security.authenticator.login_link_handler.main');",
          "55:         $this->assertEquals([",
          "56:             'route_name' => 'login_check',",
          "57:             'lifetime' => 3600,",
          "62:         $authenticator = $container->getDefinition('security.authenticator.login_link.main');",
          "63:         $this->assertEquals($linkerId, (string) $authenticator->getArgument(0));",
          "",
          "[Removed Lines]",
          "54:         $this->assertEquals(['id', 'email'], $linker->getArgument(3));",
          "58:             'max_uses' => 1,",
          "59:         ], $linker->getArgument(5));",
          "60:         $this->assertEquals($expiredStorageId, (string) $linker->getArgument(6));",
          "",
          "[Added Lines]",
          "57:         ], $linker->getArgument(3));",
          "59:         $hasher = $container->getDefinition((string) $linker->getArgument(2));",
          "60:         $this->assertEquals(['id', 'email'], $hasher->getArgument(1));",
          "61:         $this->assertEquals($expiredStorageId, (string) $hasher->getArgument(3));",
          "62:         $this->assertEquals(1, $hasher->getArgument(4));",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "388:         $this->assertEquals($secure, $definition->getArgument(3)['secure']);",
          "389:     }",
          "391:     public function sessionConfigurationProvider()",
          "392:     {",
          "393:         return [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391:     public function testCustomRememberMeHandler()",
          "392:     {",
          "393:         $container = $this->getRawContainer();",
          "395:         $container->register('custom_remember_me', \\stdClass::class);",
          "396:         $container->loadFromExtension('security', [",
          "397:             'enable_authenticator_manager' => true,",
          "398:             'firewalls' => [",
          "399:                 'default' => [",
          "400:                     'remember_me' => ['secret' => 'very', 'service' => 'custom_remember_me'],",
          "401:                 ],",
          "402:             ],",
          "403:         ]);",
          "405:         $container->compile();",
          "407:         $handler = $container->getDefinition('security.authenticator.remember_me_handler.default');",
          "408:         $this->assertEquals(\\stdClass::class, $handler->getClass());",
          "409:         $this->assertEquals([['firewall' => 'default']], $handler->getTag('security.remember_me_handler'));",
          "410:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "661:         $security = new SecurityExtension();",
          "662:         $container->registerExtension($security);",
          "667:         $container->getCompilerPassConfig()->setOptimizationPasses([new ResolveChildDefinitionsPass()]);",
          "668:         $container->getCompilerPassConfig()->setRemovingPasses([]);",
          "669:         $container->getCompilerPassConfig()->setAfterRemovingPasses([]);",
          "671:         return $container;",
          "672:     }",
          "",
          "[Removed Lines]",
          "664:         $bundle = new SecurityBundle();",
          "665:         $bundle->build($container);",
          "",
          "[Added Lines]",
          "689:         $bundle = new SecurityBundle();",
          "690:         $bundle->build($container);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Controller/ProfileController.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Controller/ProfileController.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Controller/ProfileController.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Controller/ProfileController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle\\Controller;",
          "14: use Symfony\\Component\\HttpFoundation\\Response;",
          "15: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "17: class ProfileController",
          "18: {",
          "19:     public function __invoke(UserInterface $user)",
          "20:     {",
          "21:         return new Response($user->getUserIdentifier());",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/ClearRememberMe/bundles.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/RememberMeBundle.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/ClearRememberMe/bundles.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/RememberMeBundle.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "12: use Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle;",
          "13: use Symfony\\Bundle\\SecurityBundle\\SecurityBundle;",
          "15: return [",
          "16:     new FrameworkBundle(),",
          "17:     new SecurityBundle(),",
          "18: ];",
          "",
          "[Added Lines]",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle;",
          "14: use Symfony\\Component\\HttpKernel\\Bundle\\Bundle;",
          "16: class RememberMeBundle extends Bundle",
          "17: {",
          "18: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/StaticTokenProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/StaticTokenProvider.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/StaticTokenProvider.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/StaticTokenProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle\\Security;",
          "14: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\PersistentTokenInterface;",
          "15: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\TokenProviderInterface;",
          "16: use Symfony\\Component\\Security\\Core\\Exception\\TokenNotFoundException;",
          "18: class StaticTokenProvider implements TokenProviderInterface",
          "19: {",
          "20:     private static $db = [];",
          "21:     private static $kernelClass;",
          "23:     public function __construct($kernel)",
          "24:     {",
          "26:         if (self::$kernelClass !== \\get_class($kernel)) {",
          "27:             self::$kernelClass = \\get_class($kernel);",
          "28:             self::$db = [];",
          "29:         }",
          "30:     }",
          "32:     public function loadTokenBySeries(string $series)",
          "33:     {",
          "34:         $token = self::$db[$series] ?? false;",
          "35:         if (!$token) {",
          "36:             throw new TokenNotFoundException();",
          "37:         }",
          "39:         return $token;",
          "40:     }",
          "42:     public function deleteTokenBySeries(string $series)",
          "43:     {",
          "44:         unset(self::$db[$series]);",
          "45:     }",
          "47:     public function updateToken(string $series, string $tokenValue, \\DateTime $lastUsed)",
          "48:     {",
          "49:         $token = $this->loadTokenBySeries($series);",
          "50:         $refl = new \\ReflectionClass($token);",
          "51:         $tokenValueProp = $refl->getProperty('tokenValue');",
          "52:         $tokenValueProp->setAccessible(true);",
          "53:         $tokenValueProp->setValue($token, $tokenValue);",
          "55:         $lastUsedProp = $refl->getProperty('lastUsed');",
          "56:         $lastUsedProp->setAccessible(true);",
          "57:         $lastUsedProp->setValue($token, $lastUsed);",
          "59:         self::$db[$series] = $token;",
          "60:     }",
          "62:     public function createNewToken(PersistentTokenInterface $token)",
          "63:     {",
          "64:         self::$db[$token->getSeries()] = $token;",
          "65:     }",
          "66: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle\\Security;",
          "14: use Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider;",
          "15: use Symfony\\Component\\Security\\Core\\User\\User;",
          "16: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "17: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "19: class UserChangingUserProvider implements UserProviderInterface",
          "20: {",
          "21:     private $inner;",
          "23:     public function __construct(InMemoryUserProvider $inner)",
          "24:     {",
          "25:         $this->inner = $inner;",
          "26:     }",
          "28:     public function loadUserByUsername($username)",
          "29:     {",
          "30:         return $this->inner->loadUserByUsername($username);",
          "31:     }",
          "33:     public function loadUserByIdentifier(string $userIdentifier): UserInterface",
          "34:     {",
          "35:         return $this->inner->loadUserByIdentifier($userIdentifier);",
          "36:     }",
          "38:     public function refreshUser(UserInterface $user)",
          "39:     {",
          "40:         $user = $this->inner->refreshUser($user);",
          "42:         $alterUser = \\Closure::bind(function (User $user) { $user->password = 'foo'; }, null, User::class);",
          "43:         $alterUser($user);",
          "45:         return $user;",
          "46:     }",
          "48:     public function supportsClass($class)",
          "49:     {",
          "50:         return $this->inner->supportsClass($class);",
          "51:     }",
          "52: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/ClearRememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/ClearRememberMeTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/ClearRememberMeTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/ClearRememberMeTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: class LogoutTest extends AbstractWebTestCase",
          "22: {",
          "",
          "[Removed Lines]",
          "26:     public function testSessionLessRememberMeLogout(array $options)",
          "27:     {",
          "28:         $client = $this->createClient($options + ['test_case' => 'RememberMeLogout', 'root_config' => 'config.yml']);",
          "30:         $client->request('POST', '/login', [",
          "31:             '_username' => 'johannes',",
          "32:             '_password' => 'test',",
          "33:         ]);",
          "35:         $cookieJar = $client->getCookieJar();",
          "36:         $cookieJar->expire(session_name());",
          "38:         $this->assertNotNull($cookieJar->get('REMEMBERME'));",
          "39:         $this->assertSame('lax', $cookieJar->get('REMEMBERME')->getSameSite());",
          "41:         $client->request('GET', '/logout');",
          "43:         $this->assertNull($cookieJar->get('REMEMBERME'));",
          "44:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional;",
          "14: class RememberMeTest extends AbstractWebTestCase",
          "15: {",
          "16:     public function provideRememberMeSystems()",
          "17:     {",
          "18:         foreach ($this->provideSecuritySystems() as $securitySystem) {",
          "19:             yield [$securitySystem[0] + ['root_config' => 'config_session.yml']];",
          "20:             yield [$securitySystem[0] + ['root_config' => 'config_persistent.yml']];",
          "21:         }",
          "22:     }",
          "27:     public function testRememberMe(array $options)",
          "28:     {",
          "29:         $client = $this->createClient(array_merge_recursive(['root_config' => 'config.yml', 'test_case' => 'RememberMe'], $options));",
          "31:         $client->request('POST', '/login', [",
          "32:             '_username' => 'johannes',",
          "33:             '_password' => 'test',",
          "34:         ]);",
          "35:         $this->assertSame(302, $client->getResponse()->getStatusCode());",
          "37:         $client->request('GET', '/profile');",
          "38:         $this->assertSame('johannes', $client->getResponse()->getContent());",
          "41:         $client->getCookieJar()->expire('MOCKSESSID');",
          "43:         $client->request('GET', '/profile');",
          "44:         $this->assertSame('johannes', $client->getResponse()->getContent(), 'Not logged in after resetting session.');",
          "47:         $client->request('GET', '/logout');",
          "48:         $this->assertSame(302, $client->getResponse()->getStatusCode(), 'Logout unsuccessful.');",
          "49:         $this->assertNull($client->getCookieJar()->get('REMEMBERME'));",
          "50:     }",
          "55:     public function testUserChangeClearsCookie(array $options)",
          "56:     {",
          "57:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'clear_on_change_config.yml'] + $options);",
          "59:         $client->request('POST', '/login', [",
          "60:             '_username' => 'johannes',",
          "61:             '_password' => 'test',",
          "62:         ]);",
          "64:         $this->assertSame(302, $client->getResponse()->getStatusCode());",
          "65:         $cookieJar = $client->getCookieJar();",
          "66:         $this->assertNotNull($cookieJar->get('REMEMBERME'));",
          "68:         $client->request('GET', '/profile');",
          "69:         $this->assertRedirect($client->getResponse(), '/login');",
          "70:         $this->assertNull($cookieJar->get('REMEMBERME'));",
          "71:     }",
          "76:     public function testSessionLessRememberMeLogout(array $options)",
          "77:     {",
          "78:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'stateless_config.yml'] + $options);",
          "80:         $client->request('POST', '/login', [",
          "81:             '_username' => 'johannes',",
          "82:             '_password' => 'test',",
          "83:         ]);",
          "85:         $cookieJar = $client->getCookieJar();",
          "86:         $cookieJar->expire(session_name());",
          "88:         $this->assertNotNull($cookieJar->get('REMEMBERME'));",
          "89:         $this->assertSame('lax', $cookieJar->get('REMEMBERME')->getSameSite());",
          "91:         $client->request('GET', '/logout');",
          "92:         $this->assertSame(302, $client->getResponse()->getStatusCode(), 'Logout unsuccessful.');",
          "93:         $this->assertNull($cookieJar->get('REMEMBERME'));",
          "94:     }",
          "95: }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:         $this->testCase = $testCase;",
          "38:         $fs = new Filesystem();",
          "41:         }",
          "43:         $this->authenticatorManagerEnabled = $authenticatorManagerEnabled;",
          "45:         parent::__construct($environment, $debug);",
          "",
          "[Removed Lines]",
          "39:         if (!$fs->isAbsolutePath($rootConfig) && !is_file($rootConfig = __DIR__.'/'.$testCase.'/'.$rootConfig)) {",
          "40:             throw new \\InvalidArgumentException(sprintf('The root config \"%s\" does not exist.', $rootConfig));",
          "42:         $this->rootConfig = $rootConfig;",
          "",
          "[Added Lines]",
          "39:         foreach ((array) $rootConfig as $config) {",
          "40:             if (!$fs->isAbsolutePath($config) && !is_file($config = __DIR__.'/'.$testCase.'/'.$config)) {",
          "41:                 throw new \\InvalidArgumentException(sprintf('The root config \"%s\" does not exist.', $config));",
          "42:             }",
          "44:             $this->rootConfig[] = $config;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:     public function getContainerClass(): string",
          "52:     {",
          "54:     }",
          "56:     public function registerBundles(): iterable",
          "",
          "[Removed Lines]",
          "53:         return parent::getContainerClass().substr(md5($this->rootConfig.$this->authenticatorManagerEnabled), -16);",
          "",
          "[Added Lines]",
          "56:         return parent::getContainerClass().substr(md5(implode('', $this->rootConfig).$this->authenticatorManagerEnabled), -16);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:     public function registerContainerConfiguration(LoaderInterface $loader)",
          "81:     {",
          "84:         if ($this->authenticatorManagerEnabled) {",
          "85:             $loader->load(function ($container) {",
          "",
          "[Removed Lines]",
          "82:         $loader->load($this->rootConfig);",
          "",
          "[Added Lines]",
          "85:         foreach ($this->rootConfig as $config) {",
          "86:             $loader->load($config);",
          "87:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMeLogout/bundles.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/bundles.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMeLogout/bundles.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/bundles.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: use Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle;",
          "13: use Symfony\\Bundle\\SecurityBundle\\SecurityBundle;",
          "16: return [",
          "17:     new FrameworkBundle(),",
          "18:     new SecurityBundle(),",
          "20: ];",
          "",
          "[Removed Lines]",
          "14: use Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\TestBundle;",
          "19:     new TestBundle(),",
          "",
          "[Added Lines]",
          "14: use Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle\\RememberMeBundle;",
          "19:     new RememberMeBundle(),",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Signature/Exception/ExpiredSignatureException.php||src/Symfony/Component/Security/Core/Signature/Exception/ExpiredSignatureException.php": [
          "File: src/Symfony/Component/Security/Core/Signature/Exception/ExpiredSignatureException.php -> src/Symfony/Component/Security/Core/Signature/Exception/ExpiredSignatureException.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Core\\Signature\\Exception;",
          "14: use Symfony\\Component\\Security\\Core\\Exception\\RuntimeException;",
          "19: class ExpiredSignatureException extends RuntimeException",
          "20: {",
          "21: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Signature/Exception/InvalidSignatureException.php||src/Symfony/Component/Security/Core/Signature/Exception/InvalidSignatureException.php": [
          "File: src/Symfony/Component/Security/Core/Signature/Exception/InvalidSignatureException.php -> src/Symfony/Component/Security/Core/Signature/Exception/InvalidSignatureException.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Core\\Signature\\Exception;",
          "14: use Symfony\\Component\\Security\\Core\\Exception\\RuntimeException;",
          "19: class InvalidSignatureException extends RuntimeException",
          "20: {",
          "21: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/LoginLink/ExpiredLoginLinkStorage.php||src/Symfony/Component/Security/Core/Signature/ExpiredSignatureStorage.php": [
          "File: src/Symfony/Component/Security/Http/LoginLink/ExpiredLoginLinkStorage.php -> src/Symfony/Component/Security/Core/Signature/ExpiredSignatureStorage.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Psr\\Cache\\CacheItemPoolInterface;",
          "22: {",
          "23:     private $cache;",
          "24:     private $lifetime;",
          "",
          "[Removed Lines]",
          "12: namespace Symfony\\Component\\Security\\Http\\LoginLink;",
          "21: class ExpiredLoginLinkStorage",
          "",
          "[Added Lines]",
          "12: namespace Symfony\\Component\\Security\\Core\\Signature;",
          "23: final class ExpiredSignatureStorage",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Signature/SignatureHasher.php||src/Symfony/Component/Security/Core/Signature/SignatureHasher.php": [
          "File: src/Symfony/Component/Security/Core/Signature/SignatureHasher.php -> src/Symfony/Component/Security/Core/Signature/SignatureHasher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Core\\Signature;",
          "14: use Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface;",
          "15: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "16: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\ExpiredSignatureException;",
          "17: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\InvalidSignatureException;",
          "18: use Symfony\\Component\\Security\\Core\\Signature\\ExpiredSignatureStorage;",
          "26: class SignatureHasher",
          "27: {",
          "28:     private $propertyAccessor;",
          "29:     private $signatureProperties;",
          "30:     private $secret;",
          "31:     private $expiredSignaturesStorage;",
          "32:     private $maxUses;",
          "39:     public function __construct(PropertyAccessorInterface $propertyAccessor, array $signatureProperties, string $secret, ?ExpiredSignatureStorage $expiredSignaturesStorage = null, ?int $maxUses = null)",
          "40:     {",
          "41:         $this->propertyAccessor = $propertyAccessor;",
          "42:         $this->signatureProperties = $signatureProperties;",
          "43:         $this->secret = $secret;",
          "44:         $this->expiredSignaturesStorage = $expiredSignaturesStorage;",
          "45:         $this->maxUses = $maxUses;",
          "46:     }",
          "57:     public function verifySignatureHash(UserInterface $user, int $expires, string $hash): void",
          "58:     {",
          "59:         if (!hash_equals($hash, $this->computeSignatureHash($user, $expires))) {",
          "60:             throw new InvalidSignatureException('Invalid or expired signature.');",
          "61:         }",
          "63:         if ($expires < time()) {",
          "64:             throw new ExpiredSignatureException('Signature has expired.');",
          "65:         }",
          "67:         if ($this->expiredSignaturesStorage && $this->maxUses) {",
          "68:             if ($this->expiredSignaturesStorage->countUsages($hash) >= $this->maxUses) {",
          "69:                 throw new ExpiredSignatureException(sprintf('Signature can only be used \"%d\" times.', $this->maxUses));",
          "70:             }",
          "72:             $this->expiredSignaturesStorage->incrementUsages($hash);",
          "73:         }",
          "74:     }",
          "81:     public function computeSignatureHash(UserInterface $user, int $expires): string",
          "82:     {",
          "83:         $signatureFields = [base64_encode(method_exists($user, 'getUserIdentifier') ? $user->getUserIdentifier() : $user->getUsername()), $expires];",
          "85:         foreach ($this->signatureProperties as $property) {",
          "86:             $value = $this->propertyAccessor->getValue($user, $property) ?? '';",
          "87:             if ($value instanceof \\DateTimeInterface) {",
          "88:                 $value = $value->format('c');",
          "89:             }",
          "91:             if (!is_scalar($value) && !(\\is_object($value) && method_exists($value, '__toString'))) {",
          "92:                 throw new \\InvalidArgumentException(sprintf('The property path \"%s\" on the user object \"%s\" must return a value that can be cast to a string, but \"%s\" was returned.', $property, \\get_class($user), get_debug_type($value)));",
          "93:             }",
          "94:             $signatureFields[] = base64_encode($value);",
          "95:         }",
          "97:         return base64_encode(hash_hmac('sha256', implode(':', $signatureFields), $this->secret));",
          "98:     }",
          "99: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/LoginLink/ExpiredLoginLinkStorageTest.php||src/Symfony/Component/Security/Core/Tests/Signature/ExpiredSignatureStorageTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/LoginLink/ExpiredLoginLinkStorageTest.php -> src/Symfony/Component/Security/Core/Tests/Signature/ExpiredSignatureStorageTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use PHPUnit\\Framework\\TestCase;",
          "15: use Symfony\\Component\\Cache\\Adapter\\ArrayAdapter;",
          "19: {",
          "20:     public function testUsage()",
          "21:     {",
          "22:         $cache = new ArrayAdapter();",
          "25:         $this->assertSame(0, $storage->countUsages('hash+more'));",
          "26:         $storage->incrementUsages('hash+more');",
          "",
          "[Removed Lines]",
          "12: namespace Symfony\\Component\\Security\\Http\\Tests\\LoginLink;",
          "16: use Symfony\\Component\\Security\\Http\\LoginLink\\ExpiredLoginLinkStorage;",
          "18: class ExpiredLoginLinkStorageTest extends TestCase",
          "23:         $storage = new ExpiredLoginLinkStorage($cache, 600);",
          "",
          "[Added Lines]",
          "12: namespace Symfony\\Component\\Security\\Core\\Tests\\Signature;",
          "16: use Symfony\\Component\\Security\\Core\\Signature\\ExpiredSignatureStorage;",
          "18: class ExpiredSignatureStorageTest extends TestCase",
          "23:         $storage = new ExpiredSignatureStorage($cache, 600);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Authenticator/Passport/Badge/RememberMeBadge.php||src/Symfony/Component/Security/Http/Authenticator/Passport/Badge/RememberMeBadge.php": [
          "File: src/Symfony/Component/Security/Http/Authenticator/Passport/Badge/RememberMeBadge.php -> src/Symfony/Component/Security/Http/Authenticator/Passport/Badge/RememberMeBadge.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: class RememberMeBadge implements BadgeInterface",
          "32: {",
          "33:     public function isResolved(): bool",
          "34:     {",
          "35:         return true; // remember me does not need to be explicitly resolved",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     private $enabled = false;",
          "39:     public function enable(): self",
          "40:     {",
          "41:         $this->enabled = true;",
          "43:         return $this;",
          "44:     }",
          "52:     public function disable(): void",
          "53:     {",
          "54:         $this->enabled = false;",
          "55:     }",
          "57:     public function isEnabled(): bool",
          "58:     {",
          "59:         return $this->enabled;",
          "60:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Authenticator/RememberMeAuthenticator.php||src/Symfony/Component/Security/Http/Authenticator/RememberMeAuthenticator.php": [
          "File: src/Symfony/Component/Security/Http/Authenticator/RememberMeAuthenticator.php -> src/Symfony/Component/Security/Http/Authenticator/RememberMeAuthenticator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Security\\Http\\Authenticator;",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "15: use Symfony\\Component\\HttpFoundation\\Response;",
          "16: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken;",
          "17: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface;",
          "18: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "19: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "20: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\UserBadge;",
          "21: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\PassportInterface;",
          "22: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\SelfValidatingPassport;",
          "",
          "[Removed Lines]",
          "23: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeServicesInterface;",
          "",
          "[Added Lines]",
          "14: use Psr\\Log\\LoggerInterface;",
          "21: use Symfony\\Component\\Security\\Core\\Exception\\CookieTheftException;",
          "22: use Symfony\\Component\\Security\\Core\\Exception\\UnsupportedUserException;",
          "23: use Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException;",
          "27: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeDetails;",
          "28: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "29: use Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: class RememberMeAuthenticator implements InteractiveAuthenticatorInterface",
          "39: {",
          "41:     private $secret;",
          "42:     private $tokenStorage;",
          "46:     {",
          "48:         $this->secret = $secret;",
          "49:         $this->tokenStorage = $tokenStorage;",
          "51:     }",
          "53:     public function supports(Request $request): ?bool",
          "",
          "[Removed Lines]",
          "40:     private $rememberMeServices;",
          "43:     private $options = [];",
          "45:     public function __construct(RememberMeServicesInterface $rememberMeServices, string $secret, TokenStorageInterface $tokenStorage, array $options)",
          "47:         $this->rememberMeServices = $rememberMeServices;",
          "50:         $this->options = $options;",
          "",
          "[Added Lines]",
          "46:     private $rememberMeHandler;",
          "49:     private $cookieName;",
          "50:     private $logger;",
          "52:     public function __construct(RememberMeHandlerInterface $rememberMeHandler, string $secret, TokenStorageInterface $tokenStorage, string $cookieName, LoggerInterface $logger = null)",
          "54:         $this->rememberMeHandler = $rememberMeHandler;",
          "57:         $this->cookieName = $cookieName;",
          "58:         $this->logger = $logger;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57:             return false;",
          "58:         }",
          "65:         }",
          "69:             return false;",
          "70:         }",
          "75:         return null;",
          "",
          "[Removed Lines]",
          "63:         if ($request->attributes->has('_remember_me_token')) {",
          "64:             return null;",
          "67:         $token = $this->rememberMeServices->autoLogin($request);",
          "68:         if (null === $token) {",
          "72:         $request->attributes->set('_remember_me_token', $token);",
          "",
          "[Added Lines]",
          "68:         if (($cookie = $request->attributes->get(ResponseListener::COOKIE_ATTR_NAME)) && null === $cookie->getValue()) {",
          "69:             return false;",
          "72:         if (!$request->cookies->has($this->cookieName)) {",
          "76:         if (null !== $this->logger) {",
          "77:             $this->logger->debug('Remember-me cookie detected.');",
          "78:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "78:     public function authenticate(Request $request): PassportInterface",
          "79:     {",
          "83:         }",
          "87:     }",
          "89:     public function createAuthenticatedToken(PassportInterface $passport, string $firewallName): TokenInterface",
          "",
          "[Removed Lines]",
          "80:         $token = $request->attributes->get('_remember_me_token');",
          "81:         if (null === $token) {",
          "82:             throw new \\LogicException('No remember me token is set.');",
          "86:         return new SelfValidatingPassport(new UserBadge(method_exists($token, 'getUserIdentifier') ? $token->getUserIdentifier() : $token->getUsername(), [$token, 'getUser']));",
          "",
          "[Added Lines]",
          "86:         $rawCookie = $request->cookies->get($this->cookieName);",
          "87:         if (!$rawCookie) {",
          "88:             throw new \\LogicException('No remember-me cookie is found.');",
          "91:         $rememberMeCookie = RememberMeDetails::fromRawCookie($rawCookie);",
          "93:         return new SelfValidatingPassport(new UserBadge($rememberMeCookie->getUserIdentifier(), function () use ($rememberMeCookie) {",
          "94:             return $this->rememberMeHandler->consumeRememberMeCookie($rememberMeCookie);",
          "95:         }));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "99:     public function onAuthenticationFailure(Request $request, AuthenticationException $exception): ?Response",
          "100:     {",
          "103:         return null;",
          "104:     }",
          "",
          "[Removed Lines]",
          "101:         $this->rememberMeServices->loginFail($request, $exception);",
          "",
          "[Added Lines]",
          "110:         if (null !== $this->logger) {",
          "111:             if ($exception instanceof UsernameNotFoundException) {",
          "112:                 $this->logger->info('User for remember-me cookie not found.', ['exception' => $exception]);",
          "113:             } elseif ($exception instanceof UnsupportedUserException) {",
          "114:                 $this->logger->warning('User class for remember-me cookie not supported.', ['exception' => $exception]);",
          "115:             } elseif (!$exception instanceof CookieTheftException) {",
          "116:                 $this->logger->debug('Remember me authentication failed.', ['exception' => $exception]);",
          "117:             }",
          "118:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Event/DeauthenticatedEvent.php||src/Symfony/Component/Security/Http/Event/DeauthenticatedEvent.php": [
          "File: src/Symfony/Component/Security/Http/Event/DeauthenticatedEvent.php -> src/Symfony/Component/Security/Http/Event/DeauthenticatedEvent.php"
        ],
        "src/Symfony/Component/Security/Http/Event/TokenDeauthenticatedEvent.php||src/Symfony/Component/Security/Http/Event/TokenDeauthenticatedEvent.php": [
          "File: src/Symfony/Component/Security/Http/Event/TokenDeauthenticatedEvent.php -> src/Symfony/Component/Security/Http/Event/TokenDeauthenticatedEvent.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\Event;",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "15: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "16: use Symfony\\Contracts\\EventDispatcher\\Event;",
          "31: final class TokenDeauthenticatedEvent extends Event",
          "32: {",
          "33:     private $originalToken;",
          "34:     private $request;",
          "36:     public function __construct(TokenInterface $originalToken, Request $request)",
          "37:     {",
          "38:         $this->originalToken = $originalToken;",
          "39:         $this->request = $request;",
          "40:     }",
          "42:     public function getOriginalToken(): TokenInterface",
          "43:     {",
          "44:         return $this->originalToken;",
          "45:     }",
          "47:     public function getRequest(): Request",
          "48:     {",
          "49:         return $this->request;",
          "50:     }",
          "51: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/EventListener/CheckRememberMeConditionsListener.php||src/Symfony/Component/Security/Http/EventListener/CheckRememberMeConditionsListener.php": [
          "File: src/Symfony/Component/Security/Http/EventListener/CheckRememberMeConditionsListener.php -> src/Symfony/Component/Security/Http/EventListener/CheckRememberMeConditionsListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\EventListener;",
          "14: use Psr\\Log\\LoggerInterface;",
          "15: use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;",
          "16: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\RememberMeBadge;",
          "17: use Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent;",
          "18: use Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent;",
          "19: use Symfony\\Component\\Security\\Http\\Event\\LogoutEvent;",
          "20: use Symfony\\Component\\Security\\Http\\Event\\TokenDeauthenticatedEvent;",
          "21: use Symfony\\Component\\Security\\Http\\ParameterBagUtils;",
          "22: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "41: class CheckRememberMeConditionsListener implements EventSubscriberInterface",
          "42: {",
          "43:     private $options;",
          "44:     private $logger;",
          "46:     public function __construct(array $options = [], ?LoggerInterface $logger = null)",
          "47:     {",
          "48:         $this->options = $options + ['always_remember_me' => false, 'remember_me_parameter' => '_remember_me'];",
          "49:         $this->logger = $logger;",
          "50:     }",
          "52:     public function onSuccessfulLogin(LoginSuccessEvent $event): void",
          "53:     {",
          "54:         $passport = $event->getPassport();",
          "55:         if (!$passport->hasBadge(RememberMeBadge::class)) {",
          "56:             return;",
          "57:         }",
          "60:         $badge = $passport->getBadge(RememberMeBadge::class);",
          "61:         if (!$this->options['always_remember_me']) {",
          "62:             $parameter = ParameterBagUtils::getRequestParameterValue($event->getRequest(), $this->options['remember_me_parameter']);",
          "63:             if (!('true' === $parameter || 'on' === $parameter || '1' === $parameter || 'yes' === $parameter || true === $parameter)) {",
          "64:                 if (null !== $this->logger) {",
          "65:                     $this->logger->debug('Remember me disabled; request does not contain remember me parameter (\"{parameter}\").', ['parameter' => $this->options['remember_me_parameter']]);",
          "66:                 }",
          "68:                 return;",
          "69:             }",
          "70:         }",
          "72:         $badge->enable();",
          "73:     }",
          "75:     public static function getSubscribedEvents(): array",
          "76:     {",
          "77:         return [LoginSuccessEvent::class => ['onSuccessfulLogin', -32]];",
          "78:     }",
          "79: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/EventListener/RememberMeListener.php||src/Symfony/Component/Security/Http/EventListener/RememberMeListener.php": [
          "File: src/Symfony/Component/Security/Http/EventListener/RememberMeListener.php -> src/Symfony/Component/Security/Http/EventListener/RememberMeListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\RememberMeBadge;",
          "17: use Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent;",
          "18: use Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent;",
          "",
          "[Removed Lines]",
          "19: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeServicesInterface;",
          "",
          "[Added Lines]",
          "19: use Symfony\\Component\\Security\\Http\\Event\\LogoutEvent;",
          "20: use Symfony\\Component\\Security\\Http\\Event\\TokenDeauthenticatedEvent;",
          "21: use Symfony\\Component\\Security\\Http\\ParameterBagUtils;",
          "22: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: class RememberMeListener implements EventSubscriberInterface",
          "35: {",
          "37:     private $logger;",
          "40:     {",
          "42:         $this->logger = $logger;",
          "43:     }",
          "",
          "[Removed Lines]",
          "36:     private $rememberMeServices;",
          "39:     public function __construct(RememberMeServicesInterface $rememberMeServices, ?LoggerInterface $logger = null)",
          "41:         $this->rememberMeServices = $rememberMeServices;",
          "",
          "[Added Lines]",
          "39:     private $rememberMeHandler;",
          "42:     public function __construct(RememberMeHandlerInterface $rememberMeHandler, ?LoggerInterface $logger = null)",
          "44:         $this->rememberMeHandler = $rememberMeHandler;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:             return;",
          "54:         }",
          "57:             if (null !== $this->logger) {",
          "59:             }",
          "61:             return;",
          "62:         }",
          "65:     }",
          "68:     {",
          "70:     }",
          "72:     public static function getSubscribedEvents(): array",
          "73:     {",
          "74:         return [",
          "77:         ];",
          "78:     }",
          "79: }",
          "",
          "[Removed Lines]",
          "56:         if (null === $event->getResponse()) {",
          "58:                 $this->logger->debug('Remember me skipped: the authenticator did not set a success response.', ['authenticator' => \\get_class($event->getAuthenticator())]);",
          "64:         $this->rememberMeServices->loginSuccess($event->getRequest(), $event->getResponse(), $event->getAuthenticatedToken());",
          "67:     public function onFailedLogin(LoginFailureEvent $event): void",
          "69:         $this->rememberMeServices->loginFail($event->getRequest(), $event->getException());",
          "75:             LoginSuccessEvent::class => 'onSuccessfulLogin',",
          "76:             LoginFailureEvent::class => 'onFailedLogin',",
          "",
          "[Added Lines]",
          "60:         $this->rememberMeHandler->clearRememberMeCookie();",
          "63:         $badge = $passport->getBadge(RememberMeBadge::class);",
          "64:         if (!$badge->isEnabled()) {",
          "66:                 $this->logger->debug('Remember me skipped: the RememberMeBadge is not enabled.');",
          "72:         if (null !== $this->logger) {",
          "73:             $this->logger->debug('Remember-me was requested; setting cookie.');",
          "74:         }",
          "76:         $this->rememberMeHandler->createRememberMeCookie($event->getUser());",
          "79:     public function clearCookie(): void",
          "81:         $this->rememberMeHandler->clearRememberMeCookie();",
          "87:             LoginSuccessEvent::class => ['onSuccessfulLogin', -64],",
          "88:             LoginFailureEvent::class => 'clearCookie',",
          "89:             LogoutEvent::class => 'clearCookie',",
          "90:             TokenDeauthenticatedEvent::class => 'clearCookie',",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/ContextListener.php||src/Symfony/Component/Security/Http/Firewall/ContextListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/ContextListener.php -> src/Symfony/Component/Security/Http/Firewall/ContextListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "32: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "33: use Symfony\\Component\\Security\\Http\\Event\\DeauthenticatedEvent;",
          "34: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeServicesInterface;",
          "35: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: use Symfony\\Component\\Security\\Http\\Event\\TokenDeauthenticatedEvent;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         $request = $event->getRequest();",
          "95:         $session = $request->hasPreviousSession() && $request->hasSession() ? $request->getSession() : null;",
          "97:         if (null !== $session) {",
          "98:             $usageIndexValue = $session instanceof Session ? $usageIndexReference = &$session->getUsageIndex() : 0;",
          "99:             $usageIndexReference = \\PHP_INT_MIN;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:         $request->attributes->set('_security_firewall_run', true);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:         }",
          "130:         if ($token instanceof TokenInterface) {",
          "131:             $token = $this->refreshUser($token);",
          "135:             }",
          "136:         } elseif (null !== $token) {",
          "137:             if (null !== $this->logger) {",
          "",
          "[Removed Lines]",
          "133:             if (!$token && $this->rememberMeServices) {",
          "134:                 $this->rememberMeServices->loginFail($request);",
          "",
          "[Added Lines]",
          "134:             $originalToken = $token;",
          "137:             if (!$token) {",
          "138:                 if ($this->dispatcher) {",
          "139:                     $this->dispatcher->dispatch(new TokenDeauthenticatedEvent($originalToken, $request));",
          "140:                 }",
          "142:                 if ($this->rememberMeServices) {",
          "143:                     $this->rememberMeServices->loginFail($request);",
          "144:                 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "160:         $request = $event->getRequest();",
          "163:             return;",
          "164:         }",
          "167:         $this->registered = false;",
          "168:         $session = $request->getSession();",
          "169:         $sessionId = $session->getId();",
          "",
          "[Removed Lines]",
          "162:         if (!$request->hasSession()) {",
          "166:         $this->dispatcher->removeListener(KernelEvents::RESPONSE, [$this, 'onKernelResponse']);",
          "",
          "[Added Lines]",
          "172:         if (!$request->hasSession() || !$request->attributes->get('_security_firewall_run', false)) {",
          "176:         if ($this->dispatcher) {",
          "177:             $this->dispatcher->removeListener(KernelEvents::RESPONSE, [$this, 'onKernelResponse']);",
          "178:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "260:                 $this->logger->debug('Token was deauthenticated after trying to refresh it.');",
          "261:             }",
          "264:                 $this->dispatcher->dispatch(new DeauthenticatedEvent($token, $newToken), DeauthenticatedEvent::class);",
          "265:             }",
          "",
          "[Removed Lines]",
          "263:             if (null !== $this->dispatcher) {",
          "",
          "[Added Lines]",
          "275:             if ($this->dispatcher) {",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/LoginLink/Exception/ExpiredLoginLinkException.php||src/Symfony/Component/Security/Http/LoginLink/Exception/ExpiredLoginLinkException.php": [
          "File: src/Symfony/Component/Security/Http/LoginLink/Exception/ExpiredLoginLinkException.php -> src/Symfony/Component/Security/Http/LoginLink/Exception/ExpiredLoginLinkException.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Security\\Http\\LoginLink\\Exception;",
          "19: {",
          "20: }",
          "",
          "[Removed Lines]",
          "18: class ExpiredLoginLinkException extends \\Exception implements InvalidLoginLinkExceptionInterface",
          "",
          "[Added Lines]",
          "14: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\ExpiredSignatureException;",
          "20: class ExpiredLoginLinkException extends ExpiredSignatureException implements InvalidLoginLinkExceptionInterface",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/LoginLink/Exception/InvalidLoginLinkException.php||src/Symfony/Component/Security/Http/LoginLink/Exception/InvalidLoginLinkException.php": [
          "File: src/Symfony/Component/Security/Http/LoginLink/Exception/InvalidLoginLinkException.php -> src/Symfony/Component/Security/Http/LoginLink/Exception/InvalidLoginLinkException.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: {",
          "20: }",
          "",
          "[Removed Lines]",
          "18: class InvalidLoginLinkException extends \\Exception implements InvalidLoginLinkExceptionInterface",
          "",
          "[Added Lines]",
          "18: class InvalidLoginLinkException extends \\RuntimeException implements InvalidLoginLinkExceptionInterface",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandler.php||src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandler.php": [
          "File: src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandler.php -> src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Security\\Http\\LoginLink;",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "16: use Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;",
          "17: use Symfony\\Component\\Routing\\RequestContext;",
          "18: use Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException;",
          "19: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "20: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "21: use Symfony\\Component\\Security\\Http\\LoginLink\\Exception\\ExpiredLoginLinkException;",
          "",
          "[Removed Lines]",
          "15: use Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface;",
          "",
          "[Added Lines]",
          "18: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\ExpiredSignatureException;",
          "19: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\InvalidSignatureException;",
          "20: use Symfony\\Component\\Security\\Core\\Signature\\SignatureHasher;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: {",
          "30:     private $urlGenerator;",
          "31:     private $userProvider;",
          "35:     private $options;",
          "39:     {",
          "40:         $this->urlGenerator = $urlGenerator;",
          "41:         $this->userProvider = $userProvider;",
          "45:         $this->options = array_merge([",
          "46:             'route_name' => null,",
          "47:             'lifetime' => 600,",
          "49:         ], $options);",
          "51:     }",
          "53:     public function createLoginLink(UserInterface $user, Request $request = null): LoginLinkDetails",
          "",
          "[Removed Lines]",
          "32:     private $propertyAccessor;",
          "33:     private $signatureProperties;",
          "34:     private $secret;",
          "36:     private $expiredStorage;",
          "38:     public function __construct(UrlGeneratorInterface $urlGenerator, UserProviderInterface $userProvider, PropertyAccessorInterface $propertyAccessor, array $signatureProperties, string $secret, array $options, ?ExpiredLoginLinkStorage $expiredStorage)",
          "42:         $this->propertyAccessor = $propertyAccessor;",
          "43:         $this->signatureProperties = $signatureProperties;",
          "44:         $this->secret = $secret;",
          "48:             'max_uses' => null,",
          "50:         $this->expiredStorage = $expiredStorage;",
          "",
          "[Added Lines]",
          "35:     private $signatureHashUtil;",
          "37:     public function __construct(UrlGeneratorInterface $urlGenerator, UserProviderInterface $userProvider, SignatureHasher $signatureHashUtil, array $options)",
          "41:         $this->signatureHashUtil = $signatureHashUtil;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:             'user' => method_exists($user, 'getUserIdentifier') ? $user->getUserIdentifier() : $user->getUsername(),",
          "61:             'expires' => $expires,",
          "63:         ];",
          "65:         if ($request) {",
          "",
          "[Removed Lines]",
          "62:             'hash' => $this->computeSignatureHash($user, $expires),",
          "",
          "[Added Lines]",
          "57:             'hash' => $this->signatureHashUtil->computeSignatureHash($user, $expires),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106:         $hash = $request->get('hash');",
          "107:         $expires = $request->get('expires');",
          "123:         }",
          "125:         return $user;",
          "126:     }",
          "147: }",
          "",
          "[Removed Lines]",
          "108:         if (false === hash_equals($hash, $this->computeSignatureHash($user, $expires))) {",
          "109:             throw new InvalidLoginLinkException('Invalid or expired signature.');",
          "110:         }",
          "112:         if ($expires < time()) {",
          "113:             throw new ExpiredLoginLinkException('Login link has expired.');",
          "114:         }",
          "116:         if ($this->expiredStorage && $this->options['max_uses']) {",
          "117:             $hash = $request->get('hash');",
          "118:             if ($this->expiredStorage->countUsages($hash) >= $this->options['max_uses']) {",
          "119:                 throw new ExpiredLoginLinkException(sprintf('Login link can only be used \"%d\" times.', $this->options['max_uses']));",
          "120:             }",
          "122:             $this->expiredStorage->incrementUsages($hash);",
          "128:     private function computeSignatureHash(UserInterface $user, int $expires): string",
          "129:     {",
          "131:         $signatureFields = [base64_encode(method_exists($user, 'getUserIdentifier') ? $user->getUserIdentifier() : $user->getUsername()), $expires];",
          "133:         foreach ($this->signatureProperties as $property) {",
          "134:             $value = $this->propertyAccessor->getValue($user, $property) ?? '';",
          "135:             if ($value instanceof \\DateTimeInterface) {",
          "136:                 $value = $value->format('c');",
          "137:             }",
          "139:             if (!is_scalar($value) && !(\\is_object($value) && method_exists($value, '__toString'))) {",
          "140:                 throw new \\InvalidArgumentException(sprintf('The property path \"%s\" on the user object \"%s\" must return a value that can be cast to a string, but \"%s\" was returned.', $property, \\get_class($user), get_debug_type($value)));",
          "141:             }",
          "142:             $signatureFields[] = base64_encode($value);",
          "143:         }",
          "145:         return base64_encode(hash_hmac('sha256', implode(':', $signatureFields), $this->secret));",
          "146:     }",
          "",
          "[Added Lines]",
          "104:         try {",
          "105:             $this->signatureHashUtil->verifySignatureHash($user, $expires, $hash);",
          "106:         } catch (ExpiredSignatureException $e) {",
          "107:             throw new ExpiredLoginLinkException(ucfirst(str_ireplace('signature', 'login link', $e->getMessage())), 0, $e);",
          "108:         } catch (InvalidSignatureException $e) {",
          "109:             throw new InvalidLoginLinkException(ucfirst(str_ireplace('signature', 'login link', $e->getMessage())), 0, $e);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeHandler.php||src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeHandler.php": [
          "File: src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeHandler.php -> src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\RememberMe;",
          "14: use Psr\\Log\\LoggerInterface;",
          "15: use Symfony\\Component\\HttpFoundation\\Cookie;",
          "16: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "17: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "18: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "19: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "26: abstract class AbstractRememberMeHandler implements RememberMeHandlerInterface",
          "27: {",
          "28:     private $userProvider;",
          "29:     protected $requestStack;",
          "30:     protected $options;",
          "31:     protected $logger;",
          "33:     public function __construct(UserProviderInterface $userProvider, RequestStack $requestStack, array $options = [], ?LoggerInterface $logger = null)",
          "34:     {",
          "35:         $this->userProvider = $userProvider;",
          "36:         $this->requestStack = $requestStack;",
          "37:         $this->options = $options + [",
          "38:             'name' => 'REMEMBERME',",
          "39:             'lifetime' => 31536000,",
          "40:             'path' => '/',",
          "41:             'domain' => null,",
          "42:             'secure' => false,",
          "43:             'httponly' => true,",
          "44:             'samesite' => null,",
          "45:             'always_remember_me' => false,",
          "46:             'remember_me_parameter' => '_remember_me',",
          "47:         ];",
          "48:         $this->logger = $logger;",
          "49:     }",
          "60:     abstract protected function processRememberMe(RememberMeDetails $rememberMeDetails, UserInterface $user): void;",
          "65:     public function consumeRememberMeCookie(RememberMeDetails $rememberMeDetails): UserInterface",
          "66:     {",
          "67:         try {",
          "69:             $method = 'loadUserByIdentifier';",
          "70:             if (!method_exists($this->userProvider, 'loadUserByIdentifier')) {",
          "71:                 trigger_deprecation('symfony/security-core', '5.3', 'Not implementing method \"loadUserByIdentifier()\" in user provider \"%s\" is deprecated. This method will replace \"loadUserByUsername()\" in Symfony 6.0.', get_debug_type($this->userProvider));",
          "73:                 $method = 'loadUserByUsername';",
          "74:             }",
          "76:             $user = $this->userProvider->$method($rememberMeDetails->getUserIdentifier());",
          "77:         } catch (AuthenticationException $e) {",
          "78:             throw $e;",
          "79:         }",
          "81:         if (!$user instanceof UserInterface) {",
          "82:             throw new \\LogicException(sprintf('The UserProviderInterface implementation must return an instance of UserInterface, but returned \"%s\".', get_debug_type($user)));",
          "83:         }",
          "85:         $this->processRememberMe($rememberMeDetails, $user);",
          "87:         if (null !== $this->logger) {",
          "88:             $this->logger->info('Remember-me cookie accepted.');",
          "89:         }",
          "91:         return $user;",
          "92:     }",
          "97:     public function clearRememberMeCookie(): void",
          "98:     {",
          "99:         if (null !== $this->logger) {",
          "100:             $this->logger->debug('Clearing remember-me cookie.', ['name' => $this->options['name']]);",
          "101:         }",
          "103:         $this->createCookie(null);",
          "104:     }",
          "111:     protected function createCookie(?RememberMeDetails $rememberMeDetails)",
          "112:     {",
          "113:         $request = $this->requestStack->getMainRequest();",
          "114:         if (!$request) {",
          "115:             throw new \\LogicException('Cannot create the remember-me cookie; no master request available.');",
          "116:         }",
          "119:         $request->attributes->set(ResponseListener::COOKIE_ATTR_NAME, new Cookie(",
          "120:             $this->options['name'],",
          "121:             $rememberMeDetails ? $rememberMeDetails->toString() : null,",
          "122:             $rememberMeDetails ? $rememberMeDetails->getExpires() : 1,",
          "123:             $this->options['path'],",
          "124:             $this->options['domain'],",
          "125:             $this->options['secure'] ?? $request->isSecure(),",
          "126:             $this->options['httponly'],",
          "127:             false,",
          "128:             $this->options['samesite']",
          "129:         ));",
          "130:     }",
          "131: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php||src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php": [
          "File: src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php -> src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\RememberMe;",
          "14: use Psr\\Log\\LoggerInterface;",
          "15: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "16: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\PersistentToken;",
          "17: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\TokenProviderInterface;",
          "18: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "19: use Symfony\\Component\\Security\\Core\\Exception\\CookieTheftException;",
          "20: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "21: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "34: final class PersistentRememberMeHandler extends AbstractRememberMeHandler",
          "35: {",
          "36:     private $tokenProvider;",
          "37:     private $secret;",
          "39:     public function __construct(TokenProviderInterface $tokenProvider, string $secret, UserProviderInterface $userProvider, RequestStack $requestStack, array $options, ?LoggerInterface $logger = null)",
          "40:     {",
          "41:         parent::__construct($userProvider, $requestStack, $options, $logger);",
          "43:         $this->tokenProvider = $tokenProvider;",
          "44:         $this->secret = $secret;",
          "45:     }",
          "50:     public function createRememberMeCookie(UserInterface $user): void",
          "51:     {",
          "52:         $series = base64_encode(random_bytes(64));",
          "53:         $tokenValue = $this->generateHash(base64_encode(random_bytes(64)));",
          "54:         $token = new PersistentToken(\\get_class($user), method_exists($user, 'getUserIdentifier') ? $user->getUserIdentifier() : $user->getUsername(), $series, $tokenValue, new \\DateTime());",
          "56:         $this->tokenProvider->createNewToken($token);",
          "57:         $this->createCookie(RememberMeDetails::fromPersistentToken($token, time() + $this->options['lifetime']));",
          "58:     }",
          "63:     public function processRememberMe(RememberMeDetails $rememberMeDetails, UserInterface $user): void",
          "64:     {",
          "65:         if (!str_contains($rememberMeDetails->getValue(), ':')) {",
          "66:             throw new AuthenticationException('The cookie is incorrectly formatted.');",
          "67:         }",
          "69:         [$series, $tokenValue] = explode(':', $rememberMeDetails->getValue());",
          "70:         $persistentToken = $this->tokenProvider->loadTokenBySeries($series);",
          "71:         if (!hash_equals($persistentToken->getTokenValue(), $tokenValue)) {",
          "72:             throw new CookieTheftException('This token was already used. The account is possibly compromised.');",
          "73:         }",
          "75:         if ($persistentToken->getLastUsed()->getTimestamp() + $this->options['lifetime'] < time()) {",
          "76:             throw new AuthenticationException('The cookie has expired.');",
          "77:         }",
          "79:         $tokenValue = base64_encode(random_bytes(64));",
          "80:         $this->tokenProvider->updateToken($series, $this->generateHash($tokenValue), new \\DateTime());",
          "82:         $this->createCookie($rememberMeDetails->withValue($tokenValue));",
          "83:     }",
          "88:     public function clearRememberMeCookie(): void",
          "89:     {",
          "90:         parent::clearRememberMeCookie();",
          "92:         $cookie = $this->requestStack->getMainRequest()->cookies->get($this->options['name']);",
          "93:         if (null === $cookie) {",
          "94:             return;",
          "95:         }",
          "97:         $rememberMeDetails = RememberMeDetails::fromRawCookie($cookie);",
          "98:         [$series, ] = explode(':', $rememberMeDetails->getValue());",
          "99:         $this->tokenProvider->deleteTokenBySeries($series);",
          "100:     }",
          "105:     public function getTokenProvider(): TokenProviderInterface",
          "106:     {",
          "107:         return $this->tokenProvider;",
          "108:     }",
          "110:     private function generateHash(string $tokenValue): string",
          "111:     {",
          "112:         return hash_hmac('sha256', $tokenValue, $this->secret);",
          "113:     }",
          "114: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/RememberMe/RememberMeDetails.php||src/Symfony/Component/Security/Http/RememberMe/RememberMeDetails.php": [
          "File: src/Symfony/Component/Security/Http/RememberMe/RememberMeDetails.php -> src/Symfony/Component/Security/Http/RememberMe/RememberMeDetails.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\RememberMe;",
          "14: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\PersistentToken;",
          "15: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "22: class RememberMeDetails",
          "23: {",
          "24:     public const COOKIE_DELIMITER = ':';",
          "26:     private $userFqcn;",
          "27:     private $userIdentifier;",
          "28:     private $expires;",
          "29:     private $value;",
          "31:     public function __construct(string $userFqcn, string $userIdentifier, int $expires, string $value)",
          "32:     {",
          "33:         $this->userFqcn = $userFqcn;",
          "34:         $this->userIdentifier = $userIdentifier;",
          "35:         $this->expires = $expires;",
          "36:         $this->value = $value;",
          "37:     }",
          "39:     public static function fromRawCookie(string $rawCookie): self",
          "40:     {",
          "41:         $cookieParts = explode(self::COOKIE_DELIMITER, base64_decode($rawCookie), 4);",
          "42:         if (false === $cookieParts[1] = base64_decode($cookieParts[1], true)) {",
          "43:             throw new AuthenticationException('The user identifier contains a character from outside the base64 alphabet.');",
          "44:         }",
          "46:         return new static(...$cookieParts);",
          "47:     }",
          "49:     public static function fromPersistentToken(PersistentToken $persistentToken, int $expires): self",
          "50:     {",
          "51:         return new static($persistentToken->getClass(), $persistentToken->getUserIdentifier(), $expires, $persistentToken->getSeries().':'.$persistentToken->getTokenValue());",
          "52:     }",
          "54:     public function withValue(string $value): self",
          "55:     {",
          "56:         $details = clone $this;",
          "57:         $details->value = $value;",
          "59:         return $details;",
          "60:     }",
          "62:     public function getUserFqcn(): string",
          "63:     {",
          "64:         return $this->userFqcn;",
          "65:     }",
          "67:     public function getUserIdentifier(): string",
          "68:     {",
          "69:         return $this->userIdentifier;",
          "70:     }",
          "72:     public function getExpires(): int",
          "73:     {",
          "74:         return $this->expires;",
          "75:     }",
          "77:     public function getValue(): string",
          "78:     {",
          "79:         return $this->value;",
          "80:     }",
          "82:     public function toString(): string",
          "83:     {",
          "85:         return base64_encode(implode(self::COOKIE_DELIMITER, [$this->userFqcn, base64_encode($this->userIdentifier), $this->expires, $this->value]));",
          "86:     }",
          "87: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/RememberMe/RememberMeHandlerInterface.php||src/Symfony/Component/Security/Http/RememberMe/RememberMeHandlerInterface.php": [
          "File: src/Symfony/Component/Security/Http/RememberMe/RememberMeHandlerInterface.php -> src/Symfony/Component/Security/Http/RememberMe/RememberMeHandlerInterface.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\RememberMe;",
          "14: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "15: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "27: interface RememberMeHandlerInterface",
          "28: {",
          "35:     public function createRememberMeCookie(UserInterface $user): void;",
          "48:     public function consumeRememberMeCookie(RememberMeDetails $rememberMeDetails): UserInterface;",
          "55:     public function clearRememberMeCookie(): void;",
          "56: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php||src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php": [
          "File: src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php -> src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: class ResponseListener implements EventSubscriberInterface",
          "26: {",
          "27:     public function onKernelResponse(ResponseEvent $event)",
          "28:     {",
          "29:         if (!$event->isMainRequest()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:     public const COOKIE_ATTR_NAME = '_security_remember_me_cookie';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:         $request = $event->getRequest();",
          "34:         $response = $event->getResponse();",
          "38:         }",
          "39:     }",
          "",
          "[Removed Lines]",
          "36:         if ($request->attributes->has(RememberMeServicesInterface::COOKIE_ATTR_NAME)) {",
          "37:             $response->headers->setCookie($request->attributes->get(RememberMeServicesInterface::COOKIE_ATTR_NAME));",
          "",
          "[Added Lines]",
          "42:         if ($request->attributes->has(self::COOKIE_ATTR_NAME)) {",
          "43:             $response->headers->setCookie($request->attributes->get(self::COOKIE_ATTR_NAME));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/RememberMe/SignatureRememberMeHandler.php||src/Symfony/Component/Security/Http/RememberMe/SignatureRememberMeHandler.php": [
          "File: src/Symfony/Component/Security/Http/RememberMe/SignatureRememberMeHandler.php -> src/Symfony/Component/Security/Http/RememberMe/SignatureRememberMeHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\RememberMe;",
          "14: use Psr\\Log\\LoggerInterface;",
          "15: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "16: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "17: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\ExpiredSignatureException;",
          "18: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\InvalidSignatureException;",
          "19: use Symfony\\Component\\Security\\Core\\Signature\\SignatureHasher;",
          "20: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "21: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "35: final class SignatureRememberMeHandler extends AbstractRememberMeHandler",
          "36: {",
          "37:     private $signatureHasher;",
          "39:     public function __construct(SignatureHasher $signatureHasher, UserProviderInterface $userProvider, RequestStack $requestStack, array $options, ?LoggerInterface $logger = null)",
          "40:     {",
          "41:         parent::__construct($userProvider, $requestStack, $options, $logger);",
          "43:         $this->signatureHasher = $signatureHasher;",
          "44:     }",
          "49:     public function createRememberMeCookie(UserInterface $user): void",
          "50:     {",
          "51:         $expires = time() + $this->options['lifetime'];",
          "52:         $value = $this->signatureHasher->computeSignatureHash($user, $expires);",
          "54:         $details = new RememberMeDetails(\\get_class($user), method_exists($user, 'getUserIdentifier') ? $user->getUserIdentifier() : $user->getUsername(), $expires, $value);",
          "55:         $this->createCookie($details);",
          "56:     }",
          "61:     public function processRememberMe(RememberMeDetails $rememberMeDetails, UserInterface $user): void",
          "62:     {",
          "63:         try {",
          "64:             $this->signatureHasher->verifySignatureHash($user, $rememberMeDetails->getExpires(), $rememberMeDetails->getValue());",
          "65:         } catch (InvalidSignatureException $e) {",
          "66:             throw new AuthenticationException('The cookie\\'s hash is invalid.', 0, $e);",
          "67:         } catch (ExpiredSignatureException $e) {",
          "68:             throw new AuthenticationException('The cookie has expired.', 0, $e);",
          "69:         }",
          "71:         $this->createRememberMeCookie($user);",
          "72:     }",
          "73: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/Authenticator/RememberMeAuthenticatorTest.php||src/Symfony/Component/Security/Http/Tests/Authenticator/RememberMeAuthenticatorTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Authenticator/RememberMeAuthenticatorTest.php -> src/Symfony/Component/Security/Http/Tests/Authenticator/RememberMeAuthenticatorTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Security\\Http\\Tests\\Authenticator;",
          "14: use PHPUnit\\Framework\\TestCase;",
          "15: use Symfony\\Component\\HttpFoundation\\Request;",
          "17: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorage;",
          "19: use Symfony\\Component\\Security\\Core\\User\\InMemoryUser;",
          "20: use Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator;",
          "23: class RememberMeAuthenticatorTest extends TestCase",
          "24: {",
          "26:     private $tokenStorage;",
          "27:     private $authenticator;",
          "30:     protected function setUp(): void",
          "31:     {",
          "38:     }",
          "40:     public function testSupportsTokenStorageWithToken()",
          "41:     {",
          "45:     }",
          "51:     {",
          "55:     }",
          "57:     public function provideSupportsData()",
          "58:     {",
          "69:     }",
          "71:     public function testAuthenticate()",
          "72:     {",
          "77:     }",
          "79:     public function testAuthenticateWithoutToken()",
          "80:     {",
          "81:         $this->expectException(\\LogicException::class);",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "16: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken;",
          "18: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "21: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeServicesInterface;",
          "25:     private $rememberMeServices;",
          "28:     private $request;",
          "32:         $this->rememberMeServices = $this->createMock(RememberMeServicesInterface::class);",
          "33:         $this->tokenStorage = $this->createMock(TokenStorage::class);",
          "34:         $this->authenticator = new RememberMeAuthenticator($this->rememberMeServices, 's3cr3t', $this->tokenStorage, [",
          "35:             'name' => '_remember_me_cookie',",
          "36:         ]);",
          "37:         $this->request = new Request();",
          "42:         $this->tokenStorage->expects($this->any())->method('getToken')->willReturn(TokenInterface::class);",
          "44:         $this->assertFalse($this->authenticator->supports($this->request));",
          "50:     public function testSupports($autoLoginResult, $support)",
          "52:         $this->rememberMeServices->expects($this->once())->method('autoLogin')->with($this->request)->willReturn($autoLoginResult);",
          "54:         $this->assertSame($support, $this->authenticator->supports($this->request));",
          "59:         yield [null, false];",
          "60:         yield [$this->createMock(TokenInterface::class), null];",
          "61:     }",
          "63:     public function testConsecutiveSupportsCalls()",
          "64:     {",
          "65:         $this->rememberMeServices->expects($this->once())->method('autoLogin')->with($this->request)->willReturn($this->createMock(TokenInterface::class));",
          "67:         $this->assertNull($this->authenticator->supports($this->request));",
          "68:         $this->assertNull($this->authenticator->supports($this->request));",
          "73:         $this->request->attributes->set('_remember_me_token', new RememberMeToken($user = new InMemoryUser('wouter', 'test'), 'main', 'secret'));",
          "74:         $passport = $this->authenticator->authenticate($this->request);",
          "76:         $this->assertSame($user, $passport->getUser());",
          "83:         $this->authenticator->authenticate($this->request);",
          "",
          "[Added Lines]",
          "15: use Symfony\\Component\\HttpFoundation\\Cookie;",
          "18: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;",
          "21: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeDetails;",
          "22: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "23: use Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener;",
          "27:     private $rememberMeHandler;",
          "33:         $this->rememberMeHandler = $this->createMock(RememberMeHandlerInterface::class);",
          "34:         $this->tokenStorage = new TokenStorage();",
          "35:         $this->authenticator = new RememberMeAuthenticator($this->rememberMeHandler, 's3cr3t', $this->tokenStorage, '_remember_me_cookie');",
          "40:         $this->tokenStorage->setToken(new UsernamePasswordToken('username', 'credentials', 'main'));",
          "42:         $this->assertFalse($this->authenticator->supports(Request::create('/')));",
          "48:     public function testSupports($request, $support)",
          "50:         $this->assertSame($support, $this->authenticator->supports($request));",
          "55:         yield [Request::create('/'), false];",
          "57:         $request = Request::create('/', 'GET', [], ['_remember_me_cookie' => 'rememberme']);",
          "58:         yield [$request, null];",
          "60:         $request = Request::create('/', 'GET', [], ['_remember_me_cookie' => 'rememberme']);",
          "61:         $request->attributes->set(ResponseListener::COOKIE_ATTR_NAME, new Cookie('_remember_me_cookie', null));",
          "62:         yield [$request, false];",
          "67:         $rememberMeDetails = new RememberMeDetails(InMemoryUser::class, 'wouter', 1, 'secret');",
          "68:         $request = Request::create('/', 'GET', [], ['_remember_me_cookie' => $rememberMeDetails->toString()]);",
          "69:         $passport = $this->authenticator->authenticate($request);",
          "71:         $this->rememberMeHandler->expects($this->once())->method('consumeRememberMeCookie')->with($this->callback(function ($arg) use ($rememberMeDetails) {",
          "72:             return $rememberMeDetails == $arg;",
          "73:         }));",
          "74:         $passport->getUser(); // trigger the user loader",
          "81:         $this->authenticator->authenticate(Request::create('/'));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/EventListener/CheckRememberMeConditionsListenerTest.php||src/Symfony/Component/Security/Http/Tests/EventListener/CheckRememberMeConditionsListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/EventListener/CheckRememberMeConditionsListenerTest.php -> src/Symfony/Component/Security/Http/Tests/EventListener/CheckRememberMeConditionsListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\Tests\\EventListener;",
          "14: use PHPUnit\\Framework\\TestCase;",
          "15: use Symfony\\Component\\HttpFoundation\\Request;",
          "16: use Symfony\\Component\\HttpFoundation\\Response;",
          "17: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "18: use Symfony\\Component\\Security\\Core\\User\\User;",
          "19: use Symfony\\Component\\Security\\Http\\Authenticator\\AuthenticatorInterface;",
          "20: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\RememberMeBadge;",
          "21: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\UserBadge;",
          "22: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\PassportInterface;",
          "23: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\SelfValidatingPassport;",
          "24: use Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent;",
          "25: use Symfony\\Component\\Security\\Http\\EventListener\\CheckRememberMeConditionsListener;",
          "27: class CheckRememberMeConditionsListenerTest extends TestCase",
          "28: {",
          "29:     private $listener;",
          "30:     private $request;",
          "31:     private $response;",
          "33:     protected function setUp(): void",
          "34:     {",
          "35:         $this->listener = new CheckRememberMeConditionsListener();",
          "36:         $this->request = Request::create('/login');",
          "37:         $this->request->request->set('_remember_me', true);",
          "38:         $this->response = new Response();",
          "39:     }",
          "41:     public function testSuccessfulLoginWithoutSupportingAuthenticator()",
          "42:     {",
          "43:         $passport = $this->createPassport([]);",
          "45:         $this->listener->onSuccessfulLogin($this->createLoginSuccessfulEvent($passport));",
          "47:         $this->assertFalse($passport->hasBadge(RememberMeBadge::class));",
          "48:     }",
          "50:     public function testSuccessfulLoginWithoutRequestParameter()",
          "51:     {",
          "52:         $this->request = Request::create('/login');",
          "53:         $passport = $this->createPassport();",
          "55:         $this->listener->onSuccessfulLogin($this->createLoginSuccessfulEvent($passport));",
          "57:         $this->assertFalse($passport->getBadge(RememberMeBadge::class)->isEnabled());",
          "58:     }",
          "60:     public function testSuccessfulLoginWhenRememberMeAlwaysIsTrue()",
          "61:     {",
          "62:         $passport = $this->createPassport();",
          "63:         $listener = new CheckRememberMeConditionsListener(['always_remember_me' => true]);",
          "65:         $this->listener->onSuccessfulLogin($this->createLoginSuccessfulEvent($passport));",
          "67:         $this->assertTrue($passport->getBadge(RememberMeBadge::class)->isEnabled());",
          "68:     }",
          "73:     public function testSuccessfulLoginWithOptInRequestParameter($optInValue)",
          "74:     {",
          "75:         $this->request->request->set('_remember_me', $optInValue);",
          "76:         $passport = $this->createPassport();",
          "78:         $this->listener->onSuccessfulLogin($this->createLoginSuccessfulEvent($passport));",
          "80:         $this->assertTrue($passport->getBadge(RememberMeBadge::class)->isEnabled());",
          "81:     }",
          "83:     public function provideRememberMeOptInValues()",
          "84:     {",
          "85:         yield ['true'];",
          "86:         yield ['1'];",
          "87:         yield ['on'];",
          "88:         yield ['yes'];",
          "89:         yield [true];",
          "90:     }",
          "92:     private function createLoginSuccessfulEvent(PassportInterface $passport)",
          "93:     {",
          "94:         return new LoginSuccessEvent($this->createMock(AuthenticatorInterface::class), $passport, $this->createMock(TokenInterface::class), $this->request, $this->response, 'main_firewall');",
          "95:     }",
          "97:     private function createPassport(array $badges = null)",
          "98:     {",
          "99:         return new SelfValidatingPassport(new UserBadge('test', function ($username) { return new User($username, null); }), $badges ?? [new RememberMeBadge()]);",
          "100:     }",
          "101: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/EventListener/RememberMeListenerTest.php||src/Symfony/Component/Security/Http/Tests/EventListener/RememberMeListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/EventListener/RememberMeListenerTest.php -> src/Symfony/Component/Security/Http/Tests/EventListener/RememberMeListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\UserBadge;",
          "23: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\PassportInterface;",
          "24: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\SelfValidatingPassport;",
          "26: use Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent;",
          "27: use Symfony\\Component\\Security\\Http\\EventListener\\RememberMeListener;",
          "30: class RememberMeListenerTest extends TestCase",
          "31: {",
          "33:     private $listener;",
          "34:     private $request;",
          "35:     private $response;",
          "38:     protected function setUp(): void",
          "39:     {",
          "45:     }",
          "47:     public function testSuccessfulLoginWithoutSupportingAuthenticator()",
          "48:     {",
          "52:         $this->listener->onSuccessfulLogin($event);",
          "53:     }",
          "56:     {",
          "68:         $this->listener->onSuccessfulLogin($event);",
          "69:     }",
          "71:     public function testCredentialsInvalid()",
          "72:     {",
          "77:     }",
          "80:     {",
          "81:         if (null === $passport) {",
          "83:         }",
          "86:     }",
          "89:     {",
          "91:     }",
          "92: }",
          "",
          "[Removed Lines]",
          "25: use Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent;",
          "28: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeServicesInterface;",
          "32:     private $rememberMeServices;",
          "36:     private $token;",
          "40:         $this->rememberMeServices = $this->createMock(RememberMeServicesInterface::class);",
          "41:         $this->listener = new RememberMeListener($this->rememberMeServices);",
          "42:         $this->request = $this->createMock(Request::class);",
          "43:         $this->response = $this->createMock(Response::class);",
          "44:         $this->token = $this->createMock(TokenInterface::class);",
          "49:         $this->rememberMeServices->expects($this->never())->method('loginSuccess');",
          "51:         $event = $this->createLoginSuccessfulEvent('main_firewall', $this->response, new SelfValidatingPassport(new UserBadge('wouter', function ($username) { return new InMemoryUser($username, null); })));",
          "55:     public function testSuccessfulLoginWithoutSuccessResponse()",
          "57:         $this->rememberMeServices->expects($this->never())->method('loginSuccess');",
          "59:         $event = $this->createLoginSuccessfulEvent('main_firewall', null);",
          "60:         $this->listener->onSuccessfulLogin($event);",
          "61:     }",
          "63:     public function testSuccessfulLogin()",
          "64:     {",
          "65:         $this->rememberMeServices->expects($this->once())->method('loginSuccess')->with($this->request, $this->response, $this->token);",
          "67:         $event = $this->createLoginSuccessfulEvent('main_firewall', $this->response);",
          "73:         $this->rememberMeServices->expects($this->once())->method('loginFail')->with($this->request, $this->isInstanceOf(AuthenticationException::class));",
          "75:         $event = $this->createLoginFailureEvent('main_firewall');",
          "76:         $this->listener->onFailedLogin($event);",
          "79:     private function createLoginSuccessfulEvent($firewallName, $response, PassportInterface $passport = null)",
          "82:             $passport = new SelfValidatingPassport(new UserBadge('test', function ($username) { return new InMemoryUser($username, null); }), [new RememberMeBadge()]);",
          "85:         return new LoginSuccessEvent($this->createMock(AuthenticatorInterface::class), $passport, $this->token, $this->request, $response, $firewallName);",
          "88:     private function createLoginFailureEvent($firewallName)",
          "90:         return new LoginFailureEvent(new AuthenticationException(), $this->createMock(AuthenticatorInterface::class), $this->request, null, $firewallName, null);",
          "",
          "[Added Lines]",
          "27: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeHandlerInterface;",
          "31:     private $rememberMeHandler;",
          "38:         $this->rememberMeHandler = $this->createMock(RememberMeHandlerInterface::class);",
          "39:         $this->listener = new RememberMeListener($this->rememberMeHandler);",
          "40:         $this->request = Request::create('/login');",
          "41:         $this->request->request->set('_remember_me', true);",
          "42:         $this->response = new Response();",
          "47:         $this->rememberMeHandler->expects($this->never())->method('createRememberMeCookie');",
          "49:         $event = $this->createLoginSuccessfulEvent($this->createPassport([]));",
          "53:     public function testSuccessfulLoginWithRememberMeDisabled()",
          "55:         $this->rememberMeHandler->expects($this->never())->method('createRememberMeCookie');",
          "57:         $event = $this->createLoginSuccessfulEvent($this->createPassport([new RememberMeBadge()]));",
          "63:         $this->rememberMeHandler->expects($this->once())->method('clearRememberMeCookie');",
          "65:         $this->listener->clearCookie();",
          "68:     private function createLoginSuccessfulEvent(PassportInterface $passport = null)",
          "71:             $passport = $this->createPassport();",
          "74:         return new LoginSuccessEvent($this->createMock(AuthenticatorInterface::class), $passport, $this->createMock(TokenInterface::class), $this->request, $this->response, 'main_firewall');",
          "77:     private function createPassport(array $badges = null)",
          "79:         if (null === $badges) {",
          "80:             $badge = new RememberMeBadge();",
          "81:             $badge->enable();",
          "82:             $badges = [$badge];",
          "83:         }",
          "85:         return new SelfValidatingPassport(new UserBadge('test', function ($username) { return new InMemoryUser($username, null); }), $badges);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/ContextListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/ContextListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/ContextListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/ContextListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:         $tokenStorage = new TokenStorage();",
          "107:         $tokenStorage->setToken(new UsernamePasswordToken('test1', 'pass1', 'phpunit'));",
          "108:         $request = new Request();",
          "109:         $session = new Session(new MockArraySessionStorage());",
          "110:         $request->setSession($session);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:         $request->attributes->set('_security_firewall_run', true);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:     {",
          "149:         $tokenStorage = $this->createMock(TokenStorageInterface::class);",
          "150:         $event = $this->createMock(RequestEvent::class);",
          "152:         $session = $this->createMock(SessionInterface::class);",
          "163:         $session->expects($this->any())",
          "164:             ->method('get')",
          "165:             ->with('_security_key123')",
          "166:             ->willReturn($token);",
          "167:         $tokenStorage->expects($this->once())",
          "168:             ->method('setToken')",
          "169:             ->with(null);",
          "",
          "[Removed Lines]",
          "151:         $request = $this->createMock(Request::class);",
          "154:         $event->expects($this->any())",
          "155:             ->method('getRequest')",
          "156:             ->willReturn($request);",
          "157:         $request->expects($this->any())",
          "158:             ->method('hasPreviousSession')",
          "159:             ->willReturn(true);",
          "160:         $request->expects($this->any())",
          "161:             ->method('getSession')",
          "162:             ->willReturn($session);",
          "",
          "[Added Lines]",
          "153:         $session->expects($this->any())->method('getName')->willReturn('SESSIONNAME');",
          "158:         $request = new Request([], [], [], ['SESSIONNAME' => true]);",
          "159:         $request->setSession($session);",
          "161:         $event->expects($this->any())",
          "162:             ->method('getRequest')",
          "163:             ->willReturn($request);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "196:             ->willReturn(true);",
          "197:         $event->expects($this->any())",
          "198:             ->method('getRequest')",
          "201:         $dispatcher->expects($this->once())",
          "202:             ->method('addListener')",
          "",
          "[Removed Lines]",
          "199:             ->willReturn($this->createMock(Request::class));",
          "",
          "[Added Lines]",
          "196:             ->willReturn(new Request());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "208:     public function testOnKernelResponseListenerRemovesItself()",
          "209:     {",
          "210:         $session = $this->createMock(SessionInterface::class);",
          "211:         $tokenStorage = $this->createMock(TokenStorageInterface::class);",
          "212:         $dispatcher = $this->createMock(EventDispatcherInterface::class);",
          "214:         $listener = new ContextListener($tokenStorage, [], 'key123', null, $dispatcher);",
          "224:         $event = new ResponseEvent($this->createMock(HttpKernelInterface::class), $request, HttpKernelInterface::MAIN_REQUEST, new Response());",
          "",
          "[Removed Lines]",
          "216:         $request = $this->createMock(Request::class);",
          "217:         $request->expects($this->any())",
          "218:             ->method('hasSession')",
          "219:             ->willReturn(true);",
          "220:         $request->expects($this->any())",
          "221:             ->method('getSession')",
          "222:             ->willReturn($session);",
          "",
          "[Added Lines]",
          "208:         $session->expects($this->any())->method('getName')->willReturn('SESSIONNAME');",
          "214:         $request = new Request();",
          "215:         $request->attributes->set('_security_firewall_run', true);",
          "216:         $request->setSession($session);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "233:     public function testHandleRemovesTokenIfNoPreviousSessionWasFound()",
          "234:     {",
          "238:         $event = $this->createMock(RequestEvent::class);",
          "239:         $event->expects($this->any())->method('getRequest')->willReturn($request);",
          "",
          "[Removed Lines]",
          "235:         $request = $this->createMock(Request::class);",
          "236:         $request->expects($this->any())->method('hasPreviousSession')->willReturn(false);",
          "",
          "[Added Lines]",
          "229:         $request = new Request();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "377:     {",
          "378:         $session = new Session(new MockArraySessionStorage());",
          "379:         $request = new Request();",
          "380:         $request->setSession($session);",
          "381:         $requestStack = new RequestStack();",
          "382:         $requestStack->push($request);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "373:         $request->attributes->set('_security_firewall_run', true);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/LoginLink/LoginLinkHandlerTest.php||src/Symfony/Component/Security/Http/Tests/LoginLink/LoginLinkHandlerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/LoginLink/LoginLinkHandlerTest.php -> src/Symfony/Component/Security/Http/Tests/LoginLink/LoginLinkHandlerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use PHPUnit\\Framework\\MockObject\\MockObject;",
          "15: use PHPUnit\\Framework\\TestCase;",
          "16: use Symfony\\Component\\HttpFoundation\\Request;",
          "17: use Symfony\\Component\\PropertyAccess\\PropertyAccess;",
          "18: use Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface;",
          "19: use Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;",
          "20: use Symfony\\Component\\Routing\\RequestContext;",
          "21: use Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException;",
          "22: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "23: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "24: use Symfony\\Component\\Security\\Http\\LoginLink\\Exception\\ExpiredLoginLinkException;",
          "25: use Symfony\\Component\\Security\\Http\\LoginLink\\Exception\\InvalidLoginLinkException;",
          "27: use Symfony\\Component\\Security\\Http\\LoginLink\\LoginLinkHandler;",
          "29: class LoginLinkHandlerTest extends TestCase",
          "",
          "[Removed Lines]",
          "26: use Symfony\\Component\\Security\\Http\\LoginLink\\ExpiredLoginLinkStorage;",
          "",
          "[Added Lines]",
          "16: use Psr\\Cache\\CacheItemPoolInterface;",
          "17: use Symfony\\Component\\Cache\\Adapter\\ArrayAdapter;",
          "24: use Symfony\\Component\\Security\\Core\\Signature\\ExpiredSignatureStorage;",
          "25: use Symfony\\Component\\Security\\Core\\Signature\\SignatureHasher;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     private $userProvider;",
          "36:     private $propertyAccessor;",
          "38:     private $expiredLinkStorage;",
          "40:     protected function setUp(): void",
          "41:     {",
          "42:         $this->router = $this->createMock(UrlGeneratorInterface::class);",
          "43:         $this->userProvider = new TestLoginLinkHandlerUserProvider();",
          "44:         $this->propertyAccessor = PropertyAccess::createPropertyAccessor();",
          "46:     }",
          "",
          "[Removed Lines]",
          "45:         $this->expiredLinkStorage = $this->createMock(ExpiredLoginLinkStorage::class);",
          "",
          "[Added Lines]",
          "43:     private $expiredLinkCache;",
          "50:         $this->expiredLinkCache = new ArrayAdapter();",
          "51:         $this->expiredLinkStorage = new ExpiredSignatureStorage($this->expiredLinkCache, 360);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "118:         $user = new TestLoginLinkHandlerUser('weaverryan', 'ryan@symfonycasts.com', 'pwhash');",
          "119:         $this->userProvider->createUser($user);",
          "125:         $linker = $this->createLinker(['max_uses' => 3]);",
          "126:         $actualUser = $linker->consumeLoginLink($request);",
          "127:         $this->assertEquals($user, $actualUser);",
          "128:     }",
          "130:     public function testConsumeLoginLinkWithExpired()",
          "",
          "[Removed Lines]",
          "121:         $this->expiredLinkStorage->expects($this->once())",
          "122:             ->method('incrementUsages')",
          "123:             ->with($signature);",
          "",
          "[Added Lines]",
          "131:         $item = $this->expiredLinkCache->getItem(rawurlencode($signature));",
          "132:         $this->assertSame(1, $item->get());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "172:         $user = new TestLoginLinkHandlerUser('weaverryan', 'ryan@symfonycasts.com', 'pwhash');",
          "173:         $this->userProvider->createUser($user);",
          "180:         $linker = $this->createLinker(['max_uses' => 3]);",
          "181:         $linker->consumeLoginLink($request);",
          "",
          "[Removed Lines]",
          "175:         $this->expiredLinkStorage->expects($this->once())",
          "176:             ->method('countUsages')",
          "177:             ->with($signature)",
          "178:             ->willReturn(3);",
          "",
          "[Added Lines]",
          "180:         $item = $this->expiredLinkCache->getItem(rawurlencode($signature));",
          "181:         $item->set(3);",
          "182:         $this->expiredLinkCache->save($item);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "199:             'route_name' => 'app_check_login_link_route',",
          "200:         ], $options);",
          "203:     }",
          "204: }",
          "",
          "[Removed Lines]",
          "202:         return new LoginLinkHandler($this->router, $this->userProvider, $this->propertyAccessor, $extraProperties, 's3cret', $options, $this->expiredLinkStorage);",
          "",
          "[Added Lines]",
          "206:         return new LoginLinkHandler($this->router, $this->userProvider, new SignatureHasher($this->propertyAccessor, $extraProperties, 's3cret', $this->expiredLinkStorage, $options['max_uses'] ?? null), $options);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "210:     public function createUser(TestLoginLinkHandlerUser $user): void",
          "211:     {",
          "213:     }",
          "215:     public function loadUserByIdentifier(string $userIdentifier): TestLoginLinkHandlerUser",
          "",
          "[Removed Lines]",
          "212:         $this->users[$user->getUsername()] = $user;",
          "",
          "[Added Lines]",
          "216:         $this->users[$user->getUserIdentifier()] = $user;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php||src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php -> src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\Tests\\RememberMe;",
          "14: use PHPUnit\\Framework\\TestCase;",
          "15: use Symfony\\Component\\HttpFoundation\\Cookie;",
          "16: use Symfony\\Component\\HttpFoundation\\Request;",
          "17: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "18: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\PersistentToken;",
          "19: use Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\TokenProviderInterface;",
          "20: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "21: use Symfony\\Component\\Security\\Core\\Exception\\CookieTheftException;",
          "22: use Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider;",
          "23: use Symfony\\Component\\Security\\Core\\User\\InMemoryUser;",
          "24: use Symfony\\Component\\Security\\Http\\RememberMe\\PersistentRememberMeHandler;",
          "25: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeDetails;",
          "26: use Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener;",
          "28: class PersistentRememberMeHandlerTest extends TestCase",
          "29: {",
          "30:     private $tokenProvider;",
          "31:     private $userProvider;",
          "32:     private $requestStack;",
          "33:     private $request;",
          "34:     private $handler;",
          "36:     protected function setUp(): void",
          "37:     {",
          "38:         $this->tokenProvider = $this->createMock(TokenProviderInterface::class);",
          "39:         $this->userProvider = new InMemoryUserProvider();",
          "40:         $this->userProvider->createUser(new InMemoryUser('wouter', null));",
          "41:         $this->requestStack = new RequestStack();",
          "42:         $this->request = Request::create('/login');",
          "43:         $this->requestStack->push($this->request);",
          "44:         $this->handler = new PersistentRememberMeHandler($this->tokenProvider, 'secret', $this->userProvider, $this->requestStack, []);",
          "45:     }",
          "47:     public function testCreateRememberMeCookie()",
          "48:     {",
          "49:         $this->tokenProvider->expects($this->once())",
          "50:             ->method('createNewToken')",
          "51:             ->with($this->callback(function ($persistentToken) {",
          "52:                 return $persistentToken instanceof PersistentToken",
          "53:                     && $persistentToken->getUserIdentifier() === 'wouter'",
          "54:                     && $persistentToken->getClass() === InMemoryUser::class;",
          "55:             }));",
          "57:         $this->handler->createRememberMeCookie(new InMemoryUser('wouter', null));",
          "58:     }",
          "60:     public function testClearRememberMeCookie()",
          "61:     {",
          "62:         $this->tokenProvider->expects($this->once())",
          "63:             ->method('deleteTokenBySeries')",
          "64:             ->with('series1');",
          "66:         $this->request->cookies->set('REMEMBERME', (new RememberMeDetails(InMemoryUser::class, 'wouter', 0, 'series1:tokenvalue'))->toString());",
          "68:         $this->handler->clearRememberMeCookie();",
          "70:         $this->assertTrue($this->request->attributes->has(ResponseListener::COOKIE_ATTR_NAME));",
          "73:         $cookie = $this->request->attributes->get(ResponseListener::COOKIE_ATTR_NAME);",
          "74:         $this->assertEquals(null, $cookie->getValue());",
          "75:     }",
          "77:     public function testConsumeRememberMeCookieValid()",
          "78:     {",
          "79:         $this->tokenProvider->expects($this->any())",
          "80:             ->method('loadTokenBySeries')",
          "81:             ->with('series1')",
          "82:             ->willReturn(new PersistentToken(InMemoryUser::class, 'wouter', 'series1', 'tokenvalue', new \\DateTime('-10 min')))",
          "83:         ;",
          "85:         $this->tokenProvider->expects($this->once())->method('updateToken')->with('series1');",
          "87:         $rememberMeDetails = new RememberMeDetails(InMemoryUser::class, 'wouter', 360, 'series1:tokenvalue');",
          "88:         $this->handler->consumeRememberMeCookie($rememberMeDetails);",
          "91:         $this->assertTrue($this->request->attributes->has(ResponseListener::COOKIE_ATTR_NAME));",
          "94:         $cookie = $this->request->attributes->get(ResponseListener::COOKIE_ATTR_NAME);",
          "95:         $this->assertNotEquals($rememberMeDetails->toString(), $cookie->getValue());",
          "96:         $this->assertMatchesRegularExpression('{'.str_replace('\\\\', '\\\\\\\\', base64_decode($rememberMeDetails->withValue('[a-zA-Z0-9/+]+')->toString())).'}', base64_decode($cookie->getValue()));",
          "97:     }",
          "99:     public function testConsumeRememberMeCookieInvalidToken()",
          "100:     {",
          "101:         $this->expectException(CookieTheftException::class);",
          "103:         $this->tokenProvider->expects($this->any())",
          "104:             ->method('loadTokenBySeries')",
          "105:             ->with('series1')",
          "106:             ->willReturn(new PersistentToken(InMemoryUser::class, 'wouter', 'series1', 'tokenvalue1', new \\DateTime('-10 min')));",
          "108:         $this->tokenProvider->expects($this->never())->method('updateToken')->with('series1');",
          "110:         $this->handler->consumeRememberMeCookie(new RememberMeDetails(InMemoryUser::class, 'wouter', 360, 'series1:tokenvalue'));",
          "111:     }",
          "113:     public function testConsumeRememberMeCookieExpired()",
          "114:     {",
          "115:         $this->expectException(AuthenticationException::class);",
          "116:         $this->expectExceptionMessage('The cookie has expired.');",
          "118:         $this->tokenProvider->expects($this->any())",
          "119:             ->method('loadTokenBySeries')",
          "120:             ->with('series1')",
          "121:             ->willReturn(new PersistentToken(InMemoryUser::class, 'wouter', 'series1', 'tokenvalue', new \\DateTime('-'.(31536000 - 1).' years')));",
          "123:         $this->tokenProvider->expects($this->never())->method('updateToken')->with('series1');",
          "125:         $this->handler->consumeRememberMeCookie(new RememberMeDetails(InMemoryUser::class, 'wouter', 360, 'series1:tokenvalue'));",
          "126:     }",
          "127: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/RememberMe/SignatureRememberMeHandlerTest.php||src/Symfony/Component/Security/Http/Tests/RememberMe/SignatureRememberMeHandlerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/RememberMe/SignatureRememberMeHandlerTest.php -> src/Symfony/Component/Security/Http/Tests/RememberMe/SignatureRememberMeHandlerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http\\Tests\\RememberMe;",
          "14: use PHPUnit\\Framework\\TestCase;",
          "15: use Symfony\\Bridge\\PhpUnit\\ClockMock;",
          "16: use Symfony\\Component\\HttpFoundation\\Cookie;",
          "17: use Symfony\\Component\\HttpFoundation\\Request;",
          "18: use Symfony\\Component\\HttpFoundation\\RequestStack;",
          "19: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "20: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\ExpiredSignatureException;",
          "21: use Symfony\\Component\\Security\\Core\\Signature\\Exception\\InvalidSignatureException;",
          "22: use Symfony\\Component\\Security\\Core\\Signature\\SignatureHasher;",
          "23: use Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider;",
          "24: use Symfony\\Component\\Security\\Core\\User\\InMemoryUser;",
          "25: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeDetails;",
          "26: use Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener;",
          "27: use Symfony\\Component\\Security\\Http\\RememberMe\\SignatureRememberMeHandler;",
          "29: class SignatureRememberMeHandlerTest extends TestCase",
          "30: {",
          "31:     private $signatureHasher;",
          "32:     private $userProvider;",
          "33:     private $request;",
          "34:     private $requestStack;",
          "35:     private $handler;",
          "37:     protected function setUp(): void",
          "38:     {",
          "39:         $this->signatureHasher = $this->createMock(SignatureHasher::class);",
          "40:         $this->userProvider = new InMemoryUserProvider();",
          "41:         $user = new InMemoryUser('wouter', null);",
          "42:         $this->userProvider->createUser($user);",
          "43:         $this->requestStack = new RequestStack();",
          "44:         $this->request = Request::create('/login');",
          "45:         $this->requestStack->push($this->request);",
          "46:         $this->handler = new SignatureRememberMeHandler($this->signatureHasher, $this->userProvider, $this->requestStack, []);",
          "47:     }",
          "52:     public function testCreateRememberMeCookie()",
          "53:     {",
          "54:         ClockMock::register(SignatureRememberMeHandler::class);",
          "56:         $user = new InMemoryUser('wouter', null);",
          "57:         $this->signatureHasher->expects($this->once())->method('computeSignatureHash')->with($user, $expire = time() + 31536000)->willReturn('abc');",
          "59:         $this->handler->createRememberMeCookie($user);",
          "61:         $this->assertTrue($this->request->attributes->has(ResponseListener::COOKIE_ATTR_NAME));",
          "64:         $cookie = $this->request->attributes->get(ResponseListener::COOKIE_ATTR_NAME);",
          "65:         $this->assertEquals(base64_encode(InMemoryUser::class.':d291dGVy:'.$expire.':abc'), $cookie->getValue());",
          "66:     }",
          "68:     public function testClearRememberMeCookie()",
          "69:     {",
          "70:         $this->handler->clearRememberMeCookie();",
          "72:         $this->assertTrue($this->request->attributes->has(ResponseListener::COOKIE_ATTR_NAME));",
          "75:         $cookie = $this->request->attributes->get(ResponseListener::COOKIE_ATTR_NAME);",
          "76:         $this->assertEquals(null, $cookie->getValue());",
          "77:     }",
          "82:     public function testConsumeRememberMeCookieValid()",
          "83:     {",
          "84:         $this->signatureHasher->expects($this->once())->method('verifySignatureHash')->with($user = new InMemoryUser('wouter', null), 360, 'signature');",
          "85:         $this->signatureHasher->expects($this->any())",
          "86:             ->method('computeSignatureHash')",
          "87:             ->with($user, $expire = time() + 31536000)",
          "88:             ->willReturn('newsignature');",
          "90:         $rememberMeDetails = new RememberMeDetails(InMemoryUser::class, 'wouter', 360, 'signature');",
          "91:         $this->handler->consumeRememberMeCookie($rememberMeDetails);",
          "93:         $this->assertTrue($this->request->attributes->has(ResponseListener::COOKIE_ATTR_NAME));",
          "96:         $cookie = $this->request->attributes->get(ResponseListener::COOKIE_ATTR_NAME);",
          "97:         $this->assertEquals((new RememberMeDetails(InMemoryUser::class, 'wouter', $expire, 'newsignature'))->toString(), $cookie->getValue());",
          "98:     }",
          "100:     public function testConsumeRememberMeCookieInvalidHash()",
          "101:     {",
          "102:         $this->expectException(AuthenticationException::class);",
          "103:         $this->expectExceptionMessage('The cookie\\'s hash is invalid.');",
          "105:         $this->signatureHasher->expects($this->any())",
          "106:             ->method('verifySignatureHash')",
          "107:             ->with(new InMemoryUser('wouter', null), 360, 'badsignature')",
          "108:             ->will($this->throwException(new InvalidSignatureException()));",
          "110:         $this->handler->consumeRememberMeCookie(new RememberMeDetails(InMemoryUser::class, 'wouter', 360, 'badsignature'));",
          "111:     }",
          "113:     public function testConsumeRememberMeCookieExpired()",
          "114:     {",
          "115:         $this->expectException(AuthenticationException::class);",
          "116:         $this->expectExceptionMessage('The cookie has expired.');",
          "118:         $this->signatureHasher->expects($this->any())",
          "119:             ->method('verifySignatureHash')",
          "120:             ->with(new InMemoryUser('wouter', null), 360, 'signature')",
          "121:             ->will($this->throwException(new ExpiredSignatureException()));",
          "123:         $this->handler->consumeRememberMeCookie(new RememberMeDetails(InMemoryUser::class, 'wouter', 360, 'signature'));",
          "124:     }",
          "125: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0bb3964a2d32ee5b354c1ed6a9e6a1c61e585a28",
      "candidate_info": {
        "commit_hash": "0bb3964a2d32ee5b354c1ed6a9e6a1c61e585a28",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/0bb3964a2d32ee5b354c1ed6a9e6a1c61e585a28",
        "files": [
          "UPGRADE-5.3.md",
          "UPGRADE-6.0.md",
          "src/Symfony/Bundle/FrameworkBundle/Tests/Functional/app/Security/config.yml",
          "src/Symfony/Bundle/SecurityBundle/CHANGELOG.md",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AnonymousFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/guard.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_rememberme.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Compiler/AddSessionDomainConstraintPassTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_customized_config.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_default_strategy.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service_and_strategy.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/argon2i_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/bcrypt_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_undefined_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_container1.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_remember_me_options.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_undefined_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/logout_delete_cookies.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/migrating_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/no_custom_user_checker.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/sodium_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/access_decision_manager_customized_config.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/access_decision_manager_default_strategy.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/access_decision_manager_service.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/access_decision_manager_service_and_strategy.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/argon2i_hasher.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/bcrypt_hasher.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/container1.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/firewall_provider.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/firewall_undefined_provider.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/legacy_container1.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/legacy_remember_me_options.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/listener_provider.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/listener_undefined_provider.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/logout_delete_cookies.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/merge.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/merge_import.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/migrating_hasher.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/no_custom_user_checker.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/remember_me_options.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/xml/sodium_hasher.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/access_decision_manager_customized_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/access_decision_manager_default_strategy.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/access_decision_manager_service.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/access_decision_manager_service_and_strategy.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/argon2i_hasher.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/bcrypt_hasher.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/container1.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/firewall_provider.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/firewall_undefined_provider.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/legacy_container1.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/legacy_remember_me_options.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/listener_provider.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/listener_undefined_provider.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/logout_delete_cookies.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/merge.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/merge_import.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/migrating_hasher.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/no_custom_user_checker.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/remember_me_options.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/yml/sodium_hasher.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AnonymousTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AuthenticationCommencingTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AutowiringTypesTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/CsrfFormLoginTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/FirewallEntryPointTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/FormLoginTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/GuardedTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/JsonLoginTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/MissingUserProviderTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeCookieTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SwitchUserTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AbstractTokenCompareRoles/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AbstractTokenCompareRoles/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/Authenticator/firewall_user_provider.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/Authenticator/implicit_user_provider.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AutowiringTypes/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AutowiringTypes/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/CsrfFormLogin/base_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/CsrfFormLogin/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/CsrfFormLogin/legacy_base_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/CsrfFormLogin/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/CsrfFormLogin/routes_as_path.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/FirewallEntryPoint/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/FirewallEntryPoint/config_form_login.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/FirewallEntryPoint/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/FirewallEntryPoint/legacy_config_form_login.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/JsonLogin/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/JsonLogin/custom_handlers.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/JsonLogin/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/JsonLogin/legacy_custom_handlers.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/JsonLogin/switchuser_stateless.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/JsonLoginLdap/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/Logout/config_cookie_clearing.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/config_persistent.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/config_session.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/legacy_clear_on_change_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/legacy_config_persistent.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/legacy_config_session.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/legacy_stateless_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/RememberMe/stateless_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/SecurityHelper/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/SecurityHelper/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/base_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/invalid_ip_access_control.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/legacy_base_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/legacy_config.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/legacy_localized_form_failure_handler.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/legacy_localized_routes.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/legacy_localized_routes_with_forward.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/legacy_login_throttling.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/legacy_switchuser.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/localized_form_failure_handler.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/localized_routes.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/localized_routes_with_forward.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/login_throttling.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/routes_as_path.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/switchuser.yml",
          "src/Symfony/Bundle/SecurityBundle/composer.json",
          "src/Symfony/Component/Security/CHANGELOG.md",
          "src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php",
          "src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/RememberMeAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php",
          "src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/LdapBindAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Guard/AbstractGuardAuthenticator.php",
          "src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php",
          "src/Symfony/Component/Security/Guard/Authenticator/GuardBridgeAuthenticator.php",
          "src/Symfony/Component/Security/Guard/AuthenticatorInterface.php",
          "src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php",
          "src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php",
          "src/Symfony/Component/Security/Guard/PasswordAuthenticatedInterface.php",
          "src/Symfony/Component/Security/Guard/Provider/GuardAuthenticationProvider.php",
          "src/Symfony/Component/Security/Guard/Tests/Authenticator/FormLoginAuthenticatorTest.php",
          "src/Symfony/Component/Security/Guard/Tests/Authenticator/GuardBridgeAuthenticatorTest.php",
          "src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Guard/Tests/GuardAuthenticatorHandlerTest.php",
          "src/Symfony/Component/Security/Guard/Tests/Provider/GuardAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Guard/Token/GuardTokenInterface.php",
          "src/Symfony/Component/Security/Guard/Token/PostAuthenticationGuardToken.php",
          "src/Symfony/Component/Security/Guard/Token/PreAuthenticationGuardToken.php",
          "src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php",
          "src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/RememberMeListener.php",
          "src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordJsonAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/X509AuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/AbstractPreAuthenticatedListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/AnonymousAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/BasicAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/RememberMeListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/RemoteUserAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordFormAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordJsonAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/X509AuthenticationListenerTest.php"
        ],
        "message": "[Security] Deprecate the old authentication mechanisms",
        "before_after_code_files": [
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AnonymousFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AnonymousFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/guard.php||src/Symfony/Bundle/SecurityBundle/Resources/config/guard.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_rememberme.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_rememberme.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Compiler/AddSessionDomainConstraintPassTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Compiler/AddSessionDomainConstraintPassTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_customized_config.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_customized_config.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_default_strategy.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_default_strategy.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service_and_strategy.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service_and_strategy.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/argon2i_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/argon2i_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/bcrypt_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/bcrypt_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_undefined_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_undefined_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_container1.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_container1.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_remember_me_options.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_remember_me_options.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_undefined_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_undefined_provider.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/logout_delete_cookies.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/logout_delete_cookies.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/migrating_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/migrating_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/no_custom_user_checker.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/no_custom_user_checker.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/sodium_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/sodium_hasher.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AnonymousTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/AnonymousTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AuthenticationCommencingTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/AuthenticationCommencingTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AutowiringTypesTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/AutowiringTypesTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/CsrfFormLoginTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/CsrfFormLoginTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/FirewallEntryPointTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/FirewallEntryPointTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/FormLoginTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/FormLoginTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/GuardedTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/GuardedTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/JsonLoginTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/JsonLoginTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/MissingUserProviderTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/MissingUserProviderTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeCookieTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeCookieTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SwitchUserTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SwitchUserTest.php",
          "src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php||src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php",
          "src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php||src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php||src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/RememberMeAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/RememberMeAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php",
          "src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php||src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php",
          "src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php||src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/LdapBindAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/LdapBindAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Guard/AbstractGuardAuthenticator.php||src/Symfony/Component/Security/Guard/AbstractGuardAuthenticator.php",
          "src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php||src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php",
          "src/Symfony/Component/Security/Guard/Authenticator/GuardBridgeAuthenticator.php||src/Symfony/Component/Security/Guard/Authenticator/GuardBridgeAuthenticator.php",
          "src/Symfony/Component/Security/Guard/AuthenticatorInterface.php||src/Symfony/Component/Security/Guard/AuthenticatorInterface.php",
          "src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php||src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php",
          "src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php||src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php",
          "src/Symfony/Component/Security/Guard/PasswordAuthenticatedInterface.php||src/Symfony/Component/Security/Guard/PasswordAuthenticatedInterface.php",
          "src/Symfony/Component/Security/Guard/Provider/GuardAuthenticationProvider.php||src/Symfony/Component/Security/Guard/Provider/GuardAuthenticationProvider.php",
          "src/Symfony/Component/Security/Guard/Tests/Authenticator/FormLoginAuthenticatorTest.php||src/Symfony/Component/Security/Guard/Tests/Authenticator/FormLoginAuthenticatorTest.php",
          "src/Symfony/Component/Security/Guard/Tests/Authenticator/GuardBridgeAuthenticatorTest.php||src/Symfony/Component/Security/Guard/Tests/Authenticator/GuardBridgeAuthenticatorTest.php",
          "src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php||src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Guard/Tests/GuardAuthenticatorHandlerTest.php||src/Symfony/Component/Security/Guard/Tests/GuardAuthenticatorHandlerTest.php",
          "src/Symfony/Component/Security/Guard/Tests/Provider/GuardAuthenticationProviderTest.php||src/Symfony/Component/Security/Guard/Tests/Provider/GuardAuthenticationProviderTest.php",
          "src/Symfony/Component/Security/Guard/Token/GuardTokenInterface.php||src/Symfony/Component/Security/Guard/Token/GuardTokenInterface.php",
          "src/Symfony/Component/Security/Guard/Token/PostAuthenticationGuardToken.php||src/Symfony/Component/Security/Guard/Token/PostAuthenticationGuardToken.php",
          "src/Symfony/Component/Security/Guard/Token/PreAuthenticationGuardToken.php||src/Symfony/Component/Security/Guard/Token/PreAuthenticationGuardToken.php",
          "src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php||src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php",
          "src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/RememberMeListener.php||src/Symfony/Component/Security/Http/Firewall/RememberMeListener.php",
          "src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordJsonAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/UsernamePasswordJsonAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/X509AuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/X509AuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/AbstractPreAuthenticatedListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/AbstractPreAuthenticatedListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/AnonymousAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/AnonymousAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/BasicAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/BasicAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/RememberMeListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/RememberMeListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/RemoteUserAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/RemoteUserAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordFormAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordFormAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordJsonAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordJsonAuthenticationListenerTest.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/X509AuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/X509AuthenticationListenerTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php"
          ],
          "candidate": [
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AnonymousFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AnonymousFactory.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AnonymousFactory.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AnonymousFactory.php"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:             $container->getDefinition('security.authorization_checker')->setArgument(4, false);",
          "131:             $container->getDefinition('security.authorization_checker')->setArgument(5, false);",
          "132:         } else {",
          "133:             $loader->load('security_legacy.php');",
          "134:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:             trigger_deprecation('symfony/security-bundle', '5.3', 'Not setting the \"security.enable_authenticator_manager\" config option to true is deprecated.');",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/guard.php||src/Symfony/Bundle/SecurityBundle/Resources/config/guard.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/guard.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/guard.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:                 abstract_arg('stateless firewall keys'),",
          "25:             ])",
          "26:             ->call('setSessionAuthenticationStrategy', [service('security.authentication.session_strategy')])",
          "28:         ->alias(GuardAuthenticatorHandler::class, 'security.authentication.guard_handler')",
          "30:         ->set('security.authentication.provider.guard', GuardAuthenticationProvider::class)",
          "31:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "30:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%alias_id%\" alias is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:                 abstract_arg('User Checker'),",
          "37:                 service('security.password_hasher'),",
          "38:             ])",
          "40:         ->set('security.authentication.listener.guard', GuardAuthenticationListener::class)",
          "41:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "48:                 param('security.authentication.hide_user_not_found'),",
          "49:             ])",
          "50:             ->tag('monolog.logger', ['channel' => 'security'])",
          "51:     ;",
          "52: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:         ->set('security.authentication.manager', NoopAuthenticationManager::class)",
          "64:         ->alias(AuthenticationManagerInterface::class, 'security.authentication.manager')",
          "66:         ->set('security.firewall.authenticator', AuthenticatorManagerListener::class)",
          "67:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%alias_id%\" alias is deprecated, use the new authenticator system instead.')",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security_authenticator_login_link.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:                 service('doctrine'),",
          "74:                 abstract_arg('user entity class name'),",
          "75:             ])",
          "77:     ;",
          "78: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:                 service('security.authentication.manager'),",
          "50:             ])",
          "51:             ->tag('monolog.logger', ['channel' => 'security'])",
          "53:         ->set('security.authentication.provider.anonymous', AnonymousAuthenticationProvider::class)",
          "54:             ->args([abstract_arg('Key')])",
          "56:         ->set('security.authentication.retry_entry_point', RetryAuthenticationEntryPoint::class)",
          "57:             ->args([",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "56:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:         ->set('security.authentication.listener.form', UsernamePasswordFormAuthenticationListener::class)",
          "162:             ->parent('security.authentication.listener.abstract')",
          "163:             ->abstract()",
          "165:         ->set('security.authentication.listener.x509', X509AuthenticationListener::class)",
          "166:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "174:                 service('event_dispatcher')->nullOnInvalid(),",
          "175:             ])",
          "176:             ->tag('monolog.logger', ['channel' => 'security'])",
          "178:         ->set('security.authentication.listener.json', UsernamePasswordJsonAuthenticationListener::class)",
          "179:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:             ])",
          "192:             ->call('setTranslator', [service('translator')->ignoreOnInvalid()])",
          "193:             ->tag('monolog.logger', ['channel' => 'security'])",
          "195:         ->set('security.authentication.listener.remote_user', RemoteUserAuthenticationListener::class)",
          "196:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "203:                 service('event_dispatcher')->nullOnInvalid(),",
          "204:             ])",
          "205:             ->tag('monolog.logger', ['channel' => 'security'])",
          "207:         ->set('security.authentication.listener.basic', BasicAuthenticationListener::class)",
          "208:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "214:                 service('logger')->nullOnInvalid(),",
          "215:             ])",
          "216:             ->tag('monolog.logger', ['channel' => 'security'])",
          "218:         ->set('security.authentication.provider.dao', DaoAuthenticationProvider::class)",
          "219:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "224:                 service('security.password_hasher_factory'),",
          "225:                 param('security.authentication.hide_user_not_found'),",
          "226:             ])",
          "228:         ->set('security.authentication.provider.ldap_bind', LdapBindAuthenticationProvider::class)",
          "229:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "237:                 abstract_arg('search dn'),",
          "238:                 abstract_arg('search password'),",
          "239:             ])",
          "241:         ->set('security.authentication.provider.pre_authenticated', PreAuthenticatedAuthenticationProvider::class)",
          "242:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "248:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "244:                 abstract_arg('User Provider'),",
          "245:                 abstract_arg('UserChecker'),",
          "246:             ])",
          "248:         ->set('security.exception_listener', ExceptionListener::class)",
          "249:             ->abstract()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Resources/config/security_rememberme.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security_rememberme.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security_rememberme.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security_rememberme.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:                 service('security.authentication.session_strategy'),",
          "33:             ])",
          "34:             ->tag('monolog.logger', ['channel' => 'security'])",
          "36:         ->set('security.authentication.provider.rememberme', RememberMeAuthenticationProvider::class)",
          "37:             ->abstract()",
          "38:             ->args([abstract_arg('User Checker')])",
          "40:         ->set('security.rememberme.token.provider.in_memory', InMemoryTokenProvider::class)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "40:             ->deprecate('symfony/security-bundle', '5.3', 'The \"%service_id%\" service is deprecated, use the new authenticator system instead.')",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Compiler/AddSessionDomainConstraintPassTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Compiler/AddSessionDomainConstraintPassTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Compiler/AddSessionDomainConstraintPassTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Compiler/AddSessionDomainConstraintPassTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "140:         $config = [",
          "141:             'security' => [",
          "142:                 'providers' => ['some_provider' => ['id' => 'foo']],",
          "143:                 'firewalls' => ['some_firewall' => ['security' => false]],",
          "144:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:                 'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/CompleteConfigurationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:         $configs[0][2] = strtolower($configs[0][2]);",
          "128:         $configs[2][2] = strtolower($configs[2][2]);",
          "130:         $this->assertEquals([",
          "131:             [",
          "132:                 'simple',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:         $this->assertEquals([",
          "131:             [",
          "132:                 'simple',",
          "133:                 'security.user_checker',",
          "134:                 '.security.request_matcher.xmi9dcw',",
          "135:                 false,",
          "136:                 false,",
          "137:                 '',",
          "138:                 '',",
          "139:                 '',",
          "140:                 '',",
          "141:                 '',",
          "142:                 [],",
          "143:                 null,",
          "144:             ],",
          "145:             [",
          "146:                 'secure',",
          "147:                 'security.user_checker',",
          "148:                 null,",
          "149:                 true,",
          "150:                 true,",
          "151:                 'security.user.provider.concrete.default',",
          "152:                 null,",
          "153:                 'security.authenticator.form_login.secure',",
          "154:                 null,",
          "155:                 null,",
          "156:                 [",
          "157:                     'switch_user',",
          "158:                     'x509',",
          "159:                     'remote_user',",
          "160:                     'form_login',",
          "161:                     'http_basic',",
          "162:                     'remember_me',",
          "163:                 ],",
          "164:                 [",
          "165:                     'parameter' => '_switch_user',",
          "166:                     'role' => 'ROLE_ALLOWED_TO_SWITCH',",
          "167:                 ],",
          "168:             ],",
          "169:             [",
          "170:                 'host',",
          "171:                 'security.user_checker',",
          "172:                 '.security.request_matcher.iw4hyjb',",
          "173:                 true,",
          "174:                 false,",
          "175:                 'security.user.provider.concrete.default',",
          "176:                 'host',",
          "177:                 'security.authenticator.http_basic.host',",
          "178:                 null,",
          "179:                 null,",
          "180:                 [",
          "181:                     'http_basic',",
          "182:                 ],",
          "183:                 null,",
          "184:             ],",
          "185:             [",
          "186:                 'with_user_checker',",
          "187:                 'app.user_checker',",
          "188:                 null,",
          "189:                 true,",
          "190:                 false,",
          "191:                 'security.user.provider.concrete.default',",
          "192:                 'with_user_checker',",
          "193:                 'security.authenticator.http_basic.with_user_checker',",
          "194:                 null,",
          "195:                 null,",
          "196:                 [",
          "197:                     'http_basic',",
          "198:                 ],",
          "199:                 null,",
          "200:             ],",
          "201:         ], $configs);",
          "203:         $this->assertEquals([",
          "204:             [],",
          "205:             [",
          "206:                 'security.channel_listener',",
          "207:                 'security.firewall.authenticator.secure',",
          "208:                 'security.authentication.switchuser_listener.secure',",
          "209:                 'security.access_listener',",
          "210:             ],",
          "211:             [",
          "212:                 'security.channel_listener',",
          "213:                 'security.context_listener.0',",
          "214:                 'security.firewall.authenticator.host',",
          "215:                 'security.access_listener',",
          "216:             ],",
          "217:             [",
          "218:                 'security.channel_listener',",
          "219:                 'security.context_listener.1',",
          "220:                 'security.firewall.authenticator.with_user_checker',",
          "221:                 'security.access_listener',",
          "222:             ],",
          "223:         ], $listeners);",
          "225:         $this->assertFalse($container->hasAlias('Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface', 'No user checker alias is registered when custom user checker services are registered'));",
          "226:     }",
          "231:     public function testLegacyFirewalls()",
          "232:     {",
          "233:         $container = $this->getContainer('legacy_container1');",
          "234:         $arguments = $container->getDefinition('security.firewall.map')->getArguments();",
          "235:         $listeners = [];",
          "236:         $configs = [];",
          "237:         foreach (array_keys($arguments[1]->getValues()) as $contextId) {",
          "238:             $contextDef = $container->getDefinition($contextId);",
          "239:             $arguments = $contextDef->getArguments();",
          "240:             $listeners[] = array_map('strval', $arguments[0]->getValues());",
          "242:             $configDef = $container->getDefinition((string) $arguments[3]);",
          "243:             $configs[] = array_values($configDef->getArguments());",
          "244:         }",
          "248:         $configs[0][2] = strtolower($configs[0][2]);",
          "249:         $configs[2][2] = strtolower($configs[2][2]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "881:         ]], $container->getDefinition('security.password_hasher_factory')->getArguments());",
          "882:     }",
          "885:     {",
          "887:         $this->assertTrue($container->getDefinition('security.authentication.listener.rememberme.secure')->getArgument(5));",
          "888:     }",
          "891:     {",
          "893:         $service = $container->getDefinition('security.authentication.listener.rememberme.main');",
          "894:         $this->assertEquals('security.authentication.rememberme.services.persistent.main', $service->getArgument(1));",
          "895:         $this->assertFalse($service->getArgument(5));",
          "",
          "[Removed Lines]",
          "884:     public function testRememberMeThrowExceptionsDefault()",
          "886:         $container = $this->getContainer('container1');",
          "890:     public function testRememberMeThrowExceptions()",
          "892:         $container = $this->getContainer('remember_me_options');",
          "",
          "[Added Lines]",
          "1008:     public function testLegacyRememberMeThrowExceptionsDefault()",
          "1010:         $container = $this->getContainer('legacy_container1');",
          "1017:     public function testLegacyRememberMeThrowExceptions()",
          "1019:         $container = $this->getContainer('legacy_remember_me_options');",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_customized_config.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_customized_config.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_customized_config.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_customized_config.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'access_decision_manager' => [",
          "5:         'allow_if_all_abstain' => true,",
          "6:         'allow_if_equal_granted_denied' => false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_default_strategy.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_default_strategy.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_default_strategy.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_default_strategy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => [",
          "6:             'memory' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'access_decision_manager' => [",
          "5:         'service' => 'app.access_decision_manager',",
          "6:     ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service_and_strategy.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service_and_strategy.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service_and_strategy.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/access_decision_manager_service_and_strategy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'access_decision_manager' => [",
          "5:         'service' => 'app.access_decision_manager',",
          "6:         'strategy' => 'affirmative',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/argon2i_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/argon2i_hasher.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/argon2i_hasher.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/argon2i_hasher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: $this->load('container1.php');",
          "5: $container->loadFromExtension('security', [",
          "6:     'password_hashers' => [",
          "7:         'JMS\\FooBundle\\Entity\\User7' => [",
          "8:             'algorithm' => 'argon2i',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/bcrypt_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/bcrypt_hasher.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/bcrypt_hasher.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/bcrypt_hasher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: $this->load('container1.php');",
          "5: $container->loadFromExtension('security', [",
          "6:     'password_hashers' => [",
          "7:         'JMS\\FooBundle\\Entity\\User7' => [",
          "8:             'algorithm' => 'bcrypt',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'password_hashers' => [",
          "5:         'JMS\\FooBundle\\Entity\\User1' => 'plaintext',",
          "6:         'JMS\\FooBundle\\Entity\\User2' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:             'provider' => 'default',",
          "71:             'http_basic' => true,",
          "72:             'form_login' => true,",
          "74:             'switch_user' => true,",
          "75:             'x509' => true,",
          "76:             'remote_user' => true,",
          "77:             'logout' => true,",
          "78:             'remember_me' => ['secret' => 'TheSecret'],",
          "79:             'user_checker' => null,",
          "80:         ],",
          "81:         'host' => [",
          "82:             'provider' => 'default',",
          "83:             'pattern' => '/test',",
          "84:             'host' => 'foo\\\\.example\\\\.org',",
          "85:             'methods' => ['GET', 'POST'],",
          "87:             'http_basic' => true,",
          "88:         ],",
          "89:         'with_user_checker' => [",
          "90:             'provider' => 'default',",
          "91:             'user_checker' => 'app.user_checker',",
          "93:             'http_basic' => true,",
          "94:         ],",
          "95:     ],",
          "",
          "[Removed Lines]",
          "73:             'anonymous' => true,",
          "86:             'anonymous' => true,",
          "92:             'anonymous' => true,",
          "",
          "[Added Lines]",
          "80:             'entry_point' => 'form_login'",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_provider.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_provider.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_provider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => [",
          "6:             'memory' => $memory = [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_undefined_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_undefined_provider.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_undefined_provider.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/firewall_undefined_provider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => [",
          "6:             'memory' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_container1.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_container1.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_container1.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_container1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'password_hashers' => [",
          "5:         'JMS\\FooBundle\\Entity\\User1' => 'plaintext',",
          "6:         'JMS\\FooBundle\\Entity\\User2' => [",
          "7:             'algorithm' => 'sha1',",
          "8:             'encode_as_base64' => false,",
          "9:             'iterations' => 5,",
          "10:         ],",
          "11:         'JMS\\FooBundle\\Entity\\User3' => [",
          "12:             'algorithm' => 'md5',",
          "13:         ],",
          "14:         'JMS\\FooBundle\\Entity\\User4' => [",
          "15:             'id' => 'security.hasher.foo',",
          "16:         ],",
          "17:         'JMS\\FooBundle\\Entity\\User5' => [",
          "18:             'algorithm' => 'pbkdf2',",
          "19:             'hash_algorithm' => 'sha1',",
          "20:             'encode_as_base64' => false,",
          "21:             'iterations' => 5,",
          "22:             'key_length' => 30,",
          "23:         ],",
          "24:         'JMS\\FooBundle\\Entity\\User6' => [",
          "25:             'algorithm' => 'native',",
          "26:             'time_cost' => 8,",
          "27:             'memory_cost' => 100,",
          "28:             'cost' => 15,",
          "29:         ],",
          "30:         'JMS\\FooBundle\\Entity\\User7' => [",
          "31:             'algorithm' => 'auto',",
          "32:         ],",
          "33:     ],",
          "34:     'providers' => [",
          "35:         'default' => [",
          "36:             'memory' => [",
          "37:                 'users' => [",
          "38:                     'foo' => ['password' => 'foo', 'roles' => 'ROLE_USER'],",
          "39:                 ],",
          "40:             ],",
          "41:         ],",
          "42:         'digest' => [",
          "43:             'memory' => [",
          "44:                 'users' => [",
          "45:                     'foo' => ['password' => 'foo', 'roles' => 'ROLE_USER, ROLE_ADMIN'],",
          "46:                 ],",
          "47:             ],",
          "48:         ],",
          "49:         'basic' => [",
          "50:             'memory' => [",
          "51:                 'users' => [",
          "52:                     'foo' => ['password' => '0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33', 'roles' => 'ROLE_SUPER_ADMIN'],",
          "53:                     'bar' => ['password' => '0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33', 'roles' => ['ROLE_USER', 'ROLE_ADMIN']],",
          "54:                 ],",
          "55:             ],",
          "56:         ],",
          "57:         'service' => [",
          "58:             'id' => 'user.manager',",
          "59:         ],",
          "60:         'chain' => [",
          "61:             'chain' => [",
          "62:                 'providers' => ['service', 'basic'],",
          "63:             ],",
          "64:         ],",
          "65:     ],",
          "67:     'firewalls' => [",
          "68:         'simple' => ['provider' => 'default', 'pattern' => '/login', 'security' => false],",
          "69:         'secure' => ['stateless' => true,",
          "70:             'provider' => 'default',",
          "71:             'http_basic' => true,",
          "72:             'form_login' => true,",
          "73:             'anonymous' => true,",
          "74:             'switch_user' => true,",
          "75:             'x509' => true,",
          "76:             'remote_user' => true,",
          "77:             'logout' => true,",
          "78:             'remember_me' => ['secret' => 'TheSecret'],",
          "79:             'user_checker' => null,",
          "80:         ],",
          "81:         'host' => [",
          "82:             'provider' => 'default',",
          "83:             'pattern' => '/test',",
          "84:             'host' => 'foo\\\\.example\\\\.org',",
          "85:             'methods' => ['GET', 'POST'],",
          "86:             'anonymous' => true,",
          "87:             'http_basic' => true,",
          "88:         ],",
          "89:         'with_user_checker' => [",
          "90:             'provider' => 'default',",
          "91:             'user_checker' => 'app.user_checker',",
          "92:             'anonymous' => true,",
          "93:             'http_basic' => true,",
          "94:         ],",
          "95:     ],",
          "97:     'access_control' => [",
          "98:         ['path' => '/blog/524', 'role' => 'ROLE_USER', 'requires_channel' => 'https', 'methods' => ['get', 'POST'], 'port' => 8000],",
          "99:         ['path' => '/blog/.*', 'role' => 'IS_AUTHENTICATED_ANONYMOUSLY'],",
          "100:         ['path' => '/blog/524', 'role' => 'IS_AUTHENTICATED_ANONYMOUSLY', 'allow_if' => \"token.getUserIdentifier() matches '/^admin/'\"],",
          "101:     ],",
          "103:     'role_hierarchy' => [",
          "104:         'ROLE_ADMIN' => 'ROLE_USER',",
          "105:         'ROLE_SUPER_ADMIN' => ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ALLOWED_TO_SWITCH'],",
          "106:         'ROLE_REMOTE' => 'ROLE_USER,ROLE_ADMIN',",
          "107:     ],",
          "108: ]);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_remember_me_options.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_remember_me_options.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_remember_me_options.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/legacy_remember_me_options.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => ['id' => 'foo'],",
          "6:     ],",
          "8:     'firewalls' => [",
          "9:         'main' => [",
          "10:             'form_login' => true,",
          "11:             'remember_me' => [",
          "12:                 'secret' => 'TheSecret',",
          "13:                 'catch_exceptions' => false,",
          "14:                 'token_provider' => 'token_provider_id',",
          "15:             ],",
          "16:         ],",
          "17:     ],",
          "18: ]);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_provider.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_provider.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_provider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => [",
          "6:             'memory' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_undefined_provider.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_undefined_provider.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_undefined_provider.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/listener_undefined_provider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => [",
          "6:             'memory' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/logout_delete_cookies.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/logout_delete_cookies.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/logout_delete_cookies.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/logout_delete_cookies.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => ['id' => 'foo'],",
          "6:     ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: $this->load('merge_import.php');",
          "5: $container->loadFromExtension('security', [",
          "6:     'providers' => [",
          "7:         'default' => ['id' => 'foo'],",
          "8:     ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'firewalls' => [",
          "5:         'main' => [",
          "6:             'form_login' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/migrating_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/migrating_hasher.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/migrating_hasher.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/migrating_hasher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: $this->load('container1.php');",
          "5: $container->loadFromExtension('security', [",
          "6:     'password_hashers' => [",
          "7:         'JMS\\FooBundle\\Entity\\User7' => [",
          "8:             'algorithm' => 'argon2i',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/no_custom_user_checker.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/no_custom_user_checker.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/no_custom_user_checker.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/no_custom_user_checker.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => [",
          "6:             'memory' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:             'stateless' => true,",
          "17:             'http_basic' => true,",
          "18:             'form_login' => true,",
          "20:             'switch_user' => true,",
          "21:             'x509' => true,",
          "22:             'remote_user' => true,",
          "23:             'logout' => true,",
          "24:             'remember_me' => ['secret' => 'TheSecret'],",
          "25:             'user_checker' => null,",
          "26:         ],",
          "27:     ],",
          "28: ]);",
          "",
          "[Removed Lines]",
          "19:             'anonymous' => true,",
          "",
          "[Added Lines]",
          "26:             'entry_point' => 'form_login'",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "3: $container->loadFromExtension('security', [",
          "4:     'providers' => [",
          "5:         'default' => ['id' => 'foo'],",
          "6:     ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/sodium_hasher.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/sodium_hasher.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/sodium_hasher.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/sodium_hasher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: $this->load('container1.php');",
          "5: $container->loadFromExtension('security', [",
          "6:     'password_hashers' => [",
          "7:         'JMS\\FooBundle\\Entity\\User7' => [",
          "8:             'algorithm' => 'sodium',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:     'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/SecurityExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:         $container = $this->getRawContainer();",
          "51:         $container->loadFromExtension('security', [",
          "52:             'providers' => [",
          "53:                 'default' => ['id' => 'foo'],",
          "54:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:         $extension->addUserProviderFactory(new DummyProvider());",
          "99:         $container->loadFromExtension('security', [",
          "100:             'providers' => [",
          "101:                 'my_foo' => ['foo' => []],",
          "102:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "117:         $container = $this->getRawContainer();",
          "119:         $container->loadFromExtension('security', [",
          "120:             'providers' => [",
          "121:                 'default' => ['id' => 'foo'],",
          "122:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "168:         $container = $this->getRawContainer();",
          "170:         $container->loadFromExtension('security', [",
          "171:             'providers' => [",
          "172:                 'default' => ['id' => 'foo'],",
          "173:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "190:     {",
          "191:         $container = $this->getRawContainer();",
          "192:         $container->loadFromExtension('security', [",
          "193:             'providers' => [",
          "194:                 'first' => ['id' => 'foo'],",
          "195:                 'second' => ['id' => 'bar'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "212:         $this->expectExceptionMessage('Not configuring explicitly the provider for the \"http_basic\" listener on \"ambiguous\" firewall is ambiguous as there is more than one registered provider.');",
          "213:         $container = $this->getRawContainer();",
          "214:         $container->loadFromExtension('security', [",
          "215:             'providers' => [",
          "216:                 'first' => ['id' => 'foo'],",
          "217:                 'second' => ['id' => 'bar'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "232:     {",
          "233:         $container = $this->getRawContainer();",
          "234:         $container->loadFromExtension('security', [",
          "235:             'providers' => [",
          "236:                 'first' => ['id' => 'foo'],",
          "237:                 'second' => ['id' => 'bar'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "241:                 'default' => [",
          "242:                     'form_login' => ['provider' => 'second'],",
          "243:                     'remember_me' => ['secret' => 'baz'],",
          "245:                 ],",
          "246:             ],",
          "247:         ]);",
          "",
          "[Removed Lines]",
          "244:                     'anonymous' => true,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "257:         $rawExpression = \"'foo' == 'bar' or 1 in [1, 3, 3]\";",
          "259:         $container->loadFromExtension('security', [",
          "260:             'providers' => [",
          "261:                 'default' => ['id' => 'foo'],",
          "262:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "295:     {",
          "296:         $container = $this->getRawContainer();",
          "297:         $container->loadFromExtension('security', [",
          "298:             'providers' => [",
          "299:                 'default' => ['id' => 'foo'],",
          "300:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "311:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "315:         $container = $this->getRawContainer();",
          "317:         $container->loadFromExtension('security', [",
          "318:             'providers' => [",
          "319:                 'default' => ['id' => 'foo'],",
          "320:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "337:         $container = $this->getRawContainer();",
          "339:         $container->loadFromExtension('security', [",
          "340:             'providers' => [",
          "341:                 'first' => ['id' => 'foo'],",
          "342:                 'second' => ['id' => 'bar'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "396:         $container = $this->getRawContainer();",
          "398:         $container->loadFromExtension('security', [",
          "399:             'providers' => [",
          "400:                 'default' => ['id' => 'foo'],",
          "401:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "416:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "471:     {",
          "472:         $container = $this->getRawContainer();",
          "473:         $container->loadFromExtension('security', [",
          "474:             'providers' => [",
          "475:                 'first' => ['id' => 'foo'],",
          "476:                 'second' => ['id' => 'bar'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "492:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "481:                     'switch_user' => [",
          "482:                         'provider' => 'second',",
          "483:                     ],",
          "485:                 ],",
          "486:             ],",
          "487:         ]);",
          "",
          "[Removed Lines]",
          "484:                     'anonymous' => true,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "496:         $container = $this->getRawContainer();",
          "498:         $container->loadFromExtension('security', [",
          "499:             'providers' => [",
          "500:                 'default' => ['id' => 'foo'],",
          "501:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "517:             'enable_authenticator_manager' => true,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "521:         $container = $this->getRawContainer();",
          "523:         $container->loadFromExtension('security', [",
          "524:             'providers' => [",
          "525:                 'default' => ['id' => 'foo'],",
          "526:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "543:             'enable_authenticator_manager' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AnonymousTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/AnonymousTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/AnonymousTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/AnonymousTest.php"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AuthenticationCommencingTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/AuthenticationCommencingTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/AuthenticationCommencingTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/AuthenticationCommencingTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: class AuthenticationCommencingTest extends AbstractWebTestCase",
          "15: {",
          "20:     {",
          "23:         $client->request('GET', '/secure-but-not-covered-by-access-control');",
          "24:         $this->assertRedirect($client->getResponse(), '/login');",
          "25:     }",
          "28:     {",
          "31:     }",
          "32: }",
          "",
          "[Removed Lines]",
          "19:     public function testAuthenticationIsCommencingIfAccessDeniedExceptionIsWrapped(array $options)",
          "21:         $client = $this->createClient($options);",
          "27:     public function provideClientOptions()",
          "29:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'config.yml', 'enable_authenticator_manager' => true]];",
          "30:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_config.yml', 'enable_authenticator_manager' => false]];",
          "",
          "[Added Lines]",
          "16:     public function testAuthenticationIsCommencingIfAccessDeniedExceptionIsWrapped()",
          "18:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'base_config.yml']);",
          "27:     public function testLegacyAuthenticationIsCommencingIfAccessDeniedExceptionIsWrapped()",
          "29:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_config.yml']);",
          "31:         $client->request('GET', '/secure-but-not-covered-by-access-control');",
          "32:         $this->assertRedirect($client->getResponse(), '/login');",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/AutowiringTypesTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/AutowiringTypesTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/AutowiringTypesTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/AutowiringTypesTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:         $this->assertInstanceOf(TraceableAccessDecisionManager::class, $autowiredServices->getAccessDecisionManager(), 'The debug.security.access.decision_manager service should be injected in non-debug mode');",
          "31:     }",
          "33:     protected static function createKernel(array $options = []): KernelInterface",
          "34:     {",
          "35:         return parent::createKernel(['test_case' => 'AutowiringTypes'] + $options);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:     public function testLegacyAccessDecisionManagerAutowiring()",
          "37:     {",
          "38:         static::bootKernel(['debug' => false, 'root_config' => 'legacy_config.yml']);",
          "40:         $autowiredServices = static::getContainer()->get('test.autowiring_types.autowired_services');",
          "41:         $this->assertInstanceOf(AccessDecisionManager::class, $autowiredServices->getAccessDecisionManager(), 'The security.access.decision_manager service should be injected in debug mode');",
          "43:         static::bootKernel(['debug' => true, 'root_config' => 'legacy_config.yml']);",
          "45:         $autowiredServices = static::getContainer()->get('test.autowiring_types.autowired_services');",
          "46:         $this->assertInstanceOf(TraceableAccessDecisionManager::class, $autowiredServices->getAccessDecisionManager(), 'The debug.security.access.decision_manager service should be injected in non-debug mode');",
          "47:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/CsrfFormLoginTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/CsrfFormLoginTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/CsrfFormLoginTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/CsrfFormLoginTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         $this->assertStringContainsString('You\\'re browsing to path \"/protected-resource\".', $text);",
          "101:     }",
          "103:     public function provideClientOptions()",
          "104:     {",
          "105:         yield [['test_case' => 'CsrfFormLogin', 'root_config' => 'config.yml', 'enable_authenticator_manager' => true]];",
          "107:         yield [['test_case' => 'CsrfFormLogin', 'root_config' => 'routes_as_path.yml', 'enable_authenticator_manager' => true]];",
          "108:         yield [['test_case' => 'CsrfFormLogin', 'root_config' => 'legacy_routes_as_path.yml', 'enable_authenticator_manager' => false]];",
          "109:     }",
          "110: }",
          "",
          "[Removed Lines]",
          "106:         yield [['test_case' => 'CsrfFormLogin', 'root_config' => 'legacy_config.yml', 'enable_authenticator_manager' => false]];",
          "",
          "[Added Lines]",
          "107:     public function testLegacyFormLoginAndLogoutWithCsrfTokens($options)",
          "108:     {",
          "109:         $client = $this->createClient($options);",
          "111:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "112:         $form['user_login[username]'] = 'johannes';",
          "113:         $form['user_login[password]'] = 'test';",
          "114:         $client->submit($form);",
          "116:         $this->assertRedirect($client->getResponse(), '/profile');",
          "118:         $crawler = $client->followRedirect();",
          "120:         $text = $crawler->text(null, true);",
          "121:         $this->assertStringContainsString('Hello johannes!', $text);",
          "122:         $this->assertStringContainsString('You\\'re browsing to path \"/profile\".', $text);",
          "124:         $logoutLinks = $crawler->selectLink('Log out')->links();",
          "125:         $this->assertCount(2, $logoutLinks);",
          "126:         $this->assertStringContainsString('_csrf_token=', $logoutLinks[0]->getUri());",
          "128:         $client->click($logoutLinks[0]);",
          "130:         $this->assertRedirect($client->getResponse(), '/');",
          "131:     }",
          "137:     public function testLegacyFormLoginWithInvalidCsrfToken($options)",
          "138:     {",
          "139:         $client = $this->createClient($options);",
          "141:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "142:         $form['user_login[_token]'] = '';",
          "143:         $client->submit($form);",
          "145:         $this->assertRedirect($client->getResponse(), '/login');",
          "147:         $text = $client->followRedirect()->text(null, true);",
          "148:         $this->assertStringContainsString('Invalid CSRF token.', $text);",
          "149:     }",
          "155:     public function testFormLegacyLoginWithCustomTargetPath($options)",
          "156:     {",
          "157:         $client = $this->createClient($options);",
          "159:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "160:         $form['user_login[username]'] = 'johannes';",
          "161:         $form['user_login[password]'] = 'test';",
          "162:         $form['user_login[_target_path]'] = '/foo';",
          "163:         $client->submit($form);",
          "165:         $this->assertRedirect($client->getResponse(), '/foo');",
          "167:         $text = $client->followRedirect()->text(null, true);",
          "168:         $this->assertStringContainsString('Hello johannes!', $text);",
          "169:         $this->assertStringContainsString('You\\'re browsing to path \"/foo\".', $text);",
          "170:     }",
          "176:     public function testLegacyFormLoginRedirectsToProtectedResourceAfterLogin($options)",
          "177:     {",
          "178:         $client = $this->createClient($options);",
          "180:         $client->request('GET', '/protected-resource');",
          "181:         $this->assertRedirect($client->getResponse(), '/login');",
          "183:         $form = $client->followRedirect()->selectButton('login')->form();",
          "184:         $form['user_login[username]'] = 'johannes';",
          "185:         $form['user_login[password]'] = 'test';",
          "186:         $client->submit($form);",
          "187:         $this->assertRedirect($client->getResponse(), '/protected-resource');",
          "189:         $text = $client->followRedirect()->text(null, true);",
          "190:         $this->assertStringContainsString('Hello johannes!', $text);",
          "191:         $this->assertStringContainsString('You\\'re browsing to path \"/protected-resource\".', $text);",
          "192:     }",
          "198:     }",
          "200:     public function provideLegacyClientOptions()",
          "201:     {",
          "202:         yield [['test_case' => 'CsrfFormLogin', 'root_config' => 'legacy_config.yml', 'enable_authenticator_manager' => false]];",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/FirewallEntryPointTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/FirewallEntryPointTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/FirewallEntryPointTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/FirewallEntryPointTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: class FirewallEntryPointTest extends AbstractWebTestCase",
          "17: {",
          "18:     public function testItUsesTheConfiguredEntryPointWhenUsingUnknownCredentials()",
          "19:     {",
          "22:         $client->request('GET', '/secure/resource', [], [], [",
          "23:             'PHP_AUTH_USER' => 'unknown',",
          "",
          "[Removed Lines]",
          "20:         $client = $this->createClient(['test_case' => 'FirewallEntryPoint']);",
          "",
          "[Added Lines]",
          "18:     public function testItUsesTheConfiguredEntryPointFromTheExceptionListenerWithFormLoginAndNoCredentials()",
          "19:     {",
          "20:         $client = $this->createClient(['test_case' => 'FirewallEntryPoint', 'root_config' => 'config_form_login.yml']);",
          "22:         $client->request('GET', '/secure/resource');",
          "24:         $this->assertEquals(",
          "25:             EntryPointStub::RESPONSE_TEXT,",
          "26:             $client->getResponse()->getContent(),",
          "27:             \"Custom entry point wasn't started\"",
          "28:         );",
          "29:     }",
          "36:         $client = $this->createClient(['test_case' => 'FirewallEntryPoint', 'root_config' => 'legacy_config.yml']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:     }",
          "38:     {",
          "41:         $client->request('GET', '/secure/resource');",
          "",
          "[Removed Lines]",
          "37:     public function testItUsesTheConfiguredEntryPointFromTheExceptionListenerWithFormLoginAndNoCredentials(array $options)",
          "39:         $client = $this->createClient($options + ['test_case' => 'FirewallEntryPoint', 'root_config' => 'config_form_login.yml']);",
          "",
          "[Added Lines]",
          "53:     public function testLegacyItUsesTheConfiguredEntryPointFromTheExceptionListenerWithFormLoginAndNoCredentials()",
          "55:         $client = $this->createClient(['test_case' => 'FirewallEntryPoint', 'root_config' => 'legacy_config_form_login.yml']);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/FormLoginTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/FormLoginTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/FormLoginTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/FormLoginTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:         }",
          "154:     }",
          "156:     public function provideClientOptions()",
          "157:     {",
          "160:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'routes_as_path.yml', 'enable_authenticator_manager' => true]];",
          "161:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_routes_as_path.yml', 'enable_authenticator_manager' => false]];",
          "162:     }",
          "163: }",
          "",
          "[Removed Lines]",
          "158:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'config.yml', 'enable_authenticator_manager' => true]];",
          "159:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_config.yml', 'enable_authenticator_manager' => false]];",
          "",
          "[Added Lines]",
          "160:     public function testLegacyFormLogin(array $options)",
          "161:     {",
          "162:         $client = $this->createClient($options);",
          "164:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "165:         $form['_username'] = 'johannes';",
          "166:         $form['_password'] = 'test';",
          "167:         $client->submit($form);",
          "169:         $this->assertRedirect($client->getResponse(), '/profile');",
          "171:         $text = $client->followRedirect()->text(null, true);",
          "172:         $this->assertStringContainsString('Hello johannes!', $text);",
          "173:         $this->assertStringContainsString('You\\'re browsing to path \"/profile\".', $text);",
          "174:     }",
          "180:     public function testLegacyFormLogout(array $options)",
          "181:     {",
          "182:         $client = $this->createClient($options);",
          "184:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "185:         $form['_username'] = 'johannes';",
          "186:         $form['_password'] = 'test';",
          "187:         $client->submit($form);",
          "189:         $this->assertRedirect($client->getResponse(), '/profile');",
          "191:         $crawler = $client->followRedirect();",
          "192:         $text = $crawler->text(null, true);",
          "194:         $this->assertStringContainsString('Hello johannes!', $text);",
          "195:         $this->assertStringContainsString('You\\'re browsing to path \"/profile\".', $text);",
          "197:         $logoutLinks = $crawler->selectLink('Log out')->links();",
          "198:         $this->assertCount(6, $logoutLinks);",
          "199:         $this->assertSame($logoutLinks[0]->getUri(), $logoutLinks[1]->getUri());",
          "200:         $this->assertSame($logoutLinks[2]->getUri(), $logoutLinks[3]->getUri());",
          "201:         $this->assertSame($logoutLinks[4]->getUri(), $logoutLinks[5]->getUri());",
          "203:         $this->assertNotSame($logoutLinks[0]->getUri(), $logoutLinks[2]->getUri());",
          "204:         $this->assertNotSame($logoutLinks[1]->getUri(), $logoutLinks[3]->getUri());",
          "206:         $this->assertSame($logoutLinks[0]->getUri(), $logoutLinks[4]->getUri());",
          "207:         $this->assertSame($logoutLinks[1]->getUri(), $logoutLinks[5]->getUri());",
          "208:     }",
          "214:     public function testLegacyFormLoginWithCustomTargetPath(array $options)",
          "215:     {",
          "216:         $client = $this->createClient($options);",
          "218:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "219:         $form['_username'] = 'johannes';",
          "220:         $form['_password'] = 'test';",
          "221:         $form['_target_path'] = '/foo';",
          "222:         $client->submit($form);",
          "224:         $this->assertRedirect($client->getResponse(), '/foo');",
          "226:         $text = $client->followRedirect()->text(null, true);",
          "227:         $this->assertStringContainsString('Hello johannes!', $text);",
          "228:         $this->assertStringContainsString('You\\'re browsing to path \"/foo\".', $text);",
          "229:     }",
          "235:     public function testLegacyFormLoginRedirectsToProtectedResourceAfterLogin(array $options)",
          "236:     {",
          "237:         $client = $this->createClient($options);",
          "239:         $client->request('GET', '/protected_resource');",
          "240:         $this->assertRedirect($client->getResponse(), '/login');",
          "242:         $form = $client->followRedirect()->selectButton('login')->form();",
          "243:         $form['_username'] = 'johannes';",
          "244:         $form['_password'] = 'test';",
          "245:         $client->submit($form);",
          "246:         $this->assertRedirect($client->getResponse(), '/protected_resource');",
          "248:         $text = $client->followRedirect()->text(null, true);",
          "249:         $this->assertStringContainsString('Hello johannes!', $text);",
          "250:         $this->assertStringContainsString('You\\'re browsing to path \"/protected_resource\".', $text);",
          "251:     }",
          "257:     public function testLegacyLoginThrottling()",
          "258:     {",
          "259:         if (!class_exists(LoginThrottlingListener::class)) {",
          "260:             $this->markTestSkipped('Login throttling requires symfony/security-http:^5.2');",
          "261:         }",
          "263:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_login_throttling.yml', 'enable_authenticator_manager' => true]);",
          "265:         $attempts = [",
          "266:             ['johannes', 'wrong'],",
          "267:             ['johannes', 'also_wrong'],",
          "268:             ['wrong', 'wrong'],",
          "269:             ['johannes', 'wrong_again'],",
          "270:         ];",
          "271:         foreach ($attempts as $i => $attempt) {",
          "272:             $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "273:             $form['_username'] = $attempt[0];",
          "274:             $form['_password'] = $attempt[1];",
          "275:             $client->submit($form);",
          "277:             $text = $client->followRedirect()->text(null, true);",
          "278:             switch ($i) {",
          "279:                 case 0: // First attempt : Invalid credentials (OK)",
          "280:                     $this->assertStringContainsString('Invalid credentials', $text, 'Invalid response on 1st attempt');",
          "282:                     break;",
          "283:                 case 1: // Second attempt : login throttling !",
          "284:                     $this->assertStringContainsString('Too many failed login attempts, please try again in 8 minutes.', $text, 'Invalid response on 2nd attempt');",
          "286:                     break;",
          "287:                 case 2: // Third attempt with unexisting username",
          "288:                     $this->assertStringContainsString('Invalid credentials.', $text, 'Invalid response on 3rd attempt');",
          "290:                     break;",
          "291:                 case 3: // Fourth attempt : still login throttling !",
          "292:                     $this->assertStringContainsString('Too many failed login attempts, please try again in 8 minutes.', $text, 'Invalid response on 4th attempt');",
          "294:                     break;",
          "295:             }",
          "296:         }",
          "297:     }",
          "301:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'base_config.yml', 'enable_authenticator_manager' => true]];",
          "303:     }",
          "305:     public function provideLegacyClientOptions()",
          "306:     {",
          "307:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_config.yml', 'enable_authenticator_manager' => false]];",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/GuardedTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/GuardedTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/GuardedTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/GuardedTest.php"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/JsonLoginTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/JsonLoginTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/JsonLoginTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/JsonLoginTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: class JsonLoginTest extends AbstractWebTestCase",
          "20: {",
          "25:     {",
          "27:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"foo\"}}');",
          "28:         $response = $client->getResponse();",
          "",
          "[Removed Lines]",
          "24:     public function testDefaultJsonLoginSuccess(array $options)",
          "26:         $client = $this->createClient($options + ['test_case' => 'JsonLogin', 'root_config' => 'config.yml']);",
          "",
          "[Added Lines]",
          "21:     public function testDefaultJsonLoginSuccess()",
          "22:     {",
          "23:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'config.yml']);",
          "24:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"foo\"}}');",
          "25:         $response = $client->getResponse();",
          "27:         $this->assertInstanceOf(JsonResponse::class, $response);",
          "28:         $this->assertSame(200, $response->getStatusCode());",
          "29:         $this->assertSame(['message' => 'Welcome @dunglas!'], json_decode($response->getContent(), true));",
          "30:     }",
          "32:     public function testDefaultJsonLoginFailure()",
          "33:     {",
          "34:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'config.yml']);",
          "35:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"bad\"}}');",
          "36:         $response = $client->getResponse();",
          "38:         $this->assertInstanceOf(JsonResponse::class, $response);",
          "39:         $this->assertSame(401, $response->getStatusCode());",
          "40:         $this->assertSame(['error' => 'Invalid credentials.'], json_decode($response->getContent(), true));",
          "41:     }",
          "43:     public function testCustomJsonLoginSuccess()",
          "44:     {",
          "45:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'custom_handlers.yml']);",
          "46:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"foo\"}}');",
          "47:         $response = $client->getResponse();",
          "49:         $this->assertInstanceOf(JsonResponse::class, $response);",
          "50:         $this->assertSame(200, $response->getStatusCode());",
          "51:         $this->assertSame(['message' => 'Good game @dunglas!'], json_decode($response->getContent(), true));",
          "52:     }",
          "54:     public function testCustomJsonLoginFailure()",
          "55:     {",
          "56:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'custom_handlers.yml']);",
          "57:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"bad\"}}');",
          "58:         $response = $client->getResponse();",
          "60:         $this->assertInstanceOf(JsonResponse::class, $response);",
          "61:         $this->assertSame(500, $response->getStatusCode());",
          "62:         $this->assertSame(['message' => 'Something went wrong'], json_decode($response->getContent(), true));",
          "63:     }",
          "68:     public function testDefaultJsonLoginBadRequest()",
          "69:     {",
          "70:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'legacy_config.yml']);",
          "71:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], 'Not a json content');",
          "72:         $response = $client->getResponse();",
          "74:         $this->assertSame(400, $response->getStatusCode());",
          "75:         $this->assertSame('application/json', $response->headers->get('Content-Type'));",
          "76:         $this->assertSame(['type' => 'https://tools.ietf.org/html/rfc2616#section-10', 'title' => 'An error occurred', 'status' => 400, 'detail' => 'Bad Request'], json_decode($response->getContent(), true));",
          "77:     }",
          "82:     public function testLegacyDefaultJsonLoginSuccess()",
          "84:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'legacy_config.yml']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:     }",
          "39:     {",
          "41:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"bad\"}}');",
          "42:         $response = $client->getResponse();",
          "",
          "[Removed Lines]",
          "38:     public function testDefaultJsonLoginFailure(array $options)",
          "40:         $client = $this->createClient($options + ['test_case' => 'JsonLogin', 'root_config' => 'config.yml']);",
          "",
          "[Added Lines]",
          "96:     public function testLegacyDefaultJsonLoginFailure()",
          "98:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'legacy_config.yml']);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "47:     }",
          "53:     {",
          "55:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"foo\"}}');",
          "56:         $response = $client->getResponse();",
          "",
          "[Removed Lines]",
          "52:     public function testCustomJsonLoginSuccess(array $options)",
          "54:         $client = $this->createClient($options + ['test_case' => 'JsonLogin', 'root_config' => 'custom_handlers.yml']);",
          "",
          "[Added Lines]",
          "110:     public function testLegacyCustomJsonLoginSuccess()",
          "112:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'legacy_custom_handlers.yml']);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "61:     }",
          "67:     {",
          "69:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], '{\"user\": {\"login\": \"dunglas\", \"password\": \"bad\"}}');",
          "70:         $response = $client->getResponse();",
          "",
          "[Removed Lines]",
          "66:     public function testCustomJsonLoginFailure(array $options)",
          "68:         $client = $this->createClient($options + ['test_case' => 'JsonLogin', 'root_config' => 'custom_handlers.yml']);",
          "",
          "[Added Lines]",
          "124:     public function testLegacyCustomJsonLoginFailure()",
          "126:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'legacy_custom_handlers.yml']);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "75:     }",
          "81:     {",
          "83:         $client->request('POST', '/chk', [], [], ['CONTENT_TYPE' => 'application/json'], 'Not a json content');",
          "84:         $response = $client->getResponse();",
          "",
          "[Removed Lines]",
          "80:     public function testDefaultJsonLoginBadRequest(array $options)",
          "82:         $client = $this->createClient($options + ['test_case' => 'JsonLogin', 'root_config' => 'config.yml']);",
          "",
          "[Added Lines]",
          "138:     public function testLegacyDefaultJsonLoginBadRequest()",
          "140:         $client = $this->createClient(['test_case' => 'JsonLogin', 'root_config' => 'legacy_config.yml']);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     public function testLoginFailureWithLocalizedFailurePath($locale, array $options)",
          "42:     {",
          "45:         $crawler = $client->request('GET', '/'.$locale.'/login');",
          "46:         $form = $crawler->selectButton('login')->form();",
          "",
          "[Removed Lines]",
          "43:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => ($options['enable_authenticator_manager'] ? '' : 'legacy_').'localized_form_failure_handler.yml'] + $options);",
          "",
          "[Added Lines]",
          "43:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'localized_form_failure_handler.yml'] + $options);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:         $this->assertCount(1, $crawler->selectButton('login'), (string) $client->getResponse());",
          "74:     }",
          "76:     public function getLocalesAndClientConfig()",
          "77:     {",
          "82:     }",
          "83: }",
          "",
          "[Removed Lines]",
          "78:         yield ['en', ['enable_authenticator_manager' => true, 'root_config' => 'localized_routes.yml']];",
          "79:         yield ['en', ['enable_authenticator_manager' => false, 'root_config' => 'legacy_localized_routes.yml']];",
          "80:         yield ['de', ['enable_authenticator_manager' => true, 'root_config' => 'localized_routes.yml']];",
          "81:         yield ['de', ['enable_authenticator_manager' => false, 'root_config' => 'legacy_localized_routes.yml']];",
          "",
          "[Added Lines]",
          "80:     public function testLegacyLoginLogoutProcedure($locale, array $options)",
          "81:     {",
          "82:         $client = $this->createClient(['test_case' => 'StandardFormLogin'] + $options);",
          "84:         $crawler = $client->request('GET', '/'.$locale.'/login');",
          "85:         $form = $crawler->selectButton('login')->form();",
          "86:         $form['_username'] = 'johannes';",
          "87:         $form['_password'] = 'test';",
          "88:         $client->submit($form);",
          "90:         $this->assertRedirect($client->getResponse(), '/'.$locale.'/profile');",
          "91:         $this->assertEquals('Profile', $client->followRedirect()->text());",
          "93:         $client->request('GET', '/'.$locale.'/logout');",
          "94:         $this->assertRedirect($client->getResponse(), '/'.$locale.'/');",
          "95:         $this->assertEquals('Homepage', $client->followRedirect()->text());",
          "96:     }",
          "103:     public function testLegacyLoginFailureWithLocalizedFailurePath($locale, array $options)",
          "104:     {",
          "105:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_localized_form_failure_handler.yml'] + $options);",
          "107:         $crawler = $client->request('GET', '/'.$locale.'/login');",
          "108:         $form = $crawler->selectButton('login')->form();",
          "109:         $form['_username'] = 'johannes';",
          "110:         $form['_password'] = 'foobar';",
          "111:         $client->submit($form);",
          "113:         $this->assertRedirect($client->getResponse(), '/'.$locale.'/login');",
          "114:     }",
          "120:     public function testLegacyAccessRestrictedResource($locale, array $options)",
          "121:     {",
          "122:         $client = $this->createClient(['test_case' => 'StandardFormLogin'] + $options);",
          "124:         $client->request('GET', '/'.$locale.'/secure/');",
          "125:         $this->assertRedirect($client->getResponse(), '/'.$locale.'/login');",
          "126:     }",
          "132:     public function testLegacyAccessRestrictedResourceWithForward($locale, array $options)",
          "133:     {",
          "134:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_localized_routes_with_forward.yml'] + $options);",
          "136:         $crawler = $client->request('GET', '/'.$locale.'/secure/');",
          "137:         $this->assertCount(1, $crawler->selectButton('login'), (string) $client->getResponse());",
          "138:     }",
          "142:         yield ['en', ['root_config' => 'localized_routes.yml']];",
          "143:         yield ['de', ['root_config' => 'localized_routes.yml']];",
          "144:     }",
          "146:     public function getLegacyLocalesAndClientConfig()",
          "147:     {",
          "148:         yield ['en', ['root_config' => 'legacy_localized_routes.yml']];",
          "149:         yield ['de', ['root_config' => 'legacy_localized_routes.yml']];",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/LogoutTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: class LogoutTest extends AbstractWebTestCase",
          "22: {",
          "27:     {",
          "29:         $client->disableReboot();",
          "30:         $this->callInRequestContext($client, function () {",
          "31:             static::getContainer()->get('security.csrf.token_storage')->setToken('foo', 'bar');",
          "",
          "[Removed Lines]",
          "26:     public function testCsrfTokensAreClearedOnLogout(array $options)",
          "28:         $client = $this->createClient($options + ['test_case' => 'LogoutWithoutSessionInvalidation', 'root_config' => 'config.yml']);",
          "",
          "[Added Lines]",
          "23:     public function testCsrfTokensAreClearedOnLogout()",
          "24:     {",
          "25:         $client = $this->createClient(['enable_authenticator_manager' => true, 'test_case' => 'LogoutWithoutSessionInvalidation', 'root_config' => 'config.yml']);",
          "26:         $client->disableReboot();",
          "27:         $this->callInRequestContext($client, function () {",
          "28:             static::getContainer()->get('security.csrf.token_storage')->setToken('foo', 'bar');",
          "29:         });",
          "31:         $client->request('POST', '/login', [",
          "32:             '_username' => 'johannes',",
          "33:             '_password' => 'test',",
          "34:         ]);",
          "36:         $this->callInRequestContext($client, function () {",
          "37:             $this->assertTrue(static::getContainer()->get('security.csrf.token_storage')->hasToken('foo'));",
          "38:             $this->assertSame('bar', static::getContainer()->get('security.csrf.token_storage')->getToken('foo'));",
          "39:         });",
          "41:         $client->request('GET', '/logout');",
          "43:         $this->callInRequestContext($client, function () {",
          "44:             $this->assertFalse(static::getContainer()->get('security.csrf.token_storage')->hasToken('foo'));",
          "45:         });",
          "46:     }",
          "51:     public function testLegacyCsrfTokensAreClearedOnLogout()",
          "53:         $client = $this->createClient(['enable_authenticator_manager' => false, 'test_case' => 'LogoutWithoutSessionInvalidation', 'root_config' => 'config.yml']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:         });",
          "49:     }",
          "55:     {",
          "58:         $client->request('POST', '/login', ['_username' => 'johannes', '_password' => 'test']);",
          "59:         $client->request('GET', '/logout');",
          "",
          "[Removed Lines]",
          "54:     public function testAccessControlDoesNotApplyOnLogout(array $options)",
          "56:         $client = $this->createClient($options + ['test_case' => 'Logout', 'root_config' => 'config_access.yml']);",
          "",
          "[Added Lines]",
          "76:     public function testAccessControlDoesNotApplyOnLogout()",
          "77:     {",
          "78:         $client = $this->createClient(['enable_authenticator_manager' => true, 'test_case' => 'Logout', 'root_config' => 'config_access.yml']);",
          "80:         $client->request('POST', '/login', ['_username' => 'johannes', '_password' => 'test']);",
          "81:         $client->request('GET', '/logout');",
          "83:         $this->assertRedirect($client->getResponse(), '/');",
          "84:     }",
          "89:     public function testLegacyAccessControlDoesNotApplyOnLogout()",
          "91:         $client = $this->createClient(['enable_authenticator_manager' => false, 'test_case' => 'Logout', 'root_config' => 'config_access.yml']);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/MissingUserProviderTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/MissingUserProviderTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/MissingUserProviderTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/MissingUserProviderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional;",
          "14: class MissingUserProviderTest extends AbstractWebTestCase",
          "15: {",
          "16:     public function testUserProviderIsNeeded()",
          "17:     {",
          "18:         $client = $this->createClient(['test_case' => 'MissingUserProvider', 'root_config' => 'config.yml', 'debug' => true]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use Symfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException;",
          "19:     {",
          "20:         $client = $this->createClient(['enable_authenticator_manager' => true, 'test_case' => 'MissingUserProvider', 'root_config' => 'config.yml', 'debug' => true]);",
          "22:         $this->expectException(InvalidConfigurationException::class);",
          "23:         $this->expectExceptionMessage('\"default\" firewall requires a user provider but none was defined');",
          "25:         $client->request('GET', '/', [], [], [",
          "26:             'PHP_AUTH_USER' => 'username',",
          "27:             'PHP_AUTH_PW' => 'pa$$word',",
          "28:         ]);",
          "29:     }",
          "31:     public function testLegacyUserProviderIsNeeded()",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeCookieTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeCookieTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeCookieTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeCookieTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:         $this->assertSame($expectedSecureFlag, $cookies['']['/']['REMEMBERME']->isSecure());",
          "23:     }",
          "27:     {",
          "28:         $client = $this->createClient(['test_case' => 'RememberMeCookie', 'root_config' => 'legacy_config.yml']);",
          "",
          "[Removed Lines]",
          "26:     public function testOldSessionRememberMeSecureCookieFlagAuto($https, $expectedSecureFlag)",
          "",
          "[Added Lines]",
          "29:     public function testLegacySessionRememberMeSecureCookieFlagAuto($https, $expectedSecureFlag)",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: class RememberMeTest extends AbstractWebTestCase",
          "15: {",
          "17:     {",
          "22:     }",
          "28:     {",
          "29:         $client = $this->createClient(array_merge_recursive(['root_config' => 'config.yml', 'test_case' => 'RememberMe'], $options));",
          "",
          "[Removed Lines]",
          "16:     public function provideRememberMeSystems()",
          "18:         foreach ($this->provideSecuritySystems() as $securitySystem) {",
          "19:             yield [$securitySystem[0] + ['root_config' => 'config_session.yml']];",
          "20:             yield [$securitySystem[0] + ['root_config' => 'config_persistent.yml']];",
          "21:         }",
          "27:     public function testRememberMe(array $options)",
          "",
          "[Added Lines]",
          "19:     public function testRememberMe(array $options)",
          "20:     {",
          "21:         $client = $this->createClient(array_merge_recursive(['root_config' => 'config.yml', 'test_case' => 'RememberMe'], $options));",
          "22:         $client->request('POST', '/login', [",
          "23:             '_username' => 'johannes',",
          "24:             '_password' => 'test',",
          "25:         ]);",
          "26:         $this->assertSame(302, $client->getResponse()->getStatusCode());",
          "28:         $client->request('GET', '/profile');",
          "29:         $this->assertSame('johannes', $client->getResponse()->getContent());",
          "32:         $client->getCookieJar()->expire('MOCKSESSID');",
          "34:         $client->request('GET', '/profile');",
          "35:         $this->assertSame('johannes', $client->getResponse()->getContent(), 'Not logged in after resetting session.');",
          "38:         $client->request('GET', '/logout');",
          "39:         $this->assertSame(302, $client->getResponse()->getStatusCode(), 'Logout unsuccessful.');",
          "40:         $this->assertNull($client->getCookieJar()->get('REMEMBERME'));",
          "41:     }",
          "43:     public function testUserChangeClearsCookie()",
          "44:     {",
          "45:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'clear_on_change_config.yml']);",
          "47:         $client->request('POST', '/login', [",
          "48:             '_username' => 'johannes',",
          "49:             '_password' => 'test',",
          "50:         ]);",
          "52:         $this->assertSame(302, $client->getResponse()->getStatusCode());",
          "53:         $cookieJar = $client->getCookieJar();",
          "54:         $this->assertNotNull($cookieJar->get('REMEMBERME'));",
          "56:         $client->request('GET', '/profile');",
          "57:         $this->assertRedirect($client->getResponse(), '/login');",
          "58:         $this->assertNull($cookieJar->get('REMEMBERME'));",
          "59:     }",
          "61:     public function testSessionLessRememberMeLogout()",
          "63:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'stateless_config.yml']);",
          "65:         $client->request('POST', '/login', [",
          "66:             '_username' => 'johannes',",
          "67:             '_password' => 'test',",
          "68:         ]);",
          "70:         $cookieJar = $client->getCookieJar();",
          "71:         $cookieJar->expire(session_name());",
          "73:         $this->assertNotNull($cookieJar->get('REMEMBERME'));",
          "74:         $this->assertSame('lax', $cookieJar->get('REMEMBERME')->getSameSite());",
          "76:         $client->request('GET', '/logout');",
          "77:         $this->assertSame(302, $client->getResponse()->getStatusCode(), 'Logout unsuccessful.');",
          "78:         $this->assertNull($cookieJar->get('REMEMBERME'));",
          "85:     public function testLegacyRememberMe(array $options)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:     }",
          "56:     {",
          "59:         $client->request('POST', '/login', [",
          "60:             '_username' => 'johannes',",
          "",
          "[Removed Lines]",
          "55:     public function testUserChangeClearsCookie(array $options)",
          "57:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'clear_on_change_config.yml'] + $options);",
          "",
          "[Added Lines]",
          "113:     public function testLegacyUserChangeClearsCookie()",
          "115:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'clear_on_change_config.yml']);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:     }",
          "77:     {",
          "80:         $client->request('POST', '/login', [",
          "81:             '_username' => 'johannes',",
          "",
          "[Removed Lines]",
          "76:     public function testSessionLessRememberMeLogout(array $options)",
          "78:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'stateless_config.yml'] + $options);",
          "",
          "[Added Lines]",
          "134:     public function testLegacySessionLessRememberMeLogout()",
          "136:         $client = $this->createClient(['test_case' => 'RememberMe', 'root_config' => 'stateless_config.yml']);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "92:         $this->assertSame(302, $client->getResponse()->getStatusCode(), 'Logout unsuccessful.');",
          "93:         $this->assertNull($cookieJar->get('REMEMBERME'));",
          "94:     }",
          "95: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154:     public function provideConfigs()",
          "155:     {",
          "156:         yield [['root_config' => 'config_session.yml']];",
          "157:         yield [['root_config' => 'config_persistent.yml']];",
          "158:     }",
          "160:     public function provideLegacyConfigs()",
          "161:     {",
          "162:         yield [['root_config' => 'legacy_config_session.yml']];",
          "163:         yield [['root_config' => 'legacy_config_persistent.yml']];",
          "164:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:         $this->assertAllowed($allowedClient, '/protected-via-expression');",
          "121:     }",
          "127:     {",
          "128:         $this->expectException(\\LogicException::class);",
          "129:         $this->expectExceptionMessage('The given value \"256.357.458.559\" in the \"security.access_control\" config option is not a valid IP address.');",
          "132:         $client->request('GET', '/unprotected_resource');",
          "133:     }",
          "139:     {",
          "141:         $client->request('GET', '/en/');",
          "143:         $this->assertEquals(200, $client->getResponse()->getStatusCode(), (string) $client->getResponse());",
          "",
          "[Removed Lines]",
          "126:     public function testInvalidIpsInAccessControl(array $options)",
          "131:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'invalid_ip_access_control.yml'] + $options);",
          "138:     public function testPublicHomepage(array $options)",
          "140:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'config.yml'] + $options);",
          "",
          "[Added Lines]",
          "123:     public function testInvalidIpsInAccessControl()",
          "124:     {",
          "125:         $this->expectException(\\LogicException::class);",
          "126:         $this->expectExceptionMessage('The given value \"256.357.458.559\" in the \"security.access_control\" config option is not a valid IP address.');",
          "128:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'invalid_ip_access_control.yml']);",
          "129:         $client->request('GET', '/unprotected_resource');",
          "130:     }",
          "132:     public function testPublicHomepage()",
          "133:     {",
          "134:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'base_config.yml']);",
          "135:         $client->request('GET', '/en/');",
          "137:         $this->assertEquals(200, $client->getResponse()->getStatusCode(), (string) $client->getResponse());",
          "138:         $this->assertTrue($client->getResponse()->headers->getCacheControlDirective('public'));",
          "139:         $this->assertSame(0, self::getContainer()->get('session')->getUsageIndex());",
          "140:     }",
          "145:     public function testLegacyRoutingErrorIsNotExposedForProtectedResourceWhenAnonymous(array $options)",
          "146:     {",
          "147:         $client = $this->createClient($options);",
          "148:         $client->request('GET', '/protected_resource');",
          "150:         $this->assertRedirect($client->getResponse(), '/login');",
          "151:     }",
          "157:     public function testLegacyRoutingErrorIsExposedWhenNotProtected(array $options)",
          "158:     {",
          "159:         $client = $this->createClient($options);",
          "160:         $client->request('GET', '/unprotected_resource');",
          "162:         $this->assertEquals(404, $client->getResponse()->getStatusCode(), (string) $client->getResponse());",
          "163:     }",
          "169:     public function testLegacyRoutingErrorIsNotExposedForProtectedResourceWhenLoggedInWithInsufficientRights(array $options)",
          "170:     {",
          "171:         $client = $this->createClient($options);",
          "173:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "174:         $form['_username'] = 'johannes';",
          "175:         $form['_password'] = 'test';",
          "176:         $client->submit($form);",
          "178:         $client->request('GET', '/highly_protected_resource');",
          "180:         $this->assertNotEquals(404, $client->getResponse()->getStatusCode());",
          "181:     }",
          "187:     public function testLegacySecurityConfigurationForSingleIPAddress(array $options)",
          "188:     {",
          "189:         $allowedClient = $this->createClient($options, ['REMOTE_ADDR' => '10.10.10.10']);",
          "191:         $this->ensureKernelShutdown();",
          "193:         $barredClient = $this->createClient($options, ['REMOTE_ADDR' => '10.10.20.10']);",
          "195:         $this->assertAllowed($allowedClient, '/secured-by-one-ip');",
          "196:         $this->assertRestricted($barredClient, '/secured-by-one-ip');",
          "197:     }",
          "203:     public function testLegacySecurityConfigurationForMultipleIPAddresses(array $options)",
          "204:     {",
          "205:         $allowedClientA = $this->createClient($options, ['REMOTE_ADDR' => '1.1.1.1']);",
          "207:         $this->ensureKernelShutdown();",
          "209:         $allowedClientB = $this->createClient($options, ['REMOTE_ADDR' => '2.2.2.2']);",
          "211:         $this->ensureKernelShutdown();",
          "213:         $allowedClientC = $this->createClient($options, ['REMOTE_ADDR' => '203.0.113.0']);",
          "215:         $this->ensureKernelShutdown();",
          "217:         $barredClient = $this->createClient($options, ['REMOTE_ADDR' => '192.168.1.1']);",
          "219:         $this->assertAllowed($allowedClientA, '/secured-by-two-ips');",
          "220:         $this->assertAllowed($allowedClientB, '/secured-by-two-ips');",
          "222:         $this->assertRestricted($allowedClientA, '/secured-by-one-real-ip');",
          "223:         $this->assertRestricted($allowedClientA, '/secured-by-one-real-ipv6');",
          "224:         $this->assertAllowed($allowedClientC, '/secured-by-one-real-ip-with-mask');",
          "226:         $this->assertRestricted($barredClient, '/secured-by-two-ips');",
          "227:     }",
          "233:     public function testLegacySecurityConfigurationForExpression(array $options)",
          "234:     {",
          "235:         $allowedClient = $this->createClient($options, ['HTTP_USER_AGENT' => 'Firefox 1.0']);",
          "236:         $this->assertAllowed($allowedClient, '/protected-via-expression');",
          "237:         $this->ensureKernelShutdown();",
          "239:         $barredClient = $this->createClient($options, []);",
          "240:         $this->assertRestricted($barredClient, '/protected-via-expression');",
          "241:         $this->ensureKernelShutdown();",
          "243:         $allowedClient = $this->createClient($options, []);",
          "245:         $allowedClient->request('GET', '/protected-via-expression');",
          "246:         $form = $allowedClient->followRedirect()->selectButton('login')->form();",
          "247:         $form['_username'] = 'johannes';",
          "248:         $form['_password'] = 'test';",
          "249:         $allowedClient->submit($form);",
          "250:         $this->assertRedirect($allowedClient->getResponse(), '/protected-via-expression');",
          "251:         $this->assertAllowed($allowedClient, '/protected-via-expression');",
          "252:     }",
          "257:     public function testLegacyInvalidIpsInAccessControl()",
          "262:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'invalid_ip_access_control.yml', 'enable_authenticator_manager' => false]);",
          "269:     public function testLegacyPublicHomepage()",
          "271:         $client = $this->createClient(['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_config.yml']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:     public function provideClientOptions()",
          "161:     {",
          "164:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'routes_as_path.yml', 'enable_authenticator_manager' => true]];",
          "166:     }",
          "168:     public function provideConfigs()",
          "169:     {",
          "170:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_config.yml']];",
          "171:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_routes_as_path.yml']];",
          "",
          "[Removed Lines]",
          "162:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'config.yml', 'enable_authenticator_manager' => true]];",
          "163:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_config.yml', 'enable_authenticator_manager' => false]];",
          "165:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'legacy_routes_as_path.yml', 'enable_authenticator_manager' => false]];",
          "",
          "[Added Lines]",
          "293:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'base_config.yml', 'enable_authenticator_manager' => true]];",
          "294:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'routes_as_path.yml', 'enable_authenticator_manager' => true]];",
          "295:     }",
          "297:     public function provideLegacyClientOptions()",
          "298:     {",
          "299:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'base_config.yml', 'enable_authenticator_manager' => true]];",
          "304:     {",
          "305:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'base_config.yml']];",
          "306:         yield [['test_case' => 'StandardFormLogin', 'root_config' => 'routes_as_path.yml']];",
          "307:     }",
          "309:     public function provideLegacyConfigs()",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:         $this->assertSame($token, $security->getToken());",
          "36:     }",
          "39:     {",
          "50:     }",
          "56:     {",
          "58:         $client->disableReboot();",
          "",
          "[Removed Lines]",
          "38:     public function userWillBeMarkedAsChangedIfRolesHasChangedProvider()",
          "40:         return [",
          "41:             [",
          "42:                 new InMemoryUser('user1', 'test', ['ROLE_ADMIN']),",
          "43:                 new InMemoryUser('user1', 'test', ['ROLE_USER']),",
          "44:             ],",
          "45:             [",
          "46:                 new UserWithoutEquatable('user1', 'test', ['ROLE_ADMIN']),",
          "47:                 new UserWithoutEquatable('user1', 'test', ['ROLE_USER']),",
          "48:             ],",
          "49:         ];",
          "55:     public function testUserWillBeMarkedAsChangedIfRolesHasChanged(UserInterface $userWithAdminRole, UserInterface $userWithoutAdminRole)",
          "57:         $client = $this->createClient(['test_case' => 'AbstractTokenCompareRoles', 'root_config' => 'config.yml']);",
          "",
          "[Added Lines]",
          "41:     public function testUserWillBeMarkedAsChangedIfRolesHasChanged(UserInterface $userWithAdminRole, UserInterface $userWithoutAdminRole)",
          "43:         $client = $this->createClient(['test_case' => 'AbstractTokenCompareRoles', 'root_config' => 'config.yml']);",
          "44:         $client->disableReboot();",
          "47:         $userProvider = static::$kernel->getContainer()->get('security.user.provider.array');",
          "48:         $userProvider->addUser($userWithAdminRole);",
          "50:         $client->request('POST', '/login', [",
          "51:             '_username' => 'user1',",
          "52:             '_password' => 'test',",
          "53:         ]);",
          "56:         $client->request('GET', '/admin');",
          "57:         $this->assertEquals(200, $client->getResponse()->getStatusCode());",
          "60:         $userProvider->setUser('user1', $userWithoutAdminRole);",
          "63:         $client->request('GET', '/admin');",
          "64:         $this->assertEquals(302, $client->getResponse()->getStatusCode());",
          "71:     public function testLegacyUserWillBeMarkedAsChangedIfRolesHasChanged(UserInterface $userWithAdminRole, UserInterface $userWithoutAdminRole)",
          "73:         $client = $this->createClient(['test_case' => 'AbstractTokenCompareRoles', 'root_config' => 'legacy_config.yml']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:         $client->request('GET', '/admin');",
          "78:         $this->assertEquals(302, $client->getResponse()->getStatusCode());",
          "79:     }",
          "80: }",
          "82: final class UserWithoutEquatable implements UserInterface, PasswordAuthenticatedUserInterface",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     public function testLegacyServiceIsFunctional()",
          "101:     {",
          "102:         $kernel = self::createKernel(['test_case' => 'SecurityHelper', 'root_config' => 'legacy_config.yml']);",
          "103:         $kernel->boot();",
          "104:         $container = $kernel->getContainer();",
          "107:         $user = new InMemoryUser('foo', 'pass');",
          "108:         $token = new UsernamePasswordToken($user, '', 'provider', ['ROLE_USER']);",
          "109:         $container->get('functional.test.security.token_storage')->setToken($token);",
          "111:         $security = $container->get('functional_test.security.helper');",
          "112:         $this->assertTrue($security->isGranted('ROLE_USER'));",
          "113:         $this->assertSame($token, $security->getToken());",
          "114:     }",
          "116:     public function userWillBeMarkedAsChangedIfRolesHasChangedProvider()",
          "117:     {",
          "118:         return [",
          "119:             [",
          "120:                 new InMemoryUser('user1', 'test', ['ROLE_ADMIN']),",
          "121:                 new InMemoryUser('user1', 'test', ['ROLE_USER']),",
          "122:             ],",
          "123:             [",
          "124:                 new UserWithoutEquatable('user1', 'test', ['ROLE_ADMIN']),",
          "125:                 new UserWithoutEquatable('user1', 'test', ['ROLE_USER']),",
          "126:             ],",
          "127:         ];",
          "128:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SwitchUserTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SwitchUserTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/SwitchUserTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/SwitchUserTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     {",
          "26:         $client->request('GET', '/profile?_switch_user='.$targetUser);",
          "",
          "[Removed Lines]",
          "22:     public function testSwitchUser($originalUser, $authenticatorManagerEnabled, $targetUser, $expectedUser, $expectedStatus)",
          "24:         $client = $this->createAuthenticatedClient($originalUser, ['enable_authenticator_manager' => $authenticatorManagerEnabled]);",
          "",
          "[Added Lines]",
          "22:     public function testSwitchUser($originalUser, $targetUser, $expectedUser, $expectedStatus)",
          "24:         $client = $this->createAuthenticatedClient($originalUser, ['root_config' => 'switchuser.yml']);",
          "26:         $client->request('GET', '/profile?_switch_user='.$targetUser);",
          "28:         $this->assertEquals($expectedStatus, $client->getResponse()->getStatusCode());",
          "29:         $this->assertEquals($expectedUser, $client->getProfile()->getCollector('security')->getUser());",
          "30:     }",
          "35:     public function testLegacySwitchUser($originalUser, $targetUser, $expectedUser, $expectedStatus)",
          "36:     {",
          "37:         $client = $this->createAuthenticatedClient($originalUser, ['root_config' => 'legacy_switchuser.yml']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     public function getTestParameters()",
          "76:     {",
          "77:         return [",
          "86:         ];",
          "87:     }",
          "",
          "[Removed Lines]",
          "78:             'unauthorized_user_cannot_switch' => ['user_cannot_switch_1', true, 'user_cannot_switch_1', 'user_cannot_switch_1', 403],",
          "79:             'legacy_unauthorized_user_cannot_switch' => ['user_cannot_switch_1', false, 'user_cannot_switch_1', 'user_cannot_switch_1', 403],",
          "80:             'authorized_user_can_switch' => ['user_can_switch', true, 'user_cannot_switch_1', 'user_cannot_switch_1', 200],",
          "81:             'legacy_authorized_user_can_switch' => ['user_can_switch', false, 'user_cannot_switch_1', 'user_cannot_switch_1', 200],",
          "82:             'authorized_user_cannot_switch_to_non_existent' => ['user_can_switch', true, 'user_does_not_exist', 'user_can_switch', 403],",
          "83:             'legacy_authorized_user_cannot_switch_to_non_existent' => ['user_can_switch', false, 'user_does_not_exist', 'user_can_switch', 403],",
          "84:             'authorized_user_can_switch_to_himself' => ['user_can_switch', true, 'user_can_switch', 'user_can_switch', 200],",
          "85:             'legacy_authorized_user_can_switch_to_himself' => ['user_can_switch', false, 'user_can_switch', 'user_can_switch', 200],",
          "",
          "[Added Lines]",
          "91:             'unauthorized_user_cannot_switch' => ['user_cannot_switch_1', 'user_cannot_switch_1', 'user_cannot_switch_1', 403],",
          "92:             'authorized_user_can_switch' => ['user_can_switch', 'user_cannot_switch_1', 'user_cannot_switch_1', 200],",
          "93:             'authorized_user_cannot_switch_to_non_existent' => ['user_can_switch', 'user_does_not_exist', 'user_can_switch', 403],",
          "94:             'authorized_user_can_switch_to_himself' => ['user_can_switch', 'user_can_switch', 'user_can_switch', 200],",
          "95:         ];",
          "96:     }",
          "98:     public function getLegacyTestParameters()",
          "99:     {",
          "100:         return [",
          "101:             'legacy_unauthorized_user_cannot_switch' => ['user_cannot_switch_1', 'user_cannot_switch_1', 'user_cannot_switch_1', 403],",
          "102:             'legacy_authorized_user_can_switch' => ['user_can_switch', 'user_cannot_switch_1', 'user_cannot_switch_1', 200],",
          "103:             'legacy_authorized_user_cannot_switch_to_non_existent' => ['user_can_switch', 'user_does_not_exist', 'user_can_switch', 403],",
          "104:             'legacy_authorized_user_can_switch_to_himself' => ['user_can_switch', 'user_can_switch', 'user_can_switch', 200],",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php||src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php -> src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php"
        ],
        "src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php||src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php -> src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "25: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "28: class_exists(AuthenticationEvents::class);",
          "29: class_exists(AuthenticationFailureEvent::class);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', AuthenticationProviderManager::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php -> src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "17: use Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException;",
          "24: class AnonymousAuthenticationProvider implements AuthenticationProviderInterface",
          "25: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', AnonymousAuthenticationProvider::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php||src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php -> src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface;",
          "15: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" interface is deprecated, use the new authenticator system instead.', AuthenticationProviderInterface::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php -> src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "25: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "33: class DaoAuthenticationProvider extends UserAuthenticationProvider",
          "34: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', DaoAuthenticationProvider::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php -> src/Symfony/Component/Security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "22: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', LdapBindAuthenticationProvider::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php -> src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: use Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface;",
          "19: use Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', PreAuthenticatedAuthenticationProvider::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Provider/RememberMeAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/RememberMeAuthenticationProvider.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Provider/RememberMeAuthenticationProvider.php -> src/Symfony/Component/Security/Core/Authentication/Provider/RememberMeAuthenticationProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface;",
          "20: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "22: class RememberMeAuthenticationProvider implements AuthenticationProviderInterface",
          "23: {",
          "24:     private $userChecker;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', RememberMeAuthenticationProvider::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php||src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php -> src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: use Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface;",
          "23: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "30: abstract class UserAuthenticationProvider implements AuthenticationProviderInterface",
          "31: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', UserAuthenticationProvider::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php||src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php": [
          "File: src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php -> src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php"
        ],
        "src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php||src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php": [
          "File: src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php -> src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "15: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "22: final class AuthenticationFailureEvent extends AuthenticationEvent",
          "23: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent;",
          "18: trigger_deprecation('symfony/security-core', '5.3', 'The \"%s\" class is deprecated, use \"%s\" with the new authenticator system instead.', AuthenticationFailureEvent::class, LoginFailureEvent::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php": [
          "File: src/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php -> src/Symfony/Component/Security/Core/Tests/Authentication/AuthenticationProviderManagerTest.php"
        ],
        "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php": [
          "File: src/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php -> src/Symfony/Component/Security/Core/Tests/Authentication/Provider/AnonymousAuthenticationProviderTest.php"
        ],
        "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/LdapBindAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/LdapBindAuthenticationProviderTest.php": [
          "File: src/Symfony/Component/Security/Core/Tests/Authentication/Provider/LdapBindAuthenticationProviderTest.php -> src/Symfony/Component/Security/Core/Tests/Authentication/Provider/LdapBindAuthenticationProviderTest.php"
        ],
        "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php": [
          "File: src/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php -> src/Symfony/Component/Security/Core/Tests/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php"
        ],
        "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php||src/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php": [
          "File: src/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php -> src/Symfony/Component/Security/Core/Tests/Authentication/Provider/RememberMeAuthenticationProviderTest.php"
        ],
        "src/Symfony/Component/Security/Guard/AbstractGuardAuthenticator.php||src/Symfony/Component/Security/Guard/AbstractGuardAuthenticator.php": [
          "File: src/Symfony/Component/Security/Guard/AbstractGuardAuthenticator.php -> src/Symfony/Component/Security/Guard/AbstractGuardAuthenticator.php"
        ],
        "src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php||src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php": [
          "File: src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php -> src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "17: use Symfony\\Component\\Security\\Core\\Security;",
          "18: use Symfony\\Component\\Security\\Guard\\AbstractGuardAuthenticator;",
          "25: abstract class AbstractFormLoginAuthenticator extends AbstractGuardAuthenticator",
          "26: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: use Symfony\\Component\\Security\\Http\\Firewall\\AnonymousAuthenticationListener;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/Authenticator/GuardBridgeAuthenticator.php||src/Symfony/Component/Security/Guard/Authenticator/GuardBridgeAuthenticator.php": [
          "File: src/Symfony/Component/Security/Guard/Authenticator/GuardBridgeAuthenticator.php -> src/Symfony/Component/Security/Guard/Authenticator/GuardBridgeAuthenticator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\UserPassportInterface;",
          "33: use Symfony\\Component\\Security\\Http\\EntryPoint\\AuthenticationEntryPointInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', GuardBridgeAuthenticator::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/AuthenticatorInterface.php||src/Symfony/Component/Security/Guard/AuthenticatorInterface.php": [
          "File: src/Symfony/Component/Security/Guard/AuthenticatorInterface.php -> src/Symfony/Component/Security/Guard/AuthenticatorInterface.php"
        ],
        "src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php||src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php -> src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: use Symfony\\Component\\Security\\Http\\Firewall\\AbstractListener;",
          "29: use Symfony\\Component\\Security\\Http\\RememberMe\\RememberMeServicesInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', GuardAuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php||src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php": [
          "File: src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php -> src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: use Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface;",
          "23: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', GuardAuthenticatorHandler::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/PasswordAuthenticatedInterface.php||src/Symfony/Component/Security/Guard/PasswordAuthenticatedInterface.php": [
          "File: src/Symfony/Component/Security/Guard/PasswordAuthenticatedInterface.php -> src/Symfony/Component/Security/Guard/PasswordAuthenticatedInterface.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Security\\Guard;",
          "17: interface PasswordAuthenticatedInterface",
          "18: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', PasswordAuthenticatedInterface::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/Provider/GuardAuthenticationProvider.php||src/Symfony/Component/Security/Guard/Provider/GuardAuthenticationProvider.php": [
          "File: src/Symfony/Component/Security/Guard/Provider/GuardAuthenticationProvider.php -> src/Symfony/Component/Security/Guard/Provider/GuardAuthenticationProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: use Symfony\\Component\\Security\\Guard\\Token\\GuardTokenInterface;",
          "30: use Symfony\\Component\\Security\\Guard\\Token\\PreAuthenticationGuardToken;",
          "38: class GuardAuthenticationProvider implements AuthenticationProviderInterface",
          "39: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', GuardAuthenticationProvider::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/Tests/Authenticator/FormLoginAuthenticatorTest.php||src/Symfony/Component/Security/Guard/Tests/Authenticator/FormLoginAuthenticatorTest.php": [
          "File: src/Symfony/Component/Security/Guard/Tests/Authenticator/FormLoginAuthenticatorTest.php -> src/Symfony/Component/Security/Guard/Tests/Authenticator/FormLoginAuthenticatorTest.php"
        ],
        "src/Symfony/Component/Security/Guard/Tests/Authenticator/GuardBridgeAuthenticatorTest.php||src/Symfony/Component/Security/Guard/Tests/Authenticator/GuardBridgeAuthenticatorTest.php": [
          "File: src/Symfony/Component/Security/Guard/Tests/Authenticator/GuardBridgeAuthenticatorTest.php -> src/Symfony/Component/Security/Guard/Tests/Authenticator/GuardBridgeAuthenticatorTest.php"
        ],
        "src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php||src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php": [
          "File: src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php -> src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php"
        ],
        "src/Symfony/Component/Security/Guard/Tests/GuardAuthenticatorHandlerTest.php||src/Symfony/Component/Security/Guard/Tests/GuardAuthenticatorHandlerTest.php": [
          "File: src/Symfony/Component/Security/Guard/Tests/GuardAuthenticatorHandlerTest.php -> src/Symfony/Component/Security/Guard/Tests/GuardAuthenticatorHandlerTest.php"
        ],
        "src/Symfony/Component/Security/Guard/Tests/Provider/GuardAuthenticationProviderTest.php||src/Symfony/Component/Security/Guard/Tests/Provider/GuardAuthenticationProviderTest.php": [
          "File: src/Symfony/Component/Security/Guard/Tests/Provider/GuardAuthenticationProviderTest.php -> src/Symfony/Component/Security/Guard/Tests/Provider/GuardAuthenticationProviderTest.php"
        ],
        "src/Symfony/Component/Security/Guard/Token/GuardTokenInterface.php||src/Symfony/Component/Security/Guard/Token/GuardTokenInterface.php": [
          "File: src/Symfony/Component/Security/Guard/Token/GuardTokenInterface.php -> src/Symfony/Component/Security/Guard/Token/GuardTokenInterface.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', GuardTokenInterface::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/Token/PostAuthenticationGuardToken.php||src/Symfony/Component/Security/Guard/Token/PostAuthenticationGuardToken.php": [
          "File: src/Symfony/Component/Security/Guard/Token/PostAuthenticationGuardToken.php -> src/Symfony/Component/Security/Guard/Token/PostAuthenticationGuardToken.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\AbstractToken;",
          "15: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', PostAuthenticationGuardToken::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Guard/Token/PreAuthenticationGuardToken.php||src/Symfony/Component/Security/Guard/Token/PreAuthenticationGuardToken.php": [
          "File: src/Symfony/Component/Security/Guard/Token/PreAuthenticationGuardToken.php -> src/Symfony/Component/Security/Guard/Token/PreAuthenticationGuardToken.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\AbstractToken;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: trigger_deprecation('symfony/security-guard', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', PreAuthenticationGuardToken::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: use Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface;",
          "32: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', AbstractAuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php||src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php -> src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: use Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface;",
          "26: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', AbstractPreAuthenticatedListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface;",
          "20: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "23: class_exists(AnonymousToken::class);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', AnonymousAuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: use Symfony\\Component\\Security\\Http\\EntryPoint\\AuthenticationEntryPointInterface;",
          "23: use Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface;",
          "32: class BasicAuthenticationListener extends AbstractListener",
          "33: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', AnonymousAuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/RememberMeListener.php||src/Symfony/Component/Security/Http/Firewall/RememberMeListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/RememberMeListener.php -> src/Symfony/Component/Security/Http/Firewall/RememberMeListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: use Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface;",
          "25: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "34: class RememberMeListener extends AbstractListener",
          "35: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', RememberMeListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: use Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException;",
          "19: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "27: class RemoteUserAuthenticationListener extends AbstractPreAuthenticatedListener",
          "28: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', RemoteUserAuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: use Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface;",
          "30: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "38: class UsernamePasswordFormAuthenticationListener extends AbstractAuthenticationListener",
          "39: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', UsernamePasswordFormAuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordJsonAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/UsernamePasswordJsonAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/UsernamePasswordJsonAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/UsernamePasswordJsonAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "37: use Symfony\\Contracts\\Translation\\TranslatorInterface;",
          "47: class UsernamePasswordJsonAuthenticationListener extends AbstractListener",
          "48: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', UsernamePasswordJsonAuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/X509AuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/X509AuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/X509AuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/X509AuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: use Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException;",
          "19: use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;",
          "26: class X509AuthenticationListener extends AbstractPreAuthenticatedListener",
          "27: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: trigger_deprecation('symfony/security-http', '5.3', 'The \"%s\" class is deprecated, use the new authenticator system instead.', X509AuthenticationListener::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/AbstractPreAuthenticatedListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/AbstractPreAuthenticatedListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/AbstractPreAuthenticatedListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/AbstractPreAuthenticatedListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/AnonymousAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/AnonymousAuthenticationListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/AnonymousAuthenticationListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/AnonymousAuthenticationListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/BasicAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/BasicAuthenticationListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/BasicAuthenticationListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/BasicAuthenticationListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/RememberMeListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/RememberMeListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/RememberMeListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/RememberMeListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/RemoteUserAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/RemoteUserAuthenticationListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/RemoteUserAuthenticationListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/RemoteUserAuthenticationListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordFormAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordFormAuthenticationListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordFormAuthenticationListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordFormAuthenticationListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordJsonAuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordJsonAuthenticationListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordJsonAuthenticationListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/UsernamePasswordJsonAuthenticationListenerTest.php"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/X509AuthenticationListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/X509AuthenticationListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/X509AuthenticationListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/X509AuthenticationListenerTest.php"
        ]
      }
    },
    {
      "candidate_hash": "ca80ee3cd6af13b95c76387d1533a1249e4fab06",
      "candidate_info": {
        "commit_hash": "ca80ee3cd6af13b95c76387d1533a1249e4fab06",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/ca80ee3cd6af13b95c76387d1533a1249e4fab06",
        "files": [
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
          "src/Symfony/Component/PasswordHasher/Hasher/UserPasswordHasher.php",
          "src/Symfony/Component/PasswordHasher/Tests/Hasher/UserPasswordHasherTest.php",
          "src/Symfony/Component/Security/Http/Firewall/AccessListener.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/AccessListenerTest.php"
        ],
        "message": "[Security] Fix wrong cache directive when using the new PUBLIC_ACCESS attribute",
        "before_after_code_files": [
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
          "src/Symfony/Component/PasswordHasher/Hasher/UserPasswordHasher.php||src/Symfony/Component/PasswordHasher/Hasher/UserPasswordHasher.php",
          "src/Symfony/Component/PasswordHasher/Tests/Hasher/UserPasswordHasherTest.php||src/Symfony/Component/PasswordHasher/Tests/Hasher/UserPasswordHasherTest.php",
          "src/Symfony/Component/Security/Http/Firewall/AccessListener.php||src/Symfony/Component/Security/Http/Firewall/AccessListener.php",
          "src/Symfony/Component/Security/Http/Tests/Firewall/AccessListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/AccessListenerTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php"
          ],
          "candidate": [
            "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle\\Security;",
          "14: use Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider;",
          "15: use Symfony\\Component\\Security\\Core\\User\\User;",
          "16: use Symfony\\Component\\Security\\Core\\User\\UserInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use Symfony\\Component\\Security\\Core\\User\\InMemoryUser;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:     {",
          "40:         $user = $this->inner->refreshUser($user);",
          "43:         $alterUser($user);",
          "45:         return $user;",
          "",
          "[Removed Lines]",
          "42:         $alterUser = \\Closure::bind(function (User $user) { $user->password = 'foo'; }, null, User::class);",
          "",
          "[Added Lines]",
          "43:         $alterUser = \\Closure::bind(function (InMemoryUser $user) { $user->password = 'foo'; }, null, class_exists(User::class) ? User::class : InMemoryUser::class);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/PasswordHasher/Hasher/UserPasswordHasher.php||src/Symfony/Component/PasswordHasher/Hasher/UserPasswordHasher.php": [
          "File: src/Symfony/Component/PasswordHasher/Hasher/UserPasswordHasher.php -> src/Symfony/Component/PasswordHasher/Hasher/UserPasswordHasher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:         } elseif ($user instanceof UserInterface) {",
          "51:             $salt = $user->getSalt();",
          "54:                 trigger_deprecation('symfony/password-hasher', '5.3', 'Returning a string from \"getSalt()\" without implementing the \"%s\" interface is deprecated, the \"%s\" class should implement it.', LegacyPasswordAuthenticatedUserInterface::class, get_debug_type($user));",
          "55:             }",
          "56:         }",
          "",
          "[Removed Lines]",
          "53:             if (null !== $salt) {",
          "",
          "[Added Lines]",
          "53:             if ($salt) {",
          "",
          "---------------"
        ],
        "src/Symfony/Component/PasswordHasher/Tests/Hasher/UserPasswordHasherTest.php||src/Symfony/Component/PasswordHasher/Tests/Hasher/UserPasswordHasherTest.php": [
          "File: src/Symfony/Component/PasswordHasher/Tests/Hasher/UserPasswordHasherTest.php -> src/Symfony/Component/PasswordHasher/Tests/Hasher/UserPasswordHasherTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         $passwordHasher = new UserPasswordHasher($mockPasswordHasherFactory);",
          "162:         $this->assertFalse($passwordHasher->needsRehash($user));",
          "163:         $this->assertTrue($passwordHasher->needsRehash($user));",
          "164:         $this->assertFalse($passwordHasher->needsRehash($user));",
          "",
          "[Removed Lines]",
          "161:         \\Closure::bind(function () use ($passwordHasher) { $this->password = $passwordHasher->hashPassword($this, 'foo', 'salt'); }, $user, User::class)();",
          "",
          "[Added Lines]",
          "161:         \\Closure::bind(function () use ($passwordHasher) { $this->password = $passwordHasher->hashPassword($this, 'foo', 'salt'); }, $user, class_exists(User::class) ? User::class : InMemoryUser::class)();",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/AccessListener.php||src/Symfony/Component/Security/Http/Firewall/AccessListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/AccessListener.php -> src/Symfony/Component/Security/Http/Firewall/AccessListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:         $attributes = $request->attributes->get('_access_control_attributes');",
          "76:         $request->attributes->remove('_access_control_attributes');",
          "79:             return;",
          "80:         }",
          "",
          "[Removed Lines]",
          "78:         if (!$attributes || ([AuthenticatedVoter::IS_AUTHENTICATED_ANONYMOUSLY] === $attributes && $event instanceof LazyResponseEvent)) {",
          "",
          "[Added Lines]",
          "78:         if (",
          "79:             !$attributes",
          "80:             || (",
          "81:                 ([AuthenticatedVoter::IS_AUTHENTICATED_ANONYMOUSLY] === $attributes || [AuthenticatedVoter::PUBLIC_ACCESS] === $attributes)",
          "82:                 && $event instanceof LazyResponseEvent",
          "83:             )",
          "84:         ) {",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Tests/Firewall/AccessListenerTest.php||src/Symfony/Component/Security/Http/Tests/Firewall/AccessListenerTest.php": [
          "File: src/Symfony/Component/Security/Http/Tests/Firewall/AccessListenerTest.php -> src/Symfony/Component/Security/Http/Tests/Firewall/AccessListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "361:         $listener(new RequestEvent($this->createMock(HttpKernelInterface::class), $request, HttpKernelInterface::MAIN_REQUEST));",
          "362:     }",
          "363: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:     public function testLazyPublicPagesShouldNotAccessTokenStorage()",
          "365:     {",
          "366:         $tokenStorage = $this->createMock(TokenStorageInterface::class);",
          "367:         $tokenStorage->expects($this->never())->method('getToken');",
          "369:         $request = new Request();",
          "370:         $accessMap = $this->createMock(AccessMapInterface::class);",
          "371:         $accessMap->expects($this->any())",
          "372:             ->method('getPatterns')",
          "373:             ->with($this->equalTo($request))",
          "374:             ->willReturn([[AuthenticatedVoter::PUBLIC_ACCESS], null])",
          "375:         ;",
          "377:         $listener = new AccessListener($tokenStorage, $this->createMock(AccessDecisionManagerInterface::class), $accessMap, $this->createMock(AuthenticationManagerInterface::class), false);",
          "378:         $listener(new LazyResponseEvent(new RequestEvent($this->createMock(HttpKernelInterface::class), $request, HttpKernelInterface::MAIN_REQUEST)));",
          "379:     }",
          "384:     public function testLegacyLazyPublicPagesShouldNotAccessTokenStorage()",
          "385:     {",
          "386:         $tokenStorage = $this->createMock(TokenStorageInterface::class);",
          "387:         $tokenStorage->expects($this->never())->method('getToken');",
          "389:         $request = new Request();",
          "390:         $accessMap = $this->createMock(AccessMapInterface::class);",
          "391:         $accessMap->expects($this->any())",
          "392:             ->method('getPatterns')",
          "393:             ->with($this->equalTo($request))",
          "394:             ->willReturn([[AuthenticatedVoter::IS_AUTHENTICATED_ANONYMOUSLY], null])",
          "395:         ;",
          "397:         $listener = new AccessListener($tokenStorage, $this->createMock(AccessDecisionManagerInterface::class), $accessMap, $this->createMock(AuthenticationManagerInterface::class), false);",
          "398:         $listener(new LazyResponseEvent(new RequestEvent($this->createMock(HttpKernelInterface::class), $request, HttpKernelInterface::MAIN_REQUEST)));",
          "399:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}