{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "93769b68e00f45b1512ccdddb031637a5fbccd3a",
      "candidate_info": {
        "commit_hash": "93769b68e00f45b1512ccdddb031637a5fbccd3a",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/93769b68e00f45b1512ccdddb031637a5fbccd3a",
        "files": [
          "contrib/views/wfmanager/src/main/resources/ui/app/components/flow-designer.js"
        ],
        "message": "AMBARI-25424 Failed to edit workflow from Ambari workflow Manager while accessing Ambari UI over Knox (#3152)",
        "before_after_code_files": [
          "contrib/views/wfmanager/src/main/resources/ui/app/components/flow-designer.js||contrib/views/wfmanager/src/main/resources/ui/app/components/flow-designer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/wfmanager/src/main/resources/ui/app/components/flow-designer.js||contrib/views/wfmanager/src/main/resources/ui/app/components/flow-designer.js": [
          "File: contrib/views/wfmanager/src/main/resources/ui/app/components/flow-designer.js -> contrib/views/wfmanager/src/main/resources/ui/app/components/flow-designer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:     var workflowXmlDefered=this.getWorkflowFromHdfs(filePath);",
          "351:     workflowXmlDefered.promise.then(function(response){",
          "352:       if(response.type === 'xml'){",
          "354:       }else {",
          "355:         this.importWorkflowFromJSON(response.data);",
          "356:       }",
          "",
          "[Removed Lines]",
          "353:         this.importWorkflowFromString(response.data);",
          "",
          "[Added Lines]",
          "353:         var x2js = new X2JS();",
          "354:         let resData = x2js.json2xml_str(x2js.xml2json(response.data));",
          "356:         this.importWorkflowFromString(resData);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "423:     Ember.$.ajax({",
          "424:       url: url,",
          "425:       method: 'GET',",
          "427:       beforeSend: function (xhr) {",
          "428:         xhr.setRequestHeader(\"X-XSRF-HEADER\", Math.round(Math.random()*100000));",
          "429:         xhr.setRequestHeader(\"X-Requested-By\", \"Ambari\");",
          "430:       }",
          "431:     }).done(function(data, status, xhr){",
          "432:       var type = xhr.getResponseHeader(\"response-type\") === \"xml\" ? 'xml' : 'json';",
          "",
          "[Removed Lines]",
          "426:       dataType: \"text\",",
          "",
          "[Added Lines]",
          "432:         xhr.setRequestHeader(\"accept\", \"text/xml\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "604:   getWorkflowAsJsonJsoGImpl(){",
          "605:    try{",
          "606:     var json=JSOG.stringify(this.get(\"workflow\")), self = this;",
          "608:     var workflow = JSOG.parse(json);",
          "610:     return JSOG.stringify(workflow);",
          "611:   }catch(err){",
          "612:    console.error(err);",
          "",
          "[Removed Lines]",
          "607:     var actionVersions = JSOG.stringify(CommonUtils.toArray(this.get(\"workflow\").schemaVersions.actionVersions));",
          "609:     workflow.schemaVersions.actionVersions = actionVersions",
          "",
          "[Added Lines]",
          "610:     var actionVersions = this.get(\"workflow\").schemaVersions ? JSOG.stringify(CommonUtils.toArray(this.get(\"workflow\").schemaVersions.actionVersions)) : [];",
          "612:     if(workflow.schemaVersions) {",
          "613:       workflow.schemaVersions.actionVersions = actionVersions",
          "614:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08f197107e67403ac9056690bd590dbddebd4bd4",
      "candidate_info": {
        "commit_hash": "08f197107e67403ac9056690bd590dbddebd4bd4",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/08f197107e67403ac9056690bd590dbddebd4bd4",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/security.py"
        ],
        "message": "AMBARI-24625. Ambari self signed certificate generated with 1024 bits length, need to make this 2048 (dlysnichenko) (#2298)",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/security.py||ambari-agent/src/main/python/ambari_agent/security.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/security.py||ambari-agent/src/main/python/ambari_agent/security.py": [
          "File: ambari-agent/src/main/python/ambari_agent/security.py -> ambari-agent/src/main/python/ambari_agent/security.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: logger = logging.getLogger(__name__)",
          "41:                 + os.sep + '%(hostname)s.key\" -subj /OU=%(hostname)s/ ' \\",
          "42:                 '-out \"%(keysdir)s' + os.sep + '%(hostname)s.csr\"'",
          "43: KEY_FILENAME = '%(hostname)s.key'",
          "",
          "[Removed Lines]",
          "40: GEN_AGENT_KEY = 'openssl req -new -newkey rsa:1024 -nodes -keyout \"%(keysdir)s' \\",
          "",
          "[Added Lines]",
          "40: GEN_AGENT_KEY = 'openssl req -new -newkey rsa -nodes -keyout \"%(keysdir)s' \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bdb06b1299be0a5fafaf9c3f8eece70b002a6920",
      "candidate_info": {
        "commit_hash": "bdb06b1299be0a5fafaf9c3f8eece70b002a6920",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/bdb06b1299be0a5fafaf9c3f8eece70b002a6920",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AmbariPrivilegeResourceProvider.java"
        ],
        "message": "AMBARI-25454 API exception on trying to assign permission to user group with custom Ambari Views (dgrinenko)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AmbariPrivilegeResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AmbariPrivilegeResourceProvider.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AmbariPrivilegeResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AmbariPrivilegeResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AmbariPrivilegeResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AmbariPrivilegeResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import static org.apache.ambari.server.controller.internal.ViewPrivilegeResourceProvider.VIEW_NAME;",
          "25: import java.util.EnumSet;",
          "27: import java.util.List;",
          "28: import java.util.Map;",
          "29: import java.util.Set;",
          "",
          "[Removed Lines]",
          "26: import java.util.HashMap;",
          "",
          "[Added Lines]",
          "26: import java.util.LinkedHashMap;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "122:   @Override",
          "123:   public Map<Long, Object> getResourceEntities(Map<String, Object> properties) {",
          "126:     resourceEntities.put(ResourceEntity.AMBARI_RESOURCE_ID, null);",
          "",
          "[Removed Lines]",
          "124:     Map<Long, Object> resourceEntities = new HashMap<>();",
          "",
          "[Added Lines]",
          "124:     Map<Long, Object> resourceEntities = new LinkedHashMap<>();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb764916e2d8e6f380dc8ac4d1686aae1b5eda5b",
      "candidate_info": {
        "commit_hash": "bb764916e2d8e6f380dc8ac4d1686aae1b5eda5b",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/bb764916e2d8e6f380dc8ac4d1686aae1b5eda5b",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/listeners/ServerResponsesListener.py",
          "ambari-server/src/main/resources/stacks/stack_advisor.py"
        ],
        "message": "AMBARI-25277. Security Concern as ambari-server.log and ambari-agent.log shows cleartext passwords. (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/listeners/ServerResponsesListener.py||ambari-agent/src/main/python/ambari_agent/listeners/ServerResponsesListener.py",
          "ambari-server/src/main/resources/stacks/stack_advisor.py||ambari-server/src/main/resources/stacks/stack_advisor.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/listeners/ServerResponsesListener.py||ambari-agent/src/main/python/ambari_agent/listeners/ServerResponsesListener.py": [
          "File: ambari-agent/src/main/python/ambari_agent/listeners/ServerResponsesListener.py -> ambari-agent/src/main/python/ambari_agent/listeners/ServerResponsesListener.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     This string will be used to log received messsage of this type",
          "75:     \"\"\"",
          "76:     if Constants.CORRELATION_ID_STRING in headers:",
          "79:       if correlation_id in self.logging_handlers:",
          "80:         message_json = self.logging_handlers[correlation_id](headers, message_json)",
          "",
          "[Removed Lines]",
          "77:       correlation_id = headers[Constants.CORRELATION_ID_STRING]",
          "",
          "[Added Lines]",
          "77:       correlation_id = int(headers[Constants.CORRELATION_ID_STRING])",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stacks/stack_advisor.py||ambari-server/src/main/resources/stacks/stack_advisor.py": [
          "File: ambari-server/src/main/resources/stacks/stack_advisor.py -> ambari-server/src/main/resources/stacks/stack_advisor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1502:       if siteProperties is not None:",
          "1503:         siteRecommendations = recommendedDefaults[siteName][\"properties\"]",
          "1504:         self.logger.info(\"SiteName: %s, method: %s\" % (siteName, method.__name__))",
          "1506:         self.logger.info(\"Recommendations: %s\" % str(siteRecommendations))",
          "1507:         return method(siteProperties, siteRecommendations, configurations, services, hosts)",
          "1508:     return []",
          "",
          "[Removed Lines]",
          "1505:         self.logger.info(\"Site properties: %s\" % str(siteProperties))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2071beed2b03319c43ddf80eac30a571af02c1a",
      "candidate_info": {
        "commit_hash": "a2071beed2b03319c43ddf80eac30a571af02c1a",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/a2071beed2b03319c43ddf80eac30a571af02c1a",
        "files": [
          "ambari-web/app/controllers/main/service/widgets/create/step2_controller.js",
          "ambari-web/app/messages.js",
          "ambari-web/app/templates/main/service/widgets/create/step2_graph.hbs",
          "ambari-web/app/utils/validator.js",
          "ambari-web/test/controllers/main/service/widgets/create/step2_controller_test.js"
        ],
        "message": "AMBARI-25172. XSS - cross site scripting vulnerability",
        "before_after_code_files": [
          "ambari-web/app/controllers/main/service/widgets/create/step2_controller.js||ambari-web/app/controllers/main/service/widgets/create/step2_controller.js",
          "ambari-web/app/messages.js||ambari-web/app/messages.js",
          "ambari-web/app/templates/main/service/widgets/create/step2_graph.hbs||ambari-web/app/templates/main/service/widgets/create/step2_graph.hbs",
          "ambari-web/app/utils/validator.js||ambari-web/app/utils/validator.js",
          "ambari-web/test/controllers/main/service/widgets/create/step2_controller_test.js||ambari-web/test/controllers/main/service/widgets/create/step2_controller_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/controllers/main/service/widgets/create/step2_controller.js||ambari-web/app/controllers/main/service/widgets/create/step2_controller.js": [
          "File: ambari-web/app/controllers/main/service/widgets/create/step2_controller.js -> ambari-web/app/controllers/main/service/widgets/create/step2_controller.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: var App = require('app');",
          "21: App.WidgetWizardStep2Controller = Em.Controller.extend({",
          "22:   name: \"widgetWizardStep2Controller\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: var validator = require('utils/validator');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:       isMetricsIncluded = expressions.some(this.isExpressionWithMetrics);",
          "176:     for (var i = 0; i < dataSets.length; i++) {",
          "178:         isComplete = false;",
          "179:         break;",
          "180:       }",
          "",
          "[Removed Lines]",
          "177:       if (dataSets[i].get('label').trim() === '' || !this.isExpressionComplete(dataSets[i].get('expression'))) {",
          "",
          "[Added Lines]",
          "178:       if (!this.checkIfIsLabelValid(dataSets[i]) || !this.isExpressionComplete(dataSets[i].get('expression'))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "182:     return isComplete && isMetricsIncluded;",
          "183:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191:   checkIfIsLabelValid: function(dataset) {",
          "192:     var label = dataset.get('label');",
          "193:     var isValid = label.trim() !== '' && validator.isValidChartWidgetDatasetLabel(label);",
          "194:     dataset.set('isInvalidLabel', !isValid);",
          "195:     return isValid;",
          "196:   },",
          "",
          "---------------"
        ],
        "ambari-web/app/messages.js||ambari-web/app/messages.js": [
          "File: ambari-web/app/messages.js -> ambari-web/app/messages.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3292:   'widget.create.wizard.step2.body.text':'Define the expression with any metrics and valid operators. </br>Use parentheses when necessary.',",
          "3293:   'widget.create.wizard.step2.body.template':'Define the template with any number of expressions and any string. An expression can be referenced from a template by enclosing its name with double curly braces.',",
          "3294:   'widget.create.wizard.step2.body.warning':'Note: Valid operators are +, -, *, /',",
          "3295:   'widget.create.wizard.step2.body.invalid.expression':'Expression is not complete or is invalid!',",
          "3296:   'widget.create.wizard.step2.body.invalid.expression2':'Invalid expression!',",
          "3297:   'widget.create.wizard.step2.body.invalid.msg2':'Only numbers or operators are allowed in this field.',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3295:   'widget.create.wizard.step2.body.invalid.label': 'Invalid name. Only alphanumerics, underscores, hyphens, percentage and spaces are allowed.',",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/service/widgets/create/step2_graph.hbs||ambari-web/app/templates/main/service/widgets/create/step2_graph.hbs": [
          "File: ambari-web/app/templates/main/service/widgets/create/step2_graph.hbs -> ambari-web/app/templates/main/service/widgets/create/step2_graph.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     {{/if}}",
          "30:     {{#each dataSet in dataSets}}",
          "31:       <fieldset>",
          "33:         <h5>{{t common.expression}}:</h5>",
          "34:         {{view App.WidgetWizardExpressionView expressionBinding=\"dataSet.expression\"}}",
          "35:         {{#if dataSet.isRemovable}}",
          "",
          "[Removed Lines]",
          "32:         <h5>{{view Ember.TextField valueBinding=\"dataSet.label\" class=\"form-control\"}}</h5>",
          "",
          "[Added Lines]",
          "32:         <h5 {{bindAttr class=\"dataSet.isInvalidLabel:has-error\"}}>",
          "33:           {{view Ember.TextField valueBinding=\"dataSet.label\" class=\"form-control\"}}",
          "34:           {{#if dataSet.isInvalidLabel}}",
          "35:             <div>",
          "36:               <span class=\"help-block validation-block\">",
          "37:                 {{t widget.create.wizard.step2.body.invalid.label}}",
          "38:               </span>",
          "39:             </div>",
          "40:           {{/if}}",
          "41:         </h5>",
          "",
          "---------------"
        ],
        "ambari-web/app/utils/validator.js||ambari-web/app/utils/validator.js": [
          "File: ambari-web/app/utils/validator.js -> ambari-web/app/utils/validator.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "325:     return widgetDescriptionRegex.test(value);",
          "326:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:   isValidChartWidgetDatasetLabel: function (value) {",
          "329:     var widgetDescriptionRegex = /^[\\s0-9a-z_\\-%]+$/i;",
          "330:     return widgetDescriptionRegex.test(value);",
          "331:   },",
          "",
          "---------------"
        ],
        "ambari-web/test/controllers/main/service/widgets/create/step2_controller_test.js||ambari-web/test/controllers/main/service/widgets/create/step2_controller_test.js": [
          "File: ambari-web/test/controllers/main/service/widgets/create/step2_controller_test.js -> ambari-web/test/controllers/main/service/widgets/create/step2_controller_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:           isGraphDataComplete: false,",
          "247:           title: 'label is empty'",
          "248:         },",
          "249:         {",
          "250:           dataSets: [Em.Object.create({label: 'abc'})],",
          "251:           isExpressionComplete: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:         {",
          "250:           dataSets: [Em.Object.create({label: '<script>alert(\\'hello\\')</script>'})],",
          "251:           isGraphDataComplete: false,",
          "252:           title: 'not aalowed symbols'",
          "253:         },",
          "",
          "---------------"
        ]
      }
    }
  ]
}