{
  "cve_id": "CVE-2021-42567",
  "cve_desc": "Apereo CAS through 6.4.1 allows XSS via POST requests sent to the REST API endpoints.",
  "repo": "apereo/cas",
  "patch_hash": "376bf087d6d4267f61fc9f8028aa0d1ef407c3f0",
  "patch_info": {
    "commit_hash": "376bf087d6d4267f61fc9f8028aa0d1ef407c3f0",
    "repo": "apereo/cas",
    "commit_url": "https://github.com/apereo/cas/commit/376bf087d6d4267f61fc9f8028aa0d1ef407c3f0",
    "files": [
      "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
      "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
      "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
      "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
    ],
    "message": "sanitize entity responses",
    "before_after_code_files": [
      "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
      "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
      "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
      "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
      "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
    ]
  },
  "patch_diff": {
    "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java": [
      "File: support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java -> support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: import lombok.extern.slf4j.Slf4j;",
      "10: import lombok.val;",
      "11: import org.apache.commons.io.IOUtils;",
      "12: import org.jose4j.jwk.JsonWebKey;",
      "13: import org.jose4j.jwk.JsonWebKeySet;",
      "14: import org.springframework.http.HttpStatus;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "57:             return new ResponseEntity<>(\"UMA RPT JWKS resource is undefined or cannot be located\", HttpStatus.NOT_IMPLEMENTED);",
      "58:         } catch (final Exception e) {",
      "59:             LoggingUtils.error(LOGGER, e);",
      "61:         }",
      "62:     }",
      "63: }",
      "",
      "[Removed Lines]",
      "60:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
      "",
      "[Added Lines]",
      "61:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
      "",
      "---------------"
    ],
    "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java": [
      "File: support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java -> support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "12: import lombok.val;",
      "13: import org.apache.commons.io.IOUtils;",
      "14: import org.apache.commons.lang3.StringUtils;",
      "15: import org.jose4j.jwk.JsonWebKey;",
      "16: import org.jose4j.jwk.JsonWebKeySet;",
      "17: import org.pac4j.core.context.JEEContext;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "79:             return new ResponseEntity<>(body, HttpStatus.OK);",
      "80:         } catch (final Exception e) {",
      "81:             LoggingUtils.error(LOGGER, e);",
      "83:         }",
      "84:     }",
      "85: }",
      "",
      "[Removed Lines]",
      "82:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
      "",
      "[Added Lines]",
      "83:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
      "",
      "---------------"
    ],
    "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java": [
      "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "11: import lombok.extern.slf4j.Slf4j;",
      "12: import lombok.val;",
      "13: import org.apache.commons.lang3.StringUtils;",
      "14: import org.springframework.context.ApplicationContext;",
      "15: import org.springframework.http.HttpStatus;",
      "16: import org.springframework.http.ResponseEntity;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "59:             return new ResponseEntity<>(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(errorsMap), HttpStatus.UNAUTHORIZED);",
      "60:         } catch (final JsonProcessingException exception) {",
      "61:             LoggingUtils.error(LOGGER, e);",
      "63:         }",
      "64:     }",
      "",
      "[Removed Lines]",
      "62:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "[Added Lines]",
      "63:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "67:                                                 final HttpServletRequest request,",
      "68:                                                 final ApplicationContext applicationContext,",
      "69:                                                 final Throwable ex) {",
      "71:         val authnBundleMsg = getTranslatedMessageForExceptionClass(ex.getClass().getSimpleName(), request, applicationContext);",
      "72:         return String.format(\"%s:%s\", authnMsg, authnBundleMsg);",
      "73:     }",
      "",
      "[Removed Lines]",
      "70:         val authnMsg = StringUtils.defaultIfBlank(ex.getMessage(), \"Authentication Failure: \" + authnhandlerErrors.getMessage());",
      "",
      "[Added Lines]",
      "71:         val authnMsg = StringUtils.defaultIfBlank(StringEscapeUtils.escapeHtml4(ex.getMessage()),",
      "72:             \"Authentication Failure: \" + authnhandlerErrors.getMessage());",
      "",
      "---------------"
    ],
    "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java": [
      "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: import lombok.extern.slf4j.Slf4j;",
      "17: import lombok.val;",
      "18: import org.apache.commons.lang3.BooleanUtils;",
      "19: import org.springframework.context.ApplicationContext;",
      "20: import org.springframework.http.HttpStatus;",
      "21: import org.springframework.http.MediaType;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71:     public ResponseEntity<String> createServiceTicket(final HttpServletRequest httpServletRequest,",
      "72:                                                       @RequestBody(required = false) final MultiValueMap<String, String> requestBody,",
      "73:                                                       @PathVariable(\"tgtId\") final String tgtId) {",
      "74:         try {",
      "77:             if (authn == null) {",
      "78:                 throw new InvalidTicketException(tgtId);",
      "79:             }",
      "80:             val service = this.argumentExtractor.extractService(httpServletRequest);",
      "81:             if (service == null) {",
      "82:                 throw new IllegalArgumentException(\"Target service/application is unspecified or unrecognized in the request\");",
      "",
      "[Removed Lines]",
      "70:     @PostMapping(value = RestProtocolConstants.ENDPOINT_TICKETS + \"/{tgtId:.+}\", consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)",
      "75:             val authn = this.ticketRegistrySupport.getAuthenticationFrom(tgtId);",
      "76:             AuthenticationCredentialsThreadLocalBinder.bindCurrent(authn);",
      "",
      "[Added Lines]",
      "71:     @PostMapping(value = RestProtocolConstants.ENDPOINT_TICKETS + \"/{tgtId:.+}\",",
      "72:         consumes = {",
      "73:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
      "74:             MediaType.APPLICATION_JSON_VALUE,",
      "75:             MediaType.TEXT_HTML_VALUE",
      "76:         },",
      "77:         produces = {",
      "78:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
      "79:             MediaType.APPLICATION_JSON_VALUE,",
      "80:             MediaType.TEXT_HTML_VALUE",
      "81:         })",
      "86:             val authn = this.ticketRegistrySupport.getAuthenticationFrom(StringEscapeUtils.escapeHtml4(tgtId));",
      "90:             AuthenticationCredentialsThreadLocalBinder.bindCurrent(authn);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "98:             return this.serviceTicketResourceEntityResponseFactory.build(tgtId, service, authenticationResult);",
      "100:         } catch (final InvalidTicketException e) {",
      "102:         } catch (final AuthenticationException e) {",
      "103:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, httpServletRequest, applicationContext);",
      "104:         } catch (final BadRestRequestException e) {",
      "105:             LoggingUtils.error(LOGGER, e);",
      "107:         } catch (final Exception e) {",
      "108:             LoggingUtils.error(LOGGER, e);",
      "110:         } finally {",
      "111:             AuthenticationCredentialsThreadLocalBinder.clear();",
      "112:         }",
      "",
      "[Removed Lines]",
      "101:             return new ResponseEntity<>(tgtId + \" could not be found or is considered invalid\", HttpStatus.NOT_FOUND);",
      "106:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
      "109:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "[Added Lines]",
      "112:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(tgtId) + \" could not be found or is considered invalid\", HttpStatus.NOT_FOUND);",
      "117:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
      "120:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "---------------"
    ],
    "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java": [
      "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "15: import lombok.RequiredArgsConstructor;",
      "16: import lombok.extern.slf4j.Slf4j;",
      "17: import lombok.val;",
      "18: import org.springframework.context.ApplicationContext;",
      "19: import org.springframework.http.HttpStatus;",
      "20: import org.springframework.http.MediaType;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, request, applicationContext);",
      "99:         } catch (final BadRestRequestException e) {",
      "100:             LoggingUtils.error(LOGGER, e);",
      "102:         } catch (final Exception e) {",
      "103:             LoggingUtils.error(LOGGER, e);",
      "105:         }",
      "106:     }",
      "",
      "[Removed Lines]",
      "101:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
      "104:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "[Added Lines]",
      "102:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
      "105:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "---------------"
    ],
    "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java": [
      "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: import lombok.RequiredArgsConstructor;",
      "8: import lombok.extern.slf4j.Slf4j;",
      "9: import lombok.val;",
      "10: import org.springframework.http.HttpStatus;",
      "11: import org.springframework.http.ResponseEntity;",
      "12: import org.springframework.web.bind.annotation.GetMapping;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "49:             return new ResponseEntity<>(\"Ticket could not be found\", HttpStatus.NOT_FOUND);",
      "50:         } catch (final Exception e) {",
      "51:             LoggingUtils.error(LOGGER, e);",
      "53:         }",
      "54:     }",
      "55: }",
      "",
      "[Removed Lines]",
      "52:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "[Added Lines]",
      "53:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "---------------"
    ],
    "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java": [
      "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: import lombok.RequiredArgsConstructor;",
      "10: import lombok.extern.slf4j.Slf4j;",
      "11: import lombok.val;",
      "12: import org.springframework.context.ApplicationContext;",
      "13: import org.springframework.http.HttpStatus;",
      "14: import org.springframework.http.MediaType;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "72:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, request, applicationContext);",
      "73:         } catch (final BadRestRequestException e) {",
      "74:             LoggingUtils.error(LOGGER, e);",
      "76:         } catch (final Exception e) {",
      "77:             LoggingUtils.error(LOGGER, e);",
      "79:         }",
      "80:     }",
      "81: }",
      "",
      "[Removed Lines]",
      "75:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
      "78:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "[Added Lines]",
      "76:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
      "79:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
      "",
      "---------------"
    ],
    "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java": [
      "File: support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java -> support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: import lombok.extern.slf4j.Slf4j;",
      "19: import lombok.val;",
      "20: import org.apache.commons.lang3.StringUtils;",
      "21: import org.pac4j.core.context.JEEContext;",
      "22: import org.pac4j.core.context.session.JEESessionStore;",
      "23: import org.pac4j.core.credentials.UsernamePasswordCredentials;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "74:             }",
      "75:             return new ResponseEntity<>(\"Request is not authorized\", HttpStatus.FORBIDDEN);",
      "76:         } catch (final AuthenticationException e) {",
      "78:         } catch (final Exception e) {",
      "79:             LoggingUtils.error(LOGGER, e);",
      "81:         }",
      "82:     }",
      "",
      "[Removed Lines]",
      "77:             return new ResponseEntity<>(e.getMessage(), HttpStatus.UNAUTHORIZED);",
      "80:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
      "",
      "[Added Lines]",
      "78:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.UNAUTHORIZED);",
      "81:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
      "",
      "---------------"
    ],
    "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java": [
      "File: support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java -> support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import lombok.extern.slf4j.Slf4j;",
      "26: import lombok.val;",
      "27: import org.apache.commons.beanutils.BeanUtils;",
      "28: import org.jasig.cas.client.authentication.AttributePrincipalImpl;",
      "29: import org.jasig.cas.client.validation.Assertion;",
      "30: import org.jasig.cas.client.validation.AssertionImpl;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.commons.text.StringEscapeUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "176:             }",
      "177:         } catch (final Exception e) {",
      "178:             LoggingUtils.error(LOGGER, e);",
      "180:         }",
      "181:         return new ResponseEntity<>(HttpStatus.NO_CONTENT);",
      "182:     }",
      "",
      "[Removed Lines]",
      "179:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
      "",
      "[Added Lines]",
      "180:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c67002f3c399d30c980a7881e37bec7e1b6b6bf",
      "candidate_info": {
        "commit_hash": "3c67002f3c399d30c980a7881e37bec7e1b6b6bf",
        "repo": "apereo/cas",
        "commit_url": "https://github.com/apereo/cas/commit/3c67002f3c399d30c980a7881e37bec7e1b6b6bf",
        "files": [
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/ServiceTicketResourceTests.java"
        ],
        "message": "fix restful tests",
        "before_after_code_files": [
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/ServiceTicketResourceTests.java||support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/ServiceTicketResourceTests.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java"
          ],
          "candidate": [
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java"
          ]
        }
      },
      "candidate_diff": {
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:         consumes = {",
          "73:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "74:             MediaType.APPLICATION_JSON_VALUE,",
          "76:         },",
          "77:         produces = {",
          "78:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "79:             MediaType.APPLICATION_JSON_VALUE,",
          "81:         })",
          "82:     public ResponseEntity<String> createServiceTicket(final HttpServletRequest httpServletRequest,",
          "83:                                                       @RequestBody(required = false) final MultiValueMap<String, String> requestBody,",
          "",
          "[Removed Lines]",
          "75:             MediaType.TEXT_HTML_VALUE",
          "80:             MediaType.TEXT_HTML_VALUE",
          "",
          "[Added Lines]",
          "75:             MediaType.TEXT_HTML_VALUE,",
          "76:             MediaType.TEXT_PLAIN_VALUE",
          "81:             MediaType.TEXT_HTML_VALUE,",
          "82:             MediaType.TEXT_PLAIN_VALUE",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:         consumes = {",
          "84:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "85:             MediaType.APPLICATION_JSON_VALUE,",
          "87:         },",
          "88:         produces = {",
          "89:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "90:             MediaType.APPLICATION_JSON_VALUE,",
          "92:         })",
          "93:     public ResponseEntity<String> createTicketGrantingTicket(@RequestBody(required = false) final MultiValueMap<String, String> requestBody,",
          "94:                                                              final HttpServletRequest request) {",
          "",
          "[Removed Lines]",
          "86:             MediaType.TEXT_HTML_VALUE",
          "91:             MediaType.TEXT_HTML_VALUE",
          "",
          "[Added Lines]",
          "86:             MediaType.TEXT_HTML_VALUE,",
          "87:             MediaType.TEXT_PLAIN_VALUE",
          "92:             MediaType.TEXT_HTML_VALUE,",
          "93:             MediaType.TEXT_PLAIN_VALUE",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/ServiceTicketResourceTests.java||support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/ServiceTicketResourceTests.java": [
          "File: support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/ServiceTicketResourceTests.java -> support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/ServiceTicketResourceTests.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:         this.mockMvc = MockMvcBuilders.standaloneSetup(this.serviceTicketResource)",
          "94:             .defaultRequest(get(\"/\")",
          "95:                 .contextPath(\"/cas\")",
          "96:                 .contentType(MediaType.APPLICATION_FORM_URLENCODED))",
          "97:             .build();",
          "98:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:                 .accept(MediaType.APPLICATION_FORM_URLENCODED, MediaType.TEXT_PLAIN)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:         this.mockMvc.perform(post(TICKETS_RESOURCE_URL + \"/TGT-1\")",
          "105:             .param(SERVICE, CoreAuthenticationTestUtils.getService().getId()))",
          "106:             .andExpect(status().isOk())",
          "108:             .andExpect(content().string(\"ST-1\"));",
          "109:     }",
          "",
          "[Removed Lines]",
          "107:             .andExpect(content().contentType(\"text/plain;charset=ISO-8859-1\"))",
          "",
          "[Added Lines]",
          "108:             .andExpect(content().contentType(\"application/x-www-form-urlencoded;charset=ISO-8859-1\"))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "118:             .param(USERNAME, TEST_VALUE)",
          "119:             .param(PASSWORD, TEST_VALUE))",
          "120:             .andExpect(status().isOk())",
          "122:             .andExpect(content().string(\"ST-1\"))",
          "123:             .andReturn().getResponse().getContentAsString();",
          "124:         assertTrue(content.contains(\"ST-1\"));",
          "",
          "[Removed Lines]",
          "121:             .andExpect(content().contentType(\"text/plain;charset=ISO-8859-1\"))",
          "",
          "[Added Lines]",
          "122:             .andExpect(content().contentType(\"application/x-www-form-urlencoded;charset=ISO-8859-1\"))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6dc0dff21d61bbd4cde302fbb2dc06da7b45c2d1",
      "candidate_info": {
        "commit_hash": "6dc0dff21d61bbd4cde302fbb2dc06da7b45c2d1",
        "repo": "apereo/cas",
        "commit_url": "https://github.com/apereo/cas/commit/6dc0dff21d61bbd4cde302fbb2dc06da7b45c2d1",
        "files": [
          "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
          "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
          "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
          "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
        ],
        "message": "sanitize entity responses",
        "before_after_code_files": [
          "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
          "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
          "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
          "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
            "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
            "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
            "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
          ],
          "candidate": [
            "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
            "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
            "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
            "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
          ]
        }
      },
      "candidate_diff": {
        "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java": [
          "File: support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java -> support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import lombok.extern.slf4j.Slf4j;",
          "10: import lombok.val;",
          "11: import org.apache.commons.io.IOUtils;",
          "12: import org.jose4j.jwk.JsonWebKey;",
          "13: import org.jose4j.jwk.JsonWebKeySet;",
          "14: import org.springframework.http.HttpStatus;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:             return new ResponseEntity<>(\"UMA RPT JWKS resource is undefined or cannot be located\", HttpStatus.NOT_IMPLEMENTED);",
          "57:         } catch (final Exception e) {",
          "58:             LoggingUtils.error(LOGGER, e);",
          "60:         }",
          "61:     }",
          "62: }",
          "",
          "[Removed Lines]",
          "59:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "60:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ],
        "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java": [
          "File: support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java -> support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import lombok.val;",
          "13: import org.apache.commons.io.IOUtils;",
          "14: import org.apache.commons.lang3.StringUtils;",
          "15: import org.jose4j.jwk.JsonWebKey;",
          "16: import org.jose4j.jwk.JsonWebKeySet;",
          "17: import org.springframework.http.HttpStatus;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:             return new ResponseEntity<>(body, HttpStatus.OK);",
          "72:         } catch (final Exception e) {",
          "73:             LoggingUtils.error(LOGGER, e);",
          "75:         }",
          "76:     }",
          "77: }",
          "",
          "[Removed Lines]",
          "74:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "75:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: import lombok.extern.slf4j.Slf4j;",
          "15: import lombok.val;",
          "16: import org.apache.commons.lang3.StringUtils;",
          "17: import org.springframework.context.ApplicationContext;",
          "18: import org.springframework.http.HttpStatus;",
          "19: import org.springframework.http.ResponseEntity;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:             return new ResponseEntity<>(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(errorsMap), HttpStatus.UNAUTHORIZED);",
          "71:         } catch (final JsonProcessingException exception) {",
          "72:             LoggingUtils.error(LOGGER, e);",
          "74:         }",
          "75:     }",
          "",
          "[Removed Lines]",
          "73:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "74:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "78:                                                 final HttpServletRequest request,",
          "79:                                                 final ApplicationContext applicationContext,",
          "80:                                                 final Throwable ex) {",
          "82:         val authnBundleMsg = getTranslatedMessageForExceptionClass(ex.getClass().getSimpleName(), request, applicationContext);",
          "83:         return String.format(\"%s:%s\", authnMsg, authnBundleMsg);",
          "84:     }",
          "",
          "[Removed Lines]",
          "81:         val authnMsg = StringUtils.defaultIfBlank(ex.getMessage(), \"Authentication Failure: \" + authnhandlerErrors.getMessage());",
          "",
          "[Added Lines]",
          "82:         val authnMsg = StringUtils.defaultIfBlank(StringEscapeUtils.escapeHtml4(ex.getMessage()),",
          "83:             \"Authentication Failure: \" + authnhandlerErrors.getMessage());",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: import lombok.extern.slf4j.Slf4j;",
          "18: import lombok.val;",
          "19: import org.apache.commons.lang3.BooleanUtils;",
          "20: import org.springframework.context.ApplicationContext;",
          "21: import org.springframework.http.HttpStatus;",
          "22: import org.springframework.http.MediaType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:     public ResponseEntity<String> createServiceTicket(final HttpServletRequest httpServletRequest,",
          "73:                                                       @RequestBody(required = false) final MultiValueMap<String, String> requestBody,",
          "74:                                                       @PathVariable(\"tgtId\") final String tgtId) {",
          "75:         try {",
          "78:             if (authn == null) {",
          "79:                 throw new InvalidTicketException(tgtId);",
          "80:             }",
          "81:             val service = this.argumentExtractor.extractService(httpServletRequest);",
          "82:             if (service == null) {",
          "83:                 throw new IllegalArgumentException(\"Target service/application is unspecified or unrecognized in the request\");",
          "",
          "[Removed Lines]",
          "71:     @PostMapping(value = RestProtocolConstants.ENDPOINT_TICKETS + \"/{tgtId:.+}\", consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)",
          "76:             val authn = this.ticketRegistrySupport.getAuthenticationFrom(tgtId);",
          "77:             AuthenticationCredentialsThreadLocalBinder.bindCurrent(authn);",
          "",
          "[Added Lines]",
          "72:     @PostMapping(value = RestProtocolConstants.ENDPOINT_TICKETS + \"/{tgtId:.+}\",",
          "73:         consumes = {",
          "74:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "75:             MediaType.APPLICATION_JSON_VALUE,",
          "76:             MediaType.TEXT_HTML_VALUE",
          "77:         },",
          "78:         produces = {",
          "79:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "80:             MediaType.APPLICATION_JSON_VALUE,",
          "81:             MediaType.TEXT_HTML_VALUE",
          "82:         })",
          "87:             val authn = this.ticketRegistrySupport.getAuthenticationFrom(StringEscapeUtils.escapeHtml4(tgtId));",
          "91:             AuthenticationCredentialsThreadLocalBinder.bindCurrent(authn);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:             return this.serviceTicketResourceEntityResponseFactory.build(tgtId, service, authenticationResult);",
          "101:         } catch (final InvalidTicketException e) {",
          "103:         } catch (final AuthenticationException e) {",
          "104:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, httpServletRequest, applicationContext);",
          "105:         } catch (final BadRestRequestException e) {",
          "106:             LoggingUtils.error(LOGGER, e);",
          "108:         } catch (final Exception e) {",
          "109:             LoggingUtils.error(LOGGER, e);",
          "111:         } finally {",
          "112:             AuthenticationCredentialsThreadLocalBinder.clear();",
          "113:         }",
          "",
          "[Removed Lines]",
          "102:             return new ResponseEntity<>(tgtId + \" could not be found or is considered invalid\", HttpStatus.NOT_FOUND);",
          "107:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "110:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "113:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(tgtId) + \" could not be found or is considered invalid\", HttpStatus.NOT_FOUND);",
          "118:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "121:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: import lombok.RequiredArgsConstructor;",
          "18: import lombok.extern.slf4j.Slf4j;",
          "19: import lombok.val;",
          "20: import org.springframework.context.ApplicationContext;",
          "21: import org.springframework.http.HttpStatus;",
          "22: import org.springframework.http.MediaType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, request, applicationContext);",
          "95:         } catch (final BadRestRequestException e) {",
          "96:             LoggingUtils.error(LOGGER, e);",
          "98:         } catch (final Exception e) {",
          "99:             LoggingUtils.error(LOGGER, e);",
          "101:         }",
          "102:     }",
          "",
          "[Removed Lines]",
          "97:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "100:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "98:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "101:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import lombok.RequiredArgsConstructor;",
          "8: import lombok.extern.slf4j.Slf4j;",
          "9: import lombok.val;",
          "10: import org.springframework.http.HttpStatus;",
          "11: import org.springframework.http.ResponseEntity;",
          "12: import org.springframework.web.bind.annotation.GetMapping;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:             return new ResponseEntity<>(\"Ticket could not be found\", HttpStatus.NOT_FOUND);",
          "50:         } catch (final Exception e) {",
          "51:             LoggingUtils.error(LOGGER, e);",
          "53:         }",
          "54:     }",
          "55: }",
          "",
          "[Removed Lines]",
          "52:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "53:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import lombok.RequiredArgsConstructor;",
          "12: import lombok.extern.slf4j.Slf4j;",
          "13: import lombok.val;",
          "14: import org.springframework.context.ApplicationContext;",
          "15: import org.springframework.http.HttpStatus;",
          "16: import org.springframework.http.MediaType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, request, applicationContext);",
          "79:         } catch (final BadRestRequestException e) {",
          "80:             LoggingUtils.error(LOGGER, e);",
          "82:         } catch (final Exception e) {",
          "83:             LoggingUtils.error(LOGGER, e);",
          "85:         }",
          "86:     }",
          "87: }",
          "",
          "[Removed Lines]",
          "81:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "84:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "82:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "85:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java": [
          "File: support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java -> support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: import lombok.extern.slf4j.Slf4j;",
          "18: import lombok.val;",
          "19: import org.apache.commons.lang3.StringUtils;",
          "20: import org.pac4j.core.context.JEEContext;",
          "21: import org.pac4j.core.credentials.extractor.BasicAuthExtractor;",
          "22: import org.springframework.boot.context.properties.EnableConfigurationProperties;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:             }",
          "68:             return new ResponseEntity<>(\"Request is not authorized\", HttpStatus.FORBIDDEN);",
          "69:         } catch (final AuthenticationException e) {",
          "71:         } catch (final Exception e) {",
          "72:             LoggingUtils.error(LOGGER, e);",
          "74:         }",
          "75:     }",
          "",
          "[Removed Lines]",
          "70:             return new ResponseEntity<>(e.getMessage(), HttpStatus.UNAUTHORIZED);",
          "73:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "71:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.UNAUTHORIZED);",
          "74:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ],
        "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java": [
          "File: support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java -> support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import lombok.extern.slf4j.Slf4j;",
          "24: import lombok.val;",
          "25: import org.apache.commons.beanutils.BeanUtils;",
          "26: import org.jasig.cas.client.authentication.AttributePrincipalImpl;",
          "27: import org.jasig.cas.client.validation.Assertion;",
          "28: import org.jasig.cas.client.validation.AssertionImpl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:             }",
          "165:         } catch (final Exception e) {",
          "166:             LoggingUtils.error(LOGGER, e);",
          "168:         }",
          "169:         return new ResponseEntity<>(HttpStatus.NO_CONTENT);",
          "170:     }",
          "",
          "[Removed Lines]",
          "167:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "168:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7eb8e74be61832b6a37a00e408618782310060db",
      "candidate_info": {
        "commit_hash": "7eb8e74be61832b6a37a00e408618782310060db",
        "repo": "apereo/cas",
        "commit_url": "https://github.com/apereo/cas/commit/7eb8e74be61832b6a37a00e408618782310060db",
        "files": [
          "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
          "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
          "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
          "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
        ],
        "message": "escape and clean entity responses as needed",
        "before_after_code_files": [
          "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
          "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
          "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
          "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
          "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
            "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
            "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
            "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
          ],
          "candidate": [
            "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
            "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
            "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
            "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
            "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java"
          ]
        }
      },
      "candidate_diff": {
        "support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java||support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java": [
          "File: support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java -> support/cas-server-support-oauth-uma-core/src/main/java/org/apereo/cas/uma/web/controllers/rpt/UmaRequestingPartyTokenJwksEndpointController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import lombok.extern.slf4j.Slf4j;",
          "10: import lombok.val;",
          "11: import org.apache.commons.io.IOUtils;",
          "12: import org.jose4j.jwk.JsonWebKey;",
          "13: import org.jose4j.jwk.JsonWebKeySet;",
          "14: import org.springframework.http.HttpStatus;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:             return new ResponseEntity<>(\"UMA RPT JWKS resource is undefined or cannot be located\", HttpStatus.NOT_IMPLEMENTED);",
          "58:         } catch (final Exception e) {",
          "59:             LoggingUtils.error(LOGGER, e);",
          "61:         }",
          "62:     }",
          "63: }",
          "",
          "[Removed Lines]",
          "60:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "61:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ],
        "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java||support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java": [
          "File: support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java -> support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/web/controllers/jwks/OidcJwksEndpointController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import lombok.val;",
          "13: import org.apache.commons.io.IOUtils;",
          "14: import org.apache.commons.lang3.StringUtils;",
          "15: import org.jose4j.jwk.JsonWebKey;",
          "16: import org.jose4j.jwk.JsonWebKeySet;",
          "17: import org.pac4j.core.context.JEEContext;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:             return new ResponseEntity<>(body, HttpStatus.OK);",
          "80:         } catch (final Exception e) {",
          "81:             LoggingUtils.error(LOGGER, e);",
          "83:         }",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "82:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "83:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import lombok.extern.slf4j.Slf4j;",
          "12: import lombok.val;",
          "13: import org.apache.commons.lang3.StringUtils;",
          "14: import org.springframework.context.ApplicationContext;",
          "15: import org.springframework.http.HttpStatus;",
          "16: import org.springframework.http.ResponseEntity;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:             return new ResponseEntity<>(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(errorsMap), HttpStatus.UNAUTHORIZED);",
          "60:         } catch (final JsonProcessingException exception) {",
          "61:             LoggingUtils.error(LOGGER, e);",
          "63:         }",
          "64:     }",
          "",
          "[Removed Lines]",
          "62:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "63:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:                                                 final HttpServletRequest request,",
          "68:                                                 final ApplicationContext applicationContext,",
          "69:                                                 final Throwable ex) {",
          "71:         val authnBundleMsg = getTranslatedMessageForExceptionClass(ex.getClass().getSimpleName(), request, applicationContext);",
          "72:         return String.format(\"%s:%s\", authnMsg, authnBundleMsg);",
          "73:     }",
          "",
          "[Removed Lines]",
          "70:         val authnMsg = StringUtils.defaultIfBlank(ex.getMessage(), \"Authentication Failure: \" + authnhandlerErrors.getMessage());",
          "",
          "[Added Lines]",
          "71:         val authnMsg = StringUtils.defaultIfBlank(StringEscapeUtils.escapeHtml4(ex.getMessage()),",
          "72:             \"Authentication Failure: \" + authnhandlerErrors.getMessage());",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/ServiceTicketResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: import lombok.extern.slf4j.Slf4j;",
          "17: import lombok.val;",
          "18: import org.apache.commons.lang3.BooleanUtils;",
          "19: import org.springframework.context.ApplicationContext;",
          "20: import org.springframework.http.HttpStatus;",
          "21: import org.springframework.http.MediaType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:     public ResponseEntity<String> createServiceTicket(final HttpServletRequest httpServletRequest,",
          "72:                                                       @RequestBody(required = false) final MultiValueMap<String, String> requestBody,",
          "73:                                                       @PathVariable(\"tgtId\") final String tgtId) {",
          "74:         try {",
          "77:             if (authn == null) {",
          "78:                 throw new InvalidTicketException(tgtId);",
          "79:             }",
          "80:             val service = this.argumentExtractor.extractService(httpServletRequest);",
          "81:             if (service == null) {",
          "82:                 throw new IllegalArgumentException(\"Target service/application is unspecified or unrecognized in the request\");",
          "",
          "[Removed Lines]",
          "70:     @PostMapping(value = RestProtocolConstants.ENDPOINT_TICKETS + \"/{tgtId:.+}\", consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)",
          "75:             val authn = this.ticketRegistrySupport.getAuthenticationFrom(tgtId);",
          "76:             AuthenticationCredentialsThreadLocalBinder.bindCurrent(authn);",
          "",
          "[Added Lines]",
          "71:     @PostMapping(value = RestProtocolConstants.ENDPOINT_TICKETS + \"/{tgtId:.+}\",",
          "72:         consumes = {",
          "73:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "74:             MediaType.APPLICATION_JSON_VALUE,",
          "75:             MediaType.TEXT_HTML_VALUE",
          "76:         },",
          "77:         produces = {",
          "78:             MediaType.APPLICATION_FORM_URLENCODED_VALUE,",
          "79:             MediaType.APPLICATION_JSON_VALUE,",
          "80:             MediaType.TEXT_HTML_VALUE",
          "81:         })",
          "86:             val authn = this.ticketRegistrySupport.getAuthenticationFrom(StringEscapeUtils.escapeHtml4(tgtId));",
          "90:             AuthenticationCredentialsThreadLocalBinder.bindCurrent(authn);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "98:             return this.serviceTicketResourceEntityResponseFactory.build(tgtId, service, authenticationResult);",
          "100:         } catch (final InvalidTicketException e) {",
          "102:         } catch (final AuthenticationException e) {",
          "103:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, httpServletRequest, applicationContext);",
          "104:         } catch (final BadRestRequestException e) {",
          "105:             LoggingUtils.error(LOGGER, e);",
          "107:         } catch (final Exception e) {",
          "108:             LoggingUtils.error(LOGGER, e);",
          "110:         } finally {",
          "111:             AuthenticationCredentialsThreadLocalBinder.clear();",
          "112:         }",
          "",
          "[Removed Lines]",
          "101:             return new ResponseEntity<>(tgtId + \" could not be found or is considered invalid\", HttpStatus.NOT_FOUND);",
          "106:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "109:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "112:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(tgtId) + \" could not be found or is considered invalid\", HttpStatus.NOT_FOUND);",
          "117:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "120:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketGrantingTicketResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: import lombok.RequiredArgsConstructor;",
          "14: import lombok.extern.slf4j.Slf4j;",
          "15: import lombok.val;",
          "16: import org.springframework.context.ApplicationContext;",
          "17: import org.springframework.http.HttpStatus;",
          "18: import org.springframework.http.MediaType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, request, applicationContext);",
          "97:         } catch (final BadRestRequestException e) {",
          "98:             LoggingUtils.error(LOGGER, e);",
          "100:         } catch (final Exception e) {",
          "101:             LoggingUtils.error(LOGGER, e);",
          "103:         }",
          "104:     }",
          "",
          "[Removed Lines]",
          "99:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "102:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "100:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "103:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/TicketStatusResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import lombok.RequiredArgsConstructor;",
          "8: import lombok.extern.slf4j.Slf4j;",
          "9: import lombok.val;",
          "10: import org.springframework.http.HttpStatus;",
          "11: import org.springframework.http.ResponseEntity;",
          "12: import org.springframework.web.bind.annotation.GetMapping;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:             return new ResponseEntity<>(\"Ticket could not be found\", HttpStatus.NOT_FOUND);",
          "50:         } catch (final Exception e) {",
          "51:             LoggingUtils.error(LOGGER, e);",
          "53:         }",
          "54:     }",
          "55: }",
          "",
          "[Removed Lines]",
          "52:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "53:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java||support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java": [
          "File: support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java -> support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/UserAuthenticationResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import lombok.RequiredArgsConstructor;",
          "10: import lombok.extern.slf4j.Slf4j;",
          "11: import lombok.val;",
          "12: import org.springframework.context.ApplicationContext;",
          "13: import org.springframework.http.HttpStatus;",
          "14: import org.springframework.http.MediaType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:             return RestResourceUtils.createResponseEntityForAuthnFailure(e, request, applicationContext);",
          "73:         } catch (final BadRestRequestException e) {",
          "74:             LoggingUtils.error(LOGGER, e);",
          "76:         } catch (final Exception e) {",
          "77:             LoggingUtils.error(LOGGER, e);",
          "79:         }",
          "80:     }",
          "81: }",
          "",
          "[Removed Lines]",
          "75:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "78:             return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "[Added Lines]",
          "76:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "79:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);",
          "",
          "---------------"
        ],
        "support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java||support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java": [
          "File: support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java -> support/cas-server-support-rest-services/src/main/java/org/apereo/cas/support/rest/RegisteredServiceResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import lombok.extern.slf4j.Slf4j;",
          "19: import lombok.val;",
          "20: import org.apache.commons.lang3.StringUtils;",
          "21: import org.pac4j.core.context.JEEContext;",
          "22: import org.pac4j.core.context.session.JEESessionStore;",
          "23: import org.pac4j.core.credentials.UsernamePasswordCredentials;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:             }",
          "75:             return new ResponseEntity<>(\"Request is not authorized\", HttpStatus.FORBIDDEN);",
          "76:         } catch (final AuthenticationException e) {",
          "78:         } catch (final Exception e) {",
          "79:             LoggingUtils.error(LOGGER, e);",
          "81:         }",
          "82:     }",
          "",
          "[Removed Lines]",
          "77:             return new ResponseEntity<>(e.getMessage(), HttpStatus.UNAUTHORIZED);",
          "80:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "78:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.UNAUTHORIZED);",
          "81:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ],
        "support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java||support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java": [
          "File: support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java -> support/cas-server-support-saml-idp-web/src/main/java/org/apereo/cas/support/saml/web/idp/profile/sso/SSOSamlIdPPostProfileHandlerEndpoint.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import lombok.extern.slf4j.Slf4j;",
          "26: import lombok.val;",
          "27: import org.apache.commons.beanutils.BeanUtils;",
          "28: import org.jasig.cas.client.authentication.AttributePrincipalImpl;",
          "29: import org.jasig.cas.client.validation.Assertion;",
          "30: import org.jasig.cas.client.validation.AssertionImpl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.commons.text.StringEscapeUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176:             }",
          "177:         } catch (final Exception e) {",
          "178:             LoggingUtils.error(LOGGER, e);",
          "180:         }",
          "181:         return new ResponseEntity<>(HttpStatus.NO_CONTENT);",
          "182:     }",
          "",
          "[Removed Lines]",
          "179:             return new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);",
          "",
          "[Added Lines]",
          "180:             return new ResponseEntity<>(StringEscapeUtils.escapeHtml4(e.getMessage()), HttpStatus.BAD_REQUEST);",
          "",
          "---------------"
        ]
      }
    }
  ]
}