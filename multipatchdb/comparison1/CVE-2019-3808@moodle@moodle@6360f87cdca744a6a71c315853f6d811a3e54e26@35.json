{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dd3e427d881de44003c77cfb9958e4e4a8eaf3dd",
      "candidate_info": {
        "commit_hash": "dd3e427d881de44003c77cfb9958e4e4a8eaf3dd",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/dd3e427d881de44003c77cfb9958e4e4a8eaf3dd",
        "files": [
          "enrol/editenrolment.php",
          "enrol/externallib.php",
          "enrol/tests/externallib_test.php",
          "lib/db/services.php",
          "lib/upgrade.txt",
          "user/amd/build/status_field.min.js",
          "user/amd/build/status_field.min.js.map",
          "user/amd/src/status_field.js",
          "version.php"
        ],
        "message": "Merge branch 'MDL-66489-master' of git://github.com/rezaies/moodle",
        "before_after_code_files": [
          "enrol/editenrolment.php||enrol/editenrolment.php",
          "enrol/externallib.php||enrol/externallib.php",
          "enrol/tests/externallib_test.php||enrol/tests/externallib_test.php",
          "lib/db/services.php||lib/db/services.php",
          "user/amd/src/status_field.js||user/amd/src/status_field.js",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "enrol/editenrolment.php||enrol/editenrolment.php": [
          "File: enrol/editenrolment.php -> enrol/editenrolment.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:     redirect($returnurl);",
          "89: } else if ($data = $mform->get_data()) {",
          "91:         $data->timeend = $data->timestart + $data->duration;",
          "92:     }",
          "93:     if ($manager->edit_enrolment($ue, $data)) {",
          "",
          "[Removed Lines]",
          "90:     if ($data->duration && $data->timeend == 0) {",
          "",
          "[Added Lines]",
          "90:     if (!empty($data->duration) && $data->timeend == 0) {",
          "",
          "---------------"
        ],
        "enrol/externallib.php||enrol/externallib.php": [
          "File: enrol/externallib.php -> enrol/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1020:         );",
          "1021:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1031:     public static function edit_user_enrolment_is_deprecated() {",
          "1032:         return true;",
          "1033:     }",
          "1040:     public static function submit_user_enrolment_form_parameters() {",
          "1041:         return new external_function_parameters([",
          "1042:             'formdata' => new external_value(PARAM_RAW, 'The data from the event form'),",
          "1043:         ]);",
          "1044:     }",
          "1052:     public static function submit_user_enrolment_form($formdata) {",
          "1053:         global $CFG, $DB, $PAGE;",
          "1056:         $params = self::validate_parameters(self::submit_user_enrolment_form_parameters(), ['formdata' => $formdata]);",
          "1058:         $data = [];",
          "1059:         parse_str($params['formdata'], $data);",
          "1061:         $userenrolment = $DB->get_record('user_enrolments', ['id' => $data['ue']], '*', MUST_EXIST);",
          "1062:         $instance = $DB->get_record('enrol', ['id' => $userenrolment->enrolid], '*', MUST_EXIST);",
          "1063:         $plugin = enrol_get_plugin($instance->enrol);",
          "1064:         $course = get_course($instance->courseid);",
          "1065:         $context = context_course::instance($course->id);",
          "1066:         self::validate_context($context);",
          "1068:         require_once(\"$CFG->dirroot/enrol/editenrolment_form.php\");",
          "1069:         $customformdata = [",
          "1070:             'ue' => $userenrolment,",
          "1071:             'modal' => true,",
          "1072:             'enrolinstancename' => $plugin->get_instance_name($instance)",
          "1073:         ];",
          "1074:         $mform = new enrol_user_enrolment_form(null, $customformdata, 'post', '', null, true, $data);",
          "1076:         if ($validateddata = $mform->get_data()) {",
          "1077:             if (!empty($validateddata->duration) && $validateddata->timeend == 0) {",
          "1078:                 $validateddata->timeend = $validateddata->timestart + $validateddata->duration;",
          "1079:             }",
          "1080:             require_once($CFG->dirroot . '/enrol/locallib.php');",
          "1081:             $manager = new course_enrolment_manager($PAGE, $course);",
          "1082:             $result = $manager->edit_enrolment($userenrolment, $validateddata);",
          "1084:             return ['result' => $result];",
          "1085:         } else {",
          "1086:             return ['result' => false, 'validationerror' => true];",
          "1087:         }",
          "1088:     }",
          "1095:     public static function submit_user_enrolment_form_returns() {",
          "1096:         return new external_single_structure([",
          "1097:             'result' => new external_value(PARAM_BOOL, 'True if the user\\'s enrolment was successfully updated'),",
          "1098:             'validationerror' => new external_value(PARAM_BOOL, 'Indicates invalid form data', VALUE_DEFAULT, false),",
          "1099:         ]);",
          "1100:     }",
          "",
          "---------------"
        ],
        "enrol/tests/externallib_test.php||enrol/tests/externallib_test.php": [
          "File: enrol/tests/externallib_test.php -> enrol/tests/externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "958:         $this->assertEquals(ENROL_USER_SUSPENDED, $ue->status);",
          "959:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "964:     public function submit_user_enrolment_form_provider() {",
          "965:         $now = new DateTime();",
          "967:         $nextmonth = clone($now);",
          "968:         $nextmonth->add(new DateInterval('P1M'));",
          "970:         return [",
          "971:             'Invalid data' => [",
          "972:                 'customdata' => [",
          "973:                     'status' => ENROL_USER_ACTIVE,",
          "974:                     'timestart' => [",
          "975:                         'day' => $now->format('j'),",
          "976:                         'month' => $now->format('n'),",
          "977:                         'year' => $now->format('Y'),",
          "978:                         'hour' => $now->format('G'),",
          "979:                         'minute' => 0,",
          "980:                         'enabled' => 1,",
          "981:                     ],",
          "982:                     'timeend' => [",
          "983:                         'day' => $now->format('j'),",
          "984:                         'month' => $now->format('n'),",
          "985:                         'year' => $now->format('Y'),",
          "986:                         'hour' => $now->format('G'),",
          "987:                         'minute' => 0,",
          "988:                         'enabled' => 1,",
          "989:                     ],",
          "990:                 ],",
          "991:                 'expectedresult' => false,",
          "992:                 'validationerror' => true,",
          "993:             ],",
          "994:             'Valid data' => [",
          "995:                 'customdata' => [",
          "996:                     'status' => ENROL_USER_ACTIVE,",
          "997:                     'timestart' => [",
          "998:                         'day' => $now->format('j'),",
          "999:                         'month' => $now->format('n'),",
          "1000:                         'year' => $now->format('Y'),",
          "1001:                         'hour' => $now->format('G'),",
          "1002:                         'minute' => 0,",
          "1003:                         'enabled' => 1,",
          "1004:                     ],",
          "1005:                     'timeend' => [",
          "1006:                         'day' => $nextmonth->format('j'),",
          "1007:                         'month' => $nextmonth->format('n'),",
          "1008:                         'year' => $nextmonth->format('Y'),",
          "1009:                         'hour' => $nextmonth->format('G'),",
          "1010:                         'minute' => 0,",
          "1011:                         'enabled' => 1,",
          "1012:                     ],",
          "1013:                 ],",
          "1014:                 'expectedresult' => true,",
          "1015:                 'validationerror' => false",
          "1016:             ],",
          "1017:             'Suspend user' => [",
          "1018:                 'customdata' => [",
          "1019:                     'status' => ENROL_USER_SUSPENDED,",
          "1020:                 ],",
          "1021:                 'expectedresult' => true,",
          "1022:                 'validationerror' => false",
          "1023:             ],",
          "1024:         ];",
          "1025:     }",
          "1033:     public function test_submit_user_enrolment_form($customdata, $expectedresult, $validationerror) {",
          "1034:         global $CFG, $DB;",
          "1036:         $this->resetAfterTest(true);",
          "1037:         $datagen = $this->getDataGenerator();",
          "1040:         $manualplugin = enrol_get_plugin('manual');",
          "1042:         $studentroleid = $DB->get_field('role', 'id', ['shortname' => 'student'], MUST_EXIST);",
          "1043:         $teacherroleid = $DB->get_field('role', 'id', ['shortname' => 'editingteacher'], MUST_EXIST);",
          "1044:         $course = $datagen->create_course();",
          "1045:         $user = $datagen->create_user();",
          "1046:         $teacher = $datagen->create_user();",
          "1048:         $instanceid = null;",
          "1049:         $instances = enrol_get_instances($course->id, true);",
          "1050:         foreach ($instances as $inst) {",
          "1051:             if ($inst->enrol == 'manual') {",
          "1052:                 $instanceid = (int)$inst->id;",
          "1053:                 break;",
          "1054:             }",
          "1055:         }",
          "1056:         if (empty($instanceid)) {",
          "1057:             $instanceid = $manualplugin->add_default_instance($course);",
          "1058:             if (empty($instanceid)) {",
          "1059:                 $instanceid = $manualplugin->add_instance($course);",
          "1060:             }",
          "1061:         }",
          "1062:         $this->assertNotNull($instanceid);",
          "1064:         $instance = $DB->get_record('enrol', ['id' => $instanceid], '*', MUST_EXIST);",
          "1065:         $manualplugin->enrol_user($instance, $user->id, $studentroleid, 0, 0, ENROL_USER_ACTIVE);",
          "1066:         $manualplugin->enrol_user($instance, $teacher->id, $teacherroleid, 0, 0, ENROL_USER_ACTIVE);",
          "1067:         $ueid = (int) $DB->get_field(",
          "1068:                 'user_enrolments',",
          "1069:                 'id',",
          "1070:                 ['enrolid' => $instance->id, 'userid' => $user->id],",
          "1071:                 MUST_EXIST",
          "1072:         );",
          "1075:         $teacher->ignoresesskey = true;",
          "1076:         $this->setUser($teacher);",
          "1078:         $formdata = [",
          "1079:             'ue'        => $ueid,",
          "1080:             'ifilter'   => 0,",
          "1081:             'status'    => null,",
          "1082:             'timestart' => null,",
          "1083:             'duration'  => null,",
          "1084:             'timeend'   => null,",
          "1085:         ];",
          "1087:         $formdata = array_merge($formdata, $customdata);",
          "1089:         require_once(\"$CFG->dirroot/enrol/editenrolment_form.php\");",
          "1090:         $formdata = enrol_user_enrolment_form::mock_generate_submit_keys($formdata);",
          "1092:         $querystring = http_build_query($formdata, '', '&');",
          "1094:         $result = external_api::clean_returnvalue(",
          "1095:                 core_enrol_external::submit_user_enrolment_form_returns(),",
          "1096:                 core_enrol_external::submit_user_enrolment_form($querystring)",
          "1097:         );",
          "1099:         $this->assertEquals(",
          "1100:                 ['result' => $expectedresult, 'validationerror' => $validationerror],",
          "1101:                 $result,",
          "1102:                 '', 0.0, 10, true);",
          "1104:         if ($result['result']) {",
          "1105:             $ue = $DB->get_record('user_enrolments', ['id' => $ueid], '*', MUST_EXIST);",
          "1106:             $this->assertEquals($formdata['status'], $ue->status);",
          "1107:         }",
          "1108:     }",
          "",
          "---------------"
        ],
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "647:         'classname' => 'core_enrol_external',",
          "648:         'methodname' => 'edit_user_enrolment',",
          "649:         'classpath' => 'enrol/externallib.php',",
          "651:         'type' => 'write',",
          "652:         'ajax' => true,",
          "653:     ),",
          "",
          "[Removed Lines]",
          "650:         'description' => 'External function that updates a given user enrolment',",
          "",
          "[Added Lines]",
          "650:         'description' => '** DEPRECATED ** Please do not call this function any more.",
          "651:                           External function that updates a given user enrolment',",
          "652:         'type' => 'write',",
          "653:         'ajax' => true,",
          "654:     ),",
          "655:     'core_enrol_submit_user_enrolment_form' => array(",
          "656:         'classname' => 'core_enrol_external',",
          "657:         'methodname' => 'submit_user_enrolment_form',",
          "658:         'classpath' => 'enrol/externallib.php',",
          "659:         'description' => 'Submit form data for enrolment form',",
          "",
          "---------------"
        ],
        "user/amd/src/status_field.js||user/amd/src/status_field.js": [
          "File: user/amd/src/status_field.js -> user/amd/src/status_field.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:             var ueid = $(form).find('[name=\"ue\"]').val();",
          "303:             var request = {",
          "306:             };",
          "308:             Ajax.call([request])[0].done(function(data) {",
          "",
          "[Removed Lines]",
          "265:             var status = $(form).find('[name=\"status\"]').val();",
          "267:             var params = {",
          "268:                 'courseid': this.courseid,",
          "269:                 'ueid': ueid,",
          "270:                 'status': status",
          "271:             };",
          "274:             var timeStartEnabled = $(form).find('[name=\"timestart[enabled]\"]');",
          "275:             if (timeStartEnabled.is(':checked')) {",
          "276:                 var timeStartYear = $(form).find('[name=\"timestart[year]\"]').val();",
          "277:                 var timeStartMonth = $(form).find('[name=\"timestart[month]\"]').val() - 1;",
          "278:                 var timeStartDay = $(form).find('[name=\"timestart[day]\"]').val();",
          "279:                 var timeStartHour = $(form).find('[name=\"timestart[hour]\"]').val();",
          "280:                 var timeStartMinute = $(form).find('[name=\"timestart[minute]\"]').val();",
          "281:                 var timeStart = new Date(timeStartYear, timeStartMonth, timeStartDay, timeStartHour, timeStartMinute);",
          "282:                 params.timestart = timeStart.getTime() / 1000;",
          "283:             }",
          "286:             var timeEndEnabled = $(form).find('[name=\"timeend[enabled]\"]');",
          "287:             if (timeEndEnabled.is(':checked')) {",
          "288:                 var timeEndYear = $(form).find('[name=\"timeend[year]\"]').val();",
          "289:                 var timeEndMonth = $(form).find('[name=\"timeend[month]\"]').val() - 1;",
          "290:                 var timeEndDay = $(form).find('[name=\"timeend[day]\"]').val();",
          "291:                 var timeEndHour = $(form).find('[name=\"timeend[hour]\"]').val();",
          "292:                 var timeEndMinute = $(form).find('[name=\"timeend[minute]\"]').val();",
          "293:                 var timeEnd = new Date(timeEndYear, timeEndMonth, timeEndDay, timeEndHour, timeEndMinute);",
          "294:                 params.timeend = timeEnd.getTime() / 1000;",
          "295:             }",
          "298:             var enrolDuration = $(form).find('[name=\"duration\"]');",
          "299:             if (enrolDuration.is(':enabled')) {",
          "300:                 params.timeend = params.timestart + parseInt(enrolDuration.val());",
          "301:             }",
          "304:                 methodname: 'core_enrol_edit_user_enrolment',",
          "305:                 args: params",
          "",
          "[Added Lines]",
          "266:                 methodname: 'core_enrol_submit_user_enrolment_form',",
          "267:                 args: {",
          "268:                     formdata: form.serialize()",
          "269:                 }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019090500.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019090500.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d979e33accd8a01512a3a06ed6ca828d64814183",
      "candidate_info": {
        "commit_hash": "d979e33accd8a01512a3a06ed6ca828d64814183",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/d979e33accd8a01512a3a06ed6ca828d64814183",
        "files": [
          "admin/settings/analytics.php",
          "admin/settings/subsystems.php",
          "admin/tool/analytics/classes/output/renderer.php",
          "admin/tool/analytics/classes/task/predict_models.php",
          "admin/tool/analytics/classes/task/train_models.php",
          "admin/tool/analytics/cli/enable_model.php",
          "admin/tool/analytics/cli/evaluate_model.php",
          "admin/tool/analytics/createmodel.php",
          "admin/tool/analytics/importmodel.php",
          "admin/tool/analytics/model.php",
          "admin/tool/analytics/restoredefault.php",
          "admin/tool/analytics/settings.php",
          "analytics/classes/manager.php",
          "lang/en/admin.php",
          "lang/en/analytics.php",
          "lib/classes/task/analytics_cleanup_task.php",
          "report/insights/action.php",
          "report/insights/classes/output/renderer.php",
          "report/insights/done.php",
          "report/insights/insights.php",
          "report/insights/lib.php",
          "report/insights/prediction.php",
          "report/insights/settings.php",
          "version.php"
        ],
        "message": "Merge branch 'MDL-65585_master' of git://github.com/dmonllao/moodle",
        "before_after_code_files": [
          "admin/settings/analytics.php||admin/settings/analytics.php",
          "admin/settings/subsystems.php||admin/settings/subsystems.php",
          "admin/tool/analytics/classes/output/renderer.php||admin/tool/analytics/classes/output/renderer.php",
          "admin/tool/analytics/classes/task/predict_models.php||admin/tool/analytics/classes/task/predict_models.php",
          "admin/tool/analytics/classes/task/train_models.php||admin/tool/analytics/classes/task/train_models.php",
          "admin/tool/analytics/cli/enable_model.php||admin/tool/analytics/cli/enable_model.php",
          "admin/tool/analytics/cli/evaluate_model.php||admin/tool/analytics/cli/evaluate_model.php",
          "admin/tool/analytics/createmodel.php||admin/tool/analytics/createmodel.php",
          "admin/tool/analytics/importmodel.php||admin/tool/analytics/importmodel.php",
          "admin/tool/analytics/model.php||admin/tool/analytics/model.php",
          "admin/tool/analytics/restoredefault.php||admin/tool/analytics/restoredefault.php",
          "admin/tool/analytics/settings.php||admin/tool/analytics/settings.php",
          "analytics/classes/manager.php||analytics/classes/manager.php",
          "lang/en/admin.php||lang/en/admin.php",
          "lang/en/analytics.php||lang/en/analytics.php",
          "lib/classes/task/analytics_cleanup_task.php||lib/classes/task/analytics_cleanup_task.php",
          "report/insights/action.php||report/insights/action.php",
          "report/insights/classes/output/renderer.php||report/insights/classes/output/renderer.php",
          "report/insights/done.php||report/insights/done.php",
          "report/insights/insights.php||report/insights/insights.php",
          "report/insights/lib.php||report/insights/lib.php",
          "report/insights/prediction.php||report/insights/prediction.php",
          "report/insights/settings.php||report/insights/settings.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/analytics.php||admin/settings/analytics.php": [
          "File: admin/settings/analytics.php -> admin/settings/analytics.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "29:     $settings = new admin_settingpage('analyticssite', new lang_string('analyticssiteinfo', 'analytics'));",
          "30:     $ADMIN->add('analytics', $settings);",
          "",
          "[Removed Lines]",
          "27: if ($hassiteconfig) {",
          "",
          "[Added Lines]",
          "27: if ($hassiteconfig && \\core_analytics\\manager::is_analytics_enabled()) {",
          "",
          "---------------"
        ],
        "admin/settings/subsystems.php||admin/settings/subsystems.php": [
          "File: admin/settings/subsystems.php -> admin/settings/subsystems.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     $optionalsubsystems->add(new admin_setting_configcheckbox('allowstealth', new lang_string('allowstealthmodules'),",
          "50:         new lang_string('allowstealthmodules_help'), 0, 1, 0));",
          "51: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:     $optionalsubsystems->add(new admin_setting_configcheckbox('enableanalytics', new lang_string('enableanalytics', 'admin'),",
          "53:         new lang_string('configenableanalytics', 'admin'), 1, 1, 0));",
          "",
          "---------------"
        ],
        "admin/tool/analytics/classes/output/renderer.php||admin/tool/analytics/classes/output/renderer.php": [
          "File: admin/tool/analytics/classes/output/renderer.php -> admin/tool/analytics/classes/output/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:         $data = $invalidanalysables->export_for_template($this);",
          "230:         return parent::render_from_template('tool_analytics/invalid_analysables', $data);",
          "231:     }",
          "232: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     public function render_analytics_disabled() {",
          "239:         global $OUTPUT, $PAGE, $FULLME;",
          "241:         $PAGE->set_url($FULLME);",
          "242:         $PAGE->set_title(get_string('pluginname', 'tool_analytics'));",
          "243:         $PAGE->set_heading(get_string('pluginname', 'tool_analytics'));",
          "245:         $output = $OUTPUT->header();",
          "246:         $output .= $OUTPUT->notification(get_string('analyticsdisabled', 'analytics'), \\core\\output\\notification::NOTIFY_INFO);",
          "247:         $output .= \\html_writer::tag('a', get_string('continue'), ['class' => 'btn btn-primary',",
          "248:             'href' => (new \\moodle_url('/'))->out()]);",
          "249:         $output .= $OUTPUT->footer();",
          "251:         return $output;",
          "252:     }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/classes/task/predict_models.php||admin/tool/analytics/classes/task/predict_models.php": [
          "File: admin/tool/analytics/classes/task/predict_models.php -> admin/tool/analytics/classes/task/predict_models.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     public function execute() {",
          "53:         global $OUTPUT, $PAGE;",
          "55:         $models = \\core_analytics\\manager::get_all_models(true, true);",
          "56:         if (!$models) {",
          "57:             mtrace(get_string('errornoenabledandtrainedmodels', 'tool_analytics'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:         if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "56:             mtrace(get_string('analyticsdisabled', 'analytics'));",
          "57:             return;",
          "58:         }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/classes/task/train_models.php||admin/tool/analytics/classes/task/train_models.php": [
          "File: admin/tool/analytics/classes/task/train_models.php -> admin/tool/analytics/classes/task/train_models.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     public function execute() {",
          "53:         global $OUTPUT, $PAGE;",
          "55:         $models = \\core_analytics\\manager::get_all_models(true);",
          "56:         if (!$models) {",
          "57:             mtrace(get_string('errornoenabledmodels', 'tool_analytics'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:         if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "56:             mtrace(get_string('analyticsdisabled', 'analytics'));",
          "57:             return;",
          "58:         }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/cli/enable_model.php||admin/tool/analytics/cli/enable_model.php": [
          "File: admin/tool/analytics/cli/enable_model.php -> admin/tool/analytics/cli/enable_model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     exit(0);",
          "58: }",
          "60: if ($options['list'] || $options['modelid'] === false) {",
          "61:     \\tool_analytics\\clihelper::list_models();",
          "62:     exit(0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "61:     echo get_string('analyticsdisabled', 'analytics') . PHP_EOL;",
          "62:     exit(0);",
          "63: }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/cli/evaluate_model.php||admin/tool/analytics/cli/evaluate_model.php": [
          "File: admin/tool/analytics/cli/evaluate_model.php -> admin/tool/analytics/cli/evaluate_model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     exit(0);",
          "68: }",
          "70: if ($options['list']) {",
          "71:     \\tool_analytics\\clihelper::list_models();",
          "72:     exit(0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "71:     echo get_string('analyticsdisabled', 'analytics') . PHP_EOL;",
          "72:     exit(0);",
          "73: }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/createmodel.php||admin/tool/analytics/createmodel.php": [
          "File: admin/tool/analytics/createmodel.php -> admin/tool/analytics/createmodel.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: require_login();",
          "28: \\core_analytics\\manager::check_can_manage_models();",
          "30: $returnurl = new \\moodle_url('/admin/tool/analytics/index.php');",
          "31: $url = new \\moodle_url('/admin/tool/analytics/createmodel.php');",
          "32: $title = get_string('createmodel', 'tool_analytics');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "31:     $PAGE->set_context(\\context_system::instance());",
          "32:     $renderer = $PAGE->get_renderer('tool_analytics');",
          "33:     echo $renderer->render_analytics_disabled();",
          "34:     exit(0);",
          "35: }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/importmodel.php||admin/tool/analytics/importmodel.php": [
          "File: admin/tool/analytics/importmodel.php -> admin/tool/analytics/importmodel.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: require_login();",
          "28: \\core_analytics\\manager::check_can_manage_models();",
          "30: $returnurl = new \\moodle_url('/admin/tool/analytics/index.php');",
          "31: $url = new \\moodle_url('/admin/tool/analytics/importmodel.php');",
          "32: $title = get_string('importmodel', 'tool_analytics');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "31:     $PAGE->set_context(\\context_system::instance());",
          "32:     $renderer = $PAGE->get_renderer('tool_analytics');",
          "33:     echo $renderer->render_analytics_disabled();",
          "34:     exit(0);",
          "35: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57: echo $OUTPUT->header();",
          "58: $form->display();",
          "",
          "[Removed Lines]",
          "59: echo $OUTPUT->footer();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "admin/tool/analytics/model.php||admin/tool/analytics/model.php": [
          "File: admin/tool/analytics/model.php -> admin/tool/analytics/model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: $model = new \\core_analytics\\model($id);",
          "34: \\core_analytics\\manager::check_can_manage_models();",
          "36: $returnurl = new \\moodle_url('/admin/tool/analytics/index.php');",
          "37: $params = array('id' => $id, 'action' => $action);",
          "38: $url = new \\moodle_url('/admin/tool/analytics/model.php', $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "37:     $PAGE->set_context(\\context_system::instance());",
          "38:     $renderer = $PAGE->get_renderer('tool_analytics');",
          "39:     echo $renderer->render_analytics_disabled();",
          "40:     exit(0);",
          "41: }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/restoredefault.php||admin/tool/analytics/restoredefault.php": [
          "File: admin/tool/analytics/restoredefault.php -> admin/tool/analytics/restoredefault.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: require_login();",
          "28: \\core_analytics\\manager::check_can_manage_models();",
          "30: $confirmed = optional_param('confirmed', false, PARAM_BOOL);",
          "31: $restoreids = optional_param_array('restoreid', [], PARAM_ALPHANUM);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "31:     $PAGE->set_context(\\context_system::instance());",
          "32:     $renderer = $PAGE->get_renderer('tool_analytics');",
          "33:     echo $renderer->render_analytics_disabled();",
          "34:     exit(0);",
          "35: }",
          "",
          "---------------"
        ],
        "admin/tool/analytics/settings.php||admin/tool/analytics/settings.php": [
          "File: admin/tool/analytics/settings.php -> admin/tool/analytics/settings.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "27: $ADMIN->add('analytics', new admin_externalpage('analyticmodels', get_string('analyticmodels', 'tool_analytics'),",
          "28:     \"$CFG->wwwroot/$CFG->admin/tool/analytics/index.php\", 'moodle/analytics:managemodels'));",
          "",
          "[Added Lines]",
          "27: if (\\core_analytics\\manager::is_analytics_enabled()) {",
          "28:     $ADMIN->add('analytics', new admin_externalpage('analyticmodels', get_string('analyticmodels', 'tool_analytics'),",
          "29:         \"$CFG->wwwroot/$CFG->admin/tool/analytics/index.php\", 'moodle/analytics:managemodels'));",
          "30: }",
          "",
          "---------------"
        ],
        "analytics/classes/manager.php||analytics/classes/manager.php": [
          "File: analytics/classes/manager.php -> analytics/classes/manager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:         }",
          "100:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:     public static function is_analytics_enabled(): bool {",
          "108:         global $CFG;",
          "110:         if (isset($CFG->enableanalytics)) {",
          "111:             return $CFG->enableanalytics;",
          "112:         }",
          "115:         return true;",
          "116:     }",
          "",
          "---------------"
        ],
        "lang/en/admin.php||lang/en/admin.php": [
          "File: lang/en/admin.php -> lang/en/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "209: $string['configdeleteincompleteusers'] = 'After this period, any account without the first name, last name or email field filled in is deleted.';",
          "210: $string['configdeleteunconfirmed'] = 'For certain authentication methods, such as email-based self-registration, users must confirm their account within a certain time. After this period, any old unconfirmed accounts are deleted.';",
          "211: $string['configdenyemailaddresses'] = 'To deny email addresses from particular domains list them here in the same way.  All other domains will be accepted. To deny subdomains add the domain with a preceding \\'.\\'. eg <strong>hotmail.com yahoo.co.uk .live.com</strong>';",
          "212: $string['configenableblogs'] = 'This switch provides all site users with their own blog.';",
          "213: $string['configenabledevicedetection'] = 'Enables detection of mobiles, smartphones, tablets or default devices (desktop PCs, laptops, etc) for the application of themes and other features.';",
          "214: $string['configdisableuserimages'] = 'Disable the ability for users to change user profile images.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212: $string['configenableanalytics'] = 'Analytics models, such as \\'Students at risk of dropping out\\' or \\'Upcoming activities due\\', can generate predictions, send insight notifications and offer further actions such as messaging users.';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "514: $string['emoticonsreset'] = 'Reset emoticons setting to default values';",
          "515: $string['emptysettingvalue'] = 'Empty';",
          "516: $string['enableactivitychooser'] = 'Enable activity chooser';",
          "517: $string['enableblogs'] = 'Enable blogs';",
          "518: $string['enablecalendarexport'] = 'Enable calendar export';",
          "519: $string['enablecomments'] = 'Enable comments';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518: $string['enableanalytics'] = 'Analytics';",
          "",
          "---------------"
        ],
        "lang/en/analytics.php||lang/en/analytics.php": [
          "File: lang/en/analytics.php -> lang/en/analytics.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: $string['analysablenotvalidfortarget'] = 'Analysable {$a->analysableid} is not valid for this target: {$a->result}';",
          "27: $string['analysisinprogress'] = 'Still being analysed by a previous execution';",
          "28: $string['analytics'] = 'Analytics';",
          "29: $string['analyticslogstore'] = 'Log store used for analytics';",
          "30: $string['analyticslogstore_help'] = 'The log store that will be used by the analytics API to read users\\' activity.';",
          "31: $string['analyticssettings'] = 'Analytics settings';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: $string['analyticsdisabled'] = 'Analytics is disabled. You can enable it in \"Site administration > Advanced features\".';",
          "",
          "---------------"
        ],
        "lib/classes/task/analytics_cleanup_task.php||lib/classes/task/analytics_cleanup_task.php": [
          "File: lib/classes/task/analytics_cleanup_task.php -> lib/classes/task/analytics_cleanup_task.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     public function execute() {",
          "53:         $models = \\core_analytics\\manager::cleanup();",
          "54:     }",
          "55: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:         if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "55:             mtrace(get_string('analyticsdisabled', 'analytics'));",
          "56:             return;",
          "57:         }",
          "",
          "---------------"
        ],
        "report/insights/action.php||report/insights/action.php": [
          "File: report/insights/action.php -> report/insights/action.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: $actionname = required_param('action', PARAM_ALPHANUMEXT);",
          "29: $forwardurl = required_param('forwardurl', PARAM_LOCALURL);",
          "31: list($model, $prediction, $context) = \\core_analytics\\manager::get_prediction($predictionid, true);",
          "32: if ($context->contextlevel < CONTEXT_COURSE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "32:     $PAGE->set_context(\\context_system::instance());",
          "33:     $renderer = $PAGE->get_renderer('report_insights');",
          "34:     echo $renderer->render_analytics_disabled();",
          "35:     exit(0);",
          "36: }",
          "",
          "---------------"
        ],
        "report/insights/classes/output/renderer.php||report/insights/classes/output/renderer.php": [
          "File: report/insights/classes/output/renderer.php -> report/insights/classes/output/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:         return $output;",
          "123:     }",
          "124: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:     public function render_analytics_disabled() {",
          "131:         global $OUTPUT, $PAGE, $FULLME;",
          "133:         $PAGE->set_url($FULLME);",
          "134:         $PAGE->set_title(get_string('pluginname', 'report_insights'));",
          "135:         $PAGE->set_heading(get_string('pluginname', 'report_insights'));",
          "137:         $output = $OUTPUT->header();",
          "138:         $output .= $OUTPUT->notification(get_string('analyticsdisabled', 'analytics'), \\core\\output\\notification::NOTIFY_INFO);",
          "139:         $output .= \\html_writer::tag('a', get_string('continue'), ['class' => 'btn btn-primary',",
          "140:             'href' => (new \\moodle_url('/'))->out()]);",
          "141:         $output .= $OUTPUT->footer();",
          "143:         return $output;",
          "144:     }",
          "",
          "---------------"
        ],
        "report/insights/done.php||report/insights/done.php": [
          "File: report/insights/done.php -> report/insights/done.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: $PAGE->set_pagelayout('popup');",
          "32: $PAGE->set_context(\\context_system::instance());",
          "33: $PAGE->set_title(get_site()->fullname);",
          "34: $PAGE->set_url(new \\moodle_url('/report/insights/done.php'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "35:     $renderer = $PAGE->get_renderer('report_insights');",
          "36:     echo $renderer->render_analytics_disabled();",
          "37:     exit(0);",
          "38: }",
          "",
          "---------------"
        ],
        "report/insights/insights.php||report/insights/insights.php": [
          "File: report/insights/insights.php -> report/insights/insights.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     $PAGE->set_context($context);",
          "42: }",
          "44: \\core_analytics\\manager::check_can_list_insights($context);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "45:     $renderer = $PAGE->get_renderer('report_insights');",
          "46:     echo $renderer->render_analytics_disabled();",
          "47:     exit(0);",
          "48: }",
          "",
          "---------------"
        ],
        "report/insights/lib.php||report/insights/lib.php": [
          "File: report/insights/lib.php -> report/insights/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: function report_insights_extend_navigation_course($navigation, $course, $context) {",
          "39:         $modelids = \\core_analytics\\manager::cached_models_with_insights($context);",
          "40:         if (!empty($modelids)) {",
          "",
          "[Removed Lines]",
          "37:     if (has_capability('moodle/analytics:listinsights', $context)) {",
          "",
          "[Added Lines]",
          "37:     if (\\core_analytics\\manager::is_analytics_enabled() && has_capability('moodle/analytics:listinsights', $context)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: function report_insights_myprofile_navigation(core_user\\output\\myprofile\\tree $tree, $user, $iscurrentuser, $course) {",
          "70:         }",
          "71:     }",
          "72: }",
          "",
          "[Removed Lines]",
          "61:     $context = \\context_user::instance($user->id);",
          "62:     if (\\core_analytics\\manager::check_can_list_insights($context, true)) {",
          "64:         $modelids = \\core_analytics\\manager::cached_models_with_insights($context);",
          "65:         if (!empty($modelids)) {",
          "66:             $url = new moodle_url('/report/insights/insights.php', array('contextid' => $context->id));",
          "67:             $node = new core_user\\output\\myprofile\\node('reports', 'insights', get_string('insights', 'report_insights'),",
          "68:                 null, $url);",
          "69:             $tree->add_node($node);",
          "",
          "[Added Lines]",
          "61:     if (\\core_analytics\\manager::is_analytics_enabled()) {",
          "62:         $context = \\context_user::instance($user->id);",
          "63:         if (\\core_analytics\\manager::check_can_list_insights($context, true)) {",
          "65:             $modelids = \\core_analytics\\manager::cached_models_with_insights($context);",
          "66:             if (!empty($modelids)) {",
          "67:                 $url = new moodle_url('/report/insights/insights.php', array('contextid' => $context->id));",
          "68:                 $node = new core_user\\output\\myprofile\\node('reports', 'insights', get_string('insights', 'report_insights'),",
          "69:                     null, $url);",
          "70:                 $tree->add_node($node);",
          "71:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81: function report_insights_extend_navigation_category_settings($navigation, $context) {",
          "85:         $modelids = \\core_analytics\\manager::cached_models_with_insights($context);",
          "86:         if (!empty($modelids)) {",
          "",
          "[Removed Lines]",
          "83:     if (has_capability('moodle/analytics:listinsights', $context)) {",
          "",
          "[Added Lines]",
          "85:     if (\\core_analytics\\manager::is_analytics_enabled() && has_capability('moodle/analytics:listinsights', $context)) {",
          "",
          "---------------"
        ],
        "report/insights/prediction.php||report/insights/prediction.php": [
          "File: report/insights/prediction.php -> report/insights/prediction.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: $predictionid = required_param('id', PARAM_INT);",
          "30: list($model, $prediction, $context) = \\core_analytics\\manager::get_prediction($predictionid, true);",
          "31: if ($context->contextlevel < CONTEXT_COURSE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: if (!\\core_analytics\\manager::is_analytics_enabled()) {",
          "31:     $PAGE->set_context(\\context_system::instance());",
          "32:     $renderer = $PAGE->get_renderer('report_insights');",
          "33:     echo $renderer->render_analytics_disabled();",
          "34:     exit(0);",
          "35: }",
          "",
          "---------------"
        ],
        "report/insights/settings.php||report/insights/settings.php": [
          "File: report/insights/settings.php -> report/insights/settings.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: defined('MOODLE_INTERNAL') || die;",
          "",
          "[Removed Lines]",
          "30: $ADMIN->add('reports', new admin_externalpage('reportinsights', get_string('insights', 'report_insights'),",
          "31:         $CFG->wwwroot . \"/report/insights/insights.php?contextid=\" . SYSCONTEXTID, 'moodle/analytics:listinsights'));",
          "34: $settings = null;",
          "",
          "[Added Lines]",
          "29: if (\\core_analytics\\manager::is_analytics_enabled()) {",
          "31:     $ADMIN->add('reports', new admin_externalpage('reportinsights', get_string('insights', 'report_insights'),",
          "32:             $CFG->wwwroot . \"/report/insights/insights.php?contextid=\" . SYSCONTEXTID, 'moodle/analytics:listinsights'));",
          "35:     $settings = null;",
          "36: }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019100900.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019100900.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bcd85def5c3320abb9ae69d5b4762c89403b116f",
      "candidate_info": {
        "commit_hash": "bcd85def5c3320abb9ae69d5b4762c89403b116f",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/bcd85def5c3320abb9ae69d5b4762c89403b116f",
        "files": [
          "version.php"
        ],
        "message": "MDL-64282 versions: main version bump",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018112800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018112900.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af540d426def658e30691aaa44cf55d23493497a",
      "candidate_info": {
        "commit_hash": "af540d426def658e30691aaa44cf55d23493497a",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/af540d426def658e30691aaa44cf55d23493497a",
        "files": [
          "lang/en/moodle.php",
          "lib/classes/privacy/provider.php",
          "lib/db/install.xml",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-49399 task: Add task log table",
        "before_after_code_files": [
          "lang/en/moodle.php||lang/en/moodle.php",
          "lib/classes/privacy/provider.php||lib/classes/privacy/provider.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lang/en/moodle.php||lang/en/moodle.php": [
          "File: lang/en/moodle.php -> lang/en/moodle.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1588: $string['privacy:metadata:task_adhoc:component'] = 'The component owning the task.';",
          "1589: $string['privacy:metadata:task_adhoc:nextruntime'] = 'The earliest time to run this task.';",
          "1590: $string['privacy:metadata:task_adhoc:userid'] = 'The user to run the task as.';",
          "1591: $string['privacy:metadata:upgrade_log'] = 'The upgrade log.';",
          "1592: $string['privacy:metadata:upgrade_log:backtrace'] = 'Any backtrace associated with this upgrade step.';",
          "1593: $string['privacy:metadata:upgrade_log:details'] = 'Extra information relating to the upgrade.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1591: $string['privacy:metadata:task_log'] = 'Log output for a log';",
          "1592: $string['privacy:metadata:task_log:component'] = 'The component owning the task.';",
          "1593: $string['privacy:metadata:task_log:userid'] = 'The user that the task belonged to.';",
          "",
          "---------------"
        ],
        "lib/classes/privacy/provider.php||lib/classes/privacy/provider.php": [
          "File: lib/classes/privacy/provider.php -> lib/classes/privacy/provider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:                 'userid'        => 'privacy:metadata:task_adhoc:userid',",
          "89:             ], 'privacy:metadata:task_adhoc');",
          "93:         $collection->add_database_table('events_queue', [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:         $collection->add_database_table('task_log', [",
          "94:                 'component'     => 'privacy:metadata:task_log:component',",
          "95:                 'userid'        => 'privacy:metadata:task_log:userid',",
          "96:             ], 'privacy:metadata:task_log');",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2516:         upgrade_main_savepoint(true, 2018120301.02);",
          "2517:     }",
          "2519:     return true;",
          "2520: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2519:     if ($oldversion < 2019011500.00) {",
          "2521:         $table = new xmldb_table('task_log');",
          "2524:         $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);",
          "2525:         $table->add_field('type', XMLDB_TYPE_INTEGER, '4', null, XMLDB_NOTNULL, null, null);",
          "2526:         $table->add_field('component', XMLDB_TYPE_CHAR, '255', null, XMLDB_NOTNULL, null, null);",
          "2527:         $table->add_field('classname', XMLDB_TYPE_CHAR, '255', null, XMLDB_NOTNULL, null, null);",
          "2528:         $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);",
          "2529:         $table->add_field('timestart', XMLDB_TYPE_NUMBER, '20, 10', null, XMLDB_NOTNULL, null, null);",
          "2530:         $table->add_field('timeend', XMLDB_TYPE_NUMBER, '20, 10', null, XMLDB_NOTNULL, null, null);",
          "2531:         $table->add_field('dbreads', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);",
          "2532:         $table->add_field('dbwrites', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);",
          "2533:         $table->add_field('result', XMLDB_TYPE_INTEGER, '2', null, XMLDB_NOTNULL, null, null);",
          "2536:         $table->add_key('primary', XMLDB_KEY_PRIMARY, ['id']);",
          "2539:         $table->add_index('classname', XMLDB_INDEX_NOTUNIQUE, ['classname']);",
          "2540:         $table->add_index('timestart', XMLDB_INDEX_NOTUNIQUE, ['timestart']);",
          "2543:         if (!$dbman->table_exists($table)) {",
          "2544:             $dbman->create_table($table);",
          "2545:         }",
          "2548:         upgrade_main_savepoint(true, 2019011500.00);",
          "2549:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019011100.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019011500.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22744b745bb456f525e8ef09e1fb719a69fc2570",
      "candidate_info": {
        "commit_hash": "22744b745bb456f525e8ef09e1fb719a69fc2570",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/22744b745bb456f525e8ef09e1fb719a69fc2570",
        "files": [
          "version.php"
        ],
        "message": "weekly back-to-dev release 3.6dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018051700.00;              // 20180517      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.5 (Build: 20180517)'; // Human-friendly version name",
          "38: $branch   = '35';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Added Lines]",
          "32: $version  = 2018051700.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.6dev (Build: 20180521)'; // Human-friendly version name",
          "38: $branch   = '36';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "---------------"
        ]
      }
    }
  ]
}