{
  "cve_id": "CVE-2020-8912",
  "cve_desc": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c40a73ace9f6c873ca8743dcbe8c9d8df5091acb",
      "candidate_info": {
        "commit_hash": "c40a73ace9f6c873ca8743dcbe8c9d8df5091acb",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/c40a73ace9f6c873ca8743dcbe8c9d8df5091acb",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/amplify/2017-07-25/api-2.json",
          "models/apis/amplify/2017-07-25/docs-2.json",
          "models/apis/eks/2017-11-01/api-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/paginators-1.json",
          "models/apis/snowball/2016-06-30/api-2.json",
          "models/apis/snowball/2016-06-30/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/amplify/api.go",
          "service/eks/api.go",
          "service/medialive/api.go",
          "service/servicecatalog/api.go",
          "service/servicecatalog/servicecatalogiface/interface.go",
          "service/snowball/api.go",
          "service/snowball/doc.go",
          "service/snowball/errors.go",
          "service/snowball/snowballiface/interface.go"
        ],
        "message": "Release v1.35.7 (2020-10-09) ===\n\n### Service Client Updates\n* `service/amplify`: Updates service API and documentation\n* `service/eks`: Updates service API\n* `service/medialive`: Updates service API and documentation\n  * WAV audio output. Extracting ancillary captions in MP4 file inputs. Priority on channels feeding a multiplex (higher priority channels will tend to have higher video quality).\n* `service/servicecatalog`: Updates service API, documentation, and paginators\n  * This new API takes either a ProvisonedProductId or a ProvisionedProductName, along with a list of 1 or more output keys and responds with the (key,value) pairs of those outputs.\n* `service/snowball`: Updates service API and documentation\n  * We added new APIs to allow customers to better manage their device shipping. You can check if your shipping label expired, generate a new label, and tell us that you received or shipped your job.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/amplify/api.go||service/amplify/api.go",
          "service/eks/api.go||service/eks/api.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/servicecatalog/servicecatalogiface/interface.go||service/servicecatalog/servicecatalogiface/interface.go",
          "service/snowball/api.go||service/snowball/api.go",
          "service/snowball/doc.go||service/snowball/doc.go",
          "service/snowball/errors.go||service/snowball/errors.go",
          "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:   \"api.sagemaker\": service{",
          "595:    Endpoints: endpoints{",
          "596:     \"ap-east-1\":      endpoint{},",
          "597:     \"ap-northeast-1\": endpoint{},",
          "598:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "596:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "602:     \"ca-central-1\":   endpoint{},",
          "603:     \"eu-central-1\":   endpoint{},",
          "604:     \"eu-north-1\":     endpoint{},",
          "605:     \"eu-west-1\":      endpoint{},",
          "606:     \"eu-west-2\":      endpoint{},",
          "607:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4876:   \"runtime.sagemaker\": service{",
          "4878:    Endpoints: endpoints{",
          "4879:     \"ap-east-1\":      endpoint{},",
          "4880:     \"ap-northeast-1\": endpoint{},",
          "4881:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4881:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4885:     \"ca-central-1\":   endpoint{},",
          "4886:     \"eu-central-1\":   endpoint{},",
          "4887:     \"eu-north-1\":     endpoint{},",
          "4888:     \"eu-west-1\":      endpoint{},",
          "4889:     \"eu-west-2\":      endpoint{},",
          "4890:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4891:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.35.6\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.35.7\"",
          "",
          "---------------"
        ],
        "service/amplify/api.go||service/amplify/api.go": [
          "File: service/amplify/api.go -> service/amplify/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3618:  EnableBasicAuth *bool `locationName:\"enableBasicAuth\" type:\"boolean\"`",
          "3621:  EnablePullRequestPreview *bool `locationName:\"enablePullRequestPreview\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3624:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3680:  return s",
          "3681: }",
          "3684: func (s *AutoBranchCreationConfig) SetEnablePullRequestPreview(v bool) *AutoBranchCreationConfig {",
          "3685:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3690: func (s *AutoBranchCreationConfig) SetEnablePerformanceMode(v bool) *AutoBranchCreationConfig {",
          "3691:  s.EnablePerformanceMode = &v",
          "3692:  return s",
          "3693: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3918:  EnableNotification *bool `locationName:\"enableNotification\" type:\"boolean\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3936:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4065:  return s",
          "4066: }",
          "4069: func (s *Branch) SetEnablePullRequestPreview(v bool) *Branch {",
          "4070:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4087: func (s *Branch) SetEnablePerformanceMode(v bool) *Branch {",
          "4088:  s.EnablePerformanceMode = &v",
          "4089:  return s",
          "4090: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4535:  EnableNotification *bool `locationName:\"enableNotification\" type:\"boolean\"`",
          "4538:  EnablePullRequestPreview *bool `locationName:\"enablePullRequestPreview\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4565:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4657:  return s",
          "4658: }",
          "4661: func (s *CreateBranchInput) SetEnablePullRequestPreview(v bool) *CreateBranchInput {",
          "4662:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4691: func (s *CreateBranchInput) SetEnablePerformanceMode(v bool) *CreateBranchInput {",
          "4692:  s.EnablePerformanceMode = &v",
          "4693:  return s",
          "4694: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8836:  EnableNotification *bool `locationName:\"enableNotification\" type:\"boolean\"`",
          "8839:  EnablePullRequestPreview *bool `locationName:\"enablePullRequestPreview\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8878:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8952:  return s",
          "8953: }",
          "8956: func (s *UpdateBranchInput) SetEnablePullRequestPreview(v bool) *UpdateBranchInput {",
          "8957:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8998: func (s *UpdateBranchInput) SetEnablePerformanceMode(v bool) *UpdateBranchInput {",
          "8999:  s.EnablePerformanceMode = &v",
          "9000:  return s",
          "9001: }",
          "",
          "---------------"
        ],
        "service/eks/api.go||service/eks/api.go": [
          "File: service/eks/api.go -> service/eks/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6943:  ErrorCodeInsufficientFreeAddresses = \"InsufficientFreeAddresses\"",
          "6944: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6946:  ErrorCodeClusterUnreachable = \"ClusterUnreachable\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6957:   ErrorCodeNodeCreationFailure,",
          "6958:   ErrorCodePodEvictionFailure,",
          "6959:   ErrorCodeInsufficientFreeAddresses,",
          "6960:  }",
          "6961: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6963:   ErrorCodeClusterUnreachable,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7069:  NodegroupIssueCodeInternalFailure = \"InternalFailure\"",
          "7070: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7076:  NodegroupIssueCodeClusterUnreachable = \"ClusterUnreachable\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7089:   NodegroupIssueCodeInsufficientFreeAddresses,",
          "7090:   NodegroupIssueCodeAccessDenied,",
          "7091:   NodegroupIssueCodeInternalFailure,",
          "7092:  }",
          "7093: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7099:   NodegroupIssueCodeClusterUnreachable,",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5258:  return s",
          "5259: }",
          "5262: type ArchiveContainerSettings struct {",
          "5263:  _ struct{} `type:\"structure\"`",
          "5266:  M2tsSettings *M2tsSettings `locationName:\"m2tsSettings\" type:\"structure\"`",
          "5267: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5262: type AncillarySourceSettings struct {",
          "5263:  _ struct{} `type:\"structure\"`",
          "5271:  SourceAncillaryChannelNumber *int64 `locationName:\"sourceAncillaryChannelNumber\" min:\"1\" type:\"integer\"`",
          "5272: }",
          "5275: func (s AncillarySourceSettings) String() string {",
          "5276:  return awsutil.Prettify(s)",
          "5277: }",
          "5280: func (s AncillarySourceSettings) GoString() string {",
          "5281:  return s.String()",
          "5282: }",
          "5285: func (s *AncillarySourceSettings) Validate() error {",
          "5286:  invalidParams := request.ErrInvalidParams{Context: \"AncillarySourceSettings\"}",
          "5287:  if s.SourceAncillaryChannelNumber != nil && *s.SourceAncillaryChannelNumber < 1 {",
          "5288:   invalidParams.Add(request.NewErrParamMinValue(\"SourceAncillaryChannelNumber\", 1))",
          "5289:  }",
          "5291:  if invalidParams.Len() > 0 {",
          "5292:   return invalidParams",
          "5293:  }",
          "5294:  return nil",
          "5295: }",
          "5298: func (s *AncillarySourceSettings) SetSourceAncillaryChannelNumber(v int64) *AncillarySourceSettings {",
          "5299:  s.SourceAncillaryChannelNumber = &v",
          "5300:  return s",
          "5301: }",
          "5311:  RawSettings *RawSettings `locationName:\"rawSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5297:  return s",
          "5298: }",
          "5301: type ArchiveGroupSettings struct {",
          "5302:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5346: func (s *ArchiveContainerSettings) SetRawSettings(v *RawSettings) *ArchiveContainerSettings {",
          "5347:  s.RawSettings = v",
          "5348:  return s",
          "5349: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5527:  PassThroughSettings *PassThroughSettings `locationName:\"passThroughSettings\" type:\"structure\"`",
          "5528: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5581:  WavSettings *WavSettings `locationName:\"wavSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5587:  return s",
          "5588: }",
          "5591: type AudioDescription struct {",
          "5592:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5645: func (s *AudioCodecSettings) SetWavSettings(v *WavSettings) *AudioCodecSettings {",
          "5646:  s.WavSettings = v",
          "5647:  return s",
          "5648: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7717: type CaptionSelectorSettings struct {",
          "7718:  _ struct{} `type:\"structure\"`",
          "7721:  AribSourceSettings *AribSourceSettings `locationName:\"aribSourceSettings\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7781:  AncillarySourceSettings *AncillarySourceSettings `locationName:\"ancillarySourceSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7750: func (s *CaptionSelectorSettings) Validate() error {",
          "7751:  invalidParams := request.ErrInvalidParams{Context: \"CaptionSelectorSettings\"}",
          "7752:  if s.DvbSubSourceSettings != nil {",
          "7753:   if err := s.DvbSubSourceSettings.Validate(); err != nil {",
          "7754:    invalidParams.AddNested(\"DvbSubSourceSettings\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7815:  if s.AncillarySourceSettings != nil {",
          "7816:   if err := s.AncillarySourceSettings.Validate(); err != nil {",
          "7817:    invalidParams.AddNested(\"AncillarySourceSettings\", err.(request.ErrInvalidParams))",
          "7818:   }",
          "7819:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7776:  return nil",
          "7777: }",
          "7780: func (s *CaptionSelectorSettings) SetAribSourceSettings(v *AribSourceSettings) *CaptionSelectorSettings {",
          "7781:  s.AribSourceSettings = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7848: func (s *CaptionSelectorSettings) SetAncillarySourceSettings(v *AncillarySourceSettings) *CaptionSelectorSettings {",
          "7849:  s.AncillarySourceSettings = v",
          "7850:  return s",
          "7851: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7812:  return s",
          "7813: }",
          "7815: type Channel struct {",
          "7816:  _ struct{} `type:\"structure\"`",
          "7819:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "7823:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7889: type CdiInputSpecification struct {",
          "7890:  _ struct{} `type:\"structure\"`",
          "7893:  Resolution *string `locationName:\"resolution\" type:\"string\" enum:\"CdiInputResolution\"`",
          "7894: }",
          "7897: func (s CdiInputSpecification) String() string {",
          "7898:  return awsutil.Prettify(s)",
          "7899: }",
          "7902: func (s CdiInputSpecification) GoString() string {",
          "7903:  return s.String()",
          "7904: }",
          "7907: func (s *CdiInputSpecification) SetResolution(v string) *CdiInputSpecification {",
          "7908:  s.Resolution = &v",
          "7909:  return s",
          "7910: }",
          "7919:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7878:  return s",
          "7879: }",
          "7882: func (s *Channel) SetChannelClass(v string) *Channel {",
          "7883:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7983: func (s *Channel) SetCdiInputSpecification(v *CdiInputSpecification) *Channel {",
          "7984:  s.CdiInputSpecification = v",
          "7985:  return s",
          "7986: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7992:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "7996:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8102:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "8045:  return s",
          "8046: }",
          "8049: func (s *ChannelSummary) SetChannelClass(v string) *ChannelSummary {",
          "8050:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8160: func (s *ChannelSummary) SetCdiInputSpecification(v *CdiInputSpecification) *ChannelSummary {",
          "8161:  s.CdiInputSpecification = v",
          "8162:  return s",
          "8163: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "8190: type CreateChannelInput struct {",
          "8191:  _ struct{} `type:\"structure\"`",
          "8195:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8310:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "8262:  return nil",
          "8263: }",
          "8266: func (s *CreateChannelInput) SetChannelClass(v string) *CreateChannelInput {",
          "8267:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8385: func (s *CreateChannelInput) SetCdiInputSpecification(v *CdiInputSpecification) *CreateChannelInput {",
          "8386:  s.CdiInputSpecification = v",
          "8387:  return s",
          "8388: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "8859:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "8863:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8986:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "8907:  return s",
          "8908: }",
          "8911: func (s *DeleteChannelOutput) SetChannelClass(v string) *DeleteChannelOutput {",
          "8912:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9038: func (s *DeleteChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *DeleteChannelOutput {",
          "9039:  s.CdiInputSpecification = v",
          "9040:  return s",
          "9041: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "9298:  PacketIdentifiersMap *MultiplexProgramPacketIdentifiersMap `locationName:\"packetIdentifiersMap\" type:\"structure\"`",
          "9300:  ProgramName *string `locationName:\"programName\" type:\"string\"`",
          "9301: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9433:  PipelineDetails []*MultiplexProgramPipelineDetail `locationName:\"pipelineDetails\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "9328:  return s",
          "9329: }",
          "9332: func (s *DeleteMultiplexProgramOutput) SetProgramName(v string) *DeleteMultiplexProgramOutput {",
          "9333:  s.ProgramName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9467: func (s *DeleteMultiplexProgramOutput) SetPipelineDetails(v []*MultiplexProgramPipelineDetail) *DeleteMultiplexProgramOutput {",
          "9468:  s.PipelineDetails = v",
          "9469:  return s",
          "9470: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "9698:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "9702:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9841:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "9746:  return s",
          "9747: }",
          "9750: func (s *DescribeChannelOutput) SetChannelClass(v string) *DescribeChannelOutput {",
          "9751:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9893: func (s *DescribeChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *DescribeChannelOutput {",
          "9894:  s.CdiInputSpecification = v",
          "9895:  return s",
          "9896: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "10559:  PacketIdentifiersMap *MultiplexProgramPacketIdentifiersMap `locationName:\"packetIdentifiersMap\" type:\"structure\"`",
          "10561:  ProgramName *string `locationName:\"programName\" type:\"string\"`",
          "10562: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10710:  PipelineDetails []*MultiplexProgramPipelineDetail `locationName:\"pipelineDetails\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "10589:  return s",
          "10590: }",
          "10593: func (s *DescribeMultiplexProgramOutput) SetProgramName(v string) *DescribeMultiplexProgramOutput {",
          "10594:  s.ProgramName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10744: func (s *DescribeMultiplexProgramOutput) SetPipelineDetails(v []*MultiplexProgramPipelineDetail) *DescribeMultiplexProgramOutput {",
          "10745:  s.PipelineDetails = v",
          "10746:  return s",
          "10747: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "18124:  return s",
          "18125: }",
          "18128: type MsSmoothGroupSettings struct {",
          "18129:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18285: type Mpeg2FilterSettings struct {",
          "18286:  _ struct{} `type:\"structure\"`",
          "18289:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "18290: }",
          "18293: func (s Mpeg2FilterSettings) String() string {",
          "18294:  return awsutil.Prettify(s)",
          "18295: }",
          "18298: func (s Mpeg2FilterSettings) GoString() string {",
          "18299:  return s.String()",
          "18300: }",
          "18303: func (s *Mpeg2FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *Mpeg2FilterSettings {",
          "18304:  s.TemporalFilterSettings = v",
          "18305:  return s",
          "18306: }",
          "18309: type Mpeg2Settings struct {",
          "18310:  _ struct{} `type:\"structure\"`",
          "18316:  AdaptiveQuantization *string `locationName:\"adaptiveQuantization\" type:\"string\" enum:\"Mpeg2AdaptiveQuantization\"`",
          "18323:  AfdSignaling *string `locationName:\"afdSignaling\" type:\"string\" enum:\"AfdSignaling\"`",
          "18328:  ColorMetadata *string `locationName:\"colorMetadata\" type:\"string\" enum:\"Mpeg2ColorMetadata\"`",
          "18336:  ColorSpace *string `locationName:\"colorSpace\" type:\"string\" enum:\"Mpeg2ColorSpace\"`",
          "18339:  DisplayAspectRatio *string `locationName:\"displayAspectRatio\" type:\"string\" enum:\"Mpeg2DisplayRatio\"`",
          "18350:  FilterSettings *Mpeg2FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "18354:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "18361:  FramerateDenominator *int64 `locationName:\"framerateDenominator\" min:\"1\" type:\"integer\" required:\"true\"`",
          "18367:  FramerateNumerator *int64 `locationName:\"framerateNumerator\" min:\"1\" type:\"integer\" required:\"true\"`",
          "18370:  GopClosedCadence *int64 `locationName:\"gopClosedCadence\" type:\"integer\"`",
          "18374:  GopNumBFrames *int64 `locationName:\"gopNumBFrames\" type:\"integer\"`",
          "18381:  GopSize *float64 `locationName:\"gopSize\" type:\"double\"`",
          "18387:  GopSizeUnits *string `locationName:\"gopSizeUnits\" type:\"string\" enum:\"Mpeg2GopSizeUnits\"`",
          "18390:  ScanType *string `locationName:\"scanType\" type:\"string\" enum:\"Mpeg2ScanType\"`",
          "18396:  SubgopLength *string `locationName:\"subgopLength\" type:\"string\" enum:\"Mpeg2SubGopLength\"`",
          "18403:  TimecodeInsertion *string `locationName:\"timecodeInsertion\" type:\"string\" enum:\"Mpeg2TimecodeInsertionBehavior\"`",
          "18404: }",
          "18407: func (s Mpeg2Settings) String() string {",
          "18408:  return awsutil.Prettify(s)",
          "18409: }",
          "18412: func (s Mpeg2Settings) GoString() string {",
          "18413:  return s.String()",
          "18414: }",
          "18417: func (s *Mpeg2Settings) Validate() error {",
          "18418:  invalidParams := request.ErrInvalidParams{Context: \"Mpeg2Settings\"}",
          "18419:  if s.FramerateDenominator == nil {",
          "18420:   invalidParams.Add(request.NewErrParamRequired(\"FramerateDenominator\"))",
          "18421:  }",
          "18422:  if s.FramerateDenominator != nil && *s.FramerateDenominator < 1 {",
          "18423:   invalidParams.Add(request.NewErrParamMinValue(\"FramerateDenominator\", 1))",
          "18424:  }",
          "18425:  if s.FramerateNumerator == nil {",
          "18426:   invalidParams.Add(request.NewErrParamRequired(\"FramerateNumerator\"))",
          "18427:  }",
          "18428:  if s.FramerateNumerator != nil && *s.FramerateNumerator < 1 {",
          "18429:   invalidParams.Add(request.NewErrParamMinValue(\"FramerateNumerator\", 1))",
          "18430:  }",
          "18432:  if invalidParams.Len() > 0 {",
          "18433:   return invalidParams",
          "18434:  }",
          "18435:  return nil",
          "18436: }",
          "18439: func (s *Mpeg2Settings) SetAdaptiveQuantization(v string) *Mpeg2Settings {",
          "18440:  s.AdaptiveQuantization = &v",
          "18441:  return s",
          "18442: }",
          "18445: func (s *Mpeg2Settings) SetAfdSignaling(v string) *Mpeg2Settings {",
          "18446:  s.AfdSignaling = &v",
          "18447:  return s",
          "18448: }",
          "18451: func (s *Mpeg2Settings) SetColorMetadata(v string) *Mpeg2Settings {",
          "18452:  s.ColorMetadata = &v",
          "18453:  return s",
          "18454: }",
          "18457: func (s *Mpeg2Settings) SetColorSpace(v string) *Mpeg2Settings {",
          "18458:  s.ColorSpace = &v",
          "18459:  return s",
          "18460: }",
          "18463: func (s *Mpeg2Settings) SetDisplayAspectRatio(v string) *Mpeg2Settings {",
          "18464:  s.DisplayAspectRatio = &v",
          "18465:  return s",
          "18466: }",
          "18469: func (s *Mpeg2Settings) SetFilterSettings(v *Mpeg2FilterSettings) *Mpeg2Settings {",
          "18470:  s.FilterSettings = v",
          "18471:  return s",
          "18472: }",
          "18475: func (s *Mpeg2Settings) SetFixedAfd(v string) *Mpeg2Settings {",
          "18476:  s.FixedAfd = &v",
          "18477:  return s",
          "18478: }",
          "18481: func (s *Mpeg2Settings) SetFramerateDenominator(v int64) *Mpeg2Settings {",
          "18482:  s.FramerateDenominator = &v",
          "18483:  return s",
          "18484: }",
          "18487: func (s *Mpeg2Settings) SetFramerateNumerator(v int64) *Mpeg2Settings {",
          "18488:  s.FramerateNumerator = &v",
          "18489:  return s",
          "18490: }",
          "18493: func (s *Mpeg2Settings) SetGopClosedCadence(v int64) *Mpeg2Settings {",
          "18494:  s.GopClosedCadence = &v",
          "18495:  return s",
          "18496: }",
          "18499: func (s *Mpeg2Settings) SetGopNumBFrames(v int64) *Mpeg2Settings {",
          "18500:  s.GopNumBFrames = &v",
          "18501:  return s",
          "18502: }",
          "18505: func (s *Mpeg2Settings) SetGopSize(v float64) *Mpeg2Settings {",
          "18506:  s.GopSize = &v",
          "18507:  return s",
          "18508: }",
          "18511: func (s *Mpeg2Settings) SetGopSizeUnits(v string) *Mpeg2Settings {",
          "18512:  s.GopSizeUnits = &v",
          "18513:  return s",
          "18514: }",
          "18517: func (s *Mpeg2Settings) SetScanType(v string) *Mpeg2Settings {",
          "18518:  s.ScanType = &v",
          "18519:  return s",
          "18520: }",
          "18523: func (s *Mpeg2Settings) SetSubgopLength(v string) *Mpeg2Settings {",
          "18524:  s.SubgopLength = &v",
          "18525:  return s",
          "18526: }",
          "18529: func (s *Mpeg2Settings) SetTimecodeInsertion(v string) *Mpeg2Settings {",
          "18530:  s.TimecodeInsertion = &v",
          "18531:  return s",
          "18532: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "18610:  PacketIdentifiersMap *MultiplexProgramPacketIdentifiersMap `locationName:\"packetIdentifiersMap\" type:\"structure\"`",
          "18613:  ProgramName *string `locationName:\"programName\" type:\"string\"`",
          "18614: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19023:  PipelineDetails []*MultiplexProgramPipelineDetail `locationName:\"pipelineDetails\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "18641:  return s",
          "18642: }",
          "18645: func (s *MultiplexProgram) SetProgramName(v string) *MultiplexProgram {",
          "18646:  s.ProgramName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19058: func (s *MultiplexProgram) SetPipelineDetails(v []*MultiplexProgramPipelineDetail) *MultiplexProgram {",
          "19059:  s.PipelineDetails = v",
          "19060:  return s",
          "19061: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "18820:  return s",
          "18821: }",
          "18824: type MultiplexProgramServiceDescriptor struct {",
          "18825:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19243: type MultiplexProgramPipelineDetail struct {",
          "19244:  _ struct{} `type:\"structure\"`",
          "19248:  ActiveChannelPipeline *string `locationName:\"activeChannelPipeline\" type:\"string\"`",
          "19251:  PipelineId *string `locationName:\"pipelineId\" type:\"string\"`",
          "19252: }",
          "19255: func (s MultiplexProgramPipelineDetail) String() string {",
          "19256:  return awsutil.Prettify(s)",
          "19257: }",
          "19260: func (s MultiplexProgramPipelineDetail) GoString() string {",
          "19261:  return s.String()",
          "19262: }",
          "19265: func (s *MultiplexProgramPipelineDetail) SetActiveChannelPipeline(v string) *MultiplexProgramPipelineDetail {",
          "19266:  s.ActiveChannelPipeline = &v",
          "19267:  return s",
          "19268: }",
          "19271: func (s *MultiplexProgramPipelineDetail) SetPipelineId(v string) *MultiplexProgramPipelineDetail {",
          "19272:  s.PipelineId = &v",
          "19273:  return s",
          "19274: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "18986:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "18989:  MaximumVideoBufferDelayMilliseconds *int64 `locationName:\"maximumVideoBufferDelayMilliseconds\" min:\"1000\" type:\"integer\"`",
          "",
          "[Added Lines]",
          "19442:  MaximumVideoBufferDelayMilliseconds *int64 `locationName:\"maximumVideoBufferDelayMilliseconds\" min:\"800\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "19016: func (s *MultiplexSettings) Validate() error {",
          "19017:  invalidParams := request.ErrInvalidParams{Context: \"MultiplexSettings\"}",
          "19020:  }",
          "19021:  if s.TransportStreamBitrate == nil {",
          "19022:   invalidParams.Add(request.NewErrParamRequired(\"TransportStreamBitrate\"))",
          "",
          "[Removed Lines]",
          "19018:  if s.MaximumVideoBufferDelayMilliseconds != nil && *s.MaximumVideoBufferDelayMilliseconds < 1000 {",
          "19019:   invalidParams.Add(request.NewErrParamMinValue(\"MaximumVideoBufferDelayMilliseconds\", 1000))",
          "",
          "[Added Lines]",
          "19471:  if s.MaximumVideoBufferDelayMilliseconds != nil && *s.MaximumVideoBufferDelayMilliseconds < 800 {",
          "19472:   invalidParams.Add(request.NewErrParamMinValue(\"MaximumVideoBufferDelayMilliseconds\", 800))",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "19093:  MinimumBitrate *int64 `locationName:\"minimumBitrate\" min:\"100000\" type:\"integer\"`",
          "19094: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19553:  Priority *int64 `locationName:\"priority\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "19112:  if s.MinimumBitrate != nil && *s.MinimumBitrate < 100000 {",
          "19113:   invalidParams.Add(request.NewErrParamMinValue(\"MinimumBitrate\", 100000))",
          "19114:  }",
          "19116:  if invalidParams.Len() > 0 {",
          "19117:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19575:  if s.Priority != nil && *s.Priority < -5 {",
          "19576:   invalidParams.Add(request.NewErrParamMinValue(\"Priority\", -5))",
          "19577:  }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "19131:  return s",
          "19132: }",
          "19134: type MultiplexSummary struct {",
          "19135:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19598: func (s *MultiplexStatmuxVideoSettings) SetPriority(v int64) *MultiplexStatmuxVideoSettings {",
          "19599:  s.Priority = &v",
          "19600:  return s",
          "19601: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "20331:  return s",
          "20332: }",
          "20335: type Rec601Settings struct {",
          "20336:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20804: type RawSettings struct {",
          "20805:  _ struct{} `type:\"structure\"`",
          "20806: }",
          "20809: func (s RawSettings) String() string {",
          "20810:  return awsutil.Prettify(s)",
          "20811: }",
          "20814: func (s RawSettings) GoString() string {",
          "20815:  return s.String()",
          "20816: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "22006:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "22010:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22492:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "22054:  return s",
          "22055: }",
          "22058: func (s *StartChannelOutput) SetChannelClass(v string) *StartChannelOutput {",
          "22059:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22544: func (s *StartChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *StartChannelOutput {",
          "22545:  s.CdiInputSpecification = v",
          "22546:  return s",
          "22547: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "22585:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "22589:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23079:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "22633:  return s",
          "22634: }",
          "22637: func (s *StopChannelOutput) SetChannelClass(v string) *StopChannelOutput {",
          "22638:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23131: func (s *StopChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *StopChannelOutput {",
          "23132:  s.CdiInputSpecification = v",
          "23133:  return s",
          "23134: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "23433: type UpdateChannelInput struct {",
          "23434:  _ struct{} `type:\"structure\"`",
          "23437:  ChannelId *string `location:\"uri\" locationName:\"channelId\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23936:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "23504:  return nil",
          "23505: }",
          "23508: func (s *UpdateChannelInput) SetChannelId(v string) *UpdateChannelInput {",
          "23509:  s.ChannelId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24010: func (s *UpdateChannelInput) SetCdiInputSpecification(v *CdiInputSpecification) *UpdateChannelInput {",
          "24011:  s.CdiInputSpecification = v",
          "24012:  return s",
          "24013: }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "24221:  H265Settings *H265Settings `locationName:\"h265Settings\" type:\"structure\"`",
          "24222: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24732:  Mpeg2Settings *Mpeg2Settings `locationName:\"mpeg2Settings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "24249:    invalidParams.AddNested(\"H265Settings\", err.(request.ErrInvalidParams))",
          "24250:   }",
          "24251:  }",
          "24253:  if invalidParams.Len() > 0 {",
          "24254:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24763:  if s.Mpeg2Settings != nil {",
          "24764:   if err := s.Mpeg2Settings.Validate(); err != nil {",
          "24765:    invalidParams.AddNested(\"Mpeg2Settings\", err.(request.ErrInvalidParams))",
          "24766:   }",
          "24767:  }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "24274:  return s",
          "24275: }",
          "24278: type VideoDescription struct {",
          "24279:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24794: func (s *VideoCodecSettings) SetMpeg2Settings(v *Mpeg2Settings) *VideoCodecSettings {",
          "24795:  s.Mpeg2Settings = v",
          "24796:  return s",
          "24797: }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "24529:  return s",
          "24530: }",
          "24533: type WebvttDestinationSettings struct {",
          "24534:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25055: type WavSettings struct {",
          "25056:  _ struct{} `type:\"structure\"`",
          "25059:  BitDepth *float64 `locationName:\"bitDepth\" type:\"double\"`",
          "25063:  CodingMode *string `locationName:\"codingMode\" type:\"string\" enum:\"WavCodingMode\"`",
          "25066:  SampleRate *float64 `locationName:\"sampleRate\" type:\"double\"`",
          "25067: }",
          "25070: func (s WavSettings) String() string {",
          "25071:  return awsutil.Prettify(s)",
          "25072: }",
          "25075: func (s WavSettings) GoString() string {",
          "25076:  return s.String()",
          "25077: }",
          "25080: func (s *WavSettings) SetBitDepth(v float64) *WavSettings {",
          "25081:  s.BitDepth = &v",
          "25082:  return s",
          "25083: }",
          "25086: func (s *WavSettings) SetCodingMode(v string) *WavSettings {",
          "25087:  s.CodingMode = &v",
          "25088:  return s",
          "25089: }",
          "25092: func (s *WavSettings) SetSampleRate(v float64) *WavSettings {",
          "25093:  s.SampleRate = &v",
          "25094:  return s",
          "25095: }",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "25199:  }",
          "25200: }",
          "25204: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25770: const (",
          "25772:  CdiInputResolutionSd = \"SD\"",
          "25775:  CdiInputResolutionHd = \"HD\"",
          "25778:  CdiInputResolutionFhd = \"FHD\"",
          "25781:  CdiInputResolutionUhd = \"UHD\"",
          "25782: )",
          "25785: func CdiInputResolution_Values() []string {",
          "25786:  return []string{",
          "25787:   CdiInputResolutionSd,",
          "25788:   CdiInputResolutionHd,",
          "25789:   CdiInputResolutionFhd,",
          "25790:   CdiInputResolutionUhd,",
          "25791:  }",
          "25792: }",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "28237:  }",
          "28238: }",
          "28241: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28833: const (",
          "28835:  Mpeg2AdaptiveQuantizationAuto = \"AUTO\"",
          "28838:  Mpeg2AdaptiveQuantizationHigh = \"HIGH\"",
          "28841:  Mpeg2AdaptiveQuantizationLow = \"LOW\"",
          "28844:  Mpeg2AdaptiveQuantizationMedium = \"MEDIUM\"",
          "28847:  Mpeg2AdaptiveQuantizationOff = \"OFF\"",
          "28848: )",
          "28851: func Mpeg2AdaptiveQuantization_Values() []string {",
          "28852:  return []string{",
          "28853:   Mpeg2AdaptiveQuantizationAuto,",
          "28854:   Mpeg2AdaptiveQuantizationHigh,",
          "28855:   Mpeg2AdaptiveQuantizationLow,",
          "28856:   Mpeg2AdaptiveQuantizationMedium,",
          "28857:   Mpeg2AdaptiveQuantizationOff,",
          "28858:  }",
          "28859: }",
          "28862: const (",
          "28864:  Mpeg2ColorMetadataIgnore = \"IGNORE\"",
          "28867:  Mpeg2ColorMetadataInsert = \"INSERT\"",
          "28868: )",
          "28871: func Mpeg2ColorMetadata_Values() []string {",
          "28872:  return []string{",
          "28873:   Mpeg2ColorMetadataIgnore,",
          "28874:   Mpeg2ColorMetadataInsert,",
          "28875:  }",
          "28876: }",
          "28879: const (",
          "28881:  Mpeg2ColorSpaceAuto = \"AUTO\"",
          "28884:  Mpeg2ColorSpacePassthrough = \"PASSTHROUGH\"",
          "28885: )",
          "28888: func Mpeg2ColorSpace_Values() []string {",
          "28889:  return []string{",
          "28890:   Mpeg2ColorSpaceAuto,",
          "28891:   Mpeg2ColorSpacePassthrough,",
          "28892:  }",
          "28893: }",
          "28896: const (",
          "28898:  Mpeg2DisplayRatioDisplayratio16x9 = \"DISPLAYRATIO16X9\"",
          "28901:  Mpeg2DisplayRatioDisplayratio4x3 = \"DISPLAYRATIO4X3\"",
          "28902: )",
          "28905: func Mpeg2DisplayRatio_Values() []string {",
          "28906:  return []string{",
          "28907:   Mpeg2DisplayRatioDisplayratio16x9,",
          "28908:   Mpeg2DisplayRatioDisplayratio4x3,",
          "28909:  }",
          "28910: }",
          "28913: const (",
          "28915:  Mpeg2GopSizeUnitsFrames = \"FRAMES\"",
          "28918:  Mpeg2GopSizeUnitsSeconds = \"SECONDS\"",
          "28919: )",
          "28922: func Mpeg2GopSizeUnits_Values() []string {",
          "28923:  return []string{",
          "28924:   Mpeg2GopSizeUnitsFrames,",
          "28925:   Mpeg2GopSizeUnitsSeconds,",
          "28926:  }",
          "28927: }",
          "28930: const (",
          "28932:  Mpeg2ScanTypeInterlaced = \"INTERLACED\"",
          "28935:  Mpeg2ScanTypeProgressive = \"PROGRESSIVE\"",
          "28936: )",
          "28939: func Mpeg2ScanType_Values() []string {",
          "28940:  return []string{",
          "28941:   Mpeg2ScanTypeInterlaced,",
          "28942:   Mpeg2ScanTypeProgressive,",
          "28943:  }",
          "28944: }",
          "28947: const (",
          "28949:  Mpeg2SubGopLengthDynamic = \"DYNAMIC\"",
          "28952:  Mpeg2SubGopLengthFixed = \"FIXED\"",
          "28953: )",
          "28956: func Mpeg2SubGopLength_Values() []string {",
          "28957:  return []string{",
          "28958:   Mpeg2SubGopLengthDynamic,",
          "28959:   Mpeg2SubGopLengthFixed,",
          "28960:  }",
          "28961: }",
          "28964: const (",
          "28966:  Mpeg2TimecodeInsertionBehaviorDisabled = \"DISABLED\"",
          "28969:  Mpeg2TimecodeInsertionBehaviorGopTimecode = \"GOP_TIMECODE\"",
          "28970: )",
          "28973: func Mpeg2TimecodeInsertionBehavior_Values() []string {",
          "28974:  return []string{",
          "28975:   Mpeg2TimecodeInsertionBehaviorDisabled,",
          "28976:   Mpeg2TimecodeInsertionBehaviorGopTimecode,",
          "28977:  }",
          "28978: }",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "29221:   VideoSelectorColorSpaceUsageForce,",
          "29222:  }",
          "29223: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29966: const (",
          "29968:  WavCodingModeCodingMode10 = \"CODING_MODE_1_0\"",
          "29971:  WavCodingModeCodingMode20 = \"CODING_MODE_2_0\"",
          "29974:  WavCodingModeCodingMode40 = \"CODING_MODE_4_0\"",
          "29977:  WavCodingModeCodingMode80 = \"CODING_MODE_8_0\"",
          "29978: )",
          "29981: func WavCodingMode_Values() []string {",
          "29982:  return []string{",
          "29983:   WavCodingModeCodingMode10,",
          "29984:   WavCodingModeCodingMode20,",
          "29985:   WavCodingModeCodingMode40,",
          "29986:   WavCodingModeCodingMode80,",
          "29987:  }",
          "29988: }",
          "",
          "---------------"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4386:  return out, req.Send()",
          "4387: }",
          "4389: const opListAcceptedPortfolioShares = \"ListAcceptedPortfolioShares\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4389: const opGetProvisionedProductOutputs = \"GetProvisionedProductOutputs\"",
          "4415: func (c *ServiceCatalog) GetProvisionedProductOutputsRequest(input *GetProvisionedProductOutputsInput) (req *request.Request, output *GetProvisionedProductOutputsOutput) {",
          "4416:  op := &request.Operation{",
          "4417:   Name:       opGetProvisionedProductOutputs,",
          "4418:   HTTPMethod: \"POST\",",
          "4419:   HTTPPath:   \"/\",",
          "4420:   Paginator: &request.Paginator{",
          "4421:    InputTokens:     []string{\"PageToken\"},",
          "4422:    OutputTokens:    []string{\"NextPageToken\"},",
          "4423:    LimitToken:      \"PageSize\",",
          "4424:    TruncationToken: \"\",",
          "4425:   },",
          "4426:  }",
          "4428:  if input == nil {",
          "4429:   input = &GetProvisionedProductOutputsInput{}",
          "4430:  }",
          "4432:  output = &GetProvisionedProductOutputsOutput{}",
          "4433:  req = c.newRequest(op, input, output)",
          "4434:  return",
          "4435: }",
          "4458: func (c *ServiceCatalog) GetProvisionedProductOutputs(input *GetProvisionedProductOutputsInput) (*GetProvisionedProductOutputsOutput, error) {",
          "4459:  req, out := c.GetProvisionedProductOutputsRequest(input)",
          "4460:  return out, req.Send()",
          "4461: }",
          "4472: func (c *ServiceCatalog) GetProvisionedProductOutputsWithContext(ctx aws.Context, input *GetProvisionedProductOutputsInput, opts ...request.Option) (*GetProvisionedProductOutputsOutput, error) {",
          "4473:  req, out := c.GetProvisionedProductOutputsRequest(input)",
          "4474:  req.SetContext(ctx)",
          "4475:  req.ApplyOptions(opts...)",
          "4476:  return out, req.Send()",
          "4477: }",
          "4496: func (c *ServiceCatalog) GetProvisionedProductOutputsPages(input *GetProvisionedProductOutputsInput, fn func(*GetProvisionedProductOutputsOutput, bool) bool) error {",
          "4497:  return c.GetProvisionedProductOutputsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "4498: }",
          "4507: func (c *ServiceCatalog) GetProvisionedProductOutputsPagesWithContext(ctx aws.Context, input *GetProvisionedProductOutputsInput, fn func(*GetProvisionedProductOutputsOutput, bool) bool, opts ...request.Option) error {",
          "4508:  p := request.Pagination{",
          "4509:   NewRequest: func() (*request.Request, error) {",
          "4510:    var inCpy *GetProvisionedProductOutputsInput",
          "4511:    if input != nil {",
          "4512:     tmp := *input",
          "4513:     inCpy = &tmp",
          "4514:    }",
          "4515:    req, _ := c.GetProvisionedProductOutputsRequest(inCpy)",
          "4516:    req.SetContext(ctx)",
          "4517:    req.ApplyOptions(opts...)",
          "4518:    return req, nil",
          "4519:   },",
          "4520:  }",
          "4522:  for p.Next() {",
          "4523:   if !fn(p.Page().(*GetProvisionedProductOutputsOutput), !p.HasNextPage()) {",
          "4524:    break",
          "4525:   }",
          "4526:  }",
          "4528:  return p.Err()",
          "4529: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13641:  return s",
          "13642: }",
          "13645: type InvalidParametersException struct {",
          "13646:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13778: type GetProvisionedProductOutputsInput struct {",
          "13779:  _ struct{} `type:\"structure\"`",
          "13788:  AcceptLanguage *string `type:\"string\"`",
          "13792:  OutputKeys []*string `type:\"list\"`",
          "13795:  PageSize *int64 `type:\"integer\"`",
          "13799:  PageToken *string `type:\"string\"`",
          "13802:  ProvisionedProductId *string `min:\"1\" type:\"string\"`",
          "13805:  ProvisionedProductName *string `min:\"1\" type:\"string\"`",
          "13806: }",
          "13809: func (s GetProvisionedProductOutputsInput) String() string {",
          "13810:  return awsutil.Prettify(s)",
          "13811: }",
          "13814: func (s GetProvisionedProductOutputsInput) GoString() string {",
          "13815:  return s.String()",
          "13816: }",
          "13819: func (s *GetProvisionedProductOutputsInput) Validate() error {",
          "13820:  invalidParams := request.ErrInvalidParams{Context: \"GetProvisionedProductOutputsInput\"}",
          "13821:  if s.ProvisionedProductId != nil && len(*s.ProvisionedProductId) < 1 {",
          "13822:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisionedProductId\", 1))",
          "13823:  }",
          "13824:  if s.ProvisionedProductName != nil && len(*s.ProvisionedProductName) < 1 {",
          "13825:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisionedProductName\", 1))",
          "13826:  }",
          "13828:  if invalidParams.Len() > 0 {",
          "13829:   return invalidParams",
          "13830:  }",
          "13831:  return nil",
          "13832: }",
          "13835: func (s *GetProvisionedProductOutputsInput) SetAcceptLanguage(v string) *GetProvisionedProductOutputsInput {",
          "13836:  s.AcceptLanguage = &v",
          "13837:  return s",
          "13838: }",
          "13841: func (s *GetProvisionedProductOutputsInput) SetOutputKeys(v []*string) *GetProvisionedProductOutputsInput {",
          "13842:  s.OutputKeys = v",
          "13843:  return s",
          "13844: }",
          "13847: func (s *GetProvisionedProductOutputsInput) SetPageSize(v int64) *GetProvisionedProductOutputsInput {",
          "13848:  s.PageSize = &v",
          "13849:  return s",
          "13850: }",
          "13853: func (s *GetProvisionedProductOutputsInput) SetPageToken(v string) *GetProvisionedProductOutputsInput {",
          "13854:  s.PageToken = &v",
          "13855:  return s",
          "13856: }",
          "13859: func (s *GetProvisionedProductOutputsInput) SetProvisionedProductId(v string) *GetProvisionedProductOutputsInput {",
          "13860:  s.ProvisionedProductId = &v",
          "13861:  return s",
          "13862: }",
          "13865: func (s *GetProvisionedProductOutputsInput) SetProvisionedProductName(v string) *GetProvisionedProductOutputsInput {",
          "13866:  s.ProvisionedProductName = &v",
          "13867:  return s",
          "13868: }",
          "13870: type GetProvisionedProductOutputsOutput struct {",
          "13871:  _ struct{} `type:\"structure\"`",
          "13875:  NextPageToken *string `type:\"string\"`",
          "13880:  Outputs []*RecordOutput `type:\"list\"`",
          "13881: }",
          "13884: func (s GetProvisionedProductOutputsOutput) String() string {",
          "13885:  return awsutil.Prettify(s)",
          "13886: }",
          "13889: func (s GetProvisionedProductOutputsOutput) GoString() string {",
          "13890:  return s.String()",
          "13891: }",
          "13894: func (s *GetProvisionedProductOutputsOutput) SetNextPageToken(v string) *GetProvisionedProductOutputsOutput {",
          "13895:  s.NextPageToken = &v",
          "13896:  return s",
          "13897: }",
          "13900: func (s *GetProvisionedProductOutputsOutput) SetOutputs(v []*RecordOutput) *GetProvisionedProductOutputsOutput {",
          "13901:  s.Outputs = v",
          "13902:  return s",
          "13903: }",
          "",
          "---------------"
        ],
        "service/servicecatalog/servicecatalogiface/interface.go||service/servicecatalog/servicecatalogiface/interface.go": [
          "File: service/servicecatalog/servicecatalogiface/interface.go -> service/servicecatalog/servicecatalogiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:  GetAWSOrganizationsAccessStatusWithContext(aws.Context, *servicecatalog.GetAWSOrganizationsAccessStatusInput, ...request.Option) (*servicecatalog.GetAWSOrganizationsAccessStatusOutput, error)",
          "261:  GetAWSOrganizationsAccessStatusRequest(*servicecatalog.GetAWSOrganizationsAccessStatusInput) (*request.Request, *servicecatalog.GetAWSOrganizationsAccessStatusOutput)",
          "263:  ListAcceptedPortfolioShares(*servicecatalog.ListAcceptedPortfolioSharesInput) (*servicecatalog.ListAcceptedPortfolioSharesOutput, error)",
          "264:  ListAcceptedPortfolioSharesWithContext(aws.Context, *servicecatalog.ListAcceptedPortfolioSharesInput, ...request.Option) (*servicecatalog.ListAcceptedPortfolioSharesOutput, error)",
          "265:  ListAcceptedPortfolioSharesRequest(*servicecatalog.ListAcceptedPortfolioSharesInput) (*request.Request, *servicecatalog.ListAcceptedPortfolioSharesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:  GetProvisionedProductOutputs(*servicecatalog.GetProvisionedProductOutputsInput) (*servicecatalog.GetProvisionedProductOutputsOutput, error)",
          "264:  GetProvisionedProductOutputsWithContext(aws.Context, *servicecatalog.GetProvisionedProductOutputsInput, ...request.Option) (*servicecatalog.GetProvisionedProductOutputsOutput, error)",
          "265:  GetProvisionedProductOutputsRequest(*servicecatalog.GetProvisionedProductOutputsInput) (*request.Request, *servicecatalog.GetProvisionedProductOutputsOutput)",
          "267:  GetProvisionedProductOutputsPages(*servicecatalog.GetProvisionedProductOutputsInput, func(*servicecatalog.GetProvisionedProductOutputsOutput, bool) bool) error",
          "268:  GetProvisionedProductOutputsPagesWithContext(aws.Context, *servicecatalog.GetProvisionedProductOutputsInput, func(*servicecatalog.GetProvisionedProductOutputsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/snowball/api.go||service/snowball/api.go": [
          "File: service/snowball/api.go -> service/snowball/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "481:  return out, req.Send()",
          "482: }",
          "484: const opDescribeAddress = \"DescribeAddress\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "484: const opCreateReturnShippingLabel = \"CreateReturnShippingLabel\"",
          "510: func (c *Snowball) CreateReturnShippingLabelRequest(input *CreateReturnShippingLabelInput) (req *request.Request, output *CreateReturnShippingLabelOutput) {",
          "511:  op := &request.Operation{",
          "512:   Name:       opCreateReturnShippingLabel,",
          "513:   HTTPMethod: \"POST\",",
          "514:   HTTPPath:   \"/\",",
          "515:  }",
          "517:  if input == nil {",
          "518:   input = &CreateReturnShippingLabelInput{}",
          "519:  }",
          "521:  output = &CreateReturnShippingLabelOutput{}",
          "522:  req = c.newRequest(op, input, output)",
          "523:  return",
          "524: }",
          "561: func (c *Snowball) CreateReturnShippingLabel(input *CreateReturnShippingLabelInput) (*CreateReturnShippingLabelOutput, error) {",
          "562:  req, out := c.CreateReturnShippingLabelRequest(input)",
          "563:  return out, req.Send()",
          "564: }",
          "575: func (c *Snowball) CreateReturnShippingLabelWithContext(ctx aws.Context, input *CreateReturnShippingLabelInput, opts ...request.Option) (*CreateReturnShippingLabelOutput, error) {",
          "576:  req, out := c.CreateReturnShippingLabelRequest(input)",
          "577:  req.SetContext(ctx)",
          "578:  req.ApplyOptions(opts...)",
          "579:  return out, req.Send()",
          "580: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "868:  return out, req.Send()",
          "869: }",
          "871: const opGetJobManifest = \"GetJobManifest\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "969: const opDescribeReturnShippingLabel = \"DescribeReturnShippingLabel\"",
          "995: func (c *Snowball) DescribeReturnShippingLabelRequest(input *DescribeReturnShippingLabelInput) (req *request.Request, output *DescribeReturnShippingLabelOutput) {",
          "996:  op := &request.Operation{",
          "997:   Name:       opDescribeReturnShippingLabel,",
          "998:   HTTPMethod: \"POST\",",
          "999:   HTTPPath:   \"/\",",
          "1000:  }",
          "1002:  if input == nil {",
          "1003:   input = &DescribeReturnShippingLabelInput{}",
          "1004:  }",
          "1006:  output = &DescribeReturnShippingLabelOutput{}",
          "1007:  req = c.newRequest(op, input, output)",
          "1008:  return",
          "1009: }",
          "1037: func (c *Snowball) DescribeReturnShippingLabel(input *DescribeReturnShippingLabelInput) (*DescribeReturnShippingLabelOutput, error) {",
          "1038:  req, out := c.DescribeReturnShippingLabelRequest(input)",
          "1039:  return out, req.Send()",
          "1040: }",
          "1051: func (c *Snowball) DescribeReturnShippingLabelWithContext(ctx aws.Context, input *DescribeReturnShippingLabelInput, opts ...request.Option) (*DescribeReturnShippingLabelOutput, error) {",
          "1052:  req, out := c.DescribeReturnShippingLabelRequest(input)",
          "1053:  req.SetContext(ctx)",
          "1054:  req.ApplyOptions(opts...)",
          "1055:  return out, req.Send()",
          "1056: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1833:  return out, req.Send()",
          "1834: }",
          "1841: type Address struct {",
          "1842:  _ struct{} `type:\"structure\"`",
          "1845:  AddressId *string `min:\"40\" type:\"string\"`",
          "1848:  City *string `min:\"1\" type:\"string\"`",
          "1851:  Company *string `min:\"1\" type:\"string\"`",
          "1854:  Country *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2024: const opUpdateJobShipmentState = \"UpdateJobShipmentState\"",
          "2050: func (c *Snowball) UpdateJobShipmentStateRequest(input *UpdateJobShipmentStateInput) (req *request.Request, output *UpdateJobShipmentStateOutput) {",
          "2051:  op := &request.Operation{",
          "2052:   Name:       opUpdateJobShipmentState,",
          "2053:   HTTPMethod: \"POST\",",
          "2054:   HTTPPath:   \"/\",",
          "2055:  }",
          "2057:  if input == nil {",
          "2058:   input = &UpdateJobShipmentStateInput{}",
          "2059:  }",
          "2061:  output = &UpdateJobShipmentStateOutput{}",
          "2062:  req = c.newRequest(op, input, output)",
          "2063:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2064:  return",
          "2065: }",
          "2088: func (c *Snowball) UpdateJobShipmentState(input *UpdateJobShipmentStateInput) (*UpdateJobShipmentStateOutput, error) {",
          "2089:  req, out := c.UpdateJobShipmentStateRequest(input)",
          "2090:  return out, req.Send()",
          "2091: }",
          "2102: func (c *Snowball) UpdateJobShipmentStateWithContext(ctx aws.Context, input *UpdateJobShipmentStateInput, opts ...request.Option) (*UpdateJobShipmentStateOutput, error) {",
          "2103:  req, out := c.UpdateJobShipmentStateRequest(input)",
          "2104:  req.SetContext(ctx)",
          "2105:  req.ApplyOptions(opts...)",
          "2106:  return out, req.Send()",
          "2107: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2455:  return s",
          "2456: }",
          "2458: type CreateAddressInput struct {",
          "2459:  _ struct{} `type:\"structure\"`",
          "2464:  Address *Address `type:\"structure\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2738: type ConflictException struct {",
          "2739:  _            struct{}                  `type:\"structure\"`",
          "2740:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2742:  ConflictResource *string `min:\"1\" type:\"string\"`",
          "2744:  Message_ *string `locationName:\"Message\" min:\"1\" type:\"string\"`",
          "2745: }",
          "2748: func (s ConflictException) String() string {",
          "2749:  return awsutil.Prettify(s)",
          "2750: }",
          "2753: func (s ConflictException) GoString() string {",
          "2754:  return s.String()",
          "2755: }",
          "2757: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "2758:  return &ConflictException{",
          "2759:   RespMetadata: v,",
          "2760:  }",
          "2761: }",
          "2764: func (s *ConflictException) Code() string {",
          "2765:  return \"ConflictException\"",
          "2766: }",
          "2769: func (s *ConflictException) Message() string {",
          "2770:  if s.Message_ != nil {",
          "2771:   return *s.Message_",
          "2772:  }",
          "2773:  return \"\"",
          "2774: }",
          "2777: func (s *ConflictException) OrigErr() error {",
          "2778:  return nil",
          "2779: }",
          "2781: func (s *ConflictException) Error() string {",
          "2782:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "2783: }",
          "2786: func (s *ConflictException) StatusCode() int {",
          "2787:  return s.RespMetadata.StatusCode",
          "2788: }",
          "2791: func (s *ConflictException) RequestID() string {",
          "2792:  return s.RespMetadata.RequestID",
          "2793: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2979:  return s",
          "2980: }",
          "2985: type DataTransfer struct {",
          "2986:  _ struct{} `type:\"structure\"`",
          "2989:  BytesTransferred *int64 `type:\"long\"`",
          "2992:  ObjectsTransferred *int64 `type:\"long\"`",
          "2997:  TotalBytes *int64 `type:\"long\"`",
          "3002:  TotalObjects *int64 `type:\"long\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3321: type CreateReturnShippingLabelInput struct {",
          "3322:  _ struct{} `type:\"structure\"`",
          "3328:  JobId *string `min:\"39\" type:\"string\" required:\"true\"`",
          "3333:  ShippingOption *string `type:\"string\" enum:\"ShippingOption\"`",
          "3334: }",
          "3337: func (s CreateReturnShippingLabelInput) String() string {",
          "3338:  return awsutil.Prettify(s)",
          "3339: }",
          "3342: func (s CreateReturnShippingLabelInput) GoString() string {",
          "3343:  return s.String()",
          "3344: }",
          "3347: func (s *CreateReturnShippingLabelInput) Validate() error {",
          "3348:  invalidParams := request.ErrInvalidParams{Context: \"CreateReturnShippingLabelInput\"}",
          "3349:  if s.JobId == nil {",
          "3350:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "3351:  }",
          "3352:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "3353:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "3354:  }",
          "3356:  if invalidParams.Len() > 0 {",
          "3357:   return invalidParams",
          "3358:  }",
          "3359:  return nil",
          "3360: }",
          "3363: func (s *CreateReturnShippingLabelInput) SetJobId(v string) *CreateReturnShippingLabelInput {",
          "3364:  s.JobId = &v",
          "3365:  return s",
          "3366: }",
          "3369: func (s *CreateReturnShippingLabelInput) SetShippingOption(v string) *CreateReturnShippingLabelInput {",
          "3370:  s.ShippingOption = &v",
          "3371:  return s",
          "3372: }",
          "3374: type CreateReturnShippingLabelOutput struct {",
          "3375:  _ struct{} `type:\"structure\"`",
          "3379:  Status *string `type:\"string\" enum:\"ShippingLabelStatus\"`",
          "3380: }",
          "3383: func (s CreateReturnShippingLabelOutput) String() string {",
          "3384:  return awsutil.Prettify(s)",
          "3385: }",
          "3388: func (s CreateReturnShippingLabelOutput) GoString() string {",
          "3389:  return s.String()",
          "3390: }",
          "3393: func (s *CreateReturnShippingLabelOutput) SetStatus(v string) *CreateReturnShippingLabelOutput {",
          "3394:  s.Status = &v",
          "3395:  return s",
          "3396: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3322:  return s",
          "3323: }",
          "3326: type DeviceConfiguration struct {",
          "3327:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3741: type DescribeReturnShippingLabelInput struct {",
          "3742:  _ struct{} `type:\"structure\"`",
          "3745:  JobId *string `min:\"39\" type:\"string\"`",
          "3746: }",
          "3749: func (s DescribeReturnShippingLabelInput) String() string {",
          "3750:  return awsutil.Prettify(s)",
          "3751: }",
          "3754: func (s DescribeReturnShippingLabelInput) GoString() string {",
          "3755:  return s.String()",
          "3756: }",
          "3759: func (s *DescribeReturnShippingLabelInput) Validate() error {",
          "3760:  invalidParams := request.ErrInvalidParams{Context: \"DescribeReturnShippingLabelInput\"}",
          "3761:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "3762:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "3763:  }",
          "3765:  if invalidParams.Len() > 0 {",
          "3766:   return invalidParams",
          "3767:  }",
          "3768:  return nil",
          "3769: }",
          "3772: func (s *DescribeReturnShippingLabelInput) SetJobId(v string) *DescribeReturnShippingLabelInput {",
          "3773:  s.JobId = &v",
          "3774:  return s",
          "3775: }",
          "3777: type DescribeReturnShippingLabelOutput struct {",
          "3778:  _ struct{} `type:\"structure\"`",
          "3781:  ExpirationDate *time.Time `type:\"timestamp\"`",
          "3785:  Status *string `type:\"string\" enum:\"ShippingLabelStatus\"`",
          "3786: }",
          "3789: func (s DescribeReturnShippingLabelOutput) String() string {",
          "3790:  return awsutil.Prettify(s)",
          "3791: }",
          "3794: func (s DescribeReturnShippingLabelOutput) GoString() string {",
          "3795:  return s.String()",
          "3796: }",
          "3799: func (s *DescribeReturnShippingLabelOutput) SetExpirationDate(v time.Time) *DescribeReturnShippingLabelOutput {",
          "3800:  s.ExpirationDate = &v",
          "3801:  return s",
          "3802: }",
          "3805: func (s *DescribeReturnShippingLabelOutput) SetStatus(v string) *DescribeReturnShippingLabelOutput {",
          "3806:  s.Status = &v",
          "3807:  return s",
          "3808: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5017:  return s",
          "5018: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5508: type ReturnShippingLabelAlreadyExistsException struct {",
          "5509:  _            struct{}                  `type:\"structure\"`",
          "5510:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5512:  Message_ *string `locationName:\"Message\" min:\"1\" type:\"string\"`",
          "5513: }",
          "5516: func (s ReturnShippingLabelAlreadyExistsException) String() string {",
          "5517:  return awsutil.Prettify(s)",
          "5518: }",
          "5521: func (s ReturnShippingLabelAlreadyExistsException) GoString() string {",
          "5522:  return s.String()",
          "5523: }",
          "5525: func newErrorReturnShippingLabelAlreadyExistsException(v protocol.ResponseMetadata) error {",
          "5526:  return &ReturnShippingLabelAlreadyExistsException{",
          "5527:   RespMetadata: v,",
          "5528:  }",
          "5529: }",
          "5532: func (s *ReturnShippingLabelAlreadyExistsException) Code() string {",
          "5533:  return \"ReturnShippingLabelAlreadyExistsException\"",
          "5534: }",
          "5537: func (s *ReturnShippingLabelAlreadyExistsException) Message() string {",
          "5538:  if s.Message_ != nil {",
          "5539:   return *s.Message_",
          "5540:  }",
          "5541:  return \"\"",
          "5542: }",
          "5545: func (s *ReturnShippingLabelAlreadyExistsException) OrigErr() error {",
          "5546:  return nil",
          "5547: }",
          "5549: func (s *ReturnShippingLabelAlreadyExistsException) Error() string {",
          "5550:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5551: }",
          "5554: func (s *ReturnShippingLabelAlreadyExistsException) StatusCode() int {",
          "5555:  return s.RespMetadata.StatusCode",
          "5556: }",
          "5559: func (s *ReturnShippingLabelAlreadyExistsException) RequestID() string {",
          "5560:  return s.RespMetadata.RequestID",
          "5561: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5557:  return s.String()",
          "5558: }",
          "5561: type WirelessConnection struct {",
          "5562:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6104: type UpdateJobShipmentStateInput struct {",
          "6105:  _ struct{} `type:\"structure\"`",
          "6111:  JobId *string `min:\"39\" type:\"string\" required:\"true\"`",
          "6120:  ShipmentState *string `type:\"string\" required:\"true\" enum:\"ShipmentState\"`",
          "6121: }",
          "6124: func (s UpdateJobShipmentStateInput) String() string {",
          "6125:  return awsutil.Prettify(s)",
          "6126: }",
          "6129: func (s UpdateJobShipmentStateInput) GoString() string {",
          "6130:  return s.String()",
          "6131: }",
          "6134: func (s *UpdateJobShipmentStateInput) Validate() error {",
          "6135:  invalidParams := request.ErrInvalidParams{Context: \"UpdateJobShipmentStateInput\"}",
          "6136:  if s.JobId == nil {",
          "6137:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "6138:  }",
          "6139:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "6140:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "6141:  }",
          "6142:  if s.ShipmentState == nil {",
          "6143:   invalidParams.Add(request.NewErrParamRequired(\"ShipmentState\"))",
          "6144:  }",
          "6146:  if invalidParams.Len() > 0 {",
          "6147:   return invalidParams",
          "6148:  }",
          "6149:  return nil",
          "6150: }",
          "6153: func (s *UpdateJobShipmentStateInput) SetJobId(v string) *UpdateJobShipmentStateInput {",
          "6154:  s.JobId = &v",
          "6155:  return s",
          "6156: }",
          "6159: func (s *UpdateJobShipmentStateInput) SetShipmentState(v string) *UpdateJobShipmentStateInput {",
          "6160:  s.ShipmentState = &v",
          "6161:  return s",
          "6162: }",
          "6164: type UpdateJobShipmentStateOutput struct {",
          "6165:  _ struct{} `type:\"structure\"`",
          "6166: }",
          "6169: func (s UpdateJobShipmentStateOutput) String() string {",
          "6170:  return awsutil.Prettify(s)",
          "6171: }",
          "6174: func (s UpdateJobShipmentStateOutput) GoString() string {",
          "6175:  return s.String()",
          "6176: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5725:  }",
          "5726: }",
          "5728: const (",
          "5730:  ShippingOptionSecondDay = \"SECOND_DAY\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6346: const (",
          "6348:  ShipmentStateReceived = \"RECEIVED\"",
          "6351:  ShipmentStateReturned = \"RETURNED\"",
          "6352: )",
          "6355: func ShipmentState_Values() []string {",
          "6356:  return []string{",
          "6357:   ShipmentStateReceived,",
          "6358:   ShipmentStateReturned,",
          "6359:  }",
          "6360: }",
          "6362: const (",
          "6364:  ShippingLabelStatusInProgress = \"InProgress\"",
          "6367:  ShippingLabelStatusTimedOut = \"TimedOut\"",
          "6370:  ShippingLabelStatusSucceeded = \"Succeeded\"",
          "6373:  ShippingLabelStatusFailed = \"Failed\"",
          "6374: )",
          "6377: func ShippingLabelStatus_Values() []string {",
          "6378:  return []string{",
          "6379:   ShippingLabelStatusInProgress,",
          "6380:   ShippingLabelStatusTimedOut,",
          "6381:   ShippingLabelStatusSucceeded,",
          "6382:   ShippingLabelStatusFailed,",
          "6383:  }",
          "6384: }",
          "",
          "---------------"
        ],
        "service/snowball/doc.go||service/snowball/doc.go": [
          "File: service/snowball/doc.go -> service/snowball/doc.go"
        ],
        "service/snowball/errors.go||service/snowball/errors.go": [
          "File: service/snowball/errors.go -> service/snowball/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  ErrCodeClusterLimitExceededException = \"ClusterLimitExceededException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:  ErrCodeConflictException = \"ConflictException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:  ErrCodeKMSRequestFailedException = \"KMSRequestFailedException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  ErrCodeReturnShippingLabelAlreadyExistsException = \"ReturnShippingLabelAlreadyExistsException\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77: )",
          "79: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "89: }",
          "",
          "[Removed Lines]",
          "80:  \"ClusterLimitExceededException\":    newErrorClusterLimitExceededException,",
          "81:  \"Ec2RequestFailedException\":        newErrorEc2RequestFailedException,",
          "82:  \"InvalidAddressException\":          newErrorInvalidAddressException,",
          "83:  \"InvalidInputCombinationException\": newErrorInvalidInputCombinationException,",
          "84:  \"InvalidJobStateException\":         newErrorInvalidJobStateException,",
          "85:  \"InvalidNextTokenException\":        newErrorInvalidNextTokenException,",
          "86:  \"InvalidResourceException\":         newErrorInvalidResourceException,",
          "87:  \"KMSRequestFailedException\":        newErrorKMSRequestFailedException,",
          "88:  \"UnsupportedAddressException\":      newErrorUnsupportedAddressException,",
          "",
          "[Added Lines]",
          "95:  \"ClusterLimitExceededException\":             newErrorClusterLimitExceededException,",
          "96:  \"ConflictException\":                         newErrorConflictException,",
          "97:  \"Ec2RequestFailedException\":                 newErrorEc2RequestFailedException,",
          "98:  \"InvalidAddressException\":                   newErrorInvalidAddressException,",
          "99:  \"InvalidInputCombinationException\":          newErrorInvalidInputCombinationException,",
          "100:  \"InvalidJobStateException\":                  newErrorInvalidJobStateException,",
          "101:  \"InvalidNextTokenException\":                 newErrorInvalidNextTokenException,",
          "102:  \"InvalidResourceException\":                  newErrorInvalidResourceException,",
          "103:  \"KMSRequestFailedException\":                 newErrorKMSRequestFailedException,",
          "104:  \"ReturnShippingLabelAlreadyExistsException\": newErrorReturnShippingLabelAlreadyExistsException,",
          "105:  \"UnsupportedAddressException\":               newErrorUnsupportedAddressException,",
          "",
          "---------------"
        ],
        "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go": [
          "File: service/snowball/snowballiface/interface.go -> service/snowball/snowballiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  CreateJobWithContext(aws.Context, *snowball.CreateJobInput, ...request.Option) (*snowball.CreateJobOutput, error)",
          "81:  CreateJobRequest(*snowball.CreateJobInput) (*request.Request, *snowball.CreateJobOutput)",
          "83:  DescribeAddress(*snowball.DescribeAddressInput) (*snowball.DescribeAddressOutput, error)",
          "84:  DescribeAddressWithContext(aws.Context, *snowball.DescribeAddressInput, ...request.Option) (*snowball.DescribeAddressOutput, error)",
          "85:  DescribeAddressRequest(*snowball.DescribeAddressInput) (*request.Request, *snowball.DescribeAddressOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  CreateReturnShippingLabel(*snowball.CreateReturnShippingLabelInput) (*snowball.CreateReturnShippingLabelOutput, error)",
          "84:  CreateReturnShippingLabelWithContext(aws.Context, *snowball.CreateReturnShippingLabelInput, ...request.Option) (*snowball.CreateReturnShippingLabelOutput, error)",
          "85:  CreateReturnShippingLabelRequest(*snowball.CreateReturnShippingLabelInput) (*request.Request, *snowball.CreateReturnShippingLabelOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:  DescribeJobWithContext(aws.Context, *snowball.DescribeJobInput, ...request.Option) (*snowball.DescribeJobOutput, error)",
          "100:  DescribeJobRequest(*snowball.DescribeJobInput) (*request.Request, *snowball.DescribeJobOutput)",
          "102:  GetJobManifest(*snowball.GetJobManifestInput) (*snowball.GetJobManifestOutput, error)",
          "103:  GetJobManifestWithContext(aws.Context, *snowball.GetJobManifestInput, ...request.Option) (*snowball.GetJobManifestOutput, error)",
          "104:  GetJobManifestRequest(*snowball.GetJobManifestInput) (*request.Request, *snowball.GetJobManifestOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:  DescribeReturnShippingLabel(*snowball.DescribeReturnShippingLabelInput) (*snowball.DescribeReturnShippingLabelOutput, error)",
          "107:  DescribeReturnShippingLabelWithContext(aws.Context, *snowball.DescribeReturnShippingLabelInput, ...request.Option) (*snowball.DescribeReturnShippingLabelOutput, error)",
          "108:  DescribeReturnShippingLabelRequest(*snowball.DescribeReturnShippingLabelInput) (*request.Request, *snowball.DescribeReturnShippingLabelOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:  UpdateJob(*snowball.UpdateJobInput) (*snowball.UpdateJobOutput, error)",
          "142:  UpdateJobWithContext(aws.Context, *snowball.UpdateJobInput, ...request.Option) (*snowball.UpdateJobOutput, error)",
          "143:  UpdateJobRequest(*snowball.UpdateJobInput) (*request.Request, *snowball.UpdateJobOutput)",
          "144: }",
          "146: var _ SnowballAPI = (*snowball.Snowball)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  UpdateJobShipmentState(*snowball.UpdateJobShipmentStateInput) (*snowball.UpdateJobShipmentStateOutput, error)",
          "154:  UpdateJobShipmentStateWithContext(aws.Context, *snowball.UpdateJobShipmentStateInput, ...request.Option) (*snowball.UpdateJobShipmentStateOutput, error)",
          "155:  UpdateJobShipmentStateRequest(*snowball.UpdateJobShipmentStateInput) (*request.Request, *snowball.UpdateJobShipmentStateOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "561f3c452a7b60ad35330a554dc30dca77a5fa1c",
      "candidate_info": {
        "commit_hash": "561f3c452a7b60ad35330a554dc30dca77a5fa1c",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/561f3c452a7b60ad35330a554dc30dca77a5fa1c",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ivs/2020-07-14/api-2.json",
          "models/apis/ivs/2020-07-14/docs-2.json",
          "models/apis/ivs/2020-07-14/paginators-1.json",
          "models/apis/lakeformation/2017-03-31/api-2.json",
          "models/apis/lakeformation/2017-03-31/docs-2.json",
          "models/apis/organizations/2016-11-28/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/storagegateway/2013-06-30/api-2.json",
          "models/apis/storagegateway/2013-06-30/docs-2.json",
          "models/apis/transcribe-streaming/2017-10-26/api-2.json",
          "models/apis/transcribe-streaming/2017-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/ivs/api.go",
          "service/ivs/doc.go",
          "service/ivs/ivsiface/interface.go",
          "service/lakeformation/api.go",
          "service/organizations/api.go",
          "service/servicecatalog/api.go",
          "service/storagegateway/api.go",
          "service/storagegateway/doc.go",
          "service/storagegateway/storagegatewayiface/interface.go",
          "service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go"
        ],
        "message": "Release v1.34.8 (2020-08-19) ===\n\n### Service Client Updates\n* `service/ivs`: Updates service API, documentation, and paginators\n* `service/lakeformation`: Updates service API and documentation\n* `service/organizations`: Updates service documentation\n  * Minor documentation updates for AWS Organizations\n* `service/servicecatalog`: Updates service API and documentation\n  * Enhance SearchProvisionedProducts API to allow queries using productName and provisioningArtifactName. Added lastProvisioningRecordId and lastSuccessfulRecordId to Read ProvisionedProduct APIs\n* `service/storagegateway`: Updates service API and documentation\n  * Added WORM, tape retention lock, and custom pool features for virtual tapes.\n* `service/transcribe-streaming`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ivs/api.go||service/ivs/api.go",
          "service/ivs/doc.go||service/ivs/doc.go",
          "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go",
          "service/lakeformation/api.go||service/lakeformation/api.go",
          "service/organizations/api.go||service/organizations/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/storagegateway/api.go||service/storagegateway/api.go",
          "service/storagegateway/doc.go||service/storagegateway/doc.go",
          "service/storagegateway/storagegatewayiface/interface.go||service/storagegateway/storagegatewayiface/interface.go",
          "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5316:     Protocols: []string{\"https\"},",
          "5317:    },",
          "5318:    Endpoints: endpoints{",
          "5319:     \"ap-east-1\":      endpoint{},",
          "5320:     \"ap-northeast-1\": endpoint{},",
          "5321:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5319:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5325:     \"ca-central-1\":   endpoint{},",
          "5326:     \"eu-central-1\":   endpoint{},",
          "5327:     \"eu-north-1\":     endpoint{},",
          "5328:     \"eu-west-1\":      endpoint{},",
          "5329:     \"eu-west-2\":      endpoint{},",
          "5330:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5329:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.7\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.8\"",
          "",
          "---------------"
        ],
        "service/ivs/api.go||service/ivs/api.go": [
          "File: service/ivs/api.go -> service/ivs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:  return out, req.Send()",
          "425: }",
          "427: const opDeleteStreamKey = \"DeleteStreamKey\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "427: const opDeletePlaybackKeyPair = \"DeletePlaybackKeyPair\"",
          "453: func (c *IVS) DeletePlaybackKeyPairRequest(input *DeletePlaybackKeyPairInput) (req *request.Request, output *DeletePlaybackKeyPairOutput) {",
          "454:  op := &request.Operation{",
          "455:   Name:       opDeletePlaybackKeyPair,",
          "456:   HTTPMethod: \"POST\",",
          "457:   HTTPPath:   \"/DeletePlaybackKeyPair\",",
          "458:  }",
          "460:  if input == nil {",
          "461:   input = &DeletePlaybackKeyPairInput{}",
          "462:  }",
          "464:  output = &DeletePlaybackKeyPairOutput{}",
          "465:  req = c.newRequest(op, input, output)",
          "466:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "467:  return",
          "468: }",
          "492: func (c *IVS) DeletePlaybackKeyPair(input *DeletePlaybackKeyPairInput) (*DeletePlaybackKeyPairOutput, error) {",
          "493:  req, out := c.DeletePlaybackKeyPairRequest(input)",
          "494:  return out, req.Send()",
          "495: }",
          "506: func (c *IVS) DeletePlaybackKeyPairWithContext(ctx aws.Context, input *DeletePlaybackKeyPairInput, opts ...request.Option) (*DeletePlaybackKeyPairOutput, error) {",
          "507:  req, out := c.DeletePlaybackKeyPairRequest(input)",
          "508:  req.SetContext(ctx)",
          "509:  req.ApplyOptions(opts...)",
          "510:  return out, req.Send()",
          "511: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "592:  return out, req.Send()",
          "593: }",
          "595: const opGetStream = \"GetStream\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "681: const opGetPlaybackKeyPair = \"GetPlaybackKeyPair\"",
          "707: func (c *IVS) GetPlaybackKeyPairRequest(input *GetPlaybackKeyPairInput) (req *request.Request, output *GetPlaybackKeyPairOutput) {",
          "708:  op := &request.Operation{",
          "709:   Name:       opGetPlaybackKeyPair,",
          "710:   HTTPMethod: \"POST\",",
          "711:   HTTPPath:   \"/GetPlaybackKeyPair\",",
          "712:  }",
          "714:  if input == nil {",
          "715:   input = &GetPlaybackKeyPairInput{}",
          "716:  }",
          "718:  output = &GetPlaybackKeyPairOutput{}",
          "719:  req = c.newRequest(op, input, output)",
          "720:  return",
          "721: }",
          "744: func (c *IVS) GetPlaybackKeyPair(input *GetPlaybackKeyPairInput) (*GetPlaybackKeyPairOutput, error) {",
          "745:  req, out := c.GetPlaybackKeyPairRequest(input)",
          "746:  return out, req.Send()",
          "747: }",
          "758: func (c *IVS) GetPlaybackKeyPairWithContext(ctx aws.Context, input *GetPlaybackKeyPairInput, opts ...request.Option) (*GetPlaybackKeyPairOutput, error) {",
          "759:  req, out := c.GetPlaybackKeyPairRequest(input)",
          "760:  req.SetContext(ctx)",
          "761:  req.ApplyOptions(opts...)",
          "762:  return out, req.Send()",
          "763: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "758:  return out, req.Send()",
          "759: }",
          "761: const opListChannels = \"ListChannels\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "931: const opImportPlaybackKeyPair = \"ImportPlaybackKeyPair\"",
          "957: func (c *IVS) ImportPlaybackKeyPairRequest(input *ImportPlaybackKeyPairInput) (req *request.Request, output *ImportPlaybackKeyPairOutput) {",
          "958:  op := &request.Operation{",
          "959:   Name:       opImportPlaybackKeyPair,",
          "960:   HTTPMethod: \"POST\",",
          "961:   HTTPPath:   \"/ImportPlaybackKeyPair\",",
          "962:  }",
          "964:  if input == nil {",
          "965:   input = &ImportPlaybackKeyPairInput{}",
          "966:  }",
          "968:  output = &ImportPlaybackKeyPairOutput{}",
          "969:  req = c.newRequest(op, input, output)",
          "970:  return",
          "971: }",
          "998: func (c *IVS) ImportPlaybackKeyPair(input *ImportPlaybackKeyPairInput) (*ImportPlaybackKeyPairOutput, error) {",
          "999:  req, out := c.ImportPlaybackKeyPairRequest(input)",
          "1000:  return out, req.Send()",
          "1001: }",
          "1012: func (c *IVS) ImportPlaybackKeyPairWithContext(ctx aws.Context, input *ImportPlaybackKeyPairInput, opts ...request.Option) (*ImportPlaybackKeyPairOutput, error) {",
          "1013:  req, out := c.ImportPlaybackKeyPairRequest(input)",
          "1014:  req.SetContext(ctx)",
          "1015:  req.ApplyOptions(opts...)",
          "1016:  return out, req.Send()",
          "1017: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "898:  return p.Err()",
          "899: }",
          "901: const opListStreamKeys = \"ListStreamKeys\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1159: const opListPlaybackKeyPairs = \"ListPlaybackKeyPairs\"",
          "1185: func (c *IVS) ListPlaybackKeyPairsRequest(input *ListPlaybackKeyPairsInput) (req *request.Request, output *ListPlaybackKeyPairsOutput) {",
          "1186:  op := &request.Operation{",
          "1187:   Name:       opListPlaybackKeyPairs,",
          "1188:   HTTPMethod: \"POST\",",
          "1189:   HTTPPath:   \"/ListPlaybackKeyPairs\",",
          "1190:   Paginator: &request.Paginator{",
          "1191:    InputTokens:     []string{\"nextToken\"},",
          "1192:    OutputTokens:    []string{\"nextToken\"},",
          "1193:    LimitToken:      \"maxResults\",",
          "1194:    TruncationToken: \"\",",
          "1195:   },",
          "1196:  }",
          "1198:  if input == nil {",
          "1199:   input = &ListPlaybackKeyPairsInput{}",
          "1200:  }",
          "1202:  output = &ListPlaybackKeyPairsOutput{}",
          "1203:  req = c.newRequest(op, input, output)",
          "1204:  return",
          "1205: }",
          "1224: func (c *IVS) ListPlaybackKeyPairs(input *ListPlaybackKeyPairsInput) (*ListPlaybackKeyPairsOutput, error) {",
          "1225:  req, out := c.ListPlaybackKeyPairsRequest(input)",
          "1226:  return out, req.Send()",
          "1227: }",
          "1238: func (c *IVS) ListPlaybackKeyPairsWithContext(ctx aws.Context, input *ListPlaybackKeyPairsInput, opts ...request.Option) (*ListPlaybackKeyPairsOutput, error) {",
          "1239:  req, out := c.ListPlaybackKeyPairsRequest(input)",
          "1240:  req.SetContext(ctx)",
          "1241:  req.ApplyOptions(opts...)",
          "1242:  return out, req.Send()",
          "1243: }",
          "1262: func (c *IVS) ListPlaybackKeyPairsPages(input *ListPlaybackKeyPairsInput, fn func(*ListPlaybackKeyPairsOutput, bool) bool) error {",
          "1263:  return c.ListPlaybackKeyPairsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1264: }",
          "1273: func (c *IVS) ListPlaybackKeyPairsPagesWithContext(ctx aws.Context, input *ListPlaybackKeyPairsInput, fn func(*ListPlaybackKeyPairsOutput, bool) bool, opts ...request.Option) error {",
          "1274:  p := request.Pagination{",
          "1275:   NewRequest: func() (*request.Request, error) {",
          "1276:    var inCpy *ListPlaybackKeyPairsInput",
          "1277:    if input != nil {",
          "1278:     tmp := *input",
          "1279:     inCpy = &tmp",
          "1280:    }",
          "1281:    req, _ := c.ListPlaybackKeyPairsRequest(inCpy)",
          "1282:    req.SetContext(ctx)",
          "1283:    req.ApplyOptions(opts...)",
          "1284:    return req, nil",
          "1285:   },",
          "1286:  }",
          "1288:  for p.Next() {",
          "1289:   if !fn(p.Page().(*ListPlaybackKeyPairsOutput), !p.HasNextPage()) {",
          "1290:    break",
          "1291:   }",
          "1292:  }",
          "1294:  return p.Err()",
          "1295: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2001:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "2005:  IngestEndpoint *string `locationName:\"ingestEndpoint\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2400:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2049:  return s",
          "2050: }",
          "2053: func (s *Channel) SetIngestEndpoint(v string) *Channel {",
          "2054:  s.IngestEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2452: func (s *Channel) SetAuthorized(v bool) *Channel {",
          "2453:  s.Authorized = &v",
          "2454:  return s",
          "2455: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2151:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "2154:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2559:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2176:  return s",
          "2177: }",
          "2180: func (s *ChannelSummary) SetLatencyMode(v string) *ChannelSummary {",
          "2181:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2588: func (s *ChannelSummary) SetAuthorized(v bool) *ChannelSummary {",
          "2589:  s.Authorized = &v",
          "2590:  return s",
          "2591: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2255: type CreateChannelInput struct {",
          "2256:  _ struct{} `type:\"structure\"`",
          "2259:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2673:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2291:  return s.String()",
          "2292: }",
          "2295: func (s *CreateChannelInput) SetLatencyMode(v string) *CreateChannelInput {",
          "2296:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2712: func (s *CreateChannelInput) SetAuthorized(v bool) *CreateChannelInput {",
          "2713:  s.Authorized = &v",
          "2714:  return s",
          "2715: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2420:  return s",
          "2421: }",
          "2424:  _ struct{} `type:\"structure\"`",
          "2429:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2430: }",
          "2434:  return awsutil.Prettify(s)",
          "2435: }",
          "2439:  return s.String()",
          "2440: }",
          "2445:  if s.Arn == nil {",
          "2446:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2447:  }",
          "",
          "[Removed Lines]",
          "2423: type DeleteChannelInput struct {",
          "2433: func (s DeleteChannelInput) String() string {",
          "2438: func (s DeleteChannelInput) GoString() string {",
          "2443: func (s *DeleteChannelInput) Validate() error {",
          "2444:  invalidParams := request.ErrInvalidParams{Context: \"DeleteChannelInput\"}",
          "",
          "[Added Lines]",
          "2846: type DeleteChannelInput struct {",
          "2847:  _ struct{} `type:\"structure\"`",
          "2852:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2853: }",
          "2856: func (s DeleteChannelInput) String() string {",
          "2857:  return awsutil.Prettify(s)",
          "2858: }",
          "2861: func (s DeleteChannelInput) GoString() string {",
          "2862:  return s.String()",
          "2863: }",
          "2866: func (s *DeleteChannelInput) Validate() error {",
          "2867:  invalidParams := request.ErrInvalidParams{Context: \"DeleteChannelInput\"}",
          "2868:  if s.Arn == nil {",
          "2869:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2870:  }",
          "2871:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "2872:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "2873:  }",
          "2875:  if invalidParams.Len() > 0 {",
          "2876:   return invalidParams",
          "2877:  }",
          "2878:  return nil",
          "2879: }",
          "2882: func (s *DeleteChannelInput) SetArn(v string) *DeleteChannelInput {",
          "2883:  s.Arn = &v",
          "2884:  return s",
          "2885: }",
          "2887: type DeleteChannelOutput struct {",
          "2888:  _ struct{} `type:\"structure\"`",
          "2889: }",
          "2892: func (s DeleteChannelOutput) String() string {",
          "2893:  return awsutil.Prettify(s)",
          "2894: }",
          "2897: func (s DeleteChannelOutput) GoString() string {",
          "2898:  return s.String()",
          "2899: }",
          "2901: type DeletePlaybackKeyPairInput struct {",
          "2911: func (s DeletePlaybackKeyPairInput) String() string {",
          "2916: func (s DeletePlaybackKeyPairInput) GoString() string {",
          "2921: func (s *DeletePlaybackKeyPairInput) Validate() error {",
          "2922:  invalidParams := request.ErrInvalidParams{Context: \"DeletePlaybackKeyPairInput\"}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2456: }",
          "2460:  s.Arn = &v",
          "2461:  return s",
          "2462: }",
          "2465:  _ struct{} `type:\"structure\"`",
          "2466: }",
          "2470:  return awsutil.Prettify(s)",
          "2471: }",
          "2475:  return s.String()",
          "2476: }",
          "",
          "[Removed Lines]",
          "2459: func (s *DeleteChannelInput) SetArn(v string) *DeleteChannelInput {",
          "2464: type DeleteChannelOutput struct {",
          "2469: func (s DeleteChannelOutput) String() string {",
          "2474: func (s DeleteChannelOutput) GoString() string {",
          "",
          "[Added Lines]",
          "2937: func (s *DeletePlaybackKeyPairInput) SetArn(v string) *DeletePlaybackKeyPairInput {",
          "2942: type DeletePlaybackKeyPairOutput struct {",
          "2947: func (s DeletePlaybackKeyPairOutput) String() string {",
          "2952: func (s DeletePlaybackKeyPairOutput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2594:  return s",
          "2595: }",
          "2597: type GetStreamInput struct {",
          "2598:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3075: type GetPlaybackKeyPairInput struct {",
          "3076:  _ struct{} `type:\"structure\"`",
          "3081:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3082: }",
          "3085: func (s GetPlaybackKeyPairInput) String() string {",
          "3086:  return awsutil.Prettify(s)",
          "3087: }",
          "3090: func (s GetPlaybackKeyPairInput) GoString() string {",
          "3091:  return s.String()",
          "3092: }",
          "3095: func (s *GetPlaybackKeyPairInput) Validate() error {",
          "3096:  invalidParams := request.ErrInvalidParams{Context: \"GetPlaybackKeyPairInput\"}",
          "3097:  if s.Arn == nil {",
          "3098:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "3099:  }",
          "3100:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "3101:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "3102:  }",
          "3104:  if invalidParams.Len() > 0 {",
          "3105:   return invalidParams",
          "3106:  }",
          "3107:  return nil",
          "3108: }",
          "3111: func (s *GetPlaybackKeyPairInput) SetArn(v string) *GetPlaybackKeyPairInput {",
          "3112:  s.Arn = &v",
          "3113:  return s",
          "3114: }",
          "3116: type GetPlaybackKeyPairOutput struct {",
          "3117:  _ struct{} `type:\"structure\"`",
          "3120:  KeyPair *PlaybackKeyPair `locationName:\"keyPair\" type:\"structure\"`",
          "3121: }",
          "3124: func (s GetPlaybackKeyPairOutput) String() string {",
          "3125:  return awsutil.Prettify(s)",
          "3126: }",
          "3129: func (s GetPlaybackKeyPairOutput) GoString() string {",
          "3130:  return s.String()",
          "3131: }",
          "3134: func (s *GetPlaybackKeyPairOutput) SetKeyPair(v *PlaybackKeyPair) *GetPlaybackKeyPairOutput {",
          "3135:  s.KeyPair = v",
          "3136:  return s",
          "3137: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2722:  return s",
          "2723: }",
          "2725: type InternalServerException struct {",
          "2726:  _            struct{}                  `type:\"structure\"`",
          "2727:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3267: type ImportPlaybackKeyPairInput struct {",
          "3268:  _ struct{} `type:\"structure\"`",
          "3272:  Name *string `locationName:\"name\" type:\"string\"`",
          "3277:  PublicKeyMaterial *string `locationName:\"publicKeyMaterial\" type:\"string\" required:\"true\"`",
          "3280:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3281: }",
          "3284: func (s ImportPlaybackKeyPairInput) String() string {",
          "3285:  return awsutil.Prettify(s)",
          "3286: }",
          "3289: func (s ImportPlaybackKeyPairInput) GoString() string {",
          "3290:  return s.String()",
          "3291: }",
          "3294: func (s *ImportPlaybackKeyPairInput) Validate() error {",
          "3295:  invalidParams := request.ErrInvalidParams{Context: \"ImportPlaybackKeyPairInput\"}",
          "3296:  if s.PublicKeyMaterial == nil {",
          "3297:   invalidParams.Add(request.NewErrParamRequired(\"PublicKeyMaterial\"))",
          "3298:  }",
          "3300:  if invalidParams.Len() > 0 {",
          "3301:   return invalidParams",
          "3302:  }",
          "3303:  return nil",
          "3304: }",
          "3307: func (s *ImportPlaybackKeyPairInput) SetName(v string) *ImportPlaybackKeyPairInput {",
          "3308:  s.Name = &v",
          "3309:  return s",
          "3310: }",
          "3313: func (s *ImportPlaybackKeyPairInput) SetPublicKeyMaterial(v string) *ImportPlaybackKeyPairInput {",
          "3314:  s.PublicKeyMaterial = &v",
          "3315:  return s",
          "3316: }",
          "3319: func (s *ImportPlaybackKeyPairInput) SetTags(v map[string]*string) *ImportPlaybackKeyPairInput {",
          "3320:  s.Tags = v",
          "3321:  return s",
          "3322: }",
          "3324: type ImportPlaybackKeyPairOutput struct {",
          "3325:  _ struct{} `type:\"structure\"`",
          "3328:  KeyPair *PlaybackKeyPair `locationName:\"keyPair\" type:\"structure\"`",
          "3329: }",
          "3332: func (s ImportPlaybackKeyPairOutput) String() string {",
          "3333:  return awsutil.Prettify(s)",
          "3334: }",
          "3337: func (s ImportPlaybackKeyPairOutput) GoString() string {",
          "3338:  return s.String()",
          "3339: }",
          "3342: func (s *ImportPlaybackKeyPairOutput) SetKeyPair(v *PlaybackKeyPair) *ImportPlaybackKeyPairOutput {",
          "3343:  s.KeyPair = v",
          "3344:  return s",
          "3345: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2870:  return s",
          "2871: }",
          "2873: type ListStreamKeysInput struct {",
          "2874:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3495: type ListPlaybackKeyPairsInput struct {",
          "3496:  _ struct{} `type:\"structure\"`",
          "3500:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "3503:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3504: }",
          "3507: func (s ListPlaybackKeyPairsInput) String() string {",
          "3508:  return awsutil.Prettify(s)",
          "3509: }",
          "3512: func (s ListPlaybackKeyPairsInput) GoString() string {",
          "3513:  return s.String()",
          "3514: }",
          "3517: func (s *ListPlaybackKeyPairsInput) Validate() error {",
          "3518:  invalidParams := request.ErrInvalidParams{Context: \"ListPlaybackKeyPairsInput\"}",
          "3519:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "3520:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "3521:  }",
          "3523:  if invalidParams.Len() > 0 {",
          "3524:   return invalidParams",
          "3525:  }",
          "3526:  return nil",
          "3527: }",
          "3530: func (s *ListPlaybackKeyPairsInput) SetMaxResults(v int64) *ListPlaybackKeyPairsInput {",
          "3531:  s.MaxResults = &v",
          "3532:  return s",
          "3533: }",
          "3536: func (s *ListPlaybackKeyPairsInput) SetNextToken(v string) *ListPlaybackKeyPairsInput {",
          "3537:  s.NextToken = &v",
          "3538:  return s",
          "3539: }",
          "3541: type ListPlaybackKeyPairsOutput struct {",
          "3542:  _ struct{} `type:\"structure\"`",
          "3547:  KeyPairs []*PlaybackKeyPairSummary `locationName:\"keyPairs\" type:\"list\" required:\"true\"`",
          "3551:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3552: }",
          "3555: func (s ListPlaybackKeyPairsOutput) String() string {",
          "3556:  return awsutil.Prettify(s)",
          "3557: }",
          "3560: func (s ListPlaybackKeyPairsOutput) GoString() string {",
          "3561:  return s.String()",
          "3562: }",
          "3565: func (s *ListPlaybackKeyPairsOutput) SetKeyPairs(v []*PlaybackKeyPairSummary) *ListPlaybackKeyPairsOutput {",
          "3566:  s.KeyPairs = v",
          "3567:  return s",
          "3568: }",
          "3571: func (s *ListPlaybackKeyPairsOutput) SetNextToken(v string) *ListPlaybackKeyPairsOutput {",
          "3572:  s.NextToken = &v",
          "3573:  return s",
          "3574: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3203:  return s.RespMetadata.RequestID",
          "3204: }",
          "3206: type PutMetadataInput struct {",
          "3207:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3910: type PlaybackKeyPair struct {",
          "3911:  _ struct{} `type:\"structure\"`",
          "3914:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3917:  Fingerprint *string `locationName:\"fingerprint\" type:\"string\"`",
          "3920:  Name *string `locationName:\"name\" type:\"string\"`",
          "3923:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3924: }",
          "3927: func (s PlaybackKeyPair) String() string {",
          "3928:  return awsutil.Prettify(s)",
          "3929: }",
          "3932: func (s PlaybackKeyPair) GoString() string {",
          "3933:  return s.String()",
          "3934: }",
          "3937: func (s *PlaybackKeyPair) SetArn(v string) *PlaybackKeyPair {",
          "3938:  s.Arn = &v",
          "3939:  return s",
          "3940: }",
          "3943: func (s *PlaybackKeyPair) SetFingerprint(v string) *PlaybackKeyPair {",
          "3944:  s.Fingerprint = &v",
          "3945:  return s",
          "3946: }",
          "3949: func (s *PlaybackKeyPair) SetName(v string) *PlaybackKeyPair {",
          "3950:  s.Name = &v",
          "3951:  return s",
          "3952: }",
          "3955: func (s *PlaybackKeyPair) SetTags(v map[string]*string) *PlaybackKeyPair {",
          "3956:  s.Tags = v",
          "3957:  return s",
          "3958: }",
          "3961: type PlaybackKeyPairSummary struct {",
          "3962:  _ struct{} `type:\"structure\"`",
          "3965:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3968:  Name *string `locationName:\"name\" type:\"string\"`",
          "3971:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3972: }",
          "3975: func (s PlaybackKeyPairSummary) String() string {",
          "3976:  return awsutil.Prettify(s)",
          "3977: }",
          "3980: func (s PlaybackKeyPairSummary) GoString() string {",
          "3981:  return s.String()",
          "3982: }",
          "3985: func (s *PlaybackKeyPairSummary) SetArn(v string) *PlaybackKeyPairSummary {",
          "3986:  s.Arn = &v",
          "3987:  return s",
          "3988: }",
          "3991: func (s *PlaybackKeyPairSummary) SetName(v string) *PlaybackKeyPairSummary {",
          "3992:  s.Name = &v",
          "3993:  return s",
          "3994: }",
          "3997: func (s *PlaybackKeyPairSummary) SetTags(v map[string]*string) *PlaybackKeyPairSummary {",
          "3998:  s.Tags = v",
          "3999:  return s",
          "4000: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3930:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3933:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4729:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3984:  return s",
          "3985: }",
          "3988: func (s *UpdateChannelInput) SetLatencyMode(v string) *UpdateChannelInput {",
          "3989:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4787: func (s *UpdateChannelInput) SetAuthorized(v bool) *UpdateChannelInput {",
          "4788:  s.Authorized = &v",
          "4789:  return s",
          "4790: }",
          "",
          "---------------"
        ],
        "service/ivs/doc.go||service/ivs/doc.go": [
          "File: service/ivs/doc.go -> service/ivs/doc.go"
        ],
        "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go": [
          "File: service/ivs/ivsiface/interface.go -> service/ivs/ivsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  DeleteChannelWithContext(aws.Context, *ivs.DeleteChannelInput, ...request.Option) (*ivs.DeleteChannelOutput, error)",
          "81:  DeleteChannelRequest(*ivs.DeleteChannelInput) (*request.Request, *ivs.DeleteChannelOutput)",
          "83:  DeleteStreamKey(*ivs.DeleteStreamKeyInput) (*ivs.DeleteStreamKeyOutput, error)",
          "84:  DeleteStreamKeyWithContext(aws.Context, *ivs.DeleteStreamKeyInput, ...request.Option) (*ivs.DeleteStreamKeyOutput, error)",
          "85:  DeleteStreamKeyRequest(*ivs.DeleteStreamKeyInput) (*request.Request, *ivs.DeleteStreamKeyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  DeletePlaybackKeyPair(*ivs.DeletePlaybackKeyPairInput) (*ivs.DeletePlaybackKeyPairOutput, error)",
          "84:  DeletePlaybackKeyPairWithContext(aws.Context, *ivs.DeletePlaybackKeyPairInput, ...request.Option) (*ivs.DeletePlaybackKeyPairOutput, error)",
          "85:  DeletePlaybackKeyPairRequest(*ivs.DeletePlaybackKeyPairInput) (*request.Request, *ivs.DeletePlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  GetChannelWithContext(aws.Context, *ivs.GetChannelInput, ...request.Option) (*ivs.GetChannelOutput, error)",
          "89:  GetChannelRequest(*ivs.GetChannelInput) (*request.Request, *ivs.GetChannelOutput)",
          "91:  GetStream(*ivs.GetStreamInput) (*ivs.GetStreamOutput, error)",
          "92:  GetStreamWithContext(aws.Context, *ivs.GetStreamInput, ...request.Option) (*ivs.GetStreamOutput, error)",
          "93:  GetStreamRequest(*ivs.GetStreamInput) (*request.Request, *ivs.GetStreamOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:  GetPlaybackKeyPair(*ivs.GetPlaybackKeyPairInput) (*ivs.GetPlaybackKeyPairOutput, error)",
          "96:  GetPlaybackKeyPairWithContext(aws.Context, *ivs.GetPlaybackKeyPairInput, ...request.Option) (*ivs.GetPlaybackKeyPairOutput, error)",
          "97:  GetPlaybackKeyPairRequest(*ivs.GetPlaybackKeyPairInput) (*request.Request, *ivs.GetPlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:  GetStreamKeyWithContext(aws.Context, *ivs.GetStreamKeyInput, ...request.Option) (*ivs.GetStreamKeyOutput, error)",
          "97:  GetStreamKeyRequest(*ivs.GetStreamKeyInput) (*request.Request, *ivs.GetStreamKeyOutput)",
          "99:  ListChannels(*ivs.ListChannelsInput) (*ivs.ListChannelsOutput, error)",
          "100:  ListChannelsWithContext(aws.Context, *ivs.ListChannelsInput, ...request.Option) (*ivs.ListChannelsOutput, error)",
          "101:  ListChannelsRequest(*ivs.ListChannelsInput) (*request.Request, *ivs.ListChannelsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:  ImportPlaybackKeyPair(*ivs.ImportPlaybackKeyPairInput) (*ivs.ImportPlaybackKeyPairOutput, error)",
          "108:  ImportPlaybackKeyPairWithContext(aws.Context, *ivs.ImportPlaybackKeyPairInput, ...request.Option) (*ivs.ImportPlaybackKeyPairOutput, error)",
          "109:  ImportPlaybackKeyPairRequest(*ivs.ImportPlaybackKeyPairInput) (*request.Request, *ivs.ImportPlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103:  ListChannelsPages(*ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool) error",
          "104:  ListChannelsPagesWithContext(aws.Context, *ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool, ...request.Option) error",
          "106:  ListStreamKeys(*ivs.ListStreamKeysInput) (*ivs.ListStreamKeysOutput, error)",
          "107:  ListStreamKeysWithContext(aws.Context, *ivs.ListStreamKeysInput, ...request.Option) (*ivs.ListStreamKeysOutput, error)",
          "108:  ListStreamKeysRequest(*ivs.ListStreamKeysInput) (*request.Request, *ivs.ListStreamKeysOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:  ListPlaybackKeyPairs(*ivs.ListPlaybackKeyPairsInput) (*ivs.ListPlaybackKeyPairsOutput, error)",
          "119:  ListPlaybackKeyPairsWithContext(aws.Context, *ivs.ListPlaybackKeyPairsInput, ...request.Option) (*ivs.ListPlaybackKeyPairsOutput, error)",
          "120:  ListPlaybackKeyPairsRequest(*ivs.ListPlaybackKeyPairsInput) (*request.Request, *ivs.ListPlaybackKeyPairsOutput)",
          "122:  ListPlaybackKeyPairsPages(*ivs.ListPlaybackKeyPairsInput, func(*ivs.ListPlaybackKeyPairsOutput, bool) bool) error",
          "123:  ListPlaybackKeyPairsPagesWithContext(aws.Context, *ivs.ListPlaybackKeyPairsInput, func(*ivs.ListPlaybackKeyPairsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/lakeformation/api.go||service/lakeformation/api.go": [
          "File: service/lakeformation/api.go -> service/lakeformation/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2157:  return s",
          "2158: }",
          "2161: type EntityNotFoundException struct {",
          "2162:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2165: type DetailsMap struct {",
          "2166:  _ struct{} `type:\"structure\"`",
          "2170:  ResourceShare []*string `type:\"list\"`",
          "2171: }",
          "2174: func (s DetailsMap) String() string {",
          "2175:  return awsutil.Prettify(s)",
          "2176: }",
          "2179: func (s DetailsMap) GoString() string {",
          "2180:  return s.String()",
          "2181: }",
          "2184: func (s *DetailsMap) SetResourceShare(v []*string) *DetailsMap {",
          "2185:  s.ResourceShare = v",
          "2186:  return s",
          "2187: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3035: type PrincipalResourcePermissions struct {",
          "3036:  _ struct{} `type:\"structure\"`",
          "3039:  Permissions []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3069:  AdditionalDetails *DetailsMap `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3059:  return s.String()",
          "3060: }",
          "3063: func (s *PrincipalResourcePermissions) SetPermissions(v []*string) *PrincipalResourcePermissions {",
          "3064:  s.Permissions = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3096: func (s *PrincipalResourcePermissions) SetAdditionalDetails(v *DetailsMap) *PrincipalResourcePermissions {",
          "3097:  s.AdditionalDetails = v",
          "3098:  return s",
          "3099: }",
          "",
          "---------------"
        ],
        "service/organizations/api.go||service/organizations/api.go": [
          "File: service/organizations/api.go -> service/organizations/api.go"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16547:  IdempotencyToken *string `min:\"1\" type:\"string\"`",
          "16550:  LastRecordId *string `min:\"1\" type:\"string\"`",
          "16553:  Name *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16559:  LastProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "16574:  LastSuccessfulProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16560:  ProductId *string `min:\"1\" type:\"string\"`",
          "16563:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16587:  ProductName *string `type:\"string\"`",
          "16593:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16636:  return s",
          "16637: }",
          "16640: func (s *ProvisionedProductAttribute) SetLastRecordId(v string) *ProvisionedProductAttribute {",
          "16641:  s.LastRecordId = &v",
          "16642:  return s",
          "16643: }",
          "16646: func (s *ProvisionedProductAttribute) SetName(v string) *ProvisionedProductAttribute {",
          "16647:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16670: func (s *ProvisionedProductAttribute) SetLastProvisioningRecordId(v string) *ProvisionedProductAttribute {",
          "16671:  s.LastProvisioningRecordId = &v",
          "16672:  return s",
          "16673: }",
          "16682: func (s *ProvisionedProductAttribute) SetLastSuccessfulProvisioningRecordId(v string) *ProvisionedProductAttribute {",
          "16683:  s.LastSuccessfulProvisioningRecordId = &v",
          "16684:  return s",
          "16685: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "16660:  return s",
          "16661: }",
          "16664: func (s *ProvisionedProductAttribute) SetProvisioningArtifactId(v string) *ProvisionedProductAttribute {",
          "16665:  s.ProvisioningArtifactId = &v",
          "16666:  return s",
          "16667: }",
          "16670: func (s *ProvisionedProductAttribute) SetStatus(v string) *ProvisionedProductAttribute {",
          "16671:  s.Status = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16706: func (s *ProvisionedProductAttribute) SetProductName(v string) *ProvisionedProductAttribute {",
          "16707:  s.ProductName = &v",
          "16708:  return s",
          "16709: }",
          "16718: func (s *ProvisionedProductAttribute) SetProvisioningArtifactName(v string) *ProvisionedProductAttribute {",
          "16719:  s.ProvisioningArtifactName = &v",
          "16720:  return s",
          "16721: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16721:  IdempotencyToken *string `min:\"1\" type:\"string\"`",
          "16724:  LastRecordId *string `type:\"string\"`",
          "16727:  Name *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16787:  LastProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "16802:  LastSuccessfulProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16796:  return s",
          "16797: }",
          "16800: func (s *ProvisionedProductDetail) SetLastRecordId(v string) *ProvisionedProductDetail {",
          "16801:  s.LastRecordId = &v",
          "16802:  return s",
          "16803: }",
          "16806: func (s *ProvisionedProductDetail) SetName(v string) *ProvisionedProductDetail {",
          "16807:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16878: func (s *ProvisionedProductDetail) SetLastProvisioningRecordId(v string) *ProvisionedProductDetail {",
          "16879:  s.LastProvisioningRecordId = &v",
          "16880:  return s",
          "16881: }",
          "16890: func (s *ProvisionedProductDetail) SetLastSuccessfulProvisioningRecordId(v string) *ProvisionedProductDetail {",
          "16891:  s.LastSuccessfulProvisioningRecordId = &v",
          "16892:  return s",
          "16893: }",
          "",
          "---------------"
        ],
        "service/storagegateway/api.go||service/storagegateway/api.go": [
          "File: service/storagegateway/api.go -> service/storagegateway/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1433:  return out, req.Send()",
          "1434: }",
          "1436: const opCreateTapeWithBarcode = \"CreateTapeWithBarcode\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1436: const opCreateTapePool = \"CreateTapePool\"",
          "1462: func (c *StorageGateway) CreateTapePoolRequest(input *CreateTapePoolInput) (req *request.Request, output *CreateTapePoolOutput) {",
          "1463:  op := &request.Operation{",
          "1464:   Name:       opCreateTapePool,",
          "1465:   HTTPMethod: \"POST\",",
          "1466:   HTTPPath:   \"/\",",
          "1467:  }",
          "1469:  if input == nil {",
          "1470:   input = &CreateTapePoolInput{}",
          "1471:  }",
          "1473:  output = &CreateTapePoolOutput{}",
          "1474:  req = c.newRequest(op, input, output)",
          "1475:  return",
          "1476: }",
          "1500: func (c *StorageGateway) CreateTapePool(input *CreateTapePoolInput) (*CreateTapePoolOutput, error) {",
          "1501:  req, out := c.CreateTapePoolRequest(input)",
          "1502:  return out, req.Send()",
          "1503: }",
          "1514: func (c *StorageGateway) CreateTapePoolWithContext(ctx aws.Context, input *CreateTapePoolInput, opts ...request.Option) (*CreateTapePoolOutput, error) {",
          "1515:  req, out := c.CreateTapePoolRequest(input)",
          "1516:  req.SetContext(ctx)",
          "1517:  req.ApplyOptions(opts...)",
          "1518:  return out, req.Send()",
          "1519: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2322:  return out, req.Send()",
          "2323: }",
          "2325: const opDeleteVolume = \"DeleteVolume\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2410: const opDeleteTapePool = \"DeleteTapePool\"",
          "2436: func (c *StorageGateway) DeleteTapePoolRequest(input *DeleteTapePoolInput) (req *request.Request, output *DeleteTapePoolOutput) {",
          "2437:  op := &request.Operation{",
          "2438:   Name:       opDeleteTapePool,",
          "2439:   HTTPMethod: \"POST\",",
          "2440:   HTTPPath:   \"/\",",
          "2441:  }",
          "2443:  if input == nil {",
          "2444:   input = &DeleteTapePoolInput{}",
          "2445:  }",
          "2447:  output = &DeleteTapePoolOutput{}",
          "2448:  req = c.newRequest(op, input, output)",
          "2449:  return",
          "2450: }",
          "2475: func (c *StorageGateway) DeleteTapePool(input *DeleteTapePoolInput) (*DeleteTapePoolOutput, error) {",
          "2476:  req, out := c.DeleteTapePoolRequest(input)",
          "2477:  return out, req.Send()",
          "2478: }",
          "2489: func (c *StorageGateway) DeleteTapePoolWithContext(ctx aws.Context, input *DeleteTapePoolInput, opts ...request.Option) (*DeleteTapePoolOutput, error) {",
          "2490:  req, out := c.DeleteTapePoolRequest(input)",
          "2491:  req.SetContext(ctx)",
          "2492:  req.ApplyOptions(opts...)",
          "2493:  return out, req.Send()",
          "2494: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5109:  return p.Err()",
          "5110: }",
          "5112: const opListTapes = \"ListTapes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5283: const opListTapePools = \"ListTapePools\"",
          "5309: func (c *StorageGateway) ListTapePoolsRequest(input *ListTapePoolsInput) (req *request.Request, output *ListTapePoolsOutput) {",
          "5310:  op := &request.Operation{",
          "5311:   Name:       opListTapePools,",
          "5312:   HTTPMethod: \"POST\",",
          "5313:   HTTPPath:   \"/\",",
          "5314:  }",
          "5316:  if input == nil {",
          "5317:   input = &ListTapePoolsInput{}",
          "5318:  }",
          "5320:  output = &ListTapePoolsOutput{}",
          "5321:  req = c.newRequest(op, input, output)",
          "5322:  return",
          "5323: }",
          "5354: func (c *StorageGateway) ListTapePools(input *ListTapePoolsInput) (*ListTapePoolsOutput, error) {",
          "5355:  req, out := c.ListTapePoolsRequest(input)",
          "5356:  return out, req.Send()",
          "5357: }",
          "5368: func (c *StorageGateway) ListTapePoolsWithContext(ctx aws.Context, input *ListTapePoolsInput, opts ...request.Option) (*ListTapePoolsOutput, error) {",
          "5369:  req, out := c.ListTapePoolsRequest(input)",
          "5370:  req.SetContext(ctx)",
          "5371:  req.ApplyOptions(opts...)",
          "5372:  return out, req.Send()",
          "5373: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8223: type AssignTapePoolInput struct {",
          "8224:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8496:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8273:  return nil",
          "8274: }",
          "8277: func (s *AssignTapePoolInput) SetPoolId(v string) *AssignTapePoolInput {",
          "8278:  s.PoolId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8549: func (s *AssignTapePoolInput) SetBypassGovernanceRetention(v bool) *AssignTapePoolInput {",
          "8550:  s.BypassGovernanceRetention = &v",
          "8551:  return s",
          "8552: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8529:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "8530: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8813:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8594:  return s",
          "8595: }",
          "8598: type CacheAttributes struct {",
          "8599:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8882: func (s *AutomaticTapeCreationRule) SetWorm(v bool) *AutomaticTapeCreationRule {",
          "8883:  s.Worm = &v",
          "8884:  return s",
          "8885: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "10390:  return s",
          "10391: }",
          "10394: type CreateTapeWithBarcodeInput struct {",
          "10395:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10683: type CreateTapePoolInput struct {",
          "10684:  _ struct{} `type:\"structure\"`",
          "10689:  PoolName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10693:  RetentionLockTimeInDays *int64 `type:\"integer\"`",
          "10700:  RetentionLockType *string `type:\"string\" enum:\"RetentionLockType\"`",
          "10708:  StorageClass *string `type:\"string\" required:\"true\" enum:\"TapeStorageClass\"`",
          "10717:  Tags []*Tag `type:\"list\"`",
          "10718: }",
          "10721: func (s CreateTapePoolInput) String() string {",
          "10722:  return awsutil.Prettify(s)",
          "10723: }",
          "10726: func (s CreateTapePoolInput) GoString() string {",
          "10727:  return s.String()",
          "10728: }",
          "10731: func (s *CreateTapePoolInput) Validate() error {",
          "10732:  invalidParams := request.ErrInvalidParams{Context: \"CreateTapePoolInput\"}",
          "10733:  if s.PoolName == nil {",
          "10734:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "10735:  }",
          "10736:  if s.PoolName != nil && len(*s.PoolName) < 1 {",
          "10737:   invalidParams.Add(request.NewErrParamMinLen(\"PoolName\", 1))",
          "10738:  }",
          "10739:  if s.StorageClass == nil {",
          "10740:   invalidParams.Add(request.NewErrParamRequired(\"StorageClass\"))",
          "10741:  }",
          "10742:  if s.Tags != nil {",
          "10743:   for i, v := range s.Tags {",
          "10744:    if v == nil {",
          "10745:     continue",
          "10746:    }",
          "10747:    if err := v.Validate(); err != nil {",
          "10748:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "10749:    }",
          "10750:   }",
          "10751:  }",
          "10753:  if invalidParams.Len() > 0 {",
          "10754:   return invalidParams",
          "10755:  }",
          "10756:  return nil",
          "10757: }",
          "10760: func (s *CreateTapePoolInput) SetPoolName(v string) *CreateTapePoolInput {",
          "10761:  s.PoolName = &v",
          "10762:  return s",
          "10763: }",
          "10766: func (s *CreateTapePoolInput) SetRetentionLockTimeInDays(v int64) *CreateTapePoolInput {",
          "10767:  s.RetentionLockTimeInDays = &v",
          "10768:  return s",
          "10769: }",
          "10772: func (s *CreateTapePoolInput) SetRetentionLockType(v string) *CreateTapePoolInput {",
          "10773:  s.RetentionLockType = &v",
          "10774:  return s",
          "10775: }",
          "10778: func (s *CreateTapePoolInput) SetStorageClass(v string) *CreateTapePoolInput {",
          "10779:  s.StorageClass = &v",
          "10780:  return s",
          "10781: }",
          "10784: func (s *CreateTapePoolInput) SetTags(v []*Tag) *CreateTapePoolInput {",
          "10785:  s.Tags = v",
          "10786:  return s",
          "10787: }",
          "10789: type CreateTapePoolOutput struct {",
          "10790:  _ struct{} `type:\"structure\"`",
          "10795:  PoolARN *string `min:\"50\" type:\"string\"`",
          "10796: }",
          "10799: func (s CreateTapePoolOutput) String() string {",
          "10800:  return awsutil.Prettify(s)",
          "10801: }",
          "10804: func (s CreateTapePoolOutput) GoString() string {",
          "10805:  return s.String()",
          "10806: }",
          "10809: func (s *CreateTapePoolOutput) SetPoolARN(v string) *CreateTapePoolOutput {",
          "10810:  s.PoolARN = &v",
          "10811:  return s",
          "10812: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "10446:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "10447: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10871:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10539:  return s",
          "10540: }",
          "10543: type CreateTapeWithBarcodeOutput struct {",
          "10544:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10968: func (s *CreateTapeWithBarcodeInput) SetWorm(v bool) *CreateTapeWithBarcodeInput {",
          "10969:  s.Worm = &v",
          "10970:  return s",
          "10971: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10634:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "10635: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11069:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10751:  return s",
          "10752: }",
          "10755: type CreateTapesOutput struct {",
          "10756:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11190: func (s *CreateTapesInput) SetWorm(v bool) *CreateTapesInput {",
          "11191:  s.Worm = &v",
          "11192:  return s",
          "11193: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11246: type DeleteTapeArchiveInput struct {",
          "11247:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11694:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11279:  return nil",
          "11280: }",
          "11283: func (s *DeleteTapeArchiveInput) SetTapeARN(v string) *DeleteTapeArchiveInput {",
          "11284:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11730: func (s *DeleteTapeArchiveInput) SetBypassGovernanceRetention(v bool) *DeleteTapeArchiveInput {",
          "11731:  s.BypassGovernanceRetention = &v",
          "11732:  return s",
          "11733: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "11314: type DeleteTapeInput struct {",
          "11315:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11774:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "11359:  return nil",
          "11360: }",
          "11363: func (s *DeleteTapeInput) SetGatewayARN(v string) *DeleteTapeInput {",
          "11364:  s.GatewayARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11822: func (s *DeleteTapeInput) SetBypassGovernanceRetention(v bool) *DeleteTapeInput {",
          "11823:  s.BypassGovernanceRetention = &v",
          "11824:  return s",
          "11825: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "11395:  return s",
          "11396: }",
          "11399: type DeleteVolumeInput struct {",
          "11400:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11863: type DeleteTapePoolInput struct {",
          "11864:  _ struct{} `type:\"structure\"`",
          "11869:  PoolARN *string `min:\"50\" type:\"string\" required:\"true\"`",
          "11870: }",
          "11873: func (s DeleteTapePoolInput) String() string {",
          "11874:  return awsutil.Prettify(s)",
          "11875: }",
          "11878: func (s DeleteTapePoolInput) GoString() string {",
          "11879:  return s.String()",
          "11880: }",
          "11883: func (s *DeleteTapePoolInput) Validate() error {",
          "11884:  invalidParams := request.ErrInvalidParams{Context: \"DeleteTapePoolInput\"}",
          "11885:  if s.PoolARN == nil {",
          "11886:   invalidParams.Add(request.NewErrParamRequired(\"PoolARN\"))",
          "11887:  }",
          "11888:  if s.PoolARN != nil && len(*s.PoolARN) < 50 {",
          "11889:   invalidParams.Add(request.NewErrParamMinLen(\"PoolARN\", 50))",
          "11890:  }",
          "11892:  if invalidParams.Len() > 0 {",
          "11893:   return invalidParams",
          "11894:  }",
          "11895:  return nil",
          "11896: }",
          "11899: func (s *DeleteTapePoolInput) SetPoolARN(v string) *DeleteTapePoolInput {",
          "11900:  s.PoolARN = &v",
          "11901:  return s",
          "11902: }",
          "11904: type DeleteTapePoolOutput struct {",
          "11905:  _ struct{} `type:\"structure\"`",
          "11908:  PoolARN *string `min:\"50\" type:\"string\"`",
          "11909: }",
          "11912: func (s DeleteTapePoolOutput) String() string {",
          "11913:  return awsutil.Prettify(s)",
          "11914: }",
          "11917: func (s DeleteTapePoolOutput) GoString() string {",
          "11918:  return s.String()",
          "11919: }",
          "11922: func (s *DeleteTapePoolOutput) SetPoolARN(v string) *DeleteTapePoolOutput {",
          "11923:  s.PoolARN = &v",
          "11924:  return s",
          "11925: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14675:  return s",
          "14676: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15207: type ListTapePoolsInput struct {",
          "15208:  _ struct{} `type:\"structure\"`",
          "15212:  Limit *int64 `min:\"1\" type:\"integer\"`",
          "15216:  Marker *string `min:\"1\" type:\"string\"`",
          "15221:  PoolARNs []*string `type:\"list\"`",
          "15222: }",
          "15225: func (s ListTapePoolsInput) String() string {",
          "15226:  return awsutil.Prettify(s)",
          "15227: }",
          "15230: func (s ListTapePoolsInput) GoString() string {",
          "15231:  return s.String()",
          "15232: }",
          "15235: func (s *ListTapePoolsInput) Validate() error {",
          "15236:  invalidParams := request.ErrInvalidParams{Context: \"ListTapePoolsInput\"}",
          "15237:  if s.Limit != nil && *s.Limit < 1 {",
          "15238:   invalidParams.Add(request.NewErrParamMinValue(\"Limit\", 1))",
          "15239:  }",
          "15240:  if s.Marker != nil && len(*s.Marker) < 1 {",
          "15241:   invalidParams.Add(request.NewErrParamMinLen(\"Marker\", 1))",
          "15242:  }",
          "15244:  if invalidParams.Len() > 0 {",
          "15245:   return invalidParams",
          "15246:  }",
          "15247:  return nil",
          "15248: }",
          "15251: func (s *ListTapePoolsInput) SetLimit(v int64) *ListTapePoolsInput {",
          "15252:  s.Limit = &v",
          "15253:  return s",
          "15254: }",
          "15257: func (s *ListTapePoolsInput) SetMarker(v string) *ListTapePoolsInput {",
          "15258:  s.Marker = &v",
          "15259:  return s",
          "15260: }",
          "15263: func (s *ListTapePoolsInput) SetPoolARNs(v []*string) *ListTapePoolsInput {",
          "15264:  s.PoolARNs = v",
          "15265:  return s",
          "15266: }",
          "15268: type ListTapePoolsOutput struct {",
          "15269:  _ struct{} `type:\"structure\"`",
          "15275:  Marker *string `min:\"1\" type:\"string\"`",
          "15279:  PoolInfos []*PoolInfo `type:\"list\"`",
          "15280: }",
          "15283: func (s ListTapePoolsOutput) String() string {",
          "15284:  return awsutil.Prettify(s)",
          "15285: }",
          "15288: func (s ListTapePoolsOutput) GoString() string {",
          "15289:  return s.String()",
          "15290: }",
          "15293: func (s *ListTapePoolsOutput) SetMarker(v string) *ListTapePoolsOutput {",
          "15294:  s.Marker = &v",
          "15295:  return s",
          "15296: }",
          "15299: func (s *ListTapePoolsOutput) SetPoolInfos(v []*PoolInfo) *ListTapePoolsOutput {",
          "15300:  s.PoolInfos = v",
          "15301:  return s",
          "15302: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "15487:  return s",
          "15488: }",
          "15491: type RefreshCacheInput struct {",
          "15492:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16117: type PoolInfo struct {",
          "16118:  _ struct{} `type:\"structure\"`",
          "16123:  PoolARN *string `min:\"50\" type:\"string\"`",
          "16127:  PoolName *string `min:\"1\" type:\"string\"`",
          "16130:  PoolStatus *string `type:\"string\" enum:\"PoolStatus\"`",
          "16134:  RetentionLockTimeInDays *int64 `type:\"integer\"`",
          "16141:  RetentionLockType *string `type:\"string\" enum:\"RetentionLockType\"`",
          "16147:  StorageClass *string `type:\"string\" enum:\"TapeStorageClass\"`",
          "16148: }",
          "16151: func (s PoolInfo) String() string {",
          "16152:  return awsutil.Prettify(s)",
          "16153: }",
          "16156: func (s PoolInfo) GoString() string {",
          "16157:  return s.String()",
          "16158: }",
          "16161: func (s *PoolInfo) SetPoolARN(v string) *PoolInfo {",
          "16162:  s.PoolARN = &v",
          "16163:  return s",
          "16164: }",
          "16167: func (s *PoolInfo) SetPoolName(v string) *PoolInfo {",
          "16168:  s.PoolName = &v",
          "16169:  return s",
          "16170: }",
          "16173: func (s *PoolInfo) SetPoolStatus(v string) *PoolInfo {",
          "16174:  s.PoolStatus = &v",
          "16175:  return s",
          "16176: }",
          "16179: func (s *PoolInfo) SetRetentionLockTimeInDays(v int64) *PoolInfo {",
          "16180:  s.RetentionLockTimeInDays = &v",
          "16181:  return s",
          "16182: }",
          "16185: func (s *PoolInfo) SetRetentionLockType(v string) *PoolInfo {",
          "16186:  s.RetentionLockType = &v",
          "16187:  return s",
          "16188: }",
          "16191: func (s *PoolInfo) SetStorageClass(v string) *PoolInfo {",
          "16192:  s.StorageClass = &v",
          "16193:  return s",
          "16194: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "16887:  KMSKey *string `min:\"7\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17596:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "16902:  Progress *float64 `type:\"double\"`",
          "16905:  TapeARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17614:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "16926:  VTLDevice *string `min:\"50\" type:\"string\"`",
          "16927: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17641:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "16942:  return s",
          "16943: }",
          "16946: func (s *Tape) SetPoolId(v string) *Tape {",
          "16947:  s.PoolId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17661: func (s *Tape) SetPoolEntryDate(v time.Time) *Tape {",
          "17662:  s.PoolEntryDate = &v",
          "17663:  return s",
          "17664: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "16954:  return s",
          "16955: }",
          "16958: func (s *Tape) SetTapeARN(v string) *Tape {",
          "16959:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17679: func (s *Tape) SetRetentionStartDate(v time.Time) *Tape {",
          "17680:  s.RetentionStartDate = &v",
          "17681:  return s",
          "17682: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "16996:  return s",
          "16997: }",
          "17000: type TapeArchive struct {",
          "17001:  _ struct{} `type:\"structure\"`",
          "17007:  CompletionTime *time.Time `type:\"timestamp\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17727: func (s *Tape) SetWorm(v bool) *Tape {",
          "17728:  s.Worm = &v",
          "17729:  return s",
          "17730: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "17012:  KMSKey *string `min:\"7\" type:\"string\"`",
          "17018:  PoolId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17751:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "17761:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "17044:  TapeUsedInBytes *int64 `type:\"long\"`",
          "17045: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17790:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "17066:  return s",
          "17067: }",
          "17070: func (s *TapeArchive) SetPoolId(v string) *TapeArchive {",
          "17071:  s.PoolId = &v",
          "17072:  return s",
          "17073: }",
          "17076: func (s *TapeArchive) SetRetrievedTo(v string) *TapeArchive {",
          "17077:  s.RetrievedTo = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17816: func (s *TapeArchive) SetPoolEntryDate(v time.Time) *TapeArchive {",
          "17817:  s.PoolEntryDate = &v",
          "17818:  return s",
          "17819: }",
          "17828: func (s *TapeArchive) SetRetentionStartDate(v time.Time) *TapeArchive {",
          "17829:  s.RetentionStartDate = &v",
          "17830:  return s",
          "17831: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "17114:  return s",
          "17115: }",
          "17118: type TapeInfo struct {",
          "17119:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17876: func (s *TapeArchive) SetWorm(v bool) *TapeArchive {",
          "17877:  s.Worm = &v",
          "17878:  return s",
          "17879: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "17123:  GatewayARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17891:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "17132:  PoolId *string `min:\"1\" type:\"string\"`",
          "17135:  TapeARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17903:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "17160:  return s",
          "17161: }",
          "17164: func (s *TapeInfo) SetPoolId(v string) *TapeInfo {",
          "17165:  s.PoolId = &v",
          "17166:  return s",
          "17167: }",
          "17170: func (s *TapeInfo) SetTapeARN(v string) *TapeInfo {",
          "17171:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17935: func (s *TapeInfo) SetPoolEntryDate(v time.Time) *TapeInfo {",
          "17936:  s.PoolEntryDate = &v",
          "17937:  return s",
          "17938: }",
          "17947: func (s *TapeInfo) SetRetentionStartDate(v time.Time) *TapeInfo {",
          "17948:  s.RetentionStartDate = &v",
          "17949:  return s",
          "17950: }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "19388:  }",
          "19389: }",
          "19391: const (",
          "19393:  SMBSecurityStrategyClientSpecified = \"ClientSpecified\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20174: const (",
          "20176:  PoolStatusActive = \"ACTIVE\"",
          "20179:  PoolStatusDeleted = \"DELETED\"",
          "20180: )",
          "20183: func PoolStatus_Values() []string {",
          "20184:  return []string{",
          "20185:   PoolStatusActive,",
          "20186:   PoolStatusDeleted,",
          "20187:  }",
          "20188: }",
          "20190: const (",
          "20192:  RetentionLockTypeCompliance = \"COMPLIANCE\"",
          "20195:  RetentionLockTypeGovernance = \"GOVERNANCE\"",
          "20198:  RetentionLockTypeNone = \"NONE\"",
          "20199: )",
          "20202: func RetentionLockType_Values() []string {",
          "20203:  return []string{",
          "20204:   RetentionLockTypeCompliance,",
          "20205:   RetentionLockTypeGovernance,",
          "20206:   RetentionLockTypeNone,",
          "20207:  }",
          "20208: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "19407:   SMBSecurityStrategyMandatoryEncryption,",
          "19408:  }",
          "19409: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20230: const (",
          "20232:  TapeStorageClassDeepArchive = \"DEEP_ARCHIVE\"",
          "20235:  TapeStorageClassGlacier = \"GLACIER\"",
          "20236: )",
          "20239: func TapeStorageClass_Values() []string {",
          "20240:  return []string{",
          "20241:   TapeStorageClassDeepArchive,",
          "20242:   TapeStorageClassGlacier,",
          "20243:  }",
          "20244: }",
          "",
          "---------------"
        ],
        "service/storagegateway/doc.go||service/storagegateway/doc.go": [
          "File: service/storagegateway/doc.go -> service/storagegateway/doc.go"
        ],
        "service/storagegateway/storagegatewayiface/interface.go||service/storagegateway/storagegatewayiface/interface.go": [
          "File: service/storagegateway/storagegatewayiface/interface.go -> service/storagegateway/storagegatewayiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  CreateStorediSCSIVolumeWithContext(aws.Context, *storagegateway.CreateStorediSCSIVolumeInput, ...request.Option) (*storagegateway.CreateStorediSCSIVolumeOutput, error)",
          "121:  CreateStorediSCSIVolumeRequest(*storagegateway.CreateStorediSCSIVolumeInput) (*request.Request, *storagegateway.CreateStorediSCSIVolumeOutput)",
          "123:  CreateTapeWithBarcode(*storagegateway.CreateTapeWithBarcodeInput) (*storagegateway.CreateTapeWithBarcodeOutput, error)",
          "124:  CreateTapeWithBarcodeWithContext(aws.Context, *storagegateway.CreateTapeWithBarcodeInput, ...request.Option) (*storagegateway.CreateTapeWithBarcodeOutput, error)",
          "125:  CreateTapeWithBarcodeRequest(*storagegateway.CreateTapeWithBarcodeInput) (*request.Request, *storagegateway.CreateTapeWithBarcodeOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  CreateTapePool(*storagegateway.CreateTapePoolInput) (*storagegateway.CreateTapePoolOutput, error)",
          "124:  CreateTapePoolWithContext(aws.Context, *storagegateway.CreateTapePoolInput, ...request.Option) (*storagegateway.CreateTapePoolOutput, error)",
          "125:  CreateTapePoolRequest(*storagegateway.CreateTapePoolInput) (*request.Request, *storagegateway.CreateTapePoolOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:  DeleteTapeArchiveWithContext(aws.Context, *storagegateway.DeleteTapeArchiveInput, ...request.Option) (*storagegateway.DeleteTapeArchiveOutput, error)",
          "161:  DeleteTapeArchiveRequest(*storagegateway.DeleteTapeArchiveInput) (*request.Request, *storagegateway.DeleteTapeArchiveOutput)",
          "163:  DeleteVolume(*storagegateway.DeleteVolumeInput) (*storagegateway.DeleteVolumeOutput, error)",
          "164:  DeleteVolumeWithContext(aws.Context, *storagegateway.DeleteVolumeInput, ...request.Option) (*storagegateway.DeleteVolumeOutput, error)",
          "165:  DeleteVolumeRequest(*storagegateway.DeleteVolumeInput) (*request.Request, *storagegateway.DeleteVolumeOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:  DeleteTapePool(*storagegateway.DeleteTapePoolInput) (*storagegateway.DeleteTapePoolOutput, error)",
          "168:  DeleteTapePoolWithContext(aws.Context, *storagegateway.DeleteTapePoolInput, ...request.Option) (*storagegateway.DeleteTapePoolOutput, error)",
          "169:  DeleteTapePoolRequest(*storagegateway.DeleteTapePoolInput) (*request.Request, *storagegateway.DeleteTapePoolOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:  ListTagsForResourcePages(*storagegateway.ListTagsForResourceInput, func(*storagegateway.ListTagsForResourceOutput, bool) bool) error",
          "290:  ListTagsForResourcePagesWithContext(aws.Context, *storagegateway.ListTagsForResourceInput, func(*storagegateway.ListTagsForResourceOutput, bool) bool, ...request.Option) error",
          "292:  ListTapes(*storagegateway.ListTapesInput) (*storagegateway.ListTapesOutput, error)",
          "293:  ListTapesWithContext(aws.Context, *storagegateway.ListTapesInput, ...request.Option) (*storagegateway.ListTapesOutput, error)",
          "294:  ListTapesRequest(*storagegateway.ListTapesInput) (*request.Request, *storagegateway.ListTapesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300:  ListTapePools(*storagegateway.ListTapePoolsInput) (*storagegateway.ListTapePoolsOutput, error)",
          "301:  ListTapePoolsWithContext(aws.Context, *storagegateway.ListTapePoolsInput, ...request.Option) (*storagegateway.ListTapePoolsOutput, error)",
          "302:  ListTapePoolsRequest(*storagegateway.ListTapePoolsInput) (*request.Request, *storagegateway.ListTapePoolsOutput)",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go": [
          "File: service/transcribestreamingservice/api.go -> service/transcribestreamingservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "799:  EndTime *float64 `type:\"double\"`",
          "803:  StartTime *float64 `type:\"double\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "803:  Speaker *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "835:  return s",
          "836: }",
          "839: func (s *Item) SetStartTime(v float64) *Item {",
          "840:  s.StartTime = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "843: func (s *Item) SetSpeaker(v string) *Item {",
          "844:  s.Speaker = &v",
          "845:  return s",
          "846: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1119:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1132:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1195:  return s",
          "1196: }",
          "1199: func (s *StartStreamTranscriptionInput) SetVocabularyFilterMethod(v string) *StartStreamTranscriptionInput {",
          "1200:  s.VocabularyFilterMethod = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1212: func (s *StartStreamTranscriptionInput) SetShowSpeakerLabel(v bool) *StartStreamTranscriptionInput {",
          "1213:  s.ShowSpeakerLabel = &v",
          "1214:  return s",
          "1215: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1235:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "1238:  VocabularyFilterMethod *string `location:\"header\" locationName:\"x-amzn-transcribe-vocabulary-filter-method\" type:\"string\" enum:\"VocabularyFilterMethod\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1257:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1284:  return s",
          "1285: }",
          "1288: func (s *StartStreamTranscriptionOutput) SetVocabularyFilterMethod(v string) *StartStreamTranscriptionOutput {",
          "1289:  s.VocabularyFilterMethod = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1310: func (s *StartStreamTranscriptionOutput) SetShowSpeakerLabel(v bool) *StartStreamTranscriptionOutput {",
          "1311:  s.ShowSpeakerLabel = &v",
          "1312:  return s",
          "1313: }",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go": [
          "File: service/transcribestreamingservice/eventstream_test.go -> service/transcribestreamingservice/eventstream_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:          {",
          "233:           Content:               aws.String(\"string value goes here\"),",
          "234:           EndTime:               aws.Float64(123.45),",
          "235:           StartTime:             aws.Float64(123.45),",
          "236:           Type:                  aws.String(\"string value goes here\"),",
          "237:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:          {",
          "240:           Content:               aws.String(\"string value goes here\"),",
          "241:           EndTime:               aws.Float64(123.45),",
          "242:           StartTime:             aws.Float64(123.45),",
          "243:           Type:                  aws.String(\"string value goes here\"),",
          "244:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "246:          {",
          "247:           Content:               aws.String(\"string value goes here\"),",
          "248:           EndTime:               aws.Float64(123.45),",
          "249:           StartTime:             aws.Float64(123.45),",
          "250:           Type:                  aws.String(\"string value goes here\"),",
          "251:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:          {",
          "259:           Content:               aws.String(\"string value goes here\"),",
          "260:           EndTime:               aws.Float64(123.45),",
          "261:           StartTime:             aws.Float64(123.45),",
          "262:           Type:                  aws.String(\"string value goes here\"),",
          "263:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:          {",
          "266:           Content:               aws.String(\"string value goes here\"),",
          "267:           EndTime:               aws.Float64(123.45),",
          "268:           StartTime:             aws.Float64(123.45),",
          "269:           Type:                  aws.String(\"string value goes here\"),",
          "270:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "272:          {",
          "273:           Content:               aws.String(\"string value goes here\"),",
          "274:           EndTime:               aws.Float64(123.45),",
          "275:           StartTime:             aws.Float64(123.45),",
          "276:           Type:                  aws.String(\"string value goes here\"),",
          "277:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "284:          {",
          "285:           Content:               aws.String(\"string value goes here\"),",
          "286:           EndTime:               aws.Float64(123.45),",
          "287:           StartTime:             aws.Float64(123.45),",
          "288:           Type:                  aws.String(\"string value goes here\"),",
          "289:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "293:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "291:          {",
          "292:           Content:               aws.String(\"string value goes here\"),",
          "293:           EndTime:               aws.Float64(123.45),",
          "294:           StartTime:             aws.Float64(123.45),",
          "295:           Type:                  aws.String(\"string value goes here\"),",
          "296:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "298:          {",
          "299:           Content:               aws.String(\"string value goes here\"),",
          "300:           EndTime:               aws.Float64(123.45),",
          "301:           StartTime:             aws.Float64(123.45),",
          "302:           Type:                  aws.String(\"string value goes here\"),",
          "303:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "318:          {",
          "319:           Content:               aws.String(\"string value goes here\"),",
          "320:           EndTime:               aws.Float64(123.45),",
          "321:           StartTime:             aws.Float64(123.45),",
          "322:           Type:                  aws.String(\"string value goes here\"),",
          "323:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "325:          {",
          "326:           Content:               aws.String(\"string value goes here\"),",
          "327:           EndTime:               aws.Float64(123.45),",
          "328:           StartTime:             aws.Float64(123.45),",
          "329:           Type:                  aws.String(\"string value goes here\"),",
          "330:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "332:          {",
          "333:           Content:               aws.String(\"string value goes here\"),",
          "334:           EndTime:               aws.Float64(123.45),",
          "335:           StartTime:             aws.Float64(123.45),",
          "336:           Type:                  aws.String(\"string value goes here\"),",
          "337:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "344:          {",
          "345:           Content:               aws.String(\"string value goes here\"),",
          "346:           EndTime:               aws.Float64(123.45),",
          "347:           StartTime:             aws.Float64(123.45),",
          "348:           Type:                  aws.String(\"string value goes here\"),",
          "349:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "359:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "351:          {",
          "352:           Content:               aws.String(\"string value goes here\"),",
          "353:           EndTime:               aws.Float64(123.45),",
          "354:           StartTime:             aws.Float64(123.45),",
          "355:           Type:                  aws.String(\"string value goes here\"),",
          "356:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "358:          {",
          "359:           Content:               aws.String(\"string value goes here\"),",
          "360:           EndTime:               aws.Float64(123.45),",
          "361:           StartTime:             aws.Float64(123.45),",
          "362:           Type:                  aws.String(\"string value goes here\"),",
          "363:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "375:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "370:          {",
          "371:           Content:               aws.String(\"string value goes here\"),",
          "372:           EndTime:               aws.Float64(123.45),",
          "373:           StartTime:             aws.Float64(123.45),",
          "374:           Type:                  aws.String(\"string value goes here\"),",
          "375:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "377:          {",
          "378:           Content:               aws.String(\"string value goes here\"),",
          "379:           EndTime:               aws.Float64(123.45),",
          "380:           StartTime:             aws.Float64(123.45),",
          "381:           Type:                  aws.String(\"string value goes here\"),",
          "382:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "384:          {",
          "385:           Content:               aws.String(\"string value goes here\"),",
          "386:           EndTime:               aws.Float64(123.45),",
          "387:           StartTime:             aws.Float64(123.45),",
          "388:           Type:                  aws.String(\"string value goes here\"),",
          "389:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "404:          {",
          "405:           Content:               aws.String(\"string value goes here\"),",
          "406:           EndTime:               aws.Float64(123.45),",
          "407:           StartTime:             aws.Float64(123.45),",
          "408:           Type:                  aws.String(\"string value goes here\"),",
          "409:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "411:          {",
          "412:           Content:               aws.String(\"string value goes here\"),",
          "413:           EndTime:               aws.Float64(123.45),",
          "414:           StartTime:             aws.Float64(123.45),",
          "415:           Type:                  aws.String(\"string value goes here\"),",
          "416:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "433:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "418:          {",
          "419:           Content:               aws.String(\"string value goes here\"),",
          "420:           EndTime:               aws.Float64(123.45),",
          "421:           StartTime:             aws.Float64(123.45),",
          "422:           Type:                  aws.String(\"string value goes here\"),",
          "423:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "441:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "430:          {",
          "431:           Content:               aws.String(\"string value goes here\"),",
          "432:           EndTime:               aws.Float64(123.45),",
          "433:           StartTime:             aws.Float64(123.45),",
          "434:           Type:                  aws.String(\"string value goes here\"),",
          "435:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "454:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "437:          {",
          "438:           Content:               aws.String(\"string value goes here\"),",
          "439:           EndTime:               aws.Float64(123.45),",
          "440:           StartTime:             aws.Float64(123.45),",
          "441:           Type:                  aws.String(\"string value goes here\"),",
          "442:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "462:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "444:          {",
          "445:           Content:               aws.String(\"string value goes here\"),",
          "446:           EndTime:               aws.Float64(123.45),",
          "447:           StartTime:             aws.Float64(123.45),",
          "448:           Type:                  aws.String(\"string value goes here\"),",
          "449:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "470:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "456:          {",
          "457:           Content:               aws.String(\"string value goes here\"),",
          "458:           EndTime:               aws.Float64(123.45),",
          "459:           StartTime:             aws.Float64(123.45),",
          "460:           Type:                  aws.String(\"string value goes here\"),",
          "461:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "463:          {",
          "464:           Content:               aws.String(\"string value goes here\"),",
          "465:           EndTime:               aws.Float64(123.45),",
          "466:           StartTime:             aws.Float64(123.45),",
          "467:           Type:                  aws.String(\"string value goes here\"),",
          "468:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "491:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "470:          {",
          "471:           Content:               aws.String(\"string value goes here\"),",
          "472:           EndTime:               aws.Float64(123.45),",
          "473:           StartTime:             aws.Float64(123.45),",
          "474:           Type:                  aws.String(\"string value goes here\"),",
          "475:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "499:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0de8e4842f9affe2709100f150370b617cca4e1d",
      "candidate_info": {
        "commit_hash": "0de8e4842f9affe2709100f150370b617cca4e1d",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/0de8e4842f9affe2709100f150370b617cca4e1d",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/glue/api.go"
        ],
        "message": "Release v1.35.16 (2020-10-27) (#3614)\n\nRelease v1.35.16 (2020-10-27)\n===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue machine learning transforms now support encryption-at-rest for labels and trained models.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/glue/api.go||service/glue/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "838:     Protocols: []string{\"http\", \"https\"},",
          "839:    },",
          "840:    Endpoints: endpoints{",
          "841:     \"ap-east-1\":      endpoint{},",
          "842:     \"ap-northeast-1\": endpoint{},",
          "843:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "841:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "847:     \"ca-central-1\":   endpoint{},",
          "848:     \"eu-central-1\":   endpoint{},",
          "849:     \"eu-north-1\":     endpoint{},",
          "850:     \"eu-west-1\":      endpoint{},",
          "851:     \"eu-west-2\":      endpoint{},",
          "852:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "851:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.35.15\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.35.16\"",
          "",
          "---------------"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19290:  Timeout *int64 `min:\"1\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19314:  TransformEncryption *TransformEncryption `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19364:    invalidParams.AddNested(\"Parameters\", err.(request.ErrInvalidParams))",
          "19365:   }",
          "19366:  }",
          "19368:  if invalidParams.Len() > 0 {",
          "19369:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19391:  if s.TransformEncryption != nil {",
          "19392:   if err := s.TransformEncryption.Validate(); err != nil {",
          "19393:    invalidParams.AddNested(\"TransformEncryption\", err.(request.ErrInvalidParams))",
          "19394:   }",
          "19395:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "19437:  return s",
          "19438: }",
          "19441: func (s *CreateMLTransformInput) SetWorkerType(v string) *CreateMLTransformInput {",
          "19442:  s.WorkerType = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19470: func (s *CreateMLTransformInput) SetTransformEncryption(v *TransformEncryption) *CreateMLTransformInput {",
          "19471:  s.TransformEncryption = v",
          "19472:  return s",
          "19473: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "25430:  Timeout *int64 `min:\"1\" type:\"integer\"`",
          "25434:  TransformId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25470:  TransformEncryption *TransformEncryption `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "25553:  return s",
          "25554: }",
          "25557: func (s *GetMLTransformOutput) SetTransformId(v string) *GetMLTransformOutput {",
          "25558:  s.TransformId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25597: func (s *GetMLTransformOutput) SetTransformEncryption(v *TransformEncryption) *GetMLTransformOutput {",
          "25598:  s.TransformEncryption = v",
          "25599:  return s",
          "25600: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "30391:  Timeout *int64 `min:\"1\" type:\"integer\"`",
          "30395:  TransformId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30442:  TransformEncryption *TransformEncryption `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "30526:  return s",
          "30527: }",
          "30530: func (s *MLTransform) SetTransformId(v string) *MLTransform {",
          "30531:  s.TransformId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30581: func (s *MLTransform) SetTransformEncryption(v *TransformEncryption) *MLTransform {",
          "30582:  s.TransformEncryption = v",
          "30583:  return s",
          "30584: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "30595:  return s.RespMetadata.RequestID",
          "30596: }",
          "30599: type MappingEntry struct {",
          "30600:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30657: type MLUserDataEncryption struct {",
          "30658:  _ struct{} `type:\"structure\"`",
          "30661:  KmsKeyId *string `min:\"1\" type:\"string\"`",
          "30671:  MlUserDataEncryptionMode *string `type:\"string\" required:\"true\" enum:\"MLUserDataEncryptionModeString\"`",
          "30672: }",
          "30675: func (s MLUserDataEncryption) String() string {",
          "30676:  return awsutil.Prettify(s)",
          "30677: }",
          "30680: func (s MLUserDataEncryption) GoString() string {",
          "30681:  return s.String()",
          "30682: }",
          "30685: func (s *MLUserDataEncryption) Validate() error {",
          "30686:  invalidParams := request.ErrInvalidParams{Context: \"MLUserDataEncryption\"}",
          "30687:  if s.KmsKeyId != nil && len(*s.KmsKeyId) < 1 {",
          "30688:   invalidParams.Add(request.NewErrParamMinLen(\"KmsKeyId\", 1))",
          "30689:  }",
          "30690:  if s.MlUserDataEncryptionMode == nil {",
          "30691:   invalidParams.Add(request.NewErrParamRequired(\"MlUserDataEncryptionMode\"))",
          "30692:  }",
          "30694:  if invalidParams.Len() > 0 {",
          "30695:   return invalidParams",
          "30696:  }",
          "30697:  return nil",
          "30698: }",
          "30701: func (s *MLUserDataEncryption) SetKmsKeyId(v string) *MLUserDataEncryption {",
          "30702:  s.KmsKeyId = &v",
          "30703:  return s",
          "30704: }",
          "30707: func (s *MLUserDataEncryption) SetMlUserDataEncryptionMode(v string) *MLUserDataEncryption {",
          "30708:  s.MlUserDataEncryptionMode = &v",
          "30709:  return s",
          "30710: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "35147:  return s",
          "35148: }",
          "35151: type TransformFilterCriteria struct {",
          "35152:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35270: type TransformEncryption struct {",
          "35271:  _ struct{} `type:\"structure\"`",
          "35275:  MlUserDataEncryption *MLUserDataEncryption `type:\"structure\"`",
          "35278:  TaskRunSecurityConfigurationName *string `min:\"1\" type:\"string\"`",
          "35279: }",
          "35282: func (s TransformEncryption) String() string {",
          "35283:  return awsutil.Prettify(s)",
          "35284: }",
          "35287: func (s TransformEncryption) GoString() string {",
          "35288:  return s.String()",
          "35289: }",
          "35292: func (s *TransformEncryption) Validate() error {",
          "35293:  invalidParams := request.ErrInvalidParams{Context: \"TransformEncryption\"}",
          "35294:  if s.TaskRunSecurityConfigurationName != nil && len(*s.TaskRunSecurityConfigurationName) < 1 {",
          "35295:   invalidParams.Add(request.NewErrParamMinLen(\"TaskRunSecurityConfigurationName\", 1))",
          "35296:  }",
          "35297:  if s.MlUserDataEncryption != nil {",
          "35298:   if err := s.MlUserDataEncryption.Validate(); err != nil {",
          "35299:    invalidParams.AddNested(\"MlUserDataEncryption\", err.(request.ErrInvalidParams))",
          "35300:   }",
          "35301:  }",
          "35303:  if invalidParams.Len() > 0 {",
          "35304:   return invalidParams",
          "35305:  }",
          "35306:  return nil",
          "35307: }",
          "35310: func (s *TransformEncryption) SetMlUserDataEncryption(v *MLUserDataEncryption) *TransformEncryption {",
          "35311:  s.MlUserDataEncryption = v",
          "35312:  return s",
          "35313: }",
          "35316: func (s *TransformEncryption) SetTaskRunSecurityConfigurationName(v string) *TransformEncryption {",
          "35317:  s.TaskRunSecurityConfigurationName = &v",
          "35318:  return s",
          "35319: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "38761:  }",
          "38762: }",
          "38764: const (",
          "38766:  NodeTypeCrawler = \"CRAWLER\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38935: const (",
          "38937:  MLUserDataEncryptionModeStringDisabled = \"DISABLED\"",
          "38940:  MLUserDataEncryptionModeStringSseKms = \"SSE-KMS\"",
          "38941: )",
          "38944: func MLUserDataEncryptionModeString_Values() []string {",
          "38945:  return []string{",
          "38946:   MLUserDataEncryptionModeStringDisabled,",
          "38947:   MLUserDataEncryptionModeStringSseKms,",
          "38948:  }",
          "38949: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c5542381f28b8a14a6e0341bcb8e577fdddc3f6",
      "candidate_info": {
        "commit_hash": "4c5542381f28b8a14a6e0341bcb8e577fdddc3f6",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/4c5542381f28b8a14a6e0341bcb8e577fdddc3f6",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/docdb/2014-10-31/api-2.json",
          "models/apis/docdb/2014-10-31/docs-2.json",
          "models/apis/docdb/2014-10-31/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/managedblockchain/2018-09-24/api-2.json",
          "models/apis/managedblockchain/2018-09-24/docs-2.json",
          "models/apis/states/2016-11-23/api-2.json",
          "models/apis/states/2016-11-23/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/docdb/api.go",
          "service/docdb/docdbiface/interface.go",
          "service/ec2/api.go",
          "service/managedblockchain/api.go",
          "service/sfn/api.go",
          "service/sfn/errors.go"
        ],
        "message": "Release v1.34.23 (2020-09-14) ===\n\n### Service Client Updates\n* `service/docdb`: Updates service API, documentation, and paginators\n  * Updated API documentation and added paginators for DescribeCertificates, DescribeDBClusterParameterGroups, DescribeDBClusterParameters, DescribeDBClusterSnapshots and DescribePendingMaintenanceActions\n* `service/ec2`: Updates service API\n  * This release adds support for the T4G instance family to the EC2 ModifyDefaultCreditSpecification and GetDefaultCreditSpecification APIs.\n* `service/managedblockchain`: Updates service API and documentation\n* `service/states`: Updates service API and documentation\n  * This release of the AWS Step Functions SDK introduces support for AWS X-Ray.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/docdb/api.go||service/docdb/api.go",
          "service/docdb/docdbiface/interface.go||service/docdb/docdbiface/interface.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/managedblockchain/api.go||service/managedblockchain/api.go",
          "service/sfn/api.go||service/sfn/api.go",
          "service/sfn/errors.go||service/sfn/errors.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2705:     Protocols: []string{\"https\"},",
          "2706:    },",
          "2707:    Endpoints: endpoints{",
          "2708:     \"ap-east-1\":      endpoint{},",
          "2709:     \"ap-northeast-1\": endpoint{},",
          "2710:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2708:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2714:     \"ca-central-1\":   endpoint{},",
          "2715:     \"eu-central-1\":   endpoint{},",
          "2716:     \"eu-north-1\":     endpoint{},",
          "2717:     \"eu-west-1\":      endpoint{},",
          "2718:     \"eu-west-2\":      endpoint{},",
          "2719:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2718:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8524:    },",
          "8525:    Endpoints: endpoints{",
          "8526:     \"fips-us-gov-west-1\": endpoint{",
          "8528:      CredentialScope: credentialScope{",
          "8529:       Region: \"us-gov-west-1\",",
          "8530:      },",
          "",
          "[Removed Lines]",
          "8527:      Hostname: \"s3-fips-us-gov-west-1.amazonaws.com\",",
          "",
          "[Added Lines]",
          "8529:      Hostname: \"s3-fips.us-gov-west-1.amazonaws.com\",",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.22\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.23\"",
          "",
          "---------------"
        ],
        "service/docdb/api.go||service/docdb/api.go": [
          "File: service/docdb/api.go -> service/docdb/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1395:   Name:       opDescribeCertificates,",
          "1396:   HTTPMethod: \"POST\",",
          "1397:   HTTPPath:   \"/\",",
          "1398:  }",
          "1400:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1395:   Paginator: &request.Paginator{",
          "1396:    InputTokens:     []string{\"Marker\"},",
          "1397:    OutputTokens:    []string{\"Marker\"},",
          "1398:    LimitToken:      \"MaxRecords\",",
          "1399:    TruncationToken: \"\",",
          "1400:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1444:  return out, req.Send()",
          "1445: }",
          "1447: const opDescribeDBClusterParameterGroups = \"DescribeDBClusterParameterGroups\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1467: func (c *DocDB) DescribeCertificatesPages(input *DescribeCertificatesInput, fn func(*DescribeCertificatesOutput, bool) bool) error {",
          "1468:  return c.DescribeCertificatesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1469: }",
          "1478: func (c *DocDB) DescribeCertificatesPagesWithContext(ctx aws.Context, input *DescribeCertificatesInput, fn func(*DescribeCertificatesOutput, bool) bool, opts ...request.Option) error {",
          "1479:  p := request.Pagination{",
          "1480:   NewRequest: func() (*request.Request, error) {",
          "1481:    var inCpy *DescribeCertificatesInput",
          "1482:    if input != nil {",
          "1483:     tmp := *input",
          "1484:     inCpy = &tmp",
          "1485:    }",
          "1486:    req, _ := c.DescribeCertificatesRequest(inCpy)",
          "1487:    req.SetContext(ctx)",
          "1488:    req.ApplyOptions(opts...)",
          "1489:    return req, nil",
          "1490:   },",
          "1491:  }",
          "1493:  for p.Next() {",
          "1494:   if !fn(p.Page().(*DescribeCertificatesOutput), !p.HasNextPage()) {",
          "1495:    break",
          "1496:   }",
          "1497:  }",
          "1499:  return p.Err()",
          "1500: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1475:   Name:       opDescribeDBClusterParameterGroups,",
          "1476:   HTTPMethod: \"POST\",",
          "1477:   HTTPPath:   \"/\",",
          "1478:  }",
          "1480:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1533:   Paginator: &request.Paginator{",
          "1534:    InputTokens:     []string{\"Marker\"},",
          "1535:    OutputTokens:    []string{\"Marker\"},",
          "1536:    LimitToken:      \"MaxRecords\",",
          "1537:    TruncationToken: \"\",",
          "1538:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1525:  return out, req.Send()",
          "1526: }",
          "1528: const opDescribeDBClusterParameters = \"DescribeDBClusterParameters\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1606: func (c *DocDB) DescribeDBClusterParameterGroupsPages(input *DescribeDBClusterParameterGroupsInput, fn func(*DescribeDBClusterParameterGroupsOutput, bool) bool) error {",
          "1607:  return c.DescribeDBClusterParameterGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1608: }",
          "1617: func (c *DocDB) DescribeDBClusterParameterGroupsPagesWithContext(ctx aws.Context, input *DescribeDBClusterParameterGroupsInput, fn func(*DescribeDBClusterParameterGroupsOutput, bool) bool, opts ...request.Option) error {",
          "1618:  p := request.Pagination{",
          "1619:   NewRequest: func() (*request.Request, error) {",
          "1620:    var inCpy *DescribeDBClusterParameterGroupsInput",
          "1621:    if input != nil {",
          "1622:     tmp := *input",
          "1623:     inCpy = &tmp",
          "1624:    }",
          "1625:    req, _ := c.DescribeDBClusterParameterGroupsRequest(inCpy)",
          "1626:    req.SetContext(ctx)",
          "1627:    req.ApplyOptions(opts...)",
          "1628:    return req, nil",
          "1629:   },",
          "1630:  }",
          "1632:  for p.Next() {",
          "1633:   if !fn(p.Page().(*DescribeDBClusterParameterGroupsOutput), !p.HasNextPage()) {",
          "1634:    break",
          "1635:   }",
          "1636:  }",
          "1638:  return p.Err()",
          "1639: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1556:   Name:       opDescribeDBClusterParameters,",
          "1557:   HTTPMethod: \"POST\",",
          "1558:   HTTPPath:   \"/\",",
          "1559:  }",
          "1561:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1672:   Paginator: &request.Paginator{",
          "1673:    InputTokens:     []string{\"Marker\"},",
          "1674:    OutputTokens:    []string{\"Marker\"},",
          "1675:    LimitToken:      \"MaxRecords\",",
          "1676:    TruncationToken: \"\",",
          "1677:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1604:  return out, req.Send()",
          "1605: }",
          "1607: const opDescribeDBClusterSnapshotAttributes = \"DescribeDBClusterSnapshotAttributes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1743: func (c *DocDB) DescribeDBClusterParametersPages(input *DescribeDBClusterParametersInput, fn func(*DescribeDBClusterParametersOutput, bool) bool) error {",
          "1744:  return c.DescribeDBClusterParametersPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1745: }",
          "1754: func (c *DocDB) DescribeDBClusterParametersPagesWithContext(ctx aws.Context, input *DescribeDBClusterParametersInput, fn func(*DescribeDBClusterParametersOutput, bool) bool, opts ...request.Option) error {",
          "1755:  p := request.Pagination{",
          "1756:   NewRequest: func() (*request.Request, error) {",
          "1757:    var inCpy *DescribeDBClusterParametersInput",
          "1758:    if input != nil {",
          "1759:     tmp := *input",
          "1760:     inCpy = &tmp",
          "1761:    }",
          "1762:    req, _ := c.DescribeDBClusterParametersRequest(inCpy)",
          "1763:    req.SetContext(ctx)",
          "1764:    req.ApplyOptions(opts...)",
          "1765:    return req, nil",
          "1766:   },",
          "1767:  }",
          "1769:  for p.Next() {",
          "1770:   if !fn(p.Page().(*DescribeDBClusterParametersOutput), !p.HasNextPage()) {",
          "1771:    break",
          "1772:   }",
          "1773:  }",
          "1775:  return p.Err()",
          "1776: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1721:   Name:       opDescribeDBClusterSnapshots,",
          "1722:   HTTPMethod: \"POST\",",
          "1723:   HTTPPath:   \"/\",",
          "1724:  }",
          "1726:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1895:   Paginator: &request.Paginator{",
          "1896:    InputTokens:     []string{\"Marker\"},",
          "1897:    OutputTokens:    []string{\"Marker\"},",
          "1898:    LimitToken:      \"MaxRecords\",",
          "1899:    TruncationToken: \"\",",
          "1900:   },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1770:  return out, req.Send()",
          "1771: }",
          "1773: const opDescribeDBClusters = \"DescribeDBClusters\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1967: func (c *DocDB) DescribeDBClusterSnapshotsPages(input *DescribeDBClusterSnapshotsInput, fn func(*DescribeDBClusterSnapshotsOutput, bool) bool) error {",
          "1968:  return c.DescribeDBClusterSnapshotsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1969: }",
          "1978: func (c *DocDB) DescribeDBClusterSnapshotsPagesWithContext(ctx aws.Context, input *DescribeDBClusterSnapshotsInput, fn func(*DescribeDBClusterSnapshotsOutput, bool) bool, opts ...request.Option) error {",
          "1979:  p := request.Pagination{",
          "1980:   NewRequest: func() (*request.Request, error) {",
          "1981:    var inCpy *DescribeDBClusterSnapshotsInput",
          "1982:    if input != nil {",
          "1983:     tmp := *input",
          "1984:     inCpy = &tmp",
          "1985:    }",
          "1986:    req, _ := c.DescribeDBClusterSnapshotsRequest(inCpy)",
          "1987:    req.SetContext(ctx)",
          "1988:    req.ApplyOptions(opts...)",
          "1989:    return req, nil",
          "1990:   },",
          "1991:  }",
          "1993:  for p.Next() {",
          "1994:   if !fn(p.Page().(*DescribeDBClusterSnapshotsOutput), !p.HasNextPage()) {",
          "1995:    break",
          "1996:   }",
          "1997:  }",
          "1999:  return p.Err()",
          "2000: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2767:   Name:       opDescribePendingMaintenanceActions,",
          "2768:   HTTPMethod: \"POST\",",
          "2769:   HTTPPath:   \"/\",",
          "2770:  }",
          "2772:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2999:   Paginator: &request.Paginator{",
          "3000:    InputTokens:     []string{\"Marker\"},",
          "3001:    OutputTokens:    []string{\"Marker\"},",
          "3002:    LimitToken:      \"MaxRecords\",",
          "3003:    TruncationToken: \"\",",
          "3004:   },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2816:  return out, req.Send()",
          "2817: }",
          "2819: const opFailoverDBCluster = \"FailoverDBCluster\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3071: func (c *DocDB) DescribePendingMaintenanceActionsPages(input *DescribePendingMaintenanceActionsInput, fn func(*DescribePendingMaintenanceActionsOutput, bool) bool) error {",
          "3072:  return c.DescribePendingMaintenanceActionsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3073: }",
          "3082: func (c *DocDB) DescribePendingMaintenanceActionsPagesWithContext(ctx aws.Context, input *DescribePendingMaintenanceActionsInput, fn func(*DescribePendingMaintenanceActionsOutput, bool) bool, opts ...request.Option) error {",
          "3083:  p := request.Pagination{",
          "3084:   NewRequest: func() (*request.Request, error) {",
          "3085:    var inCpy *DescribePendingMaintenanceActionsInput",
          "3086:    if input != nil {",
          "3087:     tmp := *input",
          "3088:     inCpy = &tmp",
          "3089:    }",
          "3090:    req, _ := c.DescribePendingMaintenanceActionsRequest(inCpy)",
          "3091:    req.SetContext(ctx)",
          "3092:    req.ApplyOptions(opts...)",
          "3093:    return req, nil",
          "3094:   },",
          "3095:  }",
          "3097:  for p.Next() {",
          "3098:   if !fn(p.Page().(*DescribePendingMaintenanceActionsOutput), !p.HasNextPage()) {",
          "3099:    break",
          "3100:   }",
          "3101:  }",
          "3103:  return p.Err()",
          "3104: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4967:  Port *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5258:  PreSignedUrl *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5116:  return s",
          "5117: }",
          "5120: func (s *CreateDBClusterInput) SetPreferredBackupWindow(v string) *CreateDBClusterInput {",
          "5121:  s.PreferredBackupWindow = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5411: func (s *CreateDBClusterInput) SetPreSignedUrl(v string) *CreateDBClusterInput {",
          "5412:  s.PreSignedUrl = &v",
          "5413:  return s",
          "5414: }",
          "",
          "---------------"
        ],
        "service/docdb/docdbiface/interface.go||service/docdb/docdbiface/interface.go": [
          "File: service/docdb/docdbiface/interface.go -> service/docdb/docdbiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  DescribeCertificatesWithContext(aws.Context, *docdb.DescribeCertificatesInput, ...request.Option) (*docdb.DescribeCertificatesOutput, error)",
          "121:  DescribeCertificatesRequest(*docdb.DescribeCertificatesInput) (*request.Request, *docdb.DescribeCertificatesOutput)",
          "123:  DescribeDBClusterParameterGroups(*docdb.DescribeDBClusterParameterGroupsInput) (*docdb.DescribeDBClusterParameterGroupsOutput, error)",
          "124:  DescribeDBClusterParameterGroupsWithContext(aws.Context, *docdb.DescribeDBClusterParameterGroupsInput, ...request.Option) (*docdb.DescribeDBClusterParameterGroupsOutput, error)",
          "125:  DescribeDBClusterParameterGroupsRequest(*docdb.DescribeDBClusterParameterGroupsInput) (*request.Request, *docdb.DescribeDBClusterParameterGroupsOutput)",
          "127:  DescribeDBClusterParameters(*docdb.DescribeDBClusterParametersInput) (*docdb.DescribeDBClusterParametersOutput, error)",
          "128:  DescribeDBClusterParametersWithContext(aws.Context, *docdb.DescribeDBClusterParametersInput, ...request.Option) (*docdb.DescribeDBClusterParametersOutput, error)",
          "129:  DescribeDBClusterParametersRequest(*docdb.DescribeDBClusterParametersInput) (*request.Request, *docdb.DescribeDBClusterParametersOutput)",
          "131:  DescribeDBClusterSnapshotAttributes(*docdb.DescribeDBClusterSnapshotAttributesInput) (*docdb.DescribeDBClusterSnapshotAttributesOutput, error)",
          "132:  DescribeDBClusterSnapshotAttributesWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotAttributesInput, ...request.Option) (*docdb.DescribeDBClusterSnapshotAttributesOutput, error)",
          "133:  DescribeDBClusterSnapshotAttributesRequest(*docdb.DescribeDBClusterSnapshotAttributesInput) (*request.Request, *docdb.DescribeDBClusterSnapshotAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  DescribeCertificatesPages(*docdb.DescribeCertificatesInput, func(*docdb.DescribeCertificatesOutput, bool) bool) error",
          "124:  DescribeCertificatesPagesWithContext(aws.Context, *docdb.DescribeCertificatesInput, func(*docdb.DescribeCertificatesOutput, bool) bool, ...request.Option) error",
          "130:  DescribeDBClusterParameterGroupsPages(*docdb.DescribeDBClusterParameterGroupsInput, func(*docdb.DescribeDBClusterParameterGroupsOutput, bool) bool) error",
          "131:  DescribeDBClusterParameterGroupsPagesWithContext(aws.Context, *docdb.DescribeDBClusterParameterGroupsInput, func(*docdb.DescribeDBClusterParameterGroupsOutput, bool) bool, ...request.Option) error",
          "137:  DescribeDBClusterParametersPages(*docdb.DescribeDBClusterParametersInput, func(*docdb.DescribeDBClusterParametersOutput, bool) bool) error",
          "138:  DescribeDBClusterParametersPagesWithContext(aws.Context, *docdb.DescribeDBClusterParametersInput, func(*docdb.DescribeDBClusterParametersOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:  DescribeDBClusterSnapshotsWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotsInput, ...request.Option) (*docdb.DescribeDBClusterSnapshotsOutput, error)",
          "137:  DescribeDBClusterSnapshotsRequest(*docdb.DescribeDBClusterSnapshotsInput) (*request.Request, *docdb.DescribeDBClusterSnapshotsOutput)",
          "139:  DescribeDBClusters(*docdb.DescribeDBClustersInput) (*docdb.DescribeDBClustersOutput, error)",
          "140:  DescribeDBClustersWithContext(aws.Context, *docdb.DescribeDBClustersInput, ...request.Option) (*docdb.DescribeDBClustersOutput, error)",
          "141:  DescribeDBClustersRequest(*docdb.DescribeDBClustersInput) (*request.Request, *docdb.DescribeDBClustersOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:  DescribeDBClusterSnapshotsPages(*docdb.DescribeDBClusterSnapshotsInput, func(*docdb.DescribeDBClusterSnapshotsOutput, bool) bool) error",
          "149:  DescribeDBClusterSnapshotsPagesWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotsInput, func(*docdb.DescribeDBClusterSnapshotsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "190:  DescribePendingMaintenanceActionsWithContext(aws.Context, *docdb.DescribePendingMaintenanceActionsInput, ...request.Option) (*docdb.DescribePendingMaintenanceActionsOutput, error)",
          "191:  DescribePendingMaintenanceActionsRequest(*docdb.DescribePendingMaintenanceActionsInput) (*request.Request, *docdb.DescribePendingMaintenanceActionsOutput)",
          "193:  FailoverDBCluster(*docdb.FailoverDBClusterInput) (*docdb.FailoverDBClusterOutput, error)",
          "194:  FailoverDBClusterWithContext(aws.Context, *docdb.FailoverDBClusterInput, ...request.Option) (*docdb.FailoverDBClusterOutput, error)",
          "195:  FailoverDBClusterRequest(*docdb.FailoverDBClusterInput) (*request.Request, *docdb.FailoverDBClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:  DescribePendingMaintenanceActionsPages(*docdb.DescribePendingMaintenanceActionsInput, func(*docdb.DescribePendingMaintenanceActionsOutput, bool) bool) error",
          "206:  DescribePendingMaintenanceActionsPagesWithContext(aws.Context, *docdb.DescribePendingMaintenanceActionsInput, func(*docdb.DescribePendingMaintenanceActionsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120070:  UnlimitedSupportedInstanceFamilyT3a = \"t3a\"",
          "120071: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120073:  UnlimitedSupportedInstanceFamilyT4g = \"t4g\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120076:   UnlimitedSupportedInstanceFamilyT2,",
          "120077:   UnlimitedSupportedInstanceFamilyT3,",
          "120078:   UnlimitedSupportedInstanceFamilyT3a,",
          "120079:  }",
          "120080: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120082:   UnlimitedSupportedInstanceFamilyT4g,",
          "",
          "---------------"
        ],
        "service/managedblockchain/api.go||service/managedblockchain/api.go": [
          "File: service/managedblockchain/api.go -> service/managedblockchain/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5324:  NetworkId *string `min:\"1\" type:\"string\"`",
          "5327:  Status *string `type:\"string\" enum:\"NodeStatus\"`",
          "5328: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5327:  StateDB *string `type:\"string\" enum:\"StateDBType\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5385:  return s",
          "5386: }",
          "5389: func (s *Node) SetStatus(v string) *Node {",
          "5390:  s.Status = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5392: func (s *Node) SetStateDB(v string) *Node {",
          "5393:  s.StateDB = &v",
          "5394:  return s",
          "5395: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5410:  LogPublishingConfiguration *NodeLogPublishingConfiguration `type:\"structure\"`",
          "5411: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5424:  StateDB *string `type:\"string\" enum:\"StateDBType\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5454:  return s",
          "5455: }",
          "5459: type NodeFabricAttributes struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: func (s *NodeConfiguration) SetStateDB(v string) *NodeConfiguration {",
          "5473:  s.StateDB = &v",
          "5474:  return s",
          "5475: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6887:  }",
          "6888: }",
          "6890: const (",
          "6892:  ThresholdComparatorGreaterThan = \"GREATER_THAN\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6910: const (",
          "6912:  StateDBTypeLevelDb = \"LevelDB\"",
          "6915:  StateDBTypeCouchDb = \"CouchDB\"",
          "6916: )",
          "6919: func StateDBType_Values() []string {",
          "6920:  return []string{",
          "6921:   StateDBTypeLevelDb,",
          "6922:   StateDBTypeCouchDb,",
          "6923:  }",
          "6924: }",
          "",
          "---------------"
        ],
        "service/sfn/api.go||service/sfn/api.go": [
          "File: service/sfn/api.go -> service/sfn/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2968:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2980:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3056:  return s",
          "3057: }",
          "3060: func (s *CreateStateMachineInput) SetType(v string) *CreateStateMachineInput {",
          "3061:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3072: func (s *CreateStateMachineInput) SetTracingConfiguration(v *TracingConfiguration) *CreateStateMachineInput {",
          "3073:  s.TracingConfiguration = v",
          "3074:  return s",
          "3075: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3414:  StopDate *time.Time `locationName:\"stopDate\" type:\"timestamp\"`",
          "3415: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3435:  TraceHeader *string `locationName:\"traceHeader\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3484:  return s",
          "3485: }",
          "3487: type DescribeStateMachineForExecutionInput struct {",
          "3488:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3509: func (s *DescribeExecutionOutput) SetTraceHeader(v string) *DescribeExecutionOutput {",
          "3510:  s.TraceHeader = &v",
          "3511:  return s",
          "3512: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3555:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3585:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3601:  return s",
          "3602: }",
          "3605: func (s *DescribeStateMachineForExecutionOutput) SetUpdateDate(v time.Time) *DescribeStateMachineForExecutionOutput {",
          "3606:  s.UpdateDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3635: func (s *DescribeStateMachineForExecutionOutput) SetTracingConfiguration(v *TracingConfiguration) *DescribeStateMachineForExecutionOutput {",
          "3636:  s.TracingConfiguration = v",
          "3637:  return s",
          "3638: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3701:  Status *string `locationName:\"status\" type:\"string\" enum:\"StateMachineStatus\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3740:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3758:  return s",
          "3759: }",
          "3762: func (s *DescribeStateMachineOutput) SetType(v string) *DescribeStateMachineOutput {",
          "3763:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3801: func (s *DescribeStateMachineOutput) SetTracingConfiguration(v *TracingConfiguration) *DescribeStateMachineOutput {",
          "3802:  s.TracingConfiguration = v",
          "3803:  return s",
          "3804: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5190:  return s.RespMetadata.RequestID",
          "5191: }",
          "5194: type LambdaFunctionFailedEventDetails struct {",
          "5195:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5240: type InvalidTracingConfiguration struct {",
          "5241:  _            struct{}                  `type:\"structure\"`",
          "5242:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5244:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5245: }",
          "5248: func (s InvalidTracingConfiguration) String() string {",
          "5249:  return awsutil.Prettify(s)",
          "5250: }",
          "5253: func (s InvalidTracingConfiguration) GoString() string {",
          "5254:  return s.String()",
          "5255: }",
          "5257: func newErrorInvalidTracingConfiguration(v protocol.ResponseMetadata) error {",
          "5258:  return &InvalidTracingConfiguration{",
          "5259:   RespMetadata: v,",
          "5260:  }",
          "5261: }",
          "5264: func (s *InvalidTracingConfiguration) Code() string {",
          "5265:  return \"InvalidTracingConfiguration\"",
          "5266: }",
          "5269: func (s *InvalidTracingConfiguration) Message() string {",
          "5270:  if s.Message_ != nil {",
          "5271:   return *s.Message_",
          "5272:  }",
          "5273:  return \"\"",
          "5274: }",
          "5277: func (s *InvalidTracingConfiguration) OrigErr() error {",
          "5278:  return nil",
          "5279: }",
          "5281: func (s *InvalidTracingConfiguration) Error() string {",
          "5282:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5283: }",
          "5286: func (s *InvalidTracingConfiguration) StatusCode() int {",
          "5287:  return s.RespMetadata.StatusCode",
          "5288: }",
          "5291: func (s *InvalidTracingConfiguration) RequestID() string {",
          "5292:  return s.RespMetadata.RequestID",
          "5293: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6300:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "6301: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6406:  TraceHeader *string `locationName:\"traceHeader\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6347:  return s",
          "6348: }",
          "6350: type StartExecutionOutput struct {",
          "6351:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6457: func (s *StartExecutionInput) SetTraceHeader(v string) *StartExecutionInput {",
          "6458:  s.TraceHeader = &v",
          "6459:  return s",
          "6460: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7680:  return s.RespMetadata.RequestID",
          "7681: }",
          "7683: type UntagResourceInput struct {",
          "7684:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7797: type TracingConfiguration struct {",
          "7798:  _ struct{} `type:\"structure\"`",
          "7801:  Enabled *bool `locationName:\"enabled\" type:\"boolean\"`",
          "7802: }",
          "7805: func (s TracingConfiguration) String() string {",
          "7806:  return awsutil.Prettify(s)",
          "7807: }",
          "7810: func (s TracingConfiguration) GoString() string {",
          "7811:  return s.String()",
          "7812: }",
          "7815: func (s *TracingConfiguration) SetEnabled(v bool) *TracingConfiguration {",
          "7816:  s.Enabled = &v",
          "7817:  return s",
          "7818: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "7768:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7769: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7908:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "7829:  return s",
          "7830: }",
          "7832: type UpdateStateMachineOutput struct {",
          "7833:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7973: func (s *UpdateStateMachineInput) SetTracingConfiguration(v *TracingConfiguration) *UpdateStateMachineInput {",
          "7974:  s.TracingConfiguration = v",
          "7975:  return s",
          "7976: }",
          "",
          "---------------"
        ],
        "service/sfn/errors.go||service/sfn/errors.go": [
          "File: service/sfn/errors.go -> service/sfn/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:  ErrCodeInvalidToken = \"InvalidToken\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:  ErrCodeInvalidTracingConfiguration = \"InvalidTracingConfiguration\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:  \"InvalidName\":                  newErrorInvalidName,",
          "165:  \"InvalidOutput\":                newErrorInvalidOutput,",
          "166:  \"InvalidToken\":                 newErrorInvalidToken,",
          "167:  \"MissingRequiredParameter\":     newErrorMissingRequiredParameter,",
          "168:  \"ResourceNotFound\":             newErrorResourceNotFound,",
          "169:  \"StateMachineAlreadyExists\":    newErrorStateMachineAlreadyExists,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:  \"InvalidTracingConfiguration\":  newErrorInvalidTracingConfiguration,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "371f2688b5751dfb53665fd7748229ca09bc8fd6",
      "candidate_info": {
        "commit_hash": "371f2688b5751dfb53665fd7748229ca09bc8fd6",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/371f2688b5751dfb53665fd7748229ca09bc8fd6",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ecr/2015-09-21/api-2.json",
          "models/apis/ecr/2015-09-21/docs-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/api-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/docs-2.json",
          "models/apis/kinesisvideo/2017-09-30/api-2.json",
          "models/apis/kinesisvideo/2017-09-30/docs-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/route53/2013-04-01/paginators-1.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/ecr/api.go",
          "service/ecr/errors.go",
          "service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go",
          "service/route53/api.go",
          "service/route53/errors.go",
          "service/route53/route53iface/interface.go",
          "service/ssm/api.go",
          "service/ssm/doc.go",
          "service/ssm/errors.go"
        ],
        "message": "Release v1.30.16 (2020-04-28) ===\n\n### Service Client Updates\n* `service/ecr`: Updates service API and documentation\n  * This release adds support for multi-architecture images also known as a manifest list\n* `service/kinesis-video-archived-media`: Updates service API and documentation\n* `service/kinesisvideo`: Updates service API and documentation\n  * Add \"GET_CLIP\" to the list of supported API names for the GetDataEndpoint API.\n* `service/medialive`: Updates service API and documentation\n  * AWS Elemental MediaLive now supports several new features: enhanced VQ for H.264 (AVC) output encodes; passthrough of timed metadata and of Nielsen ID3 metadata in fMP4 containers in HLS outputs; the ability to generate a SCTE-35 sparse track without additional segmentation, in Microsoft Smooth outputs;  the ability to select the audio from a TS input by specifying the audio track; and conversion of HDR colorspace in the input to an SDR colorspace in the output.\n* `service/route53`: Updates service API, documentation, and paginators\n  * Amazon Route 53 now supports the Africa (Cape Town) Region (af-south-1) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.\n* `service/ssm`: Updates service API and documentation\n  * SSM State Manager support for adding list association filter for Resource Group and manual mode of managing compliance for an association.\n\n### SDK Bugs\n* `service/s3`: Fix S3 client behavior wrt 200 OK response with empty payload",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ecr/api.go||service/ecr/api.go",
          "service/ecr/errors.go||service/ecr/errors.go",
          "service/kinesisvideo/api.go||service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/route53/errors.go||service/route53/errors.go",
          "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go",
          "service/ssm/api.go||service/ssm/api.go",
          "service/ssm/doc.go||service/ssm/doc.go",
          "service/ssm/errors.go||service/ssm/errors.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  CaCentral1RegionID   = \"ca-central-1\"   // Canada (Central).",
          "28:  EuCentral1RegionID   = \"eu-central-1\"   // EU (Frankfurt).",
          "29:  EuNorth1RegionID     = \"eu-north-1\"     // EU (Stockholm).",
          "30:  EuWest1RegionID      = \"eu-west-1\"      // EU (Ireland).",
          "31:  EuWest2RegionID      = \"eu-west-2\"      // EU (London).",
          "32:  EuWest3RegionID      = \"eu-west-3\"      // EU (Paris).",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:  EuSouth1RegionID     = \"eu-south-1\"     // Europe (Milan).",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:   \"eu-north-1\": region{",
          "139:    Description: \"EU (Stockholm)\",",
          "140:   },",
          "141:   \"eu-west-1\": region{",
          "142:    Description: \"EU (Ireland)\",",
          "143:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:   \"eu-south-1\": region{",
          "143:    Description: \"Europe (Milan)\",",
          "144:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:     \"ca-central-1\":   endpoint{},",
          "187:     \"eu-central-1\":   endpoint{},",
          "188:     \"eu-north-1\":     endpoint{},",
          "189:     \"eu-west-1\":      endpoint{},",
          "190:     \"eu-west-2\":      endpoint{},",
          "191:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:     },",
          "217:     \"eu-central-1\": endpoint{},",
          "218:     \"eu-north-1\":   endpoint{},",
          "219:     \"eu-west-1\":    endpoint{},",
          "220:     \"eu-west-2\":    endpoint{},",
          "221:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "369:       Region: \"eu-north-1\",",
          "370:      },",
          "371:     },",
          "372:     \"eu-west-1\": endpoint{",
          "373:      Hostname: \"api.ecr.eu-west-1.amazonaws.com\",",
          "374:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "378:     \"eu-south-1\": endpoint{",
          "379:      Hostname: \"api.ecr.eu-south-1.amazonaws.com\",",
          "380:      CredentialScope: credentialScope{",
          "381:       Region: \"eu-south-1\",",
          "382:      },",
          "383:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "555:     \"ca-central-1\":   endpoint{},",
          "556:     \"eu-central-1\":   endpoint{},",
          "557:     \"eu-north-1\":     endpoint{},",
          "558:     \"eu-west-1\":      endpoint{},",
          "559:     \"eu-west-2\":      endpoint{},",
          "560:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "581:     \"ca-central-1\":   endpoint{},",
          "582:     \"eu-central-1\":   endpoint{},",
          "583:     \"eu-north-1\":     endpoint{},",
          "584:     \"eu-west-1\":      endpoint{},",
          "585:     \"eu-west-2\":      endpoint{},",
          "586:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "597:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "693:     \"ca-central-1\":   endpoint{},",
          "694:     \"eu-central-1\":   endpoint{},",
          "695:     \"eu-north-1\":     endpoint{},",
          "696:     \"eu-west-1\":      endpoint{},",
          "697:     \"eu-west-2\":      endpoint{},",
          "698:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "710:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "882:     \"ca-central-1\":   endpoint{},",
          "883:     \"eu-central-1\":   endpoint{},",
          "884:     \"eu-north-1\":     endpoint{},",
          "885:     \"eu-west-1\":      endpoint{},",
          "886:     \"eu-west-2\":      endpoint{},",
          "887:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "900:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1001:     \"ca-central-1\":   endpoint{},",
          "1002:     \"eu-central-1\":   endpoint{},",
          "1003:     \"eu-north-1\":     endpoint{},",
          "1004:     \"eu-west-1\":      endpoint{},",
          "1005:     \"eu-west-2\":      endpoint{},",
          "1006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1020:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1125:     \"ca-central-1\":   endpoint{},",
          "1126:     \"eu-central-1\":   endpoint{},",
          "1127:     \"eu-north-1\":     endpoint{},",
          "1128:     \"eu-west-1\":      endpoint{},",
          "1129:     \"eu-west-2\":      endpoint{},",
          "1130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1145:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1556:     \"ca-central-1\":   endpoint{},",
          "1557:     \"eu-central-1\":   endpoint{},",
          "1558:     \"eu-north-1\":     endpoint{},",
          "1559:     \"eu-west-1\":      endpoint{},",
          "1560:     \"eu-west-2\":      endpoint{},",
          "1561:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1577:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1618:     },",
          "1619:     \"eu-central-1\": endpoint{},",
          "1620:     \"eu-north-1\":   endpoint{},",
          "1621:     \"eu-west-1\":    endpoint{},",
          "1622:     \"eu-west-2\":    endpoint{},",
          "1623:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1640:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1786:     },",
          "1787:     \"eu-central-1\": endpoint{},",
          "1788:     \"eu-north-1\":   endpoint{},",
          "1789:     \"eu-west-1\":    endpoint{},",
          "1790:     \"eu-west-2\":    endpoint{},",
          "1791:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1809:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1843:     \"ca-central-1\":   endpoint{},",
          "1844:     \"eu-central-1\":   endpoint{},",
          "1845:     \"eu-north-1\":     endpoint{},",
          "1846:     \"eu-west-1\":      endpoint{},",
          "1847:     \"eu-west-2\":      endpoint{},",
          "1848:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1867:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1908:     \"ca-central-1\":   endpoint{},",
          "1909:     \"eu-central-1\":   endpoint{},",
          "1910:     \"eu-north-1\":     endpoint{},",
          "1911:     \"eu-west-1\":      endpoint{},",
          "1912:     \"eu-west-2\":      endpoint{},",
          "1913:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1956:     \"ca-central-1\":   endpoint{},",
          "1957:     \"eu-central-1\":   endpoint{},",
          "1958:     \"eu-north-1\":     endpoint{},",
          "1959:     \"eu-west-1\":      endpoint{},",
          "1960:     \"eu-west-2\":      endpoint{},",
          "1961:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1982:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1986:     \"ca-central-1\":   endpoint{},",
          "1987:     \"eu-central-1\":   endpoint{},",
          "1988:     \"eu-north-1\":     endpoint{},",
          "1989:     \"eu-west-1\":      endpoint{},",
          "1990:     \"eu-west-2\":      endpoint{},",
          "1991:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2013:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2167:     \"ca-central-1\":   endpoint{},",
          "2168:     \"eu-central-1\":   endpoint{},",
          "2169:     \"eu-north-1\":     endpoint{},",
          "2170:     \"eu-west-1\":      endpoint{},",
          "2171:     \"eu-west-2\":      endpoint{},",
          "2172:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2195:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2220:      SSLCommonName: \"{service}.{region}.{dnsSuffix}\",",
          "2221:     },",
          "2222:     \"eu-north-1\": endpoint{},",
          "2223:     \"eu-west-1\":  endpoint{},",
          "2224:     \"eu-west-2\":  endpoint{},",
          "2225:     \"eu-west-3\":  endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2249:     \"eu-south-1\": endpoint{},",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2310:     \"ca-central-1\":   endpoint{},",
          "2311:     \"eu-central-1\":   endpoint{},",
          "2312:     \"eu-north-1\":     endpoint{},",
          "2313:     \"eu-west-1\":      endpoint{},",
          "2314:     \"eu-west-2\":      endpoint{},",
          "2315:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2340:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2340:     \"ca-central-1\":   endpoint{},",
          "2341:     \"eu-central-1\":   endpoint{},",
          "2342:     \"eu-north-1\":     endpoint{},",
          "2343:     \"eu-west-1\":      endpoint{},",
          "2344:     \"eu-west-2\":      endpoint{},",
          "2345:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2371:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2617:     \"ca-central-1\":   endpoint{},",
          "2618:     \"eu-central-1\":   endpoint{},",
          "2619:     \"eu-north-1\":     endpoint{},",
          "2620:     \"eu-west-1\":      endpoint{},",
          "2621:     \"eu-west-2\":      endpoint{},",
          "2622:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2649:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3058:     \"ca-central-1\":   endpoint{},",
          "3059:     \"eu-central-1\":   endpoint{},",
          "3060:     \"eu-north-1\":     endpoint{},",
          "3061:     \"eu-west-1\":      endpoint{},",
          "3062:     \"eu-west-2\":      endpoint{},",
          "3063:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3091:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3148:     \"ca-central-1\":   endpoint{},",
          "3149:     \"eu-central-1\":   endpoint{},",
          "3150:     \"eu-north-1\":     endpoint{},",
          "3151:     \"eu-west-1\":      endpoint{},",
          "3152:     \"eu-west-2\":      endpoint{},",
          "3153:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3182:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3190:     \"ca-central-1\":   endpoint{},",
          "3191:     \"eu-central-1\":   endpoint{},",
          "3192:     \"eu-north-1\":     endpoint{},",
          "3193:     \"eu-west-1\":      endpoint{},",
          "3194:     \"eu-west-2\":      endpoint{},",
          "3195:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3225:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3303:     \"ca-central-1\":   endpoint{},",
          "3304:     \"eu-central-1\":   endpoint{},",
          "3305:     \"eu-north-1\":     endpoint{},",
          "3306:     \"eu-west-1\":      endpoint{},",
          "3307:     \"eu-west-2\":      endpoint{},",
          "3308:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3339:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3447:     \"ca-central-1\":   endpoint{},",
          "3448:     \"eu-central-1\":   endpoint{},",
          "3449:     \"eu-north-1\":     endpoint{},",
          "3450:     \"eu-west-1\":      endpoint{},",
          "3451:     \"eu-west-2\":      endpoint{},",
          "3452:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3484:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3503:     \"ca-central-1\":   endpoint{},",
          "3504:     \"eu-central-1\":   endpoint{},",
          "3505:     \"eu-north-1\":     endpoint{},",
          "3506:     \"eu-west-1\":      endpoint{},",
          "3507:     \"eu-west-2\":      endpoint{},",
          "3508:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3541:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4028:     \"ca-central-1\":   endpoint{},",
          "4029:     \"eu-central-1\":   endpoint{},",
          "4030:     \"eu-north-1\":     endpoint{},",
          "4031:     \"eu-west-1\":      endpoint{},",
          "4032:     \"eu-west-2\":      endpoint{},",
          "4033:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4067:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4054:     \"ca-central-1\":   endpoint{},",
          "4055:     \"eu-central-1\":   endpoint{},",
          "4056:     \"eu-north-1\":     endpoint{},",
          "4057:     \"eu-west-1\":      endpoint{},",
          "4058:     \"eu-west-2\":      endpoint{},",
          "4059:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4094:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4125:     \"ca-central-1\":   endpoint{},",
          "4126:     \"eu-central-1\":   endpoint{},",
          "4127:     \"eu-north-1\":     endpoint{},",
          "4128:     \"eu-west-1\":      endpoint{},",
          "4129:     \"eu-west-2\":      endpoint{},",
          "4130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4166:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4316:     \"ca-central-1\": endpoint{},",
          "4317:     \"eu-central-1\": endpoint{},",
          "4318:     \"eu-north-1\":   endpoint{},",
          "4319:     \"eu-west-1\": endpoint{",
          "4320:      Hostname:          \"s3.eu-west-1.amazonaws.com\",",
          "4321:      SignatureVersions: []string{\"s3\", \"s3v4\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4358:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4790:     \"ca-central-1\":   endpoint{},",
          "4791:     \"eu-central-1\":   endpoint{},",
          "4792:     \"eu-north-1\":     endpoint{},",
          "4793:     \"eu-west-1\":      endpoint{},",
          "4794:     \"eu-west-2\":      endpoint{},",
          "4795:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4833:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4950:     \"ca-central-1\":   endpoint{},",
          "4951:     \"eu-central-1\":   endpoint{},",
          "4952:     \"eu-north-1\":     endpoint{},",
          "4953:     \"eu-west-1\":      endpoint{},",
          "4954:     \"eu-west-2\":      endpoint{},",
          "4955:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4994:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "5001:     \"ca-central-1\":   endpoint{},",
          "5002:     \"eu-central-1\":   endpoint{},",
          "5003:     \"eu-north-1\":     endpoint{},",
          "5004:     \"eu-west-1\":      endpoint{},",
          "5005:     \"eu-west-2\":      endpoint{},",
          "5006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5046:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "5051:     \"ca-central-1\":   endpoint{},",
          "5052:     \"eu-central-1\":   endpoint{},",
          "5053:     \"eu-north-1\":     endpoint{},",
          "5054:     \"eu-west-1\":      endpoint{},",
          "5055:     \"eu-west-2\":      endpoint{},",
          "5056:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5097:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "5123:     \"ca-central-1\":   endpoint{},",
          "5124:     \"eu-central-1\":   endpoint{},",
          "5125:     \"eu-north-1\":     endpoint{},",
          "5126:     \"eu-west-1\":      endpoint{},",
          "5127:     \"eu-west-2\":      endpoint{},",
          "5128:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5170:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "5265:     \"ca-central-1\": endpoint{},",
          "5266:     \"eu-central-1\": endpoint{},",
          "5267:     \"eu-north-1\":   endpoint{},",
          "5268:     \"eu-west-1\":    endpoint{},",
          "5269:     \"eu-west-2\":    endpoint{},",
          "5270:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5313:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "5325:     \"ca-central-1\":   endpoint{},",
          "5326:     \"eu-central-1\":   endpoint{},",
          "5327:     \"eu-north-1\":     endpoint{},",
          "5328:     \"eu-west-1\":      endpoint{},",
          "5329:     \"eu-west-2\":      endpoint{},",
          "5330:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5374:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "5373:     \"ca-central-1\":   endpoint{},",
          "5374:     \"eu-central-1\":   endpoint{},",
          "5375:     \"eu-north-1\":     endpoint{},",
          "5376:     \"eu-west-1\":      endpoint{},",
          "5377:     \"eu-west-2\":      endpoint{},",
          "5378:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5423:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5807:     \"ca-central-1\":   endpoint{},",
          "5808:     \"eu-central-1\":   endpoint{},",
          "5809:     \"eu-north-1\":     endpoint{},",
          "5810:     \"eu-west-1\":      endpoint{},",
          "5811:     \"eu-west-2\":      endpoint{},",
          "5812:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5858:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.15\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.16\"",
          "",
          "---------------"
        ],
        "service/ecr/api.go||service/ecr/api.go": [
          "File: service/ecr/api.go -> service/ecr/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7342:  return s",
          "7343: }",
          "7346: type Repository struct {",
          "7347:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7359: type ReferencedImagesNotFoundException struct {",
          "7360:  _            struct{}                  `type:\"structure\"`",
          "7361:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7363:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7364: }",
          "7367: func (s ReferencedImagesNotFoundException) String() string {",
          "7368:  return awsutil.Prettify(s)",
          "7369: }",
          "7372: func (s ReferencedImagesNotFoundException) GoString() string {",
          "7373:  return s.String()",
          "7374: }",
          "7376: func newErrorReferencedImagesNotFoundException(v protocol.ResponseMetadata) error {",
          "7377:  return &ReferencedImagesNotFoundException{",
          "7378:   RespMetadata: v,",
          "7379:  }",
          "7380: }",
          "7383: func (s *ReferencedImagesNotFoundException) Code() string {",
          "7384:  return \"ReferencedImagesNotFoundException\"",
          "7385: }",
          "7388: func (s *ReferencedImagesNotFoundException) Message() string {",
          "7389:  if s.Message_ != nil {",
          "7390:   return *s.Message_",
          "7391:  }",
          "7392:  return \"\"",
          "7393: }",
          "7396: func (s *ReferencedImagesNotFoundException) OrigErr() error {",
          "7397:  return nil",
          "7398: }",
          "7400: func (s *ReferencedImagesNotFoundException) Error() string {",
          "7401:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7402: }",
          "7405: func (s *ReferencedImagesNotFoundException) StatusCode() int {",
          "7406:  return s.RespMetadata.StatusCode",
          "7407: }",
          "7410: func (s *ReferencedImagesNotFoundException) RequestID() string {",
          "7411:  return s.RespMetadata.RequestID",
          "7412: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8287:  return s.RespMetadata.RequestID",
          "8288: }",
          "8290: type UntagResourceInput struct {",
          "8291:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8360: type UnsupportedImageTypeException struct {",
          "8361:  _            struct{}                  `type:\"structure\"`",
          "8362:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8364:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8365: }",
          "8368: func (s UnsupportedImageTypeException) String() string {",
          "8369:  return awsutil.Prettify(s)",
          "8370: }",
          "8373: func (s UnsupportedImageTypeException) GoString() string {",
          "8374:  return s.String()",
          "8375: }",
          "8377: func newErrorUnsupportedImageTypeException(v protocol.ResponseMetadata) error {",
          "8378:  return &UnsupportedImageTypeException{",
          "8379:   RespMetadata: v,",
          "8380:  }",
          "8381: }",
          "8384: func (s *UnsupportedImageTypeException) Code() string {",
          "8385:  return \"UnsupportedImageTypeException\"",
          "8386: }",
          "8389: func (s *UnsupportedImageTypeException) Message() string {",
          "8390:  if s.Message_ != nil {",
          "8391:   return *s.Message_",
          "8392:  }",
          "8393:  return \"\"",
          "8394: }",
          "8397: func (s *UnsupportedImageTypeException) OrigErr() error {",
          "8398:  return nil",
          "8399: }",
          "8401: func (s *UnsupportedImageTypeException) Error() string {",
          "8402:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8403: }",
          "8406: func (s *UnsupportedImageTypeException) StatusCode() int {",
          "8407:  return s.RespMetadata.StatusCode",
          "8408: }",
          "8411: func (s *UnsupportedImageTypeException) RequestID() string {",
          "8412:  return s.RespMetadata.RequestID",
          "8413: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8614:  ImageFailureCodeMissingDigestAndTag = \"MissingDigestAndTag\"",
          "8615: )",
          "8617: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8742:  ImageFailureCodeImageReferencedByManifestList = \"ImageReferencedByManifestList\"",
          "",
          "---------------"
        ],
        "service/ecr/errors.go||service/ecr/errors.go": [
          "File: service/ecr/errors.go -> service/ecr/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  ErrCodeLimitExceededException = \"LimitExceededException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:  ErrCodeReferencedImagesNotFoundException = \"ReferencedImagesNotFoundException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:  ErrCodeTooManyTagsException = \"TooManyTagsException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:  ErrCodeUnsupportedImageTypeException = \"UnsupportedImageTypeException\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189:  \"LifecyclePolicyPreviewInProgressException\": newErrorLifecyclePolicyPreviewInProgressException,",
          "190:  \"LifecyclePolicyPreviewNotFoundException\":   newErrorLifecyclePolicyPreviewNotFoundException,",
          "191:  \"LimitExceededException\":                    newErrorLimitExceededException,",
          "192:  \"RepositoryAlreadyExistsException\":          newErrorRepositoryAlreadyExistsException,",
          "193:  \"RepositoryNotEmptyException\":               newErrorRepositoryNotEmptyException,",
          "194:  \"RepositoryNotFoundException\":               newErrorRepositoryNotFoundException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:  \"ReferencedImagesNotFoundException\":         newErrorReferencedImagesNotFoundException,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "196:  \"ScanNotFoundException\":                     newErrorScanNotFoundException,",
          "197:  \"ServerException\":                           newErrorServerException,",
          "198:  \"TooManyTagsException\":                      newErrorTooManyTagsException,",
          "199:  \"UploadNotFoundException\":                   newErrorUploadNotFoundException,",
          "200: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:  \"UnsupportedImageTypeException\":             newErrorUnsupportedImageTypeException,",
          "",
          "---------------"
        ],
        "service/kinesisvideo/api.go||service/kinesisvideo/api.go": [
          "File: service/kinesisvideo/api.go -> service/kinesisvideo/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4925:  APINameGetDashStreamingSessionUrl = \"GET_DASH_STREAMING_SESSION_URL\"",
          "4926: )",
          "4928: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4941:  APINameGetClip = \"GET_CLIP\"",
          "",
          "---------------"
        ],
        "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go": [
          "File: service/kinesisvideo/errors.go -> service/kinesisvideo/errors.go"
        ],
        "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go": [
          "File: service/kinesisvideoarchivedmedia/api.go -> service/kinesisvideoarchivedmedia/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "14: )",
          "16: const opGetDASHStreamingSessionURL = \"GetDASHStreamingSessionURL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: const opGetClip = \"GetClip\"",
          "42: func (c *KinesisVideoArchivedMedia) GetClipRequest(input *GetClipInput) (req *request.Request, output *GetClipOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opGetClip,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/getClip\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &GetClipInput{}",
          "51:  }",
          "53:  output = &GetClipOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "148: func (c *KinesisVideoArchivedMedia) GetClip(input *GetClipInput) (*GetClipOutput, error) {",
          "149:  req, out := c.GetClipRequest(input)",
          "150:  return out, req.Send()",
          "151: }",
          "162: func (c *KinesisVideoArchivedMedia) GetClipWithContext(ctx aws.Context, input *GetClipInput, opts ...request.Option) (*GetClipOutput, error) {",
          "163:  req, out := c.GetClipRequest(input)",
          "164:  req.SetContext(ctx)",
          "165:  req.ApplyOptions(opts...)",
          "166:  return out, req.Send()",
          "167: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "884:  return s.RespMetadata.RequestID",
          "885: }",
          "889: type DASHFragmentSelector struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048: type ClipFragmentSelector struct {",
          "1049:  _ struct{} `type:\"structure\"`",
          "1054:  FragmentSelectorType *string `type:\"string\" required:\"true\" enum:\"ClipFragmentSelectorType\"`",
          "1059:  TimestampRange *ClipTimestampRange `type:\"structure\" required:\"true\"`",
          "1060: }",
          "1063: func (s ClipFragmentSelector) String() string {",
          "1064:  return awsutil.Prettify(s)",
          "1065: }",
          "1068: func (s ClipFragmentSelector) GoString() string {",
          "1069:  return s.String()",
          "1070: }",
          "1073: func (s *ClipFragmentSelector) Validate() error {",
          "1074:  invalidParams := request.ErrInvalidParams{Context: \"ClipFragmentSelector\"}",
          "1075:  if s.FragmentSelectorType == nil {",
          "1076:   invalidParams.Add(request.NewErrParamRequired(\"FragmentSelectorType\"))",
          "1077:  }",
          "1078:  if s.TimestampRange == nil {",
          "1079:   invalidParams.Add(request.NewErrParamRequired(\"TimestampRange\"))",
          "1080:  }",
          "1081:  if s.TimestampRange != nil {",
          "1082:   if err := s.TimestampRange.Validate(); err != nil {",
          "1083:    invalidParams.AddNested(\"TimestampRange\", err.(request.ErrInvalidParams))",
          "1084:   }",
          "1085:  }",
          "1087:  if invalidParams.Len() > 0 {",
          "1088:   return invalidParams",
          "1089:  }",
          "1090:  return nil",
          "1091: }",
          "1094: func (s *ClipFragmentSelector) SetFragmentSelectorType(v string) *ClipFragmentSelector {",
          "1095:  s.FragmentSelectorType = &v",
          "1096:  return s",
          "1097: }",
          "1100: func (s *ClipFragmentSelector) SetTimestampRange(v *ClipTimestampRange) *ClipFragmentSelector {",
          "1101:  s.TimestampRange = v",
          "1102:  return s",
          "1103: }",
          "1110: type ClipTimestampRange struct {",
          "1111:  _ struct{} `type:\"structure\"`",
          "1124:  EndTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1133:  StartTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1134: }",
          "1137: func (s ClipTimestampRange) String() string {",
          "1138:  return awsutil.Prettify(s)",
          "1139: }",
          "1142: func (s ClipTimestampRange) GoString() string {",
          "1143:  return s.String()",
          "1144: }",
          "1147: func (s *ClipTimestampRange) Validate() error {",
          "1148:  invalidParams := request.ErrInvalidParams{Context: \"ClipTimestampRange\"}",
          "1149:  if s.EndTimestamp == nil {",
          "1150:   invalidParams.Add(request.NewErrParamRequired(\"EndTimestamp\"))",
          "1151:  }",
          "1152:  if s.StartTimestamp == nil {",
          "1153:   invalidParams.Add(request.NewErrParamRequired(\"StartTimestamp\"))",
          "1154:  }",
          "1156:  if invalidParams.Len() > 0 {",
          "1157:   return invalidParams",
          "1158:  }",
          "1159:  return nil",
          "1160: }",
          "1163: func (s *ClipTimestampRange) SetEndTimestamp(v time.Time) *ClipTimestampRange {",
          "1164:  s.EndTimestamp = &v",
          "1165:  return s",
          "1166: }",
          "1169: func (s *ClipTimestampRange) SetStartTimestamp(v time.Time) *ClipTimestampRange {",
          "1170:  s.StartTimestamp = &v",
          "1171:  return s",
          "1172: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1139:  return s",
          "1140: }",
          "1142: type GetDASHStreamingSessionURLInput struct {",
          "1143:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1429: type GetClipInput struct {",
          "1430:  _ struct{} `type:\"structure\"`",
          "1435:  ClipFragmentSelector *ClipFragmentSelector `type:\"structure\" required:\"true\"`",
          "1441:  StreamARN *string `min:\"1\" type:\"string\"`",
          "1446:  StreamName *string `min:\"1\" type:\"string\"`",
          "1447: }",
          "1450: func (s GetClipInput) String() string {",
          "1451:  return awsutil.Prettify(s)",
          "1452: }",
          "1455: func (s GetClipInput) GoString() string {",
          "1456:  return s.String()",
          "1457: }",
          "1460: func (s *GetClipInput) Validate() error {",
          "1461:  invalidParams := request.ErrInvalidParams{Context: \"GetClipInput\"}",
          "1462:  if s.ClipFragmentSelector == nil {",
          "1463:   invalidParams.Add(request.NewErrParamRequired(\"ClipFragmentSelector\"))",
          "1464:  }",
          "1465:  if s.StreamARN != nil && len(*s.StreamARN) < 1 {",
          "1466:   invalidParams.Add(request.NewErrParamMinLen(\"StreamARN\", 1))",
          "1467:  }",
          "1468:  if s.StreamName != nil && len(*s.StreamName) < 1 {",
          "1469:   invalidParams.Add(request.NewErrParamMinLen(\"StreamName\", 1))",
          "1470:  }",
          "1471:  if s.ClipFragmentSelector != nil {",
          "1472:   if err := s.ClipFragmentSelector.Validate(); err != nil {",
          "1473:    invalidParams.AddNested(\"ClipFragmentSelector\", err.(request.ErrInvalidParams))",
          "1474:   }",
          "1475:  }",
          "1477:  if invalidParams.Len() > 0 {",
          "1478:   return invalidParams",
          "1479:  }",
          "1480:  return nil",
          "1481: }",
          "1484: func (s *GetClipInput) SetClipFragmentSelector(v *ClipFragmentSelector) *GetClipInput {",
          "1485:  s.ClipFragmentSelector = v",
          "1486:  return s",
          "1487: }",
          "1490: func (s *GetClipInput) SetStreamARN(v string) *GetClipInput {",
          "1491:  s.StreamARN = &v",
          "1492:  return s",
          "1493: }",
          "1496: func (s *GetClipInput) SetStreamName(v string) *GetClipInput {",
          "1497:  s.StreamName = &v",
          "1498:  return s",
          "1499: }",
          "1501: type GetClipOutput struct {",
          "1502:  _ struct{} `type:\"structure\" payload:\"Payload\"`",
          "1505:  ContentType *string `location:\"header\" locationName:\"Content-Type\" min:\"1\" type:\"string\"`",
          "1511:  Payload io.ReadCloser `type:\"blob\"`",
          "1512: }",
          "1515: func (s GetClipOutput) String() string {",
          "1516:  return awsutil.Prettify(s)",
          "1517: }",
          "1520: func (s GetClipOutput) GoString() string {",
          "1521:  return s.String()",
          "1522: }",
          "1525: func (s *GetClipOutput) SetContentType(v string) *GetClipOutput {",
          "1526:  s.ContentType = &v",
          "1527:  return s",
          "1528: }",
          "1531: func (s *GetClipOutput) SetPayload(v io.ReadCloser) *GetClipOutput {",
          "1532:  s.Payload = v",
          "1533:  return s",
          "1534: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1985:  return s.RespMetadata.RequestID",
          "1986: }",
          "1988: type ListFragmentsInput struct {",
          "1989:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2384: type InvalidMediaFrameException struct {",
          "2385:  _            struct{}                  `type:\"structure\"`",
          "2386:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2388:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2389: }",
          "2392: func (s InvalidMediaFrameException) String() string {",
          "2393:  return awsutil.Prettify(s)",
          "2394: }",
          "2397: func (s InvalidMediaFrameException) GoString() string {",
          "2398:  return s.String()",
          "2399: }",
          "2401: func newErrorInvalidMediaFrameException(v protocol.ResponseMetadata) error {",
          "2402:  return &InvalidMediaFrameException{",
          "2403:   RespMetadata: v,",
          "2404:  }",
          "2405: }",
          "2408: func (s *InvalidMediaFrameException) Code() string {",
          "2409:  return \"InvalidMediaFrameException\"",
          "2410: }",
          "2413: func (s *InvalidMediaFrameException) Message() string {",
          "2414:  if s.Message_ != nil {",
          "2415:   return *s.Message_",
          "2416:  }",
          "2417:  return \"\"",
          "2418: }",
          "2421: func (s *InvalidMediaFrameException) OrigErr() error {",
          "2422:  return nil",
          "2423: }",
          "2425: func (s *InvalidMediaFrameException) Error() string {",
          "2426:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2427: }",
          "2430: func (s *InvalidMediaFrameException) StatusCode() int {",
          "2431:  return s.RespMetadata.StatusCode",
          "2432: }",
          "2435: func (s *InvalidMediaFrameException) RequestID() string {",
          "2436:  return s.RespMetadata.RequestID",
          "2437: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2448:  return s.RespMetadata.RequestID",
          "2449: }",
          "2451: const (",
          "2453:  ContainerFormatFragmentedMp4 = \"FRAGMENTED_MP4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2902: const (",
          "2904:  ClipFragmentSelectorTypeProducerTimestamp = \"PRODUCER_TIMESTAMP\"",
          "2907:  ClipFragmentSelectorTypeServerTimestamp = \"SERVER_TIMESTAMP\"",
          "2908: )",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go": [
          "File: service/kinesisvideoarchivedmedia/errors.go -> service/kinesisvideoarchivedmedia/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  ErrCodeInvalidCodecPrivateDataException = \"InvalidCodecPrivateDataException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:  ErrCodeInvalidMediaFrameException = \"InvalidMediaFrameException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:  \"ClientLimitExceededException\":        newErrorClientLimitExceededException,",
          "77:  \"InvalidArgumentException\":            newErrorInvalidArgumentException,",
          "78:  \"InvalidCodecPrivateDataException\":    newErrorInvalidCodecPrivateDataException,",
          "79:  \"MissingCodecPrivateDataException\":    newErrorMissingCodecPrivateDataException,",
          "80:  \"NoDataRetentionException\":            newErrorNoDataRetentionException,",
          "81:  \"NotAuthorizedException\":              newErrorNotAuthorizedException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:  \"InvalidMediaFrameException\":          newErrorInvalidMediaFrameException,",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go": [
          "File: service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go -> service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: type KinesisVideoArchivedMediaAPI interface {",
          "63:  GetDASHStreamingSessionURL(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "64:  GetDASHStreamingSessionURLWithContext(aws.Context, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput, ...request.Option) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "65:  GetDASHStreamingSessionURLRequest(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*request.Request, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:  GetClip(*kinesisvideoarchivedmedia.GetClipInput) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "64:  GetClipWithContext(aws.Context, *kinesisvideoarchivedmedia.GetClipInput, ...request.Option) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "65:  GetClipRequest(*kinesisvideoarchivedmedia.GetClipInput) (*request.Request, *kinesisvideoarchivedmedia.GetClipOutput)",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5330:  AudioPidSelection *AudioPidSelection `locationName:\"audioPidSelection\" type:\"structure\"`",
          "5331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5333:  AudioTrackSelection *AudioTrackSelection `locationName:\"audioTrackSelection\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5353:    invalidParams.AddNested(\"AudioPidSelection\", err.(request.ErrInvalidParams))",
          "5354:   }",
          "5355:  }",
          "5357:  if invalidParams.Len() > 0 {",
          "5358:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5359:  if s.AudioTrackSelection != nil {",
          "5360:   if err := s.AudioTrackSelection.Validate(); err != nil {",
          "5361:    invalidParams.AddNested(\"AudioTrackSelection\", err.(request.ErrInvalidParams))",
          "5362:   }",
          "5363:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5372:  return s",
          "5373: }",
          "5376: type AutomaticInputFailoverSettings struct {",
          "5377:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5384: func (s *AudioSelectorSettings) SetAudioTrackSelection(v *AudioTrackSelection) *AudioSelectorSettings {",
          "5385:  s.AudioTrackSelection = v",
          "5386:  return s",
          "5387: }",
          "5390: type AudioTrack struct {",
          "5391:  _ struct{} `type:\"structure\"`",
          "5396:  Track *int64 `locationName:\"track\" min:\"1\" type:\"integer\" required:\"true\"`",
          "5397: }",
          "5400: func (s AudioTrack) String() string {",
          "5401:  return awsutil.Prettify(s)",
          "5402: }",
          "5405: func (s AudioTrack) GoString() string {",
          "5406:  return s.String()",
          "5407: }",
          "5410: func (s *AudioTrack) Validate() error {",
          "5411:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrack\"}",
          "5412:  if s.Track == nil {",
          "5413:   invalidParams.Add(request.NewErrParamRequired(\"Track\"))",
          "5414:  }",
          "5415:  if s.Track != nil && *s.Track < 1 {",
          "5416:   invalidParams.Add(request.NewErrParamMinValue(\"Track\", 1))",
          "5417:  }",
          "5419:  if invalidParams.Len() > 0 {",
          "5420:   return invalidParams",
          "5421:  }",
          "5422:  return nil",
          "5423: }",
          "5426: func (s *AudioTrack) SetTrack(v int64) *AudioTrack {",
          "5427:  s.Track = &v",
          "5428:  return s",
          "5429: }",
          "5432: type AudioTrackSelection struct {",
          "5433:  _ struct{} `type:\"structure\"`",
          "5438:  Tracks []*AudioTrack `locationName:\"tracks\" type:\"list\" required:\"true\"`",
          "5439: }",
          "5442: func (s AudioTrackSelection) String() string {",
          "5443:  return awsutil.Prettify(s)",
          "5444: }",
          "5447: func (s AudioTrackSelection) GoString() string {",
          "5448:  return s.String()",
          "5449: }",
          "5452: func (s *AudioTrackSelection) Validate() error {",
          "5453:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrackSelection\"}",
          "5454:  if s.Tracks == nil {",
          "5455:   invalidParams.Add(request.NewErrParamRequired(\"Tracks\"))",
          "5456:  }",
          "5457:  if s.Tracks != nil {",
          "5458:   for i, v := range s.Tracks {",
          "5459:    if v == nil {",
          "5460:     continue",
          "5461:    }",
          "5462:    if err := v.Validate(); err != nil {",
          "5463:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tracks\", i), err.(request.ErrInvalidParams))",
          "5464:    }",
          "5465:   }",
          "5466:  }",
          "5468:  if invalidParams.Len() > 0 {",
          "5469:   return invalidParams",
          "5470:  }",
          "5471:  return nil",
          "5472: }",
          "5475: func (s *AudioTrackSelection) SetTracks(v []*AudioTrack) *AudioTrackSelection {",
          "5476:  s.Tracks = v",
          "5477:  return s",
          "5478: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10755:  AudioRenditionSets *string `locationName:\"audioRenditionSets\" type:\"string\"`",
          "10756: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10865:  NielsenId3Behavior *string `locationName:\"nielsenId3Behavior\" type:\"string\" enum:\"Fmp4NielsenId3Behavior\"`",
          "10868:  TimedMetadataBehavior *string `locationName:\"timedMetadataBehavior\" type:\"string\" enum:\"Fmp4TimedMetadataBehavior\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10771:  return s",
          "10772: }",
          "10775: type FollowModeScheduleActionStartSettings struct {",
          "10776:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10888: func (s *Fmp4HlsSettings) SetNielsenId3Behavior(v string) *Fmp4HlsSettings {",
          "10889:  s.NielsenId3Behavior = &v",
          "10890:  return s",
          "10891: }",
          "10894: func (s *Fmp4HlsSettings) SetTimedMetadataBehavior(v string) *Fmp4HlsSettings {",
          "10895:  s.TimedMetadataBehavior = &v",
          "10896:  return s",
          "10897: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11199:  return s",
          "11200: }",
          "11203: type H264Settings struct {",
          "11204:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11328: type H264FilterSettings struct {",
          "11329:  _ struct{} `type:\"structure\"`",
          "11332:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "11333: }",
          "11336: func (s H264FilterSettings) String() string {",
          "11337:  return awsutil.Prettify(s)",
          "11338: }",
          "11341: func (s H264FilterSettings) GoString() string {",
          "11342:  return s.String()",
          "11343: }",
          "11346: func (s *H264FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *H264FilterSettings {",
          "11347:  s.TemporalFilterSettings = v",
          "11348:  return s",
          "11349: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11235:  EntropyEncoding *string `locationName:\"entropyEncoding\" type:\"string\" enum:\"H264EntropyEncoding\"`",
          "11239:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11387:  FilterSettings *H264FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11328:  Profile *string `locationName:\"profile\" type:\"string\" enum:\"H264Profile\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11485:  QualityLevel *string `locationName:\"qualityLevel\" type:\"string\" enum:\"H264QualityLevel\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11478:  return s",
          "11479: }",
          "11482: func (s *H264Settings) SetFixedAfd(v string) *H264Settings {",
          "11483:  s.FixedAfd = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11639: func (s *H264Settings) SetFilterSettings(v *H264FilterSettings) *H264Settings {",
          "11640:  s.FilterSettings = v",
          "11641:  return s",
          "11642: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11598:  return s",
          "11599: }",
          "11602: func (s *H264Settings) SetQvbrQualityLevel(v int64) *H264Settings {",
          "11603:  s.QvbrQualityLevel = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11765: func (s *H264Settings) SetQualityLevel(v string) *H264Settings {",
          "11766:  s.QualityLevel = &v",
          "11767:  return s",
          "11768: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "20833:  return s",
          "20834: }",
          "20837: type TimecodeConfig struct {",
          "20838:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21008: type TemporalFilterSettings struct {",
          "21009:  _ struct{} `type:\"structure\"`",
          "21014:  PostFilterSharpening *string `locationName:\"postFilterSharpening\" type:\"string\" enum:\"TemporalFilterPostFilterSharpening\"`",
          "21017:  Strength *string `locationName:\"strength\" type:\"string\" enum:\"TemporalFilterStrength\"`",
          "21018: }",
          "21021: func (s TemporalFilterSettings) String() string {",
          "21022:  return awsutil.Prettify(s)",
          "21023: }",
          "21026: func (s TemporalFilterSettings) GoString() string {",
          "21027:  return s.String()",
          "21028: }",
          "21031: func (s *TemporalFilterSettings) SetPostFilterSharpening(v string) *TemporalFilterSettings {",
          "21032:  s.PostFilterSharpening = &v",
          "21033:  return s",
          "21034: }",
          "21037: func (s *TemporalFilterSettings) SetStrength(v string) *TemporalFilterSettings {",
          "21038:  s.Strength = &v",
          "21039:  return s",
          "21040: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "22986:  FixedAfdAfd1111 = \"AFD_1111\"",
          "22987: )",
          "22990: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23196: const (",
          "23198:  Fmp4NielsenId3BehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23201:  Fmp4NielsenId3BehaviorPassthrough = \"PASSTHROUGH\"",
          "23202: )",
          "23205: const (",
          "23207:  Fmp4TimedMetadataBehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23210:  Fmp4TimedMetadataBehaviorPassthrough = \"PASSTHROUGH\"",
          "23211: )",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "23220:  H264ProfileMain = \"MAIN\"",
          "23221: )",
          "23224: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23448: const (",
          "23450:  H264QualityLevelEnhancedQuality = \"ENHANCED_QUALITY\"",
          "23453:  H264QualityLevelStandardQuality = \"STANDARD_QUALITY\"",
          "23454: )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "24567:  SmoothGroupSparseTrackTypeScte35 = \"SCTE_35\"",
          "24568: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24803:  SmoothGroupSparseTrackTypeScte35WithoutSegmentation = \"SCTE_35_WITHOUT_SEGMENTATION\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "24585:  SmoothGroupTimestampOffsetModeUseEventStartDate = \"USE_EVENT_START_DATE\"",
          "24586: )",
          "24589: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24825: const (",
          "24827:  TemporalFilterPostFilterSharpeningAuto = \"AUTO\"",
          "24830:  TemporalFilterPostFilterSharpeningDisabled = \"DISABLED\"",
          "24833:  TemporalFilterPostFilterSharpeningEnabled = \"ENABLED\"",
          "24834: )",
          "24837: const (",
          "24839:  TemporalFilterStrengthAuto = \"AUTO\"",
          "24842:  TemporalFilterStrengthStrength1 = \"STRENGTH_1\"",
          "24845:  TemporalFilterStrengthStrength10 = \"STRENGTH_10\"",
          "24848:  TemporalFilterStrengthStrength11 = \"STRENGTH_11\"",
          "24851:  TemporalFilterStrengthStrength12 = \"STRENGTH_12\"",
          "24854:  TemporalFilterStrengthStrength13 = \"STRENGTH_13\"",
          "24857:  TemporalFilterStrengthStrength14 = \"STRENGTH_14\"",
          "24860:  TemporalFilterStrengthStrength15 = \"STRENGTH_15\"",
          "24863:  TemporalFilterStrengthStrength16 = \"STRENGTH_16\"",
          "24866:  TemporalFilterStrengthStrength2 = \"STRENGTH_2\"",
          "24869:  TemporalFilterStrengthStrength3 = \"STRENGTH_3\"",
          "24872:  TemporalFilterStrengthStrength4 = \"STRENGTH_4\"",
          "24875:  TemporalFilterStrengthStrength5 = \"STRENGTH_5\"",
          "24878:  TemporalFilterStrengthStrength6 = \"STRENGTH_6\"",
          "24881:  TemporalFilterStrengthStrength7 = \"STRENGTH_7\"",
          "24884:  TemporalFilterStrengthStrength8 = \"STRENGTH_8\"",
          "24887:  TemporalFilterStrengthStrength9 = \"STRENGTH_9\"",
          "24888: )",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4325:   Name:       opListQueryLoggingConfigs,",
          "4326:   HTTPMethod: \"GET\",",
          "4327:   HTTPPath:   \"/2013-04-01/queryloggingconfig\",",
          "4328:  }",
          "4330:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4331:   Paginator: &request.Paginator{",
          "4332:    InputTokens:     []string{\"NextToken\"},",
          "4333:    OutputTokens:    []string{\"NextToken\"},",
          "4334:    LimitToken:      \"MaxResults\",",
          "4335:    TruncationToken: \"\",",
          "4336:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4387:  return out, req.Send()",
          "4388: }",
          "4390: const opListResourceRecordSets = \"ListResourceRecordSets\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4416: func (c *Route53) ListQueryLoggingConfigsPages(input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool) error {",
          "4417:  return c.ListQueryLoggingConfigsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "4418: }",
          "4427: func (c *Route53) ListQueryLoggingConfigsPagesWithContext(ctx aws.Context, input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool, opts ...request.Option) error {",
          "4428:  p := request.Pagination{",
          "4429:   NewRequest: func() (*request.Request, error) {",
          "4430:    var inCpy *ListQueryLoggingConfigsInput",
          "4431:    if input != nil {",
          "4432:     tmp := *input",
          "4433:     inCpy = &tmp",
          "4434:    }",
          "4435:    req, _ := c.ListQueryLoggingConfigsRequest(inCpy)",
          "4436:    req.SetContext(ctx)",
          "4437:    req.ApplyOptions(opts...)",
          "4438:    return req, nil",
          "4439:   },",
          "4440:  }",
          "4442:  for p.Next() {",
          "4443:   if !fn(p.Page().(*ListQueryLoggingConfigsOutput), !p.HasNextPage()) {",
          "4444:    break",
          "4445:   }",
          "4446:  }",
          "4448:  return p.Err()",
          "4449: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15131:  CloudWatchRegionCnNorth1 = \"cn-north-1\"",
          "15132: )",
          "15134: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15195:  CloudWatchRegionAfSouth1 = \"af-south-1\"",
          "15198:  CloudWatchRegionUsGovWest1 = \"us-gov-west-1\"",
          "15201:  CloudWatchRegionUsGovEast1 = \"us-gov-east-1\"",
          "15204:  CloudWatchRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15207:  CloudWatchRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "15338:  ResourceRecordSetRegionApSouth1 = \"ap-south-1\"",
          "15339: )",
          "15341: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15417:  ResourceRecordSetRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "15400:  VPCRegionMeSouth1 = \"me-south-1\"",
          "15403:  VPCRegionApSoutheast1 = \"ap-southeast-1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15482:  VPCRegionUsGovWest1 = \"us-gov-west-1\"",
          "15485:  VPCRegionUsGovEast1 = \"us-gov-east-1\"",
          "15488:  VPCRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15491:  VPCRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "15430:  VPCRegionCnNorth1 = \"cn-north-1\"",
          "15431: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15524:  VPCRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------"
        ],
        "service/route53/errors.go||service/route53/errors.go": [
          "File: service/route53/errors.go -> service/route53/errors.go"
        ],
        "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go": [
          "File: service/route53/route53iface/interface.go -> service/route53/route53iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:  ListQueryLoggingConfigsWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error)",
          "231:  ListQueryLoggingConfigsRequest(*route53.ListQueryLoggingConfigsInput) (*request.Request, *route53.ListQueryLoggingConfigsOutput)",
          "233:  ListResourceRecordSets(*route53.ListResourceRecordSetsInput) (*route53.ListResourceRecordSetsOutput, error)",
          "234:  ListResourceRecordSetsWithContext(aws.Context, *route53.ListResourceRecordSetsInput, ...request.Option) (*route53.ListResourceRecordSetsOutput, error)",
          "235:  ListResourceRecordSetsRequest(*route53.ListResourceRecordSetsInput) (*request.Request, *route53.ListResourceRecordSetsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:  ListQueryLoggingConfigsPages(*route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool) error",
          "234:  ListQueryLoggingConfigsPagesWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12681:  Status *AssociationStatus `type:\"structure\"`",
          "12684:  Targets []*Target `type:\"list\"`",
          "12685: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12703:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12808:  return s",
          "12809: }",
          "12812: func (s *AssociationDescription) SetTargets(v []*Target) *AssociationDescription {",
          "12813:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12834: func (s *AssociationDescription) SetSyncCompliance(v string) *AssociationDescription {",
          "12835:  s.SyncCompliance = &v",
          "12836:  return s",
          "12837: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "13536:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "13540:  Targets []*Target `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13578:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "13622:  return s",
          "13623: }",
          "13626: func (s *AssociationVersionInfo) SetTargets(v []*Target) *AssociationVersionInfo {",
          "13627:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13668: func (s *AssociationVersionInfo) SetSyncCompliance(v string) *AssociationVersionInfo {",
          "13669:  s.SyncCompliance = &v",
          "13670:  return s",
          "13671: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16368:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16371:  Targets []*Target `type:\"list\"`",
          "16372: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16427:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16487:  return s",
          "16488: }",
          "16491: func (s *CreateAssociationBatchRequestEntry) SetTargets(v []*Target) *CreateAssociationBatchRequestEntry {",
          "16492:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16550: func (s *CreateAssociationBatchRequestEntry) SetSyncCompliance(v string) *CreateAssociationBatchRequestEntry {",
          "16551:  s.SyncCompliance = &v",
          "16552:  return s",
          "16553: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16578:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16582:  Targets []*Target `type:\"list\"`",
          "16583: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16657:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "16698:  return s",
          "16699: }",
          "16702: func (s *CreateAssociationInput) SetTargets(v []*Target) *CreateAssociationInput {",
          "16703:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16784: func (s *CreateAssociationInput) SetSyncCompliance(v string) *CreateAssociationInput {",
          "16785:  s.SyncCompliance = &v",
          "16786:  return s",
          "16787: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "37312:  ResourceType *string `min:\"1\" type:\"string\" required:\"true\"`",
          "37313: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37445:  UploadType *string `type:\"string\" enum:\"ComplianceUploadType\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "37407:  return s",
          "37408: }",
          "37410: type PutComplianceItemsOutput struct {",
          "37411:  _ struct{} `type:\"structure\"`",
          "37412: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37544: func (s *PutComplianceItemsInput) SetUploadType(v string) *PutComplianceItemsInput {",
          "37545:  s.UploadType = &v",
          "37546:  return s",
          "37547: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "42749:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "42752:  Targets []*Target `type:\"list\"`",
          "42753: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42901:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "42874:  return s",
          "42875: }",
          "42878: func (s *UpdateAssociationInput) SetTargets(v []*Target) *UpdateAssociationInput {",
          "42879:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43030: func (s *UpdateAssociationInput) SetSyncCompliance(v string) *UpdateAssociationInput {",
          "43031:  s.SyncCompliance = &v",
          "43032:  return s",
          "43033: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "44899:  AssociationFilterKeyAssociationName = \"AssociationName\"",
          "44900: )",
          "44902: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45077:  AssociationFilterKeyResourceGroupName = \"ResourceGroupName\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "44921:  AssociationStatusNameFailed = \"Failed\"",
          "44922: )",
          "44924: const (",
          "44926:  AttachmentHashTypeSha256 = \"Sha256\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45102: const (",
          "45104:  AssociationSyncComplianceAuto = \"AUTO\"",
          "45107:  AssociationSyncComplianceManual = \"MANUAL\"",
          "45108: )",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "45139:  ComplianceStatusNonCompliant = \"NON_COMPLIANT\"",
          "45140: )",
          "45142: const (",
          "45144:  ConnectionStatusConnected = \"Connected\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45328: const (",
          "45330:  ComplianceUploadTypeComplete = \"COMPLETE\"",
          "45333:  ComplianceUploadTypePartial = \"PARTIAL\"",
          "45334: )",
          "",
          "---------------"
        ],
        "service/ssm/doc.go||service/ssm/doc.go": [
          "File: service/ssm/doc.go -> service/ssm/doc.go"
        ],
        "service/ssm/errors.go||service/ssm/errors.go": [
          "File: service/ssm/errors.go -> service/ssm/errors.go"
        ]
      }
    }
  ]
}