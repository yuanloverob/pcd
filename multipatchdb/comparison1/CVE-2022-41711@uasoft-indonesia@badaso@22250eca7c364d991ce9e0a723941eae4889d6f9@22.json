{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "976c438279f2b955333216382c1aa89d2b5c85ec",
      "candidate_info": {
        "commit_hash": "976c438279f2b955333216382c1aa89d2b5c85ec",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/976c438279f2b955333216382c1aa89d2b5c85ec",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "update unit test",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "408:         $table_names = [];",
          "409:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "410:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "412:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "413:                     $table->id();",
          "",
          "[Removed Lines]",
          "411:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "411:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:         $table_names = [];",
          "440:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "441:             $table_name = \"{$this->TABLE_TEST_EMPTY_VALUE_PREFIX}{$index}\";",
          "443:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "444:                     $table->id();",
          "",
          "[Removed Lines]",
          "442:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "442:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "639:                 }",
          "640:                 PHP;",
          "641:                 $model_path = app_path(\"Models/$model_file_name\");",
          "643:                     file_put_contents($model_path, $model_body);",
          "644:                 }",
          "",
          "[Removed Lines]",
          "642:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "642:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "660:             $controller_data = [];",
          "661:             if (rand(0, 1)) {",
          "664:                 $controller_file_name = \"{$controller_name}.php\";",
          "665:                 $controller_body = <<<PHP",
          "666:                 <?php",
          "",
          "[Removed Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "669:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "670:                 PHP;",
          "671:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "673:                     file_put_contents($controller_path, $controller_body);",
          "674:                 }",
          "",
          "[Removed Lines]",
          "672:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "672:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1112:             if ($table['table'] == 'table_relation') {",
          "1113:                 for ($i = 0; $i < 2; $i++) {",
          "1114:                     $field[$i] = [",
          "1117:                         'fieldType' => 'bigint',",
          "1118:                         'fieldLength' => null,",
          "1119:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "1115:                         'id' => $name_table[$i].'_id',",
          "1116:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "[Added Lines]",
          "1115:                         'id' => $name_table[$i] . '_id',",
          "1116:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1126:                     array_push($table['rows'], $field[$i]);",
          "1127:                 }",
          "1128:                 $table['relations'] = [",
          "1131:                         'target_table' => $name_table[1],",
          "1132:                         'target_field' => 'id',",
          "1133:                         'on_delete' => 'cascade',",
          "1134:                         'on_update' => 'restrict',",
          "1135:                     ],",
          "1138:                         'target_table' => $name_table[0],",
          "1139:                         'target_field' => 'id',",
          "1140:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "1129:                     $name_table[1].'_id' => [",
          "1130:                         'source_field' => $name_table[1].'_id',",
          "1136:                     $name_table[0].'_id' => [",
          "1137:                         'source_field' => $name_table[0].'_id',",
          "",
          "[Added Lines]",
          "1129:                     $name_table[1] . '_id' => [",
          "1130:                         'source_field' => $name_table[1] . '_id',",
          "1136:                     $name_table[0] . '_id' => [",
          "1137:                         'source_field' => $name_table[0] . '_id',",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1148:         foreach ($name_table as $key => $crud_table) {",
          "1149:             $crud_table = [",
          "1150:                 'name' => $crud_table,",
          "1152:                 'displayNameSingular' => $crud_table,",
          "1153:                 'displayNamePlural' => $crud_table,",
          "1154:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "1151:                 'slug' => 'table-'.$key + 1,",
          "",
          "[Added Lines]",
          "1151:                 'slug' => 'table-' . $key + 1,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1275:         foreach ($name_table as $key => $table) {",
          "1276:             if ($table == 'table-2') {",
          "1277:                 for ($i = 1; $i < 4; $i++) {",
          "1279:                         'data' => [",
          "1281:                         ],",
          "1282:                     ]);",
          "1283:                 }",
          "1284:             } else {",
          "1286:                 $response->assertSuccessful();",
          "1287:             }",
          "1288:         }",
          "1292:         $response->assertSuccessful();",
          "1293:         $data_browse = $response['data']['data'][0];",
          "1297:             'data' => [",
          "1298:                 'id' => $data_browse['id'],",
          "1299:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1280:                             'name' => 'option '.$i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "[Added Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1280:                             'name' => 'option ' . $i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1303:         $response->assertSuccessful();",
          "1307:             'slug' => $table,",
          "1308:             'data' => [",
          "1309:                 [",
          "",
          "[Removed Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "[Added Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1653:                 }",
          "1654:                 PHP;",
          "1655:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1657:                     file_put_contents($model_path, $model_body);",
          "1658:                 }",
          "",
          "[Removed Lines]",
          "1656:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1656:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1674:             $controller_data = [];",
          "1675:             if (rand(0, 1)) {",
          "1678:                 $controller_file_name = \"{$controller_name}.php\";",
          "1679:                 $controller_body = <<<PHP",
          "1680:                 <?php",
          "",
          "[Removed Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1683:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1684:                 PHP;",
          "1685:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1687:                     file_put_contents($controller_path, $controller_body);",
          "1688:                 }",
          "",
          "[Removed Lines]",
          "1686:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1686:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1966:                 }",
          "1967:                 PHP;",
          "1968:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1970:                     file_put_contents($model_path, $model_body);",
          "1971:                 }",
          "",
          "[Removed Lines]",
          "1969:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1969:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1987:             $controller_data = [];",
          "1988:             if (rand(0, 1)) {",
          "1991:                 $controller_file_name = \"{$controller_name}.php\";",
          "1992:                 $controller_body = <<<PHP",
          "1993:                 <?php",
          "",
          "[Removed Lines]",
          "1990:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1990:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1996:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1997:                 PHP;",
          "1998:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "2000:                     file_put_contents($controller_path, $controller_body);",
          "2001:                 }",
          "",
          "[Removed Lines]",
          "1999:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1999:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2016:             $request_body = [",
          "2017:                 'name' =>  $table_name,",
          "2018:                 'slug' =>  $table_name,",
          "2021:                 'icon' =>  'add',",
          "2022:                 'modelName' =>  $model,",
          "2023:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "2019:                 'displayNameSingular' =>  $table_label.'(update)',",
          "2020:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "[Added Lines]",
          "2019:                 'displayNameSingular' =>  $table_label . '(update)',",
          "2020:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2087:     public function testDeleteCrudManagement()",
          "2088:     {",
          "2089:         $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_TABLES);",
          "2114:             }",
          "2115:         }",
          "2118:     }",
          "2120:     public function testRollbackMigration()",
          "",
          "[Removed Lines]",
          "2091:         $data_types = DataType::whereIn('name', $tables)->get();",
          "2092:         foreach ($data_types as $key => $data_type) {",
          "2093:             $table_name = $data_type['name'];",
          "2094:             $name = ucwords(str_replace('_', '', $table_name));",
          "2096:             $id = $data_type->id;",
          "2097:             $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/crud/delete'), [",
          "2098:                 'id' => $id,",
          "2099:             ]);",
          "2100:             $response->assertSuccessful();",
          "2103:             $controller_name = \"{$name}Controller.php\";",
          "2104:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "2105:             if (file_exists($controller_path)) {",
          "2106:                 unlink($controller_path);",
          "2107:             }",
          "2110:             $model_name = \"{$name}.php\";",
          "2111:             $model_path = app_path('Models/'.$model_name);",
          "2112:             if (file_exists($model_path)) {",
          "2113:                 unlink($model_path);",
          "2116:         $data_types = DataType::whereIn('name', $tables)->get();",
          "2117:         $this->assertEmpty($data_types);",
          "",
          "[Added Lines]",
          "2090:         $empty_tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_EMPTY_TABLES);",
          "2091:         $collect_tables = [$tables, $empty_tables];",
          "2092:         foreach ($collect_tables as $key => $item_tables) {",
          "2093:             $data_types = DataType::whereIn('name', $item_tables)->get();",
          "2094:             foreach ($data_types as $key => $data_type) {",
          "2095:                 $table_name = $data_type['name'];",
          "2096:                 $name = ucwords(str_replace('_', '', $table_name));",
          "2098:                 $id = $data_type->id;",
          "2099:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/crud/delete'), [",
          "2100:                     'id' => $id,",
          "2101:                 ]);",
          "2102:                 $response->assertSuccessful();",
          "2105:                 $controller_name = \"{$name}Controller.php\";",
          "2106:                 $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "2107:                 if (file_exists($controller_path)) {",
          "2108:                     unlink($controller_path);",
          "2109:                 }",
          "2112:                 $model_name = \"{$name}.php\";",
          "2113:                 $model_path = app_path('Models/' . $model_name);",
          "2114:                 if (file_exists($model_path)) {",
          "2115:                     unlink($model_path);",
          "2116:                 }",
          "2118:             $data_types = DataType::whereIn('name', $item_tables)->get();",
          "2119:             $this->assertEmpty($data_types);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb4dff34e43a1fdff227f1dfc9e4efc485a93c35",
      "candidate_info": {
        "commit_hash": "bb4dff34e43a1fdff227f1dfc9e4efc485a93c35",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/bb4dff34e43a1fdff227f1dfc9e4efc485a93c35",
        "files": [
          "src/ContentManager/FileGenerator.php",
          "src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js",
          "src/stubs/migration.stub"
        ],
        "message": "update migration database management",
        "before_after_code_files": [
          "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php",
          "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/stubs/migration.stub||src/stubs/migration.stub"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php": [
          "File: src/ContentManager/FileGenerator.php -> src/ContentManager/FileGenerator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:         $schema_up .= $this->migration_parser->getMigrationSchemaUp($table_name, $rows, $prefix);",
          "308:         if (! empty($relations)) {",
          "309:             $schema_up .= PHP_EOL.PHP_EOL.$this->migration_parser->getMigrationRelationshipSchemaUp($table_name, $relations);",
          "311:         }",
          "312:         $schema_down .= $this->migration_parser->getMigrationSchemaDown($table_name, $rows, $prefix);",
          "",
          "[Removed Lines]",
          "310:             $schema_down .= $this->migration_parser->getMigrationRelationshipSchemaDown($table_name, $relations).PHP_EOL.PHP_EOL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js": [
          "File: src/resources/js/lang/modules/en.js -> src/resources/js/lang/modules/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1043:         crud:",
          "1044:           \"Make sure the table has not been generated with CRUD Management if you want to edit or drop it.\",",
          "1045:         notAllowed: \"You're not allowed to edit.\",",
          "1047:       },",
          "1048:       error: {",
          "1049:         fieldName: \"Field name is required.\",",
          "",
          "[Removed Lines]",
          "1046:         fieldAttUnsigned: \"Attribute field relation must 'Unsigned'.\",",
          "",
          "[Added Lines]",
          "1046:         fieldAttUnsigned: \"Foreign key constraint is incorrectly formed.\",",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1040:         crud:",
          "1041:           \"Pastikan tabel belum dibuat dengan CRUD Management jika ingin mengedit atau menghapus tabel.\",",
          "1044:       },",
          "1045:       error: {",
          "1046:         fieldName: \"Field name dibutuhkan.\",",
          "",
          "[Removed Lines]",
          "1043:         fieldAttUnsigned: \"Atribut field relasi harus 'Unsigned'\",",
          "",
          "[Added Lines]",
          "1043:         fieldAttUnsigned: \"Batasan kunci asing salah dibentuk.\",",
          "",
          "---------------"
        ],
        "src/stubs/migration.stub||src/stubs/migration.stub": [
          "File: src/stubs/migration.stub -> src/stubs/migration.stub",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:             {{schema_up}}",
          "20:         } catch (PDOException $ex) {",
          "21:             throw $ex;",
          "22:         }",
          "23:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:             $this->down();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a67c2eb1e40f2f41a491bfb36d99702b9ef7e58",
      "candidate_info": {
        "commit_hash": "6a67c2eb1e40f2f41a491bfb36d99702b9ef7e58",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/6a67c2eb1e40f2f41a491bfb36d99702b9ef7e58",
        "files": [
          "src/resources/js/pages/crud-generated/add.vue"
        ],
        "message": "fix swtich component",
        "before_after_code_files": [
          "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue": [
          "File: src/resources/js/pages/crud-generated/add.vue -> src/resources/js/pages/crud-generated/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "416:       const dataRows = {};",
          "417:       for (const row of this.dataType.dataRows) {",
          "419:           dataRows[row.field] = row.value;",
          "420:         }",
          "421:       }",
          "",
          "[Removed Lines]",
          "418:         if (row && row.value) {",
          "",
          "[Added Lines]",
          "418:         if (row && row.value || row.type == 'switch' ||  row.type == 'slider') {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "480:           } else if (data.value == undefined && data.type == \"slider\") {",
          "481:             data.value = 0;",
          "482:           } else if (data.value == undefined && data.type == \"switch\") {",
          "484:           } else if (data.value == undefined && data.type == \"tags\") {",
          "485:             data.value = \"\";",
          "486:           } else if (data.value == undefined) {",
          "",
          "[Removed Lines]",
          "483:             data.value = false;",
          "",
          "[Added Lines]",
          "483:             data.value = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cf3749d6d3a83dc7c948cf24b3be2acc6d499a5",
      "candidate_info": {
        "commit_hash": "3cf3749d6d3a83dc7c948cf24b3be2acc6d499a5",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/3cf3749d6d3a83dc7c948cf24b3be2acc6d499a5",
        "files": [
          "src/resources/js/pages/crud-generated/edit.vue"
        ],
        "message": "fix",
        "before_after_code_files": [
          "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue": [
          "File: src/resources/js/pages/crud-generated/edit.vue -> src/resources/js/pages/crud-generated/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "486:             data.add = data.add == 1;",
          "487:             data.edit = data.edit == 1;",
          "488:             data.read = data.read == 1;",
          "489:             if (",
          "490:               data.type == \"upload_image_multiple\" ||",
          "491:               data.type == \"upload_file_multiple\" ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "489:             data.details = JSON.parse(data.details);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:               if (val) {",
          "498:                 data.value = val.split(\",\");",
          "499:               }",
          "500:             } else if (data.type == \"slider\") {",
          "501:               data.value = parseInt(",
          "502:                 this.record[this.$caseConvert.stringSnakeToCamel(data.field)]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "502:             } else if (data.type == \"switch\") {",
          "503:               data.value = this.record[",
          "504:                 this.$caseConvert.stringSnakeToCamel(data.field)",
          "505:               ]",
          "506:                 ? this.record[this.$caseConvert.stringSnakeToCamel(data.field)]",
          "507:                 : false;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "535:               Object.entries(record).filter(function (item, key) {",
          "536:                 return (data.value[key] = item[1][destinationTableId]);",
          "537:               });",
          "544:             } else {",
          "547:             }",
          "548:           } catch (error) {}",
          "549:           return data;",
          "",
          "[Removed Lines]",
          "538:             } else if (data.type == \"switch\") {",
          "539:               data.value = this.record[",
          "540:                 this.$caseConvert.stringSnakeToCamel(data.field)",
          "541:               ]",
          "542:                 ? this.record[this.$caseConvert.stringSnakeToCamel(data.field)]",
          "543:                 : false;",
          "545:                 data.value =",
          "546:                   this.record[this.$caseConvert.stringSnakeToCamel(data.field)];",
          "",
          "[Added Lines]",
          "547:               data.value =",
          "548:                 this.record[this.$caseConvert.stringSnakeToCamel(data.field)];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e430522cb9d75debd31e1a17c34572364dc835a",
      "candidate_info": {
        "commit_hash": "4e430522cb9d75debd31e1a17c34572364dc835a",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/4e430522cb9d75debd31e1a17c34572364dc835a",
        "files": [
          "src/ContentManager/ContentGenerator.php",
          "src/Models/MenuItem.php"
        ],
        "message": "fix generate menu insert statements",
        "before_after_code_files": [
          "src/ContentManager/ContentGenerator.php||src/ContentManager/ContentGenerator.php",
          "src/Models/MenuItem.php||src/Models/MenuItem.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ContentManager/ContentGenerator.php||src/ContentManager/ContentGenerator.php": [
          "File: src/ContentManager/ContentGenerator.php -> src/ContentManager/ContentGenerator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     const MENU_INSERT_STATEMENT = <<<'TXT'",
          "24:     $menu = Badaso::model('Menu')->where('key', config('badaso.default_menu'))->firstOrFail();",
          "26:                 $menu_item = Badaso::model('MenuItem')",
          "27:                     ->where('menu_id', $menu->id)",
          "28:                     ->where('url', '%s')",
          "29:                     ->first();",
          "33:                 if (!is_null($menu_item)) {",
          "34:                     $menu_item->fill([",
          "35:                         'title' => '%s',",
          "",
          "[Removed Lines]",
          "31:                 $order = Badaso::model('MenuItem')->highestOrderMenuItem();",
          "",
          "[Added Lines]",
          "31:                 $order = $menu_item->highestOrderMenuItem();",
          "",
          "---------------"
        ],
        "src/Models/MenuItem.php||src/Models/MenuItem.php": [
          "File: src/Models/MenuItem.php -> src/Models/MenuItem.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     {",
          "38:         $order = 1;",
          "46:             $order = intval($item->order) + 1;",
          "47:         }",
          "",
          "[Removed Lines]",
          "40:         $item = $this->where('parent_id', '=', $parent)",
          "41:             ->where('menu_id', $this->menu_id)",
          "42:             ->orderBy('order', 'DESC')",
          "43:             ->first();",
          "45:         if (! is_null($item)) {",
          "",
          "[Added Lines]",
          "40:         $item = self::where('menu_id', $this->menu_id);",
          "42:         if ($parent != null) {",
          "43:             $item = $item->where('parent_id', $parent);",
          "44:         }",
          "46:         $item = $item->orderBy('order', 'DESC')",
          "47:         ->first();",
          "49:         if (!is_null($item)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}