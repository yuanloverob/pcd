{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "53aca9d50229fdcfb0f19b75eccfe42bb393b5b9",
      "candidate_info": {
        "commit_hash": "53aca9d50229fdcfb0f19b75eccfe42bb393b5b9",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/53aca9d50229fdcfb0f19b75eccfe42bb393b5b9",
        "files": [
          "package.json",
          "packages/table/src/table.js",
          "styles/table.scss"
        ],
        "message": "releases 3.8.10",
        "before_after_code_files": [
          "packages/table/src/table.js||packages/table/src/table.js",
          "styles/table.scss||styles/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "863:       if (this.mouseOpts.area && this.mouseOpts.selected) {",
          "864:         warnLog('vxe.error.errConflicts', ['mouse-config.area', 'mouse-config.selected'])",
          "865:       }",
          "869:       if (this.treeConfig && this.mouseOpts.area) {",
          "870:         errLog('vxe.error.noTree', ['mouse-config.area'])",
          "871:       }",
          "",
          "[Removed Lines]",
          "866:       if (this.mouseOpts.area && this.checkboxOpts.range) {",
          "867:         warnLog('vxe.error.errConflicts', ['mouse-config.area', 'checkbox-config.range'])",
          "868:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1057:       hasTip,",
          "1058:       columnOpts,",
          "1059:       rowOpts,",
          "1060:       loadingOpts,",
          "1061:       editRules",
          "1062:     } = this",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1060:       checkboxOpts,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1072:         'cell--area': mouseConfig && mouseOpts.area,",
          "1073:         'row--highlight': rowOpts.isHover || highlightHoverRow,",
          "1074:         'column--highlight': columnOpts.isHover || highlightHoverColumn,",
          "1075:         'is--header': showHeader,",
          "1076:         'is--footer': showFooter,",
          "1077:         'is--group': isGroup,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1076:         'checkbox--range': checkboxOpts.range,",
          "",
          "---------------"
        ],
        "styles/table.scss||styles/table.scss": [
          "File: styles/table.scss -> styles/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "611:       }",
          "612:     }",
          "613:   }",
          "614:   &.cell--area {",
          "616:       user-select: none;",
          "617:     }",
          "618:   }",
          "",
          "[Removed Lines]",
          "615:     .vxe-body--row {",
          "",
          "[Added Lines]",
          "614:   &.checkbox--range,",
          "615:   &.cell--selected {",
          "616:     .vxe-body--column {",
          "617:       user-select: none;",
          "618:     }",
          "619:   }",
          "621:     .vxe-table--body-wrapper,",
          "622:     .vxe-body--column {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d43cba4691bc6e2149f763360e7e565734ae407f",
      "candidate_info": {
        "commit_hash": "d43cba4691bc6e2149f763360e7e565734ae407f",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/d43cba4691bc6e2149f763360e7e565734ae407f",
        "files": [
          "packages/edit/src/mixin.js",
          "packages/table/src/methods.js"
        ],
        "message": "\u4f18\u5316\u7f16\u8f91\u903b\u8f91",
        "before_after_code_files": [
          "packages/edit/src/mixin.js||packages/edit/src/mixin.js",
          "packages/table/src/methods.js||packages/table/src/methods.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/edit/src/mixin.js||packages/edit/src/mixin.js": [
          "File: packages/edit/src/mixin.js -> packages/edit/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "422:     handleActived (params, evnt) {",
          "423:       const { editStore, editOpts, tableColumn, editConfig, mouseConfig } = this",
          "424:       const { mode } = editOpts",
          "426:       const { row, column } = params",
          "427:       const { editRender } = column",
          "428:       const cell = params.cell = (params.cell || this.getCell(row, column))",
          "429:       const beforeEditMethod = editOpts.beforeEditMethod || editOpts.activeMethod",
          "435:             if (mouseConfig) {",
          "436:               this.clearSelected(evnt)",
          "437:               this.clearCellAreas(evnt)",
          "438:               this.clearCopyCellArea(evnt)",
          "439:             }",
          "443:             }",
          "445:             column.renderHeight = cell.offsetHeight",
          "446:             actived.args = params",
          "448:             actived.column = column",
          "456:               this.handleFocus(params, evnt)",
          "460:             })",
          "461:           }",
          "502:         }",
          "504:       }",
          "505:       return this.$nextTick()",
          "506:     },",
          "",
          "[Removed Lines]",
          "425:       const { actived } = editStore",
          "430:       if (isEnableConf(editConfig) && isEnableConf(editRender) && !this.hasPendingByRow(row) && cell) {",
          "431:         if (actived.row !== row || (mode === 'cell' ? actived.column !== column : false)) {",
          "433:           let type = 'edit-disabled'",
          "434:           if (!beforeEditMethod || beforeEditMethod({ ...params, $table: this, $grid: this.$xegrid })) {",
          "440:             this.closeTooltip()",
          "441:             if (actived.column) {",
          "442:               this.clearEdit(evnt)",
          "444:             type = 'edit-activated'",
          "447:             actived.row = row",
          "449:             if (mode === 'row') {",
          "450:               tableColumn.forEach(column => this._getColumnModel(row, column))",
          "451:             } else {",
          "452:               this._getColumnModel(row, column)",
          "453:             }",
          "454:             const afterEditMethod = editOpts.afterEditMethod",
          "455:             this.$nextTick(() => {",
          "457:               if (afterEditMethod) {",
          "458:                 afterEditMethod({ ...params, $table: this, $grid: this.$xegrid })",
          "459:               }",
          "462:           this.emitEvent(type, {",
          "463:             row,",
          "464:             rowIndex: this.getRowIndex(row),",
          "465:             $rowIndex: this.getVMRowIndex(row),",
          "466:             column,",
          "467:             columnIndex: this.getColumnIndex(column),",
          "468:             $columnIndex: this.getVMColumnIndex(column)",
          "469:           }, evnt)",
          "472:           if (type === 'edit-activated') {",
          "473:             this.emitEvent('edit-actived', {",
          "474:               row,",
          "475:               rowIndex: this.getRowIndex(row),",
          "476:               $rowIndex: this.getVMRowIndex(row),",
          "477:               column,",
          "478:               columnIndex: this.getColumnIndex(column),",
          "479:               $columnIndex: this.getVMColumnIndex(column)",
          "480:             }, evnt)",
          "481:           }",
          "482:         } else {",
          "483:           const { column: oldColumn } = actived",
          "484:           if (mouseConfig) {",
          "485:             this.clearSelected(evnt)",
          "486:             this.clearCellAreas(evnt)",
          "487:             this.clearCopyCellArea(evnt)",
          "488:           }",
          "489:           if (oldColumn !== column) {",
          "490:             const { model: oldModel } = oldColumn",
          "491:             if (oldModel.update) {",
          "492:               UtilTools.setCellValue(row, oldColumn, oldModel.value)",
          "493:             }",
          "494:             this.clearValidate()",
          "495:           }",
          "496:           column.renderHeight = cell.offsetHeight",
          "497:           actived.args = params",
          "498:           actived.column = column",
          "499:           setTimeout(() => {",
          "500:             this.handleFocus(params, evnt)",
          "501:           })",
          "503:         this.focus()",
          "",
          "[Added Lines]",
          "425:       const { actived, focused } = editStore",
          "430:       if (cell && isEnableConf(editConfig) && isEnableConf(editRender)) {",
          "432:         if (!this.hasPendingByRow(row)) {",
          "433:           if (actived.row !== row || (mode === 'cell' ? actived.column !== column : false)) {",
          "435:             let type = 'edit-disabled'",
          "436:             if (!beforeEditMethod || beforeEditMethod({ ...params, $table: this, $grid: this.$xegrid })) {",
          "437:               if (mouseConfig) {",
          "438:                 this.clearSelected(evnt)",
          "439:                 this.clearCellAreas(evnt)",
          "440:                 this.clearCopyCellArea(evnt)",
          "441:               }",
          "442:               this.closeTooltip()",
          "443:               if (actived.column) {",
          "444:                 this.clearEdit(evnt)",
          "445:               }",
          "446:               type = 'edit-activated'",
          "447:               column.renderHeight = cell.offsetHeight",
          "448:               actived.args = params",
          "449:               actived.row = row",
          "450:               actived.column = column",
          "451:               if (mode === 'row') {",
          "452:                 tableColumn.forEach(column => this._getColumnModel(row, column))",
          "453:               } else {",
          "454:                 this._getColumnModel(row, column)",
          "455:               }",
          "456:               const afterEditMethod = editOpts.afterEditMethod",
          "457:               this.$nextTick(() => {",
          "458:                 this.handleFocus(params, evnt)",
          "459:                 if (afterEditMethod) {",
          "460:                   afterEditMethod({ ...params, $table: this, $grid: this.$xegrid })",
          "461:                 }",
          "462:               })",
          "463:             }",
          "464:             this.emitEvent(type, {",
          "465:               row,",
          "466:               rowIndex: this.getRowIndex(row),",
          "467:               $rowIndex: this.getVMRowIndex(row),",
          "468:               column,",
          "469:               columnIndex: this.getColumnIndex(column),",
          "470:               $columnIndex: this.getVMColumnIndex(column)",
          "471:             }, evnt)",
          "474:             if (type === 'edit-activated') {",
          "475:               this.emitEvent('edit-actived', {",
          "476:                 row,",
          "477:                 rowIndex: this.getRowIndex(row),",
          "478:                 $rowIndex: this.getVMRowIndex(row),",
          "479:                 column,",
          "480:                 columnIndex: this.getColumnIndex(column),",
          "481:                 $columnIndex: this.getVMColumnIndex(column)",
          "482:               }, evnt)",
          "483:             }",
          "484:           } else {",
          "485:             const { column: oldColumn } = actived",
          "491:             if (oldColumn !== column) {",
          "492:               const { model: oldModel } = oldColumn",
          "493:               if (oldModel.update) {",
          "494:                 UtilTools.setCellValue(row, oldColumn, oldModel.value)",
          "495:               }",
          "496:               this.clearValidate()",
          "501:             setTimeout(() => {",
          "505:           focused.column = null",
          "506:           focused.row = null",
          "507:           this.focus()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "570:       return this.$nextTick()",
          "571:     },",
          "572:     _getActiveRecord () {",
          "577:       return this.getEditRecord()",
          "578:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "578:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "579:         warnLog('vxe.error.delFunc', ['getActiveRecord', 'getEditRecord'])",
          "580:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "586:       return null",
          "587:     },",
          "588:     _isActiveByRow (row) {",
          "593:       return this.isEditByRow(row)",
          "594:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "594:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "595:         warnLog('vxe.error.delFunc', ['isActiveByRow', 'isEditByRow'])",
          "596:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "642:       }",
          "643:     },",
          "644:     _setActiveRow (row) {",
          "649:       return this.setEditRow(row)",
          "650:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "650:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "651:         warnLog('vxe.error.delFunc', ['setActiveRow', 'setEditRow'])",
          "652:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "659:       return this.setEditCell(row, column)",
          "660:     },",
          "661:     _setActiveCell (row) {",
          "666:       return this.setEditCell(row)",
          "667:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "667:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "668:         warnLog('vxe.error.delFunc', ['setActiveCell', 'setEditCell'])",
          "669:       }",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3904:   triggerCellClickEvent (evnt, params) {",
          "3907:     const { row, column } = params",
          "3908:     const { type, treeNode } = column",
          "3909:     const isRadioType = type === 'radio'",
          "",
          "[Removed Lines]",
          "3905:     const { highlightCurrentRow, editStore, radioOpts, expandOpts, treeOpts, editConfig, editOpts, checkboxOpts, rowOpts } = this",
          "3906:     const { actived } = editStore",
          "",
          "[Added Lines]",
          "3905:     const { highlightCurrentRow, editStore, radioOpts, expandOpts, treeOpts, keyboardOpts, editConfig, editOpts, checkboxOpts, rowOpts } = this",
          "3906:     const { actived, focused } = editStore",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3945:       }",
          "3947:       if (isEnableConf(editConfig)) {",
          "3948:         if (editOpts.trigger === 'manual') {",
          "3949:           if (actived.args && actived.row === row && column !== actived.column) {",
          "3950:             this.handleChangeCell(evnt, params)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3949:         if (keyboardOpts.arrowCursorLock && evnt && editOpts.mode === 'cell' && evnt.target && /^input|textarea$/i.test(evnt.target.tagName)) {",
          "3950:           focused.column = column",
          "3951:           focused.row = row",
          "3952:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f4e760f6b2d0c10d4c51ea29796bc7482ae97b9",
      "candidate_info": {
        "commit_hash": "5f4e760f6b2d0c10d4c51ea29796bc7482ae97b9",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/5f4e760f6b2d0c10d4c51ea29796bc7482ae97b9",
        "files": [
          "package.json",
          "styles/theme/light.scss",
          "styles/variable.scss"
        ],
        "message": "releases 3.11.3",
        "before_after_code_files": [
          "styles/theme/light.scss||styles/theme/light.scss",
          "styles/variable.scss||styles/variable.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "styles/theme/light.scss||styles/theme/light.scss": [
          "File: styles/theme/light.scss -> styles/theme/light.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @use './base.scss';",
          "4: [data-vxe-ui-theme=\"light\"] {",
          "40: }",
          "",
          "[Removed Lines]",
          "2: @use '../variable.scss' as light-variable;",
          "6:   --vxe-ui-font-color: #{light-variable.$vxe-ui-font-color};",
          "7:   --vxe-ui-font-primary-color: #{light-variable.$vxe-ui-font-primary-color};",
          "8:   --vxe-ui-font-lighten-color: #{light-variable.$vxe-ui-font-lighten-color};",
          "9:   --vxe-ui-font-darken-color: #{light-variable.$vxe-ui-font-darken-color};",
          "10:   --vxe-ui-font-disabled-color: #{light-variable.$vxe-ui-font-disabled-color};",
          "13:   --vxe-ui-base-popup-border-color: #{light-variable.$vxe-ui-base-popup-border-color};",
          "14:   --vxe-ui-base-popup-box-shadow: #{light-variable.$vxe-ui-base-popup-box-shadow};",
          "17:   --vxe-ui-layout-background-color: #{light-variable.$vxe-ui-layout-background-color};",
          "20:   --vxe-ui-input-border-color: #{light-variable.$vxe-ui-input-border-color};",
          "21:   --vxe-ui-input-placeholder-color: #{light-variable.$vxe-ui-input-placeholder-color};",
          "22:   --vxe-ui-input-disabled-background-color: #{light-variable.$vxe-ui-input-disabled-background-color};",
          "25:   --vxe-ui-loading-background-color: #{light-variable.$vxe-ui-loading-background-color};",
          "28:   --vxe-ui-table-header-background-color: #{light-variable.$vxe-ui-table-header-background-color};",
          "29:   --vxe-ui-table-border-color: #{light-variable.$vxe-ui-table-border-color};",
          "30:   --vxe-ui-table-row-hover-background-color: #{light-variable.$vxe-ui-table-row-hover-background-color};",
          "31:   --vxe-ui-table-row-striped-background-color: #{light-variable.$vxe-ui-table-row-striped-background-color};",
          "32:   --vxe-ui-table-row-hover-striped-background-color: #{light-variable.$vxe-ui-table-row-hover-striped-background-color};",
          "33:   --vxe-ui-table-row-radio-checked-background-color: #{light-variable.$vxe-ui-table-row-radio-checked-background-color};",
          "34:   --vxe-ui-table-row-hover-radio-checked-background-color: #{light-variable.$vxe-ui-table-row-hover-radio-checked-background-color};",
          "35:   --vxe-ui-table-row-checkbox-checked-background-color: #{light-variable.$vxe-ui-table-row-checkbox-checked-background-color};",
          "36:   --vxe-ui-table-row-hover-checkbox-checked-background-color: #{light-variable.$vxe-ui-table-row-hover-checkbox-checked-background-color};",
          "37:   --vxe-ui-table-row-current-background-color: #{light-variable.$vxe-ui-table-row-current-background-color};",
          "38:   --vxe-ui-table-row-hover-current-background-color: #{light-variable.$vxe-ui-table-row-hover-current-background-color};",
          "39:   --vxe-ui-table-fixed-scrolling-box-shadow-color: #{light-variable.$vxe-ui-table-fixed-scrolling-box-shadow-color};",
          "",
          "[Added Lines]",
          "2: @use '../variable.scss' as light_variable;",
          "6:   --vxe-ui-font-color: #{light_variable.$vxe-ui-font-color};",
          "7:   --vxe-ui-font-primary-color: #{light_variable.$vxe-ui-font-primary-color};",
          "8:   --vxe-ui-font-lighten-color: #{light_variable.$vxe-ui-font-lighten-color};",
          "9:   --vxe-ui-font-darken-color: #{light_variable.$vxe-ui-font-darken-color};",
          "10:   --vxe-ui-font-disabled-color: #{light_variable.$vxe-ui-font-disabled-color};",
          "13:   --vxe-ui-base-popup-border-color: #{light_variable.$vxe-ui-base-popup-border-color};",
          "14:   --vxe-ui-base-popup-box-shadow: #{light_variable.$vxe-ui-base-popup-box-shadow};",
          "17:   --vxe-ui-layout-background-color: #{light_variable.$vxe-ui-layout-background-color};",
          "20:   --vxe-ui-input-border-color: #{light_variable.$vxe-ui-input-border-color};",
          "21:   --vxe-ui-input-placeholder-color: #{light_variable.$vxe-ui-input-placeholder-color};",
          "22:   --vxe-ui-input-disabled-background-color: #{light_variable.$vxe-ui-input-disabled-background-color};",
          "25:   --vxe-ui-loading-background-color: #{light_variable.$vxe-ui-loading-background-color};",
          "28:   --vxe-ui-table-header-background-color: #{light_variable.$vxe-ui-table-header-background-color};",
          "29:   --vxe-ui-table-border-color: #{light_variable.$vxe-ui-table-border-color};",
          "30:   --vxe-ui-table-row-hover-background-color: #{light_variable.$vxe-ui-table-row-hover-background-color};",
          "31:   --vxe-ui-table-row-striped-background-color: #{light_variable.$vxe-ui-table-row-striped-background-color};",
          "32:   --vxe-ui-table-row-hover-striped-background-color: #{light_variable.$vxe-ui-table-row-hover-striped-background-color};",
          "33:   --vxe-ui-table-row-radio-checked-background-color: #{light_variable.$vxe-ui-table-row-radio-checked-background-color};",
          "34:   --vxe-ui-table-row-hover-radio-checked-background-color: #{light_variable.$vxe-ui-table-row-hover-radio-checked-background-color};",
          "35:   --vxe-ui-table-row-checkbox-checked-background-color: #{light_variable.$vxe-ui-table-row-checkbox-checked-background-color};",
          "36:   --vxe-ui-table-row-hover-checkbox-checked-background-color: #{light_variable.$vxe-ui-table-row-hover-checkbox-checked-background-color};",
          "37:   --vxe-ui-table-row-current-background-color: #{light_variable.$vxe-ui-table-row-current-background-color};",
          "38:   --vxe-ui-table-row-hover-current-background-color: #{light_variable.$vxe-ui-table-row-hover-current-background-color};",
          "39:   --vxe-ui-table-fixed-scrolling-box-shadow-color: #{light_variable.$vxe-ui-table-fixed-scrolling-box-shadow-color};",
          "",
          "---------------"
        ],
        "styles/variable.scss||styles/variable.scss": [
          "File: styles/variable.scss -> styles/variable.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: $vxe-ui-font-color: #606266;",
          "3: $vxe-ui-font-tinge-color: #d4d5d7;",
          "4: $vxe-ui-font-lighten-color: #797b80;",
          "5: $vxe-ui-font-darken-color: #47494c;",
          "6: $vxe-ui-font-disabled-color: #BFBFBF;",
          "9: $vxe-ui-font-primary-color: #409eff;",
          "12: $vxe-ui-base-popup-border-color: #DADCE0;",
          "13: $vxe-ui-base-popup-box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.16);",
          "16: $vxe-ui-layout-background-color: #ffffff;",
          "19: $vxe-ui-input-border-color: #dcdfe6;",
          "20: $vxe-ui-input-placeholder-color: #C0C4CC;",
          "21: $vxe-ui-input-disabled-background-color: #f3f3f3;",
          "24: $vxe-ui-loading-background-color: rgba(255, 255, 255, 0.5);",
          "27: $vxe-ui-table-header-background-color: #f8f8f9;",
          "28: $vxe-ui-table-border-color: #e8eaec;",
          "29: $vxe-ui-table-row-hover-background-color: #f5f7fa;",
          "30: $vxe-ui-table-row-striped-background-color: #fafafa;",
          "31: $vxe-ui-table-row-hover-striped-background-color: #f5f7fa;",
          "32: $vxe-ui-table-row-radio-checked-background-color: #fff3e0;",
          "33: $vxe-ui-table-row-hover-radio-checked-background-color: #ffebbc;",
          "34: $vxe-ui-table-row-checkbox-checked-background-color: #fff3e0;",
          "35: $vxe-ui-table-row-hover-checkbox-checked-background-color: #ffebbc;",
          "36: $vxe-ui-table-row-current-background-color: #e6f7ff;",
          "37: $vxe-ui-table-row-hover-current-background-color: #d7effb;",
          "38: $vxe-ui-table-fixed-scrolling-box-shadow-color: rgba(0, 0, 0, 0.12);",
          "",
          "[Added Lines]",
          "2: $vxe-ui-font-color: #606266 !default;",
          "3: $vxe-ui-font-tinge-color: #d4d5d7 !default;",
          "4: $vxe-ui-font-lighten-color: #797b80 !default;",
          "5: $vxe-ui-font-darken-color: #47494c !default;",
          "6: $vxe-ui-font-disabled-color: #BFBFBF !default;",
          "9: $vxe-ui-font-primary-color: #409eff !default;",
          "12: $vxe-ui-base-popup-border-color: #DADCE0 !default;",
          "13: $vxe-ui-base-popup-box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.16) !default;",
          "16: $vxe-ui-layout-background-color: #ffffff !default;",
          "19: $vxe-ui-input-border-color: #dcdfe6 !default;",
          "20: $vxe-ui-input-placeholder-color: #C0C4CC !default;",
          "21: $vxe-ui-input-disabled-background-color: #f3f3f3 !default;",
          "24: $vxe-ui-loading-background-color: rgba(255, 255, 255, 0.5) !default;",
          "27: $vxe-ui-table-header-background-color: #f8f8f9 !default;",
          "28: $vxe-ui-table-border-color: #e8eaec !default;",
          "29: $vxe-ui-table-row-hover-background-color: #f5f7fa !default;",
          "30: $vxe-ui-table-row-striped-background-color: #fafafa !default;",
          "31: $vxe-ui-table-row-hover-striped-background-color: #f5f7fa !default;",
          "32: $vxe-ui-table-row-radio-checked-background-color: #fff3e0 !default;",
          "33: $vxe-ui-table-row-hover-radio-checked-background-color: #ffebbc !default;",
          "34: $vxe-ui-table-row-checkbox-checked-background-color: #fff3e0 !default;",
          "35: $vxe-ui-table-row-hover-checkbox-checked-background-color: #ffebbc !default;",
          "36: $vxe-ui-table-row-current-background-color: #e6f7ff !default;",
          "37: $vxe-ui-table-row-hover-current-background-color: #d7effb !default;",
          "38: $vxe-ui-table-fixed-scrolling-box-shadow-color: rgba(0, 0, 0, 0.12) !default;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d916bd58322a3be2fe25c6ca332129066b8316b",
      "candidate_info": {
        "commit_hash": "9d916bd58322a3be2fe25c6ca332129066b8316b",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/9d916bd58322a3be2fe25c6ca332129066b8316b",
        "files": [
          "lib_temp/demo.html",
          "lib_temp/index.common.js",
          "lib_temp/index.css",
          "lib_temp/index.umd.js",
          "lib_temp/index.umd.min.js"
        ],
        "message": "fix datetime",
        "before_after_code_files": [
          "lib_temp/demo.html||lib_temp/demo.html",
          "lib_temp/index.common.js||lib_temp/index.common.js",
          "lib_temp/index.css||lib_temp/index.css",
          "lib_temp/index.umd.js||lib_temp/index.umd.js",
          "lib_temp/index.umd.min.js||lib_temp/index.umd.min.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib_temp/demo.html||lib_temp/demo.html": [
          "File: lib_temp/demo.html -> lib_temp/demo.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib_temp/index.common.js||lib_temp/index.common.js": [
          "File: lib_temp/index.common.js -> lib_temp/index.common.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib_temp/index.css||lib_temp/index.css": [
          "File: lib_temp/index.css -> lib_temp/index.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib_temp/index.umd.js||lib_temp/index.umd.js": [
          "File: lib_temp/index.umd.js -> lib_temp/index.umd.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib_temp/index.umd.min.js||lib_temp/index.umd.min.js": [
          "File: lib_temp/index.umd.min.js -> lib_temp/index.umd.min.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "471ed446e628ef52e6553b2af38d4c02ed14b8f4",
      "candidate_info": {
        "commit_hash": "471ed446e628ef52e6553b2af38d4c02ed14b8f4",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/471ed446e628ef52e6553b2af38d4c02ed14b8f4",
        "files": [
          "packages/table/src/methods.ts"
        ],
        "message": "update docs",
        "before_after_code_files": [
          "packages/table/src/methods.ts||packages/table/src/methods.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5026:         rowExpandLazyLoadedMaps[rowid] = row",
          "5027:         loadMethod({ $table: $xeTable, row, rowIndex: this.getRowIndex(row), $rowIndex: this.getVMRowIndex(row) }).then(() => {",
          "5028:           const { rowExpandedMaps } = this",
          "5030:           rowExpandedMaps[rowid] = row",
          "5031:         }).catch(() => {",
          "5033:         }).finally(() => {",
          "5034:           const { rowExpandLazyLoadedMaps } = this",
          "5035:           if (rowExpandLazyLoadedMaps[rowid]) {",
          "",
          "[Removed Lines]",
          "5029:           rowRest.expandLoaded = true",
          "5032:           rowRest.expandLoaded = false",
          "",
          "[Added Lines]",
          "5029:           if (rowRest) {",
          "5030:             rowRest.expandLoaded = true",
          "5031:           }",
          "5034:           if (rowRest) {",
          "5035:             rowRest.expandLoaded = false",
          "5036:           }",
          "",
          "---------------"
        ]
      }
    }
  ]
}