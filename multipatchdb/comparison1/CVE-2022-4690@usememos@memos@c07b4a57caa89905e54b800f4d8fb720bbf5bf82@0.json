{
  "cve_id": "CVE-2022-4690",
  "cve_desc": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.0.",
  "repo": "usememos/memos",
  "patch_hash": "c07b4a57caa89905e54b800f4d8fb720bbf5bf82",
  "patch_info": {
    "commit_hash": "c07b4a57caa89905e54b800f4d8fb720bbf5bf82",
    "repo": "usememos/memos",
    "commit_url": "https://github.com/usememos/memos/commit/c07b4a57caa89905e54b800f4d8fb720bbf5bf82",
    "files": [
      "server/resource.go",
      "server/server.go"
    ],
    "message": "feat: add secure middleware (#832)",
    "before_after_code_files": [
      "server/resource.go||server/resource.go",
      "server/server.go||server/server.go"
    ]
  },
  "patch_diff": {
    "server/resource.go||server/resource.go": [
      "File: server/resource.go -> server/resource.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  \"net/http\"",
      "8:  \"net/url\"",
      "9:  \"strconv\"",
      "11:  \"time\"",
      "13:  \"github.com/usememos/memos/api\"",
      "",
      "[Removed Lines]",
      "10:  \"strings\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "263:    return echo.NewHTTPError(http.StatusInternalServerError, fmt.Sprintf(\"Failed to fetch resource ID: %v\", resourceID)).SetInternal(err)",
      "264:   }",
      "271:   c.Response().Writer.WriteHeader(http.StatusOK)",
      "272:   c.Response().Writer.Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
      "273:   if _, err := c.Response().Writer.Write(resource.Blob); err != nil {",
      "",
      "[Removed Lines]",
      "266:   if strings.HasPrefix(resource.Type, echo.MIMETextHTML) {",
      "267:    c.Response().Writer.Header().Set(\"Content-Type\", echo.MIMETextPlain)",
      "268:   } else {",
      "269:    c.Response().Writer.Header().Set(\"Content-Type\", resource.Type)",
      "270:   }",
      "",
      "[Added Lines]",
      "265:   c.Response().Writer.Header().Set(\"Content-Type\", resource.Type)",
      "",
      "---------------"
    ],
    "server/server.go||server/server.go": [
      "File: server/server.go -> server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   Timeout:      30 * time.Second,",
      "45:  }))",
      "47:  embedFrontend(e)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:  e.Use(middleware.SecureWithConfig(middleware.SecureConfig{",
      "48:   ContentSecurityPolicy: \"default-src 'self'\",",
      "49:  }))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b704c2080934e36b0481340252015a5ca3f2779f",
      "candidate_info": {
        "commit_hash": "b704c2080934e36b0481340252015a5ca3f2779f",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/b704c2080934e36b0481340252015a5ca3f2779f",
        "files": [
          "server/resource.go",
          "store/db/db.go"
        ],
        "message": "chore: return raw text for html (#782)",
        "before_after_code_files": [
          "server/resource.go||server/resource.go",
          "store/db/db.go||store/db/db.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/resource.go||server/resource.go"
          ],
          "candidate": [
            "server/resource.go||server/resource.go"
          ]
        }
      },
      "candidate_diff": {
        "server/resource.go||server/resource.go": [
          "File: server/resource.go -> server/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:   }",
          "45:   filename := file.Filename",
          "50:   filetype := file.Header.Get(\"Content-Type\")",
          "51:   size := file.Size",
          "52:   src, err := file.Open()",
          "",
          "[Removed Lines]",
          "46:   if strings.HasSuffix(filename, \".html\") {",
          "47:    return echo.NewHTTPError(http.StatusBadRequest, \"html file is not allowed\")",
          "48:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:   return nil",
          "170:  })",
          "173:   ctx := c.Request().Context()",
          "174:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "175:   if !ok {",
          "",
          "[Removed Lines]",
          "172:  g.DELETE(\"/resource/:resourceId\", func(c echo.Context) error {",
          "",
          "[Added Lines]",
          "168:  g.PATCH(\"/resource/:resourceId\", func(c echo.Context) error {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181:    return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf(\"ID is not a number: %s\", c.Param(\"resourceId\"))).SetInternal(err)",
          "182:   }",
          "185:    ID:        &resourceID,",
          "186:    CreatorID: &userID,",
          "190:   }",
          "193:   }",
          "197:   }",
          "203:   }",
          "206:  })",
          "209:   ctx := c.Request().Context()",
          "210:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "211:   if !ok {",
          "",
          "[Removed Lines]",
          "184:   resource, err := s.Store.FindResource(ctx, &api.ResourceFind{",
          "187:   })",
          "188:   if err != nil {",
          "189:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to find resource\").SetInternal(err)",
          "191:   if resource == nil {",
          "192:    return echo.NewHTTPError(http.StatusNotFound, \"Not find resource\").SetInternal(err)",
          "195:   resourceDelete := &api.ResourceDelete{",
          "196:    ID: resourceID,",
          "198:   if err := s.Store.DeleteResource(ctx, resourceDelete); err != nil {",
          "199:    if common.ErrorCode(err) == common.NotFound {",
          "200:     return echo.NewHTTPError(http.StatusNotFound, fmt.Sprintf(\"Resource ID not found: %d\", resourceID))",
          "201:    }",
          "202:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to delete resource\").SetInternal(err)",
          "205:   return c.JSON(http.StatusOK, true)",
          "208:  g.PATCH(\"/resource/:resourceId\", func(c echo.Context) error {",
          "",
          "[Added Lines]",
          "180:   resourceFind := &api.ResourceFind{",
          "184:   if _, err := s.Store.FindResource(ctx, resourceFind); err != nil {",
          "185:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to find resource\").SetInternal(err)",
          "188:   currentTs := time.Now().Unix()",
          "189:   resourcePatch := &api.ResourcePatch{",
          "190:    ID:        resourceID,",
          "191:    UpdatedTs: &currentTs,",
          "193:   if err := json.NewDecoder(c.Request().Body).Decode(resourcePatch); err != nil {",
          "194:    return echo.NewHTTPError(http.StatusBadRequest, \"Malformatted patch resource request\").SetInternal(err)",
          "197:   resource, err := s.Store.PatchResource(ctx, resourcePatch)",
          "198:   if err != nil {",
          "199:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to patch resource\").SetInternal(err)",
          "200:   }",
          "202:   c.Response().Header().Set(echo.HeaderContentType, echo.MIMEApplicationJSONCharsetUTF8)",
          "203:   if err := json.NewEncoder(c.Response().Writer).Encode(composeResponse(resource)); err != nil {",
          "204:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to encode resource response\").SetInternal(err)",
          "205:   }",
          "206:   return nil",
          "209:  g.DELETE(\"/resource/:resourceId\", func(c echo.Context) error {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "217:    return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf(\"ID is not a number: %s\", c.Param(\"resourceId\"))).SetInternal(err)",
          "218:   }",
          "221:    ID:        &resourceID,",
          "222:    CreatorID: &userID,",
          "225:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to find resource\").SetInternal(err)",
          "226:   }",
          "235:   }",
          "240:   }",
          "245:   }",
          "247:  })",
          "248: }",
          "",
          "[Removed Lines]",
          "220:   resourceFind := &api.ResourceFind{",
          "223:   }",
          "224:   if _, err := s.Store.FindResource(ctx, resourceFind); err != nil {",
          "228:   currentTs := time.Now().Unix()",
          "229:   resourcePatch := &api.ResourcePatch{",
          "230:    ID:        resourceID,",
          "231:    UpdatedTs: &currentTs,",
          "232:   }",
          "233:   if err := json.NewDecoder(c.Request().Body).Decode(resourcePatch); err != nil {",
          "234:    return echo.NewHTTPError(http.StatusBadRequest, \"Malformatted patch resource request\").SetInternal(err)",
          "237:   resource, err := s.Store.PatchResource(ctx, resourcePatch)",
          "238:   if err != nil {",
          "239:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to patch resource\").SetInternal(err)",
          "242:   c.Response().Header().Set(echo.HeaderContentType, echo.MIMEApplicationJSONCharsetUTF8)",
          "243:   if err := json.NewEncoder(c.Response().Writer).Encode(composeResponse(resource)); err != nil {",
          "244:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to encode resource response\").SetInternal(err)",
          "246:   return nil",
          "",
          "[Added Lines]",
          "221:   resource, err := s.Store.FindResource(ctx, &api.ResourceFind{",
          "224:   })",
          "225:   if err != nil {",
          "228:   if resource == nil {",
          "229:    return echo.NewHTTPError(http.StatusNotFound, \"Not find resource\").SetInternal(err)",
          "232:   resourceDelete := &api.ResourceDelete{",
          "233:    ID: resourceID,",
          "235:   if err := s.Store.DeleteResource(ctx, resourceDelete); err != nil {",
          "236:    if common.ErrorCode(err) == common.NotFound {",
          "237:     return echo.NewHTTPError(http.StatusNotFound, fmt.Sprintf(\"Resource ID not found: %d\", resourceID))",
          "238:    }",
          "239:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to delete resource\").SetInternal(err)",
          "242:   return c.JSON(http.StatusOK, true)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "267:    return echo.NewHTTPError(http.StatusInternalServerError, fmt.Sprintf(\"Failed to fetch resource ID: %v\", resourceID)).SetInternal(err)",
          "268:   }",
          "270:   c.Response().Writer.WriteHeader(http.StatusOK)",
          "272:   c.Response().Writer.Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "273:   if _, err := c.Response().Writer.Write(resource.Blob); err != nil {",
          "274:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to write response\").SetInternal(err)",
          "",
          "[Removed Lines]",
          "271:   c.Response().Writer.Header().Set(\"Content-Type\", resource.Type)",
          "",
          "[Added Lines]",
          "266:   if strings.HasPrefix(resource.Type, echo.MIMETextHTML) {",
          "267:    c.Response().Writer.Header().Set(\"Content-Type\", echo.MIMETextPlain)",
          "268:   } else {",
          "269:    c.Response().Writer.Header().Set(\"Content-Type\", resource.Type)",
          "270:   }",
          "",
          "---------------"
        ],
        "store/db/db.go||store/db/db.go": [
          "File: store/db/db.go -> store/db/db.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:  }",
          "47:  if err != nil {",
          "48:   return fmt.Errorf(\"failed to open db with dsn: %s, err: %w\", db.profile.DSN, err)",
          "49:  }",
          "51:  db.Db = sqliteDB",
          "53:  if db.profile.Mode == \"dev\" {",
          "",
          "[Removed Lines]",
          "46:  sqliteDB, err := sql.Open(\"sqlite3\", db.profile.DSN+\"?_foreign_keys=0\")",
          "50:  sqliteDB.SetMaxOpenConns(1)",
          "",
          "[Added Lines]",
          "46:  sqliteDB, err := sql.Open(\"sqlite3\", db.profile.DSN+\"?cache=shared&_foreign_keys=0&_busy_timeout=9999999\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1e69564413963adeb476b1af69c083f2e34b664",
      "candidate_info": {
        "commit_hash": "b1e69564413963adeb476b1af69c083f2e34b664",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/b1e69564413963adeb476b1af69c083f2e34b664",
        "files": [
          "go.mod",
          "go.sum",
          "server/embed_frontend.go",
          "server/resource.go",
          "server/server.go",
          "server/webhook.go"
        ],
        "message": "chore: add cache for resource",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "server/embed_frontend.go||server/embed_frontend.go",
          "server/resource.go||server/resource.go",
          "server/server.go||server/server.go",
          "server/webhook.go||server/webhook.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/resource.go||server/resource.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/resource.go||server/resource.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: require (",
          "10:  github.com/golang-jwt/jwt v3.2.2+incompatible // indirect",
          "12:  github.com/mattn/go-isatty v0.0.14 // indirect",
          "13:  github.com/valyala/bytebufferpool v1.0.0 // indirect",
          "14:  github.com/valyala/fasttemplate v1.2.1 // indirect",
          "18:  golang.org/x/text v0.3.7 // indirect",
          "20: )",
          "22: require (",
          "23:  github.com/gorilla/context v1.1.1 // indirect",
          "25:  github.com/labstack/gommon v0.3.1 // indirect",
          "26: )",
          "",
          "[Removed Lines]",
          "11:  github.com/mattn/go-colorable v0.1.11 // indirect",
          "15:  golang.org/x/crypto v0.0.0-20210920023735-84f357641f63",
          "16:  golang.org/x/net v0.0.0-20210917221730-978cfadd31cf // indirect",
          "17:  golang.org/x/sys v0.0.0-20220405052023-b1e9470b6e64 // indirect",
          "19:  golang.org/x/time v0.0.0-20201208040808-7e3f01d25324 // indirect",
          "24:  github.com/labstack/echo/v4 v4.6.3",
          "",
          "[Added Lines]",
          "11:  github.com/mattn/go-colorable v0.1.12 // indirect",
          "15:  golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa",
          "16:  golang.org/x/net v0.0.0-20220728030405-41545e8bf201 // indirect",
          "17:  golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 // indirect",
          "19:  golang.org/x/time v0.0.0-20220722155302-e5dcc9cfc0b9 // indirect",
          "24:  github.com/labstack/echo/v4 v4.9.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:  github.com/VictoriaMetrics/fastcache v1.10.0",
          "30:  github.com/gorilla/securecookie v1.1.1",
          "31:  github.com/gorilla/sessions v1.2.1",
          "33: )",
          "35: require (",
          "",
          "[Removed Lines]",
          "32:  github.com/labstack/echo-contrib v0.12.0",
          "",
          "[Added Lines]",
          "32:  github.com/labstack/echo-contrib v0.13.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=",
          "53: github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=",
          "54: github.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=",
          "56: github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=",
          "57: github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "58: github.com/cespare/xxhash/v2 v2.1.2 h1:YRXhKfTDauu4ajMg1TPgFO5jnlC2HCbmLXMcTG5cbYE=",
          "",
          "[Removed Lines]",
          "55: github.com/casbin/casbin/v2 v2.40.6/go.mod h1:sEL80qBYTbd+BPeL4iyvwYzFT3qwLaESq5aFKVLbLfA=",
          "",
          "[Added Lines]",
          "55: github.com/casbin/casbin/v2 v2.51.1/go.mod h1:vByNa/Fchek0KZUgG5wEsl7iFsiviAYKRtgrQfcJqHg=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=",
          "64: github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=",
          "65: github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "66: github.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "67: github.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=",
          "68: github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=",
          "69: github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: github.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=",
          "68: github.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "69: github.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "70: github.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77: github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=",
          "78: github.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=",
          "79: github.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=",
          "80: github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=",
          "81: github.com/fogleman/gg v1.2.1-0.20190220221249-0403632d5b90/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=",
          "82: github.com/fortytw2/leaktest v1.3.0/go.mod h1:jDsjWgpAGjm2CA7WthBh/CdZYEPF31XHquHwclZch5g=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: github.com/envoyproxy/go-control-plane v0.10.2-0.20220325020618-49ff273808a1/go.mod h1:KJwIaB5Mv44NWtYuAOFCVOjcI94vtpEz2JU/D2v6IjE=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90: github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "91: github.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "92: github.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=",
          "93: github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=",
          "94: github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=",
          "95: github.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=",
          "96: github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=",
          "97: github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=",
          "98: github.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98: github.com/go-kit/log v0.2.0/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=",
          "102: github.com/go-logfmt/logfmt v0.5.1/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "139: github.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "140: github.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "141: github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "142: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "143: github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=",
          "144: github.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149: github.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "150: github.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "178: github.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=",
          "179: github.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=",
          "180: github.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=",
          "181: github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=",
          "182: github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=",
          "183: github.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190: github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "193: github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=",
          "194: github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=",
          "195: github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=",
          "202: github.com/labstack/gommon v0.3.1 h1:OomWaJXm7xR6L1HmEtGyQf26TEn7V6X88mktX9kee9o=",
          "203: github.com/labstack/gommon v0.3.1/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=",
          "207: github.com/mattn/go-colorable v0.1.11/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=",
          "211: github.com/mattn/go-isatty v0.0.14 h1:yVuAays6BHfxijgZPzw+3Zlu5yQgKGP2/hcQbHb7S9Y=",
          "212: github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=",
          "213: github.com/mattn/go-sqlite3 v1.14.9 h1:10HX2Td0ocZpYEjhilsuo6WWtUqttj2Kb0KtD86/KYA=",
          "",
          "[Removed Lines]",
          "196: github.com/labstack/echo-contrib v0.12.0 h1:NPr1ez+XUa5s/4LujEon+32Bxg5DO6EKSW/va06pmLc=",
          "197: github.com/labstack/echo-contrib v0.12.0/go.mod h1:kR62TbwsBgmpV2HVab5iQRsQtLuhPyGqCBee88XRc4M=",
          "198: github.com/labstack/echo/v4 v4.6.1/go.mod h1:RnjgMWNDB9g/HucVWhQYNQP9PvbYf6adqftqryo7s9k=",
          "199: github.com/labstack/echo/v4 v4.6.3 h1:VhPuIZYxsbPmo4m9KAkMU/el2442eB7EBFFhNTTT9ac=",
          "200: github.com/labstack/echo/v4 v4.6.3/go.mod h1:Hk5OiHj0kDqmFq7aHe7eDqI7CUhuCrfpupQtLGGLm7A=",
          "201: github.com/labstack/gommon v0.3.0/go.mod h1:MULnywXg0yavhxWKc+lOruYdAhDwPK9wf0OL7NoOu+k=",
          "204: github.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=",
          "205: github.com/mattn/go-colorable v0.1.8/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=",
          "206: github.com/mattn/go-colorable v0.1.11 h1:nQ+aFkoE2TMGc0b68U2OKSexC+eq46+XwZzWXHRmPYs=",
          "208: github.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=",
          "209: github.com/mattn/go-isatty v0.0.9/go.mod h1:YNRxwqDuOph6SZLI9vUUz6OYw3QyUt7WiY2yME+cCiQ=",
          "210: github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=",
          "",
          "[Added Lines]",
          "206: github.com/labstack/echo-contrib v0.13.0 h1:bzSG0SpuZZd7BmJLvsWtPfU23W0Enh3K0tok3aENVKA=",
          "207: github.com/labstack/echo-contrib v0.13.0/go.mod h1:IF9+MJu22ADOZEHD+bAV67XMIO3vNXUy7Naz/ABPHEs=",
          "208: github.com/labstack/echo/v4 v4.7.2/go.mod h1:xkCDAdFCIf8jsFQ5NnbK7oqaF/yU1A1X20Ltm0OvSks=",
          "209: github.com/labstack/echo/v4 v4.9.0 h1:wPOF1CE6gvt/kmbMR4dGzWvHMPT+sAEUJOwOTtvITVY=",
          "210: github.com/labstack/echo/v4 v4.9.0/go.mod h1:xkCDAdFCIf8jsFQ5NnbK7oqaF/yU1A1X20Ltm0OvSks=",
          "214: github.com/mattn/go-colorable v0.1.12 h1:jF+Du6AlPIjs2BiUiQlKOX0rt3SujHxPnksPKZbaA40=",
          "215: github.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "217: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "218: github.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=",
          "219: github.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=",
          "220: github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "221: github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "222: github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225: github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "230: github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=",
          "231: github.com/onsi/gomega v1.16.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=",
          "232: github.com/opentracing/opentracing-go v1.2.0/go.mod h1:GxEUsuufX4nBwe+T+Wl9TAgYrxe9dPLANfrWvHYVTgc=",
          "234: github.com/pierrec/lz4 v2.6.1+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=",
          "235: github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "236: github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "",
          "[Removed Lines]",
          "233: github.com/openzipkin/zipkin-go v0.3.0/go.mod h1:4c3sLeE8xjNqehmF5RpAFLPLJxXscc0R4l6Zg0P1tTQ=",
          "",
          "[Added Lines]",
          "239: github.com/openzipkin/zipkin-go v0.4.0/go.mod h1:4c3sLeE8xjNqehmF5RpAFLPLJxXscc0R4l6Zg0P1tTQ=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "241: github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=",
          "242: github.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=",
          "243: github.com/prometheus/client_golang v1.11.0/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=",
          "244: github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "245: github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "246: github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250: github.com/prometheus/client_golang v1.12.1/go.mod h1:3Z9XVyYiZYEO+YQWt3RD2R3jrbd179Rt297l4aS6nDY=",
          "251: github.com/prometheus/client_golang v1.12.2/go.mod h1:3Z9XVyYiZYEO+YQWt3RD2R3jrbd179Rt297l4aS6nDY=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "249: github.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=",
          "250: github.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=",
          "251: github.com/prometheus/common v0.32.1/go.mod h1:vu+V0TpY+O6vW9J44gczi3Ap/oXXR10b+M/gUGO4Hls=",
          "252: github.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=",
          "253: github.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=",
          "254: github.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=",
          "255: github.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=",
          "256: github.com/rabbitmq/amqp091-go v1.1.0/go.mod h1:ogQDLSOACsLPsIq0NpbtiifNZi2YOz0VTJ0kHRghqbM=",
          "257: github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=",
          "258: github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260: github.com/prometheus/common v0.37.0/go.mod h1:phzohg0JFMnBEFGxTDbfu3QyL5GI8gTQJFhYO5B3mfA=",
          "265: github.com/prometheus/procfs v0.7.3/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=",
          "266: github.com/prometheus/procfs v0.8.0/go.mod h1:z7EfXMXOkbkqb9IINtpCn86r/to3BnA0uaxHdg830/4=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "277: github.com/urfave/cli/v2 v2.3.0/go.mod h1:LJmUH05zAU44vOAcrfzZQKsZbVcdbOG8rtL3/XcUArI=",
          "278: github.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=",
          "279: github.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=",
          "281: github.com/valyala/fasttemplate v1.2.1 h1:TVEnxayobAdVkhQfrfes2IzOB6o+z4roRkPF52WA1u4=",
          "282: github.com/valyala/fasttemplate v1.2.1/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=",
          "283: github.com/xdg-go/pbkdf2 v1.0.0/go.mod h1:jrpuAogTd400dnrH08LKmI/xc1MbPOebTwRqcT5RDeI=",
          "",
          "[Removed Lines]",
          "280: github.com/valyala/fasttemplate v1.0.1/go.mod h1:UQGH1tvbgY+Nz5t2n7tXsz52dQxojPUpymEIMZ47gx8=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "302: golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "303: golang.org/x/crypto v0.0.0-20201112155050-0c6587e931a9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "304: golang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "306: golang.org/x/crypto v0.0.0-20210920023735-84f357641f63/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "307: golang.org/x/exp v0.0.0-20180321215751-8460e604b9de/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "308: golang.org/x/exp v0.0.0-20180807140117-3d87b88a115f/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "309: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "",
          "[Removed Lines]",
          "305: golang.org/x/crypto v0.0.0-20210920023735-84f357641f63 h1:kETrAMYZq6WVGPa8IIixL0CaEcIUNi+1WX7grUoi3y8=",
          "",
          "[Added Lines]",
          "316: golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa h1:zuSxTR4o9y82ebqCUJYNGJbGPo6sKVl54f/TVDObg1c=",
          "317: golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "372: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "373: golang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=",
          "374: golang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "377: golang.org/x/net v0.0.0-20210917221730-978cfadd31cf/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "378: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "379: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "380: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "381: golang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "382: golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "383: golang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "384: golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "385: golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "386: golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "[Removed Lines]",
          "375: golang.org/x/net v0.0.0-20210913180222-943fd674d43e/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "376: golang.org/x/net v0.0.0-20210917221730-978cfadd31cf h1:R150MpwJIv1MpS0N/pc+NhTM8ajzvlmxlY5OYsrevXQ=",
          "",
          "[Added Lines]",
          "387: golang.org/x/net v0.0.0-20211015210444-4f30a5c0130f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "388: golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "389: golang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=",
          "390: golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=",
          "391: golang.org/x/net v0.0.0-20220728030405-41545e8bf201 h1:bvOltf3SADAfG05iRml8lAB3qjoEX5RCyN4K6G5v3N0=",
          "392: golang.org/x/net v0.0.0-20220728030405-41545e8bf201/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=",
          "399: golang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "391: golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "392: golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "393: golang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "394: golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "395: golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "396: golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "397: golang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "398: golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "400: golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "401: golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "402: golang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Removed Lines]",
          "399: golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "",
          "[Added Lines]",
          "410: golang.org/x/sync v0.0.0-20220601150217-0de741cfad7f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "405: golang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "406: golang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "407: golang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "409: golang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "410: golang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "411: golang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Removed Lines]",
          "408: golang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "415: golang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "416: golang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "417: golang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "419: golang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "420: golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "421: golang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Removed Lines]",
          "418: golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "433: golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "434: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "435: golang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "436: golang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "437: golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "438: golang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "439: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "440: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "442: golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "443: golang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "445: golang.org/x/sys v0.0.0-20220405052023-b1e9470b6e64/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "446: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "447: golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "448: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "449: golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "",
          "[Removed Lines]",
          "441: golang.org/x/sys v0.0.0-20210910150752-751e447fb3d0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "444: golang.org/x/sys v0.0.0-20220405052023-b1e9470b6e64 h1:D1v9ucDTYBtbz5vNuBbAhIMAGhQhJ6Ym5ah3maMVNX4=",
          "",
          "[Added Lines]",
          "450: golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "458: golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "459: golang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "461: golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "462: golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 h1:WIoqL4EROvwiPdUtaip4VcDdpZ4kha7wBWZrbVKCIZg=",
          "463: golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "465: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "456: golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "457: golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "458: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "460: golang.org/x/time v0.0.0-20201208040808-7e3f01d25324/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "461: golang.org/x/tools v0.0.0-20180525024113-a5b4c53f6e8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "462: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "463: golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "",
          "[Removed Lines]",
          "459: golang.org/x/time v0.0.0-20201208040808-7e3f01d25324 h1:Hir2P/De0WpUhtrKGGjvSb2YxUgyZ7EFOSLIcSSpiwE=",
          "",
          "[Added Lines]",
          "479: golang.org/x/time v0.0.0-20220722155302-e5dcc9cfc0b9 h1:ftMN5LMiBFjbzleLqtoBZk7KdJwhuybIU+FckUHgoyQ=",
          "480: golang.org/x/time v0.0.0-20220722155302-e5dcc9cfc0b9/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "576: google.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=",
          "577: google.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=",
          "578: google.golang.org/grpc v1.41.0/go.mod h1:U3l9uK9J0sini8mHphKoXyaqDA/8VyGnDee1zzIUK6k=",
          "579: google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=",
          "580: google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=",
          "581: google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "599: google.golang.org/grpc v1.48.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "589: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "590: google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=",
          "591: google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=",
          "592: gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=",
          "593: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "594: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "613: google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "",
          "---------------"
        ],
        "server/embed_frontend.go||server/embed_frontend.go": [
          "File: server/embed_frontend.go -> server/embed_frontend.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: var embeddedFiles embed.FS",
          "17:  if err != nil {",
          "18:   panic(err)",
          "19:  }",
          "",
          "[Removed Lines]",
          "15: func getFileSystem() http.FileSystem {",
          "16:  fs, err := fs.Sub(embeddedFiles, \"dist\")",
          "",
          "[Added Lines]",
          "15: func getFileSystem(path string) http.FileSystem {",
          "16:  fs, err := fs.Sub(embeddedFiles, path)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: }",
          "24: func embedFrontend(e *echo.Echo) {",
          "25:  e.Use(middleware.StaticWithConfig(middleware.StaticConfig{",
          "26:   HTML5:      true,",
          "28:  }))",
          "29: }",
          "",
          "[Removed Lines]",
          "27:   Filesystem: getFileSystem(),",
          "",
          "[Added Lines]",
          "29:   Filesystem: getFileSystem(\"dist\"),",
          "30:  }))",
          "32:  g := e.Group(\"assets\")",
          "33:  g.Use(func(next echo.HandlerFunc) echo.HandlerFunc {",
          "34:   return func(c echo.Context) error {",
          "35:    c.Response().Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "36:    return next(c)",
          "37:   }",
          "38:  })",
          "39:  g.Use(middleware.StaticWithConfig(middleware.StaticConfig{",
          "40:   HTML5:      true,",
          "41:   Filesystem: getFileSystem(\"dist/assets\"),",
          "",
          "---------------"
        ],
        "server/resource.go||server/resource.go": [
          "File: server/resource.go -> server/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"encoding/json\"",
          "5:  \"fmt\"",
          "6:  \"io\"",
          "7:  \"net/http\"",
          "8:  \"strconv\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"html\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:   return c.JSON(http.StatusOK, true)",
          "169:  })",
          "170: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173: func (s *Server) registerResourcePublicRoutes(g *echo.Group) {",
          "174:  g.GET(\"/r/:resourceId/:filename\", func(c echo.Context) error {",
          "175:   ctx := c.Request().Context()",
          "176:   resourceID, err := strconv.Atoi(c.Param(\"resourceId\"))",
          "177:   if err != nil {",
          "178:    return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf(\"ID is not a number: %s\", c.Param(\"resourceId\"))).SetInternal(err)",
          "179:   }",
          "181:   filename := html.UnescapeString(c.Param(\"filename\"))",
          "182:   resourceFind := &api.ResourceFind{",
          "183:    ID:       &resourceID,",
          "184:    Filename: &filename,",
          "185:   }",
          "186:   resource, err := s.Store.FindResource(ctx, resourceFind)",
          "187:   if err != nil {",
          "188:    return echo.NewHTTPError(http.StatusInternalServerError, fmt.Sprintf(\"Failed to fetch resource ID: %v\", resourceID)).SetInternal(err)",
          "189:   }",
          "191:   c.Response().Writer.WriteHeader(http.StatusOK)",
          "192:   c.Response().Writer.Header().Set(\"Content-Type\", resource.Type)",
          "193:   c.Response().Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "194:   if _, err := c.Response().Writer.Write(resource.Blob); err != nil {",
          "195:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to write response\").SetInternal(err)",
          "196:   }",
          "198:   return nil",
          "199:  })",
          "200: }",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:   Profile: profile,",
          "57:  }",
          "63:  apiGroup := e.Group(\"/api\")",
          "64:  apiGroup.Use(func(next echo.HandlerFunc) echo.HandlerFunc {",
          "",
          "[Removed Lines]",
          "60:  webhookGroup := e.Group(\"/h\")",
          "61:  s.registerWebhookRoutes(webhookGroup)",
          "",
          "[Added Lines]",
          "59:  publicRouteGroup := e.Group(\"/h\")",
          "60:  s.registerResourcePublicRoutes(publicRouteGroup)",
          "",
          "---------------"
        ],
        "server/webhook.go||server/webhook.go": [
          "File: server/webhook.go -> server/webhook.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "677750ef51079def6f18899128db42daa38dd380",
      "candidate_info": {
        "commit_hash": "677750ef51079def6f18899128db42daa38dd380",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/677750ef51079def6f18899128db42daa38dd380",
        "files": [
          "Dockerfile",
          "server/metric_collector.go",
          "server/resource.go",
          "server/version/version.go",
          "store/db/db.go"
        ],
        "message": "chore: upgrade version to `0.10.1` (#949)",
        "before_after_code_files": [
          "server/metric_collector.go||server/metric_collector.go",
          "server/resource.go||server/resource.go",
          "server/version/version.go||server/version/version.go",
          "store/db/db.go||store/db/db.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/resource.go||server/resource.go"
          ],
          "candidate": [
            "server/resource.go||server/resource.go"
          ]
        }
      },
      "candidate_diff": {
        "server/metric_collector.go||server/metric_collector.go": [
          "File: server/metric_collector.go -> server/metric_collector.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  mc := &MetricCollector{",
          "28:   collector: c,",
          "29:   ID:        s.ID,",
          "31:   Profile:   s.Profile,",
          "32:  }",
          "33:  s.Collector = mc",
          "",
          "[Removed Lines]",
          "30:   Enabled:   true,",
          "",
          "[Added Lines]",
          "30:   Enabled:   false,",
          "",
          "---------------"
        ],
        "server/resource.go||server/resource.go": [
          "File: server/resource.go -> server/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:    return echo.NewHTTPError(http.StatusInternalServerError, fmt.Sprintf(\"Failed to fetch resource ID: %v\", resourceID)).SetInternal(err)",
          "269:   }",
          "273:    resourceType = echo.MIMETextPlain",
          "274:   }",
          "275:   c.Response().Writer.Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "",
          "[Removed Lines]",
          "271:   resourceType := resource.Type",
          "272:   if strings.HasPrefix(resource.Type, \"text\") || strings.HasPrefix(resource.Type, \"application\") {",
          "",
          "[Added Lines]",
          "271:   resourceType := strings.ToLower(resource.Type)",
          "272:   if strings.HasPrefix(resourceType, \"text\") || strings.HasPrefix(resourceType, \"application\") {",
          "",
          "---------------"
        ],
        "server/version/version.go||server/version/version.go": [
          "File: server/version/version.go -> server/version/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: func GetCurrentVersion(mode string) string {",
          "18:  if mode == \"dev\" {",
          "",
          "[Removed Lines]",
          "12: var Version = \"0.10.0\"",
          "15: var DevVersion = \"0.10.0\"",
          "",
          "[Added Lines]",
          "12: var Version = \"0.10.1\"",
          "15: var DevVersion = \"0.10.1\"",
          "",
          "---------------"
        ],
        "store/db/db.go||store/db/db.go": [
          "File: store/db/db.go -> store/db/db.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:    return fmt.Errorf(\"failed to find migration history, err: %w\", err)",
          "74:   }",
          "75:   if len(migrationHistoryList) == 0 {",
          "77:     Version: currentVersion,",
          "79:     return fmt.Errorf(\"failed to upsert migration history, err: %w\", err)",
          "80:    }",
          "81:    return nil",
          "82:   }",
          "83:   migrationHistoryVersionList := []string{}",
          "84:   for _, migrationHistory := range migrationHistoryList {",
          "85:    migrationHistoryVersionList = append(migrationHistoryVersionList, migrationHistory.Version)",
          "",
          "[Removed Lines]",
          "76:    if _, err = db.UpsertMigrationHistory(ctx, &MigrationHistoryUpsert{",
          "78:    }); err != nil {",
          "",
          "[Added Lines]",
          "76:    _, err := db.UpsertMigrationHistory(ctx, &MigrationHistoryUpsert{",
          "78:    })",
          "79:    if err != nil {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "013ded1e04d61dd9a86357953bdcbd7fd0080f96",
      "candidate_info": {
        "commit_hash": "013ded1e04d61dd9a86357953bdcbd7fd0080f96",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/013ded1e04d61dd9a86357953bdcbd7fd0080f96",
        "files": [
          "server/acl.go",
          "server/http_getter.go",
          "server/resource.go",
          "server/server.go"
        ],
        "message": "chore: code clean (#516)",
        "before_after_code_files": [
          "server/acl.go||server/acl.go",
          "server/http_getter.go||server/http_getter.go",
          "server/resource.go||server/resource.go",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/resource.go||server/resource.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/resource.go||server/resource.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "server/acl.go||server/acl.go": [
          "File: server/acl.go -> server/acl.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:    return next(c)",
          "106:   }",
          "109:    if _, err := strconv.Atoi(c.QueryParam(\"creatorId\")); err == nil {",
          "110:     return next(c)",
          "111:    }",
          "",
          "[Removed Lines]",
          "108:   if common.HasPrefixes(path, \"/api/memo\", \"/api/tag\", \"/api/shortcut\", \"/api/memo/stats\") && c.Request().Method == http.MethodGet {",
          "",
          "[Added Lines]",
          "108:   if common.HasPrefixes(path, \"/api/memo\", \"/api/tag\", \"/api/shortcut\") && c.Request().Method == http.MethodGet {",
          "",
          "---------------"
        ],
        "server/http_getter.go||server/http_getter.go": [
          "File: server/http_getter.go -> server/http_getter.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  metric \"github.com/usememos/memos/plugin/metrics\"",
          "12: )",
          "15:  g.GET(\"/get/httpmeta\", func(c echo.Context) error {",
          "16:   ctx := c.Request().Context()",
          "17:   urlStr := c.QueryParam(\"url\")",
          "",
          "[Removed Lines]",
          "14: func (s *Server) registerCrawlerPublicRoutes(g *echo.Group) {",
          "",
          "[Added Lines]",
          "14: func (s *Server) registerGetterPublicRoutes(g *echo.Group) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   image, err := getter.GetImage(urlStr)",
          "53:   if err != nil {",
          "55:   }",
          "56:   s.Collector.Collect(ctx, &metric.Metric{",
          "57:    Name: \"getter used\",",
          "",
          "[Removed Lines]",
          "54:    return echo.NewHTTPError(http.StatusNotAcceptable, fmt.Sprintf(\"Failed to get image url: %s\", urlStr)).SetInternal(err)",
          "",
          "[Added Lines]",
          "55:    return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf(\"Failed to get image url: %s\", urlStr)).SetInternal(err)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:   c.Response().Writer.WriteHeader(http.StatusOK)",
          "64:   c.Response().Writer.Header().Set(\"Content-Type\", image.Mediatype)",
          "65:   if _, err := c.Response().Writer.Write(image.Blob); err != nil {",
          "66:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to write image blob\").SetInternal(err)",
          "67:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:   c.Response().Writer.Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "",
          "---------------"
        ],
        "server/resource.go||server/resource.go": [
          "File: server/resource.go -> server/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:   c.Response().Writer.WriteHeader(http.StatusOK)",
          "264:   c.Response().Writer.Header().Set(\"Content-Type\", resource.Type)",
          "266:   if _, err := c.Response().Writer.Write(resource.Blob); err != nil {",
          "267:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to write response\").SetInternal(err)",
          "268:   }",
          "270:   return nil",
          "271:  })",
          "272: }",
          "",
          "[Removed Lines]",
          "265:   c.Response().Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "",
          "[Added Lines]",
          "265:   c.Response().Writer.Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  publicGroup := e.Group(\"/o\")",
          "68:  s.registerResourcePublicRoutes(publicGroup)",
          "71:  apiGroup := e.Group(\"/api\")",
          "72:  apiGroup.Use(func(next echo.HandlerFunc) echo.HandlerFunc {",
          "",
          "[Removed Lines]",
          "69:  s.registerCrawlerPublicRoutes(publicGroup)",
          "",
          "[Added Lines]",
          "69:  s.registerGetterPublicRoutes(publicGroup)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d14047c73aa8843cc65210a41b2dd5e217dd40a",
      "candidate_info": {
        "commit_hash": "2d14047c73aa8843cc65210a41b2dd5e217dd40a",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/2d14047c73aa8843cc65210a41b2dd5e217dd40a",
        "files": [
          "server/resource.go"
        ],
        "message": "fix: pdf resource preview (#1008)",
        "before_after_code_files": [
          "server/resource.go||server/resource.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/resource.go||server/resource.go"
          ],
          "candidate": [
            "server/resource.go||server/resource.go"
          ]
        }
      },
      "candidate_diff": {
        "server/resource.go||server/resource.go": [
          "File: server/resource.go -> server/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "300:   }",
          "302:   resourceType := strings.ToLower(resource.Type)",
          "304:    resourceType = echo.MIMETextPlain",
          "305:   }",
          "306:   c.Response().Writer.Header().Set(echo.HeaderCacheControl, \"max-age=31536000, immutable\")",
          "",
          "[Removed Lines]",
          "303:   if strings.HasPrefix(resourceType, \"text\") || strings.HasPrefix(resourceType, \"application\") {",
          "",
          "[Added Lines]",
          "303:   if strings.HasPrefix(resourceType, \"text\") || (strings.HasPrefix(resourceType, \"application\") && resourceType != \"application/pdf\") {",
          "",
          "---------------"
        ]
      }
    }
  ]
}