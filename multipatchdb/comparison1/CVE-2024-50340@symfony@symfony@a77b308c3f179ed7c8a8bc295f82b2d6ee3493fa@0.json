{
  "cve_id": "CVE-2024-50340",
  "cve_desc": "symfony/runtime is a module for the Symphony PHP framework which enables decoupling PHP applications from global state. When the `register_argv_argc` php directive is set to `on` , and users call any URL with a special crafted query string, they are able to change the environment or debug mode used by the kernel when handling the request. As of versions 5.4.46, 6.4.14, and 7.1.7 the `SymfonyRuntime` now ignores the `argv` values for non-SAPI PHP runtimes. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "symfony/symfony",
  "patch_hash": "a77b308c3f179ed7c8a8bc295f82b2d6ee3493fa",
  "patch_info": {
    "commit_hash": "a77b308c3f179ed7c8a8bc295f82b2d6ee3493fa",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/a77b308c3f179ed7c8a8bc295f82b2d6ee3493fa",
    "files": [
      "src/Symfony/Component/Runtime/SymfonyRuntime.php",
      "src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
      "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
      "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt"
    ],
    "message": "Do not read from argv on non-CLI SAPIs",
    "before_after_code_files": [
      "src/Symfony/Component/Runtime/SymfonyRuntime.php||src/Symfony/Component/Runtime/SymfonyRuntime.php",
      "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
      "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
      "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt"
    ]
  },
  "patch_diff": {
    "src/Symfony/Component/Runtime/SymfonyRuntime.php||src/Symfony/Component/Runtime/SymfonyRuntime.php": [
      "File: src/Symfony/Component/Runtime/SymfonyRuntime.php -> src/Symfony/Component/Runtime/SymfonyRuntime.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "96:         if (isset($options['env'])) {",
      "97:             $_SERVER[$envKey] = $options['env'];",
      "99:             $this->options = $options;",
      "100:             $this->getInput();",
      "101:         }",
      "",
      "[Removed Lines]",
      "98:         } elseif (isset($_SERVER['argv']) && class_exists(ArgvInput::class)) {",
      "",
      "[Added Lines]",
      "98:         } elseif (empty($_GET) && isset($_SERVER['argv']) && class_exists(ArgvInput::class)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "217:     private function getInput(): ArgvInput",
      "218:     {",
      "219:         if (null !== $this->input) {",
      "220:             return $this->input;",
      "221:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "219:         if (!empty($_GET) && filter_var(ini_get('register_argc_argv'), \\FILTER_VALIDATE_BOOL)) {",
      "220:             throw new \\Exception('CLI applications cannot be run safely on non-CLI SAPIs with register_argc_argv=On.');",
      "221:         }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php": [
      "File: src/Symfony/Component/Runtime/Tests/phpt/kernel.php -> src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: class TestKernel implements HttpKernelInterface",
      "19: {",
      "20:     private $var;",
      "23:     {",
      "24:         $this->var = $var;",
      "25:     }",
      "27:     public function handle(Request $request, $type = self::MASTER_REQUEST, $catch = true): Response",
      "28:     {",
      "30:     }",
      "31: }",
      "33: return function (array $context) {",
      "35: };",
      "",
      "[Removed Lines]",
      "22:     public function __construct(string $var)",
      "29:         return new Response('OK Kernel '.$this->var);",
      "34:     return new TestKernel($context['SOME_VAR']);",
      "",
      "[Added Lines]",
      "20:     private $env;",
      "23:     public function __construct(string $env, string $var)",
      "25:         $this->env = $env;",
      "31:         return new Response('OK Kernel (env='.$this->env.') '.$this->var);",
      "36:     return new TestKernel($context['APP_ENV'], $context['SOME_VAR']);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt": [
      "File: src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt -> src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: ?>",
      "11: --EXPECTF--",
      "",
      "[Removed Lines]",
      "12: OK Kernel foo_bar",
      "",
      "[Added Lines]",
      "12: OK Kernel (env=dev) foo_bar",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt": [
      "File: src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt -> src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Test HttpKernelInterface with register_argc_argv=1",
      "3: --INI--",
      "4: display_errors=1",
      "5: register_argc_argv=1",
      "6: --FILE--",
      "7: <?php",
      "10: $_GET['-e_test'] = '';",
      "11: $_SERVER['argc'] = 1;",
      "12: $_SERVER['argv'] = [' ', '-e', 'test'];",
      "14: require $_SERVER['SCRIPT_FILENAME'] = __DIR__.'/kernel.php';",
      "16: ?>",
      "17: --EXPECTF--",
      "18: OK Kernel (env=dev) foo_bar",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "236222a3a96499d02af3062881a1433881ea96b8",
      "candidate_info": {
        "commit_hash": "236222a3a96499d02af3062881a1433881ea96b8",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/236222a3a96499d02af3062881a1433881ea96b8",
        "files": [
          "src/Symfony/Component/HttpClient/NoPrivateNetworkHttpClient.php",
          "src/Symfony/Component/HttpClient/Tests/NoPrivateNetworkHttpClientTest.php",
          "src/Symfony/Component/HttpFoundation/Request.php",
          "src/Symfony/Component/HttpFoundation/Tests/RequestTest.php",
          "src/Symfony/Component/Process/ExecutableFinder.php",
          "src/Symfony/Component/Process/PhpExecutableFinder.php",
          "src/Symfony/Component/Process/Process.php",
          "src/Symfony/Component/Runtime/SymfonyRuntime.php",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel-loop.phpt",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt"
        ],
        "message": "Merge branch '5.4' into 6.4\n\n* 5.4:\n  Do not read from argv on non-CLI SAPIs\n  [Process] Use %PATH% before %CD% to load the shell on Windows\n  [HttpFoundation] Reject URIs that contain invalid characters\n  [HttpClient] Filter private IPs before connecting when Host == IP",
        "before_after_code_files": [
          "src/Symfony/Component/HttpClient/NoPrivateNetworkHttpClient.php||src/Symfony/Component/HttpClient/NoPrivateNetworkHttpClient.php",
          "src/Symfony/Component/HttpClient/Tests/NoPrivateNetworkHttpClientTest.php||src/Symfony/Component/HttpClient/Tests/NoPrivateNetworkHttpClientTest.php",
          "src/Symfony/Component/HttpFoundation/Request.php||src/Symfony/Component/HttpFoundation/Request.php",
          "src/Symfony/Component/HttpFoundation/Tests/RequestTest.php||src/Symfony/Component/HttpFoundation/Tests/RequestTest.php",
          "src/Symfony/Component/Process/ExecutableFinder.php||src/Symfony/Component/Process/ExecutableFinder.php",
          "src/Symfony/Component/Process/PhpExecutableFinder.php||src/Symfony/Component/Process/PhpExecutableFinder.php",
          "src/Symfony/Component/Process/Process.php||src/Symfony/Component/Process/Process.php",
          "src/Symfony/Component/Runtime/SymfonyRuntime.php||src/Symfony/Component/Runtime/SymfonyRuntime.php",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel-loop.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel-loop.phpt",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
          "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Runtime/SymfonyRuntime.php||src/Symfony/Component/Runtime/SymfonyRuntime.php",
            "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
            "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
            "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt"
          ],
          "candidate": [
            "src/Symfony/Component/Runtime/SymfonyRuntime.php||src/Symfony/Component/Runtime/SymfonyRuntime.php",
            "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
            "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
            "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/HttpClient/NoPrivateNetworkHttpClient.php||src/Symfony/Component/HttpClient/NoPrivateNetworkHttpClient.php": [
          "File: src/Symfony/Component/HttpClient/NoPrivateNetworkHttpClient.php -> src/Symfony/Component/HttpClient/NoPrivateNetworkHttpClient.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         $subnets = $this->subnets;",
          "60:             static $lastPrimaryIp = '';",
          "61:             if ($info['primary_ip'] !== $lastPrimaryIp) {",
          "62:                 if ($info['primary_ip'] && IpUtils::checkIp($info['primary_ip'], $subnets ?? IpUtils::PRIVATE_SUBNETS)) {",
          "63:                     throw new TransportException(sprintf('IP \"%s\" is blocked for \"%s\".', $info['primary_ip'], $info['url']));",
          "",
          "[Removed Lines]",
          "59:         $options['on_progress'] = function (int $dlNow, int $dlSize, array $info) use ($onProgress, $subnets): void {",
          "",
          "[Added Lines]",
          "59:         $options['on_progress'] = static function (int $dlNow, int $dlSize, array $info) use ($onProgress, $subnets): void {",
          "60:             static $lastUrl = '';",
          "63:             if ($info['url'] !== $lastUrl) {",
          "64:                 $host = trim(parse_url($info['url'], PHP_URL_HOST) ?: '', '[]');",
          "66:                 if ($host && IpUtils::checkIp($host, $subnets ?? IpUtils::PRIVATE_SUBNETS)) {",
          "67:                     throw new TransportException(sprintf('Host \"%s\" is blocked for \"%s\".', $host, $info['url']));",
          "68:                 }",
          "70:                 $lastUrl = $info['url'];",
          "71:             }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/HttpClient/Tests/NoPrivateNetworkHttpClientTest.php||src/Symfony/Component/HttpClient/Tests/NoPrivateNetworkHttpClientTest.php": [
          "File: src/Symfony/Component/HttpClient/Tests/NoPrivateNetworkHttpClientTest.php -> src/Symfony/Component/HttpClient/Tests/NoPrivateNetworkHttpClientTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:     {",
          "70:         $content = 'foo';",
          "73:         if ($mustThrow) {",
          "74:             $this->expectException(TransportException::class);",
          "",
          "[Removed Lines]",
          "68:     public function testExclude(string $ipAddr, $subnets, bool $mustThrow)",
          "71:         $url = sprintf('http://%s/', 0 < substr_count($ipAddr, ':') ? sprintf('[%s]', $ipAddr) : $ipAddr);",
          "",
          "[Added Lines]",
          "68:     public function testExcludeByIp(string $ipAddr, $subnets, bool $mustThrow)",
          "71:         $url = sprintf('http://%s/', strtr($ipAddr, '.:', '--'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:         }",
          "86:     }",
          "88:     public function testCustomOnProgressCallback()",
          "89:     {",
          "90:         $ipAddr = '104.26.14.6';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:     public function testExcludeByHost(string $ipAddr, $subnets, bool $mustThrow)",
          "92:     {",
          "93:         $content = 'foo';",
          "94:         $url = sprintf('http://%s/', str_contains($ipAddr, ':') ? sprintf('[%s]', $ipAddr) : $ipAddr);",
          "96:         if ($mustThrow) {",
          "97:             $this->expectException(TransportException::class);",
          "98:             $this->expectExceptionMessage(sprintf('Host \"%s\" is blocked for \"%s\".', $ipAddr, $url));",
          "99:         }",
          "101:         $previousHttpClient = $this->getHttpClientMock($url, $ipAddr, $content);",
          "102:         $client = new NoPrivateNetworkHttpClient($previousHttpClient, $subnets);",
          "103:         $response = $client->request('GET', $url);",
          "105:         if (!$mustThrow) {",
          "106:             $this->assertEquals($content, $response->getContent());",
          "107:             $this->assertEquals(200, $response->getStatusCode());",
          "108:         }",
          "109:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/HttpFoundation/Request.php||src/Symfony/Component/HttpFoundation/Request.php": [
          "File: src/Symfony/Component/HttpFoundation/Request.php -> src/Symfony/Component/HttpFoundation/Request.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\HttpFoundation;",
          "14: use Symfony\\Component\\HttpFoundation\\Exception\\ConflictingHeadersException;",
          "15: use Symfony\\Component\\HttpFoundation\\Exception\\JsonException;",
          "16: use Symfony\\Component\\HttpFoundation\\Exception\\SessionNotFoundException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use Symfony\\Component\\HttpFoundation\\Exception\\BadRequestException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "354:             unset($components['fragment']);",
          "355:         }",
          "357:         if (isset($components['host'])) {",
          "358:             $server['SERVER_NAME'] = $components['host'];",
          "359:             $server['HTTP_HOST'] = $components['host'];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "360:         if (false === $components) {",
          "361:             throw new BadRequestException('Invalid URI.');",
          "362:         }",
          "364:         if (false !== ($i = strpos($uri, '\\\\')) && $i < strcspn($uri, '?#')) {",
          "365:             throw new BadRequestException('Invalid URI: A URI cannot contain a backslash.');",
          "366:         }",
          "367:         if (\\strlen($uri) !== strcspn($uri, \"\\r\\n\\t\")) {",
          "368:             throw new BadRequestException('Invalid URI: A URI cannot contain CR/LF/TAB characters.');",
          "369:         }",
          "370:         if ('' !== $uri && (\\ord($uri[0]) <= 32 || \\ord($uri[-1]) <= 32)) {",
          "371:             throw new BadRequestException('Invalid URI: A URI must not start nor end with ASCII control characters or spaces.');",
          "372:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/HttpFoundation/Tests/RequestTest.php||src/Symfony/Component/HttpFoundation/Tests/RequestTest.php": [
          "File: src/Symfony/Component/HttpFoundation/Tests/RequestTest.php -> src/Symfony/Component/HttpFoundation/Tests/RequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use PHPUnit\\Framework\\TestCase;",
          "15: use Symfony\\Bridge\\PhpUnit\\ExpectDeprecationTrait;",
          "16: use Symfony\\Component\\HttpFoundation\\Exception\\ConflictingHeadersException;",
          "17: use Symfony\\Component\\HttpFoundation\\Exception\\JsonException;",
          "18: use Symfony\\Component\\HttpFoundation\\Exception\\SuspiciousOperationException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use Symfony\\Component\\HttpFoundation\\Exception\\BadRequestException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "305:         $this->assertTrue($request->isSecure());",
          "310:         $this->assertEquals('http://test.com/foo', $request->getUri());",
          "311:     }",
          "",
          "[Removed Lines]",
          "308:         $request = Request::create('http://test.com/foo#bar');",
          "309:         $request->server->set('REQUEST_URI', 'http://test.com/foo#bar');",
          "",
          "[Added Lines]",
          "309:         $request = Request::create('http://test.com/foo#bar\\\\baz');",
          "310:         $request->server->set('REQUEST_URI', 'http://test.com/foo#bar\\\\baz');",
          "313:         $request = Request::create('http://test.com/foo?bar=f\\\\o');",
          "314:         $this->assertEquals('http://test.com/foo?bar=f%5Co', $request->getUri());",
          "315:         $this->assertEquals('/foo', $request->getPathInfo());",
          "316:         $this->assertEquals('bar=f%5Co', $request->getQueryString());",
          "317:     }",
          "331:     public function testCreateWithBadRequestUri(string $uri)",
          "332:     {",
          "333:         $this->expectException(BadRequestException::class);",
          "334:         $this->expectExceptionMessage('Invalid URI');",
          "336:         Request::create($uri);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Process/ExecutableFinder.php||src/Symfony/Component/Process/ExecutableFinder.php": [
          "File: src/Symfony/Component/Process/ExecutableFinder.php -> src/Symfony/Component/Process/ExecutableFinder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: class ExecutableFinder",
          "21: {",
          "23:     private const CMD_BUILTINS = [",
          "24:         'assoc', 'break', 'call', 'cd', 'chdir', 'cls', 'color', 'copy', 'date',",
          "25:         'del', 'dir', 'echo', 'endlocal', 'erase', 'exit', 'for', 'ftype', 'goto',",
          "",
          "[Removed Lines]",
          "22:     private array $suffixes = ['.exe', '.bat', '.cmd', '.com'];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:         'setlocal', 'shift', 'start', 'time', 'title', 'type', 'ver', 'vol',",
          "29:     ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:     private array $suffixes = [];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:             $extraDirs",
          "68:         );",
          "71:         if ('\\\\' === \\DIRECTORY_SEPARATOR) {",
          "72:             $pathExt = getenv('PATHEXT');",
          "74:         }",
          "75:         foreach ($suffixes as $suffix) {",
          "76:             foreach ($dirs as $dir) {",
          "77:                 if ('' === $dir) {",
          "",
          "[Removed Lines]",
          "70:         $suffixes = [''];",
          "73:             $suffixes = array_merge($pathExt ? explode(\\PATH_SEPARATOR, $pathExt) : $this->suffixes, $suffixes);",
          "",
          "[Added Lines]",
          "71:         $suffixes = [];",
          "74:             $suffixes = $this->suffixes;",
          "75:             $suffixes = array_merge($suffixes, $pathExt ? explode(\\PATH_SEPARATOR, $pathExt) : ['.exe', '.bat', '.cmd', '.com']);",
          "77:         $suffixes = '' !== pathinfo($name, PATHINFO_EXTENSION) ? array_merge([''], $suffixes) : array_merge($suffixes, ['']);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "87:             }",
          "88:         }",
          "91:             return $default;",
          "92:         }",
          "97:         if (($executablePath = substr($execResult, 0, strpos($execResult, \\PHP_EOL) ?: null)) && @is_executable($executablePath)) {",
          "98:             return $executablePath;",
          "",
          "[Removed Lines]",
          "90:         if (!\\function_exists('exec') || \\strlen($name) !== strcspn($name, '/'.\\DIRECTORY_SEPARATOR)) {",
          "94:         $command = '\\\\' === \\DIRECTORY_SEPARATOR ? 'where %s 2> NUL' : 'command -v -- %s';",
          "95:         $execResult = exec(\\sprintf($command, escapeshellarg($name)));",
          "",
          "[Added Lines]",
          "93:         if ('\\\\' === \\DIRECTORY_SEPARATOR || !\\function_exists('exec') || \\strlen($name) !== strcspn($name, '/'.\\DIRECTORY_SEPARATOR)) {",
          "97:         $execResult = exec('command -v -- '.escapeshellarg($name));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Process/PhpExecutableFinder.php||src/Symfony/Component/Process/PhpExecutableFinder.php": [
          "File: src/Symfony/Component/Process/PhpExecutableFinder.php -> src/Symfony/Component/Process/PhpExecutableFinder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     public function find(bool $includeArgs = true): string|false",
          "33:     {",
          "34:         if ($php = getenv('PHP_BINARY')) {",
          "48:             }",
          "50:             if (@is_dir($php)) {",
          "",
          "[Removed Lines]",
          "35:             if (!is_executable($php)) {",
          "36:                 if (!\\function_exists('exec') || \\strlen($php) !== strcspn($php, '/'.\\DIRECTORY_SEPARATOR)) {",
          "37:                     return false;",
          "38:                 }",
          "40:                 $command = '\\\\' === \\DIRECTORY_SEPARATOR ? 'where %s 2> NUL' : 'command -v -- %s';",
          "41:                 $execResult = exec(\\sprintf($command, escapeshellarg($php)));",
          "42:                 if (!$php = substr($execResult, 0, strpos($execResult, \\PHP_EOL) ?: null)) {",
          "43:                     return false;",
          "44:                 }",
          "45:                 if (!is_executable($php)) {",
          "46:                     return false;",
          "47:                 }",
          "",
          "[Added Lines]",
          "35:             if (!is_executable($php) && !$php = $this->executableFinder->find($php)) {",
          "36:                 return false;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Process/Process.php||src/Symfony/Component/Process/Process.php": [
          "File: src/Symfony/Component/Process/Process.php -> src/Symfony/Component/Process/Process.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1536:             $cmd",
          "1537:         );",
          "1540:         foreach ($this->processPipes->getFiles() as $offset => $filename) {",
          "1541:             $cmd .= ' '.$offset.'>\"'.$filename.'\"';",
          "1542:         }",
          "",
          "[Removed Lines]",
          "1539:         $cmd = 'cmd /V:ON /E:ON /D /C ('.str_replace(\"\\n\", ' ', $cmd).')';",
          "",
          "[Added Lines]",
          "1539:         static $comSpec;",
          "1541:         if (!$comSpec && $comSpec = (new ExecutableFinder())->find('cmd.exe')) {",
          "1543:             $comSpec = '\"'.preg_replace('{(\\\\\\\\*+)\"}', '$1$1\\\"', $comSpec) .'\"';",
          "1544:         }",
          "1546:         $cmd = ($comSpec ?? 'cmd').' /V:ON /E:ON /D /C ('.str_replace(\"\\n\", ' ', $cmd).')';",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Runtime/SymfonyRuntime.php||src/Symfony/Component/Runtime/SymfonyRuntime.php": [
          "File: src/Symfony/Component/Runtime/SymfonyRuntime.php -> src/Symfony/Component/Runtime/SymfonyRuntime.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:         if (isset($options['env'])) {",
          "97:             $_SERVER[$envKey] = $options['env'];",
          "99:             $this->options = $options;",
          "100:             $this->getInput();",
          "101:         }",
          "",
          "[Removed Lines]",
          "98:         } elseif (isset($_SERVER['argv']) && class_exists(ArgvInput::class)) {",
          "",
          "[Added Lines]",
          "98:         } elseif (empty($_GET) && isset($_SERVER['argv']) && class_exists(ArgvInput::class)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:     private function getInput(): ArgvInput",
          "205:     {",
          "206:         if (isset($this->input)) {",
          "207:             return $this->input;",
          "208:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206:         if (!empty($_GET) && filter_var(ini_get('register_argc_argv'), \\FILTER_VALIDATE_BOOL)) {",
          "207:             throw new \\Exception('CLI applications cannot be run safely on non-CLI SAPIs with register_argc_argv=On.');",
          "208:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Runtime/Tests/phpt/kernel-loop.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel-loop.phpt": [
          "File: src/Symfony/Component/Runtime/Tests/phpt/kernel-loop.phpt -> src/Symfony/Component/Runtime/Tests/phpt/kernel-loop.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: ?>",
          "13: --EXPECTF--",
          "16: 0",
          "",
          "[Removed Lines]",
          "14: OK Kernel foo_bar",
          "15: OK Kernel foo_bar",
          "",
          "[Added Lines]",
          "14: OK Kernel (env=dev) foo_bar",
          "15: OK Kernel (env=dev) foo_bar",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php": [
          "File: src/Symfony/Component/Runtime/Tests/phpt/kernel.php -> src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: class TestKernel implements HttpKernelInterface",
          "19: {",
          "20:     private string $var;",
          "23:     {",
          "24:         $this->var = $var;",
          "25:     }",
          "27:     public function handle(Request $request, $type = self::MAIN_REQUEST, $catch = true): Response",
          "28:     {",
          "30:     }",
          "31: }",
          "",
          "[Removed Lines]",
          "22:     public function __construct(string $var)",
          "29:         return new Response('OK Kernel '.$this->var);",
          "33: return fn (array $context) => new TestKernel($context['SOME_VAR']);",
          "",
          "[Added Lines]",
          "20:     private string $env;",
          "23:     public function __construct(string $env, string $var)",
          "25:         $this->env = $env;",
          "31:         return new Response('OK Kernel (env='.$this->env.') '.$this->var);",
          "35: return fn (array $context) => new TestKernel($context['APP_ENV'], $context['SOME_VAR']);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt": [
          "File: src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt -> src/Symfony/Component/Runtime/Tests/phpt/kernel.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: ?>",
          "11: --EXPECTF--",
          "",
          "[Removed Lines]",
          "12: OK Kernel foo_bar",
          "",
          "[Added Lines]",
          "12: OK Kernel (env=dev) foo_bar",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt||src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt": [
          "File: src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt -> src/Symfony/Component/Runtime/Tests/phpt/kernel_register_argc_argv.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Test HttpKernelInterface with register_argc_argv=1",
          "3: --INI--",
          "4: display_errors=1",
          "5: register_argc_argv=1",
          "6: --FILE--",
          "7: <?php",
          "10: $_GET['-e_test'] = '';",
          "11: $_SERVER['argc'] = 1;",
          "12: $_SERVER['argv'] = [' ', '-e', 'test'];",
          "14: require $_SERVER['SCRIPT_FILENAME'] = __DIR__.'/kernel.php';",
          "16: ?>",
          "17: --EXPECTF--",
          "18: OK Kernel (env=dev) foo_bar",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a900ca8a4a74ef2a51cceab19db8c9e1bdfdf755",
      "candidate_info": {
        "commit_hash": "a900ca8a4a74ef2a51cceab19db8c9e1bdfdf755",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/a900ca8a4a74ef2a51cceab19db8c9e1bdfdf755",
        "files": [
          "src/Symfony/Component/Runtime/Tests/phpt/kernel.php"
        ],
        "message": "chore: PHP CS Fixer fixes",
        "before_after_code_files": [
          "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php"
          ],
          "candidate": [
            "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/Runtime/Tests/phpt/kernel.php||src/Symfony/Component/Runtime/Tests/phpt/kernel.php": [
          "File: src/Symfony/Component/Runtime/Tests/phpt/kernel.php -> src/Symfony/Component/Runtime/Tests/phpt/kernel.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: require __DIR__.'/autoload.php';",
          "20:     private string $env;",
          "21:     private string $var;",
          "",
          "[Removed Lines]",
          "18: class TestKernel implements HttpKernelInterface",
          "19: {",
          "",
          "[Added Lines]",
          "18: return fn (array $context) => new class($context['APP_ENV'], $context['SOME_VAR']) implements HttpKernelInterface {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:     {",
          "31:         return new Response('OK Kernel (env='.$this->env.') '.$this->var);",
          "32:     }",
          "",
          "[Removed Lines]",
          "33: }",
          "35: return fn (array $context) => new TestKernel($context['APP_ENV'], $context['SOME_VAR']);",
          "",
          "[Added Lines]",
          "32: };",
          "",
          "---------------"
        ]
      }
    }
  ]
}