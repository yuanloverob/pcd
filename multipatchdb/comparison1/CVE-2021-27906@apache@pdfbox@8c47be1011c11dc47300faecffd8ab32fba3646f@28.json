{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c0d0324a8d26610ee99298e008962187aa565b0f",
      "candidate_info": {
        "commit_hash": "c0d0324a8d26610ee99298e008962187aa565b0f",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c0d0324a8d26610ee99298e008962187aa565b0f",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/util/autodetect/UnixFontDirFinder.java"
        ],
        "message": "PDFBOX-5154: add path for CentOS\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888484 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/util/autodetect/UnixFontDirFinder.java||fontbox/src/main/java/org/apache/fontbox/util/autodetect/UnixFontDirFinder.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/util/autodetect/UnixFontDirFinder.java||fontbox/src/main/java/org/apache/fontbox/util/autodetect/UnixFontDirFinder.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/util/autodetect/UnixFontDirFinder.java -> fontbox/src/main/java/org/apache/fontbox/util/autodetect/UnixFontDirFinder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:                 \"/usr/local/fonts\", // local",
          "37:                 \"/usr/local/share/fonts\", // local shared",
          "38:                 \"/usr/share/fonts\", // system",
          "40:         };",
          "41:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "39:                 \"/usr/X11R6/lib/X11/fonts\" // X",
          "",
          "[Added Lines]",
          "39:                 \"/usr/X11R6/lib/X11/fonts\", // X",
          "40:                 \"/usr/share/X11/fonts\" // CentOS",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "076d5abdf5481b4548fbda0926127f47ca275717",
      "candidate_info": {
        "commit_hash": "076d5abdf5481b4548fbda0926127f47ca275717",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/076d5abdf5481b4548fbda0926127f47ca275717",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmptySignatureForm.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ],
        "message": "PDFBOX-3017: add comment and set print flag to avoid weird problems described by Waldemar Dick on the users mailing list\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886699 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmptySignatureForm.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmptySignatureForm.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmptySignatureForm.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmptySignatureForm.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmptySignatureForm.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmptySignatureForm.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:         PDRectangle rect = new PDRectangle(50, 650, 200, 50);",
          "75:         widget.setRectangle(rect);",
          "76:         widget.setPage(page);",
          "77:         page.getAnnotations().add(widget);",
          "79:         acroForm.getFields().add(signatureField);",
          "81:         document.save(args[0]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:         widget.setPrinted(true);",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ]
      }
    },
    {
      "candidate_hash": "18f3388a824769e8f69474d0f1daafb6372a307a",
      "candidate_info": {
        "commit_hash": "18f3388a824769e8f69474d0f1daafb6372a307a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/18f3388a824769e8f69474d0f1daafb6372a307a",
        "files": [
          "tools/src/main/java/org/apache/pdfbox/tools/Encrypt.java"
        ],
        "message": "PDFBOX-5027: allow several certificates for public key encryption, as suggested by jakatal\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884164 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "tools/src/main/java/org/apache/pdfbox/tools/Encrypt.java||tools/src/main/java/org/apache/pdfbox/tools/Encrypt.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/src/main/java/org/apache/pdfbox/tools/Encrypt.java||tools/src/main/java/org/apache/pdfbox/tools/Encrypt.java": [
          "File: tools/src/main/java/org/apache/pdfbox/tools/Encrypt.java -> tools/src/main/java/org/apache/pdfbox/tools/Encrypt.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import java.security.cert.CertificateException;",
          "24: import java.security.cert.CertificateFactory;",
          "25: import java.security.cert.X509Certificate;",
          "27: import org.apache.pdfbox.pdmodel.PDDocument;",
          "28: import org.apache.pdfbox.pdmodel.encryption.AccessPermission;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import java.util.ArrayList;",
          "27: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:             String infile = null;",
          "73:             String outfile = null;",
          "75:             @SuppressWarnings({\"squid:S2068\"})",
          "76:             String userPassword = \"\";",
          "77:             @SuppressWarnings({\"squid:S2068\"})",
          "",
          "[Removed Lines]",
          "74:             String certFile = null;",
          "",
          "[Added Lines]",
          "76:             List<File> certFileList = new ArrayList<File>();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:                     }",
          "129:                     else if( key.equals( \"-certFile\" ) )",
          "130:                     {",
          "132:                     }",
          "133:                     else if( key.equals( \"-keyLength\" ) )",
          "134:                     {",
          "",
          "[Removed Lines]",
          "131:                         certFile = args[++i];",
          "",
          "[Added Lines]",
          "133:                         certFileList.add(new File(args[++i]));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "168:                 if( !document.isEncrypted() )",
          "169:                 {",
          "171:                     {",
          "172:                         PublicKeyProtectionPolicy ppp = new PublicKeyProtectionPolicy();",
          "173:                         PublicKeyRecipient recip = new PublicKeyRecipient();",
          "174:                         recip.setPermission(ap);",
          "177:                         CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");",
          "187:                         {",
          "189:                             {",
          "191:                             }",
          "196:                         ppp.setEncryptionKeyLength(keyLength);",
          "",
          "[Removed Lines]",
          "170:                     if( certFile != null )",
          "179:                         InputStream inStream = null;",
          "180:                         try",
          "181:                         {",
          "182:                             inStream = new FileInputStream(certFile);",
          "183:                             X509Certificate certificate = (X509Certificate)cf.generateCertificate(inStream);",
          "184:                             recip.setX509(certificate);",
          "185:                         }",
          "186:                         finally",
          "188:                             if (inStream != null)",
          "190:                                 inStream.close();",
          "192:                         }",
          "194:                         ppp.addRecipient(recip);",
          "",
          "[Added Lines]",
          "172:                     if (!certFileList.isEmpty())",
          "180:                         for (File certFile : certFileList)",
          "182:                             InputStream inStream = null;",
          "183:                             try",
          "185:                                 inStream = new FileInputStream(certFile);",
          "186:                                 X509Certificate certificate = (X509Certificate) cf.generateCertificate(inStream);",
          "187:                                 recip.setX509(certificate);",
          "189:                             finally",
          "190:                             {",
          "191:                                 if (inStream != null)",
          "192:                                 {",
          "193:                                     inStream.close();",
          "194:                                 }",
          "195:                             }",
          "196:                             ppp.addRecipient(recip);",
          "197:                         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "230:                 + \"\\nOptions:\\n\"",
          "231:                 + \"  -O <password>                            : Set the owner password (ignored if certFile is set)\\n\"",
          "232:                 + \"  -U <password>                            : Set the user password (ignored if certFile is set)\\n\"",
          "234:                 + \"  -canAssemble <true|false>                : Set the assemble permission\\n\"",
          "235:                 + \"  -canExtractContent <true|false>          : Set the extraction permission\\n\"",
          "236:                 + \"  -canExtractForAccessibility <true|false> : Set the extraction permission\\n\"",
          "",
          "[Removed Lines]",
          "233:                 + \"  -certFile <path to cert>                 : Path to X.509 certificate\\n\"",
          "",
          "[Added Lines]",
          "236:                 + \"  -certFile <path to cert>                 : Path to X.509 certificate (repeat both if needed)\\n\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79d33519f20ae71d433ec32c41aee6762c122da7",
      "candidate_info": {
        "commit_hash": "79d33519f20ae71d433ec32c41aee6762c122da7",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/79d33519f20ae71d433ec32c41aee6762c122da7",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java"
        ],
        "message": "PDFBOX-5164: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889068 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java"
        ]
      }
    },
    {
      "candidate_hash": "aedbd964eba57d2e797e4041c2fe78db1b7f096d",
      "candidate_info": {
        "commit_hash": "aedbd964eba57d2e797e4041c2fe78db1b7f096d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/aedbd964eba57d2e797e4041c2fe78db1b7f096d",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java"
        ],
        "message": "PDFBOX-5040: add and deprecate old variables for compatibility\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884324 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java||fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java||fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java -> fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     public static final int ENCODING_UNICODE_2_0_FULL = 4;",
          "41:     public static final int LANGUAGE_UNICODE = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     @Deprecated",
          "45:     public static final int LANGUGAE_UNICODE = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     public static final int ENCODING_WINDOWS_UNICODE_UCS4 = 10;",
          "49:     public static final int LANGUAGE_WINDOWS_EN_US = 0x0409;",
          "52:     public static final int ENCODING_MACINTOSH_ROMAN = 0;",
          "55:     public static final int LANGUAGE_MACINTOSH_ENGLISH = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:     @Deprecated",
          "58:     public static final int LANGUGAE_WINDOWS_EN_US = 0x0409;",
          "68:     @Deprecated",
          "69:     public static final int LANGUGAE_MACINTOSH_ENGLISH = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}