{
  "cve_id": "CVE-2015-8213",
  "cve_desc": "The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",
  "repo": "django/django",
  "patch_hash": "316bc3fc9437c5960c24baceb93c73f1939711e4",
  "patch_info": {
    "commit_hash": "316bc3fc9437c5960c24baceb93c73f1939711e4",
    "repo": "django/django",
    "commit_url": "https://github.com/django/django/commit/316bc3fc9437c5960c24baceb93c73f1939711e4",
    "files": [
      "django/utils/formats.py",
      "docs/releases/1.7.11.txt",
      "docs/releases/1.8.7.txt",
      "tests/i18n/tests.py"
    ],
    "message": "Fixed a settings leak possibility in the date template filter.\n\nThis is a security fix.",
    "before_after_code_files": [
      "django/utils/formats.py||django/utils/formats.py",
      "tests/i18n/tests.py||tests/i18n/tests.py"
    ]
  },
  "patch_diff": {
    "django/utils/formats.py||django/utils/formats.py": [
      "File: django/utils/formats.py -> django/utils/formats.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: }",
      "33: def reset_format_cache():",
      "34:     \"\"\"Clear any cached formats.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33: FORMAT_SETTINGS = frozenset([",
      "34:     'DECIMAL_SEPARATOR',",
      "35:     'THOUSAND_SEPARATOR',",
      "36:     'NUMBER_GROUPING',",
      "37:     'FIRST_DAY_OF_WEEK',",
      "38:     'MONTH_DAY_FORMAT',",
      "39:     'TIME_FORMAT',",
      "40:     'DATE_FORMAT',",
      "41:     'DATETIME_FORMAT',",
      "42:     'SHORT_DATE_FORMAT',",
      "43:     'SHORT_DATETIME_FORMAT',",
      "44:     'YEAR_MONTH_FORMAT',",
      "45:     'DATE_INPUT_FORMATS',",
      "46:     'TIME_INPUT_FORMATS',",
      "47:     'DATETIME_INPUT_FORMATS',",
      "48: ])",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "92:     be localized (or not), overriding the value of settings.USE_L10N.",
      "93:     \"\"\"",
      "94:     format_type = force_str(format_type)",
      "95:     if use_l10n or (use_l10n is None and settings.USE_L10N):",
      "96:         if lang is None:",
      "97:             lang = get_language()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "113:     if format_type not in FORMAT_SETTINGS:",
      "114:         return format_type",
      "",
      "---------------"
    ],
    "tests/i18n/tests.py||tests/i18n/tests.py": [
      "File: tests/i18n/tests.py -> tests/i18n/tests.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1249:                 '<input id=\"id_cents_paid\" name=\"cents_paid\" type=\"hidden\" value=\"59,47\" />'",
      "1250:             )",
      "1253: class MiscTests(SimpleTestCase):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1252:     def test_format_arbitrary_settings(self):",
      "1253:         self.assertEqual(get_format('DEBUG'), 'DEBUG')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9f83fc2f66f5a0bac7c291aec55df66050bb6991",
      "candidate_info": {
        "commit_hash": "9f83fc2f66f5a0bac7c291aec55df66050bb6991",
        "repo": "django/django",
        "commit_url": "https://github.com/django/django/commit/9f83fc2f66f5a0bac7c291aec55df66050bb6991",
        "files": [
          "django/utils/formats.py",
          "docs/releases/1.7.11.txt",
          "docs/releases/1.8.7.txt",
          "tests/i18n/tests.py"
        ],
        "message": "[1.8.x] Fixed a settings leak possibility in the date template filter.\n\nThis is a security fix.",
        "before_after_code_files": [
          "django/utils/formats.py||django/utils/formats.py",
          "tests/i18n/tests.py||tests/i18n/tests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "django/utils/formats.py||django/utils/formats.py",
            "tests/i18n/tests.py||tests/i18n/tests.py"
          ],
          "candidate": [
            "django/utils/formats.py||django/utils/formats.py",
            "tests/i18n/tests.py||tests/i18n/tests.py"
          ]
        }
      },
      "candidate_diff": {
        "django/utils/formats.py||django/utils/formats.py": [
          "File: django/utils/formats.py -> django/utils/formats.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: }",
          "36: def reset_format_cache():",
          "37:     \"\"\"Clear any cached formats.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: FORMAT_SETTINGS = frozenset([",
          "37:     'DECIMAL_SEPARATOR',",
          "38:     'THOUSAND_SEPARATOR',",
          "39:     'NUMBER_GROUPING',",
          "40:     'FIRST_DAY_OF_WEEK',",
          "41:     'MONTH_DAY_FORMAT',",
          "42:     'TIME_FORMAT',",
          "43:     'DATE_FORMAT',",
          "44:     'DATETIME_FORMAT',",
          "45:     'SHORT_DATE_FORMAT',",
          "46:     'SHORT_DATETIME_FORMAT',",
          "47:     'YEAR_MONTH_FORMAT',",
          "48:     'DATE_INPUT_FORMATS',",
          "49:     'TIME_INPUT_FORMATS',",
          "50:     'DATETIME_INPUT_FORMATS',",
          "51: ])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     be localized (or not), overriding the value of settings.USE_L10N.",
          "96:     \"\"\"",
          "97:     format_type = force_str(format_type)",
          "98:     if use_l10n or (use_l10n is None and settings.USE_L10N):",
          "99:         if lang is None:",
          "100:             lang = get_language()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:     if format_type not in FORMAT_SETTINGS:",
          "117:         return format_type",
          "",
          "---------------"
        ],
        "tests/i18n/tests.py||tests/i18n/tests.py": [
          "File: tests/i18n/tests.py -> tests/i18n/tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "927:                 '<input id=\"id_date_added\" name=\"date_added\" type=\"hidden\" value=\"31.12.2009 06:00:00\" />; <input id=\"id_cents_paid\" name=\"cents_paid\" type=\"hidden\" value=\"59,47\" />'",
          "928:             )",
          "931: class MiscTests(TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "930:     def test_format_arbitrary_settings(self):",
          "931:         self.assertEqual(get_format('DEBUG'), 'DEBUG')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da",
      "candidate_info": {
        "commit_hash": "3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da",
        "repo": "django/django",
        "commit_url": "https://github.com/django/django/commit/3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da",
        "files": [
          "django/utils/formats.py",
          "docs/releases/1.7.11.txt",
          "docs/releases/1.8.7.txt",
          "tests/i18n/tests.py"
        ],
        "message": "[1.9.x] Fixed a settings leak possibility in the date template filter.\n\nThis is a security fix.",
        "before_after_code_files": [
          "django/utils/formats.py||django/utils/formats.py",
          "tests/i18n/tests.py||tests/i18n/tests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "django/utils/formats.py||django/utils/formats.py",
            "tests/i18n/tests.py||tests/i18n/tests.py"
          ],
          "candidate": [
            "django/utils/formats.py||django/utils/formats.py",
            "tests/i18n/tests.py||tests/i18n/tests.py"
          ]
        }
      },
      "candidate_diff": {
        "django/utils/formats.py||django/utils/formats.py": [
          "File: django/utils/formats.py -> django/utils/formats.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: }",
          "33: def reset_format_cache():",
          "34:     \"\"\"Clear any cached formats.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: FORMAT_SETTINGS = frozenset([",
          "34:     'DECIMAL_SEPARATOR',",
          "35:     'THOUSAND_SEPARATOR',",
          "36:     'NUMBER_GROUPING',",
          "37:     'FIRST_DAY_OF_WEEK',",
          "38:     'MONTH_DAY_FORMAT',",
          "39:     'TIME_FORMAT',",
          "40:     'DATE_FORMAT',",
          "41:     'DATETIME_FORMAT',",
          "42:     'SHORT_DATE_FORMAT',",
          "43:     'SHORT_DATETIME_FORMAT',",
          "44:     'YEAR_MONTH_FORMAT',",
          "45:     'DATE_INPUT_FORMATS',",
          "46:     'TIME_INPUT_FORMATS',",
          "47:     'DATETIME_INPUT_FORMATS',",
          "48: ])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:     be localized (or not), overriding the value of settings.USE_L10N.",
          "93:     \"\"\"",
          "94:     format_type = force_str(format_type)",
          "95:     if use_l10n or (use_l10n is None and settings.USE_L10N):",
          "96:         if lang is None:",
          "97:             lang = get_language()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:     if format_type not in FORMAT_SETTINGS:",
          "114:         return format_type",
          "",
          "---------------"
        ],
        "tests/i18n/tests.py||tests/i18n/tests.py": [
          "File: tests/i18n/tests.py -> tests/i18n/tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1245:                 '<input id=\"id_cents_paid\" name=\"cents_paid\" type=\"hidden\" value=\"59,47\" />'",
          "1246:             )",
          "1249: class MiscTests(SimpleTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1248:     def test_format_arbitrary_settings(self):",
          "1249:         self.assertEqual(get_format('DEBUG'), 'DEBUG')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a01c6b53169ee079cb21ac5919fdafcc8c5e172",
      "candidate_info": {
        "commit_hash": "8a01c6b53169ee079cb21ac5919fdafcc8c5e172",
        "repo": "django/django",
        "commit_url": "https://github.com/django/django/commit/8a01c6b53169ee079cb21ac5919fdafcc8c5e172",
        "files": [
          "django/utils/formats.py",
          "docs/releases/1.7.11.txt",
          "tests/i18n/tests.py"
        ],
        "message": "[1.7.x] Fixed a settings leak possibility in the date template filter.\n\nThis is a security fix.",
        "before_after_code_files": [
          "django/utils/formats.py||django/utils/formats.py",
          "tests/i18n/tests.py||tests/i18n/tests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "django/utils/formats.py||django/utils/formats.py",
            "tests/i18n/tests.py||tests/i18n/tests.py"
          ],
          "candidate": [
            "django/utils/formats.py||django/utils/formats.py",
            "tests/i18n/tests.py||tests/i18n/tests.py"
          ]
        }
      },
      "candidate_diff": {
        "django/utils/formats.py||django/utils/formats.py": [
          "File: django/utils/formats.py -> django/utils/formats.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: }",
          "34: def reset_format_cache():",
          "35:     \"\"\"Clear any cached formats.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: FORMAT_SETTINGS = frozenset([",
          "35:     'DECIMAL_SEPARATOR',",
          "36:     'THOUSAND_SEPARATOR',",
          "37:     'NUMBER_GROUPING',",
          "38:     'FIRST_DAY_OF_WEEK',",
          "39:     'MONTH_DAY_FORMAT',",
          "40:     'TIME_FORMAT',",
          "41:     'DATE_FORMAT',",
          "42:     'DATETIME_FORMAT',",
          "43:     'SHORT_DATE_FORMAT',",
          "44:     'SHORT_DATETIME_FORMAT',",
          "45:     'YEAR_MONTH_FORMAT',",
          "46:     'DATE_INPUT_FORMATS',",
          "47:     'TIME_INPUT_FORMATS',",
          "48:     'DATETIME_INPUT_FORMATS',",
          "49: ])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:     be localized (or not), overriding the value of settings.USE_L10N.",
          "86:     \"\"\"",
          "87:     format_type = force_str(format_type)",
          "88:     if use_l10n or (use_l10n is None and settings.USE_L10N):",
          "89:         if lang is None:",
          "90:             lang = get_language()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:     if format_type not in FORMAT_SETTINGS:",
          "107:         return format_type",
          "",
          "---------------"
        ],
        "tests/i18n/tests.py||tests/i18n/tests.py": [
          "File: tests/i18n/tests.py -> tests/i18n/tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "828:                 '<input id=\"id_date_added\" name=\"date_added\" type=\"hidden\" value=\"31.12.2009 06:00:00\" />; <input id=\"id_cents_paid\" name=\"cents_paid\" type=\"hidden\" value=\"59,47\" />'",
          "829:             )",
          "832: class MiscTests(TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "831:     def test_format_arbitrary_settings(self):",
          "832:         self.assertEqual(get_format('DEBUG'), 'DEBUG')",
          "",
          "---------------"
        ]
      }
    }
  ]
}