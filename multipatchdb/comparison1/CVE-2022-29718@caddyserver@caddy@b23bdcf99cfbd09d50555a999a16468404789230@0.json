{
  "cve_id": "CVE-2022-29718",
  "cve_desc": "Caddy v2.4 was discovered to contain an open redirect vulnerability. A remote unauthenticated attacker may exploit this vulnerability to redirect users to arbitrary web URLs by tricking the victim users to click on crafted links.",
  "repo": "caddyserver/caddy",
  "patch_hash": "b23bdcf99cfbd09d50555a999a16468404789230",
  "patch_info": {
    "commit_hash": "b23bdcf99cfbd09d50555a999a16468404789230",
    "repo": "caddyserver/caddy",
    "commit_url": "https://github.com/caddyserver/caddy/pull/4499/commits/b23bdcf99cfbd09d50555a999a16468404789230",
    "files": [
      "modules/caddyhttp/matchers.go"
    ],
    "message": "caddyhttp: Fix `MatchPath` sanitizing\n\nThis is a followup to #4407, in response to a report on the forums: https://caddy.community/t/php-fastcgi-phishing-redirection/14542\n\nTurns out that doing `TrimRight` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. We should instead remove the dots _after_ cleaning.",
    "before_after_code_files": [
      "modules/caddyhttp/matchers.go||modules/caddyhttp/matchers.go"
    ]
  },
  "patch_diff": {
    "modules/caddyhttp/matchers.go||modules/caddyhttp/matchers.go": [
      "File: modules/caddyhttp/matchers.go -> modules/caddyhttp/matchers.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "326:  lowerPath := strings.ToLower(unescapedPath)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331:  lowerPath = path.Clean(lowerPath)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "333:  lowerPath = strings.TrimRight(lowerPath, \". \")",
      "341:  if lowerPath != \"/\" && strings.HasSuffix(r.URL.Path, \"/\") {",
      "342:   lowerPath = lowerPath + \"/\"",
      "",
      "[Removed Lines]",
      "338:  lowerPath = path.Clean(lowerPath)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3fe2c73dd04f7769a9d9673236cb94b79ac45659",
      "candidate_info": {
        "commit_hash": "3fe2c73dd04f7769a9d9673236cb94b79ac45659",
        "repo": "caddyserver/caddy",
        "commit_url": "https://github.com/caddyserver/caddy/commit/3fe2c73dd04f7769a9d9673236cb94b79ac45659",
        "files": [
          "modules/caddyhttp/matchers.go"
        ],
        "message": "caddyhttp: Fix `MatchPath` sanitizing (#4499)\n\nThis is a followup to #4407, in response to a report on the forums: https://caddy.community/t/php-fastcgi-phishing-redirection/14542\n\nTurns out that doing `TrimRight` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. We should instead remove the dots _after_ cleaning.",
        "before_after_code_files": [
          "modules/caddyhttp/matchers.go||modules/caddyhttp/matchers.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/caddyserver/caddy/pull/4499"
        ],
        "olp_code_files": {
          "patch": [
            "modules/caddyhttp/matchers.go||modules/caddyhttp/matchers.go"
          ],
          "candidate": [
            "modules/caddyhttp/matchers.go||modules/caddyhttp/matchers.go"
          ]
        }
      },
      "candidate_diff": {
        "modules/caddyhttp/matchers.go||modules/caddyhttp/matchers.go": [
          "File: modules/caddyhttp/matchers.go -> modules/caddyhttp/matchers.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:  lowerPath := strings.ToLower(unescapedPath)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "331:  lowerPath = path.Clean(lowerPath)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:  lowerPath = strings.TrimRight(lowerPath, \". \")",
          "341:  if lowerPath != \"/\" && strings.HasSuffix(r.URL.Path, \"/\") {",
          "342:   lowerPath = lowerPath + \"/\"",
          "",
          "[Removed Lines]",
          "338:  lowerPath = path.Clean(lowerPath)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}