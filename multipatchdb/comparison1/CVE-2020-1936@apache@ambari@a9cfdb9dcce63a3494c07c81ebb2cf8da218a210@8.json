{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2a98cea0baadcaaa1b653f8209ca308c739853fb",
      "candidate_info": {
        "commit_hash": "2a98cea0baadcaaa1b653f8209ca308c739853fb",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2a98cea0baadcaaa1b653f8209ca308c739853fb",
        "files": [
          "contrib/fast-hdfs-resource/src/main/java/org/apache/ambari/fast_hdfs_resource/Runner.java"
        ],
        "message": "AMBARI-25230 improve fast-hdfs tool exception handling (benyoka) (#2916)",
        "before_after_code_files": [
          "contrib/fast-hdfs-resource/src/main/java/org/apache/ambari/fast_hdfs_resource/Runner.java||contrib/fast-hdfs-resource/src/main/java/org/apache/ambari/fast_hdfs_resource/Runner.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/fast-hdfs-resource/src/main/java/org/apache/ambari/fast_hdfs_resource/Runner.java||contrib/fast-hdfs-resource/src/main/java/org/apache/ambari/fast_hdfs_resource/Runner.java": [
          "File: contrib/fast-hdfs-resource/src/main/java/org/apache/ambari/fast_hdfs_resource/Runner.java -> contrib/fast-hdfs-resource/src/main/java/org/apache/ambari/fast_hdfs_resource/Runner.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: public class Runner {",
          "37:   public static void main(String[] args)",
          "40:     if (args.length != 1) {",
          "41:       System.err.println(\"Incorrect number of arguments. Please provide:\\n\"",
          "",
          "[Removed Lines]",
          "38:       throws IOException, URISyntaxException {",
          "",
          "[Added Lines]",
          "38:       throws IOException, URISyntaxException, Exception  {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:     catch(Exception e) {",
          "145:        System.out.println(\"Exception occurred, Reason: \" + e.getMessage());",
          "146:        e.printStackTrace();",
          "147:     }",
          "148:     finally {",
          "149:       for(FileSystem dfs:fileSystemNameToInstance.values()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:        throw e;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2be530f7a95542bd154b38e8917cfc9310d8d050",
      "candidate_info": {
        "commit_hash": "2be530f7a95542bd154b38e8917cfc9310d8d050",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2be530f7a95542bd154b38e8917cfc9310d8d050",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/AddSparkUserToYarnACLAdminQueue.java"
        ],
        "message": "[AMBARI-24271] Spark thrift server is not starting on Upgraded cluster.(vbrodetskyi) (#1730)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/AddSparkUserToYarnACLAdminQueue.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/AddSparkUserToYarnACLAdminQueue.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/AddSparkUserToYarnACLAdminQueue.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/AddSparkUserToYarnACLAdminQueue.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/AddSparkUserToYarnACLAdminQueue.java -> ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/AddSparkUserToYarnACLAdminQueue.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.server.serveraction.upgrades;",
          "21: import java.util.Map;",
          "22: import java.util.concurrent.ConcurrentMap;",
          "23: import java.util.stream.Collectors;",
          "25: import org.apache.ambari.server.AmbariException;",
          "26: import org.apache.ambari.server.actionmanager.HostRoleStatus;",
          "27: import org.apache.ambari.server.agent.CommandReport;",
          "28: import org.apache.ambari.server.state.Cluster;",
          "29: import org.apache.ambari.server.state.Config;",
          "30: import org.apache.ambari.server.state.Host;",
          "33: public class AddSparkUserToYarnACLAdminQueue extends AbstractUpgradeServerAction {",
          "34:   private static final String CAPACITY_SCHEDULER_CONFIG_TYPE = \"capacity-scheduler\";",
          "35:   private static final String SPARK_ENV_CONFIG_TYPE = \"spark2-env\";",
          "37:   private static final String YARN_ACL_ADMIN_QUEUE_PROPERTY_NAME = \"yarn.scheduler.capacity.root.acl_administer_queue\";",
          "38:   private static final String SPARK_USER_PROPERTY_NAME = \"spark_user\";",
          "40:   @Override",
          "41:   public CommandReport execute(ConcurrentMap<String, Object> requestSharedDataContext)",
          "42:           throws AmbariException, InterruptedException {",
          "44:     String clusterName = getExecutionCommand().getClusterName();",
          "46:     Cluster cluster = getClusters().getCluster(clusterName);",
          "48:     Config capacitySchedulerConfig = cluster.getDesiredConfigByType(CAPACITY_SCHEDULER_CONFIG_TYPE);",
          "49:     Config sparkEnvConfig = cluster.getDesiredConfigByType(SPARK_ENV_CONFIG_TYPE);",
          "51:     if (capacitySchedulerConfig == null) {",
          "52:       return  createCommandReport(0, HostRoleStatus.FAILED,\"{}\",",
          "53:               String.format(\"Source type %s not found\", CAPACITY_SCHEDULER_CONFIG_TYPE), \"\");",
          "54:     }",
          "56:     if (sparkEnvConfig == null) {",
          "57:       return  createCommandReport(0, HostRoleStatus.FAILED,\"{}\",",
          "58:               String.format(\"Source type %s not found\", SPARK_ENV_CONFIG_TYPE), \"\");",
          "59:     }",
          "61:     Map<String, String> capacitySchedulerProperties = capacitySchedulerConfig.getProperties();",
          "62:     Map<String, String> sparkEnvProperties = sparkEnvConfig.getProperties();",
          "64:     String yarnACLAdminQueue = capacitySchedulerProperties.get(YARN_ACL_ADMIN_QUEUE_PROPERTY_NAME);",
          "65:     String sparkUser = sparkEnvProperties.get(SPARK_USER_PROPERTY_NAME);",
          "67:     String message = \"\";",
          "68:     if (yarnACLAdminQueue != null && !yarnACLAdminQueue.trim().equals(\"*\")) {",
          "69:       yarnACLAdminQueue = yarnACLAdminQueue + \",\" + sparkUser;",
          "70:       capacitySchedulerProperties.put(YARN_ACL_ADMIN_QUEUE_PROPERTY_NAME, yarnACLAdminQueue);",
          "71:       capacitySchedulerConfig.setProperties(capacitySchedulerProperties);",
          "72:       capacitySchedulerConfig.save();",
          "73:       agentConfigsHolder.updateData(cluster.getClusterId(), cluster.getHosts().stream().map(Host::getHostId).collect(Collectors.toList()));",
          "74:       message = String.format(\"Spark user %s was successfully added to %s property value.\", sparkUser, YARN_ACL_ADMIN_QUEUE_PROPERTY_NAME);",
          "75:     }",
          "77:     return createCommandReport(0, HostRoleStatus.COMPLETED, \"{}\", message, \"\");",
          "78:   }",
          "79: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fcea9763f856afaffbbf6a001e3cc1b3a7ecebed",
      "candidate_info": {
        "commit_hash": "fcea9763f856afaffbbf6a001e3cc1b3a7ecebed",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/fcea9763f856afaffbbf6a001e3cc1b3a7ecebed",
        "files": [
          "ambari-web/app/controllers/main/service/info/configs.js"
        ],
        "message": "AMBARI-24308 'Changed properties' filter for configs is displayed even in non-compare mode. (ababiichuk)",
        "before_after_code_files": [
          "ambari-web/app/controllers/main/service/info/configs.js||ambari-web/app/controllers/main/service/info/configs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/controllers/main/service/info/configs.js||ambari-web/app/controllers/main/service/info/configs.js": [
          "File: ambari-web/app/controllers/main/service/info/configs.js -> ambari-web/app/controllers/main/service/info/configs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:     var filterColumns = [];",
          "232:     this.get('propertyFilters').forEach(function(filter) {",
          "234:         return; // exclude column",
          "235:       }",
          "236:       filterColumns.push(Ember.Object.create({",
          "",
          "[Removed Lines]",
          "233:       if (this.get('canBeExcluded') && !(Em.isNone(filter.dependentOn) || this.get(filter.dependentOn))) {",
          "",
          "[Added Lines]",
          "233:       if (filter.canBeExcluded && !(Em.isNone(filter.dependentOn) || this.get(filter.dependentOn))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "580153bb959ec70760c4b241edefe5bcaf8823ba",
      "candidate_info": {
        "commit_hash": "580153bb959ec70760c4b241edefe5bcaf8823ba",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/580153bb959ec70760c4b241edefe5bcaf8823ba",
        "files": [
          "ambari-web/app/mixins/common/widgets/time_range_mixin.js",
          "ambari-web/app/templates/main/service/info/metrics/flume/flume_agent_metrics_section.hbs",
          "ambari-web/app/views/main/service/info/metrics_view.js"
        ],
        "message": "AMBARI-24645 Issues with tooltip containing custom time range for charts. (ababiichuk)",
        "before_after_code_files": [
          "ambari-web/app/mixins/common/widgets/time_range_mixin.js||ambari-web/app/mixins/common/widgets/time_range_mixin.js",
          "ambari-web/app/templates/main/service/info/metrics/flume/flume_agent_metrics_section.hbs||ambari-web/app/templates/main/service/info/metrics/flume/flume_agent_metrics_section.hbs",
          "ambari-web/app/views/main/service/info/metrics_view.js||ambari-web/app/views/main/service/info/metrics_view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/mixins/common/widgets/time_range_mixin.js||ambari-web/app/mixins/common/widgets/time_range_mixin.js": [
          "File: ambari-web/app/mixins/common/widgets/time_range_mixin.js -> ambari-web/app/mixins/common/widgets/time_range_mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   didInsertElement: function () {",
          "81:     App.tooltip(this.$(), {",
          "83:     });",
          "84:   },",
          "",
          "[Removed Lines]",
          "82:       selector: '.dropdown-toggle[rel=\"tooltip\"]'",
          "",
          "[Added Lines]",
          "82:       selector: '.dropdown-toggle[rel=\"tooltip\"]',",
          "83:       html: true,",
          "84:       placement: 'left'",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/service/info/metrics/flume/flume_agent_metrics_section.hbs||ambari-web/app/templates/main/service/info/metrics/flume/flume_agent_metrics_section.hbs": [
          "File: ambari-web/app/templates/main/service/info/metrics/flume/flume_agent_metrics_section.hbs -> ambari-web/app/templates/main/service/info/metrics/flume/flume_agent_metrics_section.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:           {{view.header}}",
          "27:         </h4>",
          "28:       </div>",
          "32:       <div class=\"clearfix\"></div>",
          "33:     </div>",
          "34:     <div class=\"panel-body collapse in\" {{bindAttr id=\"view.id\"}}>",
          "",
          "[Removed Lines]",
          "29:         {{#if showTimeRangeControl}}",
          "30:           {{view view.timeRangeListView}}",
          "31:         {{/if}}",
          "",
          "[Added Lines]",
          "29:       {{view view.timeRangeListView}}",
          "",
          "---------------"
        ],
        "ambari-web/app/views/main/service/info/metrics_view.js||ambari-web/app/views/main/service/info/metrics_view.js": [
          "File: ambari-web/app/views/main/service/info/metrics_view.js -> ambari-web/app/views/main/service/info/metrics_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:     this.makeSortable('#widget_layout');",
          "101:     this.makeSortable('#ns_widget_layout', true);",
          "102:     this.addWidgetTooltip();",
          "103:   },",
          "105:   loadActiveWidgetLayout: function () {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:     this._super();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "638562274979727cb05b8f2718ea5dc83fb81214",
      "candidate_info": {
        "commit_hash": "638562274979727cb05b8f2718ea5dc83fb81214",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/638562274979727cb05b8f2718ea5dc83fb81214",
        "files": [
          "contrib/management-packs/isilon-onefs-mpack/src/main/resources/addon-services/ONEFS/1.0.0/service_advisor.py"
        ],
        "message": "AMBARI-24457. Hiveserver2 can't connect to metastore when using OneFS (amagyar) (#2024) (#2028)",
        "before_after_code_files": [
          "contrib/management-packs/isilon-onefs-mpack/src/main/resources/addon-services/ONEFS/1.0.0/service_advisor.py||contrib/management-packs/isilon-onefs-mpack/src/main/resources/addon-services/ONEFS/1.0.0/service_advisor.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/management-packs/isilon-onefs-mpack/src/main/resources/addon-services/ONEFS/1.0.0/service_advisor.py||contrib/management-packs/isilon-onefs-mpack/src/main/resources/addon-services/ONEFS/1.0.0/service_advisor.py": [
          "File: contrib/management-packs/isilon-onefs-mpack/src/main/resources/addon-services/ONEFS/1.0.0/service_advisor.py -> contrib/management-packs/isilon-onefs-mpack/src/main/resources/addon-services/ONEFS/1.0.0/service_advisor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:   class ONEFSServiceAdvisor(service_advisor.ServiceAdvisor):",
          "109:     def getServiceConfigurationRecommendations(self, configs, clusterData, services, hosts):",
          "110:       try:",
          "111:         putCoreSiteProperty = self.putProperty(configs, \"core-site\", services)",
          "112:         putHdfsSiteProperty = self.putProperty(configs, \"hdfs-site\", services)",
          "113:         onefs_host = Uri.onefs(services)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:         self.recommendHadoopProxyUsers(configs, services, hosts)",
          "",
          "---------------"
        ]
      }
    }
  ]
}