{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3ecff3ad054f4028c5632905bfa6aaa13a334e43",
      "candidate_info": {
        "commit_hash": "3ecff3ad054f4028c5632905bfa6aaa13a334e43",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3ecff3ad054f4028c5632905bfa6aaa13a334e43",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889418 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "640:         if (COSName.LUMINOSITY.equals(softMask.getSubType()))",
          "641:         {",
          "642:             COSArray backdropColorArray = softMask.getBackdropColor();",
          "646:             {",
          "648:             }",
          "649:         }",
          "650:         TransparencyGroup transparencyGroup = new TransparencyGroup(softMask.getGroup(), true,",
          "",
          "[Removed Lines]",
          "643:             PDTransparencyGroup form = softMask.getGroup();",
          "644:             PDColorSpace colorSpace = form.getGroup().getColorSpace(form.getResources());",
          "645:             if (colorSpace != null && backdropColorArray != null)",
          "647:                 backdropColor = new PDColor(backdropColorArray, colorSpace);",
          "",
          "[Added Lines]",
          "643:             if (backdropColorArray != null)",
          "645:                 PDTransparencyGroup form = softMask.getGroup();",
          "646:                 PDColorSpace colorSpace = form.getGroup().getColorSpace(form.getResources());",
          "647:                 if (colorSpace != null)",
          "648:                 {",
          "649:                     backdropColor = new PDColor(backdropColorArray, colorSpace);",
          "650:                 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "781:     {",
          "782:         if (dashArray.length > 0)",
          "783:         {",
          "785:             for (int i = 0; i < dashArray.length; ++i)",
          "786:             {",
          "787:                 if (dashArray[i] != 0)",
          "788:                 {",
          "791:                 }",
          "792:             }",
          "797:         }",
          "798:         return false;",
          "799:     }",
          "",
          "[Removed Lines]",
          "784:             boolean allZero = true;",
          "789:                     allZero = false;",
          "790:                     break;",
          "793:             if (allZero)",
          "794:             {",
          "795:                 return true;",
          "796:             }",
          "",
          "[Added Lines]",
          "791:                     return false;",
          "794:             return true;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93932f4774ca8d768b23ede3fed805fd5c396ae4",
      "candidate_info": {
        "commit_hash": "93932f4774ca8d768b23ede3fed805fd5c396ae4",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/93932f4774ca8d768b23ede3fed805fd5c396ae4",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ],
        "message": "PDFBOX-4892: create rectangle only when needed, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887106 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "598:     {",
          "600:         COSArray rectArray = (COSArray) annotDict.getDictionaryObject(COSName.RECT);",
          "602:         PDRectangle existingRectangle = signatureField.getWidgets().get(0).getRectangle();",
          "605:         if (existingRectangle == null || existingRectangle.getCOSArray().size() != 4)",
          "606:         {",
          "607:             signatureField.getWidgets().get(0).setRectangle(rect);",
          "608:         }",
          "609:     }",
          "",
          "[Removed Lines]",
          "601:         PDRectangle rect = new PDRectangle(rectArray);",
          "",
          "[Added Lines]",
          "606:             PDRectangle rect = new PDRectangle(rectArray);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32ecd7595f45bdc3170df027a8e36d5becb88ffd",
      "candidate_info": {
        "commit_hash": "32ecd7595f45bdc3170df027a8e36d5becb88ffd",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/32ecd7595f45bdc3170df027a8e36d5becb88ffd",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmbeddedTimeStamp.java"
        ],
        "message": "PDFBOX-3017: MDP not relevant because only signature content is changed\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882864 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmbeddedTimeStamp.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmbeddedTimeStamp.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmbeddedTimeStamp.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmbeddedTimeStamp.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmbeddedTimeStamp.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/CreateEmbeddedTimeStamp.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     private void processTimeStamping(File outFile, String fileName) throws IOException",
          "100:     {",
          "108:         try",
          "109:         {",
          "110:             byte[] documentBytes;",
          "",
          "[Removed Lines]",
          "101:         int accessPermissions = SigUtils.getMDPPermission(document);",
          "102:         if (accessPermissions == 1)",
          "103:         {",
          "104:             throw new IllegalStateException(",
          "105:                     \"No changes to the document are permitted due to DocMDP transform parameters dictionary\");",
          "106:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d63da1a443434048079958ac72c4ccb6408471a5",
      "candidate_info": {
        "commit_hash": "d63da1a443434048079958ac72c4ccb6408471a5",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d63da1a443434048079958ac72c4ccb6408471a5",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov; add debug log\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890731 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/Overlay.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:     private Map<Integer,LayoutPage> getLayoutPages(PDDocument doc) throws IOException",
          "302:     {",
          "306:         {",
          "308:             COSBase contents = page.getCOSObject().getDictionaryObject(COSName.CONTENTS);",
          "309:             PDResources resources = page.getResources();",
          "310:             if (resources == null)",
          "",
          "[Removed Lines]",
          "303:         int numberOfPages = doc.getNumberOfPages();",
          "304:         Map<Integer,LayoutPage> layoutPages = new HashMap<Integer, Overlay.LayoutPage>(numberOfPages);",
          "305:         for (int i=0;i<numberOfPages;i++)",
          "307:             PDPage page = doc.getPage(i);",
          "",
          "[Added Lines]",
          "303:         int i = 0;",
          "304:         Map<Integer, LayoutPage> layoutPages = new HashMap<Integer, LayoutPage>();",
          "305:         for (PDPage page : doc.getPages())",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "313:             }",
          "314:             layoutPages.put(i, new LayoutPage(page.getMediaBox(), createCombinedContentStream(contents),",
          "315:                     resources.getCOSObject(), page.getRotation()));",
          "316:         }",
          "317:         return layoutPages;",
          "318:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:             i++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0dd1ea71330ccf9199f442b267b5393d2d5e1388",
      "candidate_info": {
        "commit_hash": "0dd1ea71330ccf9199f442b267b5393d2d5e1388",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0dd1ea71330ccf9199f442b267b5393d2d5e1388",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java"
        ],
        "message": "PDFBOX-4892: improve logging\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884939 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "509:         {",
          "510:            encryptData(objNum, genNum, encryptedStream, output, true /* decrypt */);",
          "511:         }",
          "512:         finally",
          "513:         {",
          "514:             output.close();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "512:         catch (IOException ex)",
          "513:         {",
          "514:             LOG.error(ex.getClass().getSimpleName() + \" thrown when decrypting object \" +",
          "515:                     objNum + \" \" + genNum + \" obj\");",
          "516:             throw ex;",
          "517:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}