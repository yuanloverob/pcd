{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c77eba2b3ec181457e914f4cb872ef0d42f9e5b7",
      "candidate_info": {
        "commit_hash": "c77eba2b3ec181457e914f4cb872ef0d42f9e5b7",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c77eba2b3ec181457e914f4cb872ef0d42f9e5b7",
        "files": [
          "ambari-web/app/views/main/dashboard/widgets.js"
        ],
        "message": "AMBARI-25158 Dashboard is unable to load . Common console error : \"SEVERE TypeError: widgetGroups is undefined\"",
        "before_after_code_files": [
          "ambari-web/app/views/main/dashboard/widgets.js||ambari-web/app/views/main/dashboard/widgets.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/views/main/dashboard/widgets.js||ambari-web/app/views/main/dashboard/widgets.js": [
          "File: ambari-web/app/views/main/dashboard/widgets.js -> ambari-web/app/views/main/dashboard/widgets.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:     }",
          "172:     this.loadWidgetsSettings().complete(() => {",
          "173:       this.get('widgetGroupsDeferred').done(() => {",
          "174:         this.checkServicesChange();",
          "175:         this.renderWidgets();",
          "176:         this.set('isDataLoaded', true);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:         if (this.get('isDestroyed')) return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb89801e4cc4d3f7b21aa2a78b4df66b282357b2",
      "candidate_info": {
        "commit_hash": "bb89801e4cc4d3f7b21aa2a78b4df66b282357b2",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/bb89801e4cc4d3f7b21aa2a78b4df66b282357b2",
        "files": [
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/common/ExternalServerClient.java"
        ],
        "message": "AMBARI-25114. Log Search: SSL props needs to be set if only ambari-server uses SSL (#2792)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/common/ExternalServerClient.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/common/ExternalServerClient.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/common/ExternalServerClient.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/common/ExternalServerClient.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/common/ExternalServerClient.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/common/ExternalServerClient.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:   public Object sendGETRequest(String loginUrl, Class<?> klass, String username, String password) throws Exception {",
          "54:     if (localJerseyClient == null) {",
          "55:       localJerseyClient = new ThreadLocal<JerseyClient>() {",
          "56:         @Override",
          "57:         protected JerseyClient initialValue() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:       if (sslConfigurer.isKeyStoreSpecified()) {",
          "56:         sslConfigurer.ensureStorePasswords();",
          "57:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55140c80f7734e91f6355d068ecc4bdfe3322cfc",
      "candidate_info": {
        "commit_hash": "55140c80f7734e91f6355d068ecc4bdfe3322cfc",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/55140c80f7734e91f6355d068ecc4bdfe3322cfc",
        "files": [
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js",
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js",
          "ambari-web/app/views/wizard/step1_view.js"
        ],
        "message": "AMBARI-25410. Add autocomplete for all repos url for login and password",
        "before_after_code_files": [
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js",
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js",
          "ambari-web/app/views/wizard/step1_view.js||ambari-web/app/views/wizard/step1_view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js": [
          "File: ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js -> ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "444:   $scope.onRepoUrlChange = function (repository) {",
          "445:     $scope.clearError(repository);",
          "446:     $scope.setInvalidUrlError(repository);",
          "447:   };",
          "449:   $scope.undoChange = function(repo) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447:     $scope.setUsernameAndPasswordsIfNeeded(repository);",
          "448:   };",
          "450:   $scope.setUsernameAndPasswordsIfNeeded = function(repo) {",
          "451:     try {",
          "452:       var urlObject = new URL(repo.Repositories.base_url);",
          "453:       var username = urlObject.username;",
          "454:       var password = urlObject.password;",
          "455:     } catch (e) {",
          "456:       return;",
          "457:     }",
          "458:     $scope.osList.forEach(function(os) {",
          "459:       if (os.repositories) {",
          "460:         os.repositories.forEach(function (repo) {",
          "461:           var currentUrl = repo.Repositories.base_url;",
          "462:           try {",
          "463:             var currentUrlObject = new URL(currentUrl);",
          "464:           } catch (e) {",
          "465:             return;",
          "466:           }",
          "467:           currentUrlObject.username = username;",
          "468:           currentUrlObject.password = password;",
          "469:           repo.Repositories.base_url = currentUrlObject.toString();",
          "470:         });",
          "471:       }",
          "472:     });",
          "",
          "---------------"
        ],
        "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js": [
          "File: ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js -> ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:     repo.Repositories.base_url = repo.Repositories.initial_base_url;",
          "323:   };",
          "325:   $scope.clearErrors = function() {",
          "326:     if ($scope.osList) {",
          "327:       $scope.osList.forEach(function(os) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "325:   $scope.onRepoUrlChange = function(repo) {",
          "326:     try {",
          "327:       var urlObject = new URL(repo.Repositories.base_url);",
          "328:       var username = urlObject.username;",
          "329:       var password = urlObject.password;",
          "330:     } catch (e) {",
          "331:       return;",
          "332:     }",
          "333:     $scope.osList.forEach(function(os) {",
          "334:       if (os.repositories) {",
          "335:         os.repositories.forEach(function (repo) {",
          "336:           var currentUrl = repo.Repositories.base_url;",
          "337:           try {",
          "338:             var currentUrlObject = new URL(currentUrl);",
          "339:           } catch (e) {",
          "340:             return;",
          "341:           }",
          "342:           currentUrlObject.username = username;",
          "343:           currentUrlObject.password = password;",
          "344:           repo.Repositories.base_url = currentUrlObject.toString();",
          "345:         });",
          "346:       }",
          "347:     });",
          "348:   };",
          "",
          "---------------"
        ],
        "ambari-web/app/views/wizard/step1_view.js||ambari-web/app/views/wizard/step1_view.js": [
          "File: ambari-web/app/views/wizard/step1_view.js -> ambari-web/app/views/wizard/step1_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "313:     if (!repositories) {",
          "314:       return;",
          "315:     }",
          "316:     repositories.forEach(function (repository) {",
          "317:       if (repository.get('lastBaseUrl') !== repository.get('baseUrl')) {",
          "318:         repository.setProperties({",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "316:     var changedRepo = repositories.find(function(repository) {",
          "317:       return repository.get('lastBaseUrl') && repository.get('lastBaseUrl') !== repository.get('baseUrl');",
          "318:     });",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "321:         });",
          "322:       }",
          "323:     }, this);",
          "324:   }.observes('allRepositories.@each.baseUrl')",
          "326: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     if (changedRepo) {",
          "328:       try {",
          "329:         var urlObject = new URL(changedRepo.get('baseUrl'));",
          "330:       } catch (e) {",
          "331:         return;",
          "332:       }",
          "333:       var username = urlObject.username;",
          "334:       var password = urlObject.password;",
          "335:       repositories.forEach(function (repository) {",
          "336:         var currentUrl = repository.get('baseUrl');",
          "337:         try {",
          "338:           var currentUrlObject = new URL(currentUrl);",
          "339:         } catch (e) {",
          "340:           return;",
          "341:         }",
          "342:         currentUrlObject.username = username;",
          "343:         currentUrlObject.password = password;",
          "344:         var newUrl = currentUrlObject.toString();",
          "345:         if (newUrl !== currentUrl) {",
          "346:           setTimeout(function () {",
          "347:             repository.set('baseUrl', newUrl);",
          "348:           }, 0);",
          "349:         }",
          "350:       }, this);",
          "351:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c03bbb7dde41748694dc483b951b4fd9023277e5",
      "candidate_info": {
        "commit_hash": "c03bbb7dde41748694dc483b951b4fd9023277e5",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c03bbb7dde41748694dc483b951b4fd9023277e5",
        "files": [
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/response/ServiceLogData.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/SolrConstants.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrCommonLogData.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrServiceLogData.java"
        ],
        "message": "AMBARI-24626. Log Search: some solr fields are missing from service log / audit log response (#2302)\n\n* AMBARI-24626. Log Search: some solr fields are missing from service log / audit log response\n\n* Add missing field names",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/response/ServiceLogData.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/response/ServiceLogData.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/SolrConstants.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/SolrConstants.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrCommonLogData.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrCommonLogData.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrServiceLogData.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrServiceLogData.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/response/ServiceLogData.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/response/ServiceLogData.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/response/ServiceLogData.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/response/ServiceLogData.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:   String getGroup();",
          "67:   void setGroup(String group);",
          "68: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:   @JsonProperty(\"logger_name\")",
          "70:   String getLoggerName();",
          "72:   void setLoggerName(String loggerName);",
          "74:   @JsonProperty(\"method\")",
          "75:   String getMethod();",
          "77:   void setMethod(String method);",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/SolrConstants.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/SolrConstants.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/SolrConstants.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/SolrConstants.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:     public static final String GROUP = \"group\";",
          "61:     public static final String LEVEL = \"level\";",
          "62:     public static final String THREAD_NAME = \"thread_name\";",
          "63:     public static final String LOGGER_NAME = \"logger_name\";",
          "64:     public static final String LINE_NUMBER = \"line_number\";",
          "65:     public static final String PATH = \"path\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:     public static final String METHOD = \"method\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:     public static final String KEY_DYNAMIC_FIELDS = \"key_*\";",
          "69:     public static final String WS_DYNAMIC_FIELDS = \"ws_*\";",
          "70:     public static final String SDI_DYNAMIC_FIELDS = \"sdi_*\";",
          "71:   }",
          "73:   public class AuditLogConstants {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:     public static final String INT_DYNAMIC_FIELDS = \"*_i\";",
          "73:     public static final String LONG_DYNAMIC_FIELDS = \"*_l\";",
          "74:     public static final String BOOLEAN_DYNAMIC_FIELDS = \"*_b\";",
          "75:     public static final String STRING_DYNAMIC_FIELDS = \"*_s\";",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrCommonLogData.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrCommonLogData.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrCommonLogData.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrCommonLogData.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.util.Map;",
          "28: import static org.apache.ambari.logsearch.solr.SolrConstants.CommonLogConstants.*;",
          "29: import static org.apache.ambari.logsearch.solr.SolrConstants.ServiceLogConstants.KEY_DYNAMIC_FIELDS;",
          "30: import static org.apache.ambari.logsearch.solr.SolrConstants.ServiceLogConstants.STORED_TOKEN_DYNAMIC_FIELDS;",
          "31: import static org.apache.ambari.logsearch.solr.SolrConstants.ServiceLogConstants.WS_DYNAMIC_FIELDS;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import static org.apache.ambari.logsearch.solr.SolrConstants.ServiceLogConstants.INT_DYNAMIC_FIELDS;",
          "30: import static org.apache.ambari.logsearch.solr.SolrConstants.ServiceLogConstants.LONG_DYNAMIC_FIELDS;",
          "31: import static org.apache.ambari.logsearch.solr.SolrConstants.ServiceLogConstants.BOOLEAN_DYNAMIC_FIELDS;",
          "32: import static org.apache.ambari.logsearch.solr.SolrConstants.ServiceLogConstants.STRING_DYNAMIC_FIELDS;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:   @Field(WS_DYNAMIC_FIELDS)",
          "93:   private Map<String, Object> wsDynamicFields;",
          "95:   @Override",
          "96:   public String getId() {",
          "97:     return this.id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:   @Field(INT_DYNAMIC_FIELDS)",
          "100:   private Map<String, Object> intDynamicFields;",
          "102:   @Field(LONG_DYNAMIC_FIELDS)",
          "103:   private Map<String, Object> longDynamicFields;",
          "105:   @Field(STRING_DYNAMIC_FIELDS)",
          "106:   private Map<String, Object> stringDynamicFields;",
          "108:   @Field(BOOLEAN_DYNAMIC_FIELDS)",
          "109:   private Map<String, Object> booleanDynamicFields;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "274:     if (wsDynamicFields != null) {",
          "275:       allDynamicFields.putAll(wsDynamicFields);",
          "276:     }",
          "278:     return allDynamicFields;",
          "279:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:     if (intDynamicFields != null) {",
          "296:       allDynamicFields.putAll(intDynamicFields);",
          "297:     }",
          "299:     if (longDynamicFields != null) {",
          "300:       allDynamicFields.putAll(longDynamicFields);",
          "301:     }",
          "303:     if (stringDynamicFields != null) {",
          "304:       allDynamicFields.putAll(stringDynamicFields);",
          "305:     }",
          "307:     if (booleanDynamicFields != null) {",
          "308:       allDynamicFields.putAll(booleanDynamicFields);",
          "309:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "289:   public void setWsDynamicFields(Map<String, Object> wsDynamicFields) {",
          "290:     this.wsDynamicFields = wsDynamicFields;",
          "291:   }",
          "292: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:   public void setIntDynamicFields(Map<String, Object> intDynamicFields) {",
          "327:     this.intDynamicFields = intDynamicFields;",
          "328:   }",
          "330:   public void setLongDynamicFields(Map<String, Object> longDynamicFields) {",
          "331:     this.longDynamicFields = longDynamicFields;",
          "332:   }",
          "334:   public void setStringDynamicFields(Map<String, Object> stringDynamicFields) {",
          "335:     this.stringDynamicFields = stringDynamicFields;",
          "336:   }",
          "338:   public void setBooleanDynamicFields(Map<String, Object> booleanDynamicFields) {",
          "339:     this.booleanDynamicFields = booleanDynamicFields;",
          "340:   }",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrServiceLogData.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrServiceLogData.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrServiceLogData.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/solr/model/SolrServiceLogData.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:   @Field(GROUP)",
          "53:   private String group;",
          "55:   @Field(SDI_DYNAMIC_FIELDS)",
          "56:   private Map<String, Object> sdiDynamicFields;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:   @Field(LOGGER_NAME)",
          "56:   private String loggerName;",
          "58:   @Field(METHOD)",
          "59:   private String method;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:     this.level = level;",
          "136:   }",
          "138:   public void setSdiDynamicFields(Map<String, Object> sdiDynamicFields) {",
          "139:     this.sdiDynamicFields = sdiDynamicFields;",
          "140:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:   @Override",
          "145:   public String getLoggerName() {",
          "146:     return loggerName;",
          "147:   }",
          "149:   @Override",
          "150:   public void setLoggerName(String loggerName) {",
          "151:     this.loggerName = loggerName;",
          "152:   }",
          "154:   @Override",
          "155:   public String getMethod() {",
          "156:     return method;",
          "157:   }",
          "159:   @Override",
          "160:   public void setMethod(String method) {",
          "161:     this.method = method;",
          "162:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f489cda9bc2ec474351a1719a8894886dd3005e",
      "candidate_info": {
        "commit_hash": "9f489cda9bc2ec474351a1719a8894886dd3005e",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9f489cda9bc2ec474351a1719a8894886dd3005e",
        "files": [
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/HBaseTimelineMetricsService.java",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecond.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OverriddenMetricsHostProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/CollectorHostDownRefreshCounter.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricHostProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAManager.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSReportPropertyProvider.java",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/metainfo.xml",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/metrics_grafana_util.py",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/params.py",
          "ambari-server/src/main/resources/common-services/DRUID/0.10.1/package/scripts/params.py",
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/alerts/alert_metrics_deviation.py",
          "ambari-server/src/main/resources/stacks/HDPWIN/2.1/hooks/before-START/scripts/params.py",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/JMXPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaReportPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProviderTest.java",
          "ambari-server/src/test/python/stacks/2.0.6/HDFS/test_alert_metrics_deviation.py",
          "ambari-server/src/test/python/stacks/2.0.6/configs/default_ams_embedded.json",
          "ambari-server/src/test/python/stacks/2.0.6/configs/default_with_bucket.json",
          "ambari-server/src/test/python/stacks/2.0.6/configs/repository_file.json",
          "ambari-server/src/test/python/stacks/2.3/configs/ats_1_5.json",
          "ambari-server/src/test/python/stacks/2.5/configs/hsi_default.json",
          "ambari-server/src/test/python/stacks/2.5/configs/hsi_default_for_restart.json",
          "ambari-server/src/test/python/stacks/2.5/configs/hsi_ha.json",
          "contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/hooks/before-START/scripts/params.py",
          "contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/services/stack_advisor.py",
          "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/hooks/before-START/scripts/params.py",
          "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/HIVE/package/scripts/params_linux.py",
          "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/stack_advisor.py"
        ],
        "message": "AMBARI-24290 : Fix issues in AMS multiple cluster support. (#1851)",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/HBaseTimelineMetricsService.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/HBaseTimelineMetricsService.java",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecond.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecond.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OverriddenMetricsHostProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OverriddenMetricsHostProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/CollectorHostDownRefreshCounter.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/CollectorHostDownRefreshCounter.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricHostProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricHostProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAManager.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAManager.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSReportPropertyProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSReportPropertyProvider.java",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/metrics_grafana_util.py||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/metrics_grafana_util.py",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/params.py||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/params.py",
          "ambari-server/src/main/resources/common-services/DRUID/0.10.1/package/scripts/params.py||ambari-server/src/main/resources/common-services/DRUID/0.10.1/package/scripts/params.py",
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/alerts/alert_metrics_deviation.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/alerts/alert_metrics_deviation.py",
          "ambari-server/src/main/resources/stacks/HDPWIN/2.1/hooks/before-START/scripts/params.py||ambari-server/src/main/resources/stacks/HDPWIN/2.1/hooks/before-START/scripts/params.py",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/JMXPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/JMXPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaReportPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaReportPropertyProviderTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProviderTest.java",
          "ambari-server/src/test/python/stacks/2.0.6/HDFS/test_alert_metrics_deviation.py||ambari-server/src/test/python/stacks/2.0.6/HDFS/test_alert_metrics_deviation.py",
          "contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/hooks/before-START/scripts/params.py||contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/hooks/before-START/scripts/params.py",
          "contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/services/stack_advisor.py||contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/services/stack_advisor.py",
          "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/hooks/before-START/scripts/params.py||contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/hooks/before-START/scripts/params.py",
          "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/HIVE/package/scripts/params_linux.py||contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/HIVE/package/scripts/params_linux.py",
          "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/stack_advisor.py||contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/stack_advisor.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/HBaseTimelineMetricsService.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/HBaseTimelineMetricsService.java": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/HBaseTimelineMetricsService.java -> ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/HBaseTimelineMetricsService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.metrics.core.timeline;",
          "20: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.USE_GROUPBY_AGGREGATOR_QUERIES;",
          "21: import static org.apache.ambari.metrics.core.timeline.availability.AggregationTaskRunner.ACTUAL_AGGREGATOR_NAMES;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.DEFAULT_INSTANCE_ID;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52: import org.apache.ambari.metrics.core.timeline.query.ConditionBuilder;",
          "53: import org.apache.ambari.metrics.core.timeline.query.PhoenixTransactSQL;",
          "54: import org.apache.ambari.metrics.core.timeline.query.TopNCondition;",
          "55: import org.apache.commons.collections.MapUtils;",
          "56: import org.apache.commons.lang.StringUtils;",
          "57: import org.apache.commons.logging.Log;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: import org.apache.commons.collections.CollectionUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "255:     TimelineMetrics metrics = new TimelineMetrics();",
          "256:     List<String> transientMetricNames = new ArrayList<>();",
          "258:     List<byte[]> uuids = metricMetadataManager.getUuidsForGetMetricQuery(metricFunctions.keySet(),",
          "259:       hostnames,",
          "260:       applicationId,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260:     if (configuration.getTimelineMetricsMultipleClusterSupport() && StringUtils.isEmpty(instanceId)) {",
          "261:       instanceId = DEFAULT_INSTANCE_ID;",
          "262:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "283:     Condition condition = conditionBuilder.build();",
          "286:       metrics = hBaseAccessor.getAggregateMetricRecords(condition, metricFunctions);",
          "287:     } else {",
          "288:       metrics = hBaseAccessor.getMetricRecords(condition, metricFunctions);",
          "",
          "[Removed Lines]",
          "285:     if (hostnames == null || hostnames.isEmpty()) {",
          "",
          "[Added Lines]",
          "291:     if (CollectionUtils.isEmpty(hostnames)) {",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java -> ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/PhoenixHBaseAccessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.CLUSTER_SECOND_TABLE_TTL;",
          "30: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.CONTAINER_METRICS_TTL;",
          "31: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.DATE_TIERED_COMPACTION_POLICY;",
          "32: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.FIFO_COMPACTION_POLICY_CLASS;",
          "33: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.GLOBAL_MAX_RETRIES;",
          "34: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.GLOBAL_RESULT_LIMIT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.DEFAULT_INSTANCE_ID;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.HSTORE_COMPACTION_CLASS_KEY;",
          "40: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.HSTORE_ENGINE_CLASS;",
          "41: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.TIMELINE_METRICS_EVENT_METRIC_PATTERNS;",
          "42: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.TRANSIENT_METRIC_PATTERNS;",
          "43: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.HOST_DAILY_TABLE_TTL;",
          "44: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.HOST_HOUR_TABLE_TTL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: import static org.apache.ambari.metrics.core.timeline.TimelineMetricConfiguration.TIMELINE_METRICS_SUPPORT_MULTIPLE_CLUSTERS;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "199:   private final boolean skipBlockCacheForAggregatorsEnabled;",
          "200:   private TimelineMetricMetadataManager metadataManagerInstance;",
          "201:   private Set<String> eventMetricPatterns = new HashSet<>();",
          "203:   private Map<String, Integer> tableTTL = new HashMap<>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:   private boolean supportMultipleClusterMetrics = false;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:     tableTTL.put(METRICS_CLUSTER_AGGREGATE_DAILY_TABLE_NAME, metricsConf.getInt(CLUSTER_DAILY_TABLE_TTL, 730 * 86400)); //2 years",
          "259:     tableTTL.put(METRIC_TRANSIENT_TABLE_NAME, metricsConf.getInt(METRICS_TRANSIENT_TABLE_TTL, 7 * 86400)); //7 days",
          "261:     if (cacheEnabled) {",
          "262:       LOG.debug(\"Initialising and starting metrics cache committer thread...\");",
          "263:       metricsCommiterThread = new MetricsCacheCommitterThread(this);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264:     this.supportMultipleClusterMetrics = Boolean.valueOf(metricsConf.get(TIMELINE_METRICS_SUPPORT_MULTIPLE_CLUSTERS, \"false\"));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "906:                 tm.getHostName(), tm.getAppId());",
          "908:         if (!tm.getAppId().equals(\"FLUME_HANDLER\")) {",
          "909:           metadataManager.putIfModifiedHostedInstanceMetadata(tm.getInstanceId(), tm.getHostName());",
          "910:         }",
          "911:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "914:           if (supportMultipleClusterMetrics && StringUtils.isEmpty(tm.getInstanceId())) {",
          "915:             tm.setInstanceId(DEFAULT_INSTANCE_ID);",
          "916:           }",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java -> ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/TimelineMetricConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:   public static final String HOST_APP_ID = \"HOST\";",
          "303:   public static final String DEFAULT_INSTANCE_PORT = \"12001\";",
          "305:   public static final String AMSHBASE_METRICS_WHITESLIST_FILE = \"amshbase_metrics_whitelist\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "303:   public static final String DEFAULT_INSTANCE_ID = \"DEFAULT\";",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecond.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecond.java": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecond.java -> ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/aggregators/TimelineMetricClusterAggregatorSecond.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:       skipInterpolationMetricPatterns.addAll(getJavaMetricPatterns(skipInterpolationMetricPatternStrings));",
          "100:     }",
          "103:   }",
          "105:   @Override",
          "",
          "[Removed Lines]",
          "102:     this.timelineMetricReadHelper = new TimelineMetricReadHelper(metadataManager, true);",
          "",
          "[Added Lines]",
          "102:     this.timelineMetricReadHelper = new TimelineMetricReadHelper(metadataManager);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:   private static final String PROPERTY_HDFS_HTTP_POLICY_VALUE_HTTPS_ONLY = \"HTTPS_ONLY\";",
          "101:   private static final String COLLECTOR_DEFAULT_PORT = \"6188\";",
          "104:   private static final Map<String, Map<String, String[]>> jmxDesiredProperties = new HashMap<>();",
          "105:   private static final Map<String, Map<String, String[]>> jmxDesiredRpcSuffixProperties = new ConcurrentHashMap<>();",
          "",
          "[Removed Lines]",
          "102:   private static boolean vipHostConfigPresent = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "374:     return null;",
          "375:   }",
          "379:     try {",
          "381:       String configType = \"cluster-env\";",
          "382:       String currentConfigVersion = getDesiredConfigVersion(clusterName, configType);",
          "383:       String oldConfigVersion = serviceConfigVersions.get(configType);",
          "384:       if (!currentConfigVersion.equals(oldConfigVersion)) {",
          "386:         serviceConfigVersions.put(configType, currentConfigVersion);",
          "387:         Map<String, String> configProperties = getDesiredConfigMap",
          "388:           (clusterName, currentConfigVersion, configType,",
          "389:             Collections.singletonMap(\"METRICS_COLLECTOR\",",
          "392:         if (!configProperties.isEmpty()) {",
          "393:           clusterMetricserverVipHost = configProperties.get(\"METRICS_COLLECTOR\");",
          "397:           }",
          "398:         }",
          "",
          "[Removed Lines]",
          "377:   private String getMetricsCollectorHostName(String clusterName)",
          "378:     throws SystemException {",
          "385:         vipHostConfigPresent = false;",
          "390:               new String[]{\"metrics_collector_vip_host\"}));",
          "394:           if (clusterMetricserverVipHost != null) {",
          "395:             LOG.info(\"Setting Metrics Collector Vip Host : \" + clusterMetricserverVipHost);",
          "396:             vipHostConfigPresent = true;",
          "",
          "[Added Lines]",
          "377:   private void checkAndAddExternalCollectorHosts(String clusterName) throws SystemException {",
          "388:               new String[]{\"metrics_collector_external_hosts\"}));",
          "392:           if (StringUtils.isNotEmpty(clusterMetricserverVipHost)) {",
          "393:             for (String collectorHost : StringUtils.split(clusterMetricserverVipHost, \",\")) {",
          "394:               metricsCollectorHAManager.addExternalMetricsCollectorHost(clusterName, collectorHost);",
          "395:             }",
          "396:             LOG.info(\"Setting Metrics Collector External Host : \" + clusterMetricserverVipHost);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "401:         configProperties = getDesiredConfigMap",
          "402:           (clusterName, currentConfigVersion, configType,",
          "403:             Collections.singletonMap(\"METRICS_COLLECTOR\",",
          "406:         if (!configProperties.isEmpty()) {",
          "408:         }",
          "409:       }",
          "410:     } catch (NoSuchParentResourceException | UnsupportedPropertyException e) {",
          "411:       LOG.warn(\"Failed to retrieve collector hostname.\", e);",
          "412:     }",
          "424:   }",
          "426:   @Override",
          "",
          "[Removed Lines]",
          "404:               new String[]{\"metrics_collector_vip_port\"}));",
          "407:           clusterMetricServerVipPort = configProperties.get(\"METRICS_COLLECTOR\");",
          "417:     String currentCollectorHost = null;",
          "418:     if (!vipHostConfigPresent) {",
          "419:       currentCollectorHost = metricsCollectorHAManager.getCollectorHost(clusterName);",
          "420:       }",
          "421:     LOG.debug(\"Cluster Metrics Vip Host : {}\", clusterMetricserverVipHost);",
          "423:     return (clusterMetricserverVipHost != null) ? clusterMetricserverVipHost : currentCollectorHost;",
          "",
          "[Added Lines]",
          "404:               new String[]{\"metrics_collector_external_port\"}));",
          "407:           clusterMetricServerVipPort = configProperties.getOrDefault(\"METRICS_COLLECTOR\", \"6188\");",
          "413:   }",
          "415:   private String getMetricsCollectorHostName(String clusterName)",
          "416:     throws SystemException {",
          "418:     checkAndAddExternalCollectorHosts(clusterName);",
          "419:     String currentCollectorHost = metricsCollectorHAManager.getCollectorHost(clusterName);",
          "420:     LOG.debug(\"Cluster Metrics Vip Host : \" + clusterMetricserverVipHost);",
          "422:     return currentCollectorHost;",
          "423:   }",
          "425:   @Override",
          "426:   public boolean isCollectorHostExternal(String clusterName) {",
          "427:     return metricsCollectorHAManager.isExternalCollector();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "867:     jmxPortMap.clear();",
          "868:     clusterHostComponentMap = new HashMap<>();",
          "869:     clusterGangliaCollectorMap = new HashMap<>();",
          "871:     Map<String, Cluster> clusterMap = clusters.getClusters();",
          "872:     if (MapUtils.isEmpty(clusterMap)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "874:     boolean hasMetricCollector = false;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "874:     }",
          "876:     for (Cluster cluster : clusterMap.values()) {",
          "877:       String clusterName = cluster.getClusterName();",
          "878:       Map<String, String> hostComponentMap = clusterHostComponentMap.get(clusterName);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "882:       hasMetricCollector = false;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "900:             metricsCollectorHAManager.addCollectorHost(clusterName, hostName);",
          "901:           }",
          "902:         }",
          "903:       }",
          "904:     }",
          "905:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "907:             hasMetricCollector = true;",
          "911:       if (!hasMetricCollector) {",
          "912:         checkAndAddExternalCollectorHosts(clusterName);",
          "913:       }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OverriddenMetricsHostProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OverriddenMetricsHostProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OverriddenMetricsHostProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OverriddenMetricsHostProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     return getOverriddenHost(componentName).map(host -> replaceVariables(clusterName, host));",
          "49:   }",
          "51:   private Optional<String> getOverriddenHost(String componentName) {",
          "52:     return Optional.ofNullable(overriddenHosts.get(componentName));",
          "53:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:   @Override",
          "52:   public boolean isCollectorHostExternal(String clusterName) {",
          "53:     return metricHostProvider.isCollectorHostExternal(clusterName);",
          "54:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/CollectorHostDownRefreshCounter.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/CollectorHostDownRefreshCounter.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/CollectorHostDownRefreshCounter.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/CollectorHostDownRefreshCounter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.server.controller.metrics;",
          "21: import java.util.concurrent.atomic.AtomicInteger;",
          "23: public class CollectorHostDownRefreshCounter {",
          "25:   private int collectorDownRefreshCounterLimit = 5;",
          "26:   private AtomicInteger collectorDownRefreshCounter;",
          "28:   CollectorHostDownRefreshCounter(int counter) {",
          "29:     this.collectorDownRefreshCounterLimit = counter;",
          "30:   }",
          "32:   public boolean testRefreshCounter() {",
          "33:     collectorDownRefreshCounter.incrementAndGet();",
          "34:     if (collectorDownRefreshCounter.get() == collectorDownRefreshCounterLimit) {",
          "35:       collectorDownRefreshCounter = new AtomicInteger(0);",
          "36:       return true;",
          "37:     }",
          "38:     return false;",
          "39:   }",
          "41: }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricHostProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricHostProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricHostProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricHostProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:   default Optional<String> getExternalHostName(String clusterName, String componentName) {",
          "86:     return Optional.empty();",
          "87:   }",
          "88: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:   public boolean isCollectorHostExternal(String clusterName);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.util.Random;",
          "22: import java.util.Set;",
          "23: import java.util.concurrent.CopyOnWriteArraySet;",
          "26: import org.apache.ambari.server.Role;",
          "27: import org.apache.ambari.server.controller.AmbariManagementController;",
          "",
          "[Removed Lines]",
          "24: import java.util.concurrent.atomic.AtomicInteger;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:   private String clusterName;",
          "41:   private Set<String> liveCollectorHosts;",
          "42:   private Set<String> deadCollectorHosts;",
          "45:   private String currentCollectorHost = null;",
          "47:   @Inject",
          "",
          "[Removed Lines]",
          "43:   private AtomicInteger collectorDownRefreshCounter;",
          "44:   private static int collectorDownRefreshCounterLimit = 5;",
          "",
          "[Added Lines]",
          "42:   private CollectorHostDownRefreshCounter collectorDownRefreshCounter = new CollectorHostDownRefreshCounter(5);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:     this.clusterName = clusterName;",
          "60:     this.liveCollectorHosts = new CopyOnWriteArraySet<>();",
          "61:     this.deadCollectorHosts = new CopyOnWriteArraySet<>();",
          "63:   }",
          "65:   public void addMetricsCollectorHost(String collectorHost) {",
          "",
          "[Removed Lines]",
          "62:     collectorDownRefreshCounter = new AtomicInteger(0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:     } else if (deadCollectorHost.equals(currentCollectorHost) && numCollectors() > 1) {",
          "121:         refreshCollectorHost(deadCollectorHost);",
          "122:       }",
          "123:     }",
          "",
          "[Removed Lines]",
          "120:       if (testRefreshCounter()) {",
          "",
          "[Added Lines]",
          "117:       if (collectorDownRefreshCounter.testRefreshCounter()) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "153:     A refresh counter to track number of collector down events received. If it exceeds the limit,",
          "154:     then we go ahead and refresh the collector.",
          "165:   public boolean isCollectorHostLive() {",
          "166:     for (String host : liveCollectorHosts) {",
          "",
          "[Removed Lines]",
          "156:   private boolean testRefreshCounter() {",
          "157:     collectorDownRefreshCounter.incrementAndGet();",
          "158:     if (collectorDownRefreshCounter.get() == collectorDownRefreshCounterLimit) {",
          "159:       collectorDownRefreshCounter = new AtomicInteger(0);",
          "160:       return true;",
          "161:     }",
          "162:     return false;",
          "163:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAManager.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAManager.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAManager.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.server.controller.metrics;",
          "20: import java.util.HashMap;",
          "21: import java.util.Map;",
          "23: import org.apache.ambari.server.controller.AmbariServer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.util.Iterator;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:   private static final Logger LOG =",
          "42:     LoggerFactory.getLogger(MetricsCollectorHAManager.class);",
          "44:   public MetricsCollectorHAManager() {",
          "45:     clusterCollectorHAState = new HashMap<>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:   private Map<String, Map<String, Boolean>> externalMetricCollectorsState = new HashMap<>();",
          "46:   private CollectorHostDownRefreshCounter externalCollectorDownRefreshCounter = new CollectorHostDownRefreshCounter(5);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:     collectorHAClusterState.addMetricsCollectorHost(collectorHost);",
          "66:   }",
          "68:   public String getCollectorHost(String clusterName) {",
          "70:     if (! clusterCollectorHAState.containsKey(clusterName)) {",
          "71:       clusterCollectorHAState.put(clusterName, new MetricsCollectorHAClusterState(clusterName));",
          "72:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:   public void addExternalMetricsCollectorHost(String clusterName, String collectorHost) {",
          "73:     Map<String, Boolean> hostStateMap = new HashMap<>();",
          "74:     hostStateMap.put(collectorHost, true);",
          "75:     externalMetricCollectorsState.put(clusterName, hostStateMap);",
          "76:   }",
          "80:     if (externalMetricCollectorsState.containsKey(clusterName)) {",
          "81:       for (String externalCollectorHost : externalMetricCollectorsState.get(clusterName).keySet()) {",
          "82:         if (externalMetricCollectorsState.get(clusterName).get(externalCollectorHost)) {",
          "83:           return externalCollectorHost;",
          "84:         }",
          "85:         return refreshAndReturnRandomExternalCollectorHost(clusterName);",
          "86:       }",
          "87:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:     return collectorHAClusterState.getCurrentCollectorHost();",
          "76:   }",
          "84:   @Subscribe",
          "85:   public void onMetricsCollectorHostDownEvent(MetricsCollectorHostDownEvent event) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   private String refreshAndReturnRandomExternalCollectorHost(String clusterName) {",
          "99:     Iterator<Map.Entry<String, Boolean>> itr = externalMetricCollectorsState.get(clusterName).entrySet().iterator();",
          "100:     while(itr.hasNext())",
          "101:     {",
          "102:       Map.Entry<String, Boolean> entry = itr.next();",
          "103:       entry.setValue(true);",
          "104:     }",
          "105:     itr = externalMetricCollectorsState.get(clusterName).entrySet().iterator();",
          "106:     return itr.next().getKey();",
          "107:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "87:     LOG.debug(\"MetricsCollectorHostDownEvent caught, Down collector : {}\", event.getCollectorHost());",
          "89:     String clusterName = event.getClusterName();",
          "92:   }",
          "94:   public boolean isEmpty() {",
          "96:   }",
          "98:   public boolean isCollectorHostLive(String clusterName) {",
          "99:     MetricsCollectorHAClusterState metricsCollectorHAClusterState = this.clusterCollectorHAState.get(clusterName);",
          "100:     return metricsCollectorHAClusterState != null && metricsCollectorHAClusterState.isCollectorHostLive();",
          "101:   }",
          "103:   public boolean isCollectorComponentLive(String clusterName) {",
          "104:     MetricsCollectorHAClusterState metricsCollectorHAClusterState = this.clusterCollectorHAState.get(clusterName);",
          "105:     return metricsCollectorHAClusterState != null && metricsCollectorHAClusterState.isCollectorComponentAlive();",
          "106:   }",
          "",
          "[Removed Lines]",
          "90:     MetricsCollectorHAClusterState collectorHAClusterState = clusterCollectorHAState.get(clusterName);",
          "91:     collectorHAClusterState.onCollectorHostDown(event.getCollectorHost());",
          "95:     return this.clusterCollectorHAState.isEmpty();",
          "",
          "[Added Lines]",
          "120:     if (externalMetricCollectorsState.containsKey(clusterName)) {",
          "121:       if (externalCollectorDownRefreshCounter.testRefreshCounter()) {",
          "122:         externalMetricCollectorsState.get(clusterName).put(event.getCollectorHost(), false);",
          "123:       }",
          "124:     } else {",
          "125:       MetricsCollectorHAClusterState collectorHAClusterState = clusterCollectorHAState.get(clusterName);",
          "126:       collectorHAClusterState.onCollectorHostDown(event.getCollectorHost());",
          "127:     }",
          "131:     return this.clusterCollectorHAState.isEmpty() && externalMetricCollectorsState.isEmpty();",
          "132:   }",
          "134:   public boolean isExternalCollector() {",
          "135:     return !externalMetricCollectorsState.isEmpty();",
          "139:     if (!externalMetricCollectorsState.isEmpty()) {",
          "140:       return true;",
          "141:     }",
          "147:     if (!externalMetricCollectorsState.isEmpty()) {",
          "148:       return true;",
          "149:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "360:         uriBuilder.setParameter(\"appId\", componentName);",
          "361:       }",
          "363:       if (temporalInfo != null) {",
          "364:         long startTime = temporalInfo.getStartTime();",
          "365:         if (startTime != -1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "363:       if (clusterName != null && hostProvider.isCollectorHostExternal(clusterName)) {",
          "364:         uriBuilder.setParameter(\"instanceId\", clusterName);",
          "365:       }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSReportPropertyProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSReportPropertyProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSReportPropertyProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSReportPropertyProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:         MetricsPropertyProvider.getSetString(propertyIdMap.keySet(), -1));",
          "201:       uriBuilder.setParameter(\"appId\", \"HOST\");",
          "202:       long startTime = temporalInfo.getStartTime();",
          "203:       if (startTime != -1) {",
          "204:         uriBuilder.setParameter(\"startTime\", String.valueOf(startTime));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:       if (clusterName != null && hostProvider.isCollectorHostExternal(clusterName)) {",
          "204:         uriBuilder.setParameter(\"instanceId\", clusterName);",
          "205:       }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/metrics_grafana_util.py||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/metrics_grafana_util.py": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/metrics_grafana_util.py -> ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/metrics_grafana_util.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:   if new_datasource_host == \"\":",
          "309:     Logger.warning(\"All metric collectors are unavailable. Will use random collector as datasource host.\")",
          "312:   Logger.info(\"New datasource host will be %s\" % new_datasource_host)",
          "",
          "[Removed Lines]",
          "310:     new_datasource_host = params.random_metric_collector_host",
          "",
          "[Added Lines]",
          "310:     new_datasource_host = params.metric_collector_host",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/params.py||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/params.py": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/params.py -> ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: metric_collector_host = select_metric_collector_hosts_from_hostnames(ams_collector_hosts)",
          "83: if 'cluster-env' in config['configurations'] and \\",
          "84:     'metrics_collector_external_port' in config['configurations']['cluster-env']:",
          "85:   metric_collector_port = config['configurations']['cluster-env']['metrics_collector_external_port']",
          "",
          "[Removed Lines]",
          "81: random_metric_collector_host = select_metric_collector_hosts_from_hostnames(ams_collector_hosts)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/DRUID/0.10.1/package/scripts/params.py||ambari-server/src/main/resources/common-services/DRUID/0.10.1/package/scripts/params.py": [
          "File: ambari-server/src/main/resources/common-services/DRUID/0.10.1/package/scripts/params.py -> ambari-server/src/main/resources/common-services/DRUID/0.10.1/package/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "113: if 'mysql' == metadata_storage_type:",
          "114:   jdbc_driver_jar = default(\"/ambariLevelParams/custom_mysql_jdbc_name\", None)",
          "115:   connector_curl_source = format(\"{jdk_location}/{jdbc_driver_jar}\")",
          "117:   downloaded_custom_connector = format(\"{tmp_dir}/{jdbc_driver_jar}\")",
          "119: check_db_connection_jar_name = \"DBConnectionVerification.jar\"",
          "",
          "[Removed Lines]",
          "116:   connector_download_dir=format(\"{druid_extensions_dir}/mysql-metadata-storage\")",
          "",
          "[Added Lines]",
          "115:   connector_download_dir = format(\"{druid_extensions_dir}/mysql-metadata-storage\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163: metric_collector_host = \"\"",
          "164: metric_collector_port = \"\"",
          "165: metric_collector_protocol = \"\"",
          "170: ams_collector_hosts = default(\"/clusterHostInfo/metrics_collector_hosts\", [])",
          "171: has_metric_collector = not len(ams_collector_hosts) == 0",
          "173: if has_metric_collector:",
          "191:     else:",
          "195: # Create current Hadoop Clients  Libs",
          "196: stack_version_unformatted = str(config['clusterLevelParams']['stack_version'])",
          "",
          "[Removed Lines]",
          "166: metric_truststore_path= default(\"/configurations/ams-ssl-client/ssl.client.truststore.location\", \"\")",
          "167: metric_truststore_type= default(\"/configurations/ams-ssl-client/ssl.client.truststore.type\", \"\")",
          "168: metric_truststore_password= default(\"/configurations/ams-ssl-client/ssl.client.truststore.password\", \"\")",
          "174:     metric_emitter_type = \"ambari-metrics\"",
          "175:     if 'cluster-env' in config['configurations'] and \\",
          "176:                     'metrics_collector_vip_host' in config['configurations']['cluster-env']:",
          "177:         metric_collector_host = config['configurations']['cluster-env']['metrics_collector_vip_host']",
          "178:     else:",
          "179:         metric_collector_host = ams_collector_hosts[0]",
          "180:     if 'cluster-env' in config['configurations'] and \\",
          "181:                     'metrics_collector_vip_port' in config['configurations']['cluster-env']:",
          "182:         metric_collector_port = config['configurations']['cluster-env']['metrics_collector_vip_port']",
          "183:     else:",
          "184:         metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"localhost:6188\")",
          "185:         if metric_collector_web_address.find(':') != -1:",
          "186:             metric_collector_port = metric_collector_web_address.split(':')[1]",
          "187:         else:",
          "188:             metric_collector_port = '6188'",
          "189:     if default(\"/configurations/ams-site/timeline.metrics.service.http.policy\", \"HTTP_ONLY\") == \"HTTPS_ONLY\":",
          "190:         metric_collector_protocol = 'https'",
          "192:         metric_collector_protocol = 'http'",
          "193:     pass",
          "",
          "[Added Lines]",
          "165: metric_truststore_path = default(\"/configurations/ams-ssl-client/ssl.client.truststore.location\", \"\")",
          "166: metric_truststore_type = default(\"/configurations/ams-ssl-client/ssl.client.truststore.type\", \"\")",
          "167: metric_truststore_password = default(\"/configurations/ams-ssl-client/ssl.client.truststore.password\", \"\")",
          "170: if 'cluster-env' in config['configurations'] and \\",
          "171:     'metrics_collector_external_hosts' in config['configurations']['cluster-env']:",
          "172:   ams_collector_hosts = config['configurations']['cluster-env']['metrics_collector_external_hosts']",
          "173:   set_instanceId = \"true\"",
          "174: else:",
          "175:   ams_collector_hosts = \",\".join(default(\"/clusterHostInfo/metrics_collector_hosts\", []))",
          "179:   metric_emitter_type = \"ambari-metrics\"",
          "180:   metric_collector_host = ams_collector_hosts[0]",
          "181:   if 'cluster-env' in config['configurations'] and \\",
          "182:       'metrics_collector_external_port' in config['configurations']['cluster-env']:",
          "183:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_external_port']",
          "184:   else:",
          "185:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"0.0.0.0:6188\")",
          "186:     if metric_collector_web_address.find(':') != -1:",
          "187:       metric_collector_port = metric_collector_web_address.split(':')[1]",
          "189:       metric_collector_port = '6188'",
          "190:   if default(\"/configurations/ams-site/timeline.metrics.service.http.policy\", \"HTTP_ONLY\") == \"HTTPS_ONLY\":",
          "191:     metric_collector_protocol = 'https'",
          "192:   else:",
          "193:     metric_collector_protocol = 'http'",
          "194:   pass",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/alerts/alert_metrics_deviation.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/alerts/alert_metrics_deviation.py": [
          "File: ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/alerts/alert_metrics_deviation.py -> ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/alerts/alert_metrics_deviation.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: AMS_HTTP_POLICY = '{{ams-site/timeline.metrics.service.http.policy}}'",
          "62: METRICS_COLLECTOR_WEBAPP_ADDRESS_KEY = '{{ams-site/timeline.metrics.service.webapp.address}}'",
          "66: CONNECTION_TIMEOUT_KEY = 'connection.timeout'",
          "67: CONNECTION_TIMEOUT_DEFAULT = 5.0",
          "",
          "[Removed Lines]",
          "63: METRICS_COLLECTOR_VIP_HOST_KEY = '{{cluster-env/metrics_collector_vip_host}}'",
          "64: METRICS_COLLECTOR_VIP_PORT_KEY = '{{cluster-env/metrics_collector_vip_port}}'",
          "",
          "[Added Lines]",
          "63: METRICS_COLLECTOR_VIP_HOST_KEY = '{{cluster-env/metrics_collector_external_hosts}}'",
          "64: METRICS_COLLECTOR_VIP_PORT_KEY = '{{cluster-env/metrics_collector_external_port}}'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:     return (RESULT_STATE_UNKNOWN, ['{0} is a required parameter for the script'.format(HDFS_SITE_KEY)])",
          "175:   if METRICS_COLLECTOR_VIP_HOST_KEY in configurations and METRICS_COLLECTOR_VIP_PORT_KEY in configurations:",
          "177:     collector_port = int(configurations[METRICS_COLLECTOR_VIP_PORT_KEY])",
          "178:   else:",
          "179:     # ams-site/timeline.metrics.service.webapp.address is required",
          "",
          "[Removed Lines]",
          "176:     collector_host = configurations[METRICS_COLLECTOR_VIP_HOST_KEY]",
          "",
          "[Added Lines]",
          "176:     collector_host = configurations[METRICS_COLLECTOR_VIP_HOST_KEY].split(',')[0]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stacks/HDPWIN/2.1/hooks/before-START/scripts/params.py||ambari-server/src/main/resources/stacks/HDPWIN/2.1/hooks/before-START/scripts/params.py": [
          "File: ambari-server/src/main/resources/stacks/HDPWIN/2.1/hooks/before-START/scripts/params.py -> ambari-server/src/main/resources/stacks/HDPWIN/2.1/hooks/before-START/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: config = Script.get_config()",
          "25: ams_collector_hosts = \",\".join(default(\"/clusterHostInfo/metrics_collector_hosts\", []))",
          "26: has_metric_collector = not len(ams_collector_hosts) == 0",
          "27: if has_metric_collector:",
          "28:   if 'cluster-env' in config['configurations'] and \\",
          "36:   else:",
          "37:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"0.0.0.0:6188\")",
          "38:     if metric_collector_web_address.find(':') != -1:",
          "",
          "[Removed Lines]",
          "29:       'metrics_collector_vip_host' in config['configurations']['cluster-env']:",
          "30:     metric_collector_host = config['configurations']['cluster-env']['metrics_collector_vip_host']",
          "31:   else:",
          "32:     metric_collector_host = select_metric_collector_hosts_from_hostnames(ams_collector_hosts)",
          "33:   if 'cluster-env' in config['configurations'] and \\",
          "34:       'metrics_collector_vip_port' in config['configurations']['cluster-env']:",
          "35:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_vip_port']",
          "",
          "[Added Lines]",
          "26: if 'cluster-env' in config['configurations'] and \\",
          "27:     'metrics_collector_external_hosts' in config['configurations']['cluster-env']:",
          "28:   ams_collector_hosts = config['configurations']['cluster-env']['metrics_collector_external_hosts']",
          "29:   set_instanceId = \"true\"",
          "30: else:",
          "31:   ams_collector_hosts = \",\".join(default(\"/clusterHostInfo/metrics_collector_hosts\", []))",
          "35:   metric_collector_host = select_metric_collector_hosts_from_hostnames(ams_collector_hosts)",
          "37:       'metrics_collector_external_port' in config['configurations']['cluster-env']:",
          "38:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_external_port']",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/JMXPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/JMXPropertyProviderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/JMXPropertyProviderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/JMXPropertyProviderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:     public boolean isCollectorComponentLive(String clusterName, MetricsService service) throws SystemException {",
          "698:       return false;",
          "699:     }",
          "700:   }",
          "701: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "701:     @Override",
          "702:     public boolean isCollectorHostExternal(String clusterName) {",
          "703:       return false;",
          "704:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProviderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProviderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProviderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:     public boolean isCollectorComponentLive(String clusterName, MetricsService service) throws SystemException {",
          "543:       return false;",
          "544:     }",
          "545:   }",
          "547: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546:     @Override",
          "547:     public boolean isCollectorHostExternal(String clusterName) {",
          "548:       return false;",
          "549:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProviderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProviderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProviderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1019:         throws SystemException {",
          "1020:       return isComponentLive;",
          "1021:     }",
          "1022:   }",
          "1023: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1023:     @Override",
          "1024:     public boolean isCollectorHostExternal(String clusterName) {",
          "1025:       return false;",
          "1026:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaReportPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaReportPropertyProviderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaReportPropertyProviderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaReportPropertyProviderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:         throws SystemException {",
          "133:       return true;",
          "134:     }",
          "135:   }",
          "136: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:     @Override",
          "137:     public boolean isCollectorHostExternal(String clusterName) {",
          "138:       return false;",
          "139:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProviderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProviderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProviderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1185:     public boolean isCollectorComponentLive(String clusterName, MetricsService service) throws SystemException {",
          "1186:       return true;",
          "1187:     }",
          "1188:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1189:     @Override",
          "1190:     public boolean isCollectorHostExternal(String clusterName) {",
          "1191:       return false;",
          "1192:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/python/stacks/2.0.6/HDFS/test_alert_metrics_deviation.py||ambari-server/src/test/python/stacks/2.0.6/HDFS/test_alert_metrics_deviation.py": [
          "File: ambari-server/src/test/python/stacks/2.0.6/HDFS/test_alert_metrics_deviation.py -> ambari-server/src/test/python/stacks/2.0.6/HDFS/test_alert_metrics_deviation.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:       '{{hdfs-site/dfs.namenode.http-address}}': 'c6401.ambari.apache.org:50070',",
          "119:       '{{cluster-env/security_enabled}}': 'false',",
          "120:       '{{cluster-env/smokeuser}}': 'ambari-qa',",
          "123:       '{{hdfs-site}}': {",
          "124:         'dfs.datanode.address': '0.0.0.0:50010',",
          "125:         'dfs.namenode.rpc-address': 'c6401.ambari.apache.org:8020',",
          "",
          "[Removed Lines]",
          "121:       '{{cluster-env/metrics_collector_vip_host}}': 'c6401.ambari.apache.org',",
          "122:       '{{cluster-env/metrics_collector_vip_port}}': '6188',",
          "",
          "[Added Lines]",
          "121:       '{{cluster-env/metrics_collector_external_hosts}}': 'c6401.ambari.apache.org',",
          "122:       '{{cluster-env/metrics_collector_external_port}}': '6188',",
          "",
          "---------------"
        ],
        "contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/hooks/before-START/scripts/params.py||contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/hooks/before-START/scripts/params.py": [
          "File: contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/hooks/before-START/scripts/params.py -> contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/hooks/before-START/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "98: has_hbase_masters = not len(hbase_master_hosts) == 0",
          "99: has_zk_host = not len(zk_hosts) == 0",
          "100: has_ganglia_server = not len(ganglia_server_hosts) == 0",
          "103: is_namenode_master = hostname in namenode_host",
          "104: is_jtnode_master = hostname in jtnode_host",
          "",
          "[Removed Lines]",
          "101: has_metric_collector = not len(ams_collector_hosts) == 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108: is_slave = hostname in slave_hosts",
          "109: if has_ganglia_server:",
          "110:   ganglia_server_host = ganglia_server_hosts[0]",
          "111: if has_metric_collector:",
          "112:   if 'cluster-env' in config['configurations'] and \\",
          "120:   else:",
          "122:     if metric_collector_web_address.find(':') != -1:",
          "123:       metric_collector_port = metric_collector_web_address.split(':')[1]",
          "124:     else:",
          "",
          "[Removed Lines]",
          "113:       'metrics_collector_vip_host' in config['configurations']['cluster-env']:",
          "114:     metric_collector_host = config['configurations']['cluster-env']['metrics_collector_vip_host']",
          "115:   else:",
          "116:     metric_collector_host = ams_collector_hosts[0]",
          "117:   if 'cluster-env' in config['configurations'] and \\",
          "118:       'metrics_collector_vip_port' in config['configurations']['cluster-env']:",
          "119:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_vip_port']",
          "121:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"localhost:6188\")",
          "",
          "[Added Lines]",
          "111: if 'cluster-env' in config['configurations'] and \\",
          "112:     'metrics_collector_external_hosts' in config['configurations']['cluster-env']:",
          "113:   ams_collector_hosts = config['configurations']['cluster-env']['metrics_collector_external_hosts']",
          "114: else:",
          "115:   ams_collector_hosts = \",\".join(default(\"/clusterHostInfo/metrics_collector_hosts\", []))",
          "117: has_metric_collector = not len(ams_collector_hosts) == 0",
          "119:   metric_collector_host = ams_collector_hosts[0]",
          "121:       'metrics_collector_external_port' in config['configurations']['cluster-env']:",
          "122:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_external_port']",
          "124:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"0.0.0.0:6188\")",
          "",
          "---------------"
        ],
        "contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/services/stack_advisor.py||contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/services/stack_advisor.py": [
          "File: contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/services/stack_advisor.py -> contrib/management-packs/hdf-ambari-mpack/src/main/resources/stacks/HDF/2.0/services/stack_advisor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "590:     amsCollectorHosts = self.getComponentHostNames(services, \"AMBARI_METRICS\", \"METRICS_COLLECTOR\")",
          "592:     if 'cluster-env' in services['configurations'] and \\",
          "595:     else:",
          "596:       metric_collector_host = 'localhost' if len(amsCollectorHosts) == 0 else amsCollectorHosts[0]",
          "",
          "[Removed Lines]",
          "593:         'metrics_collector_vip_host' in services['configurations']['cluster-env']['properties']:",
          "594:       metric_collector_host = services['configurations']['cluster-env']['properties']['metrics_collector_vip_host']",
          "",
          "[Added Lines]",
          "593:         'metrics_collector_external_hosts' in services['configurations']['cluster-env']['properties']:",
          "594:       metric_collector_host = services['configurations']['cluster-env']['properties']['metrics_collector_external_hosts']",
          "",
          "---------------"
        ],
        "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/hooks/before-START/scripts/params.py||contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/hooks/before-START/scripts/params.py": [
          "File: contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/hooks/before-START/scripts/params.py -> contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/hooks/before-START/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: zk_hosts = default(\"/clusterHostInfo/zookeeper_hosts\", [])",
          "89: ganglia_server_hosts = default(\"/clusterHostInfo/ganglia_server_host\", [])",
          "90: ams_collector_hosts = default(\"/clusterHostInfo/metrics_collector_hosts\", [])",
          "92: has_namenode = not len(namenode_host) == 0",
          "93: has_resourcemanager = not len(rm_host) == 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: if 'cluster-env' in config['configurations'] and \\",
          "92:     'metrics_collector_external_hosts' in config['configurations']['cluster-env']:",
          "93:   ams_collector_hosts = config['configurations']['cluster-env']['metrics_collector_external_hosts']",
          "94:   set_instanceId = \"true\"",
          "95: else:",
          "96:   ams_collector_hosts = \",\".join(default(\"/clusterHostInfo/metrics_collector_hosts\", []))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109: if has_ganglia_server:",
          "110:   ganglia_server_host = ganglia_server_hosts[0]",
          "111: if has_metric_collector:",
          "112:   if 'cluster-env' in config['configurations'] and \\",
          "115:   else:",
          "122:     if metric_collector_web_address.find(':') != -1:",
          "123:       metric_collector_port = metric_collector_web_address.split(':')[1]",
          "124:     else:",
          "",
          "[Removed Lines]",
          "113:       'metrics_collector_vip_host' in config['configurations']['cluster-env']:",
          "114:     metric_collector_host = config['configurations']['cluster-env']['metrics_collector_vip_host']",
          "116:     metric_collector_host = ams_collector_hosts[0]",
          "117:   if 'cluster-env' in config['configurations'] and \\",
          "118:       'metrics_collector_vip_port' in config['configurations']['cluster-env']:",
          "119:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_vip_port']",
          "120:   else:",
          "121:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"localhost:6188\")",
          "",
          "[Added Lines]",
          "118:   metric_collector_host = ams_collector_hosts[0]",
          "120:       'metrics_collector_external_port' in config['configurations']['cluster-env']:",
          "121:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_external_port']",
          "123:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"0.0.0.0:6188\")",
          "",
          "---------------"
        ],
        "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/HIVE/package/scripts/params_linux.py||contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/HIVE/package/scripts/params_linux.py": [
          "File: contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/HIVE/package/scripts/params_linux.py -> contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/HIVE/package/scripts/params_linux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "482: ############# AMS related params #####################",
          "483: ########################################################",
          "484: ams_collector_hosts = default(\"/clusterHostInfo/metrics_collector_hosts\", [])",
          "485: has_metric_collector = not len(ams_collector_hosts) == 0",
          "486: if has_metric_collector:",
          "487:   if 'cluster-env' in config['configurations'] and \\",
          "495:   else:",
          "497:     if metric_collector_web_address.find(':') != -1:",
          "498:       metric_collector_port = metric_collector_web_address.split(':')[1]",
          "499:     else:",
          "",
          "[Removed Lines]",
          "488:       'metrics_collector_vip_host' in config['configurations']['cluster-env']:",
          "489:     metric_collector_host = config['configurations']['cluster-env']['metrics_collector_vip_host']",
          "490:   else:",
          "491:     metric_collector_host = ams_collector_hosts[0]",
          "492:   if 'cluster-env' in config['configurations'] and \\",
          "493:       'metrics_collector_vip_port' in config['configurations']['cluster-env']:",
          "494:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_vip_port']",
          "496:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"localhost:6188\")",
          "",
          "[Added Lines]",
          "485: if 'cluster-env' in config['configurations'] and \\",
          "486:     'metrics_collector_external_hosts' in config['configurations']['cluster-env']:",
          "487:   ams_collector_hosts = config['configurations']['cluster-env']['metrics_collector_external_hosts']",
          "488:   set_instanceId = \"true\"",
          "489: else:",
          "490:   ams_collector_hosts = \",\".join(default(\"/clusterHostInfo/metrics_collector_hosts\", []))",
          "494:   metric_collector_host = ams_collector_hosts[0]",
          "496:       'metrics_collector_external_port' in config['configurations']['cluster-env']:",
          "497:     metric_collector_port = config['configurations']['cluster-env']['metrics_collector_external_port']",
          "499:     metric_collector_web_address = default(\"/configurations/ams-site/timeline.metrics.service.webapp.address\", \"0.0.0.0:6188\")",
          "",
          "---------------"
        ],
        "contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/stack_advisor.py||contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/stack_advisor.py": [
          "File: contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/stack_advisor.py -> contrib/management-packs/odpi-ambari-mpack/src/main/resources/stacks/ODPi/2.0/services/stack_advisor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "581:     putAmsHbaseSiteProperty = self.putProperty(configurations, \"ams-hbase-site\", services)",
          "582:     putAmsSiteProperty = self.putProperty(configurations, \"ams-site\", services)",
          "583:     putHbaseEnvProperty = self.putProperty(configurations, \"ams-hbase-env\", services)",
          "585:     putGrafanaPropertyAttribute = self.putPropertyAttribute(configurations, \"ams-grafana-env\")",
          "587:     amsCollectorHosts = self.getComponentHostNames(services, \"AMBARI_METRICS\", \"METRICS_COLLECTOR\")",
          "589:     if 'cluster-env' in services['configurations'] and \\",
          "595:     putAmsSiteProperty(\"timeline.metrics.service.webapp.address\", str(metric_collector_host) + \":6188\")",
          "",
          "[Removed Lines]",
          "584:     putGrafanaProperty = self.putProperty(configurations, \"ams-grafana-env\", services)",
          "590:         'metrics_collector_vip_host' in services['configurations']['cluster-env']['properties']:",
          "591:       metric_collector_host = services['configurations']['cluster-env']['properties']['metrics_collector_vip_host']",
          "592:     else:",
          "593:       metric_collector_host = 'localhost' if len(amsCollectorHosts) == 0 else amsCollectorHosts[0]",
          "",
          "[Added Lines]",
          "588:         'metrics_collector_external_hosts' in services['configurations']['cluster-env']:",
          "589:       amsCollectorHosts = services['configurations']['cluster-env']['metrics_collector_external_hosts']",
          "591:     metric_collector_host = 'localhost' if len(amsCollectorHosts) == 0 else amsCollectorHosts[0]",
          "",
          "---------------"
        ]
      }
    }
  ]
}