{
  "cve_id": "CVE-2023-47090",
  "cve_desc": "NATS nats-server before 2.9.23 and 2.10.x before 2.10.2 has an authentication bypass. An implicit $G user in an authorization block can sometimes be used for unauthenticated access, even when the intention of the configuration was for each user to have an account. The earliest affected version is 2.2.0.",
  "repo": "nats-io/nats-server",
  "patch_hash": "fa5b7afcb64e7e887e49afdd032358802b5c4478",
  "patch_info": {
    "commit_hash": "fa5b7afcb64e7e887e49afdd032358802b5c4478",
    "repo": "nats-io/nats-server",
    "commit_url": "https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478",
    "files": [
      "server/opts.go",
      "server/opts_test.go",
      "server/routes_test.go",
      "server/server.go",
      "server/server_test.go"
    ],
    "message": "[FIXED] Do not bypass authorization blocks when turning on $SYS account access (#4605)\n\nOnly setup auto no-auth for $G account iff no authorization block was\ndefined.\n\nSigned-off-by: Derek Collison <derek@nats.io>\n\nResolves #4535",
    "before_after_code_files": [
      "server/opts.go||server/opts.go",
      "server/opts_test.go||server/opts_test.go",
      "server/routes_test.go||server/routes_test.go",
      "server/server.go||server/server.go",
      "server/server_test.go||server/server_test.go"
    ]
  },
  "patch_diff": {
    "server/opts.go||server/opts.go": [
      "File: server/opts.go -> server/opts.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "397:  OCSPCacheConfig *OCSPResponseCacheConfig",
      "398: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "400:  authBlockDefined bool",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "886:    return",
      "887:   }",
      "889:   o.Username = auth.user",
      "890:   o.Password = auth.pass",
      "891:   o.Authorization = auth.token",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "891:   o.authBlockDefined = true",
      "",
      "---------------"
    ],
    "server/opts_test.go||server/opts_test.go": [
      "File: server/opts_test.go -> server/opts_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "120:   LameDuckDuration:      4 * time.Minute,",
      "121:   ConnectErrorReports:   86400,",
      "122:   ReconnectErrorReports: 5,",
      "123:  }",
      "125:  opts, err := ProcessConfigFile(\"./configs/test.conf\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "123:   authBlockDefined:      true,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "133: func TestTLSConfigFile(t *testing.T) {",
      "134:  golden := &Options{",
      "142:  }",
      "143:  opts, err := ProcessConfigFile(\"./configs/tls.conf\")",
      "144:  if err != nil {",
      "",
      "[Removed Lines]",
      "135:   ConfigFile:  \"./configs/tls.conf\",",
      "136:   Host:        \"127.0.0.1\",",
      "137:   Port:        4443,",
      "138:   Username:    \"derek\",",
      "139:   Password:    \"foo\",",
      "140:   AuthTimeout: 1.0,",
      "141:   TLSTimeout:  2.0,",
      "",
      "[Added Lines]",
      "136:   ConfigFile:       \"./configs/tls.conf\",",
      "137:   Host:             \"127.0.0.1\",",
      "138:   Port:             4443,",
      "139:   Username:         \"derek\",",
      "140:   Password:         \"foo\",",
      "141:   AuthTimeout:      1.0,",
      "142:   TLSTimeout:       2.0,",
      "143:   authBlockDefined: true,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "283:   LameDuckDuration:      4 * time.Minute,",
      "284:   ConnectErrorReports:   86400,",
      "285:   ReconnectErrorReports: 5,",
      "286:  }",
      "287:  fopts, err := ProcessConfigFile(\"./configs/test.conf\")",
      "288:  if err != nil {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "288:   authBlockDefined:      true,",
      "",
      "---------------"
    ],
    "server/routes_test.go||server/routes_test.go": [
      "File: server/routes_test.go -> server/routes_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:    NoAdvertise:    true,",
      "106:    ConnectRetries: 2,",
      "107:   },",
      "109:  }",
      "",
      "[Removed Lines]",
      "108:   PidFile: \"/tmp/nats-server/nats_cluster_test.pid\",",
      "",
      "[Added Lines]",
      "108:   PidFile:          \"/tmp/nats-server/nats_cluster_test.pid\",",
      "109:   authBlockDefined: true,",
      "",
      "---------------"
    ],
    "server/server.go||server/server.go": [
      "File: server/server.go -> server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "1246:    uname := s.sysAccOnlyNoAuthUser",
      "",
      "[Removed Lines]",
      "1243:   if len(opts.TrustedOperators) == 0 && numAccounts == 2 && opts.NoAuthUser == _EMPTY_ {",
      "",
      "[Added Lines]",
      "1243:   if len(opts.TrustedOperators) == 0 && numAccounts == 2 && opts.NoAuthUser == _EMPTY_ && !opts.authBlockDefined {",
      "",
      "---------------"
    ],
    "server/server_test.go||server/server_test.go": [
      "File: server/server_test.go -> server/server_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:  \"context\"",
      "20:  \"crypto/tls\"",
      "21:  \"encoding/json\"",
      "22:  \"flag\"",
      "23:  \"fmt\"",
      "24:  \"io\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22:  \"errors\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2081:  checkLog(c1, c2)",
      "2082: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2086: func TestServerAuthBlockAndSysAccounts(t *testing.T) {",
      "2087:  conf := createConfFile(t, []byte(`",
      "2088:   listen: 127.0.0.1:-1",
      "2089:   server_name: s-test",
      "2090:   authorization {",
      "2091:    users = [ { user: \"u\", password: \"pass\"} ]",
      "2092:   }",
      "2093:   accounts {",
      "2094:    $SYS: { users: [ { user: admin, password: pwd } ] }",
      "2095:   }",
      "2096:  `))",
      "2098:  s, _ := RunServerWithConfig(conf)",
      "2099:  defer s.Shutdown()",
      "2102:  nc, err := nats.Connect(s.ClientURL(), nats.UserInfo(\"u\", \"pass\"))",
      "2103:  require_NoError(t, err)",
      "2104:  defer nc.Close()",
      "2107:  _, err = nats.Connect(s.ClientURL())",
      "2108:  require_Error(t, err, nats.ErrAuthorization, errors.New(\"nats: Authorization Violation\"))",
      "2109: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2737c563528f1de5f33b8fe52fc17306f12ab38b",
      "candidate_info": {
        "commit_hash": "2737c563528f1de5f33b8fe52fc17306f12ab38b",
        "repo": "nats-io/nats-server",
        "commit_url": "https://github.com/nats-io/nats-server/commit/2737c563528f1de5f33b8fe52fc17306f12ab38b",
        "files": [
          "server/opts.go",
          "server/opts_test.go",
          "server/routes_test.go",
          "server/server.go",
          "server/server_test.go"
        ],
        "message": "Only setup auto no-auth for $G account iff no authorization block was defined.\n\nSigned-off-by: Derek Collison <derek@nats.io>",
        "before_after_code_files": [
          "server/opts.go||server/opts.go",
          "server/opts_test.go||server/opts_test.go",
          "server/routes_test.go||server/routes_test.go",
          "server/server.go||server/server.go",
          "server/server_test.go||server/server_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/nats-io/nats-server/pull/4605"
        ],
        "olp_code_files": {
          "patch": [
            "server/opts.go||server/opts.go",
            "server/opts_test.go||server/opts_test.go",
            "server/routes_test.go||server/routes_test.go",
            "server/server.go||server/server.go",
            "server/server_test.go||server/server_test.go"
          ],
          "candidate": [
            "server/opts.go||server/opts.go",
            "server/opts_test.go||server/opts_test.go",
            "server/routes_test.go||server/routes_test.go",
            "server/server.go||server/server.go",
            "server/server_test.go||server/server_test.go"
          ]
        }
      },
      "candidate_diff": {
        "server/opts.go||server/opts.go": [
          "File: server/opts.go -> server/opts.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:  OCSPCacheConfig *OCSPResponseCacheConfig",
          "398: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400:  authBlockDefined bool",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "886:    return",
          "887:   }",
          "889:   o.Username = auth.user",
          "890:   o.Password = auth.pass",
          "891:   o.Authorization = auth.token",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "891:   o.authBlockDefined = true",
          "",
          "---------------"
        ],
        "server/opts_test.go||server/opts_test.go": [
          "File: server/opts_test.go -> server/opts_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   LameDuckDuration:      4 * time.Minute,",
          "121:   ConnectErrorReports:   86400,",
          "122:   ReconnectErrorReports: 5,",
          "123:  }",
          "125:  opts, err := ProcessConfigFile(\"./configs/test.conf\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:   authBlockDefined:      true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: func TestTLSConfigFile(t *testing.T) {",
          "134:  golden := &Options{",
          "142:  }",
          "143:  opts, err := ProcessConfigFile(\"./configs/tls.conf\")",
          "144:  if err != nil {",
          "",
          "[Removed Lines]",
          "135:   ConfigFile:  \"./configs/tls.conf\",",
          "136:   Host:        \"127.0.0.1\",",
          "137:   Port:        4443,",
          "138:   Username:    \"derek\",",
          "139:   Password:    \"foo\",",
          "140:   AuthTimeout: 1.0,",
          "141:   TLSTimeout:  2.0,",
          "",
          "[Added Lines]",
          "136:   ConfigFile:       \"./configs/tls.conf\",",
          "137:   Host:             \"127.0.0.1\",",
          "138:   Port:             4443,",
          "139:   Username:         \"derek\",",
          "140:   Password:         \"foo\",",
          "141:   AuthTimeout:      1.0,",
          "142:   TLSTimeout:       2.0,",
          "143:   authBlockDefined: true,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "283:   LameDuckDuration:      4 * time.Minute,",
          "284:   ConnectErrorReports:   86400,",
          "285:   ReconnectErrorReports: 5,",
          "286:  }",
          "287:  fopts, err := ProcessConfigFile(\"./configs/test.conf\")",
          "288:  if err != nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:   authBlockDefined:      true,",
          "",
          "---------------"
        ],
        "server/routes_test.go||server/routes_test.go": [
          "File: server/routes_test.go -> server/routes_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:    NoAdvertise:    true,",
          "106:    ConnectRetries: 2,",
          "107:   },",
          "109:  }",
          "",
          "[Removed Lines]",
          "108:   PidFile: \"/tmp/nats-server/nats_cluster_test.pid\",",
          "",
          "[Added Lines]",
          "108:   PidFile:          \"/tmp/nats-server/nats_cluster_test.pid\",",
          "109:   authBlockDefined: true,",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1246:    uname := s.sysAccOnlyNoAuthUser",
          "",
          "[Removed Lines]",
          "1243:   if len(opts.TrustedOperators) == 0 && numAccounts == 2 && opts.NoAuthUser == _EMPTY_ {",
          "",
          "[Added Lines]",
          "1243:   if len(opts.TrustedOperators) == 0 && numAccounts == 2 && opts.NoAuthUser == _EMPTY_ && !opts.authBlockDefined {",
          "",
          "---------------"
        ],
        "server/server_test.go||server/server_test.go": [
          "File: server/server_test.go -> server/server_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  \"context\"",
          "20:  \"crypto/tls\"",
          "21:  \"encoding/json\"",
          "22:  \"flag\"",
          "23:  \"fmt\"",
          "24:  \"io\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:  \"errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2081:  checkLog(c1, c2)",
          "2082: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2086: func TestServerAuthBlockAndSysAccounts(t *testing.T) {",
          "2087:  conf := createConfFile(t, []byte(`",
          "2088:   listen: 127.0.0.1:-1",
          "2089:   server_name: s-test",
          "2090:   authorization {",
          "2091:    users = [ { user: \"u\", password: \"pass\"} ]",
          "2092:   }",
          "2093:   accounts {",
          "2094:    $SYS: { users: [ { user: admin, password: pwd } ] }",
          "2095:   }",
          "2096:  `))",
          "2098:  s, _ := RunServerWithConfig(conf)",
          "2099:  defer s.Shutdown()",
          "2102:  nc, err := nats.Connect(s.ClientURL(), nats.UserInfo(\"u\", \"pass\"))",
          "2103:  require_NoError(t, err)",
          "2104:  defer nc.Close()",
          "2107:  _, err = nats.Connect(s.ClientURL())",
          "2108:  require_Error(t, err, nats.ErrAuthorization, errors.New(\"nats: Authorization Violation\"))",
          "2109: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28eb7c0ac2fec792c9223001445f3befc5de55c3",
      "candidate_info": {
        "commit_hash": "28eb7c0ac2fec792c9223001445f3befc5de55c3",
        "repo": "nats-io/nats-server",
        "commit_url": "https://github.com/nats-io/nats-server/commit/28eb7c0ac2fec792c9223001445f3befc5de55c3",
        "files": [
          "server/opts.go",
          "server/opts_test.go",
          "server/routes_test.go",
          "server/server.go",
          "server/server_test.go"
        ],
        "message": "Only setup auto no-auth for $G account iff no authorization block was defined.\n\nSigned-off-by: Derek Collison <derek@nats.io>",
        "before_after_code_files": [
          "server/opts.go||server/opts.go",
          "server/opts_test.go||server/opts_test.go",
          "server/routes_test.go||server/routes_test.go",
          "server/server.go||server/server.go",
          "server/server_test.go||server/server_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "server/opts.go||server/opts.go",
            "server/opts_test.go||server/opts_test.go",
            "server/routes_test.go||server/routes_test.go",
            "server/server.go||server/server.go",
            "server/server_test.go||server/server_test.go"
          ],
          "candidate": [
            "server/opts.go||server/opts.go",
            "server/opts_test.go||server/opts_test.go",
            "server/routes_test.go||server/routes_test.go",
            "server/server.go||server/server.go",
            "server/server_test.go||server/server_test.go"
          ]
        }
      },
      "candidate_diff": {
        "server/opts.go||server/opts.go": [
          "File: server/opts.go -> server/opts.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:  OCSPCacheConfig *OCSPResponseCacheConfig",
          "348: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350:  authBlockDefined bool",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "830:    return",
          "831:   }",
          "833:   o.Username = auth.user",
          "834:   o.Password = auth.pass",
          "835:   o.Authorization = auth.token",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "835:   o.authBlockDefined = true",
          "",
          "---------------"
        ],
        "server/opts_test.go||server/opts_test.go": [
          "File: server/opts_test.go -> server/opts_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:   LameDuckDuration:      4 * time.Minute,",
          "120:   ConnectErrorReports:   86400,",
          "121:   ReconnectErrorReports: 5,",
          "122:  }",
          "124:  opts, err := ProcessConfigFile(\"./configs/test.conf\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:   authBlockDefined:      true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132: func TestTLSConfigFile(t *testing.T) {",
          "133:  golden := &Options{",
          "141:  }",
          "142:  opts, err := ProcessConfigFile(\"./configs/tls.conf\")",
          "143:  if err != nil {",
          "",
          "[Removed Lines]",
          "134:   ConfigFile:  \"./configs/tls.conf\",",
          "135:   Host:        \"127.0.0.1\",",
          "136:   Port:        4443,",
          "137:   Username:    \"derek\",",
          "138:   Password:    \"foo\",",
          "139:   AuthTimeout: 1.0,",
          "140:   TLSTimeout:  2.0,",
          "",
          "[Added Lines]",
          "135:   ConfigFile:       \"./configs/tls.conf\",",
          "136:   Host:             \"127.0.0.1\",",
          "137:   Port:             4443,",
          "138:   Username:         \"derek\",",
          "139:   Password:         \"foo\",",
          "140:   AuthTimeout:      1.0,",
          "141:   TLSTimeout:       2.0,",
          "142:   authBlockDefined: true,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "282:   LameDuckDuration:      4 * time.Minute,",
          "283:   ConnectErrorReports:   86400,",
          "284:   ReconnectErrorReports: 5,",
          "285:  }",
          "286:  fopts, err := ProcessConfigFile(\"./configs/test.conf\")",
          "287:  if err != nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "287:   authBlockDefined:      true,",
          "",
          "---------------"
        ],
        "server/routes_test.go||server/routes_test.go": [
          "File: server/routes_test.go -> server/routes_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:    NoAdvertise:    true,",
          "85:    ConnectRetries: 2,",
          "86:   },",
          "88:  }",
          "",
          "[Removed Lines]",
          "87:   PidFile: \"/tmp/nats-server/nats_cluster_test.pid\",",
          "",
          "[Added Lines]",
          "87:   PidFile:          \"/tmp/nats-server/nats_cluster_test.pid\",",
          "88:   authBlockDefined: true,",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "940:    uname := s.sysAccOnlyNoAuthUser",
          "",
          "[Removed Lines]",
          "937:   if len(opts.TrustedOperators) == 0 && numAccounts == 2 && opts.NoAuthUser == _EMPTY_ {",
          "",
          "[Added Lines]",
          "937:   if len(opts.TrustedOperators) == 0 && numAccounts == 2 && opts.NoAuthUser == _EMPTY_ && !opts.authBlockDefined {",
          "",
          "---------------"
        ],
        "server/server_test.go||server/server_test.go": [
          "File: server/server_test.go -> server/server_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  \"context\"",
          "20:  \"crypto/tls\"",
          "21:  \"encoding/json\"",
          "22:  \"flag\"",
          "23:  \"fmt\"",
          "24:  \"io\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:  \"errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2069:  checkLog(c1, c2)",
          "2070: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2074: func TestServerAuthBlockAndSysAccounts(t *testing.T) {",
          "2075:  conf := createConfFile(t, []byte(`",
          "2076:   listen: 127.0.0.1:-1",
          "2077:   server_name: s-test",
          "2078:   authorization {",
          "2079:    users = [ { user: \"u\", password: \"pass\"} ]",
          "2080:   }",
          "2081:   accounts {",
          "2082:    $SYS: { users: [ { user: admin, password: pwd } ] }",
          "2083:   }",
          "2084:  `))",
          "2086:  s, _ := RunServerWithConfig(conf)",
          "2087:  defer s.Shutdown()",
          "2090:  nc, err := nats.Connect(s.ClientURL(), nats.UserInfo(\"u\", \"pass\"))",
          "2091:  require_NoError(t, err)",
          "2092:  defer nc.Close()",
          "2095:  _, err = nats.Connect(s.ClientURL())",
          "2096:  require_Error(t, err, nats.ErrAuthorization, errors.New(\"nats: Authorization Violation\"))",
          "2097: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}