{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e811f175ee2e7f12fea76c2070473921c37e71d9",
      "candidate_info": {
        "commit_hash": "e811f175ee2e7f12fea76c2070473921c37e71d9",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e811f175ee2e7f12fea76c2070473921c37e71d9",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java"
        ],
        "message": "PDFBOX-4892: fix previous commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887789 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:         COSDictionary referenceDict = new COSDictionary();",
          "162:         referenceDict.setItem(COSName.TYPE, COSName.SIG_REF);",
          "163:         referenceDict.setItem(COSName.TRANSFORM_METHOD, COSName.DOCMDP);",
          "165:         referenceDict.setItem(COSName.TRANSFORM_PARAMS, transformParameters);",
          "166:         referenceDict.setNeedToBeUpdated(true);",
          "",
          "[Removed Lines]",
          "164:         referenceDict.setItem(DIGEST_METHOD, COSName.getPDFName(\"SHA1\"));",
          "",
          "[Added Lines]",
          "164:         referenceDict.setItem(COSName.DIGEST_METHOD, COSName.getPDFName(\"SHA1\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6189ccc36f7779df103589fa9f13da8db47522e",
      "candidate_info": {
        "commit_hash": "c6189ccc36f7779df103589fa9f13da8db47522e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c6189ccc36f7779df103589fa9f13da8db47522e",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java"
        ],
        "message": "PDFBOX-4892: dispose unused, as suggested by valerybokov; add exception text\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889846 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:         {",
          "118:             return new GroupGraphics(groupImage, (Graphics2D)g, groupAlphaImage, (Graphics2D)a);",
          "119:         }",
          "121:     }",
          "123:     @Override",
          "",
          "[Removed Lines]",
          "120:         throw new UnsupportedOperationException();",
          "",
          "[Added Lines]",
          "120:         g.dispose();",
          "121:         a.dispose();",
          "122:         throw new UnsupportedOperationException(\"Only Graphics2D supported by this method\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0168f4bf593481940fc8113d8d8cb03c6a6415c",
      "candidate_info": {
        "commit_hash": "c0168f4bf593481940fc8113d8d8cb03c6a6415c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c0168f4bf593481940fc8113d8d8cb03c6a6415c",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java"
        ],
        "message": "PDFBOX-5138: add simple test for the two examples\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887967 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.pdfbox.examples.pdmodel;",
          "19: import java.io.File;",
          "20: import java.io.FileInputStream;",
          "21: import java.io.IOException;",
          "22: import java.io.InputStream;",
          "24: import org.apache.pdfbox.io.IOUtils;",
          "26: import org.junit.Assert;",
          "27: import org.junit.Test;",
          "34: public class TestEmbeddedFiles",
          "35: {",
          "41:     @Test",
          "42:     public void TestEmbeddedFiles() throws IOException",
          "43:     {",
          "44:         String outputFile = \"target/test-output/EmbeddedFile.pdf\";",
          "45:         String embeddedFile = \"target/test-output/test.txt\";",
          "47:         new File(outputFile).delete();",
          "48:         new File(embeddedFile).delete();",
          "49:         String[] args = new String[] { outputFile };",
          "50:         EmbeddedFiles.main(args);",
          "51:         ExtractEmbeddedFiles.main(args);",
          "52:         InputStream is = new FileInputStream(embeddedFile);",
          "53:         byte[] bytes = IOUtils.toByteArray(is);",
          "54:         is.close();",
          "55:         String content = new String(bytes);",
          "56:         Assert.assertEquals(\"This is the contents of the embedded file\", content);",
          "57:         new File(embeddedFile).delete();",
          "58:         new File(outputFile).delete();",
          "59:     }",
          "60: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "15172d0c461ac9e55ed5bda71d294bb815a6244b",
      "candidate_info": {
        "commit_hash": "15172d0c461ac9e55ed5bda71d294bb815a6244b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/15172d0c461ac9e55ed5bda71d294bb815a6244b",
        "files": [
          "fontbox/src/test/java/org/apache/fontbox/cff/CFFParserTest.java",
          "pdfbox/src/test/java/org/apache/pdfbox/util/MatrixTest.java"
        ],
        "message": "PDFBOX-4892: remove star imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889570 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/test/java/org/apache/fontbox/cff/CFFParserTest.java||fontbox/src/test/java/org/apache/fontbox/cff/CFFParserTest.java",
          "pdfbox/src/test/java/org/apache/pdfbox/util/MatrixTest.java||pdfbox/src/test/java/org/apache/pdfbox/util/MatrixTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/test/java/org/apache/fontbox/cff/CFFParserTest.java||fontbox/src/test/java/org/apache/fontbox/cff/CFFParserTest.java": [
          "File: fontbox/src/test/java/org/apache/fontbox/cff/CFFParserTest.java -> fontbox/src/test/java/org/apache/fontbox/cff/CFFParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import java.io.IOException;",
          "21: import java.io.InputStream;",
          "22: import java.util.List;",
          "23: import org.junit.Test;",
          "",
          "[Removed Lines]",
          "24: import static org.junit.Assert.*;",
          "",
          "[Added Lines]",
          "23: import static org.junit.Assert.assertEquals;",
          "",
          "---------------"
        ],
        "pdfbox/src/test/java/org/apache/pdfbox/util/MatrixTest.java||pdfbox/src/test/java/org/apache/pdfbox/util/MatrixTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/util/MatrixTest.java -> pdfbox/src/test/java/org/apache/pdfbox/util/MatrixTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import org.apache.pdfbox.cos.COSArray;",
          "19: import org.apache.pdfbox.cos.COSFloat;",
          "20: import org.apache.pdfbox.cos.COSName;",
          "21: import org.junit.Test;",
          "",
          "[Removed Lines]",
          "22: import static org.junit.Assert.*;",
          "",
          "[Added Lines]",
          "21: import static org.junit.Assert.assertEquals;",
          "22: import static org.junit.Assert.assertNotSame;",
          "23: import static org.junit.Assert.assertSame;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6267430111e2e5ba44b7c4cf22910fa043e01b8a",
      "candidate_info": {
        "commit_hash": "6267430111e2e5ba44b7c4cf22910fa043e01b8a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6267430111e2e5ba44b7c4cf22910fa043e01b8a",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889851 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import org.apache.commons.logging.Log;",
          "30: import org.apache.commons.logging.LogFactory;",
          "31: import org.apache.pdfbox.contentstream.operator.OperatorName;",
          "32: import org.apache.pdfbox.cos.COSBase;",
          "33: import org.apache.pdfbox.cos.COSName;",
          "34: import org.apache.pdfbox.cos.COSNumber;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import org.apache.pdfbox.cos.COSArray;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "457:         sb.append(\"/\");",
          "458:         sb.append(inlineImage.getColorSpace().getName());",
          "461:         {",
          "462:             sb.append(\"\\n /D \");",
          "463:             sb.append(\"[\");",
          "465:             {",
          "466:                 sb.append(((COSNumber) base).intValue());",
          "467:                 sb.append(\" \");",
          "",
          "[Removed Lines]",
          "460:         if (inlineImage.getDecode() != null && inlineImage.getDecode().size() > 0)",
          "464:             for (COSBase base : inlineImage.getDecode())",
          "",
          "[Added Lines]",
          "461:         COSArray decodeArray = inlineImage.getDecode();",
          "462:         if (decodeArray != null && decodeArray.size() > 0)",
          "466:             for (COSBase base : decodeArray)",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "837:         sb.append(\"/\");",
          "838:         sb.append(inlineImage.getColorSpace().getName());",
          "841:         {",
          "842:             sb.append(\"\\n /D \");",
          "843:             sb.append(\"[\");",
          "845:             {",
          "846:                 sb.append(((COSNumber) base).intValue());",
          "847:                 sb.append(\" \");",
          "",
          "[Removed Lines]",
          "840:         if (inlineImage.getDecode() != null && inlineImage.getDecode().size() > 0)",
          "844:             for (COSBase base : inlineImage.getDecode())",
          "",
          "[Added Lines]",
          "840:         COSArray decodeArray = inlineImage.getDecode();",
          "841:         if (decodeArray != null && decodeArray.size() > 0)",
          "845:             for (COSBase base : decodeArray)",
          "",
          "---------------"
        ]
      }
    }
  ]
}