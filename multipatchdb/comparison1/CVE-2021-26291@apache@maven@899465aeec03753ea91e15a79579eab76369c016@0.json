{
  "cve_id": "CVE-2021-26291",
  "cve_desc": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
  "repo": "apache/maven",
  "patch_hash": "899465aeec03753ea91e15a79579eab76369c016",
  "patch_info": {
    "commit_hash": "899465aeec03753ea91e15a79579eab76369c016",
    "repo": "apache/maven",
    "commit_url": "https://github.com/apache/maven/commit/899465aeec03753ea91e15a79579eab76369c016",
    "files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/pom.xml",
      "maven-settings/src/main/mdo/settings.mdo"
    ],
    "message": "[MNG-7117] add support for blocked mirror",
    "before_after_code_files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo"
    ]
  },
  "patch_diff": {
    "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java": [
      "File: maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java -> maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:         DefaultMirrorSelector mirrorSelector = new DefaultMirrorSelector();",
      "178:         for ( Mirror mirror : request.getMirrors() )",
      "179:         {",
      "182:         }",
      "183:         session.setMirrorSelector( mirrorSelector );",
      "",
      "[Removed Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(),",
      "181:                                 mirror.getMirrorOfLayouts() );",
      "",
      "[Added Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.isBlocked(),",
      "181:                                 mirror.getMirrorOf(), mirror.getMirrorOfLayouts() );",
      "",
      "---------------"
    ],
    "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo": [
      "File: maven-settings/src/main/mdo/settings.mdo -> maven-settings/src/main/mdo/settings.mdo",
      "--- Hunk 1 ---",
      "[Context before]",
      "633:             of the mirror to repositories with a matching layout (apart from a matching id). Since Maven 3.",
      "634:           </description>",
      "635:         </field>",
      "636:       </fields>",
      "637:       <codeSegments>",
      "638:         <codeSegment>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "636:         <field>",
      "637:           <name>blocked</name>",
      "638:           <version>1.2.0+</version>",
      "639:           <type>boolean</type>",
      "640:           <defaultValue>false</defaultValue>",
      "641:           <description>",
      "642:             Whether this mirror should be blocked from any download request but fail the download process, explaining why.",
      "643:           </description>",
      "644:         </field>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "648:         sb.append( \",mirrorOf=\" ).append( mirrorOf );",
      "649:         sb.append( \",url=\" ).append( this.url );",
      "650:         sb.append( \",name=\" ).append( this.name );",
      "651:         sb.append( \"]\" );",
      "652:         return sb.toString();",
      "653:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "660:         if ( isBlocked() )",
      "661:         {",
      "662:             sb.append( \",blocked\" );",
      "663:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3a5a40c6d23bc4af7ab7945eaac0fa689d2c6143",
      "candidate_info": {
        "commit_hash": "3a5a40c6d23bc4af7ab7945eaac0fa689d2c6143",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/3a5a40c6d23bc4af7ab7945eaac0fa689d2c6143",
        "files": [
          "maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java"
        ],
        "message": "[MNG-7391] Fix MojosExecutionStrategy lookup to be able to look into the SessionScope (#692)",
        "before_after_code_files": [
          "maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java||maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java||maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java": [
          "File: maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java -> maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.apache.maven.plugin.PluginManagerException;",
          "39: import org.apache.maven.plugin.descriptor.MojoDescriptor;",
          "40: import org.apache.maven.project.MavenProject;",
          "41: import org.codehaus.plexus.component.annotations.Component;",
          "42: import org.codehaus.plexus.component.annotations.Requirement;",
          "43: import org.codehaus.plexus.util.StringUtils;",
          "44: import org.eclipse.aether.SessionData;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: import org.codehaus.plexus.PlexusContainer;",
          "44: import org.codehaus.plexus.component.repository.exception.ComponentLookupException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:     private final ReadWriteLock aggregatorLock = new ReentrantReadWriteLock();",
          "90:     @Requirement",
          "93:     public MojoExecutor()",
          "94:     {",
          "",
          "[Removed Lines]",
          "91:     private MojosExecutionStrategy mojosExecutionStrategy;",
          "",
          "[Added Lines]",
          "93:     private PlexusContainer container;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160:         final PhaseRecorder phaseRecorder = new PhaseRecorder( session.getCurrentProject() );",
          "163:         {",
          "164:             @Override",
          "165:             public void run( MojoExecution mojoExecution ) throws LifecycleExecutionException",
          "",
          "[Removed Lines]",
          "162:         mojosExecutionStrategy.execute( mojoExecutions, session, new MojoExecutionRunner()",
          "",
          "[Added Lines]",
          "164:         MojosExecutionStrategy strategy;",
          "165:         try",
          "166:         {",
          "167:             strategy = container.lookup( MojosExecutionStrategy.class );",
          "168:         }",
          "169:         catch ( ComponentLookupException e )",
          "170:         {",
          "171:             throw new IllegalStateException( \"Unable to lookup MojosExecutionStrategy\", e );",
          "172:         }",
          "173:         strategy.execute( mojoExecutions, session, new MojoExecutionRunner()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84cbe1ab2e22a12c2c108d1a0e5233f875475fff",
      "candidate_info": {
        "commit_hash": "84cbe1ab2e22a12c2c108d1a0e5233f875475fff",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/84cbe1ab2e22a12c2c108d1a0e5233f875475fff",
        "files": [
          "maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java"
        ],
        "message": "[MNG-7362] DefaultArtifactResolver has spurious \"Failure detected\" INFO log",
        "before_after_code_files": [
          "maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java||maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java||maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java": [
          "File: maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java -> maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "511:         if ( result.hasMetadataResolutionExceptions() || result.hasVersionRangeViolations()",
          "512:             || result.hasCircularDependencyExceptions() )",
          "513:         {",
          "515:             return result;",
          "516:         }",
          "",
          "[Removed Lines]",
          "514:             logger.info( \"Failure detected.\" );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76d5f0d942f52650d3bdf775b6af42d23d69066b",
      "candidate_info": {
        "commit_hash": "76d5f0d942f52650d3bdf775b6af42d23d69066b",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/76d5f0d942f52650d3bdf775b6af42d23d69066b",
        "files": [
          "maven-core/src/main/java/org/apache/maven/project/MavenProject.java"
        ],
        "message": "[MNG-6843] Parallel build fails due to missing JAR artifacts in compilePath\n\nSigned-off-by: rfscholte <rfscholte@apache.org>\n(cherry picked from commit 73e00ed85df84ba0c557dd020740812b2453f2d3)\n\nThis closes #482",
        "before_after_code_files": [
          "maven-core/src/main/java/org/apache/maven/project/MavenProject.java||maven-core/src/main/java/org/apache/maven/project/MavenProject.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-core/src/main/java/org/apache/maven/project/MavenProject.java||maven-core/src/main/java/org/apache/maven/project/MavenProject.java": [
          "File: maven-core/src/main/java/org/apache/maven/project/MavenProject.java -> maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:     private Set<Artifact> resolvedArtifacts;",
          "118:     private Artifact parentArtifact;",
          "120:     private Set<Artifact> pluginArtifacts;",
          "",
          "[Removed Lines]",
          "114:     private ArtifactFilter artifactFilter;",
          "116:     private Set<Artifact> artifacts;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:     private Artifact artifact;",
          "157:     private Model originalModel;",
          "",
          "[Removed Lines]",
          "155:     private Map<String, Artifact> artifactMap;",
          "",
          "[Added Lines]",
          "146:     private final ThreadLocal<ArtifactsHolder> threadLocalArtifactsHolder = new ThreadLocal()",
          "147:     {",
          "148:         protected ArtifactsHolder initialValue()",
          "149:         {",
          "150:             return new ArtifactsHolder();",
          "151:         }",
          "152:     };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "696:     public void setArtifacts( Set<Artifact> artifacts )",
          "697:     {",
          "702:     }",
          "",
          "[Removed Lines]",
          "698:         this.artifacts = artifacts;",
          "701:         artifactMap = null;",
          "",
          "[Added Lines]",
          "693:         ArtifactsHolder artifactsHolder = threadLocalArtifactsHolder.get();",
          "694:         artifactsHolder.artifacts = artifacts;",
          "697:         artifactsHolder.artifactMap = null;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "712:     public Set<Artifact> getArtifacts()",
          "713:     {",
          "715:         {",
          "717:             {",
          "719:             }",
          "720:             else",
          "721:             {",
          "723:                 for ( Artifact artifact : resolvedArtifacts )",
          "724:                 {",
          "726:                     {",
          "728:                     }",
          "729:                 }",
          "730:             }",
          "731:         }",
          "733:     }",
          "735:     public Map<String, Artifact> getArtifactMap()",
          "736:     {",
          "738:         {",
          "740:         }",
          "742:     }",
          "744:     public void setPluginArtifacts( Set<Artifact> pluginArtifacts )",
          "",
          "[Removed Lines]",
          "714:         if ( artifacts == null )",
          "716:             if ( artifactFilter == null || resolvedArtifacts == null )",
          "718:                 artifacts = new LinkedHashSet<>();",
          "722:                 artifacts = new LinkedHashSet<>( resolvedArtifacts.size() * 2 );",
          "725:                     if ( artifactFilter.include( artifact ) )",
          "727:                         artifacts.add( artifact );",
          "732:         return artifacts;",
          "737:         if ( artifactMap == null )",
          "739:             artifactMap = ArtifactUtils.artifactMapByVersionlessId( getArtifacts() );",
          "741:         return artifactMap;",
          "",
          "[Added Lines]",
          "710:         ArtifactsHolder artifactsHolder = threadLocalArtifactsHolder.get();",
          "711:         if ( artifactsHolder.artifacts == null )",
          "713:             if ( artifactsHolder.artifactFilter == null || resolvedArtifacts == null )",
          "715:                 artifactsHolder.artifacts = new LinkedHashSet<>();",
          "719:                 artifactsHolder.artifacts = new LinkedHashSet<>( resolvedArtifacts.size() * 2 );",
          "722:                     if ( artifactsHolder.artifactFilter.include( artifact ) )",
          "724:                         artifactsHolder.artifacts.add( artifact );",
          "729:         return artifactsHolder.artifacts;",
          "734:         ArtifactsHolder artifactsHolder = threadLocalArtifactsHolder.get();",
          "735:         if ( artifactsHolder.artifactMap == null )",
          "737:             artifactsHolder.artifactMap = ArtifactUtils.artifactMapByVersionlessId( getArtifacts() );",
          "739:         return artifactsHolder.artifactMap;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1433:     public void setResolvedArtifacts( Set<Artifact> artifacts )",
          "1434:     {",
          "1435:         this.resolvedArtifacts = ( artifacts != null ) ? artifacts : Collections.<Artifact>emptySet();",
          "1438:     }",
          "",
          "[Removed Lines]",
          "1436:         this.artifacts = null;",
          "1437:         this.artifactMap = null;",
          "",
          "[Added Lines]",
          "1434:         ArtifactsHolder artifactsHolder = threadLocalArtifactsHolder.get();",
          "1435:         artifactsHolder.artifacts = null;",
          "1436:         artifactsHolder.artifactMap = null;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1448:     public void setArtifactFilter( ArtifactFilter artifactFilter )",
          "1449:     {",
          "1453:     }",
          "",
          "[Removed Lines]",
          "1450:         this.artifactFilter = artifactFilter;",
          "1451:         this.artifacts = null;",
          "1452:         this.artifactMap = null;",
          "",
          "[Added Lines]",
          "1449:         ArtifactsHolder artifactsHolder = threadLocalArtifactsHolder.get();",
          "1450:         artifactsHolder.artifactFilter = artifactFilter;",
          "1451:         artifactsHolder.artifacts = null;",
          "1452:         artifactsHolder.artifactMap = null;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1991:     {",
          "1992:         this.projectBuilderConfiguration = projectBuildingRequest;",
          "1993:     }",
          "1994: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1993:     private static class ArtifactsHolder",
          "1994:     {",
          "1995:         private ArtifactFilter artifactFilter;",
          "1996:         private Set<Artifact> artifacts;",
          "1997:         private Map<String, Artifact> artifactMap;",
          "1998:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2bb1228de60e805b2f864254a0b1efef7e2d7dde",
      "candidate_info": {
        "commit_hash": "2bb1228de60e805b2f864254a0b1efef7e2d7dde",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/2bb1228de60e805b2f864254a0b1efef7e2d7dde",
        "files": [
          "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilderFactory.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/DefaultModelVersionProcessor.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelVersionProcessor.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
          "maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java",
          "maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java"
        ],
        "message": "[MNG-7407] Introduce a ModelVersionProcessor component to make CI Friendly Versions pluggable\n\nThis closes #674",
        "before_after_code_files": [
          "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilderFactory.java||maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilderFactory.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/DefaultModelVersionProcessor.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/DefaultModelVersionProcessor.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelVersionProcessor.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelVersionProcessor.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java||maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
          "maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java||maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java",
          "maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java||maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilderFactory.java||maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilderFactory.java": [
          "File: maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilderFactory.java -> maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilderFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import org.apache.maven.model.composition.DependencyManagementImporter;",
          "25: import org.apache.maven.model.inheritance.DefaultInheritanceAssembler;",
          "26: import org.apache.maven.model.inheritance.InheritanceAssembler;",
          "27: import org.apache.maven.model.interpolation.ModelInterpolator;",
          "28: import org.apache.maven.model.interpolation.StringVisitorModelInterpolator;",
          "29: import org.apache.maven.model.io.DefaultModelReader;",
          "30: import org.apache.maven.model.io.ModelReader;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import org.apache.maven.model.interpolation.DefaultModelVersionProcessor;",
          "29: import org.apache.maven.model.interpolation.ModelVersionProcessor;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:     {",
          "134:         UrlNormalizer normalizer = newUrlNormalizer();",
          "135:         PathTranslator pathTranslator = newPathTranslator();",
          "137:     }",
          "139:     protected ModelValidator newModelValidator()",
          "140:     {",
          "142:     }",
          "144:     protected ModelNormalizer newModelNormalizer()",
          "",
          "[Removed Lines]",
          "136:         return new StringVisitorModelInterpolator().setPathTranslator( pathTranslator ).setUrlNormalizer( normalizer );",
          "141:         return new DefaultModelValidator();",
          "",
          "[Added Lines]",
          "138:         return new StringVisitorModelInterpolator().setPathTranslator( pathTranslator ).setUrlNormalizer( normalizer )",
          "139:                         .setVersionPropertiesProcessor( newModelVersionPropertiesProcessor() );",
          "140:     }",
          "142:     protected ModelVersionProcessor newModelVersionPropertiesProcessor()",
          "143:     {",
          "144:         return new DefaultModelVersionProcessor();",
          "149:         return new DefaultModelValidator( newModelVersionPropertiesProcessor() );",
          "",
          "---------------"
        ],
        "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java": [
          "File: maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java -> maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: public abstract class AbstractStringBasedModelInterpolator",
          "53:     implements ModelInterpolator",
          "54: {",
          "61:     private static final List<String> PROJECT_PREFIXES = Arrays.asList( \"pom.\", \"project.\" );",
          "63:     private static final Collection<String> TRANSLATED_PATH_EXPRESSIONS;",
          "",
          "[Removed Lines]",
          "55:     public static final String SHA1_PROPERTY = \"sha1\";",
          "57:     public static final String CHANGELIST_PROPERTY = \"changelist\";",
          "59:     public static final String REVISION_PROPERTY = \"revision\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:     @Inject",
          "89:     private UrlNormalizer urlNormalizer;",
          "95:     public AbstractStringBasedModelInterpolator setPathTranslator( PathTranslator pathTranslator )",
          "96:     {",
          "",
          "[Removed Lines]",
          "91:     public AbstractStringBasedModelInterpolator()",
          "92:     {",
          "93:     }",
          "",
          "[Added Lines]",
          "85:     @Inject",
          "86:     private ModelVersionProcessor versionProcessor;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:         return this;",
          "105:     }",
          "107:     protected List<ValueSource> createValueSources( final Model model, final File projectDir,",
          "108:                                                     final ModelBuildingRequest config,",
          "109:                                                     final ModelProblemCollector problems )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     public AbstractStringBasedModelInterpolator setVersionPropertiesProcessor( ModelVersionProcessor processor )",
          "101:     {",
          "102:         this.versionProcessor = processor;",
          "103:         return this;",
          "104:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "162:         valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );",
          "178:         valueSources.add( new MapBasedValueSource( modelProperties ) );",
          "180:         valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );",
          "",
          "[Removed Lines]",
          "166:         if ( config.getSystemProperties().containsKey( REVISION_PROPERTY ) )",
          "167:         {",
          "168:             modelProperties.put( REVISION_PROPERTY, config.getSystemProperties().get( REVISION_PROPERTY ) );",
          "169:         }",
          "170:         if ( config.getSystemProperties().containsKey( CHANGELIST_PROPERTY ) )",
          "171:         {",
          "172:             modelProperties.put( CHANGELIST_PROPERTY, config.getSystemProperties().get( CHANGELIST_PROPERTY ) );",
          "173:         }",
          "174:         if ( config.getSystemProperties().containsKey( SHA1_PROPERTY ) )",
          "175:         {",
          "176:             modelProperties.put( SHA1_PROPERTY, config.getSystemProperties().get( SHA1_PROPERTY ) );",
          "177:         }",
          "",
          "[Added Lines]",
          "165:         versionProcessor.overwriteModelProperties( modelProperties, config );",
          "",
          "---------------"
        ],
        "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/DefaultModelVersionProcessor.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/DefaultModelVersionProcessor.java": [
          "File: maven-model-builder/src/main/java/org/apache/maven/model/interpolation/DefaultModelVersionProcessor.java -> maven-model-builder/src/main/java/org/apache/maven/model/interpolation/DefaultModelVersionProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.apache.maven.model.interpolation;",
          "22: import java.util.Properties;",
          "24: import javax.inject.Named;",
          "25: import javax.inject.Singleton;",
          "27: import org.apache.maven.model.building.ModelBuildingRequest;",
          "33: @Named",
          "34: @Singleton",
          "35: public class DefaultModelVersionProcessor",
          "36:     implements ModelVersionProcessor",
          "37: {",
          "39:     private static final String SHA1_PROPERTY = \"sha1\";",
          "41:     private static final String CHANGELIST_PROPERTY = \"changelist\";",
          "43:     private static final String REVISION_PROPERTY = \"revision\";",
          "45:     @Override",
          "46:     public boolean isValidProperty( String property )",
          "47:     {",
          "48:         return REVISION_PROPERTY.equals( property ) || CHANGELIST_PROPERTY.equals( property )",
          "49:             || SHA1_PROPERTY.equals( property );",
          "50:     }",
          "52:     @Override",
          "53:     public void overwriteModelProperties( Properties modelProperties, ModelBuildingRequest request )",
          "54:     {",
          "55:         if ( request.getSystemProperties().containsKey( REVISION_PROPERTY ) )",
          "56:         {",
          "57:             modelProperties.put( REVISION_PROPERTY, request.getSystemProperties().get( REVISION_PROPERTY ) );",
          "58:         }",
          "59:         if ( request.getSystemProperties().containsKey( CHANGELIST_PROPERTY ) )",
          "60:         {",
          "61:             modelProperties.put( CHANGELIST_PROPERTY, request.getSystemProperties().get( CHANGELIST_PROPERTY ) );",
          "62:         }",
          "63:         if ( request.getSystemProperties().containsKey( SHA1_PROPERTY ) )",
          "64:         {",
          "65:             modelProperties.put( SHA1_PROPERTY, request.getSystemProperties().get( SHA1_PROPERTY ) );",
          "66:         }",
          "68:     }",
          "69: }",
          "",
          "---------------"
        ],
        "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelVersionProcessor.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelVersionProcessor.java": [
          "File: maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelVersionProcessor.java -> maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelVersionProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.apache.maven.model.interpolation;",
          "22: import java.util.Properties;",
          "24: import org.apache.maven.model.building.ModelBuildingRequest;",
          "30: public interface ModelVersionProcessor",
          "31: {",
          "37:     boolean isValidProperty( String property );",
          "45:     void overwriteModelProperties( Properties modelProperties, ModelBuildingRequest request );",
          "47: }",
          "",
          "---------------"
        ],
        "maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java||maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java": [
          "File: maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java -> maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: import org.apache.maven.model.building.ModelProblem.Version;",
          "45: import org.apache.maven.model.building.ModelProblemCollector;",
          "46: import org.apache.maven.model.building.ModelProblemCollectorRequest;",
          "48: import org.codehaus.plexus.util.StringUtils;",
          "50: import java.io.File;",
          "",
          "[Removed Lines]",
          "47: import org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator;",
          "",
          "[Added Lines]",
          "47: import org.apache.maven.model.interpolation.ModelVersionProcessor;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58: import java.util.regex.Matcher;",
          "59: import java.util.regex.Pattern;",
          "61: import javax.inject.Named;",
          "62: import javax.inject.Singleton;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: import javax.inject.Inject;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:     private static final Pattern CI_FRIENDLY_EXPRESSION = Pattern.compile( \"\\\\$\\\\{(.+?)\\\\}\" );",
          "80:     private static final String ILLEGAL_FS_CHARS = \"\\\\/:\\\"<>|?*\";",
          "82:     private static final String ILLEGAL_VERSION_CHARS = ILLEGAL_FS_CHARS;",
          "",
          "[Removed Lines]",
          "75:     private static final List<String> CI_FRIENDLY_POSSIBLE_PROPERTY_NAMES =",
          "76:         Arrays.asList( AbstractStringBasedModelInterpolator.REVISION_PROPERTY,",
          "77:                        AbstractStringBasedModelInterpolator.CHANGELIST_PROPERTY,",
          "78:                        AbstractStringBasedModelInterpolator.SHA1_PROPERTY );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:     private final Set<String> validIds = new HashSet<>();",
          "90:     @Override",
          "91:     public void validateRawModel( Model m, ModelBuildingRequest request, ModelProblemCollector problems )",
          "92:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:     private ModelVersionProcessor versionProcessor;",
          "88:     @Inject",
          "89:     public DefaultModelValidator(  ModelVersionProcessor versionProcessor )",
          "90:     {",
          "91:         this.versionProcessor = versionProcessor;",
          "92:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "930:             return true;",
          "931:         }",
          "940:         Matcher m = CI_FRIENDLY_EXPRESSION.matcher( string.trim() );",
          "941:         while ( m.find() )",
          "942:         {",
          "944:             {",
          "945:                 addViolation( problems, severity, version, fieldName, null,",
          "946:                               \"contains an expression but should be a constant.\", tracker );",
          "948:                 return false;",
          "949:             }",
          "950:         }",
          "",
          "[Removed Lines]",
          "943:             if ( !CI_FRIENDLY_POSSIBLE_PROPERTY_NAMES.contains( m.group( 1 ) ) )",
          "",
          "[Added Lines]",
          "940:             String property = m.group( 1 );",
          "941:             if ( !versionProcessor.isValidProperty( property ) )",
          "",
          "---------------"
        ],
        "maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java||maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java": [
          "File: maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java -> maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:         throws Exception",
          "55:     {",
          "56:         super.setUp();",
          "58:     }",
          "",
          "[Removed Lines]",
          "57:         interpolator = new StringSearchModelInterpolator();",
          "",
          "[Added Lines]",
          "57:         interpolator =",
          "58:             new StringSearchModelInterpolator().setVersionPropertiesProcessor( new DefaultModelVersionProcessor() );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "581:         SimpleProblemCollector problems = new SimpleProblemCollector();",
          "582:         StringSearchModelInterpolator interpolator = new StringSearchModelInterpolator();",
          "583:         interpolator.interpolateObject( new ClassWithFinalField(), new Model(), null, request, problems );",
          "585:         assertProblemFree(  problems );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "584:         interpolator.setVersionPropertiesProcessor( new DefaultModelVersionProcessor() );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "606:         SimpleProblemCollector problems = new SimpleProblemCollector();",
          "607:         StringSearchModelInterpolator interpolator = new StringSearchModelInterpolator();",
          "608:         interpolator.interpolateObject( model, model, null, request, problems );",
          "610:         assertProblemFree( problems );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "610:         interpolator.setVersionPropertiesProcessor( new DefaultModelVersionProcessor() );",
          "",
          "---------------"
        ],
        "maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java||maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java": [
          "File: maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java -> maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import org.apache.maven.model.building.DefaultModelBuildingRequest;",
          "27: import org.apache.maven.model.building.ModelBuildingRequest;",
          "28: import org.apache.maven.model.building.SimpleProblemCollector;",
          "29: import org.apache.maven.model.io.xpp3.MavenXpp3Reader;",
          "31: import junit.framework.TestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import org.apache.maven.model.interpolation.DefaultModelVersionProcessor;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     {",
          "96:         super.setUp();",
          "99:     }",
          "101:     @Override",
          "",
          "[Removed Lines]",
          "98:         validator = new DefaultModelValidator();",
          "",
          "[Added Lines]",
          "99:         validator = new DefaultModelValidator(new DefaultModelVersionProcessor() );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ae1d95a581bbf07bab72aff7aa26b096a267615",
      "candidate_info": {
        "commit_hash": "9ae1d95a581bbf07bab72aff7aa26b096a267615",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/9ae1d95a581bbf07bab72aff7aa26b096a267615",
        "files": [
          "apache-maven/src/test/java/org/apache/maven/settings/GlobalSettingsTest.java",
          "maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java",
          "maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
          "maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java",
          "maven-compat/src/test/java/org/apache/maven/repository/legacy/StringWagon.java",
          "maven-core/src/test/java/org/apache/maven/artifact/handler/ArtifactHandlerTest.java",
          "maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/DefaultLifecyclesStub.java",
          "maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java"
        ],
        "message": "[MNG-6844] Use StandardCharsets and remove outdated @SuppressWarnings\n\nThis closes #312",
        "before_after_code_files": [
          "apache-maven/src/test/java/org/apache/maven/settings/GlobalSettingsTest.java||apache-maven/src/test/java/org/apache/maven/settings/GlobalSettingsTest.java",
          "maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java||maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java",
          "maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java||maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
          "maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java||maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java",
          "maven-compat/src/test/java/org/apache/maven/repository/legacy/StringWagon.java||maven-compat/src/test/java/org/apache/maven/repository/legacy/StringWagon.java",
          "maven-core/src/test/java/org/apache/maven/artifact/handler/ArtifactHandlerTest.java||maven-core/src/test/java/org/apache/maven/artifact/handler/ArtifactHandlerTest.java",
          "maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/DefaultLifecyclesStub.java||maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/DefaultLifecyclesStub.java",
          "maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java||maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java||maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java",
          "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apache-maven/src/test/java/org/apache/maven/settings/GlobalSettingsTest.java||apache-maven/src/test/java/org/apache/maven/settings/GlobalSettingsTest.java": [
          "File: apache-maven/src/test/java/org/apache/maven/settings/GlobalSettingsTest.java -> apache-maven/src/test/java/org/apache/maven/settings/GlobalSettingsTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.io.FileInputStream;",
          "27: import java.io.InputStreamReader;",
          "28: import java.io.Reader;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import java.nio.charset.StandardCharsets;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:         File globalSettingsFile = new File( basedir, \"src/conf/settings.xml\" );",
          "45:         assertTrue( globalSettingsFile.getAbsolutePath(), globalSettingsFile.isFile() );",
          "48:         {",
          "49:             new SettingsXpp3Reader().read( reader );",
          "50:         }",
          "",
          "[Removed Lines]",
          "47:         try ( Reader reader = new InputStreamReader( new FileInputStream( globalSettingsFile ), \"UTF-8\" ) )",
          "",
          "[Added Lines]",
          "48:         try ( Reader reader = new InputStreamReader( new FileInputStream( globalSettingsFile ), StandardCharsets.UTF_8) )",
          "",
          "---------------"
        ],
        "maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java||maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java": [
          "File: maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java -> maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.ByteArrayInputStream;",
          "23: import java.io.IOException;",
          "24: import java.io.InputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.nio.charset.StandardCharsets;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     public InputStream getInputStream()",
          "63:         throws IOException",
          "64:     {",
          "66:     }",
          "68:     @Override",
          "",
          "[Removed Lines]",
          "65:         return new ByteArrayInputStream( content.getBytes( \"UTF-8\" ) );",
          "",
          "[Added Lines]",
          "66:         return new ByteArrayInputStream( content.getBytes( StandardCharsets.UTF_8 ) );",
          "",
          "---------------"
        ],
        "maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java||maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java": [
          "File: maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java -> maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     implements ModelInheritanceAssembler",
          "56: {",
          "59:     public void assembleBuildInheritance( Build childBuild, Build parentBuild, boolean handleAsInheritance )",
          "60:     {",
          "",
          "[Removed Lines]",
          "58:     @SuppressWarnings( \"unchecked\" )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "307:     }",
          "311:     private void assembleDependencyManagementInheritance( Model child, Model parent )",
          "312:     {",
          "313:         DependencyManagement parentDepMgmt = parent.getDependencyManagement();",
          "",
          "[Removed Lines]",
          "310:     @SuppressWarnings( \"unchecked\" )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "527:     }",
          "531:     private void assembleDependencyInheritance( Model child, Model parent )",
          "532:     {",
          "533:         Map<String, Dependency> depsMap = new LinkedHashMap<>();",
          "",
          "[Removed Lines]",
          "530:     @SuppressWarnings( \"unchecked\" )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java||maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java": [
          "File: maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java -> maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: import java.io.IOException;",
          "60: import java.io.OutputStreamWriter;",
          "61: import java.io.Writer;",
          "62: import java.util.ArrayList;",
          "63: import java.util.List;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: import java.nio.charset.StandardCharsets;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "293:         {",
          "294:             artifactFile.getParentFile().mkdirs();",
          "295:         }",
          "297:         {",
          "298:             writer.write( artifact.getId() );",
          "299:         }",
          "",
          "[Removed Lines]",
          "296:         try ( Writer writer = new OutputStreamWriter( new FileOutputStream( artifactFile ), \"ISO-8859-1\" ) )",
          "",
          "[Added Lines]",
          "297:         try ( Writer writer = new OutputStreamWriter( new FileOutputStream( artifactFile ), StandardCharsets.ISO_8859_1) )",
          "",
          "---------------"
        ],
        "maven-compat/src/test/java/org/apache/maven/repository/legacy/StringWagon.java||maven-compat/src/test/java/org/apache/maven/repository/legacy/StringWagon.java": [
          "File: maven-compat/src/test/java/org/apache/maven/repository/legacy/StringWagon.java -> maven-compat/src/test/java/org/apache/maven/repository/legacy/StringWagon.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.ByteArrayInputStream;",
          "23: import java.io.ByteArrayOutputStream;",
          "24: import java.io.UnsupportedEncodingException;",
          "25: import java.util.HashMap;",
          "26: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.nio.charset.StandardCharsets;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:             resource.setContentLength( content.length() );",
          "73:             resource.setLastModified( System.currentTimeMillis() );",
          "83:         }",
          "84:         else",
          "85:         {",
          "",
          "[Removed Lines]",
          "75:             try",
          "76:             {",
          "77:                 inputData.setInputStream( new ByteArrayInputStream( content.getBytes( \"UTF-8\" ) ) );",
          "78:             }",
          "79:             catch ( UnsupportedEncodingException e )",
          "80:             {",
          "81:                 throw new Error( \"broken JVM\", e );",
          "82:             }",
          "",
          "[Added Lines]",
          "76:             inputData.setInputStream( new ByteArrayInputStream( content.getBytes( StandardCharsets.UTF_8 ) ) );",
          "",
          "---------------"
        ],
        "maven-core/src/test/java/org/apache/maven/artifact/handler/ArtifactHandlerTest.java||maven-core/src/test/java/org/apache/maven/artifact/handler/ArtifactHandlerTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/artifact/handler/ArtifactHandlerTest.java -> maven-core/src/test/java/org/apache/maven/artifact/handler/ArtifactHandlerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     {",
          "34:         File apt = getTestFile( \"src/site/apt/artifact-handlers.apt\" );",
          "37:         List<String> lines = FileUtils.loadFile( apt );",
          "39:         for ( String line : lines )",
          "",
          "[Removed Lines]",
          "36:         @SuppressWarnings( \"unchecked\" )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/DefaultLifecyclesStub.java||maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/DefaultLifecyclesStub.java": [
          "File: maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/DefaultLifecyclesStub.java -> maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/DefaultLifecyclesStub.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:         List<String> stubSiteCycle =",
          "48:             Arrays.asList( PRE_SITE.getPhase(), SITE.getPhase(), POST_SITE.getPhase(), SITE_DEPLOY.getPhase() );",
          "51:         Iterator<List<String>> lcs = Arrays.asList( stubDefaultCycle, stubCleanCycle, stubSiteCycle ).iterator();",
          "53:         Map<String, Lifecycle> lifeCycles = new HashMap<>();",
          "",
          "[Removed Lines]",
          "50:         @SuppressWarnings( \"unchecked\" )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java||maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java -> maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.io.ByteArrayInputStream;",
          "27: import java.io.InputStream;",
          "29: import java.util.Arrays;",
          "31: import junit.framework.TestCase;",
          "",
          "[Removed Lines]",
          "28: import java.io.UnsupportedEncodingException;",
          "",
          "[Added Lines]",
          "28: import java.nio.charset.StandardCharsets;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     private InputStream toStream( String xml )",
          "63:     {",
          "72:     }",
          "74:     public void testEmptyDescriptor()",
          "",
          "[Removed Lines]",
          "64:         try",
          "65:         {",
          "66:             return new ByteArrayInputStream( xml.getBytes( \"UTF-8\" ) );",
          "67:         }",
          "68:         catch ( UnsupportedEncodingException e )",
          "69:         {",
          "70:             throw new IllegalStateException( e );",
          "71:         }",
          "",
          "[Added Lines]",
          "64:         return new ByteArrayInputStream( xml.getBytes( StandardCharsets.UTF_8 ) );",
          "",
          "---------------"
        ],
        "maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java||maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java": [
          "File: maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java -> maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     protected Options options;",
          "111:     public CLIManager()",
          "112:     {",
          "113:         options = new Options();",
          "",
          "[Removed Lines]",
          "110:     @SuppressWarnings( { \"static-access\", \"checkstyle:linelength\" } )",
          "",
          "[Added Lines]",
          "110:     @SuppressWarnings( \"checkstyle:linelength\" )",
          "",
          "---------------"
        ],
        "maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java||maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java": [
          "File: maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java -> maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     }",
          "74:     @Override",
          "76:     public List getFeedback()",
          "77:     {",
          "78:         return valueSource.getFeedback();",
          "",
          "[Removed Lines]",
          "75:     @SuppressWarnings( \"unchecked\" )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}