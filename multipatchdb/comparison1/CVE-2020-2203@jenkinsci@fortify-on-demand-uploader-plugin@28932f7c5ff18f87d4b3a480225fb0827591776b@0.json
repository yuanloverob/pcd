{
  "cve_id": "CVE-2020-2203",
  "cve_desc": "A cross-site request forgery vulnerability in Jenkins Fortify on Demand Plugin 5.0.1 and earlier allows attackers to connect to the globally configured Fortify on Demand endpoint using attacker-specified credentials IDs.",
  "repo": "jenkinsci/fortify-on-demand-uploader-plugin",
  "patch_hash": "28932f7c5ff18f87d4b3a480225fb0827591776b",
  "patch_info": {
    "commit_hash": "28932f7c5ff18f87d4b3a480225fb0827591776b",
    "repo": "jenkinsci/fortify-on-demand-uploader-plugin",
    "commit_url": "https://github.com/jenkinsci/fortify-on-demand-uploader-plugin/commit/28932f7c5ff18f87d4b3a480225fb0827591776b",
    "files": [
      "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
    ],
    "message": "SECURITY-1690 and SECURITY-1691 fixes",
    "before_after_code_files": [
      "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
      "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
    ]
  },
  "patch_diff": {
    "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java": [
      "File: src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java -> src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package org.jenkinsci.plugins.fodupload;",
      "3: import hudson.Extension;",
      "4: import hudson.util.FormValidation;",
      "5: import hudson.util.ListBoxModel;",
      "6: import hudson.util.Secret;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import com.cloudbees.plugins.credentials.CredentialsProvider;",
      "5: import hudson.model.Item;",
      "6: import hudson.model.Job;",
      "7: import hudson.security.ACL;",
      "8: import hudson.security.Permission;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "14: import jenkins.model.Jenkins;",
      "15: import org.jenkinsci.plugins.fodupload.models.FodEnums.GrantType;",
      "16: import org.kohsuke.stapler.verb.POST;",
      "18: @Extension",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: import org.jenkinsci.plugins.plaincredentials.StringCredentials;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "190:     @SuppressWarnings(\"unused\")",
      "191:     public ListBoxModel doFillClientIdItems() {",
      "193:     }",
      "195:     @SuppressWarnings(\"unused\")",
      "196:     public ListBoxModel doFillClientSecretItems() {",
      "198:     }",
      "200:     @SuppressWarnings(\"unused\")",
      "201:     public ListBoxModel doFillUsernameItems() {",
      "203:     }",
      "205:     @SuppressWarnings(\"unused\")",
      "206:     public ListBoxModel doFillPersonalAccessTokenItems() {",
      "208:     }",
      "210:     @SuppressWarnings(\"unused\")",
      "211:     public ListBoxModel doFillTenantIdItems() {",
      "213:     }",
      "215:     FodApiConnection createFodApiConnection() {",
      "",
      "[Removed Lines]",
      "192:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "197:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "202:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "207:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "212:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "",
      "[Added Lines]",
      "198:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "199:         return doFillStringCredentialsItems();",
      "204:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "205:         return doFillStringCredentialsItems();",
      "210:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "211:         return doFillStringCredentialsItems();",
      "216:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "217:         return doFillStringCredentialsItems();",
      "222:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "223:         return doFillStringCredentialsItems();",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "262:                 FormValidation.ok(\"Successfully authenticated to Fortify on Demand.\") :",
      "263:                 FormValidation.error(\"Invalid connection information. Please check your credentials and try again.\");",
      "264:     }",
      "267: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "277:     private ListBoxModel doFillStringCredentialsItems(){",
      "278:         ListBoxModel items = CredentialsProvider.listCredentials(",
      "279:                 StringCredentials.class,",
      "280:                 Jenkins.get(),",
      "281:                 ACL.SYSTEM,",
      "282:                 null,",
      "283:                 null",
      "284:                 );",
      "285:         return items;",
      "286:     }",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java": [
      "File: src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: import hudson.FilePath;",
      "8: import hudson.Launcher;",
      "9: import hudson.model.AbstractProject;",
      "10: import hudson.model.Result;",
      "11: import hudson.model.Run;",
      "12: import hudson.model.TaskListener;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10: import hudson.model.Item;",
      "11: import hudson.model.Job;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: import org.kohsuke.stapler.verb.POST;",
      "37: import static org.jenkinsci.plugins.fodupload.SharedPollingBuildStep.*;",
      "39: @SuppressWarnings(\"unused\")",
      "40: public class PollingBuildStep extends Recorder implements SimpleBuildStep {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "160:         @POST",
      "161:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(USERNAME) final String username,",
      "162:                                                                   @QueryParameter(PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
      "166:         }",
      "168:         @SuppressWarnings(\"unused\")",
      "",
      "[Removed Lines]",
      "163:                                                                   @QueryParameter(TENANT_ID) final String tenantId) {",
      "164:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "165:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
      "",
      "[Added Lines]",
      "166:                                                                   @QueryParameter(TENANT_ID) final String tenantId,",
      "167:                                                                   @AncestorInPath Job job) {",
      "168:             job.checkPermission(Item.CONFIGURE);",
      "169:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId, job);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "171:         }",
      "173:         @SuppressWarnings(\"unused\")",
      "176:         }",
      "178:         @SuppressWarnings(\"unused\")",
      "181:         }",
      "183:         @SuppressWarnings(\"unused\")",
      "186:         }",
      "187:     }",
      "188: }",
      "",
      "[Removed Lines]",
      "174:         public ListBoxModel doFillUsernameItems() {",
      "175:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
      "179:         public ListBoxModel doFillPersonalAccessTokenItems() {",
      "180:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
      "184:         public ListBoxModel doFillTenantIdItems() {",
      "185:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
      "",
      "[Added Lines]",
      "178:         public ListBoxModel doFillUsernameItems(@AncestorInPath Job job) {",
      "179:             return SharedPollingBuildStep.doFillStringCredentialsItems(job);",
      "183:         public ListBoxModel doFillPersonalAccessTokenItems(@AncestorInPath Job job) {",
      "184:             return SharedPollingBuildStep.doFillStringCredentialsItems(job);",
      "188:         public ListBoxModel doFillTenantIdItems(@AncestorInPath Job job) {",
      "189:             return SharedPollingBuildStep.doFillStringCredentialsItems(job);",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java": [
      "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
      "18: import hudson.FilePath;",
      "19: import hudson.Launcher;",
      "20: import hudson.model.Result;",
      "21: import hudson.model.Run;",
      "22: import hudson.model.TaskListener;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import hudson.model.Item;",
      "21: import hudson.model.Job;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "25: import hudson.util.ListBoxModel;",
      "26: import jenkins.model.GlobalConfiguration;",
      "27: import jenkins.model.Jenkins;",
      "28: import org.kohsuke.stapler.verb.POST;",
      "30: public class SharedPollingBuildStep {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "123:     @POST",
      "124:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
      "125:                                                                      final String personalAccessToken,",
      "128:         FodApiConnection testApi;",
      "129:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
      "130:         String apiUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getApiUrl();",
      "",
      "[Removed Lines]",
      "126:                                                                      final String tenantId) {",
      "127:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "",
      "[Added Lines]",
      "130:                                                                      final String tenantId,",
      "131:                                                                      @AncestorInPath Job job) {",
      "132:         job.checkPermission(Item.CONFIGURE);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "154:     }",
      "156:     @SuppressWarnings(\"unused\")",
      "158:         ListBoxModel items = CredentialsProvider.listCredentials(",
      "159:                 StringCredentials.class,",
      "160:                 Jenkins.get(),",
      "",
      "[Removed Lines]",
      "157:     public static ListBoxModel doFillStringCredentialsItems() {",
      "",
      "[Added Lines]",
      "163:     public static ListBoxModel doFillStringCredentialsItems(@AncestorInPath Job job) {",
      "164:         job.checkPermission(Item.CONFIGURE);",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java": [
      "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: import hudson.Launcher;",
      "22: import hudson.model.AbstractBuild;",
      "23: import hudson.model.BuildListener;",
      "24: import hudson.model.Result;",
      "25: import hudson.model.Run;",
      "26: import hudson.model.TaskListener;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: import hudson.model.Item;",
      "25: import hudson.model.Job;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29: import hudson.util.ListBoxModel;",
      "30: import jenkins.model.GlobalConfiguration;",
      "31: import jenkins.model.Jenkins;",
      "32: import org.kohsuke.stapler.verb.POST;",
      "34: public class SharedUploadBuildStep {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "113:     @POST",
      "114:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
      "115:                                                                      final String personalAccessToken,",
      "118:         FodApiConnection testApi;",
      "119:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
      "120:         String apiUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getApiUrl();",
      "",
      "[Removed Lines]",
      "116:                                                                      final String tenantId) {",
      "117:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "",
      "[Added Lines]",
      "119:                                                                      final String tenantId,",
      "120:                                                                      @AncestorInPath Job job) {",
      "121:         job.checkPermission(Item.CONFIGURE);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "154:     }",
      "156:     @SuppressWarnings(\"unused\")",
      "158:         ListBoxModel items = CredentialsProvider.listCredentials(",
      "159:                 StringCredentials.class,",
      "160:                 Jenkins.get(),",
      "",
      "[Removed Lines]",
      "157:     public static ListBoxModel doFillStringCredentialsItems() {",
      "",
      "[Added Lines]",
      "161:     public static ListBoxModel doFillStringCredentialsItems(@AncestorInPath Job job) {",
      "162:         job.checkPermission(Item.CONFIGURE);",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java": [
      "File: src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: import hudson.model.AbstractBuild;",
      "8: import hudson.model.AbstractProject;",
      "9: import hudson.model.BuildListener;",
      "10: import hudson.model.Run;",
      "11: import hudson.model.TaskListener;",
      "12: import hudson.security.Permission;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10: import hudson.model.Item;",
      "11: import hudson.model.Job;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "32: import jenkins.model.Jenkins;",
      "33: import org.jenkinsci.plugins.fodupload.models.AuthenticationModel;",
      "34: import org.kohsuke.stapler.QueryParameter;",
      "35: import org.kohsuke.stapler.verb.POST;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "36: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "196:         @POST",
      "197:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final String username,",
      "198:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
      "202:         }",
      "204:         @SuppressWarnings(\"unused\")",
      "",
      "[Removed Lines]",
      "199:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId) {",
      "200:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "201:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
      "",
      "[Added Lines]",
      "202:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId,",
      "203:                                                                   @AncestorInPath Job job) {",
      "204:             job.checkPermission(Item.CONFIGURE);",
      "205:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId,job);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "214:         @SuppressWarnings(\"unused\")",
      "218:         }",
      "220:         @SuppressWarnings(\"unused\")",
      "223:         }",
      "225:         @SuppressWarnings(\"unused\")",
      "228:         }",
      "230:         @SuppressWarnings(\"unused\")",
      "",
      "[Removed Lines]",
      "216:         public ListBoxModel doFillUsernameItems() {",
      "217:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "221:         public ListBoxModel doFillPersonalAccessTokenItems() {",
      "222:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "226:         public ListBoxModel doFillTenantIdItems() {",
      "227:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "",
      "[Added Lines]",
      "220:         public ListBoxModel doFillUsernameItems(@AncestorInPath Job job) {",
      "221:             return SharedUploadBuildStep.doFillStringCredentialsItems(job);",
      "225:         public ListBoxModel doFillPersonalAccessTokenItems(@AncestorInPath Job job) {",
      "226:             return SharedUploadBuildStep.doFillStringCredentialsItems(job);",
      "230:         public ListBoxModel doFillTenantIdItems(@AncestorInPath Job job) {",
      "231:             return SharedUploadBuildStep.doFillStringCredentialsItems(job);",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java": [
      "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: import hudson.Launcher;",
      "23: import hudson.model.AbstractBuild;",
      "24: import hudson.model.BuildListener;",
      "25: import hudson.model.Run;",
      "26: import hudson.model.TaskListener;",
      "27: import hudson.util.FormValidation;",
      "28: import hudson.util.ListBoxModel;",
      "29: import hudson.util.Secret;",
      "30: import org.kohsuke.stapler.verb.POST;",
      "32: @SuppressFBWarnings(\"unused\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25: import hudson.model.Item;",
      "26: import hudson.model.Job;",
      "32: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "193:         @POST",
      "194:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedPollingBuildStep.USERNAME) final String username,",
      "195:                                                                   @QueryParameter(SharedPollingBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
      "200:         }",
      "",
      "[Removed Lines]",
      "196:                                                                   @QueryParameter(SharedPollingBuildStep.TENANT_ID) final String tenantId) {",
      "197:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "198:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
      "",
      "[Added Lines]",
      "200:                                                                   @QueryParameter(SharedPollingBuildStep.TENANT_ID) final String tenantId,",
      "201:                                                                   @AncestorInPath Job job) {",
      "202:             job.checkPermission(Item.CONFIGURE);",
      "203:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId, job);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "205:         }",
      "207:         @SuppressWarnings(\"unused\")",
      "210:         }",
      "212:         @SuppressWarnings(\"unused\")",
      "215:         }",
      "217:         @SuppressWarnings(\"unused\")",
      "220:         }",
      "222:     }",
      "",
      "[Removed Lines]",
      "208:         public ListBoxModel doFillUsernameItems() {",
      "209:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
      "213:         public ListBoxModel doFillPersonalAccessTokenItems() {",
      "214:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
      "218:         public ListBoxModel doFillTenantIdItems() {",
      "219:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
      "",
      "[Added Lines]",
      "214:         public ListBoxModel doFillUsernameItems(@AncestorInPath Job job) {",
      "215:             return SharedPollingBuildStep.doFillStringCredentialsItems(job);",
      "219:         public ListBoxModel doFillPersonalAccessTokenItems(@AncestorInPath Job job) {",
      "220:             return SharedPollingBuildStep.doFillStringCredentialsItems(job);",
      "224:         public ListBoxModel doFillTenantIdItems(@AncestorInPath Job job) {",
      "225:             return SharedPollingBuildStep.doFillStringCredentialsItems(job);",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java": [
      "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: import hudson.Launcher;",
      "22: import hudson.model.AbstractBuild;",
      "23: import hudson.model.BuildListener;",
      "24: import hudson.model.Run;",
      "25: import hudson.model.TaskListener;",
      "26: import hudson.util.FormValidation;",
      "27: import hudson.util.ListBoxModel;",
      "28: import hudson.util.Secret;",
      "29: import org.kohsuke.stapler.verb.POST;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: import hudson.model.Item;",
      "25: import hudson.model.Job;",
      "31: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "211:         @POST",
      "212:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final String username,",
      "213:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
      "218:         }",
      "",
      "[Removed Lines]",
      "214:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId) {",
      "215:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
      "216:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
      "",
      "[Added Lines]",
      "217:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId,",
      "218:                                                                   @AncestorInPath Job job) {",
      "219:             job.checkPermission(Item.CONFIGURE);",
      "220:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId, job);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "228:         }",
      "230:         @SuppressWarnings(\"unused\")",
      "233:         }",
      "235:         @SuppressWarnings(\"unused\")",
      "238:         }",
      "240:         @SuppressWarnings(\"unused\")",
      "243:         }",
      "245:         @SuppressWarnings(\"unused\")",
      "",
      "[Removed Lines]",
      "231:         public ListBoxModel doFillUsernameItems() {",
      "232:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "236:         public ListBoxModel doFillPersonalAccessTokenItems() {",
      "237:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "241:         public ListBoxModel doFillTenantIdItems() {",
      "242:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
      "",
      "[Added Lines]",
      "236:         public ListBoxModel doFillUsernameItems(@AncestorInPath Job job) {",
      "237:             return SharedUploadBuildStep.doFillStringCredentialsItems(job);",
      "241:         public ListBoxModel doFillPersonalAccessTokenItems(@AncestorInPath Job job) {",
      "242:             return SharedUploadBuildStep.doFillStringCredentialsItems(job);",
      "246:         public ListBoxModel doFillTenantIdItems(@AncestorInPath Job job) {",
      "247:             return SharedUploadBuildStep.doFillStringCredentialsItems(job);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2b7505215353e500a275c00bf92da6f414698c55",
      "candidate_info": {
        "commit_hash": "2b7505215353e500a275c00bf92da6f414698c55",
        "repo": "jenkinsci/fortify-on-demand-uploader-plugin",
        "commit_url": "https://github.com/jenkinsci/fortify-on-demand-uploader-plugin/commit/2b7505215353e500a275c00bf92da6f414698c55",
        "files": [
          "pom.xml",
          "src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/Utils.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanController.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "src/main/resources/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/PollingBuildStep/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment/config.jelly"
        ],
        "message": "[US-331023][US-331022] Adding credentials to both pipeline and freestyle projects. Removing decryption logic in favor of just passing ids.",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java||src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/Utils.java||src/main/java/org/jenkinsci/plugins/fodupload/Utils.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanController.java||src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanController.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "src/main/resources/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/PollingBuildStep/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/PollingBuildStep/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults/config.jelly",
          "src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment/config.jelly"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java||src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java -> src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:                     throw new IllegalArgumentException(\"Base URL is null.\");",
          "48:                 if (Utils.isNullOrEmpty(apiUrl))",
          "49:                     throw new IllegalArgumentException(\"Api URL is null.\");",
          "52:                         baseUrl,",
          "53:                         apiUrl,",
          "54:                         FodEnums.GrantType.PASSWORD,",
          "",
          "[Removed Lines]",
          "50:                 apiConnection = new FodApiConnection(Utils.decrypt(model.getTenantId()) + \"\\\\\" + Utils.decrypt(model.getUsername()),",
          "51:                         Utils.decrypt(model.getPersonalAccessToken()),",
          "",
          "[Added Lines]",
          "50:                 apiConnection = new FodApiConnection(Utils.retrieveSecretDecryptedValue(model.getTenantId()) + \"\\\\\" + Utils.retrieveSecretDecryptedValue(model.getUsername()),",
          "51:                         Utils.retrieveSecretDecryptedValue(model.getPersonalAccessToken()),",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java -> src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import hudson.Extension;",
          "4: import hudson.util.FormValidation;",
          "5: import hudson.util.Secret;",
          "6: import jenkins.model.GlobalConfiguration;",
          "7: import net.sf.json.JSONObject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import hudson.util.ListBoxModel;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:         if (globalAuthTypeObject.size() > 0) {",
          "46:             globalAuthType = globalAuthTypeObject.getString(\"value\");",
          "47:             if (globalAuthType.equals(\"apiKeyType\")) {",
          "50:             } else if (globalAuthType.equals(\"personalAccessTokenType\")) {",
          "54:             }",
          "55:         }",
          "56:         baseUrl = formData.getString(BASE_URL);",
          "",
          "[Removed Lines]",
          "48:                 clientId = Utils.encrypt(globalAuthTypeObject.getString(CLIENT_ID));",
          "49:                 clientSecret = Utils.encrypt(globalAuthTypeObject.getString(CLIENT_SECRET));",
          "51:                 username = Utils.encrypt(globalAuthTypeObject.getString(USERNAME));",
          "52:                 personalAccessToken = Utils.encrypt(globalAuthTypeObject.getString(PERSONAL_ACCESS_TOKEN));",
          "53:                 tenantId = Utils.encrypt(globalAuthTypeObject.getString(TENANT_ID));",
          "",
          "[Added Lines]",
          "49:                 clientId = globalAuthTypeObject.getString(CLIENT_ID);",
          "50:                 clientSecret = globalAuthTypeObject.getString(CLIENT_SECRET);",
          "52:                 username = globalAuthTypeObject.getString(USERNAME);",
          "53:                 personalAccessToken = globalAuthTypeObject.getString(PERSONAL_ACCESS_TOKEN);",
          "54:                 tenantId = globalAuthTypeObject.getString(TENANT_ID);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:     @SuppressWarnings(\"unused\")",
          "77:     public String getClientId() {",
          "79:     }",
          "81:     public String getOriginalClientId() {",
          "",
          "[Removed Lines]",
          "78:         return Utils.decrypt(clientId);",
          "",
          "[Added Lines]",
          "79:         return clientId;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "85:     @SuppressWarnings(\"unused\")",
          "86:     public String getClientSecret() {",
          "88:     }",
          "90:     public String getOriginalClientSecret() {",
          "",
          "[Removed Lines]",
          "87:         return Utils.decrypt(clientSecret);",
          "",
          "[Added Lines]",
          "88:         return clientSecret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "94:     @SuppressWarnings(\"unused\")",
          "95:     public String getUsername() {",
          "97:     }",
          "99:     @SuppressWarnings(\"unused\")",
          "",
          "[Removed Lines]",
          "96:         return Utils.decrypt(username);",
          "",
          "[Added Lines]",
          "97:         return username;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "104:     @SuppressWarnings(\"unused\")",
          "105:     public String getPersonalAccessToken() {",
          "107:     }",
          "109:     @SuppressWarnings(\"unused\")",
          "",
          "[Removed Lines]",
          "106:         return Utils.decrypt(personalAccessToken);",
          "",
          "[Added Lines]",
          "107:         return personalAccessToken;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "114:     @SuppressWarnings(\"unused\")",
          "115:     public String getTenantId() {",
          "117:     }",
          "119:     @SuppressWarnings(\"unused\")",
          "",
          "[Removed Lines]",
          "116:         return Utils.decrypt(tenantId);",
          "",
          "[Added Lines]",
          "117:         return tenantId;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "147:                                                  @QueryParameter(API_URL) final String apiUrl) {",
          "148:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "149:         FodApiConnection testApi;",
          "150:         if (Utils.isNullOrEmpty(baseUrl))",
          "151:             return FormValidation.error(\"Fortify on Demand URL is empty!\");",
          "152:         if (Utils.isNullOrEmpty(apiUrl))",
          "153:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "155:             return FormValidation.error(\"API Key is empty!\");",
          "157:             return FormValidation.error(\"Secret Key is empty!\");",
          "159:         return testConnection(testApi);",
          "160:     }",
          "",
          "[Removed Lines]",
          "154:         if (Utils.isNullOrEmpty(clientId))",
          "156:         if (Utils.isNullOrEmpty(clientSecret))",
          "158:         testApi = new FodApiConnection(clientId, clientSecret, baseUrl, apiUrl, GrantType.CLIENT_CREDENTIALS, \"api-tenant\");",
          "",
          "[Added Lines]",
          "151:         String plainTextClientId = Utils.retrieveSecretDecryptedValue(clientId);",
          "152:         String plainTextClientSecret= Utils.retrieveSecretDecryptedValue(clientSecret);",
          "157:         if (Utils.isNullOrEmpty(plainTextClientId))",
          "159:         if (Utils.isNullOrEmpty(plainTextClientSecret))",
          "161:         testApi = new FodApiConnection(plainTextClientId, plainTextClientSecret, baseUrl, apiUrl, GrantType.CLIENT_CREDENTIALS, \"api-tenant\");",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "169:                                                               @QueryParameter(API_URL) final String apiUrl) {",
          "170:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "171:         FodApiConnection testApi;",
          "172:         if (Utils.isNullOrEmpty(baseUrl))",
          "173:             return FormValidation.error(\"Fortify on Demand URL is empty!\");",
          "174:         if (Utils.isNullOrEmpty(apiUrl))",
          "175:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "177:             return FormValidation.error(\"Username is empty!\");",
          "179:             return FormValidation.error(\"Personal Access Token is empty!\");",
          "181:             return FormValidation.error(\"Tenant ID is null.\");",
          "183:         return testConnection(testApi);",
          "185:     }",
          "187:     FodApiConnection createFodApiConnection() {",
          "189:         if (!Utils.isNullOrEmpty(globalAuthType)) {",
          "",
          "[Removed Lines]",
          "176:         if (Utils.isNullOrEmpty(username))",
          "178:         if (Utils.isNullOrEmpty(personalAccessToken))",
          "180:         if (Utils.isNullOrEmpty(tenantId))",
          "182:         testApi = new FodApiConnection(tenantId + \"\\\\\" + username, personalAccessToken, baseUrl, apiUrl, GrantType.PASSWORD, \"api-tenant\");",
          "",
          "[Added Lines]",
          "175:         String plainTextUsername = Utils.retrieveSecretDecryptedValue(username);",
          "176:         String plainTextPersonalAccessToken = Utils.retrieveSecretDecryptedValue(personalAccessToken);",
          "177:         String plainTextTenantId= Utils.retrieveSecretDecryptedValue(tenantId);",
          "182:         if (Utils.isNullOrEmpty(plainTextUsername))",
          "184:         if (Utils.isNullOrEmpty(plainTextPersonalAccessToken))",
          "186:         if (Utils.isNullOrEmpty(plainTextTenantId))",
          "188:         testApi = new FodApiConnection(plainTextTenantId + \"\\\\\" + plainTextUsername, plainTextPersonalAccessToken, baseUrl, apiUrl, GrantType.PASSWORD, \"api-tenant\");",
          "193:     @SuppressWarnings(\"unused\")",
          "194:     public ListBoxModel doFillClientIdItems() {",
          "195:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "196:     }",
          "198:     @SuppressWarnings(\"unused\")",
          "199:     public ListBoxModel doFillClientSecretItems() {",
          "200:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "201:     }",
          "203:     @SuppressWarnings(\"unused\")",
          "204:     public ListBoxModel doFillUsernameItems() {",
          "205:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "206:     }",
          "208:     @SuppressWarnings(\"unused\")",
          "209:     public ListBoxModel doFillPersonalAccessTokenItems() {",
          "210:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "211:     }",
          "213:     @SuppressWarnings(\"unused\")",
          "214:     public ListBoxModel doFillTenantIdItems() {",
          "215:         return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "216:     }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "198:                     throw new IllegalArgumentException(\"Client ID is null.\");",
          "199:                 if (Utils.isNullOrEmpty(clientSecret))",
          "200:                     throw new IllegalArgumentException(\"Client Secret is null.\");",
          "202:             } else if (globalAuthType.equals(\"personalAccessTokenType\")) {",
          "203:                 if (Utils.isNullOrEmpty(username))",
          "204:                     throw new IllegalArgumentException(\"Username is null.\");",
          "",
          "[Removed Lines]",
          "201:                 return new FodApiConnection(Utils.decrypt(clientId), Utils.decrypt(clientSecret), baseUrl, apiUrl, GrantType.CLIENT_CREDENTIALS, \"api-tenant\");",
          "",
          "[Added Lines]",
          "232:                 return new FodApiConnection(Utils.retrieveSecretDecryptedValue(clientId), Utils.retrieveSecretDecryptedValue(clientSecret), baseUrl, apiUrl, GrantType.CLIENT_CREDENTIALS, \"api-tenant\");",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "206:                     throw new IllegalArgumentException(\"Personal Access Token is null.\");",
          "207:                 if (Utils.isNullOrEmpty(tenantId))",
          "208:                     throw new IllegalArgumentException(\"Tenant ID is null.\");",
          "210:             } else {",
          "211:                 throw new IllegalArgumentException(\"Invalid authentication type\");",
          "212:             }",
          "",
          "[Removed Lines]",
          "209:                 return new FodApiConnection(Utils.decrypt(tenantId) + \"\\\\\" + Utils.decrypt(username), Utils.decrypt(personalAccessToken), baseUrl, apiUrl, GrantType.PASSWORD, \"api-tenant\");",
          "",
          "[Added Lines]",
          "240:                 return new FodApiConnection(Utils.retrieveSecretDecryptedValue(tenantId) + \"\\\\\" + Utils.retrieveSecretDecryptedValue(username), Utils.retrieveSecretDecryptedValue(personalAccessToken), baseUrl, apiUrl, GrantType.PASSWORD, \"api-tenant\");",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         public ListBoxModel doFillPolicyFailureBuildResultPreferenceItems() {",
          "160:             return SharedPollingBuildStep.doFillPolicyFailureBuildResultPreferenceItems();",
          "161:         }",
          "162:     }",
          "163: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:         @SuppressWarnings(\"unused\")",
          "164:         public ListBoxModel doFillUsernameItems() {",
          "165:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
          "166:         }",
          "168:         @SuppressWarnings(\"unused\")",
          "169:         public ListBoxModel doFillPersonalAccessTokenItems() {",
          "170:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
          "171:         }",
          "173:         @SuppressWarnings(\"unused\")",
          "174:         public ListBoxModel doFillTenantIdItems() {",
          "175:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
          "176:         }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import java.io.PrintStream;",
          "5: import java.net.URISyntaxException;",
          "7: import com.fortify.fod.parser.BsiToken;",
          "8: import com.fortify.fod.parser.BsiTokenParser;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import com.cloudbees.plugins.credentials.CredentialsProvider;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: import org.jenkinsci.plugins.fodupload.models.FodEnums;",
          "12: import org.jenkinsci.plugins.fodupload.polling.PollReleaseStatusResult;",
          "13: import org.jenkinsci.plugins.fodupload.polling.ScanStatusPoller;",
          "15: import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
          "16: import hudson.FilePath;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: import org.jenkinsci.plugins.plaincredentials.StringCredentials;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "18: import hudson.model.Result;",
          "19: import hudson.model.Run;",
          "20: import hudson.model.TaskListener;",
          "21: import hudson.util.FormValidation;",
          "22: import hudson.util.ListBoxModel;",
          "23: import jenkins.model.GlobalConfiguration;",
          "25: public class SharedPollingBuildStep {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import hudson.security.ACL;",
          "27: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "51:         this.bsiToken = bsiToken;",
          "52:         this.pollingInterval = pollingInterval;",
          "53:         this.policyFailureBuildResultPreference = policyFailureBuildResultPreference;",
          "57:         authModel = new AuthenticationModel(overrideGlobalConfig,",
          "58:                 username,",
          "59:                 personalAccessToken,",
          "",
          "[Removed Lines]",
          "54:         username = Utils.encrypt(username);",
          "55:         personalAccessToken = Utils.encrypt(personalAccessToken);",
          "56:         tenantId = Utils.encrypt(tenantId);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "97:         FodApiConnection testApi;",
          "98:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
          "99:         String apiUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getApiUrl();",
          "100:         if (Utils.isNullOrEmpty(baseUrl))",
          "101:             return FormValidation.error(\"Fortify on Demand URL is empty!\");",
          "102:         if (Utils.isNullOrEmpty(apiUrl))",
          "103:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "105:             return FormValidation.error(\"Username is empty!\");",
          "107:             return FormValidation.error(\"Personal Access Token is empty!\");",
          "109:             return FormValidation.error(\"Tenant ID is null.\");",
          "111:         return GlobalConfiguration.all().get(FodGlobalDescriptor.class).testConnection(testApi);",
          "113:     }",
          "",
          "[Removed Lines]",
          "104:         if (Utils.isNullOrEmpty(username))",
          "106:         if (Utils.isNullOrEmpty(personalAccessToken))",
          "108:         if (Utils.isNullOrEmpty(tenantId))",
          "110:         testApi = new FodApiConnection(tenantId + \"\\\\\" + username, personalAccessToken, baseUrl, apiUrl, FodEnums.GrantType.PASSWORD, \"api-tenant\");",
          "",
          "[Added Lines]",
          "101:         String plainTextUsername = Utils.retrieveSecretDecryptedValue(username);",
          "102:         String plainTextPersonalAccessToken = Utils.retrieveSecretDecryptedValue(personalAccessToken);",
          "103:         String plainTextTenantId= Utils.retrieveSecretDecryptedValue(tenantId);",
          "108:         if (Utils.isNullOrEmpty(plainTextUsername))",
          "110:         if (Utils.isNullOrEmpty(plainTextPersonalAccessToken))",
          "112:         if (Utils.isNullOrEmpty(plainTextTenantId))",
          "114:         testApi = new FodApiConnection(plainTextTenantId + \"\\\\\" + plainTextUsername, plainTextPersonalAccessToken, baseUrl, apiUrl, FodEnums.GrantType.PASSWORD, \"api-tenant\");",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "121:         return items;",
          "122:     }",
          "124:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "125:     public void perform(Run<?, ?> run,",
          "126:                         FilePath filePath,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:     @SuppressWarnings(\"unused\")",
          "129:     public static ListBoxModel doFillStringCredentialsItems() {",
          "130:         ListBoxModel items = CredentialsProvider.listCredentials(",
          "131:                 StringCredentials.class,",
          "132:                 Jenkins.get(),",
          "133:                 ACL.SYSTEM,",
          "134:                 null,",
          "135:                 null",
          "136:                 );",
          "137:         return items;",
          "138:     }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "134:         if(authModel != null)",
          "135:         {",
          "136:             if(authModel.getOverrideGlobalConfig() == true){",
          "140:                 {",
          "141:                     run.setResult(Result.UNSTABLE);",
          "142:                     logger.println(\"Credentials must be re-entered for security purposes. Please update on the global configuration and/or post-build actions and then save your updates\");",
          "",
          "[Removed Lines]",
          "137:                 if(!Utils.isEncrypted(authModel.getPersonalAccessToken()) ||",
          "138:                    !Utils.isEncrypted(authModel.getUsername()) ||",
          "139:                    !Utils.isEncrypted(authModel.getTenantId()))",
          "",
          "[Added Lines]",
          "153:                 if(!Utils.isCredential(authModel.getPersonalAccessToken()) ||",
          "154:                    !Utils.isCredential(authModel.getUsername()) ||",
          "155:                    !Utils.isCredential(authModel.getTenantId()))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "147:             {",
          "148:                 if(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getAuthTypeIsApiKey())",
          "149:                 {",
          "152:                     {",
          "153:                         run.setResult(Result.UNSTABLE);",
          "154:                         logger.println(\"Credentials must be re-entered for security purposes. Please update on the global configuration and/or post-build actions and then save your updates\");",
          "",
          "[Removed Lines]",
          "150:                     if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientId()) ||",
          "151:                        !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientSecret()))",
          "",
          "[Added Lines]",
          "166:                     if(!Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientId()) ||",
          "167:                        !Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientSecret()))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "157:                 }",
          "158:                 else",
          "159:                 {",
          "163:                     {",
          "164:                         run.setResult(Result.UNSTABLE);",
          "165:                         logger.println(\"Credentials must be re-entered for security purposes. Please update on the global configuration and/or post-build actions and then save your updates.\");",
          "",
          "[Removed Lines]",
          "160:                      if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalTenantId()) ||",
          "161:                         !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalUsername()) ||",
          "162:                         !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalPersonalAccessToken()) )",
          "",
          "[Added Lines]",
          "176:                      if(!Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalTenantId()) ||",
          "177:                         !Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalUsername()) ||",
          "178:                         !Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalPersonalAccessToken()) )",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "248:     public AuthenticationModel getAuthModel() {",
          "249:         AuthenticationModel displayModel = new AuthenticationModel(authModel.getOverrideGlobalConfig(),",
          "254:         return displayModel;",
          "255:     }",
          "",
          "[Removed Lines]",
          "250:                                                                    Utils.decrypt(authModel.getUsername()),",
          "251:                                                                    Utils.decrypt(authModel.getPersonalAccessToken()),",
          "252:                                                                    Utils.decrypt(authModel.getTenantId()) );",
          "",
          "[Added Lines]",
          "266:                                                                    Utils.retrieveSecretDecryptedValue(authModel.getUsername()),",
          "267:                                                                    Utils.retrieveSecretDecryptedValue(authModel.getPersonalAccessToken()),",
          "268:                                                                    Utils.retrieveSecretDecryptedValue(authModel.getTenantId()) );",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import java.io.IOException;",
          "5: import java.io.PrintStream;",
          "7: import com.fortify.fod.parser.BsiToken;",
          "8: import com.fortify.fod.parser.BsiTokenParser;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import com.cloudbees.plugins.credentials.CredentialsProvider;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: import org.jenkinsci.plugins.fodupload.models.AuthenticationModel;",
          "12: import org.jenkinsci.plugins.fodupload.models.FodEnums;",
          "13: import org.jenkinsci.plugins.fodupload.models.JobModel;",
          "15: import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
          "16: import hudson.FilePath;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: import org.jenkinsci.plugins.plaincredentials.StringCredentials;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "20: import hudson.model.Result;",
          "21: import hudson.model.Run;",
          "22: import hudson.model.TaskListener;",
          "23: import hudson.util.FormValidation;",
          "24: import hudson.util.ListBoxModel;",
          "25: import jenkins.model.GlobalConfiguration;",
          "27: public class SharedUploadBuildStep {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import hudson.security.ACL;",
          "29: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "53:                 srcLocation,",
          "54:                 remediationScanPreferenceType,",
          "55:                 inProgressScanActionType);",
          "61:         authModel = new AuthenticationModel(overrideGlobalConfig,",
          "62:                 username,",
          "",
          "[Removed Lines]",
          "57:         username = Utils.encrypt(username);",
          "58:         personalAccessToken = Utils.encrypt(personalAccessToken);",
          "59:         tenantId = Utils.encrypt(tenantId);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "87:         FodApiConnection testApi;",
          "88:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
          "89:         String apiUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getApiUrl();",
          "90:         if (Utils.isNullOrEmpty(baseUrl))",
          "91:             return FormValidation.error(\"Fortify on Demand URL is empty!\");",
          "92:         if (Utils.isNullOrEmpty(apiUrl))",
          "93:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "95:             return FormValidation.error(\"Username is empty!\");",
          "97:             return FormValidation.error(\"Personal Access Token is empty!\");",
          "99:             return FormValidation.error(\"Tenant ID is null.\");",
          "101:         return GlobalConfiguration.all().get(FodGlobalDescriptor.class).testConnection(testApi);",
          "103:     }",
          "",
          "[Removed Lines]",
          "94:         if (Utils.isNullOrEmpty(username))",
          "96:         if (Utils.isNullOrEmpty(personalAccessToken))",
          "98:         if (Utils.isNullOrEmpty(tenantId))",
          "100:         testApi = new FodApiConnection(tenantId + \"\\\\\" + username, personalAccessToken, baseUrl, apiUrl, FodEnums.GrantType.PASSWORD, \"api-tenant\");",
          "",
          "[Added Lines]",
          "90:         String plainTextUsername = Utils.retrieveSecretDecryptedValue(username);",
          "91:         String plainTextPersonalAccessToken = Utils.retrieveSecretDecryptedValue(personalAccessToken);",
          "92:         String plainTextTenantId= Utils.retrieveSecretDecryptedValue(tenantId);",
          "97:         if (Utils.isNullOrEmpty(plainTextUsername))",
          "99:         if (Utils.isNullOrEmpty(plainTextPersonalAccessToken))",
          "101:         if (Utils.isNullOrEmpty(plainTextTenantId))",
          "103:         testApi = new FodApiConnection(plainTextTenantId + \"\\\\\" + plainTextUsername, plainTextPersonalAccessToken, baseUrl, apiUrl, FodEnums.GrantType.PASSWORD, \"api-tenant\");",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "121:         return items;",
          "122:     }",
          "124:     public boolean prebuild(AbstractBuild<?, ?> build, BuildListener listener) {",
          "125:         final PrintStream logger = listener.getLogger();",
          "126:         if (model == null) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:     @SuppressWarnings(\"unused\")",
          "128:     public static ListBoxModel doFillStringCredentialsItems() {",
          "129:         ListBoxModel items = CredentialsProvider.listCredentials(",
          "130:                 StringCredentials.class,",
          "131:                 Jenkins.get(),",
          "132:                 ACL.SYSTEM,",
          "133:                 null,",
          "134:                 null",
          "135:                 );",
          "136:         return items;",
          "137:     }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "156:             if(authModel != null)",
          "157:             {",
          "158:                 if(authModel.getOverrideGlobalConfig() == true){",
          "162:                     {",
          "163:                         build.setResult(Result.UNSTABLE);",
          "164:                         logger.println(\"Credentials must be re-entered for security purposes. Please update on the global configuration and/or post-build actions and then save your updates.\");",
          "",
          "[Removed Lines]",
          "159:                     if(!Utils.isEncrypted(authModel.getPersonalAccessToken()) ||",
          "160:                        !Utils.isEncrypted(authModel.getUsername()) ||",
          "161:                        !Utils.isEncrypted(authModel.getTenantId()))",
          "",
          "[Added Lines]",
          "174:                     if(!Utils.isCredential(authModel.getPersonalAccessToken()) ||",
          "175:                        !Utils.isCredential(authModel.getUsername()) ||",
          "176:                        !Utils.isCredential(authModel.getTenantId()))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "169:                 {",
          "170:                     if(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getAuthTypeIsApiKey())",
          "171:                     {",
          "174:                         {",
          "175:                             build.setResult(Result.UNSTABLE);",
          "176:                             logger.println(\"Credentials must be re-entered for security purposes. Please update on the global configuration and/or post-build actions and then save your updates.\");",
          "",
          "[Removed Lines]",
          "172:                         if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientId()) ||",
          "173:                            !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientSecret()))",
          "",
          "[Added Lines]",
          "187:                         if(!Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientId()) ||",
          "188:                            !Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientSecret()))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "179:                     }",
          "180:                     else",
          "181:                     {",
          "185:                         {",
          "186:                             build.setResult(Result.UNSTABLE);",
          "187:                             logger.println(\"Credentials must be re-entered for security purposes. Please update on the global configuration and/or post-build actions and then save your updates.\");",
          "",
          "[Removed Lines]",
          "182:                          if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalTenantId()) ||",
          "183:                             !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalUsername()) ||",
          "184:                             !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalPersonalAccessToken()) )",
          "",
          "[Added Lines]",
          "197:                          if(!Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalTenantId()) ||",
          "198:                             !Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalUsername()) ||",
          "199:                             !Utils.isCredential(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalPersonalAccessToken()) )",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "265:     public AuthenticationModel getAuthModel() {",
          "266:         AuthenticationModel displayModel = new AuthenticationModel(authModel.getOverrideGlobalConfig(),",
          "271:         return displayModel;",
          "272:     }",
          "",
          "[Removed Lines]",
          "267:                                                                    Utils.decrypt(authModel.getUsername()),",
          "268:                                                                    Utils.decrypt(authModel.getPersonalAccessToken()),",
          "269:                                                                    Utils.decrypt(authModel.getTenantId()) );",
          "",
          "[Added Lines]",
          "282:                                                                    Utils.retrieveSecretDecryptedValue(authModel.getUsername()),",
          "283:                                                                    Utils.retrieveSecretDecryptedValue(authModel.getPersonalAccessToken()),",
          "284:                                                                    Utils.retrieveSecretDecryptedValue(authModel.getTenantId()) );",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:         public ListBoxModel doFillRemediationScanPreferenceTypeItems() {",
          "197:             return SharedUploadBuildStep.doFillRemediationScanPreferenceTypeItems();",
          "198:         }",
          "199:     }",
          "200: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200:         @SuppressWarnings(\"unused\")",
          "201:         public ListBoxModel doFillUsernameItems() {",
          "202:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "203:         }",
          "205:         @SuppressWarnings(\"unused\")",
          "206:         public ListBoxModel doFillPersonalAccessTokenItems() {",
          "207:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "208:         }",
          "210:         @SuppressWarnings(\"unused\")",
          "211:         public ListBoxModel doFillTenantIdItems() {",
          "212:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "213:         }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/Utils.java||src/main/java/org/jenkinsci/plugins/fodupload/Utils.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/Utils.java -> src/main/java/org/jenkinsci/plugins/fodupload/Utils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jenkinsci.plugins.fodupload;",
          "3: import hudson.FilePath;",
          "4: import hudson.util.Secret;",
          "6: import java.io.File;",
          "7: import java.io.FileOutputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import hudson.security.ACL;",
          "6: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10: import java.util.List;",
          "11: import java.util.regex.Pattern;",
          "13: public class Utils {",
          "15:     private static final String TS_DOT_NET_KEY = \".NET\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: import com.cloudbees.plugins.credentials.CredentialsMatchers;",
          "16: import com.cloudbees.plugins.credentials.CredentialsProvider;",
          "18: import org.jenkinsci.plugins.plaincredentials.StringCredentials;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:         return tempZip;",
          "116:     }",
          "119:         Secret decryptedSecret = Secret.decrypt(stringToDecrypt);",
          "120:         return  decryptedSecret != null ?  decryptedSecret.getPlainText() : stringToDecrypt;",
          "121:     }",
          "124:         String result = stringToEncrypt;",
          "125:         if(Secret.decrypt(stringToEncrypt) == null){",
          "126:             result = Secret.fromString(stringToEncrypt).getEncryptedValue();",
          "",
          "[Removed Lines]",
          "118:     public static String decrypt(String stringToDecrypt){",
          "123:     public static String encrypt(String stringToEncrypt){",
          "",
          "[Added Lines]",
          "125:     public static String decrypt(String stringToDecrypt) {",
          "130:     public static String decrypt(Secret stringToDecrypt) {",
          "131:         return stringToDecrypt.getPlainText();",
          "132:     }",
          "134:     public static String encrypt(String stringToEncrypt) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128:         return result;",
          "129:     }",
          "132:         return (Secret.decrypt(stringToEncrypt) != null);",
          "133:     }",
          "134: }",
          "",
          "[Removed Lines]",
          "131:     public static boolean isEncrypted(String stringToEncrypt){",
          "",
          "[Added Lines]",
          "142:     public static boolean isEncrypted(String stringToEncrypt) {",
          "146:     public static boolean isCredential(String id) {",
          "147:         StringCredentials s = CredentialsMatchers.firstOrNull(",
          "148:             CredentialsProvider.lookupCredentials(",
          "149:                 StringCredentials.class,",
          "150:                 Jenkins.get(),",
          "151:                 ACL.SYSTEM,",
          "152:                 null,",
          "153:                 null",
          "154:                 ),",
          "155:                 CredentialsMatchers.allOf(",
          "156:                     CredentialsMatchers.withId(id)",
          "157:                 )",
          "158:         );",
          "159:         return (s != null);",
          "160:     }",
          "162:     public static String retrieveSecretDecryptedValue(String id) {",
          "163:         StringCredentials s = CredentialsMatchers.firstOrNull(",
          "164:             CredentialsProvider.lookupCredentials(",
          "165:                 StringCredentials.class,",
          "166:                 Jenkins.get(),",
          "167:                 ACL.SYSTEM,",
          "168:                 null,",
          "169:                 null",
          "170:                 ),",
          "171:                 CredentialsMatchers.allOf(",
          "172:                     CredentialsMatchers.withId(id)",
          "173:                 )",
          "174:         );",
          "175:         return s != null ? decrypt(s.getSecret()) : id;",
          "176:     }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanController.java||src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanController.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanController.java -> src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import org.jenkinsci.plugins.fodupload.models.JobModel;",
          "13: import org.jenkinsci.plugins.fodupload.models.response.GenericErrorResponse;",
          "14: import org.jenkinsci.plugins.fodupload.models.response.PostStartScanResponse;",
          "18: import java.io.File;",
          "19: import java.io.FileInputStream;",
          "",
          "[Removed Lines]",
          "15: import org.jenkinsci.plugins.fodupload.models.response.ReleaseAssessmentTypeDTO;",
          "16: import sun.applet.Main;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     }",
          "79:     public String getClientId() {",
          "81:     }",
          "83:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "80:         return Secret.fromString(clientId).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "80:         return clientId;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:     }",
          "88:     public String getClientSecret() {",
          "90:     }",
          "92:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "89:         return Secret.fromString(clientSecret).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "89:         return clientSecret;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95:     }",
          "97:     public String getUsername() {",
          "99:     }",
          "101:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "98:         return Secret.fromString(username).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "98:         return username;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:     }",
          "106:     public String getPersonalAccessToken() {",
          "108:     }",
          "110:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "107:         return Secret.fromString(personalAccessToken).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "107:         return personalAccessToken;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "113:     }",
          "115:     public String getTenantId() {",
          "117:     }",
          "119:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "116:         return Secret.fromString(tenantId).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "116:         return tenantId;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "130:                 overrideGlobalConfig,",
          "131:                 pollingInterval,",
          "132:                 policyFailureBuildResultPreference,",
          "139:         return true;",
          "140:     }",
          "",
          "[Removed Lines]",
          "133:                 Secret.decrypt(clientId).getPlainText(),",
          "134:                 Secret.decrypt(clientSecret).getPlainText(),",
          "135:                 Secret.decrypt(username).getPlainText(),",
          "136:                 Secret.decrypt(personalAccessToken).getPlainText(),",
          "137:                 Secret.decrypt(tenantId).getPlainText());",
          "",
          "[Added Lines]",
          "133:                 clientId,",
          "134:                 clientSecret,",
          "135:                 username,",
          "136:                 personalAccessToken,",
          "137:                 tenantId);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "153:                 overrideGlobalConfig,",
          "154:                 pollingInterval,",
          "155:                 policyFailureBuildResultPreference,",
          "162:         commonBuildStep.perform(build, workspace, launcher, listener);",
          "163:     }",
          "",
          "[Removed Lines]",
          "156:                 Secret.decrypt(clientId).getPlainText(),",
          "157:                 Secret.decrypt(clientSecret).getPlainText(),",
          "158:                 Secret.decrypt(username).getPlainText(),",
          "159:                 Secret.decrypt(personalAccessToken).getPlainText(),",
          "160:                 Secret.decrypt(tenantId).getPlainText());",
          "",
          "[Added Lines]",
          "156:                 clientId,",
          "157:                 clientSecret,",
          "158:                 username,",
          "159:                 personalAccessToken,",
          "160:                 tenantId);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "183:         @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "184:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "190:         }",
          "",
          "[Removed Lines]",
          "185:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedPollingBuildStep.USERNAME) final Secret username,",
          "186:                                                                   @QueryParameter(SharedPollingBuildStep.PERSONAL_ACCESS_TOKEN) final Secret personalAccessToken,",
          "187:                                                                   @QueryParameter(SharedPollingBuildStep.TENANT_ID) final Secret tenantId) {",
          "188:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(Secret.toString(username), Secret.toString(personalAccessToken), Secret.toString(tenantId));",
          "",
          "[Added Lines]",
          "185:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedPollingBuildStep.USERNAME) final String username,",
          "186:                                                                   @QueryParameter(SharedPollingBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "187:                                                                   @QueryParameter(SharedPollingBuildStep.TENANT_ID) final String tenantId) {",
          "188:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "194:             return SharedPollingBuildStep.doFillPolicyFailureBuildResultPreferenceItems();",
          "195:         }",
          "197:     }",
          "199:     private static class Execution extends SynchronousNonBlockingStepExecution<Void> {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197:         @SuppressWarnings(\"unused\")",
          "198:         public ListBoxModel doFillUsernameItems() {",
          "199:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
          "200:         }",
          "202:         @SuppressWarnings(\"unused\")",
          "203:         public ListBoxModel doFillPersonalAccessTokenItems() {",
          "204:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
          "205:         }",
          "207:         @SuppressWarnings(\"unused\")",
          "208:         public ListBoxModel doFillTenantIdItems() {",
          "209:             return SharedPollingBuildStep.doFillStringCredentialsItems();",
          "210:         }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     }",
          "68:     public String getUsername() {",
          "70:     }",
          "72:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "69:         return Secret.fromString(username).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "69:         return username;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     }",
          "77:     public String getPersonalAccessToken() {",
          "79:     }",
          "81:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "78:         return Secret.fromString(personalAccessToken).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "78:         return personalAccessToken;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:     }",
          "86:     public String getTenantId() {",
          "88:     }",
          "90:     @DataBoundSetter",
          "",
          "[Removed Lines]",
          "87:         return Secret.fromString(tenantId).getEncryptedValue().toString();",
          "",
          "[Added Lines]",
          "87:         return tenantId;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "144:         log.println(\"Fortify on Demand Upload PreBuild Running...\");",
          "145:         commonBuildStep = new SharedUploadBuildStep(bsiToken,",
          "146:                 overrideGlobalConfig,",
          "150:                 purchaseEntitlements,",
          "151:                 entitlementPreference,",
          "152:                 srcLocation,",
          "",
          "[Removed Lines]",
          "147:                 Secret.decrypt(username).getPlainText(),",
          "148:                 Secret.decrypt(personalAccessToken).getPlainText(),",
          "149:                 Secret.decrypt(tenantId).getPlainText(),",
          "",
          "[Added Lines]",
          "147:                 username,",
          "148:                 personalAccessToken,",
          "149:                 tenantId,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "168:         log.println(\"Fortify on Demand Upload Running...\");",
          "169:         commonBuildStep = new SharedUploadBuildStep(bsiToken,",
          "170:                 overrideGlobalConfig,",
          "174:                 purchaseEntitlements,",
          "175:                 entitlementPreference,",
          "176:                 srcLocation,",
          "",
          "[Removed Lines]",
          "171:                 Secret.decrypt(username).getPlainText(),",
          "172:                 Secret.decrypt(personalAccessToken).getPlainText(),",
          "173:                 Secret.decrypt(tenantId).getPlainText(),",
          "",
          "[Added Lines]",
          "171:                 username,",
          "172:                 personalAccessToken,",
          "173:                 tenantId,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "201:         @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "202:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "208:         }",
          "",
          "[Removed Lines]",
          "203:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final Secret username,",
          "204:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final Secret personalAccessToken,",
          "205:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final Secret tenantId) {",
          "206:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(Secret.toString(username), Secret.toString(personalAccessToken), Secret.toString(tenantId));",
          "",
          "[Added Lines]",
          "203:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final String username,",
          "204:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "205:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId) {",
          "206:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "216:         public ListBoxModel doFillRemediationScanPreferenceTypeItems() {",
          "217:             return SharedUploadBuildStep.doFillRemediationScanPreferenceTypeItems();",
          "218:         }",
          "219:     }",
          "221:     private static class Execution extends SynchronousNonBlockingStepExecution<Void> {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220:         @SuppressWarnings(\"unused\")",
          "221:         public ListBoxModel doFillUsernameItems() {",
          "222:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "223:         }",
          "225:         @SuppressWarnings(\"unused\")",
          "226:         public ListBoxModel doFillPersonalAccessTokenItems() {",
          "227:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "228:         }",
          "230:         @SuppressWarnings(\"unused\")",
          "231:         public ListBoxModel doFillTenantIdItems() {",
          "232:             return SharedUploadBuildStep.doFillStringCredentialsItems();",
          "233:         }",
          "",
          "---------------"
        ],
        "src/main/resources/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor/config.jelly": [
          "File: src/main/resources/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor/config.jelly -> src/main/resources/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor/config.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?jelly escape-by-default='true'?>",
          "4:     <f:section title=\"Fortify on Demand\">",
          "5:         <f:entry title=\"Fortify on Demand URL\" description=\"ex. https://ams.fortify.com\" field=\"baseUrl\">",
          "",
          "[Removed Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "[Added Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:c=\"/lib/credentials\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:             <table >",
          "16:               <f:radioBlock name=\"globalAuthType\" title=\"Use API key for authentication\" checked=\"${instance.authTypeIsApiKey}\" value=\"apiKeyType\"  >",
          "17:                 <f:entry title=\"API Key\" field=\"clientId\">",
          "19:                 </f:entry>",
          "20:                 <f:entry title=\"Secret\" field=\"clientSecret\">",
          "22:                 </f:entry>",
          "23:                 <f:validateButton title=\"${%Test Connection}\" progress=\"${%Testing connection to Fortify on Demand...}\"",
          "24:                           method=\"testApiKeyConnection\" with=\"clientId,clientSecret,baseUrl,apiUrl\"/>",
          "25:               </f:radioBlock>",
          "26:                <f:radioBlock name=\"globalAuthType\" title=\"Use Personal Access Token for authentication\" checked=\"${instance.authTypeIsPersonalToken}\" value=\"personalAccessTokenType\" >",
          "27:                 <f:entry title=\"Username\" field=\"username\">",
          "29:                 </f:entry>",
          "30:                 <f:entry title=\"Personal Access Token\" field=\"personalAccessToken\">",
          "32:                 </f:entry>",
          "33:                  <f:entry title=\"Tenant ID\" field=\"tenantId\">",
          "35:                 </f:entry>",
          "36:                 <f:validateButton title=\"${%Test Connection}\" progress=\"${%Testing connection to Fortify on Demand...}\"",
          "37:                           method=\"testPersonalAccessTokenConnection\" with=\"username,personalAccessToken,tenantId,baseUrl,apiUrl\"/>",
          "",
          "[Removed Lines]",
          "18:                     <f:textbox/>",
          "21:                     <f:password/>",
          "28:                     <f:textbox/>",
          "31:                     <f:password/>",
          "34:                     <f:textbox/>",
          "",
          "[Added Lines]",
          "18:                     <c:select style=\"width: 160px;\"/>",
          "21:                     <c:select style=\"width: 160px;\"/>",
          "28:                     <c:select style=\"width: 160px;\"/>",
          "31:                     <c:select style=\"width: 160px;\"/>",
          "34:                     <c:select style=\"width: 160px;\"/>",
          "",
          "---------------"
        ],
        "src/main/resources/org/jenkinsci/plugins/fodupload/PollingBuildStep/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/PollingBuildStep/config.jelly": [
          "File: src/main/resources/org/jenkinsci/plugins/fodupload/PollingBuildStep/config.jelly -> src/main/resources/org/jenkinsci/plugins/fodupload/PollingBuildStep/config.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?jelly escape-by-default='true'?>",
          "3:     <f:entry title=\"BSI Token\" field=\"bsiToken\">",
          "4:         <f:textbox />",
          "5:     </f:entry>",
          "",
          "[Removed Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "[Added Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:c=\"/lib/credentials\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8:         <f:block>",
          "9:                <f:optionalBlock name=\"overrideGlobalConfig\" title=\"Use Personal Access Token\" checked=\"${instance.overrideGlobalConfig}\" inline=\"true\">",
          "10:                 <f:entry title=\"Username\" field=\"username\">",
          "12:                 </f:entry>",
          "13:                 <f:entry title=\"Personal Access Token\" field=\"personalAccessToken\" help=\"/plugin/fortify-on-demand-uploader/help-personalAccessToken.html\">",
          "15:                 </f:entry>",
          "16:                  <f:entry title=\"Tenant ID\" field=\"tenantId\">",
          "18:                 </f:entry>",
          "19:                 <f:validateButton title=\"${%Test Connection}\" progress=\"${%Testing connection to Fortify on Demand...}\"",
          "20:                           method=\"testPersonalAccessTokenConnection\" with=\"username,personalAccessToken,tenantId\"/>",
          "",
          "[Removed Lines]",
          "11:                     <f:textbox style=\"width: 160px;\" />",
          "14:                     <f:password style=\"width: 160px;\" />",
          "17:                     <f:textbox style=\"width: 160px;\" />",
          "",
          "[Added Lines]",
          "11:                     <c:select style=\"width: 160px;\" />",
          "14:                     <c:select style=\"width: 160px;\" />",
          "17:                     <c:select style=\"width: 160px;\" />",
          "",
          "---------------"
        ],
        "src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly": [
          "File: src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly -> src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?jelly escape-by-default='true'?>",
          "3:     <f:entry title=\"BSI Token\" field=\"bsiToken\">",
          "4:         <f:textbox />",
          "5:     </f:entry>",
          "",
          "[Removed Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "[Added Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:c=\"/lib/credentials\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12:         <f:block>",
          "13:             <f:optionalBlock name=\"overrideGlobalConfig\" field =\"overrideGlobalConfig\" title=\"Configure Personal Access Token\"  checked=\"${instance.overrideGlobalConfig}\"  inline=\"true\">",
          "14:                 <f:entry title=\"Username\" field=\"username\" >",
          "16:                 </f:entry>",
          "17:                 <f:entry title=\"Personal Access Token\" field=\"personalAccessToken\" help=\"/plugin/fortify-on-demand-uploader/help-personalAccessToken.html\">",
          "19:                 </f:entry>",
          "20:                 <f:entry title=\"Tenant ID\" field=\"tenantId\" >",
          "22:                 </f:entry>",
          "23:                 <f:validateButton title=\"${%Test Connection}\" progress=\"${%Testing connection to Fortify on Demand...}\"",
          "24:                                   method=\"testPersonalAccessTokenConnection\" with=\"username,personalAccessToken,tenantId\"/>",
          "",
          "[Removed Lines]",
          "15:                     <f:textbox style=\"width: 160px;\"/>",
          "18:                     <f:password style=\"width: 160px;\"/>",
          "21:                     <f:textbox style=\"width: 160px;\" />",
          "",
          "[Added Lines]",
          "15:                     <c:select style=\"width: 160px;\"/>",
          "18:                     <c:select style=\"width: 160px;\"/>",
          "21:                     <c:select style=\"width: 160px;\" />",
          "",
          "---------------"
        ],
        "src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults/config.jelly": [
          "File: src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults/config.jelly -> src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults/config.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?jelly escape-by-default='true'?>",
          "3:     <f:entry title=\"BSI Token\" field=\"bsiToken\">",
          "4:         <f:textbox />",
          "5:     </f:entry>",
          "",
          "[Removed Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "[Added Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:c=\"/lib/credentials\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8:         <f:block>",
          "9:                <f:optionalBlock name=\"overrideGlobalConfig\" title=\"Use Personal Access Token\" checked=\"${instance.overrideGlobalConfig}\" inline=\"true\">",
          "10:                 <f:entry title=\"Username\" field=\"username\">",
          "12:                 </f:entry>",
          "13:                 <f:entry title=\"Personal Access Token\" field=\"personalAccessToken\" help=\"/plugin/fortify-on-demand-uploader/help-personalAccessToken.html\">",
          "15:                 </f:entry>",
          "16:                  <f:entry title=\"Tenant ID\" field=\"tenantId\">",
          "18:                 </f:entry>",
          "19:                 <f:validateButton title=\"${%Test Connection}\" progress=\"${%Testing connection to Fortify on Demand...}\"",
          "20:                           method=\"testPersonalAccessTokenConnection\" with=\"username,personalAccessToken,tenantId\"/>",
          "",
          "[Removed Lines]",
          "11:                     <f:textbox style=\"width: 160px;\" />",
          "14:                     <f:password style=\"width: 160px;\" />",
          "17:                     <f:textbox style=\"width: 160px;\" />",
          "",
          "[Added Lines]",
          "11:                     <c:select style=\"width: 160px;\" />",
          "14:                     <c:select style=\"width: 160px;\" />",
          "17:                     <c:select style=\"width: 160px;\" />",
          "",
          "---------------"
        ],
        "src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment/config.jelly": [
          "File: src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment/config.jelly -> src/main/resources/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment/config.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?jelly escape-by-default='true'?>",
          "3:     <f:entry title=\"BSI Token\" field=\"bsiToken\">",
          "4:         <f:textbox />",
          "5:     </f:entry>",
          "",
          "[Removed Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "[Added Lines]",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:c=\"/lib/credentials\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12:         <f:block>",
          "13:             <f:optionalBlock name=\"overrideGlobalConfig\" field =\"overrideGlobalConfig\" title=\"Configure Personal Access Token\"  checked=\"${instance.overrideGlobalConfig}\"  inline=\"true\">",
          "14:                 <f:entry title=\"Username\" field=\"username\" >",
          "16:                 </f:entry>",
          "17:                 <f:entry title=\"Personal Access Token\" field=\"personalAccessToken\" help=\"/plugin/fortify-on-demand-uploader/help-personalAccessToken.html\">",
          "19:                 </f:entry>",
          "20:                 <f:entry title=\"Tenant ID\" field=\"tenantId\" >",
          "22:                 </f:entry>",
          "23:                 <f:validateButton title=\"${%Test Connection}\" progress=\"${%Testing connection to Fortify on Demand...}\"",
          "24:                                   method=\"testPersonalAccessTokenConnection\" with=\"username,personalAccessToken,tenantId\"/>",
          "",
          "[Removed Lines]",
          "15:                     <f:textbox style=\"width: 160px;\"/>",
          "18:                     <f:password style=\"width: 160px;\"/>",
          "21:                     <f:textbox style=\"width: 160px;\" />",
          "",
          "[Added Lines]",
          "15:                     <c:select style=\"width: 160px;\"/>",
          "18:                     <c:select style=\"width: 160px;\"/>",
          "21:                     <c:select style=\"width: 160px;\" />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51797bd9b2e01d20f55984003a393f7daf69f4ce",
      "candidate_info": {
        "commit_hash": "51797bd9b2e01d20f55984003a393f7daf69f4ce",
        "repo": "jenkinsci/fortify-on-demand-uploader-plugin",
        "commit_url": "https://github.com/jenkinsci/fortify-on-demand-uploader-plugin/commit/51797bd9b2e01d20f55984003a393f7daf69f4ce",
        "files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanSummaryController.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/AnalysisStatusTypeEnum.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanPauseDetail.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanSummaryDTO.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/polling/ScanStatusPoller.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStep.java"
        ],
        "message": "US-292015 (#2)\n\n* Adding fields to display proper status\n\n* Adding functionality for displaying cancel and pause reasons\n\n* \"Updated verbiage and spacing\"",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanSummaryController.java||src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanSummaryController.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/AnalysisStatusTypeEnum.java||src/main/java/org/jenkinsci/plugins/fodupload/models/AnalysisStatusTypeEnum.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanPauseDetail.java||src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanPauseDetail.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanSummaryDTO.java||src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanSummaryDTO.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/polling/ScanStatusPoller.java||src/main/java/org/jenkinsci/plugins/fodupload/polling/ScanStatusPoller.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStep.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStep.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import com.fortify.fod.parser.BsiToken;",
          "4: import com.fortify.fod.parser.BsiTokenParser;",
          "5: import hudson.FilePath;",
          "6: import hudson.Launcher;",
          "7: import hudson.model.Result;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:     }",
          "183:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
          "184:                                                                final String personalAccessToken,",
          "185:                                                                final String tenantId)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import com.fortify.fod.parser.BsiToken;",
          "4: import com.fortify.fod.parser.BsiTokenParser;",
          "5: import hudson.FilePath;",
          "6: import hudson.Launcher;",
          "7: import hudson.model.*;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185:         return FormValidation.error(\"Please specify BSI Token\");",
          "186:     }",
          "188:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
          "189:                                                                       final String personalAccessToken,",
          "190:                                                                       final String tenantId)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanSummaryController.java||src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanSummaryController.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanSummaryController.java -> src/main/java/org/jenkinsci/plugins/fodupload/controllers/StaticScanSummaryController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jenkinsci.plugins.fodupload.controllers;",
          "3: import com.google.gson.Gson;",
          "4: import com.google.gson.reflect.TypeToken;",
          "5: import okhttp3.HttpUrl;",
          "6: import okhttp3.Request;",
          "7: import okhttp3.Response;",
          "8: import org.apache.commons.httpclient.HttpStatus;",
          "9: import org.apache.commons.io.IOUtils;",
          "10: import org.jenkinsci.plugins.fodupload.FodApiConnection;",
          "12: import org.jenkinsci.plugins.fodupload.models.response.ScanSummaryDTO;",
          "14: import java.io.IOException;",
          "15: import java.io.PrintStream;",
          "16: import java.lang.reflect.Type;",
          "18: public class StaticScanSummaryController extends ControllerBase {",
          "19:     private PrintStream logger;",
          "22:     public StaticScanSummaryController(FodApiConnection apiConnection, PrintStream logger) {",
          "23:         super(apiConnection);",
          "24:         this.logger = logger;",
          "25:     }",
          "27:     public ScanSummaryDTO getReleaseScanSummary(final int releaseId, final int scanId) throws IOException {",
          "29:         if (apiConnection.getToken() == null)",
          "30:             apiConnection.authenticate();",
          "32:         HttpUrl.Builder builder = HttpUrl.parse(apiConnection.getApiUrl()).newBuilder()",
          "33:                 .addPathSegments(String.format(\"/api/v3/releases/%d/scans/%d\", releaseId, scanId));",
          "34:         logger.println(\"--------------------------\");",
          "35:         logger.println(\"Retrieving scan summary data\");",
          "36:         logger.println(String.format(\"ReleaseID: %s; ScanID: %s\", releaseId, scanId));",
          "37:         logger.println(\"--------------------------\");",
          "39:         String url = builder.build().toString();",
          "41:         Request request = new Request.Builder()",
          "42:                 .url(url)",
          "43:                 .addHeader(\"Authorization\", \"Bearer \" + apiConnection.getToken())",
          "44:                 .addHeader(\"Accept\", \"application/json\")",
          "45:                 .get()",
          "46:                 .build();",
          "47:         Response response = apiConnection.getClient().newCall(request).execute();",
          "49:         if (response.code() == HttpStatus.SC_FORBIDDEN) {",
          "51:             apiConnection.authenticate();",
          "52:             response = apiConnection.getClient().newCall(request).execute();",
          "53:         }",
          "56:         String content = IOUtils.toString(response.body().byteStream(), \"utf-8\");",
          "57:         response.body().close();",
          "59:         Gson gson = new Gson();",
          "61:         Type t = new TypeToken<ScanSummaryDTO>() {",
          "62:         }.getType();",
          "64:         ScanSummaryDTO results = gson.fromJson(content, t);",
          "66:         if (results != null) {",
          "67:             return results;",
          "68:         } else {",
          "69:             return null;",
          "70:         }",
          "71:     }",
          "73: }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/models/AnalysisStatusTypeEnum.java||src/main/java/org/jenkinsci/plugins/fodupload/models/AnalysisStatusTypeEnum.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/models/AnalysisStatusTypeEnum.java -> src/main/java/org/jenkinsci/plugins/fodupload/models/AnalysisStatusTypeEnum.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jenkinsci.plugins.fodupload.models;",
          "3: public enum AnalysisStatusTypeEnum {",
          "4:     Completed,",
          "5:     InProgress,",
          "6:     Canceled,",
          "7:     Waiting",
          "8: }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanPauseDetail.java||src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanPauseDetail.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanPauseDetail.java -> src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanPauseDetail.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jenkinsci.plugins.fodupload.models.response;",
          "3: public class ScanPauseDetail {",
          "4:     private String pausedOn = \"\";",
          "5:     private String reason = \"\";",
          "6:     private String notes = \"\";",
          "8:     public String getPausedOn() {",
          "9:         return pausedOn;",
          "10:     }",
          "12:     public String getReason() {",
          "13:         return reason;",
          "14:     }",
          "16:     public String getNotes() {",
          "17:         return notes;",
          "18:     }",
          "19: }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanSummaryDTO.java||src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanSummaryDTO.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanSummaryDTO.java -> src/main/java/org/jenkinsci/plugins/fodupload/models/response/ScanSummaryDTO.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jenkinsci.plugins.fodupload.models.response;",
          "3: public class ScanSummaryDTO {",
          "4:     private int applicationId;",
          "5:     private String applicationName;",
          "6:     private int releaseId;",
          "7:     private String releaseName;",
          "8:     private int scanId;",
          "9:     private int scanTypeId;",
          "10:     private String scanType;",
          "11:     private int assessmentTypeId;",
          "12:     private String assessmentTypeName;",
          "13:     private int analysisStatusTypeId;",
          "14:     private String analysisStatusType;",
          "15:     private String startedDatetime;",
          "16:     private String completedDateTime;",
          "17:     private int totalIssues;",
          "18:     private int issueCountCritical;",
          "19:     private int issueCountHigh;",
          "20:     private int issueCountMedium;",
          "21:     private int issueCountLow;",
          "22:     private int starRating;",
          "23:     private String notes;",
          "24:     private boolean isFalsePositiveChallenge;",
          "25:     private boolean isRemediationScan;",
          "26:     private int entitlementId;",
          "27:     private int entitlementUnitsConsumed;",
          "28:     private boolean isSubscriptionEntitlement;",
          "29:     private ScanPauseDetail[] pauseDetails;",
          "30:     private String cancelReason;",
          "31:     private String analysisStatusReasonNotes;",
          "32:     private int scanMethodTypeId;",
          "33:     private String scanMethodTypeName;",
          "34:     private String scanTool;",
          "35:     private String scanToolVersion;",
          "37:     public int getApplicationId() {",
          "38:         return applicationId;",
          "39:     }",
          "41:     public String getApplicationName() {",
          "42:         return applicationName;",
          "43:     }",
          "45:     public int getReleaseId() {",
          "46:         return releaseId;",
          "47:     }",
          "49:     public String getReleaseName() {",
          "50:         return releaseName;",
          "51:     }",
          "53:     public int getScanId() {",
          "54:         return scanId;",
          "55:     }",
          "57:     public int getScanTypeId() {",
          "58:         return scanTypeId;",
          "59:     }",
          "61:     public String getScanType() {",
          "62:         return scanType;",
          "63:     }",
          "65:     public int getAssessmentTypeId() {",
          "66:         return assessmentTypeId;",
          "67:     }",
          "69:     public String getAssessmentTypeName() {",
          "70:         return assessmentTypeName;",
          "71:     }",
          "73:     public int getAnalysisStatusTypeId() {",
          "74:         return analysisStatusTypeId;",
          "75:     }",
          "77:     public String getAnalysisStatusType() {",
          "78:         return analysisStatusType;",
          "79:     }",
          "81:     public String getStartedDatetime() {",
          "82:         return startedDatetime;",
          "83:     }",
          "85:     public String getCompletedDateTime() {",
          "86:         return completedDateTime;",
          "87:     }",
          "89:     public int getTotalIssues() {",
          "90:         return totalIssues;",
          "91:     }",
          "93:     public int getIssueCountCritical() {",
          "94:         return issueCountCritical;",
          "95:     }",
          "97:     public int getIssueCountHigh() {",
          "98:         return issueCountHigh;",
          "99:     }",
          "101:     public int getIssueCountMedium() {",
          "102:         return issueCountMedium;",
          "103:     }",
          "105:     public int getIssueCountLow() {",
          "106:         return issueCountLow;",
          "107:     }",
          "109:     public int getStarRating() {",
          "110:         return starRating;",
          "111:     }",
          "113:     public String getNotes() {",
          "114:         return notes;",
          "115:     }",
          "117:     public boolean getIsFalsePositiveChallenge() {",
          "118:         return isFalsePositiveChallenge;",
          "119:     }",
          "121:     public boolean getIsRemediationScan() {",
          "122:         return isRemediationScan;",
          "123:     }",
          "125:     public int getEntitlementId() {",
          "126:         return entitlementId;",
          "127:     }",
          "129:     public int getEntitlementUnitsConsumed() {",
          "130:         return entitlementUnitsConsumed;",
          "131:     }",
          "133:     public boolean getIsSubscriptionEntitlement() {",
          "134:         return isSubscriptionEntitlement;",
          "135:     }",
          "137:     public ScanPauseDetail[] getPauseDetails() {",
          "138:         ScanPauseDetail[] returnDetails = pauseDetails;",
          "139:         return returnDetails;",
          "140:     }",
          "142:     public String getCancelReason() {",
          "143:         return cancelReason;",
          "144:     }",
          "146:     public String getAnalysisStatusReasonNotes() {",
          "147:         return analysisStatusReasonNotes;",
          "148:     }",
          "150:     public int getScanMethodTypeId() {",
          "151:         return scanMethodTypeId;",
          "152:     }",
          "154:     public String getScanMethodTypeName() {",
          "155:         return scanMethodTypeName;",
          "156:     }",
          "158:     public String getScanTool() {",
          "159:         return scanTool;",
          "160:     }",
          "162:     public String getScanToolVersion() {",
          "163:         return scanToolVersion;",
          "164:     }",
          "165: }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/polling/ScanStatusPoller.java||src/main/java/org/jenkinsci/plugins/fodupload/polling/ScanStatusPoller.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/polling/ScanStatusPoller.java -> src/main/java/org/jenkinsci/plugins/fodupload/polling/ScanStatusPoller.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import org.jenkinsci.plugins.fodupload.Utils;",
          "6: import org.jenkinsci.plugins.fodupload.controllers.LookupItemsController;",
          "7: import org.jenkinsci.plugins.fodupload.controllers.ReleaseController;",
          "8: import org.jenkinsci.plugins.fodupload.models.response.LookupItemsModel;",
          "9: import org.jenkinsci.plugins.fodupload.models.response.ReleaseDTO;",
          "11: import java.io.IOException;",
          "12: import java.io.PrintStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import org.jenkinsci.plugins.fodupload.controllers.StaticScanSummaryController;",
          "9: import org.jenkinsci.plugins.fodupload.models.AnalysisStatusTypeEnum;",
          "12: import org.jenkinsci.plugins.fodupload.models.response.ScanPauseDetail;",
          "13: import org.jenkinsci.plugins.fodupload.models.response.ScanSummaryDTO;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:         LookupItemsController lookupItemsController = new LookupItemsController(this.apiConnection);",
          "51:         ReleaseController releaseController = new ReleaseController(this.apiConnection);",
          "52:         PollReleaseStatusResult result = new PollReleaseStatusResult();",
          "53:         List<LookupItemsModel> analysisStatusTypes = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:         StaticScanSummaryController scanSummaryController = new StaticScanSummaryController(this.apiConnection, logger);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:             counter++;",
          "68:             ReleaseDTO release = releaseController.getRelease(releaseId,",
          "71:             if (release == null) {",
          "72:                 failCount++;",
          "",
          "[Removed Lines]",
          "69:                     \"currentAnalysisStatusTypeId,isPassed,passFailReasonId,critical,high,medium,low,releaseId,rating,currentStaticScanId,releaseName\");",
          "",
          "[Added Lines]",
          "75:                     \"currentAnalysisStatusTypeId,isPassed,passFailReasonTypeId,passFailReasonType,critical,high,medium,low,releaseId,rating,currentStaticScanId,releaseName\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "87:                 List<String> complete = new ArrayList<>();",
          "89:                 for (LookupItemsModel item : analysisStatusTypes) {",
          "91:                         complete.add(item.getValue());",
          "92:                 }",
          "",
          "[Removed Lines]",
          "90:                     if (item.getText().equalsIgnoreCase(\"Completed\") || item.getText().equalsIgnoreCase((\"Canceled\")))",
          "",
          "[Added Lines]",
          "96:                     if (item.getText().equalsIgnoreCase(AnalysisStatusTypeEnum.Completed.name()) || item.getText().equalsIgnoreCase(AnalysisStatusTypeEnum.Canceled.name()))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "107:                 logger.println(counter + \") Poll Status: \" + statusString);",
          "109:                 if (finished) {",
          "110:                     result.setPassing(release.isPassed());",
          "111:                     result.setPollingSuccessful(true);",
          "112:                     if (!Utils.isNullOrEmpty(release.getPassFailReasonType()))",
          "113:                         result.setFailReason(release.getPassFailReasonType());",
          "115:                 }",
          "116:             } else {",
          "117:                 logger.println(String.format(\"Polling Failed %d times.  Terminating\", MAX_FAILS));",
          "",
          "[Removed Lines]",
          "114:                     printPassFail(release);",
          "",
          "[Added Lines]",
          "116:                 if (statusString.equals(AnalysisStatusTypeEnum.Waiting.name())) {",
          "117:                     ScanSummaryDTO scanSummaryDTO = scanSummaryController.getReleaseScanSummary(release.getReleaseId(), release.getCurrentStaticScanId());",
          "118:                     if (scanSummaryDTO.getPauseDetails() != null)",
          "119:                         printPauseMessages(scanSummaryDTO);",
          "120:                 }",
          "128:                     if (statusString.equals(AnalysisStatusTypeEnum.Canceled.name())) {",
          "129:                         ScanSummaryDTO scanSummaryDTO = scanSummaryController.getReleaseScanSummary(release.getReleaseId(), release.getCurrentStaticScanId());",
          "130:                         printCancelMessages(scanSummaryDTO);",
          "131:                     } else {",
          "132:                         printPassFail(release);",
          "133:                     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "144:             logger.println(\"Failure Reason:         \" + passFailReason);",
          "145:         }",
          "146:     }",
          "147: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:     private void printCancelMessages(ScanSummaryDTO scanSummary) {",
          "168:         logger.println(\"-------Scan Cancelled------- \");",
          "169:         logger.println();",
          "170:         logger.println(String.format(\"Cancel reason:        %s\", scanSummary.getCancelReason()));",
          "171:         logger.println(String.format(\"Cancel reason notes:  %s\", scanSummary.getAnalysisStatusReasonNotes()));",
          "172:         logger.println();",
          "173:         logger.println(\"For application status details see the customer portal: \");",
          "174:         logger.println(String.format(\"%s/Redirect/Releases/%d\", apiConnection.getBaseUrl(), scanSummary.getReleaseId()));",
          "175:         logger.println();",
          "176:     }",
          "178:     private void printPauseMessages(ScanSummaryDTO scanSummary) {",
          "179:         logger.println(\"-------Scan Paused------- \");",
          "180:         logger.println();",
          "181:         logger.println(\"Review the last pause entry below\");",
          "182:         logger.println();",
          "183:         for (ScanPauseDetail spd : scanSummary.getPauseDetails()) {",
          "184:             logger.println(String.format(\"Pause reason:         %s\", spd.getReason()));",
          "185:             logger.println(String.format(\"Pause reason notes:   %s\", spd.getNotes()));",
          "186:             logger.println();",
          "187:         }",
          "188:     }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStep.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import java.util.Collection;",
          "5: import java.util.Collections;",
          "7: import org.jenkinsci.plugins.workflow.steps.Step;",
          "8: import org.jenkinsci.plugins.workflow.steps.StepContext;",
          "9: import org.jenkinsci.plugins.workflow.steps.StepExecution;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:     protected Run<?, ?> lastBuild;",
          "24:     protected void setLastBuild(Run<?, ?> lastBuild) {",
          "25:         this.lastBuild = lastBuild;",
          "26:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:     @SuppressFBWarnings(\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf1269e3ae7db93e65abe1ed2be5e3cf43f10b2d",
      "candidate_info": {
        "commit_hash": "bf1269e3ae7db93e65abe1ed2be5e3cf43f10b2d",
        "repo": "jenkinsci/fortify-on-demand-uploader-plugin",
        "commit_url": "https://github.com/jenkinsci/fortify-on-demand-uploader-plugin/commit/bf1269e3ae7db93e65abe1ed2be5e3cf43f10b2d",
        "files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/FodApiConnection.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/Utils.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/AuthenticationModel.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
        ],
        "message": "[D-313014] Added encryption f credentials",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java||src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/FodApiConnection.java||src/main/java/org/jenkinsci/plugins/fodupload/FodApiConnection.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/Utils.java||src/main/java/org/jenkinsci/plugins/fodupload/Utils.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/AuthenticationModel.java||src/main/java/org/jenkinsci/plugins/fodupload/models/AuthenticationModel.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java||src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java -> src/main/java/org/jenkinsci/plugins/fodupload/ApiConnectionFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:                     throw new IllegalArgumentException(\"Base URL is null.\");",
          "48:                 if (Utils.isNullOrEmpty(apiUrl))",
          "49:                     throw new IllegalArgumentException(\"Api URL is null.\");",
          "52:                         baseUrl,",
          "53:                         apiUrl,",
          "54:                         FodEnums.GrantType.PASSWORD,",
          "",
          "[Removed Lines]",
          "50:                 apiConnection = new FodApiConnection(model.getTenantId() + \"\\\\\" + model.getUsername(),",
          "51:                         model.getPersonalAccessToken(),",
          "",
          "[Added Lines]",
          "50:                 apiConnection = new FodApiConnection(Utils.decrypt(model.getTenantId()) + \"\\\\\" + Utils.decrypt(model.getUsername()),",
          "51:                         Utils.decrypt(model.getPersonalAccessToken()),",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/FodApiConnection.java||src/main/java/org/jenkinsci/plugins/fodupload/FodApiConnection.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/FodApiConnection.java -> src/main/java/org/jenkinsci/plugins/fodupload/FodApiConnection.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import com.google.gson.JsonObject;",
          "4: import com.google.gson.JsonParser;",
          "5: import hudson.ProxyConfiguration;",
          "7: import jenkins.model.Jenkins;",
          "8: import okhttp3.*;",
          "9: import org.apache.commons.io.IOUtils;",
          "",
          "[Removed Lines]",
          "6: import hudson.util.Secret;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     private String scope;",
          "33:     private String id;",
          "36:     private ProxyConfiguration proxy = null;",
          "",
          "[Removed Lines]",
          "34:     private Secret secret;",
          "",
          "[Added Lines]",
          "33:     private String secret;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:         this.id = id;",
          "47:         this.secret = secret;",
          "48:         this.baseUrl = baseUrl;",
          "",
          "[Removed Lines]",
          "45:     FodApiConnection(final String id, final Secret secret, final String baseUrl, final String apiUrl, final GrantType grantType, final String scope) {",
          "",
          "[Added Lines]",
          "44:     FodApiConnection(final String id, final String secret, final String baseUrl, final String apiUrl, final GrantType grantType, final String scope) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70:                     .add(\"scope\", scope)",
          "71:                     .add(\"grant_type\", \"client_credentials\")",
          "72:                     .add(\"client_id\", id)",
          "74:                     .build();",
          "75:         } else if (grantType == GrantType.PASSWORD) {",
          "76:             formBody = new FormBody.Builder()",
          "77:                     .add(\"scope\", scope)",
          "78:                     .add(\"grant_type\", \"password\")",
          "79:                     .add(\"username\", id)",
          "81:                     .build();",
          "82:         } else {",
          "83:             throw new IOException(\"Invalid Grant Type\");",
          "",
          "[Removed Lines]",
          "73:                     .add(\"client_secret\", Secret.toString(secret))",
          "80:                     .add(\"password\", Secret.toString(secret))",
          "",
          "[Added Lines]",
          "72:                     .add(\"client_secret\", secret)",
          "79:                     .add(\"password\", secret)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "159:         return id;",
          "160:     }",
          "163:         return secret;",
          "164:     }",
          "",
          "[Removed Lines]",
          "162:     public Secret getSecret() {",
          "",
          "[Added Lines]",
          "161:     public String getSecret() {",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java||src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java -> src/main/java/org/jenkinsci/plugins/fodupload/FodGlobalDescriptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     private String globalAuthType;",
          "29:     private String clientId;",
          "31:     private String username;",
          "33:     private String tenantId;",
          "34:     private String baseUrl;",
          "35:     private String apiUrl;",
          "",
          "[Removed Lines]",
          "30:     private Secret clientSecret;",
          "32:     private Secret personalAccessToken;",
          "",
          "[Added Lines]",
          "30:     private String clientSecret;",
          "32:     private String personalAccessToken;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:         if (globalAuthTypeObject.size() > 0) {",
          "46:             globalAuthType = globalAuthTypeObject.getString(\"value\");",
          "47:             if (globalAuthType.equals(\"apiKeyType\")) {",
          "50:             } else if (globalAuthType.equals(\"personalAccessTokenType\")) {",
          "54:             }",
          "55:         }",
          "56:         baseUrl = formData.getString(BASE_URL);",
          "",
          "[Removed Lines]",
          "48:                 clientId = globalAuthTypeObject.getString(CLIENT_ID);",
          "49:                 clientSecret = Secret.fromString(globalAuthTypeObject.getString(CLIENT_SECRET));",
          "51:                 username = globalAuthTypeObject.getString(USERNAME);",
          "52:                 personalAccessToken = Secret.fromString(globalAuthTypeObject.getString(PERSONAL_ACCESS_TOKEN));",
          "53:                 tenantId = globalAuthTypeObject.getString(TENANT_ID);",
          "",
          "[Added Lines]",
          "48:                 clientId = Utils.encrypt(globalAuthTypeObject.getString(CLIENT_ID));",
          "49:                 clientSecret = Utils.encrypt(globalAuthTypeObject.getString(CLIENT_SECRET));",
          "51:                 username = Utils.encrypt(globalAuthTypeObject.getString(USERNAME));",
          "52:                 personalAccessToken = Utils.encrypt(globalAuthTypeObject.getString(PERSONAL_ACCESS_TOKEN));",
          "53:                 tenantId = Utils.encrypt(globalAuthTypeObject.getString(TENANT_ID));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:     @SuppressWarnings(\"unused\")",
          "77:     public String getClientId() {",
          "79:     }",
          "81:     @SuppressWarnings(\"unused\")",
          "84:     }",
          "86:     @SuppressWarnings(\"unused\")",
          "87:     public String getUsername() {",
          "88:         return username;",
          "89:     }",
          "91:     @SuppressWarnings(\"unused\")",
          "94:     }",
          "96:     @SuppressWarnings(\"unused\")",
          "97:     public String getTenantId() {",
          "98:         return tenantId;",
          "99:     }",
          "",
          "[Removed Lines]",
          "78:         return clientId;",
          "82:     public Secret getClientSecret() {",
          "83:         return clientSecret;",
          "92:     public Secret getPersonalAccessToken() {",
          "93:         return personalAccessToken;",
          "",
          "[Added Lines]",
          "78:         return Utils.decrypt(clientId);",
          "81:     public String getOriginalClientId() {",
          "82:         return clientId;",
          "83:     }",
          "86:     public String getClientSecret() {",
          "87:         return Utils.decrypt(clientSecret);",
          "90:     public String getOriginalClientSecret() {",
          "91:         return clientSecret;",
          "92:     }",
          "96:         return Utils.decrypt(username);",
          "97:     }",
          "99:     @SuppressWarnings(\"unused\")",
          "100:     public String getOriginalUsername() {",
          "105:     public String getPersonalAccessToken() {",
          "106:         return Utils.decrypt(personalAccessToken);",
          "109:     @SuppressWarnings(\"unused\")",
          "110:     public String getOriginalPersonalAccessToken() {",
          "111:         return personalAccessToken;",
          "112:     }",
          "116:         return Utils.decrypt(tenantId);",
          "117:     }",
          "119:     @SuppressWarnings(\"unused\")",
          "120:     public String getOriginalTenantId() {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "119:     @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "120:     @POST",
          "121:     public FormValidation doTestApiKeyConnection(@QueryParameter(CLIENT_ID) final String clientId,",
          "123:                                                  @QueryParameter(BASE_URL) final String baseUrl,",
          "124:                                                  @QueryParameter(API_URL) final String apiUrl) {",
          "125:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "",
          "[Removed Lines]",
          "122:                                                  @QueryParameter(CLIENT_SECRET) final Secret clientSecret,",
          "",
          "[Added Lines]",
          "145:                                                  @QueryParameter(CLIENT_SECRET) final String clientSecret,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "130:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "131:         if (Utils.isNullOrEmpty(clientId))",
          "132:             return FormValidation.error(\"API Key is empty!\");",
          "134:             return FormValidation.error(\"Secret Key is empty!\");",
          "135:         testApi = new FodApiConnection(clientId, clientSecret, baseUrl, apiUrl, GrantType.CLIENT_CREDENTIALS, \"api-tenant\");",
          "136:         return testConnection(testApi);",
          "",
          "[Removed Lines]",
          "133:         if (Utils.isNullOrEmpty(Secret.toString(clientSecret)))",
          "",
          "[Added Lines]",
          "156:         if (Utils.isNullOrEmpty(clientSecret))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "140:     @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "141:     @POST",
          "142:     public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(USERNAME) final String username,",
          "144:                                                               @QueryParameter(TENANT_ID) final String tenantId,",
          "145:                                                               @QueryParameter(BASE_URL) final String baseUrl,",
          "146:                                                               @QueryParameter(API_URL) final String apiUrl) {",
          "",
          "[Removed Lines]",
          "143:                                                               @QueryParameter(PERSONAL_ACCESS_TOKEN) final Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "166:                                                               @QueryParameter(PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "152:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "153:         if (Utils.isNullOrEmpty(username))",
          "154:             return FormValidation.error(\"Username is empty!\");",
          "156:             return FormValidation.error(\"Personal Access Token is empty!\");",
          "157:         if (Utils.isNullOrEmpty(tenantId))",
          "158:             return FormValidation.error(\"Tenant ID is null.\");",
          "",
          "[Removed Lines]",
          "155:         if (Utils.isNullOrEmpty(Secret.toString(personalAccessToken)))",
          "",
          "[Added Lines]",
          "178:         if (Utils.isNullOrEmpty(personalAccessToken))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "173:             if (globalAuthType.equals(\"apiKeyType\")) {",
          "174:                 if (Utils.isNullOrEmpty(clientId))",
          "175:                     throw new IllegalArgumentException(\"Client ID is null.\");",
          "177:                     throw new IllegalArgumentException(\"Client Secret is null.\");",
          "179:             } else if (globalAuthType.equals(\"personalAccessTokenType\")) {",
          "180:                 if (Utils.isNullOrEmpty(username))",
          "181:                     throw new IllegalArgumentException(\"Username is null.\");",
          "183:                     throw new IllegalArgumentException(\"Personal Access Token is null.\");",
          "184:                 if (Utils.isNullOrEmpty(tenantId))",
          "185:                     throw new IllegalArgumentException(\"Tenant ID is null.\");",
          "187:             } else {",
          "188:                 throw new IllegalArgumentException(\"Invalid authentication type\");",
          "189:             }",
          "",
          "[Removed Lines]",
          "176:                 if (Utils.isNullOrEmpty(Secret.toString(clientSecret)))",
          "178:                 return new FodApiConnection(clientId, clientSecret, baseUrl, apiUrl, GrantType.CLIENT_CREDENTIALS, \"api-tenant\");",
          "182:                 if (Utils.isNullOrEmpty(Secret.toString(personalAccessToken)))",
          "186:                 return new FodApiConnection(tenantId + \"\\\\\" + username, personalAccessToken, baseUrl, apiUrl, GrantType.PASSWORD, \"api-tenant\");",
          "",
          "[Added Lines]",
          "199:                 if (Utils.isNullOrEmpty(clientSecret))",
          "201:                 return new FodApiConnection(Utils.decrypt(clientId), Utils.decrypt(clientSecret), baseUrl, apiUrl, GrantType.CLIENT_CREDENTIALS, \"api-tenant\");",
          "205:                 if (Utils.isNullOrEmpty(personalAccessToken))",
          "209:                 return new FodApiConnection(Utils.decrypt(tenantId) + \"\\\\\" + Utils.decrypt(username), Utils.decrypt(personalAccessToken), baseUrl, apiUrl, GrantType.PASSWORD, \"api-tenant\");",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/PollingBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: import hudson.tasks.Recorder;",
          "17: import hudson.util.FormValidation;",
          "18: import hudson.util.ListBoxModel;",
          "20: import jenkins.model.GlobalConfiguration;",
          "21: import jenkins.tasks.SimpleBuildStep;",
          "22: import org.jenkinsci.plugins.fodupload.polling.PollReleaseStatusResult;",
          "",
          "[Removed Lines]",
          "19: import hudson.util.Secret;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:                             int pollingInterval,",
          "48:                             int policyFailureBuildResultPreference,",
          "49:                             String clientId,",
          "51:                             String username,",
          "53:                             String tenantId) {",
          "55:         sharedBuildStep = new SharedPollingBuildStep(bsiToken,",
          "",
          "[Removed Lines]",
          "50:                             Secret clientSecret,",
          "52:                             Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "49:                             String clientSecret,",
          "51:                             String personalAccessToken,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "94:     }",
          "96:     @SuppressWarnings(\"unused\")",
          "98:         return sharedBuildStep.getAuthModel().getPersonalAccessToken();",
          "99:     }",
          "",
          "[Removed Lines]",
          "97:     public Secret getPersonalAccessToken() {",
          "",
          "[Added Lines]",
          "96:     public String getPersonalAccessToken() {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "151:         @POST",
          "152:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(USERNAME) final String username,",
          "154:                                                                   @QueryParameter(TENANT_ID) final String tenantId) {",
          "155:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "156:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "",
          "[Removed Lines]",
          "153:                                                                   @QueryParameter(PERSONAL_ACCESS_TOKEN) final Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "152:                                                                   @QueryParameter(PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: import hudson.model.TaskListener;",
          "11: import hudson.util.FormValidation;",
          "12: import hudson.util.ListBoxModel;",
          "14: import jenkins.model.GlobalConfiguration;",
          "15: import org.jenkinsci.plugins.fodupload.models.AuthenticationModel;",
          "16: import org.jenkinsci.plugins.fodupload.models.FodEnums;",
          "",
          "[Removed Lines]",
          "13: import hudson.util.Secret;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:                                   int pollingInterval,",
          "43:                                   int policyFailureBuildResultPreference,",
          "44:                                   String clientId,",
          "46:                                   String username,",
          "48:                                   String tenantId) {",
          "50:         this.bsiToken = bsiToken;",
          "51:         this.pollingInterval = pollingInterval;",
          "52:         this.policyFailureBuildResultPreference = policyFailureBuildResultPreference;",
          "53:         authModel = new AuthenticationModel(overrideGlobalConfig,",
          "54:                 username,",
          "55:                 personalAccessToken,",
          "",
          "[Removed Lines]",
          "45:                                   Secret clientSecret,",
          "47:                                   Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "44:                                   String clientSecret,",
          "46:                                   String personalAccessToken,",
          "52:         username = Utils.encrypt(username);",
          "53:         personalAccessToken = Utils.encrypt(personalAccessToken);",
          "54:         tenantId = Utils.encrypt(tenantId);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "90:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
          "92:                                                                      final String tenantId) {",
          "93:         FodApiConnection testApi;",
          "94:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
          "",
          "[Removed Lines]",
          "91:                                                                      final Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "93:                                                                      final String personalAccessToken,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "99:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "100:         if (Utils.isNullOrEmpty(username))",
          "101:             return FormValidation.error(\"Username is empty!\");",
          "103:             return FormValidation.error(\"Personal Access Token is empty!\");",
          "104:         if (Utils.isNullOrEmpty(tenantId))",
          "105:             return FormValidation.error(\"Tenant ID is null.\");",
          "",
          "[Removed Lines]",
          "102:         if (Utils.isNullOrEmpty(Secret.toString(personalAccessToken)))",
          "",
          "[Added Lines]",
          "104:         if (Utils.isNullOrEmpty(personalAccessToken))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "117:         return items;",
          "118:     }",
          "120:     public void perform(Run<?, ?> run,",
          "121:                         FilePath filePath,",
          "122:                         Launcher launcher,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "125:         final PrintStream logger = taskListener.getLogger();",
          "127:         Result currentResult = run.getResult();",
          "128:         if (Result.FAILURE.equals(currentResult)",
          "129:                 || Result.ABORTED.equals(currentResult)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132:         if(authModel != null)",
          "133:         {",
          "134:             if(authModel.getOverrideGlobalConfig() == true){",
          "135:                 if(!Utils.isEncrypted(authModel.getPersonalAccessToken()) ||",
          "136:                    !Utils.isEncrypted(authModel.getUsername()) ||",
          "137:                    !Utils.isEncrypted(authModel.getTenantId()))",
          "138:                 {",
          "139:                     run.setResult(Result.FAILURE);",
          "140:                     logger.println(\"Credentials saved in plaintext. Please resave to encrypt before starting scan.\");",
          "141:                     return ;",
          "142:                 }",
          "143:             }",
          "144:             else",
          "145:             {",
          "146:                 if(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getAuthTypeIsApiKey())",
          "147:                 {",
          "148:                     if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientId()) ||",
          "149:                        !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientSecret()))",
          "150:                     {",
          "151:                         run.setResult(Result.FAILURE);",
          "152:                         logger.println(\"Credentials saved in plaintext. Please resave to encrypt before starting scan.\");",
          "153:                         return ;",
          "154:                     }",
          "155:                 }",
          "156:                 else",
          "157:                 {",
          "158:                      if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalTenantId()) ||",
          "159:                         !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalUsername()) ||",
          "160:                         !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalPersonalAccessToken()) )",
          "161:                     {",
          "162:                         run.setResult(Result.FAILURE);",
          "163:                         logger.println(\"Credentials saved in plaintext. Please resave to encrypt before starting scan.\");",
          "164:                         return ;",
          "165:                     }",
          "166:                 }",
          "167:             }",
          "168:         }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "201:     }",
          "203:     public AuthenticationModel getAuthModel() {",
          "205:     }",
          "207:     public enum PolicyFailureBuildResultPreference {",
          "",
          "[Removed Lines]",
          "204:         return authModel;",
          "",
          "[Added Lines]",
          "247:         AuthenticationModel displayModel = new AuthenticationModel(authModel.getOverrideGlobalConfig(),",
          "248:                                                                    Utils.decrypt(authModel.getUsername()),",
          "249:                                                                    Utils.decrypt(authModel.getPersonalAccessToken()),",
          "250:                                                                    Utils.decrypt(authModel.getTenantId()) );",
          "252:         return displayModel;",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:     public static final ThreadLocal<TaskListener> taskListener = new ThreadLocal<>();",
          "25:     public static final String CLIENT_ID = \"clientId\";",
          "27:     public static final String USERNAME = \"username\";",
          "28:     public static final String PERSONAL_ACCESS_TOKEN = \"personalAccessToken\";",
          "29:     public static final String TENANT_ID = \"tenantId\";",
          "",
          "[Removed Lines]",
          "26:     public static final Secret CLIENT_SECRET = Secret.fromString(\"clientSecret\");",
          "",
          "[Added Lines]",
          "26:     public static final String CLIENT_SECRET = \"clientSecret\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     public SharedUploadBuildStep(String bsiToken,",
          "35:                                  boolean overrideGlobalConfig,",
          "36:                                  String username,",
          "38:                                  String tenantId,",
          "39:                                  boolean purchaseEntitlements,",
          "40:                                  String entitlementPreference,",
          "",
          "[Removed Lines]",
          "37:                                  Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "37:                                  String personalAccessToken,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:                 remediationScanPreferenceType,",
          "50:                 inProgressScanActionType);",
          "52:         authModel = new AuthenticationModel(overrideGlobalConfig,",
          "53:                 username,",
          "54:                 personalAccessToken,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:         username = Utils.encrypt(username);",
          "53:         personalAccessToken = Utils.encrypt(personalAccessToken);",
          "54:         tenantId = Utils.encrypt(tenantId);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "74:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "75:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
          "77:                                                                      final String tenantId) {",
          "78:         FodApiConnection testApi;",
          "79:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
          "",
          "[Removed Lines]",
          "76:                                                                      final Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "80:                                                                      final String personalAccessToken,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "84:             return FormValidation.error(\"Fortify on Demand API URL is empty!\");",
          "85:         if (Utils.isNullOrEmpty(username))",
          "86:             return FormValidation.error(\"Username is empty!\");",
          "88:             return FormValidation.error(\"Personal Access Token is empty!\");",
          "89:         if (Utils.isNullOrEmpty(tenantId))",
          "90:             return FormValidation.error(\"Tenant ID is null.\");",
          "",
          "[Removed Lines]",
          "87:         if (Utils.isNullOrEmpty(Secret.toString(personalAccessToken)))",
          "",
          "[Added Lines]",
          "91:         if (Utils.isNullOrEmpty(personalAccessToken))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "130:             build.setResult(Result.FAILURE);",
          "131:             return false;",
          "132:         }",
          "133:         return true;",
          "134:     }",
          "136:     public void perform(Run<?, ?> build, FilePath workspace,",
          "137:                         Launcher launcher, TaskListener listener) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "141:         try {",
          "142:             taskListener.set(listener);",
          "144:             Result currentResult = build.getResult();",
          "145:             if (Result.FAILURE.equals(currentResult)",
          "146:                     || Result.ABORTED.equals(currentResult)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:             if(authModel != null)",
          "152:             {",
          "153:                 if(authModel.getOverrideGlobalConfig() == true){",
          "154:                     if(!Utils.isEncrypted(authModel.getPersonalAccessToken()) ||",
          "155:                        !Utils.isEncrypted(authModel.getUsername()) ||",
          "156:                        !Utils.isEncrypted(authModel.getTenantId()))",
          "157:                     {",
          "158:                         build.setResult(Result.FAILURE);",
          "159:                         logger.println(\"Credentials saved in plaintext. Please resave to encrypt before starting scan.\");",
          "160:                         return ;",
          "161:                     }",
          "162:                 }",
          "163:                 else",
          "164:                 {",
          "165:                     if(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getAuthTypeIsApiKey())",
          "166:                     {",
          "167:                         if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientId()) ||",
          "168:                            !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalClientSecret()))",
          "169:                         {",
          "170:                             build.setResult(Result.FAILURE);",
          "171:                             logger.println(\"Credentials saved in plaintext. Please resave to encrypt before starting scan.\");",
          "172:                             return ;",
          "173:                         }",
          "174:                     }",
          "175:                     else",
          "176:                     {",
          "177:                          if(!Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalTenantId()) ||",
          "178:                             !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalUsername()) ||",
          "179:                             !Utils.isEncrypted(GlobalConfiguration.all().get(FodGlobalDescriptor.class).getOriginalPersonalAccessToken()) )",
          "180:                         {",
          "181:                             build.setResult(Result.FAILURE);",
          "182:                             logger.println(\"Credentials saved in plaintext. Please resave to encrypt before starting scan.\");",
          "183:                             return ;",
          "184:                         }",
          "185:                     }",
          "186:                 }",
          "187:             }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "215:     }",
          "217:     public AuthenticationModel getAuthModel() {",
          "219:     }",
          "221:     public JobModel getModel() {",
          "",
          "[Removed Lines]",
          "218:         return authModel;",
          "",
          "[Added Lines]",
          "261:         AuthenticationModel displayModel = new AuthenticationModel(authModel.getOverrideGlobalConfig(),",
          "262:                                                                    Utils.decrypt(authModel.getUsername()),",
          "263:                                                                    Utils.decrypt(authModel.getPersonalAccessToken()),",
          "264:                                                                    Utils.decrypt(authModel.getTenantId()) );",
          "266:         return displayModel;",
          "267:     }",
          "269:     public AuthenticationModel setAuthModel(AuthenticationModel newAuthModel) {",
          "270:         return authModel = newAuthModel;",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: import hudson.tasks.Recorder;",
          "16: import hudson.util.FormValidation;",
          "17: import hudson.util.ListBoxModel;",
          "19: import jenkins.tasks.SimpleBuildStep;",
          "20: import org.jenkinsci.plugins.fodupload.models.JobModel;",
          "21: import org.kohsuke.stapler.DataBoundConstructor;",
          "",
          "[Removed Lines]",
          "18: import hudson.util.Secret;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     public StaticAssessmentBuildStep(String bsiToken,",
          "46:                                      boolean overrideGlobalConfig,",
          "47:                                      String username,",
          "49:                                      String tenantId,",
          "50:                                      boolean purchaseEntitlements,",
          "51:                                      String entitlementPreference,",
          "",
          "[Removed Lines]",
          "48:                                      Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "47:                                      String personalAccessToken,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:     }",
          "110:     @SuppressWarnings(\"unused\")",
          "112:         return sharedBuildStep.getAuthModel().getPersonalAccessToken();",
          "113:     }",
          "",
          "[Removed Lines]",
          "111:     public Secret getPersonalAccessToken() {",
          "",
          "[Added Lines]",
          "110:     public String getPersonalAccessToken() {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "182:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "183:         @POST",
          "184:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final String username,",
          "186:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId) {",
          "187:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "188:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "",
          "[Removed Lines]",
          "185:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "184:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/Utils.java||src/main/java/org/jenkinsci/plugins/fodupload/Utils.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/Utils.java -> src/main/java/org/jenkinsci/plugins/fodupload/Utils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jenkinsci.plugins.fodupload;",
          "3: import hudson.FilePath;",
          "5: import java.io.File;",
          "6: import java.io.FileOutputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import hudson.util.Secret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:         logger.println(\"End Create Zip.\");",
          "114:         return tempZip;",
          "115:     }",
          "116: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:     public static String decrypt(String stringToDecrypt){",
          "119:         Secret decryptedSecret = Secret.decrypt(stringToDecrypt);",
          "120:         return  decryptedSecret != null ?  decryptedSecret.getPlainText() : stringToDecrypt;",
          "121:     }",
          "123:     public static String encrypt(String stringToEncrypt){",
          "124:         String result = stringToEncrypt;",
          "125:         if(Secret.decrypt(stringToEncrypt) == null){",
          "126:             result = Secret.fromString(stringToEncrypt).getEncryptedValue();",
          "127:         }",
          "128:         return result;",
          "129:     }",
          "131:     public static boolean isEncrypted(String stringToEncrypt){",
          "132:         return (Secret.decrypt(stringToEncrypt) != null);",
          "133:     }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/models/AuthenticationModel.java||src/main/java/org/jenkinsci/plugins/fodupload/models/AuthenticationModel.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/models/AuthenticationModel.java -> src/main/java/org/jenkinsci/plugins/fodupload/models/AuthenticationModel.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jenkinsci.plugins.fodupload.models;",
          "5: public class AuthenticationModel {",
          "6:     private boolean overrideGlobalConfig;",
          "7:     private String username;",
          "9:     private String tenantId;",
          "11:     public AuthenticationModel(boolean overrideGlobalConfig,",
          "12:                                String username,",
          "14:                                String tenantId) {",
          "15:         this.overrideGlobalConfig = overrideGlobalConfig;",
          "16:         this.username = username;",
          "",
          "[Removed Lines]",
          "3: import hudson.util.Secret;",
          "8:     private Secret personalAccessToken;",
          "13:                                Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "6:     private String personalAccessToken;",
          "11:                                String personalAccessToken,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         return username;",
          "27:     }",
          "30:         return personalAccessToken;",
          "31:     }",
          "33:     public String getTenantId() {",
          "34:         return tenantId;",
          "35:     }",
          "36: }",
          "",
          "[Removed Lines]",
          "29:     public Secret getPersonalAccessToken() {",
          "",
          "[Added Lines]",
          "27:     public String getPersonalAccessToken() {",
          "35:      public void setUsername(String newUsername) {",
          "36:        username = newUsername;",
          "37:     }",
          "39:     public void setPersonalAccessToken(String newPersonalAccessToken) {",
          "40:         personalAccessToken = newPersonalAccessToken;",
          "41:     }",
          "43:     public void setTenantId(String newTenantId) {",
          "44:        tenantId = newTenantId;",
          "45:     }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import hudson.model.TaskListener;",
          "12: import hudson.util.FormValidation;",
          "13: import hudson.util.ListBoxModel;",
          "16: import org.jenkinsci.plugins.fodupload.SharedPollingBuildStep;",
          "17: import org.jenkinsci.plugins.workflow.steps.StepContext;",
          "18: import org.jenkinsci.plugins.workflow.steps.StepDescriptor;",
          "",
          "[Removed Lines]",
          "14: import hudson.util.Secret;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     private boolean overrideGlobalConfig;",
          "35:     private int policyFailureBuildResultPreference;",
          "36:     private String clientId;",
          "38:     private String username;",
          "40:     private String tenantId;",
          "42:     private SharedPollingBuildStep commonBuildStep;",
          "",
          "[Removed Lines]",
          "37:     private Secret clientSecret;",
          "39:     private Secret personalAccessToken;",
          "",
          "[Added Lines]",
          "35:     private String clientSecret;",
          "37:     private String personalAccessToken;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:         this.clientId = clientId;",
          "84:     }",
          "87:         return clientSecret;",
          "88:     }",
          "90:     @DataBoundSetter",
          "92:         this.clientSecret = clientSecret;",
          "93:     }",
          "",
          "[Removed Lines]",
          "86:     public Secret getClientSecret() {",
          "91:     public void setClientSecret(Secret clientSecret) {",
          "",
          "[Added Lines]",
          "84:     public String getClientSecret() {",
          "89:     public void setClientSecret(String clientSecret) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "101:         this.username = username;",
          "102:     }",
          "105:         return personalAccessToken;",
          "106:     }",
          "108:     @DataBoundSetter",
          "110:         this.personalAccessToken = personalAccessToken;",
          "111:     }",
          "",
          "[Removed Lines]",
          "104:     public Secret getPersonalAccessToken() {",
          "109:     public void setPersonalAccessToken(Secret personalAccessToken) {",
          "",
          "[Added Lines]",
          "102:     public String getPersonalAccessToken() {",
          "107:     public void setPersonalAccessToken(String personalAccessToken) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "179:         @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "180:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "181:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedPollingBuildStep.USERNAME) final String username,",
          "183:                                                                   @QueryParameter(SharedPollingBuildStep.TENANT_ID) final String tenantId) {",
          "184:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "",
          "[Removed Lines]",
          "182:                                                                   @QueryParameter(SharedPollingBuildStep.PERSONAL_ACCESS_TOKEN) final Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "180:                                                                   @QueryParameter(SharedPollingBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import hudson.model.TaskListener;",
          "12: import hudson.util.FormValidation;",
          "13: import hudson.util.ListBoxModel;",
          "16: import org.jenkinsci.plugins.fodupload.SharedUploadBuildStep;",
          "17: import org.jenkinsci.plugins.workflow.steps.StepContext;",
          "18: import org.jenkinsci.plugins.workflow.steps.StepDescriptor;",
          "",
          "[Removed Lines]",
          "14: import hudson.util.Secret;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:     private boolean overrideGlobalConfig;",
          "36:     private String username;",
          "38:     private String tenantId;",
          "39:     private boolean purchaseEntitlements;",
          "40:     private String entitlementPreference;",
          "",
          "[Removed Lines]",
          "37:     private Secret personalAccessToken;",
          "",
          "[Added Lines]",
          "35:     private String personalAccessToken;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72:         this.username = username;",
          "73:     }",
          "76:         return personalAccessToken;",
          "77:     }",
          "79:     @DataBoundSetter",
          "81:         this.personalAccessToken = personalAccessToken;",
          "82:     }",
          "",
          "[Removed Lines]",
          "75:     public Secret getPersonalAccessToken() {",
          "80:     public void setPersonalAccessToken(Secret personalAccessToken) {",
          "",
          "[Added Lines]",
          "73:     public String getPersonalAccessToken() {",
          "78:     public void setPersonalAccessToken(String personalAccessToken) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "197:         @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "198:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "199:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final String username,",
          "201:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId) {",
          "202:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "",
          "[Removed Lines]",
          "200:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final Secret personalAccessToken,",
          "",
          "[Added Lines]",
          "198:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "849badb36843254e2b072b0c09c891cc520fb465",
      "candidate_info": {
        "commit_hash": "849badb36843254e2b072b0c09c891cc520fb465",
        "repo": "jenkinsci/fortify-on-demand-uploader-plugin",
        "commit_url": "https://github.com/jenkinsci/fortify-on-demand-uploader-plugin/commit/849badb36843254e2b072b0c09c891cc520fb465",
        "files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/FodEnums.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/JobModel.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly"
        ],
        "message": "[RefactorForRelease40] Refactored enums out of UI (#18)\n\n* [RefactorForRelease40] Refactoring to put hard codes in one location.\n\n* [RefactoringForRelease] Removing unused code.\n\n* [RefactorForRelease40] More code clean up\n\n* Adding default value to the enum.",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/FodEnums.java||src/main/java/org/jenkinsci/plugins/fodupload/models/FodEnums.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/models/JobModel.java||src/main/java/org/jenkinsci/plugins/fodupload/models/JobModel.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:         return items;",
          "103:     }",
          "105:     public boolean prebuild(AbstractBuild<?, ?> build, BuildListener listener) {",
          "106:         final PrintStream logger = listener.getLogger();",
          "107:         if (model == null) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:     @SuppressWarnings(\"unused\")",
          "106:     public static ListBoxModel doFillRemediationScanPreferenceTypeItems() {",
          "107:         ListBoxModel items = new ListBoxModel();",
          "108:         for (FodEnums.RemediationScanPreferenceType remediationType : FodEnums.RemediationScanPreferenceType.values()) {",
          "109:             items.add(new ListBoxModel.Option(remediationType.toString(), String.valueOf(remediationType.toString())));",
          "110:         }",
          "111:         return items;",
          "112:     }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:         return sharedBuildStep.getModel().getSrcLocation();",
          "137:     }",
          "144:     @SuppressWarnings(\"unused\")",
          "145:     public String getRemediationScanPreferenceType() {",
          "146:         return sharedBuildStep.getModel().getRemediationScanPreferenceType();",
          "",
          "[Removed Lines]",
          "139:     @SuppressWarnings(\"unused\")",
          "140:     public int getInProgressScanActionOption() {",
          "141:         return sharedBuildStep.getModel().getInProgressScanActionOption();",
          "142:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:             return SharedUploadBuildStep.doFillEntitlementPreferenceItems();",
          "198:         }",
          "201:     }",
          "202: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:         @SuppressWarnings(\"unused\")",
          "196:         public ListBoxModel doFillRemediationScanPreferenceTypeItems() {",
          "197:             return SharedUploadBuildStep.doFillRemediationScanPreferenceTypeItems();",
          "198:         }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/models/FodEnums.java||src/main/java/org/jenkinsci/plugins/fodupload/models/FodEnums.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/models/FodEnums.java -> src/main/java/org/jenkinsci/plugins/fodupload/models/FodEnums.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:             }",
          "86:         }",
          "87:     }",
          "88: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:     public enum RemediationScanPreferenceType {",
          "90:         NonRemediationScanOnly(3),",
          "91:         RemediationScanOnly(2),",
          "92:         RemediationScanIfAvailable(1);",
          "94:         private final int _val;",
          "96:         RemediationScanPreferenceType(int val) {",
          "97:             this._val = val;",
          "98:         }",
          "100:         public static RemediationScanPreferenceType fromInt(int val) {",
          "101:             switch (val) {",
          "102:                 case 3:",
          "103:                     return NonRemediationScanOnly;",
          "104:                 case 2:",
          "105:                     return RemediationScanOnly;",
          "106:                 case 1:",
          "107:                 default:",
          "108:                     return RemediationScanIfAvailable;",
          "109:             }",
          "110:         }",
          "112:         public int getValue() {",
          "113:             return this._val;",
          "114:         }",
          "116:         public String toString() {",
          "117:             switch (this._val) {",
          "118:                 case 3:",
          "119:                     return \"NonRemediationScanOnly\";",
          "120:                 case 2:",
          "121:                     return \"RemediationScanOnly\";",
          "122:                 case 1:",
          "123:                 default:",
          "124:                     return \"RemediationScanIfAvailable\";",
          "125:             }",
          "126:         }",
          "127:     }",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/models/JobModel.java||src/main/java/org/jenkinsci/plugins/fodupload/models/JobModel.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/models/JobModel.java -> src/main/java/org/jenkinsci/plugins/fodupload/models/JobModel.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     private boolean purchaseEntitlements;",
          "22:     private String entitlementPreference;",
          "23:     private String srcLocation;",
          "25:     private String remediationScanPreferenceType;",
          "26:     private String inProgressScanActionType;",
          "",
          "[Removed Lines]",
          "24:     private int inProgressScanActionOption;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:         return srcLocation;",
          "81:     }",
          "87:     public String getRemediationScanPreferenceType() {",
          "88:         return remediationScanPreferenceType;",
          "89:     }",
          "",
          "[Removed Lines]",
          "83:     public int getInProgressScanActionOption() {",
          "84:         return inProgressScanActionOption;",
          "85:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:             return SharedUploadBuildStep.doFillEntitlementPreferenceItems();",
          "207:         }",
          "209:     }",
          "211:     private static class Execution extends SynchronousNonBlockingStepExecution<Void> {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209:         @SuppressWarnings(\"unused\")",
          "210:         public ListBoxModel doFillRemediationScanPreferenceTypeItems() {",
          "211:             return SharedUploadBuildStep.doFillRemediationScanPreferenceTypeItems();",
          "212:         }",
          "",
          "---------------"
        ],
        "src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly||src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly": [
          "File: src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly -> src/main/resources/org/jenkinsci/plugins/fodupload/StaticAssessmentBuildStep/config.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:             <f:checkbox/>",
          "35:         </f:entry>",
          "36:         <f:entry title=\"Remediation Preference\" field=\"remediationScanPreferenceType\">",
          "42:         </f:entry>",
          "43:     </f:section>",
          "45:     <f:section title=\"Scan Options\">",
          "46:         <f:entry title=\"Action when scan is in progress\" field=\"inProgressScanActionType\">",
          "47:             <select name=\"inProgressScanActionType\">",
          "48:                 <option value=\"DoNotStartScan\">Do Not Start Scan</option>",
          "49:                 <option value=\"CancelInProgressScan\">Cancel Scan Then Start</option>",
          "50:             </select>",
          "",
          "[Removed Lines]",
          "37:             <select name=\"remediationScanPreferenceType\">",
          "38:                 <option value=\"RemediationScanIfAvailable\">Remediate Scan If Available</option>",
          "39:                 <option value=\"RemediationScanOnly\">Remediation Scan Only</option>",
          "40:                 <option value=\"NonRemediationScanOnly\">Non-Remediation Scan Only</option>",
          "41:             </select>",
          "",
          "[Added Lines]",
          "37:             <f:select style=\"width: 160px;\"/>",
          "44:                 <option value=\"\">Please Select</option>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0142c9595be6a2e231f5795f5e2ed2981589834",
      "candidate_info": {
        "commit_hash": "a0142c9595be6a2e231f5795f5e2ed2981589834",
        "repo": "jenkinsci/fortify-on-demand-uploader-plugin",
        "commit_url": "https://github.com/jenkinsci/fortify-on-demand-uploader-plugin/commit/a0142c9595be6a2e231f5795f5e2ed2981589834",
        "files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
        ],
        "message": "add @POST and admin permission check to methods",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
            "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedPollingBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import hudson.util.ListBoxModel;",
          "26: import jenkins.model.GlobalConfiguration;",
          "27: import jenkins.model.Jenkins;",
          "29: public class SharedPollingBuildStep {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.kohsuke.stapler.verb.POST;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "95:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
          "96:                                                                      final String personalAccessToken,",
          "97:                                                                      final String tenantId) {",
          "98:         FodApiConnection testApi;",
          "99:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
          "100:         String apiUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getApiUrl();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:     @POST",
          "100:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java||src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java -> src/main/java/org/jenkinsci/plugins/fodupload/SharedUploadBuildStep.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import hudson.util.ListBoxModel;",
          "28: import jenkins.model.GlobalConfiguration;",
          "29: import jenkins.model.Jenkins;",
          "31: public class SharedUploadBuildStep {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import org.kohsuke.stapler.verb.POST;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:     }",
          "83:     @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "84:     public static FormValidation doTestPersonalAccessTokenConnection(final String username,",
          "85:                                                                      final String personalAccessToken,",
          "86:                                                                      final String tenantId) {",
          "87:         FodApiConnection testApi;",
          "88:         String baseUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getBaseUrl();",
          "89:         String apiUrl = GlobalConfiguration.all().get(FodGlobalDescriptor.class).getApiUrl();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:     @POST",
          "89:         Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyPollResults.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import com.google.common.collect.ImmutableSet;",
          "9: import org.jenkinsci.plugins.fodupload.SharedPollingBuildStep;",
          "10: import org.jenkinsci.plugins.workflow.steps.StepContext;",
          "11: import org.jenkinsci.plugins.workflow.steps.StepDescriptor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26: import hudson.util.FormValidation;",
          "27: import hudson.util.ListBoxModel;",
          "28: import hudson.util.Secret;",
          "30: @SuppressFBWarnings(\"unused\")",
          "31: public class FortifyPollResults extends FortifyStep {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import org.kohsuke.stapler.verb.POST;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183:         @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "184:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "185:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedPollingBuildStep.USERNAME) final String username,",
          "186:                                                                   @QueryParameter(SharedPollingBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "187:                                                                   @QueryParameter(SharedPollingBuildStep.TENANT_ID) final String tenantId) {",
          "188:             return SharedPollingBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "190:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:         @POST",
          "191:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java||src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java": [
          "File: src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java -> src/main/java/org/jenkinsci/plugins/fodupload/steps/FortifyStaticAssessment.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import com.google.common.collect.ImmutableSet;",
          "8: import org.jenkinsci.plugins.fodupload.SharedUploadBuildStep;",
          "9: import org.jenkinsci.plugins.workflow.steps.StepContext;",
          "10: import org.jenkinsci.plugins.workflow.steps.StepDescriptor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: import hudson.util.FormValidation;",
          "26: import hudson.util.ListBoxModel;",
          "27: import hudson.util.Secret;",
          "30: @SuppressFBWarnings(\"unused\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import org.kohsuke.stapler.verb.POST;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "201:         @SuppressWarnings({\"ThrowableResultOfMethodCallIgnored\", \"unused\"})",
          "202:         @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")",
          "203:         public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final String username,",
          "204:                                                                   @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken,",
          "205:                                                                   @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId) {",
          "206:             return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);",
          "208:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:         @POST",
          "209:             Jenkins.get().checkPermission(Jenkins.ADMINISTER);",
          "",
          "---------------"
        ]
      }
    }
  ]
}