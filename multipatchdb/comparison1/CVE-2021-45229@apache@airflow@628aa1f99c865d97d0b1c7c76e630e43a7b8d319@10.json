{
  "cve_id": "CVE-2021-45229",
  "cve_desc": "It was discovered that the \"Trigger DAG with config\" screen was susceptible to XSS attacks via the `origin` query argument. This issue affects Apache Airflow versions 2.2.3 and below.",
  "repo": "apache/airflow",
  "patch_hash": "628aa1f99c865d97d0b1c7c76e630e43a7b8d319",
  "patch_info": {
    "commit_hash": "628aa1f99c865d97d0b1c7c76e630e43a7b8d319",
    "repo": "apache/airflow",
    "commit_url": "https://github.com/apache/airflow/commit/628aa1f99c865d97d0b1c7c76e630e43a7b8d319",
    "files": [
      "airflow/www/templates/airflow/trigger.html",
      "tests/www/views/test_views_trigger_dag.py"
    ],
    "message": "Simplify trigger cancel button (#21591)\n\nCo-authored-by: Jed Cunningham <jedcunningham@apache.org>\n(cherry picked from commit 65297673a318660fba76797e50d0c06804dfcafc)",
    "before_after_code_files": [
      "airflow/www/templates/airflow/trigger.html||airflow/www/templates/airflow/trigger.html",
      "tests/www/views/test_views_trigger_dag.py||tests/www/views/test_views_trigger_dag.py"
    ]
  },
  "patch_diff": {
    "airflow/www/templates/airflow/trigger.html||airflow/www/templates/airflow/trigger.html": [
      "File: airflow/www/templates/airflow/trigger.html -> airflow/www/templates/airflow/trigger.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "63:       </label>",
      "64:     </div>",
      "65:     <button type=\"submit\" class=\"btn btn-primary\">Trigger</button>",
      "67:   </form>",
      "68: {% endblock %}",
      "",
      "[Removed Lines]",
      "66:     <button type=\"button\" class=\"btn\" onclick=\"location.href = '{{ origin }}'; return false\">Cancel</button>",
      "",
      "[Added Lines]",
      "66:     <a class=\"btn\" href=\"{{ origin }}\">Cancel</a>",
      "",
      "---------------"
    ],
    "tests/www/views/test_views_trigger_dag.py||tests/www/views/test_views_trigger_dag.py": [
      "File: tests/www/views/test_views_trigger_dag.py -> tests/www/views/test_views_trigger_dag.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "133:         (\"javascript:alert(1)\", \"/home\"),",
      "134:         (\"http://google.com\", \"/home\"),",
      "135:         (\"36539'%3balert(1)%2f%2f166\", \"/home\"),",
      "136:         (",
      "137:             \"%2Ftree%3Fdag_id%3Dexample_bash_operator';alert(33)//\",",
      "138:             \"/home\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "136:         (",
      "137:             '\"><script>alert(99)</script><a href=\"',",
      "138:             \"&#34;&gt;&lt;script&gt;alert(99)&lt;/script&gt;&lt;a href=&#34;\",",
      "139:         ),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "145:     test_dag_id = \"example_bash_operator\"",
      "147:     resp = admin_client.get(f'trigger?dag_id={test_dag_id}&origin={test_origin}')",
      "156: @pytest.mark.parametrize(",
      "",
      "[Removed Lines]",
      "148:     check_content_in_response(",
      "149:         '<button type=\"button\" class=\"btn\" onclick=\"location.href = \\'{}\\'; return false\">'.format(",
      "150:             expected_origin",
      "151:         ),",
      "152:         resp,",
      "153:     )",
      "",
      "[Added Lines]",
      "152:     check_content_in_response(f'<a class=\"btn\" href=\"{expected_origin}\">Cancel</a>', resp)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ac6b016e3f56e4e743eb24312461d5d0baa361c4",
      "candidate_info": {
        "commit_hash": "ac6b016e3f56e4e743eb24312461d5d0baa361c4",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/ac6b016e3f56e4e743eb24312461d5d0baa361c4",
        "files": [
          ".github/workflows/ci.yml",
          "scripts/ci/kubernetes/ci_run_helm_upgrade.sh"
        ],
        "message": "Speed up Helm Upgrade tests (#20289)\n\nThe Helm Upgrade tests took a long time on Public Runners. This\nis in part because we were running tests before and after upgrade,\nbut we do not need to run them before the upgrade, simply because\nthose tests are already run elsewhere.\n\nAlso increased the timeout for the Upgrade Job - just in case\nit will still not be enough\n\n(cherry picked from commit 8c7bdfc6a315a73057f6bff022d0df7897cf11af)",
        "before_after_code_files": [
          "scripts/ci/kubernetes/ci_run_helm_upgrade.sh||scripts/ci/kubernetes/ci_run_helm_upgrade.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "scripts/ci/kubernetes/ci_run_helm_upgrade.sh||scripts/ci/kubernetes/ci_run_helm_upgrade.sh": [
          "File: scripts/ci/kubernetes/ci_run_helm_upgrade.sh -> scripts/ci/kubernetes/ci_run_helm_upgrade.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: # shellcheck source=scripts/ci/libraries/_script_init.sh",
          "19: . \"$( dirname \"${BASH_SOURCE[0]}\" )/../libraries/_script_init.sh\"",
          "26: for EXECUTOR in CeleryExecutor KubernetesExecutor",
          "27: do",
          "28:     kind::upgrade_airflow_with_helm \"${EXECUTOR}\"",
          "",
          "[Removed Lines]",
          "21: EXECUTOR=KubernetesExecutor",
          "22: export EXECUTOR",
          "24: # We started with KubernetesExecutor. Let's run tests first",
          "25: \"$( dirname \"${BASH_SOURCE[0]}\" )/ci_run_kubernetes_tests.sh\"",
          "",
          "[Added Lines]",
          "21: # There is no need to run tests before upgrade (other tests do that). Let's test it after.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b03071333cf8e40f5ee9b8aa030656df59eb83c",
      "candidate_info": {
        "commit_hash": "9b03071333cf8e40f5ee9b8aa030656df59eb83c",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/9b03071333cf8e40f5ee9b8aa030656df59eb83c",
        "files": [
          "airflow/www/views.py"
        ],
        "message": "Add possibility to create user in the Remote User mode (#19963)\n\n(cherry picked from commit cdd9ea66208e3d70d1cf2a34530ba69bc3c58a50)",
        "before_after_code_files": [
          "airflow/www/views.py||airflow/www/views.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/www/views.py||airflow/www/views.py": [
          "File: airflow/www/views.py -> airflow/www/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4732: class CustomUserRemoteUserModelView(MultiResourceUserMixin, UserRemoteUserModelView):",
          "4733:     \"\"\"Customize permission names for FAB's builtin UserRemoteUserModelView.\"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4735:     _class_permission_name = permissions.RESOURCE_USER",
          "4737:     class_permission_name_mapping = {",
          "4738:         'userinfoedit': permissions.RESOURCE_MY_PROFILE,",
          "4739:         'userinfo': permissions.RESOURCE_MY_PROFILE,",
          "4740:     }",
          "4742:     method_permission_name = {",
          "4743:         'add': 'create',",
          "4744:         'userinfo': 'read',",
          "4745:         'download': 'read',",
          "4746:         'show': 'read',",
          "4747:         'list': 'read',",
          "4748:         'edit': 'edit',",
          "4749:         'userinfoedit': 'edit',",
          "4750:         'delete': 'delete',",
          "4751:     }",
          "4753:     base_permissions = [",
          "4754:         permissions.ACTION_CAN_CREATE,",
          "4755:         permissions.ACTION_CAN_READ,",
          "4756:         permissions.ACTION_CAN_EDIT,",
          "4757:         permissions.ACTION_CAN_DELETE,",
          "4758:     ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85cce0769460829865c5f374809607ad922de715",
      "candidate_info": {
        "commit_hash": "85cce0769460829865c5f374809607ad922de715",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/85cce0769460829865c5f374809607ad922de715",
        "files": [
          "scripts/ci/kubernetes/ci_run_kubernetes_tests.sh"
        ],
        "message": "Fix ``breeze kind-cluster shell`` (#20015)\n\nThis was failing with the following:\n\n```\n/Users/kaxilnaik/Documents/GitHub/astronomer/airflow/scripts/ci/kubernetes/ci_run_kubernetes_tests.sh: line 102: constraints[@]: unbound variable\nExporting logs for cluster \"airflow-python-3.7-v1.20.2\" to:\n/tmp/kind_logs_2021-12-03_0_0\n```\n\nand was caused by https://github.com/apache/airflow/pull/17290\n\n(cherry picked from commit 0afed43a8afde093277be2862138cb32fba8ed29)",
        "before_after_code_files": [
          "scripts/ci/kubernetes/ci_run_kubernetes_tests.sh||scripts/ci/kubernetes/ci_run_kubernetes_tests.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "scripts/ci/kubernetes/ci_run_kubernetes_tests.sh||scripts/ci/kubernetes/ci_run_kubernetes_tests.sh": [
          "File: scripts/ci/kubernetes/ci_run_kubernetes_tests.sh -> scripts/ci/kubernetes/ci_run_kubernetes_tests.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:         --constraint",
          "89:         \"https://raw.githubusercontent.com/${CONSTRAINTS_GITHUB_REPOSITORY}/${DEFAULT_CONSTRAINTS_BRANCH}/constraints-${HOST_PYTHON_VERSION}.txt\"",
          "90:     )",
          "92:         # Disable constraints when building in CI with specific version of sources",
          "93:         # In case there will be conflicting constraints",
          "94:         constraints=()",
          "",
          "[Removed Lines]",
          "91:     if [[ -n ${GITHUB_REGISTRY_PULL_IMAGE_TAG=} ]]; then",
          "",
          "[Added Lines]",
          "91:     if [[ ${CI:=} == \"true\" && -n ${GITHUB_REGISTRY_PULL_IMAGE_TAG=} ]]; then",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a80dcd0c37cb3ef2ff90f2e56b2b1ca085cecc7",
      "candidate_info": {
        "commit_hash": "1a80dcd0c37cb3ef2ff90f2e56b2b1ca085cecc7",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/1a80dcd0c37cb3ef2ff90f2e56b2b1ca085cecc7",
        "files": [
          "setup.py"
        ],
        "message": "Add ``semver`` to devel deps (#18818)\n\nWe have a new dev script, `validate_version_added_fields_in_config.py`,\nthat uses it.\n\n(cherry picked from commit 306d0601246b43a4fcf1f21c6e30a917e6d18c28)",
        "before_after_code_files": [
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "540:     'qds-sdk>=1.9.6',",
          "541:     'pytest-httpx',",
          "542:     'requests_mock',",
          "543:     'wheel',",
          "544:     'yamllint',",
          "545: ]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "543:     'semver',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a88930572492f0ba0ca4996ec2b06edda61efdbb",
      "candidate_info": {
        "commit_hash": "a88930572492f0ba0ca4996ec2b06edda61efdbb",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/a88930572492f0ba0ca4996ec2b06edda61efdbb",
        "files": [
          "airflow/cli/commands/dag_command.py",
          "tests/cli/commands/test_dag_command.py"
        ],
        "message": "Fix running airflow dags test <dag_id> <execution_dt> results in error when run twice (#21031)\n\nrelated: #21023\n(cherry picked from commit 515ea84335fc440fe022db2a0e3b158e0d7702da)",
        "before_after_code_files": [
          "airflow/cli/commands/dag_command.py||airflow/cli/commands/dag_command.py",
          "tests/cli/commands/test_dag_command.py||tests/cli/commands/test_dag_command.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/cli/commands/dag_command.py||airflow/cli/commands/dag_command.py": [
          "File: airflow/cli/commands/dag_command.py -> airflow/cli/commands/dag_command.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "406: def dag_test(args, session=None):",
          "407:     \"\"\"Execute one single DagRun for a given DAG and execution date, using the DebugExecutor.\"\"\"",
          "408:     dag = get_dag(subdir=args.subdir, dag_id=args.dag_id)",
          "410:     try:",
          "411:         dag.run(",
          "412:             executor=DebugExecutor(),",
          "",
          "[Removed Lines]",
          "409:     dag.clear(start_date=args.execution_date, end_date=args.execution_date, dag_run_state=State.NONE)",
          "",
          "[Added Lines]",
          "409:     dag.clear(start_date=args.execution_date, end_date=args.execution_date, dag_run_state=False)",
          "",
          "---------------"
        ],
        "tests/cli/commands/test_dag_command.py||tests/cli/commands/test_dag_command.py": [
          "File: tests/cli/commands/test_dag_command.py -> tests/cli/commands/test_dag_command.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "517:                 mock.call().clear(",
          "518:                     start_date=cli_args.execution_date,",
          "519:                     end_date=cli_args.execution_date,",
          "521:                 ),",
          "522:                 mock.call().run(",
          "523:                     executor=mock_executor.return_value,",
          "",
          "[Removed Lines]",
          "520:                     dag_run_state=State.NONE,",
          "",
          "[Added Lines]",
          "520:                     dag_run_state=False,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "548:                 mock.call().clear(",
          "549:                     start_date=cli_args.execution_date,",
          "550:                     end_date=cli_args.execution_date,",
          "552:                 ),",
          "553:                 mock.call().run(",
          "554:                     executor=mock_executor.return_value,",
          "",
          "[Removed Lines]",
          "551:                     dag_run_state=State.NONE,",
          "",
          "[Added Lines]",
          "551:                     dag_run_state=False,",
          "",
          "---------------"
        ]
      }
    }
  ]
}