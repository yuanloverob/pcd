{
  "cve_id": "CVE-2024-50343",
  "cve_desc": "symfony/validator is a module for the Symphony PHP framework which provides tools to validate values. It is possible to trick a `Validator` configured with a regular expression using the `$` metacharacters, with an input ending with `\\n`. Symfony as of versions 5.4.43, 6.4.11, and 7.1.4 now uses the `D` regex modifier to match the entire input. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "symfony/symfony",
  "patch_hash": "7d1032bbead9a4229b32fa6ebca32681c80cb76f",
  "patch_info": {
    "commit_hash": "7d1032bbead9a4229b32fa6ebca32681c80cb76f",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f",
    "files": [
      "src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php",
      "src/Symfony/Component/Validator/Constraints/CssColorValidator.php",
      "src/Symfony/Component/Validator/Constraints/DateValidator.php",
      "src/Symfony/Component/Validator/Constraints/EmailValidator.php",
      "src/Symfony/Component/Validator/Constraints/TimeValidator.php",
      "src/Symfony/Component/Validator/Constraints/UrlValidator.php",
      "src/Symfony/Component/Validator/Tests/Constraints/CardSchemeValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/CssColorValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/DateValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/EmailValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/IbanValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/TimeValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php"
    ],
    "message": "[Validator] Add `D` regex modifier in relevant validators",
    "before_after_code_files": [
      "src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php||src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php",
      "src/Symfony/Component/Validator/Constraints/CssColorValidator.php||src/Symfony/Component/Validator/Constraints/CssColorValidator.php",
      "src/Symfony/Component/Validator/Constraints/DateValidator.php||src/Symfony/Component/Validator/Constraints/DateValidator.php",
      "src/Symfony/Component/Validator/Constraints/EmailValidator.php||src/Symfony/Component/Validator/Constraints/EmailValidator.php",
      "src/Symfony/Component/Validator/Constraints/TimeValidator.php||src/Symfony/Component/Validator/Constraints/TimeValidator.php",
      "src/Symfony/Component/Validator/Constraints/UrlValidator.php||src/Symfony/Component/Validator/Constraints/UrlValidator.php",
      "src/Symfony/Component/Validator/Tests/Constraints/CardSchemeValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/CardSchemeValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/CssColorValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/CssColorValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/DateValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/DateValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/EmailValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/EmailValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/IbanValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/IbanValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/TimeValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/TimeValidatorTest.php",
      "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php||src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php": [
      "File: src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php -> src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "29:     protected $schemes = [",
      "31:         CardScheme::AMEX => [",
      "33:         ],",
      "36:         CardScheme::CHINA_UNIONPAY => [",
      "38:         ],",
      "42:         CardScheme::DINERS => [",
      "44:         ],",
      "47:         CardScheme::DISCOVER => [",
      "52:         ],",
      "54:         CardScheme::INSTAPAYMENT => [",
      "56:         ],",
      "59:         CardScheme::JCB => [",
      "61:         ],",
      "63:         CardScheme::LASER => [",
      "65:         ],",
      "68:         CardScheme::MAESTRO => [",
      "73:         ],",
      "76:         CardScheme::MASTERCARD => [",
      "79:         ],",
      "81:         CardScheme::MIR => [",
      "83:         ],",
      "85:         CardScheme::UATP => [",
      "87:         ],",
      "89:         CardScheme::VISA => [",
      "91:         ],",
      "92:     ];",
      "",
      "[Removed Lines]",
      "32:             '/^3[47][0-9]{13}$/',",
      "37:             '/^62[0-9]{14,17}$/',",
      "43:             '/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/',",
      "48:             '/^6011[0-9]{12}$/',",
      "49:             '/^64[4-9][0-9]{13}$/',",
      "50:             '/^65[0-9]{14}$/',",
      "51:             '/^622(12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|91[0-9]|92[0-5])[0-9]{10}$/',",
      "55:             '/^63[7-9][0-9]{13}$/',",
      "60:             '/^(?:2131|1800|35[0-9]{3})[0-9]{11}$/',",
      "64:             '/^(6304|670[69]|6771)[0-9]{12,15}$/',",
      "69:             '/^(6759[0-9]{2})[0-9]{6,13}$/',",
      "70:             '/^(50[0-9]{4})[0-9]{6,13}$/',",
      "71:             '/^5[6-9][0-9]{10,17}$/',",
      "72:             '/^6[0-9]{11,18}$/',",
      "77:             '/^5[1-5][0-9]{14}$/',",
      "78:             '/^2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12})$/',",
      "82:             '/^220[0-4][0-9]{12,15}$/',",
      "86:             '/^1[0-9]{14}$/',",
      "90:             '/^4([0-9]{12}|[0-9]{15}|[0-9]{18})$/',",
      "",
      "[Added Lines]",
      "32:             '/^3[47][0-9]{13}$/D',",
      "37:             '/^62[0-9]{14,17}$/D',",
      "43:             '/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/D',",
      "48:             '/^6011[0-9]{12}$/D',",
      "49:             '/^64[4-9][0-9]{13}$/D',",
      "50:             '/^65[0-9]{14}$/D',",
      "51:             '/^622(12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|91[0-9]|92[0-5])[0-9]{10}$/D',",
      "55:             '/^63[7-9][0-9]{13}$/D',",
      "60:             '/^(?:2131|1800|35[0-9]{3})[0-9]{11}$/D',",
      "64:             '/^(6304|670[69]|6771)[0-9]{12,15}$/D',",
      "69:             '/^(6759[0-9]{2})[0-9]{6,13}$/D',",
      "70:             '/^(50[0-9]{4})[0-9]{6,13}$/D',",
      "71:             '/^5[6-9][0-9]{10,17}$/D',",
      "72:             '/^6[0-9]{11,18}$/D',",
      "77:             '/^5[1-5][0-9]{14}$/D',",
      "78:             '/^2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12})$/D',",
      "82:             '/^220[0-4][0-9]{12,15}$/D',",
      "86:             '/^1[0-9]{14}$/D',",
      "90:             '/^4([0-9]{12}|[0-9]{15}|[0-9]{18})$/D',",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Constraints/CssColorValidator.php||src/Symfony/Component/Validator/Constraints/CssColorValidator.php": [
      "File: src/Symfony/Component/Validator/Constraints/CssColorValidator.php -> src/Symfony/Component/Validator/Constraints/CssColorValidator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: class CssColorValidator extends ConstraintValidator",
      "23: {",
      "40:     private const COLOR_PATTERNS = [",
      "41:         CssColor::HEX_LONG => self::PATTERN_HEX_LONG,",
      "",
      "[Removed Lines]",
      "24:     private const PATTERN_HEX_LONG = '/^#[0-9a-f]{6}$/i';",
      "25:     private const PATTERN_HEX_LONG_WITH_ALPHA = '/^#[0-9a-f]{8}$/i';",
      "26:     private const PATTERN_HEX_SHORT = '/^#[0-9a-f]{3}$/i';",
      "27:     private const PATTERN_HEX_SHORT_WITH_ALPHA = '/^#[0-9a-f]{4}$/i';",
      "29:     private const PATTERN_BASIC_NAMED_COLORS = '/^(black|silver|gray|white|maroon|red|purple|fuchsia|green|lime|olive|yellow|navy|blue|teal|aqua)$/i';",
      "31:     private const PATTERN_EXTENDED_NAMED_COLORS = '/^(aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen)$/i';",
      "33:     private const PATTERN_SYSTEM_COLORS = '/^(Canvas|CanvasText|LinkText|VisitedText|ActiveText|ButtonFace|ButtonText|ButtonBorder|Field|FieldText|Highlight|HighlightText|SelectedItem|SelectedItemText|Mark|MarkText|GrayText)$/i';",
      "34:     private const PATTERN_KEYWORDS = '/^(transparent|currentColor)$/i';",
      "35:     private const PATTERN_RGB = '/^rgb\\(\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\s*\\)$/i';",
      "36:     private const PATTERN_RGBA = '/^rgba\\(\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|0?\\.\\d+|1(\\.0)?)\\s*\\)$/i';",
      "37:     private const PATTERN_HSL = '/^hsl\\(\\s*(0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),\\s*(0|100|\\d{1,2})%,\\s*(0|100|\\d{1,2})%\\s*\\)$/i';",
      "38:     private const PATTERN_HSLA = '/^hsla\\(\\s*(0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),\\s*(0|100|\\d{1,2})%,\\s*(0|100|\\d{1,2})%,\\s*(0|0?\\.\\d+|1(\\.0)?)\\s*\\)$/i';",
      "",
      "[Added Lines]",
      "24:     private const PATTERN_HEX_LONG = '/^#[0-9a-f]{6}$/iD';",
      "25:     private const PATTERN_HEX_LONG_WITH_ALPHA = '/^#[0-9a-f]{8}$/iD';",
      "26:     private const PATTERN_HEX_SHORT = '/^#[0-9a-f]{3}$/iD';",
      "27:     private const PATTERN_HEX_SHORT_WITH_ALPHA = '/^#[0-9a-f]{4}$/iD';",
      "29:     private const PATTERN_BASIC_NAMED_COLORS = '/^(black|silver|gray|white|maroon|red|purple|fuchsia|green|lime|olive|yellow|navy|blue|teal|aqua)$/iD';",
      "31:     private const PATTERN_EXTENDED_NAMED_COLORS = '/^(aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen)$/iD';",
      "33:     private const PATTERN_SYSTEM_COLORS = '/^(Canvas|CanvasText|LinkText|VisitedText|ActiveText|ButtonFace|ButtonText|ButtonBorder|Field|FieldText|Highlight|HighlightText|SelectedItem|SelectedItemText|Mark|MarkText|GrayText)$/iD';",
      "34:     private const PATTERN_KEYWORDS = '/^(transparent|currentColor)$/iD';",
      "35:     private const PATTERN_RGB = '/^rgb\\(\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\s*\\)$/iD';",
      "36:     private const PATTERN_RGBA = '/^rgba\\(\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),\\s*(0|0?\\.\\d+|1(\\.0)?)\\s*\\)$/iD';",
      "37:     private const PATTERN_HSL = '/^hsl\\(\\s*(0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),\\s*(0|100|\\d{1,2})%,\\s*(0|100|\\d{1,2})%\\s*\\)$/iD';",
      "38:     private const PATTERN_HSLA = '/^hsla\\(\\s*(0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),\\s*(0|100|\\d{1,2})%,\\s*(0|100|\\d{1,2})%,\\s*(0|0?\\.\\d+|1(\\.0)?)\\s*\\)$/iD';",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Constraints/DateValidator.php||src/Symfony/Component/Validator/Constraints/DateValidator.php": [
      "File: src/Symfony/Component/Validator/Constraints/DateValidator.php -> src/Symfony/Component/Validator/Constraints/DateValidator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: class DateValidator extends ConstraintValidator",
      "23: {",
      "",
      "[Removed Lines]",
      "24:     public const PATTERN = '/^(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})$/';",
      "",
      "[Added Lines]",
      "24:     public const PATTERN = '/^(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})$/D';",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Constraints/EmailValidator.php||src/Symfony/Component/Validator/Constraints/EmailValidator.php": [
      "File: src/Symfony/Component/Validator/Constraints/EmailValidator.php -> src/Symfony/Component/Validator/Constraints/EmailValidator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: class EmailValidator extends ConstraintValidator",
      "27: {",
      "31:     private const EMAIL_PATTERNS = [",
      "32:         Email::VALIDATION_MODE_LOOSE => self::PATTERN_LOOSE,",
      "",
      "[Removed Lines]",
      "28:     private const PATTERN_HTML5 = '/^[a-zA-Z0-9.!#$%&\\'*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/';",
      "29:     private const PATTERN_LOOSE = '/^.+\\@\\S+\\.\\S+$/';",
      "",
      "[Added Lines]",
      "28:     private const PATTERN_HTML5 = '/^[a-zA-Z0-9.!#$%&\\'*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/D';",
      "29:     private const PATTERN_LOOSE = '/^.+\\@\\S+\\.\\S+$/D';",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Constraints/TimeValidator.php||src/Symfony/Component/Validator/Constraints/TimeValidator.php": [
      "File: src/Symfony/Component/Validator/Constraints/TimeValidator.php -> src/Symfony/Component/Validator/Constraints/TimeValidator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: class TimeValidator extends ConstraintValidator",
      "23: {",
      "",
      "[Removed Lines]",
      "24:     public const PATTERN = '/^(\\d{2}):(\\d{2}):(\\d{2})$/';",
      "",
      "[Added Lines]",
      "24:     public const PATTERN = '/^(\\d{2}):(\\d{2}):(\\d{2})$/D';",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Constraints/UrlValidator.php||src/Symfony/Component/Validator/Constraints/UrlValidator.php": [
      "File: src/Symfony/Component/Validator/Constraints/UrlValidator.php -> src/Symfony/Component/Validator/Constraints/UrlValidator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "43:             (?:/ (?:[\\pL\\pN\\pS\\pM\\-._\\~!$&\\'()*+,;=:@]|%%[0-9A-Fa-f]{2})* )*    # a path",
      "44:             (?:\\? (?:[\\pL\\pN\\-._\\~!$&\\'\\[\\]()*+,;=:@/?]|%%[0-9A-Fa-f]{2})* )?   # a query (optional)",
      "45:             (?:\\# (?:[\\pL\\pN\\-._\\~!$&\\'()*+,;=:@/?]|%%[0-9A-Fa-f]{2})* )?       # a fragment (optional)",
      "",
      "[Removed Lines]",
      "46:         $~ixu';",
      "",
      "[Added Lines]",
      "46:         $~ixuD';",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Tests/Constraints/CardSchemeValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/CardSchemeValidatorTest.php": [
      "File: src/Symfony/Component/Validator/Tests/Constraints/CardSchemeValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/CardSchemeValidatorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:         $this->assertNoViolation();",
      "47:     }",
      "49:     public function testValidNumberWithOrderedArguments()",
      "50:     {",
      "51:         $this->validator->validate(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "54:     public function testValidNumbersWithNewLine($scheme, $number)",
      "55:     {",
      "56:         $this->validator->validate($number.\"\\n\", new CardScheme(['schemes' => $scheme, 'message' => 'myMessage']));",
      "58:         $this->buildViolation('myMessage')",
      "59:             ->setParameter('{{ value }}', '\"'.$number.\"\\n\\\"\")",
      "60:             ->setCode(CardScheme::INVALID_FORMAT_ERROR)",
      "61:             ->assertRaised();",
      "62:     }",
      "69:     public function testValidNumbersWithNewLinePriorToPhp8($scheme, $number)",
      "70:     {",
      "71:         $this->validator->validate($number.\"\\n\", new CardScheme(['schemes' => $scheme, 'message' => 'myMessage']));",
      "73:         $this->buildViolation('myMessage')",
      "74:             ->setParameter('{{ value }}', '\"'.$number.\"\\n\\\"\")",
      "75:             ->setCode(CardScheme::NOT_NUMERIC_ERROR)",
      "76:             ->assertRaised();",
      "77:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Tests/Constraints/CssColorValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/CssColorValidatorTest.php": [
      "File: src/Symfony/Component/Validator/Tests/Constraints/CssColorValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/CssColorValidatorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:         $this->assertNoViolation();",
      "53:     }",
      "55:     public static function getValidAnyColor(): array",
      "56:     {",
      "57:         return [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58:     public function testValidAnyColorWithNewLine($cssColor)",
      "59:     {",
      "60:         $this->validator->validate($cssColor.\"\\n\", new CssColor([], 'myMessage'));",
      "62:         $this->buildViolation('myMessage')",
      "63:             ->setParameter('{{ value }}', '\"'.$cssColor.\"\\n\\\"\")",
      "64:             ->setCode(CssColor::INVALID_FORMAT_ERROR)",
      "65:             ->assertRaised();",
      "66:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Tests/Constraints/DateValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/DateValidatorTest.php": [
      "File: src/Symfony/Component/Validator/Tests/Constraints/DateValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/DateValidatorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:         $this->assertNoViolation();",
      "54:     }",
      "56:     public static function getValidDates()",
      "57:     {",
      "58:         return [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59:     public function testValidDatesWithNewLine(string $date)",
      "60:     {",
      "61:         $this->validator->validate($date.\"\\n\", new Date(['message' => 'myMessage']));",
      "63:         $this->buildViolation('myMessage')",
      "64:             ->setParameter('{{ value }}', '\"'.$date.\"\\n\\\"\")",
      "65:             ->setCode(Date::INVALID_FORMAT_ERROR)",
      "66:             ->assertRaised();",
      "67:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Tests/Constraints/EmailValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/EmailValidatorTest.php": [
      "File: src/Symfony/Component/Validator/Tests/Constraints/EmailValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/EmailValidatorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "70:         $this->assertNoViolation();",
      "71:     }",
      "73:     public static function getValidEmails()",
      "74:     {",
      "75:         return [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:     public function testValidEmailsWithNewLine($email)",
      "77:     {",
      "78:         $this->validator->validate($email.\"\\n\", new Email());",
      "80:         $this->buildViolation('This value is not a valid email address.')",
      "81:             ->setParameter('{{ value }}', '\"'.$email.\"\\n\\\"\")",
      "82:             ->setCode(Email::INVALID_FORMAT_ERROR)",
      "83:             ->assertRaised();",
      "84:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Tests/Constraints/IbanValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/IbanValidatorTest.php": [
      "File: src/Symfony/Component/Validator/Tests/Constraints/IbanValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/IbanValidatorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "48:         $this->assertNoViolation();",
      "49:     }",
      "51:     public static function getValidIbans()",
      "52:     {",
      "53:         return [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "54:     public function testValidIbansWithNewLine(string $iban)",
      "55:     {",
      "56:         $this->validator->validate($iban.\"\\n\", new Iban());",
      "58:         $this->buildViolation('This is not a valid International Bank Account Number (IBAN).')",
      "59:             ->setParameter('{{ value }}', '\"'.$iban.\"\\n\\\"\")",
      "60:             ->setCode(Iban::INVALID_CHARACTERS_ERROR)",
      "61:             ->assertRaised();",
      "62:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Tests/Constraints/TimeValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/TimeValidatorTest.php": [
      "File: src/Symfony/Component/Validator/Tests/Constraints/TimeValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/TimeValidatorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:         $this->assertNoViolation();",
      "54:     }",
      "56:     public static function getValidTimes()",
      "57:     {",
      "58:         return [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59:     public function testValidTimesWithNewLine(string $time)",
      "60:     {",
      "61:         $this->validator->validate($time.\"\\n\", new Time());",
      "63:         $this->buildViolation('This value is not a valid time.')",
      "64:             ->setParameter('{{ value }}', '\"'.$time.\"\\n\".'\"')",
      "65:             ->setCode(Time::INVALID_FORMAT_ERROR)",
      "66:             ->assertRaised();",
      "67:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php": [
      "File: src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "60:         $this->assertNoViolation();",
      "61:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66:     public function testValidUrlsWithNewLine($url)",
      "67:     {",
      "68:         $this->validator->validate($url.\"\\n\", new Url());",
      "70:         $this->buildViolation('This value is not a valid URL.')",
      "71:             ->setParameter('{{ value }}', '\"'.$url.\"\\n\".'\"')",
      "72:             ->setCode(Url::INVALID_URL_ERROR)",
      "73:             ->assertRaised();",
      "74:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "85:         $this->assertNoViolation();",
      "86:     }",
      "88:     public static function getValidRelativeUrls()",
      "89:     {",
      "90:         return [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "105:     public function testValidRelativeUrlWithNewLine(string $url)",
      "106:     {",
      "107:         $constraint = new Url([",
      "108:             'relativeProtocol' => true,",
      "109:         ]);",
      "111:         $this->validator->validate($url.\"\\n\", $constraint);",
      "113:         $this->buildViolation('This value is not a valid URL.')",
      "114:             ->setParameter('{{ value }}', '\"'.$url.\"\\n\".'\"')",
      "115:             ->setCode(Url::INVALID_URL_ERROR)",
      "116:             ->assertRaised();",
      "117:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d93994dbb1693bb9a13edffb984878a5fd66969a",
      "candidate_info": {
        "commit_hash": "d93994dbb1693bb9a13edffb984878a5fd66969a",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/d93994dbb1693bb9a13edffb984878a5fd66969a",
        "files": [
          "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php"
        ],
        "message": "[Validator] Pass required `requireTld` option to `Url` in tests",
        "before_after_code_files": [
          "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php"
          ],
          "candidate": [
            "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php||src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php": [
          "File: src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php -> src/Symfony/Component/Validator/Tests/Constraints/UrlValidatorTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     public function testValidUrlsWithNewLine($url)",
          "67:     {",
          "70:         $this->buildViolation('This value is not a valid URL.')",
          "71:             ->setParameter('{{ value }}', '\"'.$url.\"\\n\".'\"')",
          "",
          "[Removed Lines]",
          "68:         $this->validator->validate($url.\"\\n\", new Url());",
          "",
          "[Added Lines]",
          "68:         $this->validator->validate($url.\"\\n\", new Url(requireTld: false));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:     public function testValidRelativeUrlWithNewLine(string $url)",
          "110:     {",
          "115:         $this->validator->validate($url.\"\\n\", $constraint);",
          "",
          "[Removed Lines]",
          "111:         $constraint = new Url([",
          "112:             'relativeProtocol' => true,",
          "113:         ]);",
          "",
          "[Added Lines]",
          "111:         $constraint = new Url(relativeProtocol: true, requireTld: false);",
          "",
          "---------------"
        ]
      }
    }
  ]
}