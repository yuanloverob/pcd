{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e4e5305e81dce6ec05c58bfdfa6e6960836fbc72",
      "candidate_info": {
        "commit_hash": "e4e5305e81dce6ec05c58bfdfa6e6960836fbc72",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/e4e5305e81dce6ec05c58bfdfa6e6960836fbc72",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "Backport of chore(deps): bump github.com/docker/cli from 24.0.6+incompatible to 27.3.1+incompatible into release/1.9.x (#24429)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  github.com/coreos/go-iptables v0.6.0",
          "27:  github.com/creack/pty v1.1.23",
          "28:  github.com/distribution/reference v0.5.0",
          "30:  github.com/docker/docker v27.1.1+incompatible",
          "31:  github.com/docker/go-connections v0.4.0",
          "32:  github.com/docker/go-units v0.5.0",
          "",
          "[Removed Lines]",
          "29:  github.com/docker/cli v24.0.6+incompatible",
          "",
          "[Added Lines]",
          "29:  github.com/docker/cli v27.3.1+incompatible",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: github.com/dnaeon/go-vcr v1.0.1/go.mod h1:aBB1+wY4s93YsC3HHjMBMrwTj2R9FHDzUr9KyGc8n1E=",
          "386: github.com/dnaeon/go-vcr v1.1.0 h1:ReYa/UBrRyQdant9B4fNHGoCNKw6qh6P0fsdGmZpR7c=",
          "387: github.com/dnaeon/go-vcr v1.1.0/go.mod h1:M7tiix8f0r6mKKJ3Yq/kqU1OYf3MnfmBWVbPx/yU9ko=",
          "390: github.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=",
          "391: github.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=",
          "392: github.com/docker/docker v27.1.1+incompatible h1:hO/M4MtV36kzKldqnA37IWhebRA+LnqqcqDja6kVaKY=",
          "",
          "[Removed Lines]",
          "388: github.com/docker/cli v24.0.6+incompatible h1:fF+XCQCgJjjQNIMjzaSmiKJSCcfcXb3TWTcc7GAneOY=",
          "389: github.com/docker/cli v24.0.6+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=",
          "",
          "[Added Lines]",
          "388: github.com/docker/cli v27.3.1+incompatible h1:qEGdFBF3Xu6SCvCYhc7CzaQTlBmqDuzxPDpigSyeKQQ=",
          "389: github.com/docker/cli v27.3.1+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22b7470ccfb25d111e94e6c63c3474a648225fba",
      "candidate_info": {
        "commit_hash": "22b7470ccfb25d111e94e6c63c3474a648225fba",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/22b7470ccfb25d111e94e6c63c3474a648225fba",
        "files": [
          ".changelog/24683.txt",
          "command/agent/node_endpoint.go",
          "nomad/alloc_endpoint.go",
          "nomad/structs/structs.go"
        ],
        "message": "sec: fix alloc workload identity namespace permission (#24683)\n\nSanitize the Allocations SignedIdentities to prevent privilege escalation within a namespace through unauthorized impersonation of [workload associated with ACL policies](https://developer.hashicorp.com/nomad/docs/concepts/workload-identity#workload-associated-acl-policies) in any workload within the namespace.\n\nRef: CVE-2024-12678.\nRef: https://github.com/hashicorp/nomad-enterprise/pull/2098",
        "before_after_code_files": [
          "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
          "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
          "nomad/structs/structs.go||nomad/structs/structs.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
            "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
            "nomad/structs/structs.go||nomad/structs/structs.go"
          ],
          "candidate": [
            "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
            "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
            "nomad/structs/structs.go||nomad/structs/structs.go"
          ]
        }
      },
      "candidate_diff": {
        "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
          "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:   out.Allocs = make([]*structs.Allocation, 0)",
          "106:  }",
          "107:  for _, alloc := range out.Allocs {",
          "108:   alloc.SetEventDisplayMessages()",
          "109:  }",
          "110:  return out.Allocs, nil",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:   alloc = alloc.Sanitize()",
          "",
          "---------------"
        ],
        "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
          "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:    }",
          "176:    if out != nil {",
          "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
          "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
          "",
          "[Removed Lines]",
          "175:    reply.Alloc = out",
          "",
          "[Added Lines]",
          "176:     out = out.Sanitize()",
          "177:     reply.Alloc = out",
          "",
          "---------------"
        ],
        "nomad/structs/structs.go||nomad/structs/structs.go": [
          "File: nomad/structs/structs.go -> nomad/structs/structs.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11199:  return a.ID",
          "11200: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11205: func (a *Allocation) Sanitize() *Allocation {",
          "11206:  if a == nil {",
          "11207:   return nil",
          "11208:  }",
          "11210:  if a.SignedIdentities == nil {",
          "11211:   return a",
          "11212:  }",
          "11214:  clean := a.Copy()",
          "11215:  clean.SignedIdentities = nil",
          "11216:  return clean",
          "11217: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}