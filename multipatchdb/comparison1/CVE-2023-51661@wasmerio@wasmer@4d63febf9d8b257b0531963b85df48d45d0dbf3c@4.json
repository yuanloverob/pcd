{
  "cve_id": "CVE-2023-51661",
  "cve_desc": "Wasmer is a WebAssembly runtime that enables containers to run anywhere: from Desktop to the Cloud, Edge and even the browser. Wasm programs can access the filesystem outside of the sandbox. Service providers running untrusted Wasm code on Wasmer can unexpectedly expose the host filesystem. This vulnerability has been patched in version 4.2.4.",
  "repo": "wasmerio/wasmer",
  "patch_hash": "4d63febf9d8b257b0531963b85df48d45d0dbf3c",
  "patch_info": {
    "commit_hash": "4d63febf9d8b257b0531963b85df48d45d0dbf3c",
    "repo": "wasmerio/wasmer",
    "commit_url": "https://github.com/wasmerio/wasmer/commit/4d63febf9d8b257b0531963b85df48d45d0dbf3c",
    "files": [
      "CHANGELOG.md",
      "Cargo.lock",
      "Cargo.toml",
      "lib/api/Cargo.toml",
      "lib/api/macro-wasmer-universal-test/Cargo.toml",
      "lib/c-api/Cargo.toml",
      "lib/c-api/examples/wasmer-capi-examples-runner/Cargo.toml",
      "lib/c-api/tests/wasmer-c-api-test-runner/Cargo.toml",
      "lib/cache/Cargo.toml",
      "lib/cli-compiler/Cargo.toml",
      "lib/cli/Cargo.toml",
      "lib/compiler-cranelift/Cargo.toml",
      "lib/compiler-llvm/Cargo.toml",
      "lib/compiler-singlepass/Cargo.toml",
      "lib/compiler/Cargo.toml",
      "lib/emscripten/Cargo.toml",
      "lib/middlewares/Cargo.toml",
      "lib/object/Cargo.toml",
      "lib/registry/Cargo.toml",
      "lib/sys-utils/Cargo.toml",
      "lib/virtual-fs/Cargo.toml",
      "lib/vm/Cargo.toml",
      "lib/wai-bindgen-wasmer/Cargo.toml",
      "lib/wasi-experimental-io-devices/Cargo.toml",
      "lib/wasi-types/Cargo.toml",
      "lib/wasi-web/Cargo.lock",
      "lib/wasi-web/Cargo.toml",
      "lib/wasix/Cargo.toml",
      "scripts/update-version.py",
      "scripts/windows-installer/wasmer.iss",
      "tests/integration/cli/Cargo.toml",
      "tests/integration/ios/Cargo.toml",
      "tests/lib/wast/Cargo.toml",
      "tests/wasi-wast/Cargo.toml"
    ],
    "message": "Release 4.2.4 (#4337)",
    "before_after_code_files": [
      "Cargo.lock||Cargo.lock",
      "lib/wasi-web/Cargo.lock||lib/wasi-web/Cargo.lock",
      "scripts/update-version.py||scripts/update-version.py",
      "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
    ]
  },
  "patch_diff": {
    "Cargo.lock||Cargo.lock": [
      "File: Cargo.lock -> Cargo.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "2526: [[package]]",
      "2527: name = \"macro-wasmer-universal-test\"",
      "2529: dependencies = [",
      "2530:  \"proc-macro2\",",
      "2531:  \"proc-quote\",",
      "",
      "[Removed Lines]",
      "2528: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2528: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "5140: [[package]]",
      "5141: name = \"virtual-fs\"",
      "5143: dependencies = [",
      "5144:  \"anyhow\",",
      "5145:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "5142: version = \"0.9.0\"",
      "",
      "[Added Lines]",
      "5142: version = \"0.10.0\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5327: [[package]]",
      "5328: name = \"wai-bindgen-wasmer\"",
      "5330: dependencies = [",
      "5331:  \"anyhow\",",
      "5332:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "5329: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "5329: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "5406: [[package]]",
      "5407: name = \"wasi-test-generator\"",
      "5409: dependencies = [",
      "5410:  \"glob\",",
      "5411:  \"gumdrop\",",
      "",
      "[Removed Lines]",
      "5408: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5408: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5597: [[package]]",
      "5598: name = \"wasmer\"",
      "5600: dependencies = [",
      "5601:  \"anyhow\",",
      "5602:  \"bytes\",",
      "",
      "[Removed Lines]",
      "5599: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5599: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "5672: [[package]]",
      "5673: name = \"wasmer-c-api\"",
      "5675: dependencies = [",
      "5676:  \"cbindgen\",",
      "5677:  \"cfg-if\",",
      "",
      "[Removed Lines]",
      "5674: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5674: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "5701: [[package]]",
      "5702: name = \"wasmer-c-api-test-runner\"",
      "5704: dependencies = [",
      "5705:  \"cc\",",
      "5706:  \"regex\",",
      "",
      "[Removed Lines]",
      "5703: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5703: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "5711: [[package]]",
      "5712: name = \"wasmer-cache\"",
      "5714: dependencies = [",
      "5715:  \"blake3\",",
      "5716:  \"criterion\",",
      "",
      "[Removed Lines]",
      "5713: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5713: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "5725: [[package]]",
      "5726: name = \"wasmer-capi-examples-runner\"",
      "5728: dependencies = [",
      "5729:  \"cc\",",
      "5730:  \"regex\",",
      "",
      "[Removed Lines]",
      "5727: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5727: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "5735: [[package]]",
      "5736: name = \"wasmer-cli\"",
      "5738: dependencies = [",
      "5739:  \"anyhow\",",
      "5740:  \"assert_cmd 2.0.12\",",
      "",
      "[Removed Lines]",
      "5737: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5737: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "5798:  \"wasmer-edge-cli\",",
      "5799:  \"wasmer-emscripten\",",
      "5800:  \"wasmer-object\",",
      "5802:  \"wasmer-toml 0.9.2\",",
      "5803:  \"wasmer-types\",",
      "5804:  \"wasmer-vm\",",
      "",
      "[Removed Lines]",
      "5801:  \"wasmer-registry 5.9.0\",",
      "",
      "[Added Lines]",
      "5801:  \"wasmer-registry 5.10.0\",",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "5811: [[package]]",
      "5812: name = \"wasmer-compiler\"",
      "5814: dependencies = [",
      "5815:  \"backtrace\",",
      "5816:  \"bytes\",",
      "",
      "[Removed Lines]",
      "5813: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5813: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "5840: [[package]]",
      "5841: name = \"wasmer-compiler-cli\"",
      "5843: dependencies = [",
      "5844:  \"anyhow\",",
      "5845:  \"bytesize\",",
      "",
      "[Removed Lines]",
      "5842: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5842: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "5861: [[package]]",
      "5862: name = \"wasmer-compiler-cranelift\"",
      "5864: dependencies = [",
      "5865:  \"cranelift-codegen\",",
      "5866:  \"cranelift-entity\",",
      "",
      "[Removed Lines]",
      "5863: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5863: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "5880: [[package]]",
      "5881: name = \"wasmer-compiler-llvm\"",
      "5883: dependencies = [",
      "5884:  \"byteorder\",",
      "5885:  \"cc\",",
      "",
      "[Removed Lines]",
      "5882: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5882: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "5902: [[package]]",
      "5903: name = \"wasmer-compiler-singlepass\"",
      "5905: dependencies = [",
      "5906:  \"byteorder\",",
      "5907:  \"dynasm\",",
      "",
      "[Removed Lines]",
      "5904: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5904: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "5921: [[package]]",
      "5922: name = \"wasmer-derive\"",
      "5924: dependencies = [",
      "5925:  \"compiletest_rs\",",
      "5926:  \"proc-macro-error\",",
      "",
      "[Removed Lines]",
      "5923: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5923: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "5965:  \"virtual-mio 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "5966:  \"virtual-net 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "5967:  \"wasmer-api\",",
      "5969:  \"wasmer-toml 0.9.2\",",
      "5970:  \"webc\",",
      "5971: ]",
      "5973: [[package]]",
      "5974: name = \"wasmer-emscripten\"",
      "5976: dependencies = [",
      "5977:  \"byteorder\",",
      "5978:  \"getrandom\",",
      "",
      "[Removed Lines]",
      "5968:  \"wasmer-registry 5.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "5975: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5968:  \"wasmer-registry 5.9.0\",",
      "5975: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "6015: [[package]]",
      "6016: name = \"wasmer-integration-tests-cli\"",
      "6018: dependencies = [",
      "6019:  \"anyhow\",",
      "6020:  \"assert_cmd 2.0.12\",",
      "",
      "[Removed Lines]",
      "6017: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6017: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "6038:  \"target-lexicon 0.12.12\",",
      "6039:  \"tempfile\",",
      "6040:  \"tokio\",",
      "6042: ]",
      "6044: [[package]]",
      "6045: name = \"wasmer-integration-tests-ios\"",
      "6048: [[package]]",
      "6049: name = \"wasmer-middlewares\"",
      "6051: dependencies = [",
      "6052:  \"wasmer\",",
      "6053:  \"wasmer-types\",",
      "",
      "[Removed Lines]",
      "6041:  \"wasmer-registry 5.9.0\",",
      "6046: version = \"4.2.3\"",
      "6050: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6041:  \"wasmer-registry 5.10.0\",",
      "6046: version = \"4.2.4\"",
      "6050: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "6057: [[package]]",
      "6058: name = \"wasmer-object\"",
      "6060: dependencies = [",
      "6061:  \"object 0.28.4\",",
      "6062:  \"thiserror\",",
      "",
      "[Removed Lines]",
      "6059: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6059: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "6066: [[package]]",
      "6067: name = \"wasmer-registry\"",
      "6068: version = \"5.9.0\"",
      "6069: dependencies = [",
      "6070:  \"anyhow\",",
      "6072:  \"console\",",
      "6074:  \"dirs\",",
      "6075:  \"filetime\",",
      "6076:  \"flate2\",",
      "",
      "[Removed Lines]",
      "6071:  \"clap\",",
      "6073:  \"dialoguer 0.11.0\",",
      "",
      "[Added Lines]",
      "6069: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6070: checksum = \"0bb2ecfb16d793bfe1e2b98af07e6f344bd00ba0efea8e1b24737701d823a3ee\"",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "6083:  \"log\",",
      "6084:  \"lzma-rs\",",
      "6085:  \"minisign\",",
      "6087:  \"regex\",",
      "6088:  \"reqwest\",",
      "6089:  \"rpassword\",",
      "",
      "[Removed Lines]",
      "6086:  \"pretty_assertions\",",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "6098:  \"tldextract\",",
      "6099:  \"tokio\",",
      "6100:  \"toml 0.5.11\",",
      "6102:  \"url\",",
      "6104:  \"wasmer-wasm-interface 4.2.3\",",
      "6105:  \"wasmparser 0.51.4\",",
      "6106:  \"whoami\",",
      "",
      "[Removed Lines]",
      "6101:  \"tracing\",",
      "6103:  \"wasmer-toml 0.9.2\",",
      "",
      "[Added Lines]",
      "6101:  \"wasmer-toml 0.8.1\",",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "6109: [[package]]",
      "6110: name = \"wasmer-registry\"",
      "6114: dependencies = [",
      "6115:  \"anyhow\",",
      "6116:  \"console\",",
      "6117:  \"dirs\",",
      "6118:  \"filetime\",",
      "6119:  \"flate2\",",
      "",
      "[Removed Lines]",
      "6111: version = \"5.9.0\"",
      "6112: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6113: checksum = \"0bb2ecfb16d793bfe1e2b98af07e6f344bd00ba0efea8e1b24737701d823a3ee\"",
      "",
      "[Added Lines]",
      "6109: version = \"5.10.0\"",
      "6112:  \"clap\",",
      "6114:  \"dialoguer 0.11.0\",",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "6126:  \"log\",",
      "6127:  \"lzma-rs\",",
      "6128:  \"minisign\",",
      "6129:  \"regex\",",
      "6130:  \"reqwest\",",
      "6131:  \"rpassword\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6127:  \"pretty_assertions\",",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "6140:  \"tldextract\",",
      "6141:  \"tokio\",",
      "6142:  \"toml 0.5.11\",",
      "6143:  \"url\",",
      "6146:  \"wasmparser 0.51.4\",",
      "6147:  \"whoami\",",
      "6148: ]",
      "6150: [[package]]",
      "6151: name = \"wasmer-sys-utils\"",
      "6153: dependencies = [",
      "6154:  \"libc\",",
      "6155:  \"region\",",
      "",
      "[Removed Lines]",
      "6144:  \"wasmer-toml 0.8.1\",",
      "6145:  \"wasmer-wasm-interface 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "6152: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6142:  \"tracing\",",
      "6144:  \"wasmer-toml 0.9.2\",",
      "6145:  \"wasmer-wasm-interface 4.2.4\",",
      "6152: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "6200: [[package]]",
      "6201: name = \"wasmer-types\"",
      "6203: dependencies = [",
      "6204:  \"bytecheck\",",
      "6205:  \"enum-iterator\",",
      "",
      "[Removed Lines]",
      "6202: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6202: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "6217: [[package]]",
      "6218: name = \"wasmer-vm\"",
      "6220: dependencies = [",
      "6221:  \"backtrace\",",
      "6222:  \"cc\",",
      "",
      "[Removed Lines]",
      "6219: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6219: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6245: [[package]]",
      "6246: name = \"wasmer-wasix\"",
      "6248: dependencies = [",
      "6249:  \"anyhow\",",
      "6250:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "6247: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6247: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6315: [[package]]",
      "6316: name = \"wasmer-wasix-experimental-io-devices\"",
      "6318: dependencies = [",
      "6319:  \"minifb\",",
      "6320:  \"nix 0.25.1\",",
      "",
      "[Removed Lines]",
      "6317: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6317: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6330: [[package]]",
      "6331: name = \"wasmer-wasix-types\"",
      "6333: dependencies = [",
      "6334:  \"anyhow\",",
      "6335:  \"bitflags 1.3.2\",",
      "",
      "[Removed Lines]",
      "6332: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6332: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6353: [[package]]",
      "6354: name = \"wasmer-wasm-interface\"",
      "6355: version = \"4.2.3\"",
      "6356: dependencies = [",
      "6358:  \"either\",",
      "6359:  \"nom 5.1.3\",",
      "6360:  \"serde\",",
      "6361:  \"wasmparser 0.51.4\",",
      "6363: ]",
      "6365: [[package]]",
      "6366: name = \"wasmer-wasm-interface\"",
      "6370: dependencies = [",
      "6371:  \"either\",",
      "6372:  \"nom 5.1.3\",",
      "6373:  \"serde\",",
      "6374:  \"wasmparser 0.51.4\",",
      "6375: ]",
      "6377: [[package]]",
      "6378: name = \"wasmer-wast\"",
      "6380: dependencies = [",
      "6381:  \"anyhow\",",
      "6382:  \"futures\",",
      "",
      "[Removed Lines]",
      "6357:  \"bincode\",",
      "6362:  \"wat\",",
      "6367: version = \"4.2.3\"",
      "6368: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6369: checksum = \"70759b128088ce07ab6f31b97d83ceb8642285c650677fc84f554d68dc534ac4\"",
      "6379: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6356: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6357: checksum = \"70759b128088ce07ab6f31b97d83ceb8642285c650677fc84f554d68dc534ac4\"",
      "6367: version = \"4.2.4\"",
      "6369:  \"bincode\",",
      "6374:  \"wat\",",
      "6379: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6393: [[package]]",
      "6394: name = \"wasmer-workspace\"",
      "6396: dependencies = [",
      "6397:  \"anyhow\",",
      "6398:  \"build-deps\",",
      "",
      "[Removed Lines]",
      "6395: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6395: version = \"4.2.4\"",
      "",
      "---------------"
    ],
    "lib/wasi-web/Cargo.lock||lib/wasi-web/Cargo.lock": [
      "File: lib/wasi-web/Cargo.lock -> lib/wasi-web/Cargo.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "2159: [[package]]",
      "2160: name = \"virtual-fs\"",
      "2162: dependencies = [",
      "2163:  \"anyhow\",",
      "2164:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "2161: version = \"0.9.0\"",
      "",
      "[Added Lines]",
      "2161: version = \"0.10.0\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2279: [[package]]",
      "2280: name = \"wai-bindgen-wasmer\"",
      "2282: dependencies = [",
      "2283:  \"anyhow\",",
      "2284:  \"bitflags 1.3.2\",",
      "",
      "[Removed Lines]",
      "2281: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2281: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2441: [[package]]",
      "2442: name = \"wasmer\"",
      "2444: dependencies = [",
      "2445:  \"bytes\",",
      "2446:  \"cfg-if\",",
      "",
      "[Removed Lines]",
      "2443: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2443: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2468: [[package]]",
      "2469: name = \"wasmer-compiler\"",
      "2471: dependencies = [",
      "2472:  \"backtrace\",",
      "2473:  \"bytes\",",
      "",
      "[Removed Lines]",
      "2470: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2470: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2492: [[package]]",
      "2493: name = \"wasmer-derive\"",
      "2495: dependencies = [",
      "2496:  \"proc-macro-error\",",
      "2497:  \"proc-macro2\",",
      "",
      "[Removed Lines]",
      "2494: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2494: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2520: [[package]]",
      "2521: name = \"wasmer-types\"",
      "2523: dependencies = [",
      "2524:  \"bytecheck\",",
      "2525:  \"enum-iterator\",",
      "",
      "[Removed Lines]",
      "2522: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2522: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2535: [[package]]",
      "2536: name = \"wasmer-vm\"",
      "2538: dependencies = [",
      "2539:  \"backtrace\",",
      "2540:  \"cc\",",
      "",
      "[Removed Lines]",
      "2537: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2537: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2561: [[package]]",
      "2562: name = \"wasmer-wasix\"",
      "2564: dependencies = [",
      "2565:  \"anyhow\",",
      "2566:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "2563: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2563: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2618: [[package]]",
      "2619: name = \"wasmer-wasix-types\"",
      "2621: dependencies = [",
      "2622:  \"anyhow\",",
      "2623:  \"bitflags 1.3.2\",",
      "",
      "[Removed Lines]",
      "2620: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2620: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2640: [[package]]",
      "2641: name = \"wasmer-web\"",
      "2643: dependencies = [",
      "2644:  \"anyhow\",",
      "2645:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "2642: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2642: version = \"0.17.0\"",
      "",
      "---------------"
    ],
    "scripts/update-version.py||scripts/update-version.py": [
      "File: scripts/update-version.py -> scripts/update-version.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #!/usr/bin/python",
      "6: import os",
      "7: import re",
      "",
      "[Removed Lines]",
      "3: PREVIOUS_VERSION='4.2.2'",
      "4: NEXT_VERSION='4.2.3'",
      "",
      "[Added Lines]",
      "3: PREVIOUS_VERSION='4.2.3'",
      "4: NEXT_VERSION='4.2.4'",
      "",
      "---------------"
    ],
    "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss": [
      "File: scripts/windows-installer/wasmer.iss -> scripts/windows-installer/wasmer.iss",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: [Setup]",
      "2: AppName=Wasmer",
      "4: DefaultDirName={pf}\\Wasmer",
      "5: DefaultGroupName=Wasmer",
      "6: Compression=lzma2",
      "",
      "[Removed Lines]",
      "3: AppVersion=4.2.3",
      "",
      "[Added Lines]",
      "3: AppVersion=4.2.4",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "76a299675188bbb13e4123c078e7957bf56227f0",
      "candidate_info": {
        "commit_hash": "76a299675188bbb13e4123c078e7957bf56227f0",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/76a299675188bbb13e4123c078e7957bf56227f0",
        "files": [
          "Cargo.lock",
          "lib/vnet/Cargo.toml",
          "lib/vnet/src/lib.rs"
        ],
        "message": "Remove libc dependency from vnet again\n\nlibc was added as a dependency to vnet for error mapping.\n\nThis breaks JS targets.\n\nRemoved the dependency, and removed the mapping functions.\nWill be added again in the wasi crate.",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock",
          "lib/vnet/src/lib.rs||lib/vnet/src/lib.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "5202: dependencies = [",
          "5203:  \"async-trait\",",
          "5204:  \"bytes\",",
          "5206:  \"thiserror\",",
          "5207:  \"tracing\",",
          "5208:  \"wasmer-vfs\",",
          "",
          "[Removed Lines]",
          "5205:  \"libc\",",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/vnet/src/lib.rs||lib/vnet/src/lib.rs": [
          "File: lib/vnet/src/lib.rs -> lib/vnet/src/lib.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "529:     #[error(\"unknown error found\")]",
          "530:     UnknownError,",
          "531: }",
          "",
          "[Removed Lines]",
          "533: pub fn net_error_into_io_err(net_error: NetworkError) -> std::io::Error {",
          "534:     use std::io::Error;",
          "535:     use std::io::ErrorKind;",
          "536:     match net_error {",
          "537:         NetworkError::InvalidFd => ErrorKind::BrokenPipe.into(),",
          "538:         NetworkError::AlreadyExists => ErrorKind::AlreadyExists.into(),",
          "539:         NetworkError::Lock => ErrorKind::BrokenPipe.into(),",
          "540:         NetworkError::IOError => ErrorKind::BrokenPipe.into(),",
          "541:         NetworkError::AddressInUse => ErrorKind::AddrInUse.into(),",
          "542:         NetworkError::AddressNotAvailable => ErrorKind::AddrNotAvailable.into(),",
          "543:         NetworkError::BrokenPipe => ErrorKind::BrokenPipe.into(),",
          "544:         NetworkError::ConnectionAborted => ErrorKind::ConnectionAborted.into(),",
          "545:         NetworkError::ConnectionRefused => ErrorKind::ConnectionRefused.into(),",
          "546:         NetworkError::ConnectionReset => ErrorKind::ConnectionReset.into(),",
          "547:         NetworkError::Interrupted => ErrorKind::Interrupted.into(),",
          "548:         NetworkError::InvalidData => ErrorKind::InvalidData.into(),",
          "549:         NetworkError::InvalidInput => ErrorKind::InvalidInput.into(),",
          "550:         NetworkError::NotConnected => ErrorKind::NotConnected.into(),",
          "551:         NetworkError::NoDevice => ErrorKind::BrokenPipe.into(),",
          "552:         NetworkError::PermissionDenied => ErrorKind::PermissionDenied.into(),",
          "553:         NetworkError::TimedOut => ErrorKind::TimedOut.into(),",
          "554:         NetworkError::UnexpectedEof => ErrorKind::UnexpectedEof.into(),",
          "555:         NetworkError::WouldBlock => ErrorKind::WouldBlock.into(),",
          "556:         NetworkError::WriteZero => ErrorKind::WriteZero.into(),",
          "557:         NetworkError::TooManyOpenFiles => Error::from_raw_os_error(libc::EMFILE),",
          "558:         NetworkError::InsufficientMemory => Error::from_raw_os_error(libc::ENOMEM),",
          "559:         NetworkError::Unsupported => ErrorKind::Unsupported.into(),",
          "560:         NetworkError::UnknownError => ErrorKind::BrokenPipe.into(),",
          "561:     }",
          "562: }",
          "564: pub fn io_err_into_net_error(net_error: std::io::Error) -> NetworkError {",
          "565:     use std::io::ErrorKind;",
          "566:     match net_error.kind() {",
          "567:         ErrorKind::BrokenPipe => NetworkError::BrokenPipe,",
          "568:         ErrorKind::AlreadyExists => NetworkError::AlreadyExists,",
          "569:         ErrorKind::AddrInUse => NetworkError::AddressInUse,",
          "570:         ErrorKind::AddrNotAvailable => NetworkError::AddressNotAvailable,",
          "571:         ErrorKind::ConnectionAborted => NetworkError::ConnectionAborted,",
          "572:         ErrorKind::ConnectionRefused => NetworkError::ConnectionRefused,",
          "573:         ErrorKind::ConnectionReset => NetworkError::ConnectionReset,",
          "574:         ErrorKind::Interrupted => NetworkError::Interrupted,",
          "575:         ErrorKind::InvalidData => NetworkError::InvalidData,",
          "576:         ErrorKind::InvalidInput => NetworkError::InvalidInput,",
          "577:         ErrorKind::NotConnected => NetworkError::NotConnected,",
          "578:         ErrorKind::PermissionDenied => NetworkError::PermissionDenied,",
          "579:         ErrorKind::TimedOut => NetworkError::TimedOut,",
          "580:         ErrorKind::UnexpectedEof => NetworkError::UnexpectedEof,",
          "581:         ErrorKind::WouldBlock => NetworkError::WouldBlock,",
          "582:         ErrorKind::WriteZero => NetworkError::WriteZero,",
          "583:         ErrorKind::Unsupported => NetworkError::Unsupported,",
          "584:         _ => {",
          "585:             if let Some(code) = net_error.raw_os_error() {",
          "586:                 match code {",
          "587:                     libc::EPERM => NetworkError::PermissionDenied,",
          "588:                     libc::EBADF => NetworkError::InvalidFd,",
          "589:                     libc::ECHILD => NetworkError::InvalidFd,",
          "590:                     libc::EMFILE => NetworkError::TooManyOpenFiles,",
          "591:                     libc::EINTR => NetworkError::Interrupted,",
          "592:                     libc::EIO => NetworkError::IOError,",
          "593:                     libc::ENXIO => NetworkError::IOError,",
          "594:                     libc::EAGAIN => NetworkError::WouldBlock,",
          "595:                     libc::ENOMEM => NetworkError::InsufficientMemory,",
          "596:                     libc::EACCES => NetworkError::PermissionDenied,",
          "597:                     libc::ENODEV => NetworkError::NoDevice,",
          "598:                     libc::EINVAL => NetworkError::InvalidInput,",
          "599:                     libc::EPIPE => NetworkError::BrokenPipe,",
          "600:                     err => {",
          "601:                         tracing::trace!(\"unknown os error {}\", err);",
          "602:                         NetworkError::UnknownError",
          "603:                     }",
          "604:                 }",
          "605:             } else {",
          "606:                 NetworkError::UnknownError",
          "607:             }",
          "608:         }",
          "609:     }",
          "610: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "265ecc9b126a9ab2583792bcb93541a755059642",
      "candidate_info": {
        "commit_hash": "265ecc9b126a9ab2583792bcb93541a755059642",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/265ecc9b126a9ab2583792bcb93541a755059642",
        "files": [
          "Cargo.lock",
          "Cargo.toml",
          "lib/backend-api/Cargo.toml",
          "lib/cli/Cargo.toml",
          "lib/config/Cargo.toml",
          "lib/registry/Cargo.toml",
          "lib/wasix/Cargo.toml"
        ],
        "message": "Update wasmer-config dependency",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "6256:  \"tracing\",",
          "6257:  \"url\",",
          "6258:  \"uuid\",",
          "6260:  \"webc\",",
          "6261: ]",
          "",
          "[Removed Lines]",
          "6259:  \"wasmer-config 0.1.0\",",
          "",
          "[Added Lines]",
          "6259:  \"wasmer-config 0.1.1\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6446:  \"wasmer-compiler-cranelift\",",
          "6447:  \"wasmer-compiler-llvm\",",
          "6448:  \"wasmer-compiler-singlepass\",",
          "6450:  \"wasmer-emscripten\",",
          "6451:  \"wasmer-object\",",
          "6452:  \"wasmer-registry\",",
          "",
          "[Removed Lines]",
          "6449:  \"wasmer-config 0.1.0\",",
          "",
          "[Added Lines]",
          "6449:  \"wasmer-config 0.1.1\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6570: [[package]]",
          "6571: name = \"wasmer-config\"",
          "6572: version = \"0.1.0\"",
          "6573: dependencies = [",
          "6574:  \"anyhow\",",
          "6575:  \"bytesize\",",
          "6576:  \"derive_builder\",",
          "6577:  \"hex\",",
          "6580:  \"schemars\",",
          "6581:  \"semver 1.0.22\",",
          "6582:  \"serde\",",
          "6583:  \"serde_cbor\",",
          "6584:  \"serde_json\",",
          "6585:  \"serde_yaml 0.9.34+deprecated\",",
          "6587:  \"thiserror\",",
          "6588:  \"toml 0.8.12\",",
          "6589:  \"url\",",
          "",
          "[Removed Lines]",
          "6578:  \"indexmap 2.2.6\",",
          "6579:  \"pretty_assertions\",",
          "6586:  \"tempfile\",",
          "",
          "[Added Lines]",
          "6573: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "6574: checksum = \"0b405c9856adaf65ee91eeeeaac6fcc6b127188648c60ae4e89de63f506c74e6\"",
          "6580:  \"indexmap 1.9.3\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6592: [[package]]",
          "6593: name = \"wasmer-config\"",
          "6597: dependencies = [",
          "6598:  \"anyhow\",",
          "6599:  \"bytesize\",",
          "6600:  \"derive_builder\",",
          "6601:  \"hex\",",
          "6603:  \"schemars\",",
          "6604:  \"semver 1.0.22\",",
          "6605:  \"serde\",",
          "6606:  \"serde_cbor\",",
          "6607:  \"serde_json\",",
          "6608:  \"serde_yaml 0.9.34+deprecated\",",
          "6609:  \"thiserror\",",
          "6610:  \"toml 0.8.12\",",
          "6611:  \"url\",",
          "",
          "[Removed Lines]",
          "6594: version = \"0.1.0\"",
          "6595: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "6596: checksum = \"0b405c9856adaf65ee91eeeeaac6fcc6b127188648c60ae4e89de63f506c74e6\"",
          "6602:  \"indexmap 1.9.3\",",
          "",
          "[Added Lines]",
          "6594: version = \"0.1.1\"",
          "6600:  \"indexmap 2.2.6\",",
          "6601:  \"pretty_assertions\",",
          "6608:  \"tempfile\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6784:  \"toml 0.5.11\",",
          "6785:  \"tracing\",",
          "6786:  \"url\",",
          "6788:  \"wasmer-wasm-interface\",",
          "6789:  \"wasmparser 0.121.2\",",
          "6790:  \"webc\",",
          "",
          "[Removed Lines]",
          "6787:  \"wasmer-config 0.1.0\",",
          "",
          "[Added Lines]",
          "6787:  \"wasmer-config 0.1.1\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6918:  \"wasm-bindgen-futures\",",
          "6919:  \"wasm-bindgen-test\",",
          "6920:  \"wasmer\",",
          "6922:  \"wasmer-emscripten\",",
          "6923:  \"wasmer-journal\",",
          "6924:  \"wasmer-types\",",
          "",
          "[Removed Lines]",
          "6921:  \"wasmer-config 0.1.0\",",
          "",
          "[Added Lines]",
          "6921:  \"wasmer-config 0.1.1\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7015:  \"wasmer-compiler-cranelift\",",
          "7016:  \"wasmer-compiler-llvm\",",
          "7017:  \"wasmer-compiler-singlepass\",",
          "7019:  \"wasmer-emscripten\",",
          "7020:  \"wasmer-middlewares\",",
          "7021:  \"wasmer-types\",",
          "",
          "[Removed Lines]",
          "7018:  \"wasmer-config 0.1.0\",",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7161:  \"thiserror\",",
          "7162:  \"toml 0.7.8\",",
          "7163:  \"url\",",
          "7165: ]",
          "7167: [[package]]",
          "",
          "[Removed Lines]",
          "7164:  \"wasmer-config 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",",
          "",
          "[Added Lines]",
          "7163:  \"wasmer-config 0.1.0\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a4358de7af76b15d0d611d1f30d66d35c006fef",
      "candidate_info": {
        "commit_hash": "7a4358de7af76b15d0d611d1f30d66d35c006fef",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/7a4358de7af76b15d0d611d1f30d66d35c006fef",
        "files": [
          "Cargo.lock",
          "Cargo.toml",
          "lib/wasix/wasix-http-client/Cargo.toml",
          "lib/wasix/wasix-http-client/examples/http_client.rs",
          "lib/wasix/wasix-http-client/src/lib.rs",
          "lib/wasix/wasix-http-client/src/wasix_http_client_v1.rs"
        ],
        "message": "Add wasix_http_client Rust client library\n\nAdds a new crate \"wasix_http_client\", which is a wrapper around the WAI\ngenerated sys bindings to the wasix_http_client_v1.wai component.\n\nEnables easy http client usage from Rust code.",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock",
          "lib/wasix/wasix-http-client/examples/http_client.rs||lib/wasix/wasix-http-client/examples/http_client.rs",
          "lib/wasix/wasix-http-client/src/lib.rs||lib/wasix/wasix-http-client/src/lib.rs",
          "lib/wasix/wasix-http-client/src/wasix_http_client_v1.rs||lib/wasix/wasix-http-client/src/wasix_http_client_v1.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3914: [[package]]",
          "3915: name = \"wai-bindgen-gen-core\"",
          "3917: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3919: dependencies = [",
          "3920:  \"anyhow\",",
          "3921:  \"wai-parser\",",
          "",
          "[Removed Lines]",
          "3916: version = \"0.2.1\"",
          "3918: checksum = \"cd16a4dc5fb71faaa3d21530a1d004b7fc88f0bf70cda6f5c4099220254d947b\"",
          "",
          "[Added Lines]",
          "3916: version = \"0.2.2\"",
          "3918: checksum = \"c43a21791697e899140bb82c27db1fac26ad28ef60eddca55f05e5ca365a6e4c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3924: [[package]]",
          "3925: name = \"wai-bindgen-gen-rust\"",
          "3927: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3929: dependencies = [",
          "3930:  \"heck 0.3.3\",",
          "3931:  \"wai-bindgen-gen-core\",",
          "",
          "[Removed Lines]",
          "3926: version = \"0.2.1\"",
          "3928: checksum = \"17625f823712dd6eff5656b4308842b7aeac9eca429f6eea36443d4305cadf7d\"",
          "",
          "[Added Lines]",
          "3926: version = \"0.2.2\"",
          "3928: checksum = \"dd86fcd3046f63882137f46723c643b7cc33ea4c739c0f9999c6bd76f4ae21f2\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3934: [[package]]",
          "3935: name = \"wai-bindgen-gen-rust-wasm\"",
          "3937: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3939: dependencies = [",
          "3940:  \"heck 0.3.3\",",
          "3941:  \"wai-bindgen-gen-core\",",
          "",
          "[Removed Lines]",
          "3936: version = \"0.2.1\"",
          "3938: checksum = \"757fbff15d11d0578ee879cea209b111bd09f8b39346c7b212a7e7f52585d2f7\"",
          "",
          "[Added Lines]",
          "3936: version = \"0.2.2\"",
          "3938: checksum = \"ab8850eeef5405252a368086f0b3e0eefef4ed47666f37ff9a321ecdcfc96376\"",
          "3939: dependencies = [",
          "3940:  \"heck 0.3.3\",",
          "3941:  \"wai-bindgen-gen-core\",",
          "3942:  \"wai-bindgen-gen-rust\",",
          "3943: ]",
          "3945: [[package]]",
          "3946: name = \"wai-bindgen-gen-wasmer\"",
          "3947: version = \"0.2.2\"",
          "3948: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3949: checksum = \"34f3b3d04d56cc09616cf8daab90b5601e0e894509f34c81a3829aab03f2b457\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3945: [[package]]",
          "3946: name = \"wai-bindgen-rust\"",
          "3948: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3950: dependencies = [",
          "3951:  \"bitflags\",",
          "3952:  \"wai-bindgen-rust-impl\",",
          "3953: ]",
          "3955: [[package]]",
          "3956: name = \"wai-bindgen-rust-impl\"",
          "3958: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3960: dependencies = [",
          "3961:  \"proc-macro2\",",
          "3962:  \"syn\",",
          "",
          "[Removed Lines]",
          "3947: version = \"0.2.1\"",
          "3949: checksum = \"90e6c91f681f714599326252f4ae8b9897293110055d25c576fa09ffb01661cd\"",
          "3957: version = \"0.2.1\"",
          "3959: checksum = \"eb36c407339837a5e1fcd9b41641fbe36488fc53ab0664add14d5f7105f6fbbb\"",
          "",
          "[Added Lines]",
          "3958: version = \"0.2.2\"",
          "3960: checksum = \"de0eef889bfee6c2d1f21304b5e8c5786629827ae4f26c44e24d0e0ded80f6cd\"",
          "3962:  \"async-trait\",",
          "3969: version = \"0.2.2\"",
          "3971: checksum = \"6d3c00bda01d3cf02e9a0a6c7e6b738a6da5cbdefa92f979486f7968b74f290d\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3964:  \"wai-bindgen-gen-rust-wasm\",",
          "3965: ]",
          "3967: [[package]]",
          "3968: name = \"wai-parser\"",
          "3970: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3972: dependencies = [",
          "3973:  \"anyhow\",",
          "3974:  \"id-arena\",",
          "",
          "[Removed Lines]",
          "3969: version = \"0.2.1\"",
          "3971: checksum = \"2a24cfad91494925ba41c6a03bd7d092eb3c3cdbccf4ef680b06831030bd7a69\"",
          "",
          "[Added Lines]",
          "3979: [[package]]",
          "3980: name = \"wai-bindgen-wasmer\"",
          "3981: version = \"0.2.2\"",
          "3982: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3983: checksum = \"b69eca47105340af3e4dc5ba47951a23534d7139a62b12550cc6702a5cb6ab70\"",
          "3984: dependencies = [",
          "3985:  \"anyhow\",",
          "3986:  \"bitflags\",",
          "3987:  \"once_cell\",",
          "3988:  \"thiserror\",",
          "3989:  \"tracing\",",
          "3990:  \"wai-bindgen-wasmer-impl\",",
          "3991:  \"wasmer\",",
          "3992: ]",
          "3994: [[package]]",
          "3995: name = \"wai-bindgen-wasmer-impl\"",
          "3996: version = \"0.2.2\"",
          "3997: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3998: checksum = \"faaf3a72820d1708185cdd26eafe034e3f88d740bae27b5d852379d242d9ff68\"",
          "3999: dependencies = [",
          "4000:  \"proc-macro2\",",
          "4001:  \"syn\",",
          "4002:  \"wai-bindgen-gen-core\",",
          "4003:  \"wai-bindgen-gen-wasmer\",",
          "4004: ]",
          "4008: version = \"0.2.2\"",
          "4010: checksum = \"2811f0b0c8883f92b9c616b6c38a1b462dc37d04cfc700be60e4990497ed1f7d\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4048:  \"wast 24.0.0\",",
          "4049: ]",
          "4051: [[package]]",
          "4052: name = \"wasm-bindgen\"",
          "4053: version = \"0.2.83\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4090: [[package]]",
          "4091: name = \"wasix_http_client\"",
          "4092: version = \"0.1.0\"",
          "4093: dependencies = [",
          "4094:  \"anyhow\",",
          "4095:  \"http\",",
          "4096:  \"wai-bindgen-rust\",",
          "4097: ]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4664:  \"generational-arena\",",
          "4665:  \"getrandom\",",
          "4666:  \"hex\",",
          "4667:  \"lazy_static\",",
          "4668:  \"libc\",",
          "4669:  \"linked_hash_set\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4715:  \"http\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4734: name = \"wasmer-wasi-types\"",
          "4735: version = \"3.0.2\"",
          "4736: dependencies = [",
          "4737:  \"bitflags\",",
          "4738:  \"byteorder\",",
          "4739:  \"cfg-if 1.0.0\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4786:  \"anyhow\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4745:  \"wai-bindgen-gen-rust\",",
          "4746:  \"wai-bindgen-gen-rust-wasm\",",
          "4747:  \"wai-bindgen-rust\",",
          "4748:  \"wai-parser\",",
          "4749:  \"wasmer\",",
          "4750:  \"wasmer-derive\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4798:  \"wai-bindgen-wasmer\",",
          "",
          "---------------"
        ],
        "lib/wasix/wasix-http-client/examples/http_client.rs||lib/wasix/wasix-http-client/examples/http_client.rs": [
          "File: lib/wasix/wasix-http-client/examples/http_client.rs -> lib/wasix/wasix-http-client/examples/http_client.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: use wasix_http_client::{Body, HttpClient, RequestBuilder};",
          "3: fn main() {",
          "4:     let c = HttpClient::new().unwrap();",
          "5:     let r = RequestBuilder::new()",
          "6:         .uri(\"http://ferris2.christoph.app.wapm.dev/http-client-test\")",
          "7:         .body(Body::empty())",
          "8:         .unwrap();",
          "9:     eprintln!(\"fetching: {r:?}\");",
          "11:     let res = c.send(r).unwrap();",
          "12:     dbg!(&res);",
          "13:     assert!(res.status().is_success());",
          "15:     let body = res.into_body().read_all().unwrap();",
          "16:     let s = String::from_utf8(body).unwrap();",
          "17:     eprintln!(\"Response body: {s}\");",
          "19:     assert!(s.contains(\"http-client-test\"));",
          "20: }",
          "",
          "---------------"
        ],
        "lib/wasix/wasix-http-client/src/lib.rs||lib/wasix/wasix-http-client/src/lib.rs": [
          "File: lib/wasix/wasix-http-client/src/lib.rs -> lib/wasix/wasix-http-client/src/lib.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #[allow(dead_code)]",
          "3: mod wasix_http_client_v1;",
          "5: use anyhow::bail;",
          "7: use crate::wasix_http_client_v1 as sys;",
          "9: pub use http::{header, Method, StatusCode};",
          "11: #[derive(Clone)]",
          "12: pub struct HttpClient {",
          "13:     client: sys::Client,",
          "14: }",
          "17: impl HttpClient {",
          "18:     pub fn new() -> Result<Self, anyhow::Error> {",
          "19:         let client = sys::Client::new().map_err(anyhow::Error::msg)?;",
          "20:         Ok(Self { client })",
          "21:     }",
          "23:     pub fn send(&self, request: Request) -> Result<Response, anyhow::Error> {",
          "24:         let (parts, body) = request.into_parts();",
          "26:         let uri = parts.uri.to_string();",
          "27:         let method = match &parts.method {",
          "28:             m if m == Method::GET => sys::Method::Get,",
          "29:             m if m == Method::HEAD => sys::Method::Head,",
          "30:             m if m == Method::POST => sys::Method::Post,",
          "31:             m if m == Method::PUT => sys::Method::Put,",
          "32:             m if m == Method::DELETE => sys::Method::Delete,",
          "33:             m if m == Method::CONNECT => sys::Method::Connect,",
          "34:             m if m == Method::OPTIONS => sys::Method::Options,",
          "35:             m if m == Method::TRACE => sys::Method::Trace,",
          "36:             m if m == Method::PATCH => sys::Method::Patch,",
          "37:             m => sys::Method::Other(m.as_str()),",
          "38:         };",
          "40:         let headers: Vec<_> = parts",
          "41:             .headers",
          "42:             .iter()",
          "43:             .map(|(key, val)| sys::HeaderParam {",
          "44:                 key: key.as_str(),",
          "45:                 value: val.as_bytes(),",
          "46:             })",
          "47:             .collect();",
          "49:         let body = match &body.0 {",
          "50:             BodyInner::Data(d) => Some(sys::BodyParam::Data(&d)),",
          "51:         };",
          "53:         let req = sys::Request {",
          "54:             url: &uri,",
          "55:             method,",
          "56:             headers: &headers,",
          "57:             body,",
          "58:             timeout: None,",
          "59:             redirect_policy: None,",
          "60:         };",
          "62:         let res = self.client.send(req).map_err(anyhow::Error::msg)?;",
          "64:         let body = match res.body {",
          "65:             sys::BodyResult::Data(d) => Body::new_data(d),",
          "66:             sys::BodyResult::Fd(_) => {",
          "67:                 bail!(\"Received file descriptor response body, which is not suppported yet\");",
          "68:             }",
          "69:         };",
          "71:         let mut builder = http::Response::builder().status(res.status);",
          "72:         for param in res.headers {",
          "73:             builder = builder.header(param.key, param.value);",
          "74:         }",
          "75:         builder.body(body).map_err(anyhow::Error::from)",
          "76:     }",
          "77: }",
          "86: pub type Request = http::Request<Body>;",
          "87: pub type Response = http::Response<Body>;",
          "89: #[derive(Debug)]",
          "90: pub struct Body(BodyInner);",
          "92: impl Body {",
          "93:     pub fn empty() -> Self {",
          "94:         Self::new_data(Vec::<u8>::new())",
          "95:     }",
          "97:     pub fn new_data<I>(data: I) -> Self",
          "98:     where",
          "99:         I: Into<Vec<u8>>,",
          "100:     {",
          "101:         Self(BodyInner::Data(data.into()))",
          "102:     }",
          "104:     pub fn read_all(self) -> Result<Vec<u8>, anyhow::Error> {",
          "105:         match self.0 {",
          "106:             BodyInner::Data(d) => Ok(d),",
          "107:         }",
          "108:     }",
          "109: }",
          "111: #[derive(Debug)]",
          "112: pub enum BodyInner {",
          "113:     Data(Vec<u8>),",
          "114: }",
          "116: impl From<Vec<u8>> for Body {",
          "117:     fn from(value: Vec<u8>) -> Self {",
          "118:         Self(BodyInner::Data(value))",
          "119:     }",
          "120: }",
          "122: impl<'a> From<&'a [u8]> for Body {",
          "123:     fn from(value: &'a [u8]) -> Self {",
          "124:         Self(BodyInner::Data(value.to_vec()))",
          "125:     }",
          "126: }",
          "128: impl From<String> for Body {",
          "129:     fn from(value: String) -> Self {",
          "130:         Self(BodyInner::Data(value.into_bytes()))",
          "131:     }",
          "132: }",
          "134: impl<'a> From<&'a str> for Body {",
          "135:     fn from(value: &'a str) -> Self {",
          "136:         Self(BodyInner::Data(value.as_bytes().to_vec()))",
          "137:     }",
          "138: }",
          "140: pub type RequestBuilder = http::request::Builder;",
          "",
          "---------------"
        ],
        "lib/wasix/wasix-http-client/src/wasix_http_client_v1.rs||lib/wasix/wasix-http-client/src/wasix_http_client_v1.rs": [
          "File: lib/wasix/wasix-http-client/src/wasix_http_client_v1.rs -> lib/wasix/wasix-http-client/src/wasix_http_client_v1.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #[derive(Clone)]",
          "2: pub enum Method<'a> {",
          "3:     Get,",
          "4:     Head,",
          "5:     Post,",
          "6:     Put,",
          "7:     Delete,",
          "8:     Connect,",
          "9:     Options,",
          "10:     Trace,",
          "11:     Patch,",
          "12:     Other(&'a str),",
          "13: }",
          "14: impl<'a> core::fmt::Debug for Method<'a> {",
          "15:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "16:         match self {",
          "17:             Method::Get => f.debug_tuple(\"Method::Get\").finish(),",
          "18:             Method::Head => f.debug_tuple(\"Method::Head\").finish(),",
          "19:             Method::Post => f.debug_tuple(\"Method::Post\").finish(),",
          "20:             Method::Put => f.debug_tuple(\"Method::Put\").finish(),",
          "21:             Method::Delete => f.debug_tuple(\"Method::Delete\").finish(),",
          "22:             Method::Connect => f.debug_tuple(\"Method::Connect\").finish(),",
          "23:             Method::Options => f.debug_tuple(\"Method::Options\").finish(),",
          "24:             Method::Trace => f.debug_tuple(\"Method::Trace\").finish(),",
          "25:             Method::Patch => f.debug_tuple(\"Method::Patch\").finish(),",
          "26:             Method::Other(e) => f.debug_tuple(\"Method::Other\").field(e).finish(),",
          "27:         }",
          "28:     }",
          "29: }",
          "30: #[derive(Clone)]",
          "31: pub struct HeaderParam<'a> {",
          "32:     pub key: &'a str,",
          "33:     pub value: &'a [u8],",
          "34: }",
          "35: impl<'a> core::fmt::Debug for HeaderParam<'a> {",
          "36:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "37:         f.debug_struct(\"HeaderParam\")",
          "38:             .field(\"key\", &self.key)",
          "39:             .field(\"value\", &self.value)",
          "40:             .finish()",
          "41:     }",
          "42: }",
          "43: #[derive(Clone)]",
          "44: pub struct HeaderResult {",
          "45:     pub key: String,",
          "46:     pub value: Vec<u8>,",
          "47: }",
          "48: impl core::fmt::Debug for HeaderResult {",
          "49:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "50:         f.debug_struct(\"HeaderResult\")",
          "51:             .field(\"key\", &self.key)",
          "52:             .field(\"value\", &self.value)",
          "53:             .finish()",
          "54:     }",
          "55: }",
          "56: pub type HeaderListParam<'a> = &'a [HeaderParam<'a>];",
          "57: pub type HeaderListResult = Vec<HeaderResult>;",
          "58: pub type Fd = u32;",
          "59: pub type TimeoutMs = u32;",
          "60: #[repr(C)]",
          "61: #[derive(Copy, Clone)]",
          "62: pub struct RedirectFollow {",
          "63:     pub max: u32,",
          "64: }",
          "65: impl core::fmt::Debug for RedirectFollow {",
          "66:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "67:         f.debug_struct(\"RedirectFollow\")",
          "68:             .field(\"max\", &self.max)",
          "69:             .finish()",
          "70:     }",
          "71: }",
          "72: #[derive(Clone, Copy)]",
          "73: pub enum RedirectPolicy {",
          "74:     NoFollow,",
          "75:     Follow(RedirectFollow),",
          "76: }",
          "77: impl core::fmt::Debug for RedirectPolicy {",
          "78:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "79:         match self {",
          "80:             RedirectPolicy::NoFollow => f.debug_tuple(\"RedirectPolicy::NoFollow\").finish(),",
          "81:             RedirectPolicy::Follow(e) => f.debug_tuple(\"RedirectPolicy::Follow\").field(e).finish(),",
          "82:         }",
          "83:     }",
          "84: }",
          "85: #[derive(Clone)]",
          "86: pub enum BodyParam<'a> {",
          "87:     Data(&'a [u8]),",
          "88:     Fd(Fd),",
          "89: }",
          "90: impl<'a> core::fmt::Debug for BodyParam<'a> {",
          "91:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "92:         match self {",
          "93:             BodyParam::Data(e) => f.debug_tuple(\"BodyParam::Data\").field(e).finish(),",
          "94:             BodyParam::Fd(e) => f.debug_tuple(\"BodyParam::Fd\").field(e).finish(),",
          "95:         }",
          "96:     }",
          "97: }",
          "98: #[derive(Clone)]",
          "99: pub enum BodyResult {",
          "100:     Data(Vec<u8>),",
          "101:     Fd(Fd),",
          "102: }",
          "103: impl core::fmt::Debug for BodyResult {",
          "104:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "105:         match self {",
          "106:             BodyResult::Data(e) => f.debug_tuple(\"BodyResult::Data\").field(e).finish(),",
          "107:             BodyResult::Fd(e) => f.debug_tuple(\"BodyResult::Fd\").field(e).finish(),",
          "108:         }",
          "109:     }",
          "110: }",
          "111: #[derive(Clone)]",
          "112: pub struct Request<'a> {",
          "113:     pub url: &'a str,",
          "114:     pub method: Method<'a>,",
          "115:     pub headers: HeaderListParam<'a>,",
          "116:     pub body: Option<BodyParam<'a>>,",
          "117:     pub timeout: Option<TimeoutMs>,",
          "118:     pub redirect_policy: Option<RedirectPolicy>,",
          "119: }",
          "120: impl<'a> core::fmt::Debug for Request<'a> {",
          "121:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "122:         f.debug_struct(\"Request\")",
          "123:             .field(\"url\", &self.url)",
          "124:             .field(\"method\", &self.method)",
          "125:             .field(\"headers\", &self.headers)",
          "126:             .field(\"body\", &self.body)",
          "127:             .field(\"timeout\", &self.timeout)",
          "128:             .field(\"redirect-policy\", &self.redirect_policy)",
          "129:             .finish()",
          "130:     }",
          "131: }",
          "132: #[derive(Clone)]",
          "133: pub struct Response {",
          "134:     pub status: u16,",
          "135:     pub headers: HeaderListResult,",
          "136:     pub body: BodyResult,",
          "137:     pub redirect_urls: Option<Vec<String>>,",
          "138: }",
          "139: impl core::fmt::Debug for Response {",
          "140:     fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
          "141:         f.debug_struct(\"Response\")",
          "142:             .field(\"status\", &self.status)",
          "143:             .field(\"headers\", &self.headers)",
          "144:             .field(\"body\", &self.body)",
          "145:             .field(\"redirect-urls\", &self.redirect_urls)",
          "146:             .finish()",
          "147:     }",
          "148: }",
          "149: #[derive(Debug)]",
          "150: #[repr(transparent)]",
          "151: pub struct Client(i32);",
          "152: impl Client {",
          "153:     pub unsafe fn from_raw(raw: i32) -> Self {",
          "154:         Self(raw)",
          "155:     }",
          "157:     pub fn into_raw(self) -> i32 {",
          "158:         let ret = self.0;",
          "159:         core::mem::forget(self);",
          "160:         return ret;",
          "161:     }",
          "163:     pub fn as_raw(&self) -> i32 {",
          "164:         self.0",
          "165:     }",
          "166: }",
          "167: impl Drop for Client {",
          "168:     fn drop(&mut self) {",
          "169:         #[link(wasm_import_module = \"canonical_abi\")]",
          "170:         extern \"C\" {",
          "171:             #[link_name = \"resource_drop_client\"]",
          "172:             fn close(fd: i32);",
          "173:         }",
          "174:         unsafe {",
          "175:             close(self.0);",
          "176:         }",
          "177:     }",
          "178: }",
          "179: impl Clone for Client {",
          "180:     fn clone(&self) -> Self {",
          "181:         #[link(wasm_import_module = \"canonical_abi\")]",
          "182:         extern \"C\" {",
          "183:             #[link_name = \"resource_clone_client\"]",
          "184:             fn clone(val: i32) -> i32;",
          "185:         }",
          "186:         unsafe { Self(clone(self.0)) }",
          "187:     }",
          "188: }",
          "189: impl Client {",
          "190:     pub fn new() -> Result<Client, String> {",
          "191:         unsafe {",
          "192:             let ptr0 = WASIX_HTTP_CLIENT_V1_RET_AREA.0.as_mut_ptr() as i32;",
          "193:             #[link(wasm_import_module = \"wasix_http_client_v1\")]",
          "194:             extern \"C\" {",
          "195:                 #[cfg_attr(target_arch = \"wasm32\", link_name = \"client::new\")]",
          "196:                 #[cfg_attr(",
          "197:                     not(target_arch = \"wasm32\"),",
          "198:                     link_name = \"wasix_http_client_v1_client::new\"",
          "199:                 )]",
          "200:                 fn wai_import(_: i32);",
          "201:             }",
          "202:             wai_import(ptr0);",
          "203:             match i32::from(*((ptr0 + 0) as *const u8)) {",
          "204:                 0 => Ok(Client(*((ptr0 + 4) as *const i32))),",
          "205:                 1 => Err({",
          "206:                     let len1 = *((ptr0 + 8) as *const i32) as usize;",
          "208:                     String::from_utf8(Vec::from_raw_parts(",
          "210:                         len1,",
          "211:                         len1,",
          "212:                     ))",
          "213:                     .unwrap()",
          "214:                 }),",
          "215:                 _ => panic!(\"invalid enum discriminant\"),",
          "216:             }",
          "217:         }",
          "218:     }",
          "219: }",
          "220: impl Client {",
          "221:     pub fn send(&self, request: Request<'_>) -> Result<Response, String> {",
          "222:         unsafe {",
          "223:             let ptr0 = WASIX_HTTP_CLIENT_V1_RET_AREA.0.as_mut_ptr() as i32;",
          "225:             let Request {",
          "226:                 url: url1,",
          "227:                 method: method1,",
          "228:                 headers: headers1,",
          "229:                 body: body1,",
          "230:                 timeout: timeout1,",
          "231:                 redirect_policy: redirect_policy1,",
          "232:             } = request;",
          "233:             let vec2 = url1;",
          "234:             let ptr2 = vec2.as_ptr() as i32;",
          "235:             let len2 = vec2.len() as i32;",
          "238:             match method1 {",
          "239:                 Method::Get => {",
          "240:                     let e = ();",
          "241:                     {",
          "243:                         let () = e;",
          "244:                     }",
          "245:                 }",
          "246:                 Method::Head => {",
          "247:                     let e = ();",
          "248:                     {",
          "250:                         let () = e;",
          "251:                     }",
          "252:                 }",
          "253:                 Method::Post => {",
          "254:                     let e = ();",
          "255:                     {",
          "257:                         let () = e;",
          "258:                     }",
          "259:                 }",
          "260:                 Method::Put => {",
          "261:                     let e = ();",
          "262:                     {",
          "264:                         let () = e;",
          "265:                     }",
          "266:                 }",
          "267:                 Method::Delete => {",
          "268:                     let e = ();",
          "269:                     {",
          "271:                         let () = e;",
          "272:                     }",
          "273:                 }",
          "274:                 Method::Connect => {",
          "275:                     let e = ();",
          "276:                     {",
          "278:                         let () = e;",
          "279:                     }",
          "280:                 }",
          "281:                 Method::Options => {",
          "282:                     let e = ();",
          "283:                     {",
          "285:                         let () = e;",
          "286:                     }",
          "287:                 }",
          "288:                 Method::Trace => {",
          "289:                     let e = ();",
          "290:                     {",
          "292:                         let () = e;",
          "293:                     }",
          "294:                 }",
          "295:                 Method::Patch => {",
          "296:                     let e = ();",
          "297:                     {",
          "299:                         let () = e;",
          "300:                     }",
          "301:                 }",
          "302:                 Method::Other(e) => {",
          "304:                     let vec3 = e;",
          "305:                     let ptr3 = vec3.as_ptr() as i32;",
          "306:                     let len3 = vec3.len() as i32;",
          "309:                 }",
          "310:             };",
          "311:             let vec7 = headers1;",
          "312:             let len7 = vec7.len() as i32;",
          "313:             let layout7 = core::alloc::Layout::from_size_align_unchecked(vec7.len() * 16, 4);",
          "314:             let result7 = std::alloc::alloc(layout7);",
          "315:             if result7.is_null() {",
          "316:                 std::alloc::handle_alloc_error(layout7);",
          "317:             }",
          "318:             for (i, e) in vec7.into_iter().enumerate() {",
          "319:                 let base = result7 as i32 + (i as i32) * 16;",
          "320:                 {",
          "321:                     let HeaderParam {",
          "322:                         key: key4,",
          "323:                         value: value4,",
          "324:                     } = e;",
          "325:                     let vec5 = key4;",
          "326:                     let ptr5 = vec5.as_ptr() as i32;",
          "327:                     let len5 = vec5.len() as i32;",
          "330:                     let vec6 = value4;",
          "331:                     let ptr6 = vec6.as_ptr() as i32;",
          "332:                     let len6 = vec6.len() as i32;",
          "335:                 }",
          "336:             }",
          "339:             match body1 {",
          "340:                 Some(e) => {",
          "342:                     match e {",
          "343:                         BodyParam::Data(e) => {",
          "345:                             let vec8 = e;",
          "346:                             let ptr8 = vec8.as_ptr() as i32;",
          "347:                             let len8 = vec8.len() as i32;",
          "350:                         }",
          "351:                         BodyParam::Fd(e) => {",
          "354:                         }",
          "355:                     };",
          "356:                 }",
          "357:                 None => {",
          "358:                     let e = ();",
          "359:                     {",
          "361:                         let () = e;",
          "362:                     }",
          "363:                 }",
          "364:             };",
          "365:             match timeout1 {",
          "366:                 Some(e) => {",
          "369:                 }",
          "370:                 None => {",
          "371:                     let e = ();",
          "372:                     {",
          "374:                         let () = e;",
          "375:                     }",
          "376:                 }",
          "377:             };",
          "378:             match redirect_policy1 {",
          "379:                 Some(e) => {",
          "381:                     match e {",
          "382:                         RedirectPolicy::NoFollow => {",
          "383:                             let e = ();",
          "384:                             {",
          "386:                                 let () = e;",
          "387:                             }",
          "388:                         }",
          "389:                         RedirectPolicy::Follow(e) => {",
          "391:                             let RedirectFollow { max: max9 } = e;",
          "393:                         }",
          "394:                     };",
          "395:                 }",
          "396:                 None => {",
          "397:                     let e = ();",
          "398:                     {",
          "400:                         let () = e;",
          "401:                     }",
          "402:                 }",
          "403:             };",
          "404:             let ptr10 = WASIX_HTTP_CLIENT_V1_RET_AREA.0.as_mut_ptr() as i32;",
          "405:             #[link(wasm_import_module = \"wasix_http_client_v1\")]",
          "406:             extern \"C\" {",
          "407:                 #[cfg_attr(target_arch = \"wasm32\", link_name = \"client::send\")]",
          "408:                 #[cfg_attr(",
          "409:                     not(target_arch = \"wasm32\"),",
          "410:                     link_name = \"wasix_http_client_v1_client::send\"",
          "411:                 )]",
          "412:                 fn wai_import(_: i32, _: i32);",
          "413:             }",
          "414:             wai_import(ptr0, ptr10);",
          "415:             std::alloc::dealloc(result7, layout7);",
          "416:             match i32::from(*((ptr10 + 0) as *const u8)) {",
          "417:                 0 => Ok({",
          "418:                     let base13 = *((ptr10 + 8) as *const i32);",
          "419:                     let len13 = *((ptr10 + 12) as *const i32);",
          "420:                     let mut result13 = Vec::with_capacity(len13 as usize);",
          "421:                     for i in 0..len13 {",
          "422:                         let base = base13 + i * 16;",
          "423:                         result13.push({",
          "424:                             let len11 = *((base + 4) as *const i32) as usize;",
          "425:                             let len12 = *((base + 12) as *const i32) as usize;",
          "427:                             HeaderResult {",
          "428:                                 key: String::from_utf8(Vec::from_raw_parts(",
          "430:                                     len11,",
          "431:                                     len11,",
          "432:                                 ))",
          "433:                                 .unwrap(),",
          "434:                                 value: Vec::from_raw_parts(",
          "436:                                     len12,",
          "437:                                     len12,",
          "438:                                 ),",
          "439:                             }",
          "440:                         });",
          "441:                     }",
          "442:                     std::alloc::dealloc(",
          "443:                         base13 as *mut _,",
          "444:                         std::alloc::Layout::from_size_align_unchecked((len13 as usize) * 16, 4),",
          "445:                     );",
          "447:                     Response {",
          "448:                         status: i32::from(*((ptr10 + 4) as *const u16)) as u16,",
          "449:                         headers: result13,",
          "450:                         body: match i32::from(*((ptr10 + 16) as *const u8)) {",
          "451:                             0 => BodyResult::Data({",
          "452:                                 let len14 = *((ptr10 + 24) as *const i32) as usize;",
          "454:                                 Vec::from_raw_parts(",
          "456:                                     len14,",
          "457:                                     len14,",
          "458:                                 )",
          "459:                             }),",
          "460:                             1 => BodyResult::Fd(*((ptr10 + 20) as *const i32) as u32),",
          "461:                             _ => panic!(\"invalid enum discriminant\"),",
          "462:                         },",
          "463:                         redirect_urls: match i32::from(*((ptr10 + 28) as *const u8)) {",
          "464:                             0 => None,",
          "465:                             1 => Some({",
          "466:                                 let base16 = *((ptr10 + 32) as *const i32);",
          "467:                                 let len16 = *((ptr10 + 36) as *const i32);",
          "468:                                 let mut result16 = Vec::with_capacity(len16 as usize);",
          "469:                                 for i in 0..len16 {",
          "470:                                     let base = base16 + i * 8;",
          "471:                                     result16.push({",
          "472:                                         let len15 = *((base + 4) as *const i32) as usize;",
          "474:                                         String::from_utf8(Vec::from_raw_parts(",
          "476:                                             len15,",
          "477:                                             len15,",
          "478:                                         ))",
          "479:                                         .unwrap()",
          "480:                                     });",
          "481:                                 }",
          "482:                                 std::alloc::dealloc(",
          "483:                                     base16 as *mut _,",
          "484:                                     std::alloc::Layout::from_size_align_unchecked(",
          "485:                                         (len16 as usize) * 8,",
          "486:                                         4,",
          "487:                                     ),",
          "488:                                 );",
          "490:                                 result16",
          "491:                             }),",
          "492:                             _ => panic!(\"invalid enum discriminant\"),",
          "493:                         },",
          "494:                     }",
          "495:                 }),",
          "496:                 1 => Err({",
          "497:                     let len17 = *((ptr10 + 8) as *const i32) as usize;",
          "499:                     String::from_utf8(Vec::from_raw_parts(",
          "501:                         len17,",
          "502:                         len17,",
          "503:                     ))",
          "504:                     .unwrap()",
          "505:                 }),",
          "506:                 _ => panic!(\"invalid enum discriminant\"),",
          "507:             }",
          "508:         }",
          "509:     }",
          "510: }",
          "512: #[repr(align(4))]",
          "513: struct RetArea([u8; 68]);",
          "514: static mut WASIX_HTTP_CLIENT_V1_RET_AREA: RetArea = RetArea([0; 68]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fe370605b1437198693125df3fe64b4311b3727b",
      "candidate_info": {
        "commit_hash": "fe370605b1437198693125df3fe64b4311b3727b",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/fe370605b1437198693125df3fe64b4311b3727b",
        "files": [
          "Cargo.lock",
          "Cargo.toml",
          "lib/sys-utils/Cargo.toml",
          "lib/sys-utils/src/lib.rs"
        ],
        "message": "Add an empty wasmer-sys-utils crate\n\nThis crate will hold utility functionality that doesn't fit well\nanywhere else.",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock",
          "lib/sys-utils/src/lib.rs||lib/sys-utils/src/lib.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "4945:  \"whoami\",",
          "4946: ]",
          "4948: [[package]]",
          "4949: name = \"wasmer-toml\"",
          "4950: version = \"0.6.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4948: [[package]]",
          "4949: name = \"wasmer-sys-utils\"",
          "4950: version = \"3.2.0-alpha.1\"",
          "",
          "---------------"
        ],
        "lib/sys-utils/src/lib.rs||lib/sys-utils/src/lib.rs": [
          "File: lib/sys-utils/src/lib.rs -> lib/sys-utils/src/lib.rs"
        ]
      }
    },
    {
      "candidate_hash": "5eeda455a4c3928cfc13760e3515020543d4cd58",
      "candidate_info": {
        "commit_hash": "5eeda455a4c3928cfc13760e3515020543d4cd58",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/5eeda455a4c3928cfc13760e3515020543d4cd58",
        "files": [
          "CHANGELOG.md",
          "Cargo.lock",
          "Cargo.toml",
          "lib/api/Cargo.toml",
          "lib/api/macro-wasmer-universal-test/Cargo.toml",
          "lib/c-api/Cargo.toml",
          "lib/c-api/examples/wasmer-capi-examples-runner/Cargo.toml",
          "lib/c-api/tests/wasmer-c-api-test-runner/Cargo.toml",
          "lib/cache/Cargo.toml",
          "lib/cli-compiler/Cargo.toml",
          "lib/cli/Cargo.toml",
          "lib/compiler-cranelift/Cargo.toml",
          "lib/compiler-llvm/Cargo.toml",
          "lib/compiler-singlepass/Cargo.toml",
          "lib/compiler/Cargo.toml",
          "lib/derive/Cargo.toml",
          "lib/emscripten/Cargo.toml",
          "lib/middlewares/Cargo.toml",
          "lib/object/Cargo.toml",
          "lib/registry/Cargo.toml",
          "lib/sys-utils/Cargo.toml",
          "lib/types/Cargo.toml",
          "lib/vm/Cargo.toml",
          "lib/wai-bindgen-wasmer/Cargo.toml",
          "lib/wasi-experimental-io-devices/Cargo.toml",
          "lib/wasi-types/Cargo.toml",
          "lib/wasi/Cargo.toml",
          "lib/wasm-interface/Cargo.toml",
          "scripts/update-version.py",
          "scripts/windows-installer/wasmer.iss",
          "tests/integration/cli/Cargo.toml",
          "tests/integration/ios/Cargo.toml",
          "tests/lib/wast/Cargo.toml",
          "tests/wasi-wast/Cargo.toml"
        ],
        "message": "Release 3.3.0 (#3842)\n\n* Update CHANGELOG\n\n* Release 3.3.0\n\n* Added sumup of the version in CHANGELOG.md\n\n* Update other crate versions",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock",
          "scripts/update-version.py||scripts/update-version.py",
          "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock",
            "scripts/update-version.py||scripts/update-version.py",
            "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock",
            "scripts/update-version.py||scripts/update-version.py",
            "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "2249: [[package]]",
          "2250: name = \"macro-wasmer-universal-test\"",
          "2252: dependencies = [",
          "2253:  \"proc-macro2\",",
          "2254:  \"proc-quote\",",
          "",
          "[Removed Lines]",
          "2251: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "2251: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4842: [[package]]",
          "4843: name = \"wai-bindgen-wasmer\"",
          "4845: dependencies = [",
          "4846:  \"anyhow\",",
          "4847:  \"async-trait\",",
          "",
          "[Removed Lines]",
          "4844: version = \"0.3.1\"",
          "",
          "[Added Lines]",
          "4844: version = \"0.4.0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4936:  \"url\",",
          "4937:  \"validator\",",
          "4938:  \"wapm-toml\",",
          "4940:  \"webc\",",
          "4941: ]",
          "",
          "[Removed Lines]",
          "4939:  \"wasmer-registry 4.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",",
          "",
          "[Added Lines]",
          "4939:  \"wasmer-registry 4.4.1\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4965: [[package]]",
          "4966: name = \"wasi-test-generator\"",
          "4968: dependencies = [",
          "4969:  \"glob\",",
          "4970:  \"gumdrop\",",
          "",
          "[Removed Lines]",
          "4967: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "4967: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5178: [[package]]",
          "5179: name = \"wasmer\"",
          "5181: dependencies = [",
          "5182:  \"anyhow\",",
          "5183:  \"bytes\",",
          "",
          "[Removed Lines]",
          "5180: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5180: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5231: [[package]]",
          "5232: name = \"wasmer-c-api\"",
          "5234: dependencies = [",
          "5235:  \"cbindgen\",",
          "5236:  \"cfg-if 1.0.0\",",
          "",
          "[Removed Lines]",
          "5233: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5233: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5259: [[package]]",
          "5260: name = \"wasmer-c-api-test-runner\"",
          "5262: dependencies = [",
          "5263:  \"cc\",",
          "5264:  \"regex\",",
          "",
          "[Removed Lines]",
          "5261: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5261: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5269: [[package]]",
          "5270: name = \"wasmer-cache\"",
          "5272: dependencies = [",
          "5273:  \"blake3\",",
          "5274:  \"criterion\",",
          "",
          "[Removed Lines]",
          "5271: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5271: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5283: [[package]]",
          "5284: name = \"wasmer-capi-examples-runner\"",
          "5286: dependencies = [",
          "5287:  \"cc\",",
          "5288:  \"regex\",",
          "",
          "[Removed Lines]",
          "5285: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5285: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5293: [[package]]",
          "5294: name = \"wasmer-cli\"",
          "5296: dependencies = [",
          "5297:  \"anyhow\",",
          "5298:  \"atty\",",
          "",
          "[Removed Lines]",
          "5295: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5295: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5346:  \"wasmer-compiler-singlepass\",",
          "5347:  \"wasmer-emscripten\",",
          "5348:  \"wasmer-object\",",
          "5350:  \"wasmer-toml\",",
          "5351:  \"wasmer-types\",",
          "5352:  \"wasmer-vm\",",
          "",
          "[Removed Lines]",
          "5349:  \"wasmer-registry 4.4.1\",",
          "",
          "[Added Lines]",
          "5349:  \"wasmer-registry 4.5.0\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5359: [[package]]",
          "5360: name = \"wasmer-compiler\"",
          "5362: dependencies = [",
          "5363:  \"backtrace\",",
          "5364:  \"cfg-if 1.0.0\",",
          "",
          "[Removed Lines]",
          "5361: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5361: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "5384: [[package]]",
          "5385: name = \"wasmer-compiler-cli\"",
          "5387: dependencies = [",
          "5388:  \"anyhow\",",
          "5389:  \"atty\",",
          "",
          "[Removed Lines]",
          "5386: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5386: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5405: [[package]]",
          "5406: name = \"wasmer-compiler-cranelift\"",
          "5408: dependencies = [",
          "5409:  \"cranelift-codegen\",",
          "5410:  \"cranelift-entity\",",
          "",
          "[Removed Lines]",
          "5407: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5407: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "5424: [[package]]",
          "5425: name = \"wasmer-compiler-llvm\"",
          "5427: dependencies = [",
          "5428:  \"byteorder\",",
          "5429:  \"cc\",",
          "",
          "[Removed Lines]",
          "5426: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5426: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "5446: [[package]]",
          "5447: name = \"wasmer-compiler-singlepass\"",
          "5449: dependencies = [",
          "5450:  \"byteorder\",",
          "5451:  \"dynasm\",",
          "",
          "[Removed Lines]",
          "5448: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5448: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "5465: [[package]]",
          "5466: name = \"wasmer-derive\"",
          "5468: dependencies = [",
          "5469:  \"compiletest_rs\",",
          "5470:  \"proc-macro-error\",",
          "",
          "[Removed Lines]",
          "5467: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5467: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "5477: [[package]]",
          "5478: name = \"wasmer-emscripten\"",
          "5480: dependencies = [",
          "5481:  \"byteorder\",",
          "5482:  \"getrandom\",",
          "",
          "[Removed Lines]",
          "5479: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5479: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5519: [[package]]",
          "5520: name = \"wasmer-integration-tests-cli\"",
          "5522: dependencies = [",
          "5523:  \"anyhow\",",
          "5524:  \"assert_cmd 2.0.11\",",
          "",
          "[Removed Lines]",
          "5521: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5521: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "5543: [[package]]",
          "5544: name = \"wasmer-integration-tests-ios\"",
          "5547: [[package]]",
          "5548: name = \"wasmer-middlewares\"",
          "5550: dependencies = [",
          "5551:  \"wasmer\",",
          "5552:  \"wasmer-types\",",
          "",
          "[Removed Lines]",
          "5545: version = \"3.2.1\"",
          "5549: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5545: version = \"3.3.0\"",
          "5549: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "5556: [[package]]",
          "5557: name = \"wasmer-object\"",
          "5559: dependencies = [",
          "5560:  \"object 0.28.4\",",
          "5561:  \"thiserror\",",
          "",
          "[Removed Lines]",
          "5558: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5558: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "5565: [[package]]",
          "5566: name = \"wasmer-registry\"",
          "5567: version = \"4.4.1\"",
          "5568: dependencies = [",
          "5569:  \"anyhow\",",
          "5570:  \"console\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5568: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5569: checksum = \"3755828724411cf033732d4d83ee6c20e6289e38bb1bae80e59cb8027249215a\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5575:  \"futures-util\",",
          "5576:  \"graphql_client\",",
          "5577:  \"hex\",",
          "5579:  \"indicatif\",",
          "5580:  \"lazy_static\",",
          "5581:  \"log\",",
          "5582:  \"lzma-rs\",",
          "5585:  \"regex\",",
          "5586:  \"reqwest\",",
          "5589:  \"semver 1.0.17\",",
          "5590:  \"serde\",",
          "5591:  \"serde_json\",",
          "5592:  \"tar\",",
          "5593:  \"tempfile\",",
          "5594:  \"thiserror\",",
          "5596:  \"tldextract\",",
          "5597:  \"tokio\",",
          "5598:  \"toml\",",
          "5599:  \"url\",",
          "5600:  \"wasmer-toml\",",
          "5603:  \"webc\",",
          "5604:  \"whoami\",",
          "5605: ]",
          "5607: [[package]]",
          "5608: name = \"wasmer-registry\"",
          "5612: dependencies = [",
          "5613:  \"anyhow\",",
          "5614:  \"console\",",
          "",
          "[Removed Lines]",
          "5578:  \"indexmap\",",
          "5583:  \"minisign\",",
          "5584:  \"rand\",",
          "5587:  \"rpassword\",",
          "5588:  \"rusqlite\",",
          "5595:  \"time 0.3.20\",",
          "5601:  \"wasmer-wasm-interface\",",
          "5602:  \"wasmparser 0.51.4\",",
          "5609: version = \"4.4.1\"",
          "5610: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5611: checksum = \"3755828724411cf033732d4d83ee6c20e6289e38bb1bae80e59cb8027249215a\"",
          "",
          "[Added Lines]",
          "5603: version = \"4.5.0\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5619:  \"futures-util\",",
          "5620:  \"graphql_client\",",
          "5621:  \"hex\",",
          "5622:  \"indicatif\",",
          "5623:  \"lazy_static\",",
          "5624:  \"log\",",
          "5625:  \"lzma-rs\",",
          "5626:  \"regex\",",
          "5627:  \"reqwest\",",
          "5628:  \"semver 1.0.17\",",
          "5629:  \"serde\",",
          "5630:  \"serde_json\",",
          "5631:  \"tar\",",
          "5632:  \"tempfile\",",
          "5633:  \"thiserror\",",
          "5634:  \"tldextract\",",
          "5635:  \"tokio\",",
          "5636:  \"toml\",",
          "5637:  \"url\",",
          "5638:  \"wasmer-toml\",",
          "5639:  \"webc\",",
          "5640:  \"whoami\",",
          "5641: ]",
          "5643: [[package]]",
          "5644: name = \"wasmer-sys-utils\"",
          "5646: dependencies = [",
          "5647:  \"libc\",",
          "5648:  \"region\",",
          "",
          "[Removed Lines]",
          "5645: version = \"0.3.1\"",
          "",
          "[Added Lines]",
          "5614:  \"indexmap\",",
          "5619:  \"minisign\",",
          "5620:  \"rand\",",
          "5623:  \"rpassword\",",
          "5624:  \"rusqlite\",",
          "5631:  \"time 0.3.20\",",
          "5637:  \"wasmer-wasm-interface\",",
          "5638:  \"wasmparser 0.51.4\",",
          "5645: version = \"0.4.0\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "5674: [[package]]",
          "5675: name = \"wasmer-types\"",
          "5677: dependencies = [",
          "5678:  \"bytecheck\",",
          "5679:  \"enum-iterator\",",
          "",
          "[Removed Lines]",
          "5676: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5676: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "5691: [[package]]",
          "5692: name = \"wasmer-vm\"",
          "5694: dependencies = [",
          "5695:  \"backtrace\",",
          "5696:  \"cc\",",
          "",
          "[Removed Lines]",
          "5693: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5693: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5718: [[package]]",
          "5719: name = \"wasmer-wasix\"",
          "5721: dependencies = [",
          "5722:  \"anyhow\",",
          "5723:  \"async-trait\",",
          "",
          "[Removed Lines]",
          "5720: version = \"0.3.1\"",
          "",
          "[Added Lines]",
          "5720: version = \"0.4.0\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5779: [[package]]",
          "5780: name = \"wasmer-wasix-experimental-io-devices\"",
          "5782: dependencies = [",
          "5783:  \"minifb\",",
          "5784:  \"nix 0.25.1\",",
          "",
          "[Removed Lines]",
          "5781: version = \"0.3.1\"",
          "",
          "[Added Lines]",
          "5781: version = \"0.4.0\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "5794: [[package]]",
          "5795: name = \"wasmer-wasix-types\"",
          "5797: dependencies = [",
          "5798:  \"anyhow\",",
          "5799:  \"bitflags\",",
          "",
          "[Removed Lines]",
          "5796: version = \"0.3.1\"",
          "",
          "[Added Lines]",
          "5796: version = \"0.4.0\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "5816: [[package]]",
          "5817: name = \"wasmer-wasm-interface\"",
          "5819: dependencies = [",
          "5820:  \"bincode\",",
          "5821:  \"either\",",
          "",
          "[Removed Lines]",
          "5818: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5818: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "5828: [[package]]",
          "5829: name = \"wasmer-wast\"",
          "5831: dependencies = [",
          "5832:  \"anyhow\",",
          "5833:  \"serde\",",
          "",
          "[Removed Lines]",
          "5830: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5830: version = \"3.3.0\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "5843: [[package]]",
          "5844: name = \"wasmer-workspace\"",
          "5846: dependencies = [",
          "5847:  \"anyhow\",",
          "5848:  \"build-deps\",",
          "",
          "[Removed Lines]",
          "5845: version = \"3.2.1\"",
          "",
          "[Added Lines]",
          "5845: version = \"3.3.0\"",
          "",
          "---------------"
        ],
        "scripts/update-version.py||scripts/update-version.py": [
          "File: scripts/update-version.py -> scripts/update-version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/python",
          "6: import os",
          "7: import re",
          "",
          "[Removed Lines]",
          "3: PREVIOUS_VERSION='3.2.0'",
          "4: NEXT_VERSION='3.2.1'",
          "",
          "[Added Lines]",
          "3: PREVIOUS_VERSION='3.2.1'",
          "4: NEXT_VERSION='3.3.0'",
          "",
          "---------------"
        ],
        "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss": [
          "File: scripts/windows-installer/wasmer.iss -> scripts/windows-installer/wasmer.iss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: [Setup]",
          "2: AppName=Wasmer",
          "4: DefaultDirName={pf}\\Wasmer",
          "5: DefaultGroupName=Wasmer",
          "6: Compression=lzma2",
          "",
          "[Removed Lines]",
          "3: AppVersion=3.2.1",
          "",
          "[Added Lines]",
          "3: AppVersion=3.3.0",
          "",
          "---------------"
        ]
      }
    }
  ]
}