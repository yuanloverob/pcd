{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6aacd8d6d1300ccb08712d88fc244e63fc2e1c4c",
      "candidate_info": {
        "commit_hash": "6aacd8d6d1300ccb08712d88fc244e63fc2e1c4c",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6aacd8d6d1300ccb08712d88fc244e63fc2e1c4c",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.9dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "36: $branch   = '39';                       // This version's branch.",
          "37: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019120500.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "35: $release  = '3.9dev (Build: 20191205)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019121200.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "35: $release  = '3.9dev (Build: 20191212)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "296a3aa7073e7b061347d6630771eb7c6d11d9f6",
      "candidate_info": {
        "commit_hash": "296a3aa7073e7b061347d6630771eb7c6d11d9f6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/296a3aa7073e7b061347d6630771eb7c6d11d9f6",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.5dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '35';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2018021600.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.5dev (Build: 20180216)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2018022300.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.5dev (Build: 20180223)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c1d19fde685b1f83317df2a68ceb63c4ee92fd4",
      "candidate_info": {
        "commit_hash": "2c1d19fde685b1f83317df2a68ceb63c4ee92fd4",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/2c1d19fde685b1f83317df2a68ceb63c4ee92fd4",
        "files": [
          "course/amd/build/repository.min.js",
          "course/amd/src/repository.js",
          "course/externallib.php",
          "course/lib.php",
          "course/tests/courselib_test.php",
          "course/tests/externallib_test.php",
          "lib/db/services.php",
          "lib/enrollib.php",
          "version.php"
        ],
        "message": "MDL-63044 course: add get_enrolled_courses_by_timeline_classification",
        "before_after_code_files": [
          "course/amd/src/repository.js||course/amd/src/repository.js",
          "course/externallib.php||course/externallib.php",
          "course/lib.php||course/lib.php",
          "course/tests/courselib_test.php||course/tests/courselib_test.php",
          "course/tests/externallib_test.php||course/tests/externallib_test.php",
          "lib/db/services.php||lib/db/services.php",
          "lib/enrollib.php||lib/enrollib.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "course/amd/src/repository.js||course/amd/src/repository.js": [
          "File: course/amd/src/repository.js -> course/amd/src/repository.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: define(['jquery', 'core/ajax'], function($, Ajax) {",
          "35:     var getEnrolledCoursesByTimelineClassification = function(classification, limit, offset, sort) {",
          "36:         var args = {",
          "37:             classification: classification",
          "38:         };",
          "40:         if (typeof limit !== 'undefined') {",
          "41:             args.limit = limit;",
          "42:         }",
          "44:         if (typeof offset !== 'undefined') {",
          "45:             args.offset = offset;",
          "46:         }",
          "48:         if (typeof sort !== 'undefined') {",
          "49:             args.sort = sort;",
          "50:         }",
          "52:         var request = {",
          "53:             methodname: 'core_course_get_enrolled_courses_by_timeline_classification',",
          "54:             args: args",
          "55:         };",
          "57:         return Ajax.call([request])[0];",
          "58:     };",
          "60:     return {",
          "61:         getEnrolledCoursesByTimelineClassification: getEnrolledCoursesByTimelineClassification",
          "62:     };",
          "63: });",
          "",
          "---------------"
        ],
        "course/externallib.php||course/externallib.php": [
          "File: course/externallib.php -> course/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: defined('MOODLE_INTERNAL') || die;",
          "29: require_once(\"$CFG->libdir/externallib.php\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: use core_course\\external\\course_summary_exporter;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3553:     public static function edit_section_returns() {",
          "3554:         return new external_value(PARAM_RAW, 'Additional data for javascript (JSON-encoded string)');",
          "3555:     }",
          "3556: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3564:     public static function get_enrolled_courses_by_timeline_classification_parameters() {",
          "3565:         return new external_function_parameters(",
          "3566:             array(",
          "3567:                 'classification' => new external_value(PARAM_ALPHA, 'future, inprogress, or past'),",
          "3568:                 'limit' => new external_value(PARAM_INT, 'Result set limit', VALUE_DEFAULT, 0),",
          "3569:                 'offset' => new external_value(PARAM_INT, 'Result set offset', VALUE_DEFAULT, 0),",
          "3570:                 'sort' => new external_value(PARAM_TEXT, 'Sort string', VALUE_DEFAULT, null)",
          "3571:             )",
          "3572:         );",
          "3573:     }",
          "3596:     public static function get_enrolled_courses_by_timeline_classification(",
          "3597:         string $classification,",
          "3598:         int $limit = 0,",
          "3599:         int $offset = 0,",
          "3600:         string $sort = null",
          "3601:     ) {",
          "3602:         global $CFG, $PAGE, $USER;",
          "3603:         require_once($CFG->dirroot . '/course/lib.php');",
          "3605:         $params = self::validate_parameters(self::get_enrolled_courses_by_timeline_classification_parameters(),",
          "3606:             array(",
          "3607:                 'classification' => $classification,",
          "3608:                 'limit' => $limit,",
          "3609:                 'offset' => $offset,",
          "3610:                 'sort' => $sort,",
          "3611:             )",
          "3612:         );",
          "3614:         $classification = $params['classification'];",
          "3615:         $limit = $params['limit'];",
          "3616:         $offset = $params['offset'];",
          "3617:         $sort = $params['sort'];",
          "3619:         switch($classification) {",
          "3620:             case COURSE_TIMELINE_PAST:",
          "3621:                 break;",
          "3622:             case COURSE_TIMELINE_INPROGRESS:",
          "3623:                 break;",
          "3624:             case COURSE_TIMELINE_FUTURE:",
          "3625:                 break;",
          "3626:             default:",
          "3627:                 throw new invalid_parameter_exception('Invalid classification');",
          "3628:         }",
          "3630:         self::validate_context(context_user::instance($USER->id));",
          "3632:         $requiredproperties = course_summary_exporter::define_properties();",
          "3633:         $fields = join(',', array_keys($requiredproperties));",
          "3634:         $courses = course_get_enrolled_courses_for_logged_in_user(0, $offset, $sort, $fields);",
          "3635:         list($filteredcourses, $processedcount) = course_filter_courses_by_timeline_classification(",
          "3636:             $courses,",
          "3637:             $classification,",
          "3638:             $limit",
          "3639:         );",
          "3641:         $renderer = $PAGE->get_renderer('core');",
          "3642:         $formattedcourses = array_map(function($course) use ($renderer) {",
          "3643:             context_helper::preload_from_record($course);",
          "3644:             $context = context_course::instance($course->id);",
          "3645:             $exporter = new course_summary_exporter($course, ['context' => $context]);",
          "3646:             return $exporter->export($renderer);",
          "3647:         }, $filteredcourses);",
          "3649:         return [",
          "3650:             'courses' => $formattedcourses,",
          "3651:             'nextoffset' => $offset + $processedcount",
          "3652:         ];",
          "3653:     }",
          "3660:     public static function get_enrolled_courses_by_timeline_classification_returns() {",
          "3661:         return new external_single_structure(",
          "3662:             array(",
          "3663:                 'courses' => new external_multiple_structure(course_summary_exporter::get_read_structure(), 'Course'),",
          "3664:                 'nextoffset' => new external_value(PARAM_INT, 'Offset for the next request')",
          "3665:             )",
          "3666:         );",
          "3667:     }",
          "",
          "---------------"
        ],
        "course/lib.php||course/lib.php": [
          "File: course/lib.php -> course/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: define('COURSE_TIMELINE_PAST', 'past');",
          "59: define('COURSE_TIMELINE_INPROGRESS', 'inprogress');",
          "60: define('COURSE_TIMELINE_FUTURE', 'future');",
          "62: function make_log_url($module, $url) {",
          "63:     switch ($module) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: define('COURSE_DB_QUERY_LIMIT', 1000);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4116:     return $startdate->getTimestamp();",
          "4117: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4135: function course_classify_courses_for_timeline(array $courses) {",
          "4136:     return array_reduce($courses, function($carry, $course) {",
          "4137:         $classification = course_classify_for_timeline($course);",
          "4138:         array_push($carry[$classification], $course);",
          "4140:         return $carry;",
          "4141:     }, [",
          "4142:         COURSE_TIMELINE_PAST => [],",
          "4143:         COURSE_TIMELINE_FUTURE => [],",
          "4144:         COURSE_TIMELINE_INPROGRESS => []",
          "4145:     ]);",
          "4146: }",
          "4161: function course_get_enrolled_courses_for_logged_in_user(",
          "4162:     int $limit = 0,",
          "4163:     int $offset = 0,",
          "4164:     string $sort = null,",
          "4165:     string $fields = null,",
          "4166:     int $dbquerylimit = COURSE_DB_QUERY_LIMIT",
          "4167: ) : Generator {",
          "4169:     $haslimit = !empty($limit);",
          "4170:     $recordsloaded = 0;",
          "4171:     $querylimit = (!$haslimit || $limit > $dbquerylimit) ? $dbquerylimit : $limit;",
          "4173:     while ($courses = enrol_get_my_courses($fields, $sort, $querylimit, [], false, $offset)) {",
          "4174:         yield from $courses;",
          "4176:         $recordsloaded += $querylimit;",
          "4178:         if (count($courses) < $querylimit) {",
          "4179:             break;",
          "4180:         }",
          "4181:         if ($haslimit && $recordsloaded >= $limit) {",
          "4182:             break;",
          "4183:         }",
          "4185:         $offset += $querylimit;",
          "4186:     }",
          "4187: }",
          "4204: function course_filter_courses_by_timeline_classification(",
          "4205:     $courses,",
          "4206:     string $classification,",
          "4207:     int $limit = 0",
          "4208: ) : array {",
          "4210:     if (!in_array($classification, [COURSE_TIMELINE_PAST, COURSE_TIMELINE_INPROGRESS, COURSE_TIMELINE_FUTURE])) {",
          "4211:         $message = 'Classification must be one of COURSE_TIMELINE_PAST, '",
          "4212:             . 'COURSE_TIMELINE_INPROGRESS or COURSE_TIMELINE_FUTURE';",
          "4213:         throw new moodle_exception($message);",
          "4214:     }",
          "4216:     $filteredcourses = [];",
          "4217:     $numberofcoursesprocessed = 0;",
          "4218:     $filtermatches = 0;",
          "4220:     foreach ($courses as $course) {",
          "4221:         $numberofcoursesprocessed++;",
          "4223:         if ($classification == course_classify_for_timeline($course)) {",
          "4224:             $filteredcourses[] = $course;",
          "4225:             $filtermatches++;",
          "4226:         }",
          "4228:         if ($limit && $filtermatches >= $limit) {",
          "4230:             break;",
          "4231:         }",
          "4232:     }",
          "4237:     return [$filteredcourses, $numberofcoursesprocessed];",
          "4238: }",
          "",
          "---------------"
        ],
        "course/tests/courselib_test.php||course/tests/courselib_test.php": [
          "File: course/tests/courselib_test.php -> course/tests/courselib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4196:         assign_capability('moodle/backup:downloadfile', CAP_ALLOW, $teacherrole->id, $context);",
          "4197:         $this->assertFalse(can_download_from_backup_filearea('testing', $context, $user));",
          "4198:     }",
          "4199: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4203:     public function get_course_classify_courses_for_timeline_test_cases() {",
          "4204:         $now = time();",
          "4205:         $day = 86400;",
          "4207:         return [",
          "4208:             'no courses' => [",
          "4209:                 'coursesdata' => [],",
          "4210:                 'expected' => [",
          "4211:                     COURSE_TIMELINE_PAST => [],",
          "4212:                     COURSE_TIMELINE_FUTURE => [],",
          "4213:                     COURSE_TIMELINE_INPROGRESS => []",
          "4214:                 ]",
          "4215:             ],",
          "4216:             'only past' => [",
          "4217:                 'coursesdata' => [",
          "4218:                     [",
          "4219:                         'shortname' => 'past1',",
          "4220:                         'startdate' => $now - ($day * 2),",
          "4221:                         'enddate' => $now - $day",
          "4222:                     ],",
          "4223:                     [",
          "4224:                         'shortname' => 'past2',",
          "4225:                         'startdate' => $now - ($day * 2),",
          "4226:                         'enddate' => $now - $day",
          "4227:                     ]",
          "4228:                 ],",
          "4229:                 'expected' => [",
          "4230:                     COURSE_TIMELINE_PAST => ['past1', 'past2'],",
          "4231:                     COURSE_TIMELINE_FUTURE => [],",
          "4232:                     COURSE_TIMELINE_INPROGRESS => []",
          "4233:                 ]",
          "4234:             ],",
          "4235:             'only in progress' => [",
          "4236:                 'coursesdata' => [",
          "4237:                     [",
          "4238:                         'shortname' => 'inprogress1',",
          "4239:                         'startdate' => $now - $day,",
          "4240:                         'enddate' => $now + $day",
          "4241:                     ],",
          "4242:                     [",
          "4243:                         'shortname' => 'inprogress2',",
          "4244:                         'startdate' => $now - $day,",
          "4245:                         'enddate' => $now + $day",
          "4246:                     ]",
          "4247:                 ],",
          "4248:                 'expected' => [",
          "4249:                     COURSE_TIMELINE_PAST => [],",
          "4250:                     COURSE_TIMELINE_FUTURE => [],",
          "4251:                     COURSE_TIMELINE_INPROGRESS => ['inprogress1', 'inprogress2']",
          "4252:                 ]",
          "4253:             ],",
          "4254:             'only future' => [",
          "4255:                 'coursesdata' => [",
          "4256:                     [",
          "4257:                         'shortname' => 'future1',",
          "4258:                         'startdate' => $now + $day",
          "4259:                     ],",
          "4260:                     [",
          "4261:                         'shortname' => 'future2',",
          "4262:                         'startdate' => $now + $day",
          "4263:                     ]",
          "4264:                 ],",
          "4265:                 'expected' => [",
          "4266:                     COURSE_TIMELINE_PAST => [],",
          "4267:                     COURSE_TIMELINE_FUTURE => ['future1', 'future2'],",
          "4268:                     COURSE_TIMELINE_INPROGRESS => []",
          "4269:                 ]",
          "4270:             ],",
          "4271:             'combination' => [",
          "4272:                 'coursesdata' => [",
          "4273:                     [",
          "4274:                         'shortname' => 'past1',",
          "4275:                         'startdate' => $now - ($day * 2),",
          "4276:                         'enddate' => $now - $day",
          "4277:                     ],",
          "4278:                     [",
          "4279:                         'shortname' => 'past2',",
          "4280:                         'startdate' => $now - ($day * 2),",
          "4281:                         'enddate' => $now - $day",
          "4282:                     ],",
          "4283:                     [",
          "4284:                         'shortname' => 'inprogress1',",
          "4285:                         'startdate' => $now - $day,",
          "4286:                         'enddate' => $now + $day",
          "4287:                     ],",
          "4288:                     [",
          "4289:                         'shortname' => 'inprogress2',",
          "4290:                         'startdate' => $now - $day,",
          "4291:                         'enddate' => $now + $day",
          "4292:                     ],",
          "4293:                     [",
          "4294:                         'shortname' => 'future1',",
          "4295:                         'startdate' => $now + $day",
          "4296:                     ],",
          "4297:                     [",
          "4298:                         'shortname' => 'future2',",
          "4299:                         'startdate' => $now + $day",
          "4300:                     ]",
          "4301:                 ],",
          "4302:                 'expected' => [",
          "4303:                     COURSE_TIMELINE_PAST => ['past1', 'past2'],",
          "4304:                     COURSE_TIMELINE_FUTURE => ['future1', 'future2'],",
          "4305:                     COURSE_TIMELINE_INPROGRESS => ['inprogress1', 'inprogress2']",
          "4306:                 ]",
          "4307:             ],",
          "4308:         ];",
          "4309:     }",
          "4318:     public function test_course_classify_courses_for_timeline($coursesdata, $expected) {",
          "4319:         $this->resetAfterTest();",
          "4320:         $generator = $this->getDataGenerator();",
          "4322:         $courses = array_map(function($coursedata) use ($generator) {",
          "4323:             return $generator->create_course($coursedata);",
          "4324:         }, $coursesdata);",
          "4326:         sort($expected[COURSE_TIMELINE_PAST]);",
          "4327:         sort($expected[COURSE_TIMELINE_FUTURE]);",
          "4328:         sort($expected[COURSE_TIMELINE_INPROGRESS]);",
          "4330:         $results = course_classify_courses_for_timeline($courses);",
          "4332:         $actualpast = array_map(function($result) {",
          "4333:             return $result->shortname;",
          "4334:         }, $results[COURSE_TIMELINE_PAST]);",
          "4336:         $actualfuture = array_map(function($result) {",
          "4337:             return $result->shortname;",
          "4338:         }, $results[COURSE_TIMELINE_FUTURE]);",
          "4340:         $actualinprogress = array_map(function($result) {",
          "4341:             return $result->shortname;",
          "4342:         }, $results[COURSE_TIMELINE_INPROGRESS]);",
          "4344:         sort($actualpast);",
          "4345:         sort($actualfuture);",
          "4346:         sort($actualinprogress);",
          "4348:         $this->assertEquals($expected[COURSE_TIMELINE_PAST], $actualpast);",
          "4349:         $this->assertEquals($expected[COURSE_TIMELINE_FUTURE], $actualfuture);",
          "4350:         $this->assertEquals($expected[COURSE_TIMELINE_INPROGRESS], $actualinprogress);",
          "4351:     }",
          "4356:     public function get_course_get_enrolled_courses_for_logged_in_user_test_cases() {",
          "4357:         $buildexpectedresult = function($limit, $offset) {",
          "4358:             $result = [];",
          "4359:             for ($i = $offset; $i < $offset + $limit; $i++) {",
          "4360:                 $result[] = \"testcourse{$i}\";",
          "4361:             }",
          "4362:             return $result;",
          "4363:         };",
          "4365:         return [",
          "4366:             'zero records' => [",
          "4367:                 'dbquerylimit' => 3,",
          "4368:                 'totalcourses' => 0,",
          "4369:                 'limit' => 0,",
          "4370:                 'offset' => 0,",
          "4371:                 'expecteddbqueries' => 1,",
          "4372:                 'expectedresult' => $buildexpectedresult(0, 0)",
          "4373:             ],",
          "4374:             'less than query limit' => [",
          "4375:                 'dbquerylimit' => 3,",
          "4376:                 'totalcourses' => 2,",
          "4377:                 'limit' => 0,",
          "4378:                 'offset' => 0,",
          "4379:                 'expecteddbqueries' => 1,",
          "4380:                 'expectedresult' => $buildexpectedresult(2, 0)",
          "4381:             ],",
          "4382:             'more than query limit' => [",
          "4383:                 'dbquerylimit' => 3,",
          "4384:                 'totalcourses' => 7,",
          "4385:                 'limit' => 0,",
          "4386:                 'offset' => 0,",
          "4387:                 'expecteddbqueries' => 3,",
          "4388:                 'expectedresult' => $buildexpectedresult(7, 0)",
          "4389:             ],",
          "4390:             'limit less than query limit' => [",
          "4391:                 'dbquerylimit' => 3,",
          "4392:                 'totalcourses' => 7,",
          "4393:                 'limit' => 2,",
          "4394:                 'offset' => 0,",
          "4395:                 'expecteddbqueries' => 1,",
          "4396:                 'expectedresult' => $buildexpectedresult(2, 0)",
          "4397:             ],",
          "4398:             'limit less than query limit with offset' => [",
          "4399:                 'dbquerylimit' => 3,",
          "4400:                 'totalcourses' => 7,",
          "4401:                 'limit' => 2,",
          "4402:                 'offset' => 2,",
          "4403:                 'expecteddbqueries' => 1,",
          "4404:                 'expectedresult' => $buildexpectedresult(2, 2)",
          "4405:             ],",
          "4406:             'limit less than total' => [",
          "4407:                 'dbquerylimit' => 3,",
          "4408:                 'totalcourses' => 9,",
          "4409:                 'limit' => 6,",
          "4410:                 'offset' => 0,",
          "4411:                 'expecteddbqueries' => 2,",
          "4412:                 'expectedresult' => $buildexpectedresult(6, 0)",
          "4413:             ],",
          "4414:             'less results than limit' => [",
          "4415:                 'dbquerylimit' => 4,",
          "4416:                 'totalcourses' => 9,",
          "4417:                 'limit' => 20,",
          "4418:                 'offset' => 0,",
          "4419:                 'expecteddbqueries' => 3,",
          "4420:                 'expectedresult' => $buildexpectedresult(9, 0)",
          "4421:             ],",
          "4422:             'less results than limit exact divisible' => [",
          "4423:                 'dbquerylimit' => 3,",
          "4424:                 'totalcourses' => 9,",
          "4425:                 'limit' => 20,",
          "4426:                 'offset' => 0,",
          "4427:                 'expecteddbqueries' => 4,",
          "4428:                 'expectedresult' => $buildexpectedresult(9, 0)",
          "4429:             ],",
          "4430:             'less results than limit with offset' => [",
          "4431:                 'dbquerylimit' => 3,",
          "4432:                 'totalcourses' => 9,",
          "4433:                 'limit' => 10,",
          "4434:                 'offset' => 5,",
          "4435:                 'expecteddbqueries' => 2,",
          "4436:                 'expectedresult' => $buildexpectedresult(4, 5)",
          "4437:             ],",
          "4438:         ];",
          "4439:     }",
          "4452:     public function test_course_get_enrolled_courses_for_logged_in_user(",
          "4453:         $dbquerylimit,",
          "4454:         $totalcourses,",
          "4455:         $limit,",
          "4456:         $offset,",
          "4457:         $expecteddbqueries,",
          "4458:         $expectedresult",
          "4459:     ) {",
          "4460:         global $DB;",
          "4462:         $this->resetAfterTest();",
          "4463:         $generator = $this->getDataGenerator();",
          "4464:         $student = $generator->create_user();",
          "4466:         for ($i = 0; $i < $totalcourses; $i++) {",
          "4467:             $shortname = \"testcourse{$i}\";",
          "4468:             $course = $generator->create_course(['shortname' => $shortname]);",
          "4469:             $generator->enrol_user($student->id, $course->id, 'student');",
          "4470:         }",
          "4472:         $this->setUser($student);",
          "4474:         $initialquerycount = $DB->perf_get_queries();",
          "4475:         $courses = course_get_enrolled_courses_for_logged_in_user($limit, $offset, 'shortname ASC', 'shortname', $dbquerylimit);",
          "4479:         $actualresult = array_map(function($course) {",
          "4480:             return $course->shortname;",
          "4481:         }, iterator_to_array($courses, false));",
          "4483:         sort($expectedresult);",
          "4485:         $this->assertEquals($expectedresult, $actualresult);",
          "4486:         $this->assertEquals($expecteddbqueries, $DB->perf_get_queries() - $initialquerycount);",
          "4487:     }",
          "4492:     public function get_course_filter_courses_by_timeline_classification_test_cases() {",
          "4493:         $now = time();",
          "4494:         $day = 86400;",
          "4496:         $coursedata = [",
          "4497:             [",
          "4498:                 'shortname' => 'apast',",
          "4499:                 'startdate' => $now - ($day * 2),",
          "4500:                 'enddate' => $now - $day",
          "4501:             ],",
          "4502:             [",
          "4503:                 'shortname' => 'bpast',",
          "4504:                 'startdate' => $now - ($day * 2),",
          "4505:                 'enddate' => $now - $day",
          "4506:             ],",
          "4507:             [",
          "4508:                 'shortname' => 'cpast',",
          "4509:                 'startdate' => $now - ($day * 2),",
          "4510:                 'enddate' => $now - $day",
          "4511:             ],",
          "4512:             [",
          "4513:                 'shortname' => 'dpast',",
          "4514:                 'startdate' => $now - ($day * 2),",
          "4515:                 'enddate' => $now - $day",
          "4516:             ],",
          "4517:             [",
          "4518:                 'shortname' => 'epast',",
          "4519:                 'startdate' => $now - ($day * 2),",
          "4520:                 'enddate' => $now - $day",
          "4521:             ],",
          "4522:             [",
          "4523:                 'shortname' => 'ainprogress',",
          "4524:                 'startdate' => $now - $day,",
          "4525:                 'enddate' => $now + $day",
          "4526:             ],",
          "4527:             [",
          "4528:                 'shortname' => 'binprogress',",
          "4529:                 'startdate' => $now - $day,",
          "4530:                 'enddate' => $now + $day",
          "4531:             ],",
          "4532:             [",
          "4533:                 'shortname' => 'cinprogress',",
          "4534:                 'startdate' => $now - $day,",
          "4535:                 'enddate' => $now + $day",
          "4536:             ],",
          "4537:             [",
          "4538:                 'shortname' => 'dinprogress',",
          "4539:                 'startdate' => $now - $day,",
          "4540:                 'enddate' => $now + $day",
          "4541:             ],",
          "4542:             [",
          "4543:                 'shortname' => 'einprogress',",
          "4544:                 'startdate' => $now - $day,",
          "4545:                 'enddate' => $now + $day",
          "4546:             ],",
          "4547:             [",
          "4548:                 'shortname' => 'afuture',",
          "4549:                 'startdate' => $now + $day",
          "4550:             ],",
          "4551:             [",
          "4552:                 'shortname' => 'bfuture',",
          "4553:                 'startdate' => $now + $day",
          "4554:             ],",
          "4555:             [",
          "4556:                 'shortname' => 'cfuture',",
          "4557:                 'startdate' => $now + $day",
          "4558:             ],",
          "4559:             [",
          "4560:                 'shortname' => 'dfuture',",
          "4561:                 'startdate' => $now + $day",
          "4562:             ],",
          "4563:             [",
          "4564:                 'shortname' => 'efuture',",
          "4565:                 'startdate' => $now + $day",
          "4566:             ]",
          "4567:         ];",
          "4580:         return [",
          "4581:             'empty set' => [",
          "4582:                 'coursedata' => [],",
          "4583:                 'classification' => COURSE_TIMELINE_FUTURE,",
          "4584:                 'limit' => 2,",
          "4585:                 'offset' => 0,",
          "4586:                 'expectedcourses' => [],",
          "4587:                 'expectedprocessedcount' => 0",
          "4588:             ],",
          "4590:             'future not limit no offset' => [",
          "4591:                 'coursedata' => $coursedata,",
          "4592:                 'classification' => COURSE_TIMELINE_FUTURE,",
          "4593:                 'limit' => 0,",
          "4594:                 'offset' => 0,",
          "4595:                 'expectedcourses' => ['afuture', 'bfuture', 'cfuture', 'dfuture', 'efuture'],",
          "4596:                 'expectedprocessedcount' => 15",
          "4597:             ],",
          "4598:             'future no offset' => [",
          "4599:                 'coursedata' => $coursedata,",
          "4600:                 'classification' => COURSE_TIMELINE_FUTURE,",
          "4601:                 'limit' => 2,",
          "4602:                 'offset' => 0,",
          "4603:                 'expectedcourses' => ['afuture', 'bfuture'],",
          "4604:                 'expectedprocessedcount' => 4",
          "4605:             ],",
          "4606:             'future offset' => [",
          "4607:                 'coursedata' => $coursedata,",
          "4608:                 'classification' => COURSE_TIMELINE_FUTURE,",
          "4609:                 'limit' => 2,",
          "4610:                 'offset' => 2,",
          "4611:                 'expectedcourses' => ['bfuture', 'cfuture'],",
          "4612:                 'expectedprocessedcount' => 5",
          "4613:             ],",
          "4614:             'future exact limit' => [",
          "4615:                 'coursedata' => $coursedata,",
          "4616:                 'classification' => COURSE_TIMELINE_FUTURE,",
          "4617:                 'limit' => 5,",
          "4618:                 'offset' => 0,",
          "4619:                 'expectedcourses' => ['afuture', 'bfuture', 'cfuture', 'dfuture', 'efuture'],",
          "4620:                 'expectedprocessedcount' => 13",
          "4621:             ],",
          "4622:             'future limit less results' => [",
          "4623:                 'coursedata' => $coursedata,",
          "4624:                 'classification' => COURSE_TIMELINE_FUTURE,",
          "4625:                 'limit' => 10,",
          "4626:                 'offset' => 0,",
          "4627:                 'expectedcourses' => ['afuture', 'bfuture', 'cfuture', 'dfuture', 'efuture'],",
          "4628:                 'expectedprocessedcount' => 15",
          "4629:             ],",
          "4630:             'future limit less results with offset' => [",
          "4631:                 'coursedata' => $coursedata,",
          "4632:                 'classification' => COURSE_TIMELINE_FUTURE,",
          "4633:                 'limit' => 10,",
          "4634:                 'offset' => 5,",
          "4635:                 'expectedcourses' => ['cfuture', 'dfuture', 'efuture'],",
          "4636:                 'expectedprocessedcount' => 10",
          "4637:             ],",
          "4638:         ];",
          "4639:     }",
          "4652:     public function test_course_filter_courses_by_timeline_classification(",
          "4653:         $coursedata,",
          "4654:         $classification,",
          "4655:         $limit,",
          "4656:         $offset,",
          "4657:         $expectedcourses,",
          "4658:         $expectedprocessedcount",
          "4659:     ) {",
          "4660:         $this->resetAfterTest();",
          "4661:         $generator = $this->getDataGenerator();",
          "4663:         $courses = array_map(function($coursedata) use ($generator) {",
          "4664:             return $generator->create_course($coursedata);",
          "4665:         }, $coursedata);",
          "4667:         $student = $generator->create_user();",
          "4669:         foreach ($courses as $course) {",
          "4670:             $generator->enrol_user($student->id, $course->id, 'student');",
          "4671:         }",
          "4673:         $this->setUser($student);",
          "4675:         $coursesgenerator = course_get_enrolled_courses_for_logged_in_user(0, $offset, 'shortname ASC', 'shortname');",
          "4676:         list($result, $processedcount) = course_filter_courses_by_timeline_classification(",
          "4677:             $coursesgenerator,",
          "4678:             $classification,",
          "4679:             $limit",
          "4680:         );",
          "4682:         $actual = array_map(function($course) {",
          "4683:             return $course->shortname;",
          "4684:         }, $result);",
          "4686:         $this->assertEquals($expectedcourses, $actual);",
          "4687:         $this->assertEquals($expectedprocessedcount, $processedcount);",
          "4688:     }",
          "",
          "---------------"
        ],
        "course/tests/externallib_test.php||course/tests/externallib_test.php": [
          "File: course/tests/externallib_test.php -> course/tests/externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2341:         $this->assertCount(1, $result['warnings']);",
          "2342:         $this->assertEquals(-2, $result['warnings'][0]['itemid']);",
          "2343:     }",
          "2344: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2348:     public function get_get_enrolled_courses_by_timeline_classification_test_cases() {",
          "2349:         $now = time();",
          "2350:         $day = 86400;",
          "2352:         $coursedata = [",
          "2353:             [",
          "2354:                 'shortname' => 'apast',",
          "2355:                 'startdate' => $now - ($day * 2),",
          "2356:                 'enddate' => $now - $day",
          "2357:             ],",
          "2358:             [",
          "2359:                 'shortname' => 'bpast',",
          "2360:                 'startdate' => $now - ($day * 2),",
          "2361:                 'enddate' => $now - $day",
          "2362:             ],",
          "2363:             [",
          "2364:                 'shortname' => 'cpast',",
          "2365:                 'startdate' => $now - ($day * 2),",
          "2366:                 'enddate' => $now - $day",
          "2367:             ],",
          "2368:             [",
          "2369:                 'shortname' => 'dpast',",
          "2370:                 'startdate' => $now - ($day * 2),",
          "2371:                 'enddate' => $now - $day",
          "2372:             ],",
          "2373:             [",
          "2374:                 'shortname' => 'epast',",
          "2375:                 'startdate' => $now - ($day * 2),",
          "2376:                 'enddate' => $now - $day",
          "2377:             ],",
          "2378:             [",
          "2379:                 'shortname' => 'ainprogress',",
          "2380:                 'startdate' => $now - $day,",
          "2381:                 'enddate' => $now + $day",
          "2382:             ],",
          "2383:             [",
          "2384:                 'shortname' => 'binprogress',",
          "2385:                 'startdate' => $now - $day,",
          "2386:                 'enddate' => $now + $day",
          "2387:             ],",
          "2388:             [",
          "2389:                 'shortname' => 'cinprogress',",
          "2390:                 'startdate' => $now - $day,",
          "2391:                 'enddate' => $now + $day",
          "2392:             ],",
          "2393:             [",
          "2394:                 'shortname' => 'dinprogress',",
          "2395:                 'startdate' => $now - $day,",
          "2396:                 'enddate' => $now + $day",
          "2397:             ],",
          "2398:             [",
          "2399:                 'shortname' => 'einprogress',",
          "2400:                 'startdate' => $now - $day,",
          "2401:                 'enddate' => $now + $day",
          "2402:             ],",
          "2403:             [",
          "2404:                 'shortname' => 'afuture',",
          "2405:                 'startdate' => $now + $day",
          "2406:             ],",
          "2407:             [",
          "2408:                 'shortname' => 'bfuture',",
          "2409:                 'startdate' => $now + $day",
          "2410:             ],",
          "2411:             [",
          "2412:                 'shortname' => 'cfuture',",
          "2413:                 'startdate' => $now + $day",
          "2414:             ],",
          "2415:             [",
          "2416:                 'shortname' => 'dfuture',",
          "2417:                 'startdate' => $now + $day",
          "2418:             ],",
          "2419:             [",
          "2420:                 'shortname' => 'efuture',",
          "2421:                 'startdate' => $now + $day",
          "2422:             ]",
          "2423:         ];",
          "2441:         return [",
          "2442:             'empty set' => [",
          "2443:                 'coursedata' => [],",
          "2444:                 'classification' => 'future',",
          "2445:                 'limit' => 2,",
          "2446:                 'offset' => 0,",
          "2447:                 'expectedcourses' => [],",
          "2448:                 'expectednextoffset' => 0",
          "2449:             ],",
          "2451:             'future not limit no offset' => [",
          "2452:                 'coursedata' => $coursedata,",
          "2453:                 'classification' => 'future',",
          "2454:                 'limit' => 0,",
          "2455:                 'offset' => 0,",
          "2456:                 'expectedcourses' => ['afuture', 'bfuture', 'cfuture', 'dfuture', 'efuture'],",
          "2457:                 'expectednextoffset' => 15",
          "2458:             ],",
          "2459:             'future no offset' => [",
          "2460:                 'coursedata' => $coursedata,",
          "2461:                 'classification' => 'future',",
          "2462:                 'limit' => 2,",
          "2463:                 'offset' => 0,",
          "2464:                 'expectedcourses' => ['afuture', 'bfuture'],",
          "2465:                 'expectednextoffset' => 4",
          "2466:             ],",
          "2467:             'future offset' => [",
          "2468:                 'coursedata' => $coursedata,",
          "2469:                 'classification' => 'future',",
          "2470:                 'limit' => 2,",
          "2471:                 'offset' => 2,",
          "2472:                 'expectedcourses' => ['bfuture', 'cfuture'],",
          "2473:                 'expectednextoffset' => 7",
          "2474:             ],",
          "2475:             'future exact limit' => [",
          "2476:                 'coursedata' => $coursedata,",
          "2477:                 'classification' => 'future',",
          "2478:                 'limit' => 5,",
          "2479:                 'offset' => 0,",
          "2480:                 'expectedcourses' => ['afuture', 'bfuture', 'cfuture', 'dfuture', 'efuture'],",
          "2481:                 'expectednextoffset' => 13",
          "2482:             ],",
          "2483:             'future limit less results' => [",
          "2484:                 'coursedata' => $coursedata,",
          "2485:                 'classification' => 'future',",
          "2486:                 'limit' => 10,",
          "2487:                 'offset' => 0,",
          "2488:                 'expectedcourses' => ['afuture', 'bfuture', 'cfuture', 'dfuture', 'efuture'],",
          "2489:                 'expectednextoffset' => 15",
          "2490:             ],",
          "2491:             'future limit less results with offset' => [",
          "2492:                 'coursedata' => $coursedata,",
          "2493:                 'classification' => 'future',",
          "2494:                 'limit' => 10,",
          "2495:                 'offset' => 5,",
          "2496:                 'expectedcourses' => ['cfuture', 'dfuture', 'efuture'],",
          "2497:                 'expectednextoffset' => 15",
          "2498:             ],",
          "2499:         ];",
          "2500:     }",
          "2513:     public function test_get_enrolled_courses_by_timeline_classification(",
          "2514:         $coursedata,",
          "2515:         $classification,",
          "2516:         $limit,",
          "2517:         $offset,",
          "2518:         $expectedcourses,",
          "2519:         $expectednextoffset",
          "2520:     ) {",
          "2521:         $this->resetAfterTest();",
          "2522:         $generator = $this->getDataGenerator();",
          "2524:         $courses = array_map(function($coursedata) use ($generator) {",
          "2525:             return $generator->create_course($coursedata);",
          "2526:         }, $coursedata);",
          "2528:         $student = $generator->create_user();",
          "2530:         foreach ($courses as $course) {",
          "2531:             $generator->enrol_user($student->id, $course->id, 'student');",
          "2532:         }",
          "2534:         $this->setUser($student);",
          "2540:         $result = core_course_external::get_enrolled_courses_by_timeline_classification(",
          "2541:             $classification,",
          "2542:             $limit,",
          "2543:             $offset,",
          "2544:             'shortname ASC'",
          "2545:         );",
          "2546:         $result = external_api::clean_returnvalue(",
          "2547:             core_course_external::get_enrolled_courses_by_timeline_classification_returns(),",
          "2548:             $result",
          "2549:         );",
          "2551:         $actual = array_map(function($course) {",
          "2552:             return $course['shortname'];",
          "2553:         }, $result['courses']);",
          "2555:         $this->assertEquals($expectedcourses, $actual);",
          "2556:         $this->assertEquals($expectednextoffset, $result['nextoffset']);",
          "2557:     }",
          "",
          "---------------"
        ],
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "510:         'ajax' => true,",
          "511:         'services' => array(MOODLE_OFFICIAL_MOBILE_SERVICE),",
          "512:     ),",
          "513:     'core_enrol_get_course_enrolment_methods' => array(",
          "514:         'classname' => 'core_enrol_external',",
          "515:         'methodname' => 'get_course_enrolment_methods',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "513:     'core_course_get_enrolled_courses_by_timeline_classification' => array(",
          "514:         'classname' => 'core_course_external',",
          "515:         'methodname' => 'get_enrolled_courses_by_timeline_classification',",
          "516:         'classpath' => 'course/externallib.php',",
          "517:         'description' => 'List of enrolled courses for the given timeline classification (past, inprogress, or future).',",
          "518:         'type' => 'read',",
          "519:         'ajax' => true",
          "520:     ),",
          "",
          "---------------"
        ],
        "lib/enrollib.php||lib/enrollib.php": [
          "File: lib/enrollib.php -> lib/enrollib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "563:     global $DB, $USER, $CFG;",
          "565:     if ($sort === null) {",
          "",
          "[Removed Lines]",
          "562: function enrol_get_my_courses($fields = null, $sort = null, $limit = 0, $courseids = [], $allaccessible = false) {",
          "",
          "[Added Lines]",
          "563: function enrol_get_my_courses($fields = null, $sort = null, $limit = 0, $courseids = [], $allaccessible = false, $offset = 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "714:              WHERE $wheres",
          "715:           $orderby\";",
          "720:     foreach ($courses as $id=>$course) {",
          "",
          "[Removed Lines]",
          "717:     $courses = $DB->get_records_sql($sql, $params, 0, $limit);",
          "",
          "[Added Lines]",
          "718:     $courses = $DB->get_records_sql($sql, $params, $offset, $limit);",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018092000.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018092000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "694513e2fe5ee83bd86a1f42db10965e6ad1a838",
      "candidate_info": {
        "commit_hash": "694513e2fe5ee83bd86a1f42db10965e6ad1a838",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/694513e2fe5ee83bd86a1f42db10965e6ad1a838",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019020100.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev (Build: 20190201)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019020800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev (Build: 20190208)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e445671c1679e43796bced77f0a52f79590c80d",
      "candidate_info": {
        "commit_hash": "6e445671c1679e43796bced77f0a52f79590c80d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6e445671c1679e43796bced77f0a52f79590c80d",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.6dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '36';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2018080300.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.6dev (Build: 20180803)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2018081000.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.6dev (Build: 20180810)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    }
  ]
}