{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "25438b7858833970c14a0ec724e0f1874f1553ed",
      "candidate_info": {
        "commit_hash": "25438b7858833970c14a0ec724e0f1874f1553ed",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/25438b7858833970c14a0ec724e0f1874f1553ed",
        "files": [
          "examples/views/table/TableTest1.vue",
          "package.json",
          "packages/components.ts",
          "packages/table/render/index.ts"
        ],
        "message": "releases 3.9.7",
        "before_after_code_files": [
          "examples/views/table/TableTest1.vue||examples/views/table/TableTest1.vue",
          "packages/components.ts||packages/components.ts",
          "packages/table/render/index.ts||packages/table/render/index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/views/table/TableTest1.vue||examples/views/table/TableTest1.vue": [
          "File: examples/views/table/TableTest1.vue -> examples/views/table/TableTest1.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "33:     <vxe-table",
          "35:       border",
          "41:       <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "42:       <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "46:     </vxe-table>",
          "97:     return {",
          "390:     }",
          "391:   },",
          "464:   }",
          "466: </script>",
          "",
          "[Removed Lines]",
          "2:   <div>",
          "3:     <p class=\"tip\">",
          "4:       \u901a\u8fc7\u8868\u5c3e\u6765\u5b9e\u73b0\u5408\u8ba1\u529f\u80fd\uff0c\u8bbe\u7f6e <table-api-link prop=\"show-footer\"/> show-footer \u548c <table-api-link prop=\"footer-method\"/> \u8bbe\u7f6e\u8868\u5c3e\u6570\u636e\uff0c\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4<br>",
          "5:       \u9700\u8981\u6ce8\u610f\u7684\u662f\u8868\u5c3e\u7684\u8c03\u7528\u5e76\u975e\u5b9e\u65f6\u7684\uff0c\u800c\u662f\u5728 data \u521d\u59cb\u5316\u65f6\u624d\u4f1a\u89e6\u53d1\u6267\u884c\uff1b\u5982\u679c\u8981\u8fbe\u5230\u5b9e\u65f6\u8c03\u7528\u8bf7\u624b\u52a8\u8c03\u7528 <table-api-link prop=\"updateFooter\"/> \u65b9\u6cd5<br>",
          "6:       <span class=\"red\">\uff08\u6ce8\uff1a<table-api-link prop=\"footer-method\"/> \u8868\u5c3e\u7684\u6570\u636e\u90fd\u662f\u81ea\u884c\u751f\u6210\u7684\uff0c\u8be5\u793a\u4f8b\u4ec5\u4f9b\u53c2\u8003\uff09</span>",
          "7:     </p>",
          "9:     <vxe-table",
          "10:       class=\"mytable-footer\"",
          "11:       border",
          "12:       show-footer",
          "13:       max-height=\"400\"",
          "14:       :row-config=\"{isHover: true}\"",
          "15:       :footer-method=\"footerMethod1\"",
          "16:       :data=\"tableData1\">",
          "17:       <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "18:       <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "19:       <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "20:       <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "21:       <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "22:     </vxe-table>",
          "24:     <p class=\"demo-code\">{{ $t('app.body.button.showCode') }}</p>",
          "26:     <pre>",
          "27:       <pre-code class=\"xml\">{{ demoCodes[0] }}</pre-code>",
          "28:       <pre-code class=\"javascript\">{{ demoCodes[1] }}</pre-code>",
          "29:     </pre>",
          "31:     <p class=\"tip\">\u8fd8\u53ef\u4ee5\u914d\u5408 <table-api-link prop=\"footer-cell-class-name\"/> \u81ea\u5b9a\u4e49\u4e0d\u540c\u5217\u989c\u8272</p>",
          "34:       class=\"mytable-footer\"",
          "36:       show-footer",
          "37:       height=\"400\"",
          "38:       :footer-method=\"footerMethod\"",
          "39:       :footer-cell-class-name=\"footerCellClassName2\"",
          "40:       :data=\"tableData2\">",
          "43:       <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "44:       <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "45:       <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "48:     <p class=\"demo-code\">{{ $t('app.body.button.showCode') }}</p>",
          "50:     <pre>",
          "51:       <pre-code class=\"xml\">{{ demoCodes[2] }}</pre-code>",
          "52:       <pre-code class=\"javascript\">{{ demoCodes[3] }}</pre-code>",
          "53:       <pre-code class=\"css\">{{ demoCodes[4] }}</pre-code>",
          "54:     </pre>",
          "56:     <p class=\"tip\">\u8fd8\u53ef\u4ee5\u56fa\u5b9a\u5217</p>",
          "58:     <vxe-toolbar>",
          "59:       <template #buttons>",
          "60:         <vxe-button @click=\"showHeader = !showHeader\">\u663e\u793a/\u9690\u85cf\u8868\u5934</vxe-button>",
          "61:         <vxe-button @click=\"showFooter = !showFooter\">\u663e\u793a/\u9690\u85cf\u8868\u5c3e</vxe-button>",
          "62:       </template>",
          "63:     </vxe-toolbar>",
          "65:     <vxe-table",
          "66:       class=\"mytable-footer\"",
          "67:       border",
          "68:       height=\"400\"",
          "69:       show-overflow",
          "70:       :show-header=\"showHeader\"",
          "71:       :show-footer=\"showFooter\"",
          "72:       :footer-method=\"footerMethod\"",
          "73:       :footer-cell-class-name=\"footerCellClassName3\"",
          "74:       :data=\"tableData3\">",
          "75:       <vxe-column type=\"seq\" width=\"60\" fixed=\"left\"></vxe-column>",
          "76:       <vxe-colgroup title=\"\u57fa\u672c\u4fe1\u606f\">",
          "77:         <vxe-column field=\"name\" title=\"Name\" min-width=\"600\" sortable></vxe-column>",
          "78:         <vxe-column field=\"age\" title=\"Age\" min-width=\"600\"></vxe-column>",
          "79:       </vxe-colgroup>",
          "80:       <vxe-column field=\"date\" title=\"Date\" min-width=\"600\"></vxe-column>",
          "81:       <vxe-column field=\"amount\" title=\"Amount\" width=\"200\" fixed=\"right\"></vxe-column>",
          "82:     </vxe-table>",
          "84:     <p class=\"demo-code\">{{ $t('app.body.button.showCode') }}</p>",
          "86:     <pre>",
          "87:       <pre-code class=\"xml\">{{ demoCodes[5] }}</pre-code>",
          "88:       <pre-code class=\"javascript\">{{ demoCodes[6] }}</pre-code>",
          "89:       <pre-code class=\"javascript\">{{ demoCodes[7] }}</pre-code>",
          "90:     </pre>",
          "91:   </div>",
          "92: </template>",
          "94: <script>",
          "95: export default {",
          "96:   data () {",
          "98:       showHeader: true,",
          "99:       showFooter: true,",
          "100:       tableData1: [",
          "101:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "102:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "103:         { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "104:         { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "105:         { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "106:         { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' }",
          "107:       ],",
          "108:       footerData1: [",
          "109:         ['\u5408\u8ba1', '2', '44', '67', '-']",
          "110:       ],",
          "111:       tableData2: [",
          "112:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "113:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "114:         { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "115:         { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "116:         { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "117:         { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "118:         { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "119:         { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "120:       ],",
          "121:       tableData3: [",
          "122:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "123:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "124:         { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "125:         { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "126:         { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "127:         { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "128:         { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "129:         { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "130:       ],",
          "131:       demoCodes: [",
          "132:         `",
          "133:         <vxe-table",
          "134:           class=\"mytable-footer\"",
          "135:           border",
          "136:           show-footer",
          "137:           max-height=\"400\"",
          "138:           :row-config=\"{isHover: true}\"",
          "139:           :footer-method=\"footerMethod1\"",
          "140:           :data=\"tableData1\">",
          "141:           <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "142:           <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "143:           <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "144:           <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "145:           <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "146:         </vxe-table>",
          "147:         `,",
          "148:         `",
          "149:         export default {",
          "150:           data () {",
          "151:             return {",
          "152:               tableData1: [",
          "153:                 { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "154:                 { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "155:                 { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "156:                 { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "157:                 { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "158:                 { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' }",
          "159:               ],",
          "160:               footerData1: [",
          "161:                 ['\u5408\u8ba1', '2', '44', '67', '-']",
          "162:               ]",
          "163:             }",
          "164:           },",
          "165:           methods: {",
          "166:             footerMethod1 () {",
          "168:               return this.footerData1",
          "169:             }",
          "170:           }",
          "171:         }",
          "172:         `,",
          "173:         `",
          "174:         <vxe-table",
          "175:           class=\"mytable-footer\"",
          "176:           border",
          "177:           show-footer",
          "178:           height=\"400\"",
          "179:           :footer-method=\"footerMethod\"",
          "180:           :footer-cell-class-name=\"footerCellClassName2\"",
          "181:           :data=\"tableData2\">",
          "182:           <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "183:           <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "184:           <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "185:           <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "186:           <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "187:         </vxe-table>",
          "188:         `,",
          "189:         `",
          "190:         export default {",
          "191:           data () {",
          "192:             return {",
          "193:               tableData2: [",
          "194:                 { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "195:                 { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "196:                 { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "197:                 { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "198:                 { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "199:                 { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "200:                 { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "201:                 { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "202:               ]",
          "203:             }",
          "204:           },",
          "205:           methods: {",
          "206:             footerCellClassName2 ({ $rowIndex, column, columnIndex }) {",
          "207:               if (columnIndex === 0) {",
          "208:                 if ($rowIndex === 0) {",
          "209:                   return 'col-blue'",
          "210:                 } else {",
          "211:                   return 'col-red'",
          "212:                 }",
          "213:               }",
          "214:             },",
          "215:             meanNum (list, field) {",
          "216:               let count = 0",
          "217:               list.forEach(item => {",
          "218:                 count += Number(item[field])",
          "219:               })",
          "220:               return count / list.length",
          "221:             },",
          "222:             sumNum (list, field) {",
          "223:               let count = 0",
          "224:               list.forEach(item => {",
          "225:                 count += Number(item[field])",
          "226:               })",
          "227:               return count",
          "228:             },",
          "229:             footerMethod ({ columns, data }) {",
          "230:               const means = []",
          "231:               const sums = []",
          "232:               const others = []",
          "233:               columns.forEach((column, columnIndex) => {",
          "234:                 if (columnIndex === 0) {",
          "235:                   means.push('\u5e73\u5747')",
          "236:                   sums.push('\u548c\u503c')",
          "237:                   others.push('\u5176\u4ed6')",
          "238:                 } else {",
          "239:                   let meanCell = null",
          "240:                   let sumCell = null",
          "241:                   let otherCell = '-'",
          "242:                   switch (column.field) {",
          "243:                     case 'age':",
          "244:                     case 'amount':",
          "245:                       meanCell = this.meanNum(data, column.field)",
          "246:                       sumCell = this.sumNum(data, column.field)",
          "247:                       break",
          "248:                     case 'sex':",
          "249:                       otherCell = '\u65e0'",
          "250:                       break",
          "251:                   }",
          "252:                   means.push(meanCell)",
          "253:                   sums.push(sumCell)",
          "254:                   others.push(otherCell)",
          "255:                 }",
          "256:               })",
          "258:               return [means, sums, others]",
          "259:             }",
          "260:           }",
          "261:         }",
          "262:         `,",
          "263:         `",
          "264:         .mytable-footer .col-blue {",
          "265:           background-color: #2db7f5;",
          "266:           color: #fff;",
          "267:         }",
          "268:         .mytable-footer .col-red {",
          "269:           background-color: red;",
          "270:           color: #fff;",
          "271:         }",
          "272:         `,",
          "273:         `",
          "274:         <vxe-toolbar>",
          "275:           <template #buttons>",
          "276:             <vxe-button @click=\"showHeader = !showHeader\">\u663e\u793a/\u9690\u85cf\u8868\u5934</vxe-button>",
          "277:             <vxe-button @click=\"showFooter = !showFooter\">\u663e\u793a/\u9690\u85cf\u8868\u5c3e</vxe-button>",
          "278:           </template>",
          "279:         </vxe-toolbar>",
          "281:         <vxe-table",
          "282:           class=\"mytable-footer\"",
          "283:           border",
          "284:           height=\"400\"",
          "285:           show-overflow",
          "286:           :show-header=\"showHeader\"",
          "287:           :show-footer=\"showFooter\"",
          "288:           :footer-method=\"footerMethod\"",
          "289:           :footer-cell-class-name=\"footerCellClassName3\"",
          "290:           :data=\"tableData3\">",
          "291:           <vxe-column type=\"seq\" width=\"60\" fixed=\"left\"></vxe-column>",
          "292:           <vxe-colgroup title=\"\u57fa\u672c\u4fe1\u606f\">",
          "293:             <vxe-column field=\"name\" title=\"Name\" min-width=\"600\" sortable></vxe-column>",
          "294:             <vxe-column field=\"age\" title=\"Age\" min-width=\"600\"></vxe-column>",
          "295:           </vxe-colgroup>",
          "296:           <vxe-column field=\"date\" title=\"Date\" min-width=\"600\"></vxe-column>",
          "297:           <vxe-column field=\"rate\" title=\"Rate\" width=\"200\" fixed=\"right\"></vxe-column>",
          "298:         </vxe-table>",
          "299:         `,",
          "300:         `",
          "301:         export default {",
          "302:           data () {",
          "303:             return {",
          "304:               showFooter: true,",
          "305:               tableData3: [",
          "306:                 { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "307:                 { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "308:                 { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "309:                 { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "310:                 { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "311:                 { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "312:                 { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "313:                 { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "314:               ]",
          "315:             }",
          "316:           },",
          "317:           methods: {",
          "318:             footerCellClassName3 ({ $rowIndex, column }) {",
          "319:               if (column.type === 'seq') {",
          "320:                 if ($rowIndex === 0) {",
          "321:                   return 'col-blue'",
          "322:                 } else {",
          "323:                   return 'col-red'",
          "324:                 }",
          "325:               } else if (column.field === 'age') {",
          "326:                 if ($rowIndex === 1) {",
          "327:                   return 'col-red'",
          "328:                 }",
          "329:               }",
          "330:             },",
          "331:             meanNum (list, field) {",
          "332:               let count = 0",
          "333:               list.forEach(item => {",
          "334:                 count += Number(item[field])",
          "335:               })",
          "336:               return count / list.length",
          "337:             },",
          "338:             sumNum (list, field) {",
          "339:               let count = 0",
          "340:               list.forEach(item => {",
          "341:                 count += Number(item[field])",
          "342:               })",
          "343:               return count",
          "344:             },",
          "345:             footerMethod ({ columns, data }) {",
          "346:               const means = []",
          "347:               const sums = []",
          "348:               const others = []",
          "349:               columns.forEach((column, columnIndex) => {",
          "350:                 if (columnIndex === 0) {",
          "351:                   means.push('\u5e73\u5747')",
          "352:                   sums.push('\u548c\u503c')",
          "353:                   others.push('\u5176\u4ed6')",
          "354:                 } else {",
          "355:                   let meanCell = null",
          "356:                   let sumCell = null",
          "357:                   let otherCell = '-'",
          "358:                   switch (column.field) {",
          "359:                     case 'age':",
          "360:                     case 'amount':",
          "361:                       meanCell = this.meanNum(data, column.field)",
          "362:                       sumCell = this.sumNum(data, column.field)",
          "363:                       break",
          "364:                     case 'sex':",
          "365:                       otherCell = '\u65e0'",
          "366:                       break",
          "367:                   }",
          "368:                   means.push(meanCell)",
          "369:                   sums.push(sumCell)",
          "370:                   others.push(otherCell)",
          "371:                 }",
          "372:               })",
          "374:               return [means, sums, others]",
          "375:             }",
          "376:           }",
          "377:         }",
          "378:         `,",
          "379:         `",
          "380:         .mytable-footer .col-blue {",
          "381:           background-color: #2db7f5;",
          "382:           color: #fff;",
          "383:         }",
          "384:         .mytable-footer .col-red {",
          "385:           background-color: red;",
          "386:           color: #fff;",
          "387:         }",
          "388:         `",
          "389:       ]",
          "392:   methods: {",
          "393:     footerCellClassName2 ({ $rowIndex, columnIndex }) {",
          "394:       if (columnIndex === 0) {",
          "395:         if ($rowIndex === 0) {",
          "396:           return 'col-blue'",
          "397:         } else {",
          "398:           return 'col-red'",
          "399:         }",
          "400:       }",
          "401:     },",
          "402:     footerCellClassName3 ({ $rowIndex, column }) {",
          "403:       if (column.type === 'seq') {",
          "404:         if ($rowIndex === 0) {",
          "405:           return 'col-blue'",
          "406:         } else {",
          "407:           return 'col-red'",
          "408:         }",
          "409:       } else if (column.field === 'age') {",
          "410:         if ($rowIndex === 1) {",
          "411:           return 'col-red'",
          "412:         }",
          "413:       }",
          "414:     },",
          "415:     footerMethod1 () {",
          "417:       return this.footerData1",
          "418:     },",
          "419:     meanNum (list, field) {",
          "420:       let count = 0",
          "421:       list.forEach(item => {",
          "422:         count += Number(item[field])",
          "423:       })",
          "424:       return count / list.length",
          "425:     },",
          "426:     sumNum (list, field) {",
          "427:       let count = 0",
          "428:       list.forEach(item => {",
          "429:         count += Number(item[field])",
          "430:       })",
          "431:       return count",
          "432:     },",
          "433:     footerMethod ({ columns, data }) {",
          "434:       const means = []",
          "435:       const sums = []",
          "436:       const others = []",
          "437:       columns.forEach((column, columnIndex) => {",
          "438:         if (columnIndex === 0) {",
          "439:           means.push('\u5e73\u5747')",
          "440:           sums.push('\u548c\u503c')",
          "441:           others.push('\u5176\u4ed6')",
          "442:         } else {",
          "443:           let meanCell = null",
          "444:           let sumCell = null",
          "445:           let otherCell = '-'",
          "446:           switch (column.field) {",
          "447:             case 'age':",
          "448:             case 'amount':",
          "449:               meanCell = this.meanNum(data, column.field)",
          "450:               sumCell = this.sumNum(data, column.field)",
          "451:               break",
          "452:             case 'sex':",
          "453:               otherCell = '\u65e0'",
          "454:               break",
          "455:           }",
          "456:           means.push(meanCell)",
          "457:           sums.push(sumCell)",
          "458:           others.push(otherCell)",
          "459:         }",
          "460:       })",
          "462:       return [means, sums, others]",
          "463:     }",
          "465: }",
          "468: <style lang=\"scss\" scoped>",
          "469: :deep(.mytable-footer .col-blue) {",
          "470:   background-color: #2db7f5;",
          "471:   color: #fff;",
          "472: }",
          "473: :deep(.mytable-footer .col-red) {",
          "474:   background-color: red;",
          "475:   color: #fff;",
          "476: }",
          "477: </style>",
          "",
          "[Added Lines]",
          "2:   <div style=\"height: 400px;overflow: hidden;\">",
          "5:       stripe",
          "6:       resizable",
          "7:       highlight-hover-row",
          "8:       height=\"100%\"",
          "9:       :padding=\"false\"",
          "10:       :loading=\"demo1.loading\"",
          "11:       :checkbox-config=\"{labelField: 'id', highlight: true, range: true}\"",
          "12:       :data=\"demo1.tableData\">",
          "14:       <vxe-column type=\"checkbox\" title=\"ID\" width=\"140\"></vxe-column>",
          "15:       <vxe-column field=\"role\" title=\"Role\"></vxe-column>",
          "17:       <vxe-column field=\"age\" title=\"Age\" :filters=\"ageOptions\" :filter-method=\"filterAgeMethod\">",
          "18:         <template #filter=\"{ $panel, column }\">",
          "19:           <vxe-input class=\"my-input\" v-for=\"(option, index) in column.filters\" :key=\"index\" v-model=\"option.data\" @input=\"$panel.changeOption($event, !!option.data, option)\" @keyup.enter=\"$panel.confirmFilter()\" placeholder=\"\u6309\u56de\u8f66\u786e\u8ba4\u7b5b\u9009\" />",
          "20:         </template>",
          "21:       </vxe-column>",
          "22:       <vxe-column field=\"sex\" title=\"Sex\" :filters=\"demo1.sexList\" :filter-multiple=\"false\" :formatter=\"formatterSex\"></vxe-column>",
          "23:       <vxe-column field=\"address\" title=\"Address\" show-overflow></vxe-column>",
          "25:   </div>",
          "26: </template>",
          "28: <script lang=\"ts\">",
          "29: import Vue from 'vue'",
          "30: import { VxeColumnPropTypes } from '../../../types'",
          "32: export default Vue.extend({",
          "33:   data () {",
          "34:     const demo1 = {",
          "35:       loading: false,",
          "36:       tableData: [] as any[],",
          "37:       sexList: [",
          "38:         { label: '\u5973', value: '0' },",
          "39:         { label: '\u7537', value: '1' }",
          "40:       ],",
          "41:       ageOptions: [",
          "42:         { label: '\u5927\u4e8e16\u5c81', value: 16 },",
          "43:         { label: '\u5927\u4e8e26\u5c81', value: 26 },",
          "44:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "45:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "46:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "47:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "48:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "49:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "50:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "51:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "52:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "53:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "54:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "55:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "56:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "57:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "58:         { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "59:         { label: '\u5927\u4e8e30\u5c81', value: 30 }",
          "60:       ]",
          "61:     }",
          "63:     const ageOptions: VxeColumnPropTypes.Filters = [",
          "64:       { data: '' }",
          "65:     ]",
          "67:     const formatterSex: VxeColumnPropTypes.Formatter = ({ cellValue }) => {",
          "68:       const item = demo1.sexList.find(item => item.value === cellValue)",
          "69:       return item ? item.label : ''",
          "70:     }",
          "72:     const filterAgeMethod: VxeColumnPropTypes.FilterMethod = ({ value, row }) => {",
          "73:       return row.age >= value",
          "74:     }",
          "77:       demo1,",
          "78:       ageOptions,",
          "79:       formatterSex,",
          "80:       filterAgeMethod",
          "83:   mounted () {",
          "84:     this.demo1.loading = true",
          "85:     setTimeout(() => {",
          "86:       this.demo1.tableData = [",
          "87:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, address: 'test abc' },",
          "88:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, address: 'Guangzhou' },",
          "89:         { id: 10003, name: 'Test3', role: 'PM', sex: '0', age: 32, address: 'Shanghai' },",
          "90:         { id: 10004, name: 'Test4', role: 'Designer', sex: '1', age: 23, address: 'test abc' },",
          "91:         { id: 10005, name: 'Test5', role: 'Develop', sex: '1', age: 30, address: 'Shanghai' },",
          "92:         { id: 10006, name: 'Test6', role: 'Designer', sex: '1', age: 21, address: 'test abc' },",
          "93:         { id: 10007, name: 'Test7', role: 'Test', sex: '0', age: 29, address: 'test abc' },",
          "94:         { id: 10008, name: 'Test8', role: 'Develop', sex: '0', age: 35, address: 'test abc' },",
          "95:         { id: 10009, name: 'Test9', role: 'Test', sex: '1', age: 21, address: 'test abc' },",
          "96:         { id: 10010, name: 'Test10', role: 'Develop', sex: '0', age: 28, address: 'test abc' },",
          "97:         { id: 10011, name: 'Test11', role: 'Test', sex: '0', age: 29, address: 'test abc' },",
          "98:         { id: 10012, name: 'Test12', role: 'Develop', sex: '1', age: 27, address: 'test abc' },",
          "99:         { id: 10013, name: 'Test13', role: 'Test', sex: '0', age: 24, address: 'test abc' },",
          "100:         { id: 10014, name: 'Test14', role: 'Develop', sex: '1', age: 34, address: 'test abc' },",
          "101:         { id: 10015, name: 'Test15', role: 'Test', sex: '1', age: 21, address: 'test abc' },",
          "102:         { id: 10016, name: 'Test16', role: 'Develop', sex: '0', age: 20, address: 'test abc' },",
          "103:         { id: 10017, name: 'Test17', role: 'Test', sex: '1', age: 31, address: 'test abc' },",
          "104:         { id: 10018, name: 'Test18', role: 'Develop', sex: '0', age: 32, address: 'test abc' },",
          "105:         { id: 10019, name: 'Test19', role: 'Test', sex: '1', age: 37, address: 'test abc' },",
          "106:         { id: 10020, name: 'Test20', role: 'Develop', sex: '1', age: 41, address: 'test abc' }",
          "107:       ]",
          "108:       this.demo1.loading = false",
          "109:     }, 100)",
          "111: })",
          "",
          "---------------"
        ],
        "packages/components.ts||packages/components.ts": [
          "File: packages/components.ts -> packages/components.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import { VxeUI } from '@vxe-ui/core'",
          "4: import { VxeColumn } from './column'",
          "",
          "[Removed Lines]",
          "1: import { VueConstructor } from 'vue'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20: ]",
          "24:   VxeUI.setConfig(options)",
          "25:   components.forEach(component => component.install(app))",
          "26: }",
          "",
          "[Removed Lines]",
          "23: export function install (app: VueConstructor, options?: VxeGlobalConfig) {",
          "",
          "[Added Lines]",
          "22: export function install (app: any, options?: VxeGlobalConfig) {",
          "",
          "---------------"
        ],
        "packages/table/render/index.ts||packages/table/render/index.ts": [
          "File: packages/table/render/index.ts -> packages/table/render/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "683:         const optionValue = option.data",
          "684:         return h(getDefaultComponent(renderOpts), {",
          "685:           key: oIndex,",
          "688:         })",
          "689:       })",
          "690:     },",
          "",
          "[Removed Lines]",
          "686:           ...getCellEditFilterProps(renderOpts, params, optionValue, { options, optionProps, optionGroups, optionGroupProps }),",
          "687:           ...getFilterOns(renderOpts, params, option)",
          "",
          "[Added Lines]",
          "686:           props: getCellEditFilterProps(renderOpts, params, optionValue, { options, optionProps, optionGroups, optionGroupProps }),",
          "687:           on: getFilterOns(renderOpts, params, option)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "033c979f91790182401a69042698a7acbf4cfcd4",
      "candidate_info": {
        "commit_hash": "033c979f91790182401a69042698a7acbf4cfcd4",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/033c979f91790182401a69042698a7acbf4cfcd4",
        "files": [
          "examples/views/icon/Icon.vue",
          "examples/views/pager/Pager.vue",
          "helper/vetur/attributes.json",
          "helper/vetur/tags.json",
          "package.json",
          "packages/grid/src/grid.js",
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js",
          "packages/pager/src/pager.js",
          "packages/table/src/methods.js",
          "packages/v-x-e-table/src/conf.js",
          "styles/icon.scss",
          "types/pager.d.ts"
        ],
        "message": "grid \u652f\u6301\u81ea\u5b9a\u4e49\u5e03\u5c40",
        "before_after_code_files": [
          "examples/views/icon/Icon.vue||examples/views/icon/Icon.vue",
          "examples/views/pager/Pager.vue||examples/views/pager/Pager.vue",
          "packages/grid/src/grid.js||packages/grid/src/grid.js",
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js",
          "packages/pager/src/pager.js||packages/pager/src/pager.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js",
          "styles/icon.scss||styles/icon.scss",
          "types/pager.d.ts||types/pager.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/views/icon/Icon.vue||examples/views/icon/Icon.vue": [
          "File: examples/views/icon/Icon.vue -> examples/views/icon/Icon.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   data () {",
          "26:     return {",
          "27:       prefixClass: 'vxe-icon-',",
          "29:       demoCodes: [",
          "30:         `",
          "31:         <i class=\"vxe-icon-delete\"></i>",
          "",
          "[Removed Lines]",
          "28:       iconList: ['time', 'feedback', 'lightning', 'cloudy', 'heavy-rain', 'moon', 'sunny', 'location', 'location-fill', 'microphone-fill', 'microphone', 'share', 'share-fill', 'flag', 'flag-fill', 'platform', 'goods-fill', 'goods', 'funnel-clear', 'envelope', 'envelope-open-fill', 'envelope-open', 'envelope-fill', 'message-fill', 'chat', 'chat-fill', 'send', 'send-fill', 'user', 'user-fill', 'wechat', 'alipay', 'indicator', 'file-excel', 'file-pdf', 'file-image', 'file-markdown', 'file-ppt', 'file-word', 'file-zip', 'file-txt', 'refresh', 'checkbox-unchecked', 'information', 'info-circle-fill', 'info-circle', 'chart-radar', 'chart-bar-x', 'repeat', 'voice-fill', 'voice', 'flow-branch', 'comment', 'folder', 'folder-open', 'picture', 'picture-fill', 'bell', 'bell-fill', 'undo', 'home', 'home-fill', 'checkbox-checked', 'checkbox-indeterminate', 'fullscreen', 'minimize', 'print', 'upload', 'download', 'cloud-upload', 'cloud-download', 'spinner', 'close', 'custom-column', 'edit', 'zoom-in', 'caret-down', 'caret-up', 'caret-right', 'caret-left', 'square-checked-fill', 'square-close', 'square-down', 'square-left', 'square-caret-right', 'square-minus', 'square-plus', 'square-right', 'square-up', 'square-checked', 'square-down-fill', 'square-minus-fill', 'square-close-fill', 'square-left-fill', 'square-caret-right-fill', 'square-up-fill', 'square-right-fill', 'square-plus-fill', 'square-plus-square', 'square-fill', 'square-square', 'sort-alpha-desc', 'sort-alpha-asc', 'sort-numeric-asc', 'sort-numeric-desc', 'star-fill', 'star', 'star-half', 'lock-fill', 'unlock-fill', 'question', 'exclamation', 'ellipsis-h', 'ellipsis-v', 'save', 'setting', 'setting-fill', 'link', 'sort', 'chart-pie', 'chart-line', 'swap', 'num-list', 'copy', 'company', 'swap-right', 'swap-left', 'table', 'merge-cells', 'paste', 'cut', 'lock', 'unlock', 'chart-bar-y', 'fixed-left-fill', 'fixed-left', 'fixed-right-fill', 'fixed-right', 'swap-down', 'swap-up', 'square', 'check', 'question-circle-fill', 'error-circle-fill', 'delete', 'dot', 'success-circle', 'delete-fill', 'minus', 'maximize', 'question-circle', 'warning-circle', 'warnion-circle-fill', 'eye-fill', 'search', 'funnel', 'eye-fill-close', 'search-zoom-in', 'arrow-right', 'arrow-left', 'arrow-up', 'calendar', 'arrow-down', 'warning-triangle', 'add', 'arrow-double-left', 'arrow-double-right', 'menu', 'warning-triangle-fill', 'error-circle', 'zoom-out', 'success-circle-fill', 'radio-checked', 'radio-unchecked'],",
          "",
          "[Added Lines]",
          "28:       iconList: ['end-page', 'home-page', 'time', 'feedback', 'lightning', 'cloudy', 'heavy-rain', 'moon', 'sunny', 'location', 'location-fill', 'microphone-fill', 'microphone', 'share', 'share-fill', 'flag', 'flag-fill', 'platform', 'goods-fill', 'goods', 'funnel-clear', 'envelope', 'envelope-open-fill', 'envelope-open', 'envelope-fill', 'message-fill', 'chat', 'chat-fill', 'send', 'send-fill', 'user', 'user-fill', 'wechat', 'alipay', 'indicator', 'file-excel', 'file-pdf', 'file-image', 'file-markdown', 'file-ppt', 'file-word', 'file-zip', 'file-txt', 'refresh', 'checkbox-unchecked', 'information', 'info-circle-fill', 'info-circle', 'chart-radar', 'chart-bar-x', 'repeat', 'voice-fill', 'voice', 'flow-branch', 'comment', 'folder', 'folder-open', 'picture', 'picture-fill', 'bell', 'bell-fill', 'undo', 'home', 'home-fill', 'checkbox-checked', 'checkbox-indeterminate', 'fullscreen', 'minimize', 'print', 'upload', 'download', 'cloud-upload', 'cloud-download', 'spinner', 'close', 'custom-column', 'edit', 'zoom-in', 'caret-down', 'caret-up', 'caret-right', 'caret-left', 'square-checked-fill', 'square-close', 'square-down', 'square-left', 'square-caret-right', 'square-minus', 'square-plus', 'square-right', 'square-up', 'square-checked', 'square-down-fill', 'square-minus-fill', 'square-close-fill', 'square-left-fill', 'square-caret-right-fill', 'square-up-fill', 'square-right-fill', 'square-plus-fill', 'square-plus-square', 'square-fill', 'square-square', 'sort-alpha-desc', 'sort-alpha-asc', 'sort-numeric-asc', 'sort-numeric-desc', 'star-fill', 'star', 'star-half', 'lock-fill', 'unlock-fill', 'question', 'exclamation', 'ellipsis-h', 'ellipsis-v', 'save', 'setting', 'setting-fill', 'link', 'sort', 'chart-pie', 'chart-line', 'swap', 'num-list', 'copy', 'company', 'swap-right', 'swap-left', 'table', 'merge-cells', 'paste', 'cut', 'lock', 'unlock', 'chart-bar-y', 'fixed-left-fill', 'fixed-left', 'fixed-right-fill', 'fixed-right', 'swap-down', 'swap-up', 'square', 'check', 'question-circle-fill', 'error-circle-fill', 'delete', 'dot', 'success-circle', 'delete-fill', 'minus', 'maximize', 'question-circle', 'warning-circle', 'warnion-circle-fill', 'eye-fill', 'search', 'funnel', 'eye-fill-close', 'search-zoom-in', 'arrow-right', 'arrow-left', 'arrow-up', 'calendar', 'arrow-down', 'warning-triangle', 'add', 'arrow-double-left', 'arrow-double-right', 'menu', 'warning-triangle-fill', 'error-circle', 'zoom-out', 'success-circle-fill', 'radio-checked', 'radio-unchecked'],",
          "",
          "---------------"
        ],
        "examples/views/pager/Pager.vue||examples/views/pager/Pager.vue": [
          "File: examples/views/pager/Pager.vue -> examples/views/pager/Pager.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:         :page-size.sync=\"page6.pageSize\"",
          "68:         :total=\"page6.totalResult\"",
          "69:         :page-sizes=\"[10, 20, 100, {label: '\u5927\u91cf\u6570\u636e', value: 1000}, {label: '\u5168\u91cf\u6570\u636e', value: -1}]\"",
          "71:         <template #left>",
          "72:           <vxe-button size=\"small\">",
          "73:             <template #default>\u66f4\u591a\u64cd\u4f5c</template>",
          "",
          "[Removed Lines]",
          "70:         :layouts=\"['PrevJump', 'PrevPage', 'Number', 'NextPage', 'NextJump', 'Sizes', 'FullJump', 'Total']\">",
          "",
          "[Added Lines]",
          "70:         :layouts=\"['Home', 'PrevJump', 'PrevPage', 'Number', 'NextPage', 'NextJump', 'End', 'Sizes', 'FullJump', 'Total']\">",
          "",
          "---------------"
        ],
        "packages/grid/src/grid.js||packages/grid/src/grid.js": [
          "File: packages/grid/src/grid.js -> packages/grid/src/grid.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:   return ons",
          "138: }",
          "140: Object.keys(Table.methods).forEach(name => {",
          "141:   methods[name] = function (...args) {",
          "142:     return this.$refs.xTable && this.$refs.xTable[name](...args)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143: function renderForms (h, _vm) {",
          "144:   const { _e, $scopedSlots, formConfig } = _vm",
          "145:   const formSlot = $scopedSlots.form",
          "146:   const hasForm = !!(formSlot || isEnableConf(formConfig))",
          "148:   return hasForm ? h('div', {",
          "149:     key: 'form',",
          "150:     ref: 'formWrapper',",
          "151:     class: 'vxe-grid--form-wrapper'",
          "152:   }, formSlot ? formSlot.call(_vm, { $grid: _vm }, h) : renderDefaultForm(h, _vm)) : _e()",
          "153: }",
          "158: function renderToolbars (h, _vm) {",
          "159:   const { _e, $scopedSlots, toolbarConfig, toolbar } = _vm",
          "160:   const toolbarSlot = $scopedSlots.toolbar",
          "161:   const hasToolbar = !!(toolbarSlot || isEnableConf(toolbarConfig) || toolbar)",
          "163:   return hasToolbar ? h('div', {",
          "164:     key: 'toolbar',",
          "165:     ref: 'toolbarWrapper',",
          "166:     class: 'vxe-grid--toolbar-wrapper'",
          "167:   }, toolbarSlot",
          "168:     ? toolbarSlot.call(_vm, { $grid: _vm }, h)",
          "169:     : [",
          "170:         h('vxe-toolbar', {",
          "171:           props: _vm.toolbarOpts,",
          "172:           ref: 'xToolbar',",
          "173:           scopedSlots: getToolbarSlots(_vm)",
          "174:         })",
          "175:       ]",
          "176:   ) : _e()",
          "177: }",
          "182: function renderTops (h, _vm) {",
          "183:   const { _e, $scopedSlots } = _vm",
          "184:   const topSlot = $scopedSlots.top",
          "186:   return topSlot ? h('div', {",
          "187:     key: 'top',",
          "188:     ref: 'topWrapper',",
          "189:     class: 'vxe-grid--top-wrapper'",
          "190:   }, topSlot.call(_vm, { $grid: _vm }, h)) : _e()",
          "191: }",
          "196: function renderTables (h, _vm) {",
          "197:   const { $scopedSlots, tableProps } = _vm",
          "199:   return h('vxe-table', {",
          "200:     key: 'table',",
          "201:     props: tableProps,",
          "202:     on: getTableOns(_vm),",
          "203:     scopedSlots: $scopedSlots,",
          "204:     ref: 'xTable'",
          "205:   })",
          "206: }",
          "211: function renderBottoms (h, _vm) {",
          "212:   const { _e, $scopedSlots } = _vm",
          "213:   const bottomSlot = $scopedSlots.bottom",
          "215:   return bottomSlot ? h('div', {",
          "216:     key: 'bottom',",
          "217:     ref: 'bottomWrapper',",
          "218:     class: 'vxe-grid--bottom-wrapper'",
          "219:   }, bottomSlot.call(_vm, { $grid: _vm }, h)) : _e()",
          "220: }",
          "225: function renderPagers (h, _vm) {",
          "226:   const { _e, $scopedSlots, pagerConfig, proxyConfig, tablePage } = _vm",
          "227:   const pagerSlot = $scopedSlots.pager",
          "228:   const hasPager = !!(pagerSlot || isEnableConf(pagerConfig))",
          "230:   return hasPager ? h('div', {",
          "231:     key: 'pager',",
          "232:     ref: 'pagerWrapper',",
          "233:     class: 'vxe-grid--pager-wrapper'",
          "234:   }, pagerSlot",
          "235:     ? pagerSlot.call(_vm, { $grid: _vm }, h)",
          "236:     : [",
          "237:         h('vxe-pager', {",
          "238:           props: { ..._vm.pagerOpts, ...(proxyConfig ? tablePage : {}) },",
          "239:           on: {",
          "240:             'page-change': _vm.pageChangeEvent",
          "241:           },",
          "242:           scopedSlots: getPagerSlots(_vm)",
          "243:         })",
          "244:       ]",
          "245:   ) : _e()",
          "246: }",
          "248: const defaultLayouts = ['Form', 'Toolbar', 'Top', 'Table', 'Bottom', 'Pager']",
          "250: function renderLayout (h, _vm) {",
          "251:   const { layouts } = _vm",
          "252:   const vns = []",
          "253:   const currLayouts = (layouts && layouts.length ? layouts : (GlobalConfig.grid.layouts || defaultLayouts))",
          "254:   currLayouts.forEach(name => {",
          "255:     switch (name) {",
          "256:       case 'Form':",
          "257:         vns.push(renderForms(h, _vm))",
          "258:         break",
          "259:       case 'Toolbar':",
          "260:         vns.push(renderToolbars(h, _vm))",
          "261:         break",
          "262:       case 'Top':",
          "263:         vns.push(renderTops(h, _vm))",
          "264:         break",
          "265:       case 'Table':",
          "266:         vns.push(renderTables(h, _vm))",
          "267:         break",
          "268:       case 'Bottom':",
          "269:         vns.push(renderBottoms(h, _vm))",
          "270:         break",
          "271:       case 'Pager':",
          "272:         vns.push(renderPagers(h, _vm))",
          "273:         break",
          "274:       default:",
          "275:         if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "276:           errLog('vxe.error.notProp', [`layouts -> ${name}`])",
          "277:         }",
          "278:         break",
          "279:     }",
          "280:   })",
          "281:   return vns",
          "282: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:   mixins: [vSize],",
          "149:   props: {",
          "150:     ...Table.props,",
          "151:     columns: Array,",
          "152:     pagerConfig: [Boolean, Object],",
          "153:     proxyConfig: Object,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:     layouts: Array,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "279:     GlobalEvent.off(this, 'keydown')",
          "280:   },",
          "281:   render (h) {",
          "286:     return h('div', {",
          "287:       class: ['vxe-grid', {",
          "288:         [`size--${vSize}`]: vSize,",
          "",
          "[Removed Lines]",
          "282:     const { $scopedSlots, vSize, isZMax } = this",
          "283:     const hasForm = !!($scopedSlots.form || isEnableConf(this.formConfig))",
          "284:     const hasToolbar = !!($scopedSlots.toolbar || isEnableConf(this.toolbarConfig) || this.toolbar)",
          "285:     const hasPager = !!($scopedSlots.pager || isEnableConf(this.pagerConfig))",
          "",
          "[Added Lines]",
          "427:     const { vSize, isZMax } = this",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "292:         'is--loading': this.loading || this.tableLoading",
          "293:       }],",
          "294:       style: this.renderStyle",
          "364:   },",
          "365:   methods: {",
          "366:     ...methods,",
          "",
          "[Removed Lines]",
          "295:     }, [",
          "299:       hasForm ? h('div', {",
          "300:         ref: 'formWrapper',",
          "301:         class: 'vxe-grid--form-wrapper'",
          "302:       }, $scopedSlots.form",
          "303:         ? $scopedSlots.form.call(this, { $grid: this }, h)",
          "304:         : renderDefaultForm(h, this)",
          "305:       ) : null,",
          "309:       hasToolbar ? h('div', {",
          "310:         ref: 'toolbarWrapper',",
          "311:         class: 'vxe-grid--toolbar-wrapper'",
          "312:       }, $scopedSlots.toolbar",
          "313:         ? $scopedSlots.toolbar.call(this, { $grid: this }, h)",
          "314:         : [",
          "315:             h('vxe-toolbar', {",
          "316:               props: this.toolbarOpts,",
          "317:               ref: 'xToolbar',",
          "318:               scopedSlots: getToolbarSlots(this)",
          "319:             })",
          "320:           ]",
          "321:       ) : null,",
          "325:       $scopedSlots.top ? h('div', {",
          "326:         ref: 'topWrapper',",
          "327:         class: 'vxe-grid--top-wrapper'",
          "328:       }, $scopedSlots.top.call(this, { $grid: this }, h)) : null,",
          "332:       h('vxe-table', {",
          "333:         props: this.tableProps,",
          "334:         on: getTableOns(this),",
          "335:         scopedSlots: $scopedSlots,",
          "336:         ref: 'xTable'",
          "337:       }),",
          "341:       $scopedSlots.bottom ? h('div', {",
          "342:         ref: 'bottomWrapper',",
          "343:         class: 'vxe-grid--bottom-wrapper'",
          "344:       }, $scopedSlots.bottom.call(this, { $grid: this }, h)) : null,",
          "348:       hasPager ? h('div', {",
          "349:         ref: 'pagerWrapper',",
          "350:         class: 'vxe-grid--pager-wrapper'",
          "351:       }, $scopedSlots.pager",
          "352:         ? $scopedSlots.pager.call(this, { $grid: this }, h)",
          "353:         : [",
          "354:             h('vxe-pager', {",
          "355:               props: { ...this.pagerOpts, ...(this.proxyConfig ? this.tablePage : {}) },",
          "356:               on: {",
          "357:                 'page-change': this.pageChangeEvent",
          "358:               },",
          "359:               scopedSlots: getPagerSlots(this)",
          "360:             })",
          "361:           ]",
          "362:       ) : null",
          "363:     ])",
          "",
          "[Added Lines]",
          "437:     }, renderLayout(h, this))",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:       pagesize: '{0}/page',",
          "169:       total: 'Total {0} record',",
          "170:       pageClassifier: '',",
          "171:       prevPage: 'Previous page',",
          "172:       nextPage: 'next page',",
          "173:       prevJump: 'Jump previous page',",
          "175:     },",
          "176:     alert: {",
          "177:       title: 'Message notification'",
          "",
          "[Removed Lines]",
          "174:       nextJump: 'Jump next page'",
          "",
          "[Added Lines]",
          "171:       homePage: 'Home',",
          "172:       homePageTitle: 'Home page',",
          "174:       prevPageTitle: 'Previous page',",
          "176:       nextPageTitle: 'next page',",
          "178:       prevJumpTitle: 'Jump previous page',",
          "179:       nextJump: 'Jump next page',",
          "180:       nextJumpTitle: 'Jump next page',",
          "181:       endPage: 'End page',",
          "182:       endPageTitle: 'End'",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:       pagesize: '{0}\u4ef6/\u30da\u30fc\u30b8',",
          "169:       total: '\u5168 {0} \u4ef6',",
          "170:       pageClassifier: '',",
          "171:       prevPage: '\u524d\u306e\u30da\u30fc\u30b8',",
          "172:       nextPage: '\u6b21\u306e\u30da\u30fc\u30b8',",
          "173:       prevJump: '\u524d\u306e\u30da\u30fc\u30b8\u306b\u79fb\u52d5',",
          "175:     },",
          "176:     alert: {",
          "177:       title: '\u30e1\u30c3\u30bb\u30fc\u30b8'",
          "",
          "[Removed Lines]",
          "174:       nextJump: '\u6b21\u306e\u30da\u30fc\u30b8\u306b\u79fb\u52d5'",
          "",
          "[Added Lines]",
          "171:       homePage: 'Home',",
          "172:       homePageTitle: 'Home page',",
          "174:       prevPageTitle: '\u524d\u306e\u30da\u30fc\u30b8',",
          "176:       nextPageTitle: '\u6b21\u306e\u30da\u30fc\u30b8',",
          "178:       prevJumpTitle: '\u524d\u306e\u30da\u30fc\u30b8\u306b\u79fb\u52d5',",
          "179:       nextJump: '\u6b21\u306e\u30da\u30fc\u30b8\u306b\u79fb\u52d5',",
          "180:       nextJumpTitle: '\u6b21\u306e\u30da\u30fc\u30b8\u306b\u79fb\u52d5',",
          "181:       endPage: 'End',",
          "182:       endPageTitle: 'End page'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:       pagesize: '{0}\u6761/\u9875',",
          "169:       total: '\u5171 {0} \u6761\u8bb0\u5f55',",
          "170:       pageClassifier: '\u9875',",
          "171:       prevPage: '\u4e0a\u4e00\u9875',",
          "172:       nextPage: '\u4e0b\u4e00\u9875',",
          "173:       prevJump: '\u5411\u4e0a\u8df3\u9875',",
          "175:     },",
          "176:     alert: {",
          "177:       title: '\u6d88\u606f\u63d0\u793a'",
          "",
          "[Removed Lines]",
          "174:       nextJump: '\u5411\u4e0b\u8df3\u9875'",
          "",
          "[Added Lines]",
          "171:       homePage: '\u9996\u9875',",
          "172:       homePageTitle: '\u9996\u9875',",
          "174:       prevPageTitle: '\u4e0a\u4e00\u9875',",
          "176:       nextPageTitle: '\u4e0b\u4e00\u9875',",
          "178:       prevJumpTitle: '\u5411\u4e0a\u8df3\u9875',",
          "179:       nextJump: '\u5411\u4e0b\u8df3\u9875',",
          "180:       nextJumpTitle: '\u5411\u4e0b\u8df3\u9875',",
          "181:       endPage: '\u672b\u9875',",
          "182:       endPageTitle: '\u672b\u9875'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:       pagesize: '{0}\u9805/\u9801',",
          "169:       total: '\u5171 {0} \u9805\u8a18\u9304',",
          "170:       pageClassifier: '\u9801',",
          "171:       prevPage: '\u4e0a\u4e00\u9801',",
          "172:       nextPage: '\u4e0b\u4e00\u9801',",
          "173:       prevJump: '\u5411\u4e0a\u8df3\u9801',",
          "175:     },",
          "176:     alert: {",
          "177:       title: '\u8a0a\u606f\u63d0\u793a'",
          "",
          "[Removed Lines]",
          "174:       nextJump: '\u5411\u4e0b\u8df3\u9801'",
          "",
          "[Added Lines]",
          "171:       homePage: '\u9996\u9801',",
          "172:       homePageTitle: '\u9996\u9801',",
          "174:       prevPageTitle: '\u4e0a\u4e00\u9801',",
          "176:       nextPageTitle: '\u4e0b\u4e00\u9801',",
          "178:       prevJumpTitle: '\u5411\u4e0a\u8df3\u9801',",
          "179:       nextJump: '\u5411\u4e0b\u8df3\u9801',",
          "180:       nextJumpTitle: '\u5411\u4e0b\u8df3\u9801',",
          "181:       endPage: '\u672b\u9801',",
          "182:       endPageTitle: '\u672b\u9801'",
          "",
          "---------------"
        ],
        "packages/pager/src/pager.js||packages/pager/src/pager.js": [
          "File: packages/pager/src/pager.js -> packages/pager/src/pager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import XEUtils from 'xe-utils'",
          "2: import GlobalConfig from '../../v-x-e-table/src/conf'",
          "3: import vSize from '../../mixins/size'",
          "5: export default {",
          "6:   name: 'VxePager',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import { errLog } from '../../tools/log'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     iconJumpPrev: String,",
          "39:     iconJumpNext: String,",
          "40:     iconNextPage: String,",
          "42:   },",
          "43:   inject: {",
          "44:     $xegrid: {",
          "",
          "[Removed Lines]",
          "41:     iconJumpMore: String",
          "",
          "[Added Lines]",
          "42:     iconJumpMore: String,",
          "43:     iconHomePage: String,",
          "44:     iconEndPage: String",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:       )",
          "97:     }",
          "98:     this.layouts.forEach(name => {",
          "100:     })",
          "101:     if ($scopedSlots.right) {",
          "102:       childNodes.push(",
          "",
          "[Removed Lines]",
          "99:       childNodes.push(this[`render${name}`](h))",
          "",
          "[Added Lines]",
          "102:       if (this[`render${name}`](h)) {",
          "103:         childNodes.push(this[`render${name}`](h))",
          "104:       } else {",
          "105:         if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "106:           errLog('vxe.error.notProp', [`layouts -> ${name}`])",
          "107:         }",
          "108:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "122:     ])",
          "123:   },",
          "124:   methods: {",
          "126:     renderPrevPage (h) {",
          "127:       return h('button', {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     renderHome (h) {",
          "136:       return h('button', {",
          "137:         class: ['vxe-pager--prev-btn', {",
          "138:           'is--disabled': this.currentPage <= 1",
          "139:         }],",
          "140:         attrs: {",
          "141:           type: 'button',",
          "142:           title: GlobalConfig.i18n('vxe.pager.homePageTitle')",
          "143:         },",
          "144:         on: {",
          "145:           click: this.homePage",
          "146:         }",
          "147:       }, [",
          "148:         h('i', {",
          "149:           class: ['vxe-pager--btn-icon', this.iconHomePage || GlobalConfig.icon.PAGER_HOME]",
          "150:         })",
          "151:       ])",
          "152:     },",
          "154:     renderEnd (h) {",
          "155:       return h('button', {",
          "156:         class: ['vxe-pager--prev-btn', {",
          "157:           'is--disabled': this.currentPage <= 1",
          "158:         }],",
          "159:         attrs: {",
          "160:           type: 'button',",
          "161:           title: GlobalConfig.i18n('vxe.pager.endPageTitle')",
          "162:         },",
          "163:         on: {",
          "164:           click: this.endPage",
          "165:         }",
          "166:       }, [",
          "167:         h('i', {",
          "168:           class: ['vxe-pager--btn-icon', this.iconEndPage || GlobalConfig.icon.PAGER_END]",
          "169:         })",
          "170:       ])",
          "171:     },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "130:         }],",
          "131:         attrs: {",
          "132:           type: 'button',",
          "134:         },",
          "135:         on: {",
          "136:           click: this.prevPage",
          "",
          "[Removed Lines]",
          "133:           title: GlobalConfig.i18n('vxe.pager.prevPage')",
          "",
          "[Added Lines]",
          "180:           title: GlobalConfig.i18n('vxe.pager.prevPageTitle')",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "150:         }],",
          "151:         attrs: {",
          "152:           type: 'button',",
          "154:         },",
          "155:         on: {",
          "156:           click: this.prevJump",
          "",
          "[Removed Lines]",
          "153:           title: GlobalConfig.i18n('vxe.pager.prevJump')",
          "",
          "[Added Lines]",
          "200:           title: GlobalConfig.i18n('vxe.pager.prevJumpTitle')",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "185:         }],",
          "186:         attrs: {",
          "187:           type: 'button',",
          "189:         },",
          "190:         on: {",
          "191:           click: this.nextJump",
          "",
          "[Removed Lines]",
          "188:           title: GlobalConfig.i18n('vxe.pager.nextJump')",
          "",
          "[Added Lines]",
          "235:           title: GlobalConfig.i18n('vxe.pager.nextJumpTitle')",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "207:         }],",
          "208:         attrs: {",
          "209:           type: 'button',",
          "211:         },",
          "212:         on: {",
          "213:           click: this.nextPage",
          "",
          "[Removed Lines]",
          "210:           title: GlobalConfig.i18n('vxe.pager.nextPage')",
          "",
          "[Added Lines]",
          "257:           title: GlobalConfig.i18n('vxe.pager.nextPageTitle')",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "351:     getPageCount (total, size) {",
          "352:       return Math.max(Math.ceil(total / size), 1)",
          "353:     },",
          "354:     prevPage () {",
          "355:       const { currentPage, pageCount } = this",
          "356:       if (currentPage > 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:     homePage () {",
          "402:       const { currentPage } = this",
          "403:       if (currentPage > 1) {",
          "404:         this.jumpPage(1)",
          "405:       }",
          "406:     },",
          "407:     endPage () {",
          "408:       const { currentPage, pageCount } = this",
          "409:       if (currentPage < pageCount) {",
          "410:         this.jumpPage(pageCount)",
          "411:       }",
          "412:     },",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1412:   getTableData () {",
          "1414:     return {",
          "1416:       visibleData: afterFullData.slice(0),",
          "1417:       tableData: tableData.slice(0),",
          "1418:       footerData: footerTableData.slice(0)",
          "",
          "[Removed Lines]",
          "1413:     const { tableFullData, afterFullData, tableData, footerTableData } = this",
          "1415:       fullData: tableFullData.slice(0),",
          "",
          "[Added Lines]",
          "1413:     const { treeConfig, tableFullData, afterFullData, tableData, footerTableData, tableFullTreeData } = this",
          "1415:       fullData: treeConfig ? tableFullTreeData.slice(0) : tableFullData.slice(0),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1459:   setColumnFixed (fieldOrColumn, fixed) {",
          "1460:     const column = handleFieldOrColumn(this, fieldOrColumn)",
          "1461:     const targetColumn = getRootColumn(this, column)",
          "1462:     if (targetColumn && targetColumn.fixed !== fixed) {",
          "1463:       XEUtils.eachTree([targetColumn], (column) => {",
          "1464:         column.fixed = fixed",
          "1465:       })",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1460:     const { isMaxFixedColumn, columnOpts } = this",
          "1461:     const { maxFixedSize } = columnOpts",
          "1466:       if (!targetColumn.fixed && isMaxFixedColumn) {",
          "1467:         if (VXETable.modal) {",
          "1468:           VXETable.modal.message({",
          "1469:             status: 'error',",
          "1470:             content: GlobalConfig.i18n('vxe.table.maxFixedCol', [maxFixedSize])",
          "1471:           })",
          "1472:         }",
          "1473:         return this.$nextTick()",
          "1474:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1834:     Object.assign(columnStore, { leftList, centerList, rightList })",
          "1835:     if (scrollXLoad) {",
          "1836:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "1843:         if (this.spanMethod) {",
          "1844:           warnLog('vxe.error.scrollErrProp', ['span-method'])",
          "1845:         }",
          "",
          "[Removed Lines]",
          "1837:         if (this.showHeader && !this.showHeaderOverflow) {",
          "1838:           warnLog('vxe.error.reqProp', ['show-header-overflow'])",
          "1839:         }",
          "1840:         if (this.showFooter && !this.showFooterOverflow) {",
          "1841:           warnLog('vxe.error.reqProp', ['show-footer-overflow'])",
          "1842:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js": [
          "File: packages/v-x-e-table/src/conf.js -> packages/v-x-e-table/src/conf.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:     SELECT_CLOSE: iconPrefix + 'caret-down',",
          "168:     PAGER_JUMP_PREV: iconPrefix + 'arrow-double-left',",
          "169:     PAGER_JUMP_NEXT: iconPrefix + 'arrow-double-right',",
          "170:     PAGER_PREV_PAGE: iconPrefix + 'arrow-left',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:     PAGER_HOME: iconPrefix + 'home-page',",
          "169:     PAGER_END: iconPrefix + 'end-page',",
          "",
          "---------------"
        ],
        "styles/icon.scss||styles/icon.scss": [
          "File: styles/icon.scss -> styles/icon.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: @font-face {",
          "4:   font-family: \"vxeiconfont\";",
          "5:   src:",
          "7: }",
          "9: @keyframes rollCircle {",
          "",
          "[Removed Lines]",
          "6:        url('data:application/x-font-woff2;charset=utf-8;base64,') format('woff2');",
          "",
          "[Added Lines]",
          "6:        url('data:application/x-font-woff2;charset=utf-8;base64,') format('woff2');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:   }",
          "74: }",
          "76: .vxe-icon-time:before {",
          "77:   content: \"\\e64d\";",
          "78: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76: .vxe-icon-end-page:before {",
          "77:   content: \"\\e607\";",
          "78: }",
          "80: .vxe-icon-home-page:before {",
          "81:   content: \"\\f294\";",
          "82: }",
          "",
          "---------------"
        ],
        "types/pager.d.ts||types/pager.d.ts": [
          "File: types/pager.d.ts -> types/pager.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10:   layouts?: Array<'PrevJump' | 'PrevPage' | 'Number' | 'JumpNumber' | 'NextPage' | 'NextJump' | 'Sizes' | 'Jump' | 'FullJump' | 'PageCount' | 'Total'>;",
          "",
          "[Added Lines]",
          "10:   layouts?: Array<'Home' | 'PrevJump' | 'PrevPage' | 'Number' | 'JumpNumber' | 'NextPage' | 'NextJump' | 'End' | 'Sizes' | 'Jump' | 'FullJump' | 'PageCount' | 'Total'>;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "46a6a5977de1fb1eb7ad5fab95c64d023e2cdd79",
      "candidate_info": {
        "commit_hash": "46a6a5977de1fb1eb7ad5fab95c64d023e2cdd79",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/46a6a5977de1fb1eb7ad5fab95c64d023e2cdd79",
        "files": [
          "package.json",
          "packages/filter/src/mixin.js",
          "packages/filter/src/panel.js",
          "packages/modal/src/modal.js",
          "packages/table/src/methods.js",
          "styles/table.scss"
        ],
        "message": "releases 3.8.13",
        "before_after_code_files": [
          "packages/filter/src/mixin.js||packages/filter/src/mixin.js",
          "packages/filter/src/panel.js||packages/filter/src/panel.js",
          "packages/modal/src/modal.js||packages/modal/src/modal.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "styles/table.scss||styles/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/filter/src/mixin.js||packages/filter/src/mixin.js": [
          "File: packages/filter/src/mixin.js -> packages/filter/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:         this.initStore.filter = true",
          "84:         this.$nextTick(() => {",
          "85:           const { $refs } = this",
          "97:           }",
          "98:           const centerWidth = filterWidth / 2",
          "99:           const minMargin = 10",
          "100:           const maxLeft = bodyElem.clientWidth - filterWidth - minMargin",
          "101:           let left, right",
          "102:           const style = {",
          "104:           }",
          "106:           let maxHeight = null",
          "109:           }",
          "110:           if (column.fixed === 'left') {",
          "111:             left = targetElem.offsetLeft + targetElem.offsetParent.offsetLeft - centerWidth",
          "",
          "[Removed Lines]",
          "86:           const bodyElem = $refs.tableBody.$el",
          "87:           const filterWrapperElem = $refs.filterWrapper.$el",
          "88:           let filterWidth = 0",
          "89:           let filterHeight = 0",
          "90:           let filterHeadElem = null",
          "91:           let filterFootElem = null",
          "92:           if (filterWrapperElem) {",
          "93:             filterWidth = filterWrapperElem.offsetWidth",
          "94:             filterHeight = filterWrapperElem.offsetHeight",
          "95:             filterHeadElem = filterWrapperElem.querySelector('.vxe-table--filter-header')",
          "96:             filterFootElem = filterWrapperElem.querySelector('.vxe-table--filter-footer')",
          "103:             top: `${targetElem.offsetTop + targetElem.offsetParent.offsetTop + targetElem.offsetHeight + 8}px`",
          "107:           if (filterHeight >= bodyElem.clientHeight) {",
          "108:             maxHeight = Math.max(60, bodyElem.clientHeight - (filterFootElem ? filterFootElem.offsetHeight : 0) - (filterHeadElem ? filterHeadElem.offsetHeight : 0))",
          "",
          "[Added Lines]",
          "86:           const { tableHeader, tableBody, filterWrapper } = $refs",
          "87:           const bodyElem = tableBody.$el",
          "88:           const headerElem = tableHeader ? tableHeader.$el : null",
          "89:           if (!bodyElem) {",
          "90:             return",
          "92:           const filterWrapperElem = filterWrapper.$el",
          "93:           if (!filterWrapperElem) {",
          "94:             return",
          "95:           }",
          "96:           const filterWidth = filterWrapperElem.offsetWidth",
          "97:           const filterHeight = filterWrapperElem.offsetHeight",
          "98:           const filterHeadElem = filterWrapperElem.querySelector('.vxe-table--filter-header')",
          "99:           const filterFootElem = filterWrapperElem.querySelector('.vxe-table--filter-footer')",
          "105:             top: `${targetElem.offsetTop + targetElem.offsetParent.offsetTop + targetElem.offsetHeight}px`",
          "109:           const bodyHeight = bodyElem.clientHeight - (headerElem ? headerElem.clientHeight / 2 : 0)",
          "110:           if (filterHeight >= bodyHeight) {",
          "111:             maxHeight = Math.max(40, bodyHeight - (filterFootElem ? filterFootElem.offsetHeight : 0) - (filterHeadElem ? filterHeadElem.offsetHeight : 0))",
          "",
          "---------------"
        ],
        "packages/filter/src/panel.js||packages/filter/src/panel.js": [
          "File: packages/filter/src/panel.js -> packages/filter/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:       const filterRender = column.filterRender",
          "123:       const compConf = isEnableConf(filterRender) ? VXETable.renderer.get(filterRender.name) : null",
          "124:       const isDisabled = !hasCheckOption && !filterStore.isAllSelected && !filterStore.isIndeterminate",
          "126:         h('div', {",
          "127:           class: 'vxe-table--filter-footer'",
          "128:         }, [",
          "",
          "[Removed Lines]",
          "125:       return multiple && (compConf ? !(compConf.showTableFilterFooter === false || compConf.showFilterFooter === false) : true) ? [",
          "",
          "[Added Lines]",
          "125:       return multiple && (compConf ? !(compConf.showTableFilterFooter === false || compConf.showFilterFooter === false || compConf.isFooter === false) : true) ? [",
          "",
          "---------------"
        ],
        "packages/modal/src/modal.js||packages/modal/src/modal.js": [
          "File: packages/modal/src/modal.js -> packages/modal/src/modal.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   },",
          "67:   data () {",
          "68:     return {",
          "70:       visible: false,",
          "71:       contentVisible: false,",
          "72:       modalTop: 0,",
          "73:       modalZindex: 0,",
          "75:       firstOpen: true",
          "76:     }",
          "77:   },",
          "",
          "[Removed Lines]",
          "69:       inited: false,",
          "74:       zoomLocat: null,",
          "",
          "[Added Lines]",
          "69:       initialized: false,",
          "74:       revertLocat: null,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:     }",
          "124:   },",
          "125:   render (h) {",
          "127:     const content = this.content || this.message",
          "128:     const defaultSlot = $scopedSlots.default || slots.default",
          "129:     const footerSlot = $scopedSlots.footer || slots.footer",
          "",
          "[Removed Lines]",
          "126:     const { _e, $scopedSlots, slots = {}, inited, vSize, className, type, resize, showClose, showZoom, animat, draggable, loading, status, iconStatus, showFooter, zoomLocat, modalTop, dblclickZoom, contentVisible, visible, title, lockScroll, lockView, mask, isMsg, showTitleOverflow, destroyOnClose, showCancelButton, showConfirmButton } = this",
          "",
          "[Added Lines]",
          "126:     const { _e, $scopedSlots, slots = {}, initialized, vSize, className, type, resize, showClose, showZoom, animat, draggable, loading, status, iconStatus, showFooter, revertLocat, modalTop, dblclickZoom, contentVisible, visible, title, lockScroll, lockView, mask, isMsg, showTitleOverflow, destroyOnClose, showCancelButton, showConfirmButton } = this",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "146:         'lock--view': lockView,",
          "147:         'is--resize': resize,",
          "148:         'is--mask': mask,",
          "150:         'is--visible': contentVisible,",
          "151:         'is--active': visible,",
          "152:         'is--loading': loading",
          "",
          "[Removed Lines]",
          "149:         'is--maximize': zoomLocat,",
          "",
          "[Added Lines]",
          "149:         'is--maximize': revertLocat,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "172:             'is--ellipsis': !isMsg && showTitleOverflow",
          "173:           }],",
          "174:           on: headerOns",
          "176:           h('div', {",
          "177:             class: 'vxe-modal--header-title'",
          "178:           }, titleSlot ? getSlotVNs(titleSlot.call(this, { $modal: this }, h)) : (title ? getFuncText(title) : GlobalConfig.i18n('vxe.alert.title'))),",
          "",
          "[Removed Lines]",
          "175:         }, headerSlot ? (!inited || (destroyOnClose && !visible) ? [] : getSlotVNs(headerSlot.call(this, { $modal: this }, h))) : [",
          "",
          "[Added Lines]",
          "175:         }, headerSlot ? (!initialized || (destroyOnClose && !visible) ? [] : getSlotVNs(headerSlot.call(this, { $modal: this }, h))) : [",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "183:               class: 'vxe-modal--corner-wrapper'",
          "184:             }, getSlotVNs(cornerSlot({ $modal: this }))) : _e(),",
          "185:             showZoom ? h('i', {",
          "187:               attrs: {",
          "189:               },",
          "190:               on: {",
          "191:                 click: this.toggleZoomEvent",
          "",
          "[Removed Lines]",
          "186:               class: ['vxe-modal--zoom-btn', 'trigger--btn', zoomLocat ? GlobalConfig.icon.MODAL_ZOOM_OUT : GlobalConfig.icon.MODAL_ZOOM_IN],",
          "188:                 title: GlobalConfig.i18n(`vxe.modal.zoom${zoomLocat ? 'Out' : 'In'}`)",
          "",
          "[Added Lines]",
          "186:               class: ['vxe-modal--zoom-btn', 'trigger--btn', revertLocat ? GlobalConfig.icon.MODAL_ZOOM_OUT : GlobalConfig.icon.MODAL_ZOOM_IN],",
          "188:                 title: GlobalConfig.i18n(`vxe.modal.zoom${revertLocat ? 'Out' : 'In'}`)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "214:           ]) : null,",
          "215:           h('div', {",
          "216:             class: 'vxe-modal--content'",
          "",
          "[Removed Lines]",
          "217:           }, defaultSlot ? (!inited || (destroyOnClose && !visible) ? [] : getSlotVNs(defaultSlot.call(this, { $modal: this }, h))) : getFuncText(content)),",
          "",
          "[Added Lines]",
          "217:           }, defaultSlot ? (!initialized || (destroyOnClose && !visible) ? [] : getSlotVNs(defaultSlot.call(this, { $modal: this }, h))) : getFuncText(content)),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "227:         ]),",
          "228:         showFooter ? h('div', {",
          "229:           class: 'vxe-modal--footer'",
          "231:           XEUtils.isBoolean(showCancelButton) ? showCancelButton : type === 'confirm' ? h('vxe-button', {",
          "232:             key: 1,",
          "233:             ref: 'cancelBtn',",
          "",
          "[Removed Lines]",
          "230:         }, footerSlot ? (!inited || (destroyOnClose && !visible) ? [] : getSlotVNs(footerSlot.call(this, { $modal: this }, h))) : [",
          "",
          "[Added Lines]",
          "230:         }, footerSlot ? (!initialized || (destroyOnClose && !visible) ? [] : getSlotVNs(footerSlot.call(this, { $modal: this }, h))) : [",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "318:       this.close(type)",
          "319:     },",
          "320:     open () {",
          "324:         if (this.transfer) {",
          "325:           document.body.appendChild(this.$el)",
          "326:         }",
          "",
          "[Removed Lines]",
          "321:       const { $refs, events = {}, inited, duration, visible, isMsg, remember, showFooter } = this",
          "322:       if (!inited) {",
          "323:         this.inited = true",
          "",
          "[Added Lines]",
          "321:       const { $refs, events = {}, initialized, duration, visible, isMsg, remember, showFooter } = this",
          "322:       if (!initialized) {",
          "323:         this.initialized = true",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "440:             }",
          "441:             this.contentVisible = false",
          "442:             if (!remember) {",
          "444:             }",
          "445:             XEUtils.remove(allActivedModals, item => item === this)",
          "446:             this.$emit('before-hide', params)",
          "",
          "[Removed Lines]",
          "443:               this.zoomLocat = null",
          "",
          "[Added Lines]",
          "443:               this.revertLocat = null",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "475:       return this.$refs.modalBox",
          "476:     },",
          "477:     isMaximized () {",
          "479:     },",
          "480:     maximize () {",
          "481:       return this.$nextTick().then(() => {",
          "483:           const marginSize = Math.max(0, this.marginSize)",
          "484:           const modalBoxElem = this.getBox()",
          "485:           const { visibleHeight, visibleWidth } = DomTools.getDomNode()",
          "487:             top: modalBoxElem.offsetTop,",
          "488:             left: modalBoxElem.offsetLeft,",
          "489:             width: modalBoxElem.offsetWidth + (modalBoxElem.style.width ? 0 : 1),",
          "",
          "[Removed Lines]",
          "478:       return !!this.zoomLocat",
          "482:         if (!this.zoomLocat) {",
          "486:           this.zoomLocat = {",
          "",
          "[Added Lines]",
          "478:       return !!this.revertLocat",
          "482:         if (!this.revertLocat) {",
          "486:           this.revertLocat = {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "501:     },",
          "502:     revert () {",
          "503:       return this.$nextTick().then(() => {",
          "506:           const modalBoxElem = this.getBox()",
          "508:           Object.assign(modalBoxElem.style, {",
          "513:           })",
          "514:           this.savePosStorage()",
          "515:         }",
          "516:       })",
          "517:     },",
          "518:     zoom () {",
          "520:     },",
          "521:     toggleZoomEvent (evnt) {",
          "524:       return this.zoom().then(() => {",
          "525:         if ($listeners.zoom) {",
          "526:           this.$emit('zoom', params)",
          "",
          "[Removed Lines]",
          "504:         const zoomLocat = this.zoomLocat",
          "505:         if (zoomLocat) {",
          "507:           this.zoomLocat = null",
          "509:             top: `${zoomLocat.top}px`,",
          "510:             left: `${zoomLocat.left}px`,",
          "511:             width: `${zoomLocat.width}px`,",
          "512:             height: `${zoomLocat.height}px`",
          "519:       return this[this.zoomLocat ? 'revert' : 'maximize']().then(() => this.isMaximized())",
          "522:       const { $listeners, zoomLocat, events = {} } = this",
          "523:       const params = { type: zoomLocat ? 'revert' : 'max', $modal: this, $event: evnt }",
          "",
          "[Added Lines]",
          "504:         const revertLocat = this.revertLocat",
          "505:         if (revertLocat) {",
          "507:           this.revertLocat = null",
          "509:             top: `${revertLocat.top}px`,",
          "510:             left: `${revertLocat.left}px`,",
          "511:             width: `${revertLocat.width}px`,",
          "512:             height: `${revertLocat.height}px`",
          "519:       return this[this.revertLocat ? 'revert' : 'maximize']().then(() => this.isMaximized())",
          "522:       const { $listeners, revertLocat, events = {} } = this",
          "523:       const params = { type: revertLocat ? 'revert' : 'max', $modal: this, $event: evnt }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "560:       }",
          "561:     },",
          "562:     mousedownEvent (evnt) {",
          "564:       const modalBoxElem = this.getBox()",
          "566:         evnt.preventDefault()",
          "567:         const domMousemove = document.onmousemove",
          "568:         const domMouseup = document.onmouseup",
          "",
          "[Removed Lines]",
          "563:       const { remember, storage, marginSize, zoomLocat } = this",
          "565:       if (!zoomLocat && evnt.button === 0 && !DomTools.getEventTargetNode(evnt, modalBoxElem, 'trigger--btn').flag) {",
          "",
          "[Added Lines]",
          "563:       const { remember, storage, marginSize, revertLocat } = this",
          "565:       if (!revertLocat && evnt.button === 0 && !DomTools.getEventTargetNode(evnt, modalBoxElem, 'trigger--btn').flag) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "754:         }",
          "755:       }",
          "756:       document.onmouseup = () => {",
          "758:         document.onmousemove = domMousemove",
          "759:         document.onmouseup = domMouseup",
          "760:         setTimeout(() => {",
          "",
          "[Removed Lines]",
          "757:         this.zoomLocat = null",
          "",
          "[Added Lines]",
          "757:         this.revertLocat = null",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "791:             modalBoxElem.style.height = `${height}px`",
          "792:           }",
          "793:           if (zoomLeft && zoomTop) {",
          "795:               left: zoomLeft,",
          "796:               top: zoomTop,",
          "797:               width: zoomWidth,",
          "",
          "[Removed Lines]",
          "794:             this.zoomLocat = {",
          "",
          "[Added Lines]",
          "794:             this.revertLocat = {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "802:       }",
          "803:     },",
          "804:     savePosStorage () {",
          "806:       if (remember && storage) {",
          "807:         const modalBoxElem = this.getBox()",
          "808:         const posStorageMap = this.getStorageMap(storageKey)",
          "",
          "[Removed Lines]",
          "805:       const { id, remember, storage, storageKey, zoomLocat } = this",
          "",
          "[Added Lines]",
          "805:       const { id, remember, storage, storageKey, revertLocat } = this",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "811:           modalBoxElem.style.top,",
          "812:           modalBoxElem.style.width,",
          "813:           modalBoxElem.style.height",
          "819:         ] : []).map(val => val ? XEUtils.toNumber(val) : '').join(',')",
          "820:         localStorage.setItem(storageKey, XEUtils.toJSONString(posStorageMap))",
          "821:       }",
          "",
          "[Removed Lines]",
          "814:         ].concat(zoomLocat ? [",
          "815:           zoomLocat.left,",
          "816:           zoomLocat.top,",
          "817:           zoomLocat.width,",
          "818:           zoomLocat.height",
          "",
          "[Added Lines]",
          "814:         ].concat(revertLocat ? [",
          "815:           revertLocat.left,",
          "816:           revertLocat.top,",
          "817:           revertLocat.width,",
          "818:           revertLocat.height",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2095:       const el = this.$el",
          "2096:       if (el) {",
          "2097:         autoWidthColumnList.forEach(column => {",
          "2099:           const firstCellEl = cellElList[0]",
          "2100:           let paddingSize = 0",
          "2101:           if (firstCellEl) {",
          "",
          "[Removed Lines]",
          "2098:           const cellElList = el.querySelectorAll(`.vxe-body--column.${column.id}>.vxe-cell`)",
          "",
          "[Added Lines]",
          "2098:           const cellElList = el.querySelectorAll(`.vxe-header--column.${column.id}>.vxe-cell,.vxe-body--column.${column.id}>.vxe-cell,.vxe-footer--column.${column.id}>.vxe-cell`)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2223:     } else {",
          "2224:       this.headerHeight = 0",
          "2225:     }",
          "2226:     if (footerElem) {",
          "2231:     } else {",
          "2235:     }",
          "2236:     this.updateHeight()",
          "2237:     this.parentHeight = Math.max(this.headerHeight + this.footerHeight + 20, this.getParentHeight())",
          "2239:       this.checkScrolling()",
          "2240:     }",
          "2241:   },",
          "",
          "[Removed Lines]",
          "2227:       const footerHeight = footerElem.offsetHeight",
          "2228:       this.scrollbarHeight = Math.max(footerHeight - footerElem.clientHeight, 0)",
          "2229:       this.overflowX = tableWidth > footerElem.clientWidth",
          "2230:       this.footerHeight = footerHeight",
          "2232:       this.footerHeight = 0",
          "2233:       this.scrollbarHeight = Math.max(tableHeight - bodyElem.clientHeight, 0)",
          "2234:       this.overflowX = tableWidth > bodyWidth",
          "2238:     if (this.overflowX) {",
          "",
          "[Added Lines]",
          "2226:     let overflowX = false",
          "2227:     let footerHeight = 0",
          "2228:     let scrollbarHeight = 0",
          "2230:       footerHeight = footerElem.offsetHeight",
          "2231:       overflowX = tableWidth > footerElem.clientWidth",
          "2232:       scrollbarHeight = Math.max(footerHeight - footerElem.clientHeight, 0)",
          "2234:       overflowX = tableWidth > bodyWidth",
          "2235:       scrollbarHeight = Math.max(tableHeight - bodyElem.clientHeight, 0)",
          "2237:     this.footerHeight = footerHeight",
          "2238:     this.overflowX = tableWidth > bodyWidth",
          "2239:     this.scrollbarHeight = scrollbarHeight",
          "2242:     if (overflowX) {",
          "",
          "---------------"
        ],
        "styles/table.scss||styles/table.scss": [
          "File: styles/table.scss -> styles/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "319: .vxe-table {",
          "320:   &.column--calc {",
          "321:     .vxe-header--column,",
          "323:       .vxe-cell {",
          "324:         word-break: break-all;",
          "325:         white-space: nowrap;",
          "",
          "[Removed Lines]",
          "322:     .vxe-body--column {",
          "",
          "[Added Lines]",
          "322:     .vxe-body--column,",
          "323:     .vxe-footer--column {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2bf5e46c9c6f064914d134c28b126470eef3832a",
      "candidate_info": {
        "commit_hash": "2bf5e46c9c6f064914d134c28b126470eef3832a",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/2bf5e46c9c6f064914d134c28b126470eef3832a",
        "files": [
          "package.json",
          "packages/edit/src/mixin.js",
          "packages/icon/src/icon.js",
          "types/table.d.ts",
          "types/v-x-e-table/config.d.ts"
        ],
        "message": "\u4f18\u5316 setEditRow \u65b9\u6cd5\u652f\u6301\u6307\u5b9a\u5217",
        "before_after_code_files": [
          "packages/edit/src/mixin.js||packages/edit/src/mixin.js",
          "packages/icon/src/icon.js||packages/icon/src/icon.js",
          "types/table.d.ts||types/table.d.ts",
          "types/v-x-e-table/config.d.ts||types/v-x-e-table/config.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/edit/src/mixin.js||packages/edit/src/mixin.js": [
          "File: packages/edit/src/mixin.js -> packages/edit/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "631:     },",
          "632:     _setActiveCell (row) {",
          "",
          "[Removed Lines]",
          "629:     _setEditRow (row) {",
          "630:       return this.setEditCell(row, XEUtils.find(this.visibleColumn, column => isEnableConf(column.editRender)))",
          "",
          "[Added Lines]",
          "629:     _setEditRow (row, fieldOrColumn) {",
          "630:       let column = XEUtils.find(this.visibleColumn, column => isEnableConf(column.editRender))",
          "631:       if (fieldOrColumn) {",
          "632:         column = XEUtils.isString(fieldOrColumn) ? this.getColumnByField(fieldOrColumn) : fieldOrColumn",
          "633:       }",
          "634:       return this.setEditCell(row, column)",
          "",
          "---------------"
        ],
        "packages/icon/src/icon.js||packages/icon/src/icon.js": [
          "File: packages/icon/src/icon.js -> packages/icon/src/icon.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   name: 'VxeIcon',",
          "3:   props: {",
          "4:     name: String,",
          "6:   },",
          "7:   render (h) {",
          "8:     return h('i', {",
          "",
          "[Removed Lines]",
          "5:     roll: Boolean",
          "",
          "[Added Lines]",
          "5:     roll: Boolean,",
          "6:     status: String",
          "",
          "---------------"
        ],
        "types/table.d.ts||types/table.d.ts": [
          "File: types/table.d.ts -> types/table.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "984:   setActiveRow(row: any): Promise<any>",
          "",
          "[Removed Lines]",
          "989:   setEditRow(row: any): Promise<any>",
          "",
          "[Added Lines]",
          "989:   setEditRow(row: any, fieldOrColumn?: string | ColumnInfo): Promise<void>",
          "",
          "---------------"
        ],
        "types/v-x-e-table/config.d.ts||types/v-x-e-table/config.d.ts": [
          "File: types/v-x-e-table/config.d.ts -> types/v-x-e-table/config.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: }",
          "8: export interface VXETableConfigOptions {",
          "9:   size?: SizeType;",
          "10:   zIndex?: number;",
          "11:   version?: number;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:   authId?: string",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80a35ff23dc7c55c40e2b86f2f79b84e79b8ec80",
      "candidate_info": {
        "commit_hash": "80a35ff23dc7c55c40e2b86f2f79b84e79b8ec80",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/80a35ff23dc7c55c40e2b86f2f79b84e79b8ec80",
        "files": [
          "package.json",
          "packages/table/module/export/mixin.ts",
          "packages/table/render/index.ts"
        ],
        "message": "releases 3.9.17",
        "before_after_code_files": [
          "packages/table/module/export/mixin.ts||packages/table/module/export/mixin.ts",
          "packages/table/render/index.ts||packages/table/render/index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/module/export/mixin.ts||packages/table/module/export/mixin.ts": [
          "File: packages/table/module/export/mixin.ts -> packages/table/module/export/mixin.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "309:     const footerTableData = $xetable.footerTableData",
          "310:     const footers = getFooterData(opts, footerTableData)",
          "311:     footers.forEach((row: any) => {",
          "313:     })",
          "314:   }",
          "315:   return content",
          "",
          "[Removed Lines]",
          "312:       content += columns.map(column => toTxtCellLabel(getFooterCellValue($xetable, opts, row, column))).join(',') + enterSymbol",
          "",
          "[Added Lines]",
          "312:       content += columns.map(column => toTxtCellLabel(getFooterCellValue($xetable, opts, row, column))).join('\\t') + enterSymbol",
          "",
          "---------------"
        ],
        "packages/table/render/index.ts||packages/table/render/index.ts": [
          "File: packages/table/render/index.ts -> packages/table/render/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "699:     },",
          "700:     tableExportMethod: handleExportTreeSelectMethod",
          "701:   },",
          "702:   VxeIconPicker: {",
          "703:     tableAutoFocus: 'input',",
          "704:     renderTableEdit: defaultEditRender,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "702:   VxeTableSelect: {",
          "703:     tableAutoFocus: 'input',",
          "704:     renderTableEdit: defaultTreeSelectEditRender,",
          "705:     renderTableCell (h, renderOpts, params) {",
          "706:       return getCellLabelVNs(h, renderOpts, params, getTreeSelectCellValue(renderOpts, params))",
          "707:     },",
          "708:     tableExportMethod: handleExportTreeSelectMethod",
          "709:   },",
          "",
          "---------------"
        ]
      }
    }
  ]
}