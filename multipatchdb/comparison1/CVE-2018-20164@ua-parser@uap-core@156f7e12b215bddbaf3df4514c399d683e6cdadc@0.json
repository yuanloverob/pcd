{
  "cve_id": "CVE-2018-20164",
  "cve_desc": "An issue was discovered in regex.yaml (aka regexes.yaml) in UA-Parser UAP-Core before 0.6.0. A Regular Expression Denial of Service (ReDoS) issue allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to a value containing a long digit string. (The UAP-Core project contains the vulnerability, propagating to all implementations.)",
  "repo": "ua-parser/uap-core",
  "patch_hash": "156f7e12b215bddbaf3df4514c399d683e6cdadc",
  "patch_info": {
    "commit_hash": "156f7e12b215bddbaf3df4514c399d683e6cdadc",
    "repo": "ua-parser/uap-core",
    "commit_url": "https://github.com/ua-parser/uap-core/commit/156f7e12b215bddbaf3df4514c399d683e6cdadc",
    "files": [
      ".travis.yml",
      "CONTRIBUTING.md",
      "package.json",
      "regexes.yaml",
      "tests/mocha.opts",
      "tests/regexes.js"
    ],
    "message": "Merge pull request #363 from commenthol/safe-regex\n\nregexes update",
    "before_after_code_files": [
      "tests/mocha.opts||tests/mocha.opts",
      "tests/regexes.js||tests/regexes.js"
    ]
  },
  "patch_diff": {
    "tests/mocha.opts||tests/mocha.opts": [
      "File: tests/mocha.opts -> tests/mocha.opts",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --ui tdd",
      "2: --reporter min",
      "3: --check-leaks",
      "",
      "---------------"
    ],
    "tests/regexes.js||tests/regexes.js": [
      "File: tests/regexes.js -> tests/regexes.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: 'use strict'",
      "3: var assert = require('assert')",
      "4: var path = require('path')",
      "5: var fs = require('fs')",
      "6: var yaml = require('yamlparser')",
      "7: var regexes = readYAML('../regexes.yaml')",
      "8: var safe = require('safe-regex')",
      "10: function readYAML (fileName) {",
      "11:   var file = path.join(__dirname, fileName)",
      "12:   var data = fs.readFileSync(file, 'utf8')",
      "13:   return yaml.eval(data)",
      "14: }",
      "16: suite('regexes', function () {",
      "17:   Object.keys(regexes).forEach(function (parser) {",
      "18:     suite(parser, function () {",
      "19:       regexes[parser].forEach(function(item) {",
      "20:         test(item.regex, function () {",
      "22:           assert.ok(safe(item.regex))",
      "23:         })",
      "24:       })",
      "25:     })",
      "26:   })",
      "27: })",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bf80eb25f940f2c2a4672681d753a8034839066c",
      "candidate_info": {
        "commit_hash": "bf80eb25f940f2c2a4672681d753a8034839066c",
        "repo": "ua-parser/uap-core",
        "commit_url": "https://github.com/ua-parser/uap-core/commit/bf80eb25f940f2c2a4672681d753a8034839066c",
        "files": [
          "package.json",
          "regexes.yaml",
          "tests/regexes.js"
        ],
        "message": "safe regexes",
        "before_after_code_files": [
          "tests/regexes.js||tests/regexes.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/ua-parser/uap-core/pull/363"
        ],
        "olp_code_files": {
          "patch": [
            "tests/regexes.js||tests/regexes.js"
          ],
          "candidate": [
            "tests/regexes.js||tests/regexes.js"
          ]
        }
      },
      "candidate_diff": {
        "tests/regexes.js||tests/regexes.js": [
          "File: tests/regexes.js -> tests/regexes.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: 'use strict'",
          "3: var assert = require('assert')",
          "4: var path = require('path')",
          "5: var fs = require('fs')",
          "6: var yaml = require('yamlparser')",
          "7: var regexes = readYAML('../regexes.yaml')",
          "8: var safe = require('safe-regex')",
          "10: function readYAML (fileName) {",
          "11:   var file = path.join(__dirname, fileName)",
          "12:   var data = fs.readFileSync(file, 'utf8')",
          "13:   return yaml.eval(data)",
          "14: }",
          "16: describe('regexes', function () {",
          "17:   Object.keys(regexes).forEach(function (parser) {",
          "18:     describe(parser, function () {",
          "19:       regexes[parser].forEach(function(item) {",
          "20:         it(item.regex, function () {",
          "22:           assert.ok(safe(item.regex))",
          "23:         })",
          "24:       })",
          "25:     })",
          "26:   })",
          "27: })",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "703fbc92a774553c1c40b7fb35908d36846d3248",
      "candidate_info": {
        "commit_hash": "703fbc92a774553c1c40b7fb35908d36846d3248",
        "repo": "ua-parser/uap-core",
        "commit_url": "https://github.com/ua-parser/uap-core/commit/703fbc92a774553c1c40b7fb35908d36846d3248",
        "files": [
          "package.json",
          "tests/mocha.opts",
          "tests/regexes.js"
        ],
        "message": "add regexes tests to npm test",
        "before_after_code_files": [
          "tests/mocha.opts||tests/mocha.opts",
          "tests/regexes.js||tests/regexes.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/ua-parser/uap-core/pull/363"
        ],
        "olp_code_files": {
          "patch": [
            "tests/mocha.opts||tests/mocha.opts",
            "tests/regexes.js||tests/regexes.js"
          ],
          "candidate": [
            "tests/mocha.opts||tests/mocha.opts",
            "tests/regexes.js||tests/regexes.js"
          ]
        }
      },
      "candidate_diff": {
        "tests/mocha.opts||tests/mocha.opts": [
          "File: tests/mocha.opts -> tests/mocha.opts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --ui tdd",
          "2: --reporter min",
          "3: --check-leaks",
          "",
          "---------------"
        ],
        "tests/regexes.js||tests/regexes.js": [
          "File: tests/regexes.js -> tests/regexes.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:   return yaml.eval(data)",
          "14: }",
          "17:   Object.keys(regexes).forEach(function (parser) {",
          "19:       regexes[parser].forEach(function(item) {",
          "22:           assert.ok(safe(item.regex))",
          "23:         })",
          "",
          "[Removed Lines]",
          "16: describe('regexes', function () {",
          "18:     describe(parser, function () {",
          "20:         it(item.regex, function () {",
          "",
          "[Added Lines]",
          "16: suite('regexes', function () {",
          "18:     suite(parser, function () {",
          "20:         test(item.regex, function () {",
          "",
          "---------------"
        ]
      }
    }
  ]
}