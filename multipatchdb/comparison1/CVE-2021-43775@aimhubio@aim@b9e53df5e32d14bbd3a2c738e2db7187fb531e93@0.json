{
  "cve_id": "CVE-2021-43775",
  "cve_desc": "Aim is an open-source, self-hosted machine learning experiment tracking tool. Versions of Aim prior to 3.1.0 are vulnerable to a path traversal attack. By manipulating variables that reference files with \u201cdot-dot-slash (../)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. The vulnerability issue is resolved in Aim v3.1.0.",
  "repo": "aimhubio/aim",
  "patch_hash": "b9e53df5e32d14bbd3a2c738e2db7187fb531e93",
  "patch_info": {
    "commit_hash": "b9e53df5e32d14bbd3a2c738e2db7187fb531e93",
    "repo": "aimhubio/aim",
    "commit_url": "https://github.com/aimhubio/aim/commit/b9e53df5e32d14bbd3a2c738e2db7187fb531e93",
    "files": [
      "aim/web/api/views.py"
    ],
    "message": "Security issue fix for `/static-files/{path}` endpoint  (#1003)\n\n* Fix security issue when incorrect path is given to the endpoint that serves static files which can lead to a leak of non wanted files (e.g. /static-files/../../../../etc/passwd)",
    "before_after_code_files": [
      "aim/web/api/views.py||aim/web/api/views.py"
    ]
  },
  "patch_diff": {
    "aim/web/api/views.py||aim/web/api/views.py": [
      "File: aim/web/api/views.py -> aim/web/api/views.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import os",
      "3: from aim.web.api.utils import APIRouter  # wrapper for fastapi.APIRouter",
      "4: from fastapi.responses import FileResponse",
      "6: statics_router = APIRouter()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: from pathlib import Path",
      "6: from fastapi import HTTPException",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "9: @statics_router.get('/static-files/{path:path}/')",
      "10: async def serve_static_files(path):",
      "11:     from aim import web",
      "13:     compressed_file_name = '{}.gz'.format(static_file_name)",
      "14:     if os.path.exists(compressed_file_name):",
      "15:         return FileResponse(compressed_file_name, headers={'Content-Encoding': 'gzip'})",
      "",
      "[Removed Lines]",
      "12:     static_file_name = os.path.join(os.path.dirname(web.__file__), 'ui', 'build', path)",
      "",
      "[Added Lines]",
      "14:     static_files_root = os.path.join(os.path.dirname(web.__file__), 'ui', 'build')",
      "15:     static_file_name = '/'.join((static_files_root, path))",
      "17:     # check if path is leading inside ui/build directory",
      "18:     if not Path(static_files_root) in Path(static_file_name).resolve().parents:",
      "19:         raise HTTPException(404)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "60b99dc8a509f989ed9fd819454c87ac5d2b0257",
      "candidate_info": {
        "commit_hash": "60b99dc8a509f989ed9fd819454c87ac5d2b0257",
        "repo": "aimhubio/aim",
        "commit_url": "https://github.com/aimhubio/aim/commit/60b99dc8a509f989ed9fd819454c87ac5d2b0257",
        "files": [
          "CHANGELOG.md",
          "aim/cli/up/commands.py",
          "aim/web/api/__init__.py",
          "aim/web/api/experiments/views.py",
          "aim/web/api/runs/object_views.py",
          "aim/web/api/runs/views.py",
          "aim/web/api/tags/views.py",
          "aim/web/api/views.py",
          "aim/web/configs.py",
          "aim/web/middlewares/__init__.py",
          "aim/web/middlewares/profiler/__init__.py",
          "aim/web/middlewares/profiler/profiler.py",
          "tests/api/test_structured_data_api.py"
        ],
        "message": "[feat] api profiler (#1520)\n\n* added api profiler and trigger command\n\n* flake8 fixes\n\n* minor updates\n\n* logging request details\n\n* storing request data inside html file\n\n* fixes on HTTPException\n\n* added error response handler and updated messages\n\n* error msg and test update\n\n* updated CHANGELOG.md\n\n* minor updates\n\n* resolved relative import",
        "before_after_code_files": [
          "aim/cli/up/commands.py||aim/cli/up/commands.py",
          "aim/web/api/__init__.py||aim/web/api/__init__.py",
          "aim/web/api/experiments/views.py||aim/web/api/experiments/views.py",
          "aim/web/api/runs/object_views.py||aim/web/api/runs/object_views.py",
          "aim/web/api/runs/views.py||aim/web/api/runs/views.py",
          "aim/web/api/tags/views.py||aim/web/api/tags/views.py",
          "aim/web/api/views.py||aim/web/api/views.py",
          "aim/web/configs.py||aim/web/configs.py",
          "aim/web/middlewares/profiler/__init__.py||aim/web/middlewares/profiler/__init__.py",
          "aim/web/middlewares/profiler/profiler.py||aim/web/middlewares/profiler/profiler.py",
          "tests/api/test_structured_data_api.py||tests/api/test_structured_data_api.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ],
          "candidate": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ]
        }
      },
      "candidate_diff": {
        "aim/cli/up/commands.py||aim/cli/up/commands.py": [
          "File: aim/cli/up/commands.py -> aim/cli/up/commands.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     AIM_UI_DEFAULT_PORT,",
          "10:     AIM_UI_MOUNTED_REPO_PATH,",
          "11:     AIM_UI_TELEMETRY_KEY,",
          "13: )",
          "14: from aim.sdk.repo import Repo, RepoStatus",
          "15: from aim.sdk.utils import clean_repo_path",
          "",
          "[Removed Lines]",
          "12:     AIM_PROXY_URL",
          "",
          "[Added Lines]",
          "12:     AIM_PROXY_URL,",
          "13:     AIM_PROFILER_KEY",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:                                                                 readable=True))",
          "40: @click.option('--base-path', required=False, default='', type=str)",
          "41: @click.option('--force-init', is_flag=True, default=False)",
          "43:     if dev:",
          "44:         os.environ[AIM_ENV_MODE_KEY] = 'dev'",
          "45:     else:",
          "",
          "[Removed Lines]",
          "42: def up(dev, host, port, workers, repo, tf_logs, ssl_keyfile, ssl_certfile, base_path, force_init):",
          "",
          "[Added Lines]",
          "43: @click.option('--profiler', is_flag=True, default=False)",
          "44: def up(dev, host, port, workers, repo, tf_logs, ssl_keyfile, ssl_certfile, base_path, force_init, profiler):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "126:     click.echo('Press Ctrl+C to exit')",
          "128:     try:",
          "129:         server_cmd = build_uvicorn_command(host, port, workers, ssl_keyfile, ssl_certfile)",
          "130:         exec_cmd(server_cmd, stream_output=True)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:     if profiler:",
          "131:         os.environ[AIM_PROFILER_KEY] = '1'",
          "",
          "---------------"
        ],
        "aim/web/api/__init__.py||aim/web/api/__init__.py": [
          "File: aim/web/api/__init__.py -> aim/web/api/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from fastapi import FastAPI",
          "2: from fastapi.middleware.cors import CORSMiddleware",
          "3: from fastapi.middleware.gzip import GZipMiddleware",
          "7: def create_app():",
          "",
          "[Removed Lines]",
          "4: import os",
          "",
          "[Added Lines]",
          "1: import os",
          "4: from fastapi.exceptions import HTTPException",
          "7: from fastapi.responses import JSONResponse",
          "9: from aim.web.configs import AIM_PROFILER_KEY",
          "10: from aim.web.middlewares.profiler import PyInstrumentProfilerMiddleware",
          "11: from aim.web.utils import get_root_path",
          "14: async def http_exception_handler(request, exc):",
          "15:     if isinstance(exc.detail, dict):",
          "16:         message = exc.detail.pop('message', 'Something went wrong')",
          "17:         detail = exc.detail",
          "18:     else:",
          "19:         message = 'Something went wrong'",
          "20:         detail = str(exc.detail)",
          "22:     response = {",
          "23:         'message': message,",
          "24:         'detail': detail",
          "25:     }",
          "26:     return JSONResponse(response, status_code=exc.status_code)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     api_app = FastAPI()",
          "39:     api_app.add_middleware(GZipMiddleware)",
          "41:     add_api_routes()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:     api_app.add_exception_handler(HTTPException, http_exception_handler)",
          "64:     if os.environ.get(AIM_PROFILER_KEY) == \"1\":",
          "65:         api_app.add_middleware(PyInstrumentProfilerMiddleware,",
          "66:                                repo_path=get_root_path())",
          "",
          "---------------"
        ],
        "aim/web/api/experiments/views.py||aim/web/api/experiments/views.py": [
          "File: aim/web/api/experiments/views.py -> aim/web/api/experiments/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:         try:",
          "39:             exp = factory.create_experiment(exp_in.name.strip())",
          "40:         except ValueError as e:",
          "43:     return {",
          "44:         'id': exp.uuid,",
          "",
          "[Removed Lines]",
          "41:             raise HTTPException(400, detail=str(e))",
          "",
          "[Added Lines]",
          "41:             raise HTTPException(status_code=400, detail=str(e))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:             exp.name = exp_in.name.strip()",
          "73:         if exp_in.archived is not None:",
          "74:             if exp_in.archived and len(exp.runs) > 0:",
          "77:             exp.archived = exp_in.archived",
          "79:     return {",
          "",
          "[Removed Lines]",
          "75:                 raise HTTPException(status_code=400,",
          "76:                                     detail=f'Cannot archive experiment \\'{exp_id}\\'. Experiment has associated runs.')",
          "",
          "[Added Lines]",
          "75:                 raise HTTPException(status_code=400, detail={",
          "76:                     'message': f'Cannot archive experiment \\'{exp_id}\\'.',",
          "77:                     'reason': 'Experiment has associated runs.'",
          "78:                 })",
          "",
          "---------------"
        ],
        "aim/web/api/runs/object_views.py||aim/web/api/runs/object_views.py": [
          "File: aim/web/api/runs/object_views.py -> aim/web/api/runs/object_views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:     @staticmethod",
          "32:     def check_density(density):",
          "33:         if density <= 0:",
          "36:     @classmethod",
          "37:     def register_endpoints(cls, router):",
          "",
          "[Removed Lines]",
          "34:             raise HTTPException(status_code=400, detail=f'Invalid density value: \\'{density}\\'. Density must be > 0.')",
          "",
          "[Added Lines]",
          "34:             raise HTTPException(status_code=400, detail={",
          "35:                 'message': f'Invalid density value: \\'{density}\\'.',",
          "36:                 'reason': 'Density must be > 0.'",
          "37:             })",
          "",
          "---------------"
        ],
        "aim/web/api/runs/views.py||aim/web/api/runs/views.py": [
          "File: aim/web/api/runs/views.py -> aim/web/api/runs/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from fastapi import Depends, HTTPException, Query",
          "2: from fastapi.responses import JSONResponse, StreamingResponse",
          "5:     FigureApiConfig",
          "6: from aim.web.api.utils import APIRouter  # wrapper for fastapi.APIRouter",
          "7: from typing import Optional, Tuple",
          "",
          "[Removed Lines]",
          "4: from aim.web.api.runs.object_views import ImageApiConfig, TextApiConfig, DistributionApiConfig, AudioApiConfig, \\",
          "",
          "[Added Lines]",
          "4: from aim.web.api.runs.object_views import (",
          "5:     ImageApiConfig,",
          "6:     TextApiConfig,",
          "7:     DistributionApiConfig,",
          "8:     AudioApiConfig,",
          "10: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:     repo = get_project_repo()",
          "170:     success = repo.delete_run(run_id)",
          "171:     if not success:",
          "174:     return {",
          "175:         'id': run_id,",
          "",
          "[Removed Lines]",
          "172:         raise HTTPException(400, detail=f'Error while deleting run {run_id}.')",
          "",
          "[Added Lines]",
          "177:         raise HTTPException(status_code=400, detail={",
          "178:             'message': f'Error while deleting run {run_id}.'",
          "179:         })",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "182:     repo = get_project_repo()",
          "183:     success, remaining_runs = repo.delete_runs(runs_batch)",
          "184:     if not success:",
          "188:     return {",
          "189:         'status': 'OK'",
          "",
          "[Removed Lines]",
          "185:         raise HTTPException(400, detail={'message': 'Error while deleting runs.',",
          "186:                                          'remaining_runs': remaining_runs})",
          "",
          "[Added Lines]",
          "192:         raise HTTPException(status_code=400, detail={",
          "193:             'message': 'Error while deleting runs.',",
          "194:             'remaining_runs': remaining_runs",
          "195:         })",
          "",
          "---------------"
        ],
        "aim/web/api/tags/views.py||aim/web/api/tags/views.py": [
          "File: aim/web/api/tags/views.py -> aim/web/api/tags/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:             if tag_in.description is not None:",
          "48:                 tag.description = tag_in.description.strip()",
          "49:         except ValueError as e:",
          "52:     return {",
          "53:         'id': tag.uuid,",
          "",
          "[Removed Lines]",
          "50:             raise HTTPException(400, detail=str(e))",
          "",
          "[Added Lines]",
          "50:             raise HTTPException(status_code=400, detail=str(e))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: async def get_tag_api(tag_id: str, factory=Depends(object_factory)):",
          "60:     tag = factory.find_tag(tag_id)",
          "61:     if not tag:",
          "64:     response = {",
          "65:         'id': tag.uuid,",
          "",
          "[Removed Lines]",
          "62:         raise HTTPException",
          "",
          "[Added Lines]",
          "62:         raise HTTPException(status_code=404)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:     tag = factory.find_tag(tag_id)",
          "109:     if not tag:",
          "112:     from aim.sdk.run import Run",
          "",
          "[Removed Lines]",
          "110:         raise HTTPException",
          "",
          "[Added Lines]",
          "110:         raise HTTPException(status_code=404)",
          "",
          "---------------"
        ],
        "aim/web/api/views.py||aim/web/api/views.py": [
          "File: aim/web/api/views.py -> aim/web/api/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     # check if path is leading inside ui/build directory",
          "20:     if not Path(static_files_root).resolve() in Path(static_file_name).resolve().parents:",
          "23:     compressed_file_name = '{}.gz'.format(static_file_name)",
          "24:     if os.path.exists(compressed_file_name):",
          "",
          "[Removed Lines]",
          "21:         raise HTTPException(404)",
          "",
          "[Added Lines]",
          "21:         raise HTTPException(status_code=404)",
          "",
          "---------------"
        ],
        "aim/web/configs.py||aim/web/configs.py": [
          "File: aim/web/configs.py -> aim/web/configs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: AIM_UI_TELEMETRY_KEY = 'AIM_UI_TELEMETRY_ENABLED'",
          "8: AIM_UI_BASE_PATH = '__AIM_UI_BASE_PATH__'",
          "9: AIM_PROXY_URL = '__AIM_PROXY_URL__'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: AIM_PROFILER_KEY = '__AIM_PROFILER_ENABLED__'",
          "",
          "---------------"
        ],
        "aim/web/middlewares/profiler/__init__.py||aim/web/middlewares/profiler/__init__.py": [
          "File: aim/web/middlewares/profiler/__init__.py -> aim/web/middlewares/profiler/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from aim.web.middlewares.profiler.profiler import PyInstrumentProfilerMiddleware",
          "",
          "---------------"
        ],
        "aim/web/middlewares/profiler/profiler.py||aim/web/middlewares/profiler/profiler.py": [
          "File: aim/web/middlewares/profiler/profiler.py -> aim/web/middlewares/profiler/profiler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"",
          "2: This code is taken from https://github.com/sunhailin-Leo/fastapi_profiler",
          "3: Credits to the author of the repo.",
          "4: \"\"\"",
          "6: import json",
          "7: import os.path",
          "8: import time",
          "9: from typing import Optional",
          "10: from logging import getLogger",
          "12: from starlette.routing import Router",
          "13: from starlette.requests import Request",
          "14: from starlette.types import ASGIApp, Message, Receive, Scope, Send",
          "16: logger = getLogger(\"profiler\")",
          "19: class PyInstrumentProfilerMiddleware:",
          "21:     def __init__(",
          "22:             self, app: ASGIApp,",
          "24:             server_app: Optional[Router] = None,",
          "25:             profiler_interval: float = 0.0001,",
          "26:             repo_path=None,",
          "28:     ):",
          "29:         try:",
          "30:             from pyinstrument import Profiler",
          "31:         except ImportError:",
          "32:             raise RuntimeError('Please install \"pyinstrument\" module to use enable api profiler.')",
          "34:         self.app = app",
          "35:         self._profiler = Profiler(interval=profiler_interval)",
          "37:         self._server_app = server_app",
          "38:         self._profiler_kwargs: dict = profiler_kwargs",
          "40:         self._profiler_timestamp = str(time.time())",
          "41:         self._profiler_log_path = os.path.join(repo_path, \"profiler\", self._profiler_timestamp)",
          "42:         os.makedirs(self._profiler_log_path, exist_ok=True)",
          "44:     async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:",
          "45:         if scope[\"type\"] != \"http\":",
          "46:             await self.app(scope, receive, send)",
          "47:             return",
          "49:         if self._profiler.is_running:",
          "50:             should_stop = False",
          "51:         else:",
          "52:             should_stop = True",
          "53:             self._profiler.start()",
          "55:         request = Request(scope, receive=receive)",
          "56:         method = request.method",
          "57:         path = request.url.path",
          "58:         params = dict(request.query_params)",
          "60:         try:",
          "61:             body = await request.json()",
          "62:         except json.decoder.JSONDecodeError:",
          "63:             body = None",
          "65:         file_name = (",
          "66:             '{timestamp}_{method}_{path}'.format(",
          "67:                 timestamp=time.time(),",
          "68:                 method=method.lower(),",
          "69:                 path='_'.join(path.strip('/').split('/')).lower()",
          "70:             )",
          "71:         )",
          "73:         # Default status code used when the application does not return a valid response",
          "74:         # or an unhandled exception occurs.",
          "75:         status_code = 500",
          "77:         async def wrapped_send(message: Message) -> None:",
          "78:             if message['type'] == 'http.response.start':",
          "79:                 nonlocal status_code",
          "80:                 status_code = message['status']",
          "81:             await send(message)",
          "83:         try:",
          "84:             await self.app(scope, receive, wrapped_send)",
          "85:         finally:",
          "86:             if scope[\"type\"] == \"http\" and should_stop:",
          "87:                 self._profiler.stop()",
          "89:                 request_data = json.dumps({",
          "90:                     \"path\": path,",
          "91:                     \"body\": body,",
          "92:                     \"method\": method,",
          "93:                     \"params\": params",
          "94:                 }, separators=(',', ':'))",
          "96:                 html_output = self._profiler.output_html(**self._profiler_kwargs)",
          "98:                 # inject request data",
          "99:                 body_tag_idx_end = html_output.find('<body>') + 6",
          "100:                 html_output = (",
          "101:                     f'{html_output[:body_tag_idx_end]}'",
          "102:                     f'<pre><code>{request_data}</code></pre>'",
          "103:                     f'{html_output[body_tag_idx_end:]}'",
          "104:                 )",
          "106:                 with open(os.path.join(self._profiler_log_path, f'{file_name}.html'), 'w') as fp:",
          "107:                     fp.write(html_output)",
          "",
          "---------------"
        ],
        "tests/api/test_structured_data_api.py||tests/api/test_structured_data_api.py": [
          "File: tests/api/test_structured_data_api.py -> tests/api/test_structured_data_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:             for idx, run in enumerate(self.repo.iter_runs()):",
          "11:                 exp_name = 'Experiment 1' if idx < 5 else 'Experiment 2'",
          "14:                 run.experiment = exp_name",
          "15:                 if idx < 3:",
          "16:                     run.add_tag('first runs')",
          "",
          "[Removed Lines]",
          "13:                 run.name = f'Run number {idx+1}'",
          "",
          "[Added Lines]",
          "13:                 run.name = f'Run number {idx + 1}'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259:         response = client.put(f'/api/experiments/{exp_uuid}/', json={'archived': True})",
          "260:         self.assertEqual(response.status_code, 400)",
          "",
          "[Removed Lines]",
          "261:         expected_text = '{{\"detail\":\"Cannot archive experiment \\'{}\\'. Experiment has associated runs.\"}}'.format(exp_uuid)",
          "262:         self.assertEqual(response.text, expected_text)",
          "",
          "[Added Lines]",
          "261:         self.assertEqual(response.json()['message'], f'Cannot archive experiment \\'{exp_uuid}\\'.')",
          "262:         self.assertEqual(response.json()['detail']['reason'], 'Experiment has associated runs.')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bdc375038829f3a0a505cd59b3fec57d34d70533",
      "candidate_info": {
        "commit_hash": "bdc375038829f3a0a505cd59b3fec57d34d70533",
        "repo": "aimhubio/aim",
        "commit_url": "https://github.com/aimhubio/aim/commit/bdc375038829f3a0a505cd59b3fec57d34d70533",
        "files": [
          "CHANGELOG.md",
          "aim/cli/manager/manager.py",
          "aim/cli/up/commands.py",
          "aim/ext/notebook/notebook.py",
          "aim/web/api/__init__.py",
          "aim/web/api/views.py",
          "aim/web/ui/config-overrides.js",
          "aim/web/ui/package-lock.json",
          "aim/web/ui/package.json",
          "aim/web/ui/public/assets/icomoon/fonts/icomoon.eot",
          "aim/web/ui/public/assets/icomoon/fonts/icomoon.svg",
          "aim/web/ui/public/assets/icomoon/fonts/icomoon.ttf",
          "aim/web/ui/public/assets/icomoon/fonts/icomoon.woff",
          "aim/web/ui/public/assets/icomoon/icomoonIcons.css",
          "aim/web/ui/public/assets/icomoon/selection.json",
          "aim/web/ui/public/assets/inter/fonts/Inter-Bold.ttf",
          "aim/web/ui/public/assets/inter/fonts/Inter-Light.ttf",
          "aim/web/ui/public/assets/inter/fonts/Inter-Medium.ttf",
          "aim/web/ui/public/assets/inter/fonts/Inter-Regular.ttf",
          "aim/web/ui/public/assets/inter/fonts/Inter-SemiBold.ttf",
          "aim/web/ui/public/assets/inter/inter.css",
          "aim/web/ui/public/index.html",
          "aim/web/ui/src/App.scss",
          "aim/web/ui/src/App.tsx",
          "aim/web/ui/src/fonts/icomoon/fonts/icomoon.eot",
          "aim/web/ui/src/fonts/icomoon/fonts/icomoon.svg",
          "aim/web/ui/src/fonts/icomoon/fonts/icomoon.ttf",
          "aim/web/ui/src/fonts/icomoon/fonts/icomoon.woff",
          "aim/web/ui/src/fonts/icomoon/icomoonIcons.scss",
          "aim/web/ui/src/fonts/icomoon/selection.json",
          "aim/web/ui/src/fonts/inter/Inter-Bold.ttf",
          "aim/web/ui/src/fonts/inter/Inter-Light.ttf",
          "aim/web/ui/src/fonts/inter/Inter-Medium.ttf",
          "aim/web/ui/src/fonts/inter/Inter-Regular.ttf",
          "aim/web/ui/src/fonts/inter/Inter-SemiBold.ttf",
          "aim/web/ui/src/styles/abstracts/_variables.scss",
          "aim/web/ui/src/styles/base/__fonts.scss",
          "aim/web/ui/src/utils/app/updateUrlParam.ts",
          "aim/web/ui/tasks/index-html-template-generator.js"
        ],
        "message": "Add custom url prefix support (#1141)\n\n* Add ability to support custom prefix for backend endpoints (both api and static files)\n\n* Add experimental usage of dynamic-public-path\n\n* Add base-path to aim server, when running on notebook.\n\n* Change public path to relative and replace to chunk loading of modules. Move fonts to public folder.\n\n* Fix relative path issue, add new post-build step for generating index.template.html, and fix stateful URL logic compatibility with base path.\n\n* Add `base_path` to `aim up` command successful outputs (`Open {scheme}://{host}:{port}{base_path}`) and change notebook successful message listener accordingly\n\n\nCo-authored-by: mihran113 <vanyanmihran@gmail.com>\nCo-authored-by: Ruben Karapetyan <karapetyanrouben@gmail.com>\nCo-authored-by: Hamik Hambardzumyan <hamikhambardzumyan25@gmail.com>",
        "before_after_code_files": [
          "aim/cli/manager/manager.py||aim/cli/manager/manager.py",
          "aim/cli/up/commands.py||aim/cli/up/commands.py",
          "aim/ext/notebook/notebook.py||aim/ext/notebook/notebook.py",
          "aim/web/api/__init__.py||aim/web/api/__init__.py",
          "aim/web/api/views.py||aim/web/api/views.py",
          "aim/web/ui/config-overrides.js||aim/web/ui/config-overrides.js",
          "aim/web/ui/public/assets/inter/inter.css||aim/web/ui/public/assets/inter/inter.css",
          "aim/web/ui/public/index.html||aim/web/ui/public/index.html",
          "aim/web/ui/src/App.scss||aim/web/ui/src/App.scss",
          "aim/web/ui/src/App.tsx||aim/web/ui/src/App.tsx",
          "aim/web/ui/src/styles/abstracts/_variables.scss||aim/web/ui/src/styles/abstracts/_variables.scss",
          "aim/web/ui/src/styles/base/__fonts.scss||aim/web/ui/src/styles/base/__fonts.scss",
          "aim/web/ui/src/utils/app/updateUrlParam.ts||aim/web/ui/src/utils/app/updateUrlParam.ts",
          "aim/web/ui/tasks/index-html-template-generator.js||aim/web/ui/tasks/index-html-template-generator.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ],
          "candidate": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ]
        }
      },
      "candidate_diff": {
        "aim/cli/manager/manager.py||aim/cli/manager/manager.py": [
          "File: aim/cli/manager/manager.py -> aim/cli/manager/manager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:     for p in args.keys():",
          "32:         args_list.append(p + '=' + args[p])",
          "36:     child_process = subprocess.Popen(",
          "37:         ['aim', UP_NAME] + args_list + ['--force-init'],",
          "",
          "[Removed Lines]",
          "34:     success_msg = 'Open http://{}:{}'.format(args['--host'], args['--port'])",
          "",
          "[Added Lines]",
          "34:     success_msg = 'Open http://{}:{}{}'.format(args['--host'], args['--port'], args['--base-path'])",
          "",
          "---------------"
        ],
        "aim/cli/up/commands.py||aim/cli/up/commands.py": [
          "File: aim/cli/up/commands.py -> aim/cli/up/commands.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:         os.environ[AIM_ENV_MODE_KEY] = 'prod'",
          "40:     if base_path:",
          "41:         os.environ[AIM_UI_BASE_PATH] = base_path",
          "43:     repo_path = clean_repo_path(repo) or Repo.default_repo_path()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:         # process `base_path` as ui requires leading slash",
          "42:         if base_path.endswith('/'):",
          "43:             base_path = base_path[:-1]",
          "44:         if base_path and not base_path.startswith('/'):",
          "45:             base_path = f'/{base_path}'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:     scheme = 'https' if ssl_keyfile or ssl_certfile else 'http'",
          "110:     click.echo('Press Ctrl+C to exit')",
          "112:     try:",
          "",
          "[Removed Lines]",
          "109:     click.echo('Open {}://{}:{}'.format(scheme, host, port), err=True)",
          "",
          "[Added Lines]",
          "114:     click.echo('Open {}://{}:{}{}'.format(scheme, host, port, base_path), err=True)",
          "",
          "---------------"
        ],
        "aim/ext/notebook/notebook.py||aim/ext/notebook/notebook.py": [
          "File: aim/ext/notebook/notebook.py -> aim/ext/notebook/notebook.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     options = {",
          "71:         '--host': '127.0.0.1',",
          "73:     }",
          "74:     for arg in args[1:]:",
          "75:         key, value = arg.split('=', 1)",
          "",
          "[Removed Lines]",
          "72:         '--port': '43800'",
          "",
          "[Added Lines]",
          "72:         '--port': '43800',",
          "73:         '--base-path': '/notebook'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:     shell = \"\"\"",
          "89:         (async () => {{",
          "92:             const iframe = document.createElement('iframe');",
          "93:             iframe.src = url;",
          "94:             iframe.setAttribute('width', '100%');",
          "",
          "[Removed Lines]",
          "90:             const url = new URL(await google.colab.kernel.proxyPort({port}, {{'cache': true}}));",
          "91:             url.searchParams.set('aim', 'true');",
          "",
          "[Added Lines]",
          "91:             let url = new URL('/notebook/', await google.colab.kernel.proxyPort({port}));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "111:     \"\"\"",
          "112:     import IPython.display",
          "113:     shell = \"\"\"",
          "115:           </iframe>",
          "118:     # @TODO write passing proxy logic",
          "",
          "[Removed Lines]",
          "114:           <iframe id=\"aim\" width=\"100%\" height=\"800\" frameborder=\"0\" src={}:{}>",
          "116:         \"\"\".format(host, port)",
          "",
          "[Added Lines]",
          "114:           <iframe id=\"aim\" width=\"100%\" height=\"800\" frameborder=\"0\" src={}:{}{}>",
          "116:         \"\"\".format(host, port, '/notebook/')",
          "",
          "---------------"
        ],
        "aim/web/api/__init__.py||aim/web/api/__init__.py": [
          "File: aim/web/api/__init__.py -> aim/web/api/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from fastapi import FastAPI",
          "2: from fastapi.middleware.cors import CORSMiddleware",
          "3: from fastapi.middleware.gzip import GZipMiddleware",
          "6: def create_app():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import os",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:     from aim.web.api.dashboards.views import dashboards_router",
          "24:     from aim.web.api.projects.views import projects_router",
          "25:     from aim.web.api.views import statics_router",
          "27:     api_app = FastAPI()",
          "28:     api_app.add_middleware(GZipMiddleware)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:     from aim.web.configs import AIM_UI_BASE_PATH",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "33:     api_app.include_router(projects_router, prefix='/projects')",
          "34:     api_app.include_router(runs_router, prefix='/runs')",
          "35:     api_app.include_router(tags_router, prefix='/tags')",
          "38:     static_files_app = FastAPI()",
          "40:     static_files_app.include_router(statics_router)",
          "43:     return app",
          "",
          "[Removed Lines]",
          "36:     app.mount('/api', api_app)",
          "41:     app.mount('/', static_files_app)",
          "",
          "[Added Lines]",
          "39:     base_path = os.environ.get(AIM_UI_BASE_PATH, '')",
          "41:     app.mount(f'{base_path}/api', api_app)",
          "45:     app.mount(f'{base_path}/', static_files_app)",
          "",
          "---------------"
        ],
        "aim/web/api/views.py||aim/web/api/views.py": [
          "File: aim/web/api/views.py -> aim/web/api/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:     static_file_name = '/'.join((static_files_root, path))",
          "19:     # check if path is leading inside ui/build directory",
          "21:         raise HTTPException(404)",
          "23:     compressed_file_name = '{}.gz'.format(static_file_name)",
          "",
          "[Removed Lines]",
          "20:     if not Path(static_files_root) in Path(static_file_name).resolve().parents:",
          "",
          "[Added Lines]",
          "20:     if not Path(static_files_root).resolve() in Path(static_file_name).resolve().parents:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     template_files_dir = os.path.join(os.path.dirname(web.__file__), 'ui', 'build')",
          "35:     templates = Jinja2Templates(directory=template_files_dir)",
          "36:     base_path = os.environ.get(AIM_UI_BASE_PATH, '')",
          "",
          "[Removed Lines]",
          "37:     # process `base_path` as ui requires leading slash",
          "38:     if base_path.endswith('/'):",
          "39:         base_path = base_path[:-1]",
          "40:     if base_path and not base_path.startswith('/'):",
          "41:         base_path = f'/{base_path}'",
          "43:     return templates.TemplateResponse('index.html', {'request': request, 'base_path': base_path})",
          "",
          "[Added Lines]",
          "38:     return templates.TemplateResponse('index-template.html', {'request': request, 'base_path': base_path})",
          "",
          "---------------"
        ],
        "aim/web/ui/config-overrides.js||aim/web/ui/config-overrides.js": [
          "File: aim/web/ui/config-overrides.js -> aim/web/ui/config-overrides.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: const WebpackDynamicPublicPathPlugin = require('webpack-dynamic-public-path');",
          "3: module.exports = {",
          "4:   webpack: function (config, env) {",
          "5:     config.optimization.splitChunks = {",
          "6:       cacheGroups: {",
          "7:         default: false,",
          "8:       },",
          "9:     };",
          "10:     config.optimization.runtimeChunk = true;",
          "11:     config.plugins.push(",
          "12:       new WebpackDynamicPublicPathPlugin({",
          "13:         externalPublicPath: 'window.externalPublicPath',",
          "14:       }),",
          "15:     );",
          "17:     return config;",
          "18:   },",
          "19: };",
          "",
          "---------------"
        ],
        "aim/web/ui/public/assets/inter/inter.css||aim/web/ui/public/assets/inter/inter.css": [
          "File: aim/web/ui/public/assets/inter/inter.css -> aim/web/ui/public/assets/inter/inter.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @font-face {",
          "2:   font-family: 'Inter';",
          "3:   src: url('./fonts/Inter-Light.ttf') format('truetype');",
          "4:   font-weight: 300;",
          "5: }",
          "6: @font-face {",
          "7:   font-family: 'Inter';",
          "8:   src: url('./fonts/Inter-Regular.ttf') format('truetype');",
          "9:   font-width: 400;",
          "10: }",
          "11: @font-face {",
          "12:   font-family: 'Inter';",
          "13:   src: url('./fonts/Inter-Medium.ttf') format('truetype');",
          "14:   font-weight: 500;",
          "15: }",
          "16: @font-face {",
          "17:   font-family: 'Inter';",
          "18:   src: url('./fonts/Inter-SemiBold.ttf') format('truetype');",
          "19:   font-weight: 600;",
          "20: }",
          "21: @font-face {",
          "22:   font-family: 'Inter';",
          "23:   src: url('./fonts/Inter-Bold.ttf') format('truetype');",
          "24:   font-weight: 700;",
          "25: }",
          "",
          "---------------"
        ],
        "aim/web/ui/public/index.html||aim/web/ui/public/index.html": [
          "File: aim/web/ui/public/index.html -> aim/web/ui/public/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <html lang=\"en\">",
          "3:   <head>",
          "4:     <meta charset=\"utf-8\" />",
          "5:     <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />",
          "6:     <meta",
          "7:       name=\"viewport\"",
          "8:       content=\"minimum-scale=1, initial-scale=1, width=device-width\"",
          "9:     />",
          "10:     <meta name=\"theme-color\" content=\"#000000\" />",
          "12:     <!--",
          "13:       manifest.json provides metadata used when your web app is installed on a",
          "14:       user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/",
          "",
          "[Removed Lines]",
          "11:     <meta name=\"description\" content=\"Open-source, self-hosted AI experiment tracking tool\">",
          "",
          "[Added Lines]",
          "5:     <!-- Replaceable with base path -->",
          "12:     <meta",
          "13:       name=\"description\"",
          "14:       content=\"Open-source, self-hosted AI experiment tracking tool\"",
          "15:     />",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:       work correctly both with client-side routing and a non-root public URL.",
          "24:       Learn how to configure a non-root public URL by running `npm run build`.",
          "25:     -->",
          "27:     <title>Aim</title>",
          "28:     <script>",
          "30:     </script>",
          "31:     <script>",
          "32:       window.API_BASE_PATH = '{{ base_path }}';",
          "33:     </script>",
          "34:   </head>",
          "35:   <body>",
          "",
          "[Removed Lines]",
          "26:     <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />",
          "29:       !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"once\",\"off\",\"on\",\"addSourceMiddleware\",\"addIntegrationMiddleware\",\"setAnonymousId\",\"addDestinationMiddleware\"];analytics.factory=function(e){return function(){var t=Array.prototype.slice.call(arguments);t.unshift(e);analytics.push(t);return analytics}};for(var e=0;e<analytics.methods.length;e++){var key=analytics.methods[e];analytics[key]=analytics.factory(key)}analytics.load=function(key,e){var t=document.createElement(\"script\");t.type=\"text/javascript\";t.async=!0;t.src=\"https://cdn.segment.com/analytics.js/v1/\" + key + \"/analytics.min.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(t,n);analytics._loadOptions=e};analytics.SNIPPET_VERSION=\"4.15.3\";}}();",
          "",
          "[Added Lines]",
          "30:     <link",
          "31:       rel=\"stylesheet\"",
          "32:       href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"",
          "33:     />",
          "35:     <link",
          "36:       rel=\"stylesheet\"",
          "37:       href=\"%PUBLIC_URL%/assets/icomoon/icomoonIcons.css\"",
          "38:     />",
          "39:     <link rel=\"stylesheet\" href=\"%PUBLIC_URL%/assets/inter/inter.css\" />",
          "44:       !(function () {",
          "45:         var analytics = (window.analytics = window.analytics || []);",
          "46:         if (!analytics.initialize)",
          "47:           if (analytics.invoked)",
          "48:             window.console &&",
          "49:               console.error &&",
          "50:               console.error('Segment snippet included twice.');",
          "51:           else {",
          "52:             analytics.invoked = !0;",
          "53:             analytics.methods = [",
          "54:               'trackSubmit',",
          "55:               'trackClick',",
          "56:               'trackLink',",
          "57:               'trackForm',",
          "58:               'pageview',",
          "59:               'identify',",
          "60:               'reset',",
          "61:               'group',",
          "62:               'track',",
          "63:               'ready',",
          "64:               'alias',",
          "65:               'debug',",
          "66:               'page',",
          "67:               'once',",
          "68:               'off',",
          "69:               'on',",
          "70:               'addSourceMiddleware',",
          "71:               'addIntegrationMiddleware',",
          "72:               'setAnonymousId',",
          "73:               'addDestinationMiddleware',",
          "74:             ];",
          "75:             analytics.factory = function (e) {",
          "76:               return function () {",
          "77:                 var t = Array.prototype.slice.call(arguments);",
          "78:                 t.unshift(e);",
          "79:                 analytics.push(t);",
          "80:                 return analytics;",
          "81:               };",
          "82:             };",
          "83:             for (var e = 0; e < analytics.methods.length; e++) {",
          "84:               var key = analytics.methods[e];",
          "85:               analytics[key] = analytics.factory(key);",
          "86:             }",
          "87:             analytics.load = function (key, e) {",
          "88:               var t = document.createElement('script');",
          "89:               t.type = 'text/javascript';",
          "90:               t.async = !0;",
          "91:               t.src =",
          "92:                 'https://cdn.segment.com/analytics.js/v1/' +",
          "93:                 key +",
          "94:                 '/analytics.min.js';",
          "95:               var n = document.getElementsByTagName('script')[0];",
          "96:               n.parentNode.insertBefore(t, n);",
          "97:               analytics._loadOptions = e;",
          "98:             };",
          "99:             analytics.SNIPPET_VERSION = '4.15.3';",
          "100:           }",
          "101:       })();",
          "105:       window.externalPublicPath = '%PUBLIC_URL%/';",
          "",
          "---------------"
        ],
        "aim/web/ui/src/App.scss||aim/web/ui/src/App.scss": [
          "File: aim/web/ui/src/App.scss -> aim/web/ui/src/App.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: @import 'src/styles/base/_reset.scss';",
          "4: @import 'src/styles/components/_autocomplete.scss';",
          "5: @import 'src/styles/components/_inputs.scss';",
          "6: @import 'src/styles/_global.scss';",
          "",
          "[Removed Lines]",
          "1: @import 'fonts/icomoon/icomoonIcons.scss';",
          "3: @import 'src/styles/base/_fonts.scss';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "aim/web/ui/src/App.tsx||aim/web/ui/src/App.tsx": [
          "File: aim/web/ui/src/App.tsx -> aim/web/ui/src/App.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: import './App.scss';",
          "12: function App(): React.FunctionComponentElement<React.ReactNode> {",
          "13:   return (",
          "14:     <>",
          "16:         <ProjectWrapper />",
          "17:         <Theme>",
          "18:           <div className='pageContainer'>",
          "",
          "[Removed Lines]",
          "15:       <BrowserRouter>",
          "",
          "[Added Lines]",
          "12: let basePath = '/';",
          "14: if ((window as any).API_BASE_PATH !== '{{ base_path }}') {",
          "15:   basePath = (window as any).API_BASE_PATH;",
          "16: }",
          "21:       <BrowserRouter basename={basePath}>",
          "",
          "---------------"
        ],
        "aim/web/ui/src/styles/abstracts/_variables.scss||aim/web/ui/src/styles/abstracts/_variables.scss": [
          "File: aim/web/ui/src/styles/abstracts/_variables.scss -> aim/web/ui/src/styles/abstracts/_variables.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: $primary-light: #7a94cc;",
          "38: $primary-color-90: #2c81e9;",
          "39: $primary-color-80: #438feb;",
          "40: $primary-color-70: #5b9dee;",
          "",
          "[Removed Lines]",
          "37: $primary-color-110: #1266CC;",
          "",
          "[Added Lines]",
          "37: $primary-color-110: #1266cc;",
          "",
          "---------------"
        ],
        "aim/web/ui/src/styles/base/__fonts.scss||aim/web/ui/src/styles/base/__fonts.scss": [
          "File: aim/web/ui/src/styles/base/__fonts.scss -> aim/web/ui/src/styles/base/__fonts.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "aim/web/ui/src/utils/app/updateUrlParam.ts||aim/web/ui/src/utils/app/updateUrlParam.ts": [
          "File: aim/web/ui/src/utils/app/updateUrlParam.ts -> aim/web/ui/src/utils/app/updateUrlParam.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     return;",
          "22:   }",
          "25:   if (!appId) {",
          "27:   }",
          "29:   window.history.pushState(null, '', url);",
          "",
          "[Removed Lines]",
          "24:   const appId: string = window.location.pathname.split('/')[2];",
          "26:     setItem(`${appName}Url`, url);",
          "",
          "[Added Lines]",
          "24:   const isExistBasePath = (window as any).API_BASE_PATH !== '{{ base_path }}';",
          "26:   const appId: string =",
          "27:     window.location.pathname.split('/')[isExistBasePath ? 3 : 2];",
          "29:     let fullURL = url;",
          "31:     if (isExistBasePath) {",
          "32:       fullURL = fullURL.replace((window as any).API_BASE_PATH, '');",
          "33:     }",
          "35:     setItem(`${appName}Url`, fullURL);",
          "",
          "---------------"
        ],
        "aim/web/ui/tasks/index-html-template-generator.js||aim/web/ui/tasks/index-html-template-generator.js": [
          "File: aim/web/ui/tasks/index-html-template-generator.js -> aim/web/ui/tasks/index-html-template-generator.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: const fs = require('fs').promises;",
          "3: const buildDirectoryPath = `${__dirname}/../build/`;",
          "4: const staticFilesKey = '/static-files/';",
          "5: const basePathKey = `{{ base_path }}${staticFilesKey}`;",
          "7: (async () => {",
          "8:   const HTML = await fs.readFile(`${buildDirectoryPath}index.html`, 'utf8');",
          "9:   const replacedHTML = HTML.replaceAll(staticFilesKey, basePathKey);",
          "11:   await fs.writeFile(`${buildDirectoryPath}index-template.html`, replacedHTML);",
          "13:   console.log('index-template.html file is generated');",
          "14: })();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc2a033ff223b8ca1c1a2c46f943f96d261df4d3",
      "candidate_info": {
        "commit_hash": "bc2a033ff223b8ca1c1a2c46f943f96d261df4d3",
        "repo": "aimhubio/aim",
        "commit_url": "https://github.com/aimhubio/aim/commit/bc2a033ff223b8ca1c1a2c46f943f96d261df4d3",
        "files": [
          "aim/web/api/views.py",
          "aim/web/ui/VERSION",
          "aim/web/ui/aim_ui/VERSION",
          "aim/web/ui/aim_ui/__init__.py",
          "aim/web/ui/aim_ui/build",
          "aim/web/ui/setup.py",
          "setup.py"
        ],
        "message": "[fix] Resolve aim-ui packaging issue",
        "before_after_code_files": [
          "aim/web/api/views.py||aim/web/api/views.py",
          "aim/web/ui/setup.py||aim/web/ui/setup.py",
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ],
          "candidate": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ]
        }
      },
      "candidate_diff": {
        "aim/web/api/views.py||aim/web/api/views.py": [
          "File: aim/web/api/views.py -> aim/web/api/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: from fastapi.templating import Jinja2Templates",
          "9: from aim.web.configs import AIM_UI_BASE_PATH",
          "10: statics_router = APIRouter()",
          "13: @statics_router.get('/static-files/{path:path}/')",
          "14: async def serve_static_files(path):",
          "17:     static_file_name = '/'.join((static_files_root, path))",
          "19:     # check if path is leading inside ui/build directory",
          "",
          "[Removed Lines]",
          "15:     from aim import web",
          "16:     static_files_root = os.path.join(os.path.dirname(web.__file__), 'ui', 'build')",
          "",
          "[Added Lines]",
          "16:     import aim_ui",
          "18:     static_files_root = os.path.join(os.path.dirname(aim_ui.__file__), 'build')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: # as it also serves as a fallback for wrong url routes",
          "31: @statics_router.get('/{path:path}/', response_class=HTMLResponse)",
          "32: async def serve_index_html(request: Request):",
          "35:     templates = Jinja2Templates(directory=template_files_dir)",
          "36:     base_path = os.environ.get(AIM_UI_BASE_PATH, '')",
          "",
          "[Removed Lines]",
          "33:     from aim import web",
          "34:     template_files_dir = os.path.join(os.path.dirname(web.__file__), 'ui', 'build')",
          "",
          "[Added Lines]",
          "35:     import aim_ui",
          "37:     template_files_dir = os.path.join(os.path.dirname(aim_ui.__file__), 'build')",
          "",
          "---------------"
        ],
        "aim/web/ui/setup.py||aim/web/ui/setup.py": [
          "File: aim/web/ui/setup.py -> aim/web/ui/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: here = os.path.abspath(os.path.dirname(__file__))",
          "8: with open(version_file) as vf:",
          "9:     __version__ = vf.read().strip()",
          "",
          "[Removed Lines]",
          "7: version_file = os.path.join(here, 'VERSION')",
          "",
          "[Added Lines]",
          "7: version_file = os.path.join(here, 'aim_ui/VERSION')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     paths = []",
          "19:     for (path, _, filenames) in os.walk(directory):",
          "20:         for filename in filenames:",
          "22:     return paths",
          "30: setup(",
          "31:     name=NAME,",
          "32:     version=__version__,",
          "33:     description=DESCRIPTION,",
          "37: )",
          "",
          "[Removed Lines]",
          "21:             paths.append(os.path.join(path, filename))",
          "25: files = package_files('build')",
          "27: # This is a symlink so main version",
          "28: files.append('VERSION')",
          "34:     packages=[\"aim.web.ui\"],",
          "35:     package_dir={'aim.web.ui': '.'},",
          "36:     package_data={'aim.web.ui': files}",
          "",
          "[Added Lines]",
          "21:             paths.append(os.path.join('..', path, filename))",
          "25: # These are symlinks to main files",
          "26: files = package_files('aim_ui/build')",
          "27: files.append('../aim_ui/VERSION')",
          "33:     packages=['aim_ui'],",
          "34:     package_data={'aim_ui': files}",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: REQUIRES_PYTHON = '>=3.6.0'",
          "21: # Get packages",
          "25: # Get a list of all files in the html directory to include in our module",
          "",
          "[Removed Lines]",
          "22: packages = find_packages(exclude=('tests',))",
          "",
          "[Added Lines]",
          "22: packages = find_packages(exclude=('tests', 'aim.web.ui'))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ef43c47122f2e903a02774930222bad8bf33153",
      "candidate_info": {
        "commit_hash": "9ef43c47122f2e903a02774930222bad8bf33153",
        "repo": "aimhubio/aim",
        "commit_url": "https://github.com/aimhubio/aim/commit/9ef43c47122f2e903a02774930222bad8bf33153",
        "files": [
          "CHANGELOG.md",
          "aim/cli/up/commands.py",
          "aim/web/api/views.py",
          "aim/web/configs.py",
          "aim/web/ui/public/index.html",
          "aim/web/ui/src/config/config.ts",
          "aim/web/ui/src/services/api/api.ts",
          "aim/web/ui/src/services/live-update/Worker.ts",
          "aim/web/ui/src/services/live-update/examples/LiveUpdateBridge.example.js"
        ],
        "message": "Add ability to provide custom base path for API (#1099)\n\n* Add ability to provide custom base path for API\n\n* Add support for `--base-path` argument in `aim up` command which will enable re-rendering `index.html` template based on user input\n\n* Provide API base path to worker when live-update is enabled\n\nCo-authored-by: mihran113 <vanyanmihran@gmail.com>",
        "before_after_code_files": [
          "aim/cli/up/commands.py||aim/cli/up/commands.py",
          "aim/web/api/views.py||aim/web/api/views.py",
          "aim/web/configs.py||aim/web/configs.py",
          "aim/web/ui/public/index.html||aim/web/ui/public/index.html",
          "aim/web/ui/src/config/config.ts||aim/web/ui/src/config/config.ts",
          "aim/web/ui/src/services/api/api.ts||aim/web/ui/src/services/api/api.ts",
          "aim/web/ui/src/services/live-update/Worker.ts||aim/web/ui/src/services/live-update/Worker.ts",
          "aim/web/ui/src/services/live-update/examples/LiveUpdateBridge.example.js||aim/web/ui/src/services/live-update/examples/LiveUpdateBridge.example.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ],
          "candidate": [
            "aim/web/api/views.py||aim/web/api/views.py"
          ]
        }
      },
      "candidate_diff": {
        "aim/cli/up/commands.py||aim/cli/up/commands.py": [
          "File: aim/cli/up/commands.py -> aim/cli/up/commands.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import click",
          "4: from aim.web.configs import AIM_UI_DEFAULT_PORT, AIM_UI_DEFAULT_HOST, AIM_TF_LOGS_PATH_KEY, AIM_ENV_MODE_KEY, \\",
          "6: from aim.sdk.repo import Repo, RepoStatus",
          "7: from aim.sdk.utils import clean_repo_path",
          "8: from aim.cli.up.utils import build_db_upgrade_command, build_uvicorn_command",
          "",
          "[Removed Lines]",
          "5:     AIM_UI_MOUNTED_REPO_PATH, AIM_UI_TELEMETRY_KEY",
          "",
          "[Added Lines]",
          "5:     AIM_UI_MOUNTED_REPO_PATH, AIM_UI_TELEMETRY_KEY, AIM_UI_BASE_PATH",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:                                                                 file_okay=True,",
          "30:                                                                 dir_okay=False,",
          "31:                                                                 readable=True))",
          "32: @click.option('--force-init', is_flag=True, default=False)",
          "34:     if dev:",
          "35:         os.environ[AIM_ENV_MODE_KEY] = 'dev'",
          "36:     else:",
          "37:         os.environ[AIM_ENV_MODE_KEY] = 'prod'",
          "39:     repo_path = clean_repo_path(repo) or Repo.default_repo_path()",
          "40:     repo_status = Repo.check_repo_status(repo_path)",
          "41:     if repo_status == RepoStatus.MISSING:",
          "",
          "[Removed Lines]",
          "33: def up(dev, host, port, workers, repo, tf_logs, ssl_keyfile, ssl_certfile, force_init):",
          "",
          "[Added Lines]",
          "32: @click.option('--base-path', required=False, default='', type=str)",
          "34: def up(dev, host, port, workers, repo, tf_logs, ssl_keyfile, ssl_certfile, base_path, force_init):",
          "40:     if base_path:",
          "41:         os.environ[AIM_UI_BASE_PATH] = base_path",
          "",
          "---------------"
        ],
        "aim/web/api/views.py||aim/web/api/views.py": [
          "File: aim/web/api/views.py -> aim/web/api/views.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import os",
          "2: from pathlib import Path",
          "4: from aim.web.api.utils import APIRouter  # wrapper for fastapi.APIRouter",
          "8: statics_router = APIRouter()",
          "",
          "[Removed Lines]",
          "5: from fastapi.responses import FileResponse",
          "6: from fastapi import HTTPException",
          "",
          "[Added Lines]",
          "4: from fastapi import HTTPException, Request",
          "6: from fastapi.responses import FileResponse, HTMLResponse",
          "7: from fastapi.templating import Jinja2Templates",
          "9: from aim.web.configs import AIM_UI_BASE_PATH",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: # do not change the placement of this method",
          "28: # as it also serves as a fallback for wrong url routes",
          "31:     from aim import web",
          "",
          "[Removed Lines]",
          "29: @statics_router.get('/{path:path}/')",
          "30: async def serve_index_html():",
          "32:     static_file_name = os.path.join(os.path.dirname(web.__file__), 'ui', 'build', 'index.html')",
          "33:     compressed_file_name = '{}.gz'.format(static_file_name)",
          "34:     if os.path.exists(compressed_file_name):",
          "35:         return FileResponse(compressed_file_name, headers={'Content-Encoding': 'gzip'})",
          "36:     return FileResponse(static_file_name)",
          "",
          "[Added Lines]",
          "31: @statics_router.get('/{path:path}/', response_class=HTMLResponse)",
          "32: async def serve_index_html(request: Request):",
          "34:     template_files_dir = os.path.join(os.path.dirname(web.__file__), 'ui', 'build')",
          "35:     templates = Jinja2Templates(directory=template_files_dir)",
          "36:     base_path = os.environ.get(AIM_UI_BASE_PATH, '')",
          "37:     # process `base_path` as ui requires leading slash",
          "38:     if base_path.endswith('/'):",
          "39:         base_path = base_path[:-1]",
          "40:     if base_path and not base_path.startswith('/'):",
          "41:         base_path = f'/{base_path}'",
          "43:     return templates.TemplateResponse('index.html', {'request': request, 'base_path': base_path})",
          "",
          "---------------"
        ],
        "aim/web/configs.py||aim/web/configs.py": [
          "File: aim/web/configs.py -> aim/web/configs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: AIM_ENV_MODE_KEY = '__AIM_ENV_MODE__'",
          "6: AIM_UI_MOUNTED_REPO_PATH = '__AIM_UI_MOUNT_REPO_PATH__'",
          "7: AIM_UI_TELEMETRY_KEY = 'AIM_UI_TELEMETRY_ENABLED'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: AIM_UI_BASE_PATH = '__AIM_UI_BASE_PATH__'",
          "",
          "---------------"
        ],
        "aim/web/ui/public/index.html||aim/web/ui/public/index.html": [
          "File: aim/web/ui/public/index.html -> aim/web/ui/public/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     <script>",
          "29:       !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"once\",\"off\",\"on\",\"addSourceMiddleware\",\"addIntegrationMiddleware\",\"setAnonymousId\",\"addDestinationMiddleware\"];analytics.factory=function(e){return function(){var t=Array.prototype.slice.call(arguments);t.unshift(e);analytics.push(t);return analytics}};for(var e=0;e<analytics.methods.length;e++){var key=analytics.methods[e];analytics[key]=analytics.factory(key)}analytics.load=function(key,e){var t=document.createElement(\"script\");t.type=\"text/javascript\";t.async=!0;t.src=\"https://cdn.segment.com/analytics.js/v1/\" + key + \"/analytics.min.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(t,n);analytics._loadOptions=e};analytics.SNIPPET_VERSION=\"4.15.3\";}}();",
          "30:     </script>",
          "31:   </head>",
          "32:   <body>",
          "33:     <noscript>You need to enable JavaScript to run this app.</noscript>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:     <script>",
          "32:       window.API_BASE_PATH = '{{ base_path }}';",
          "33:     </script>",
          "",
          "---------------"
        ],
        "aim/web/ui/src/config/config.ts||aim/web/ui/src/config/config.ts": [
          "File: aim/web/ui/src/config/config.ts -> aim/web/ui/src/config/config.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: try {",
          "4:   globalScope = window;",
          "",
          "[Removed Lines]",
          "1: let globalScope;",
          "",
          "[Added Lines]",
          "1: interface GlobalScope extends Window {",
          "2:   API_BASE_PATH?: string;",
          "3: }",
          "5: let globalScope: GlobalScope;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10: export const isDEVModeOn: boolean = process.env.NODE_ENV === 'development';",
          "",
          "[Removed Lines]",
          "12: export const API_HOST: string = isDEVModeOn",
          "13:   ? 'http://127.0.0.1:43800/api'",
          "14:   : `${globalScope.location.protocol}//${globalScope.location.hostname}:${globalScope.location.port}/api`;",
          "",
          "[Added Lines]",
          "16: function getAPIBasePath() {",
          "17:   if (globalScope.API_BASE_PATH === '{{ base_path }}') {",
          "18:     return '';",
          "19:   }",
          "20:   return globalScope.API_BASE_PATH;",
          "21: }",
          "23: let API_HOST: string = isDEVModeOn",
          "24:   ? `http://127.0.0.1:43800${getAPIBasePath()}/api`",
          "25:   : `${getAPIBasePath()}/api`;",
          "27: export function getAPIHost() {",
          "28:   return API_HOST;",
          "29: }",
          "31: export function setAPIBasePath(basePath: string) {",
          "32:   globalScope.API_BASE_PATH = basePath;",
          "33:   API_HOST = isDEVModeOn",
          "34:     ? `http://127.0.0.1:43800${getAPIBasePath()}/api`",
          "35:     : `${getAPIBasePath()}/api`;",
          "36: }",
          "",
          "---------------"
        ],
        "aim/web/ui/src/services/api/api.ts||aim/web/ui/src/services/api/api.ts": [
          "File: aim/web/ui/src/services/api/api.ts -> aim/web/ui/src/services/api/api.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: function createAPIRequestWrapper<ResponseDataType>(",
          "4:   url: string,",
          "",
          "[Removed Lines]",
          "1: import { API_HOST } from 'config/config';",
          "",
          "[Added Lines]",
          "1: import { getAPIHost } from 'config/config';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:   return {",
          "12:     call: (exceptionHandler?: (error: ResponseDataType) => any) =>",
          "13:       new Promise((resolve: (data: ResponseDataType) => void, reject) => {",
          "15:           .then(async (response) => {",
          "16:             try {",
          "17:               if (response.status >= 400) {",
          "",
          "[Removed Lines]",
          "14:         fetch(`${API_HOST}/${url}`, { ...options, signal })",
          "",
          "[Added Lines]",
          "14:         fetch(`${getAPIHost()}/${url}`, { ...options, signal })",
          "",
          "---------------"
        ],
        "aim/web/ui/src/services/live-update/Worker.ts||aim/web/ui/src/services/live-update/Worker.ts": [
          "File: aim/web/ui/src/services/live-update/Worker.ts -> aim/web/ui/src/services/live-update/Worker.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import * as Comlink from 'comlink';",
          "9: import {",
          "10:   adjustable_reader,",
          "11:   decode_buffer_pairs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: import { setAPIBasePath } from 'config/config';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:   invariantError(error, logging);",
          "229: }",
          "232:   subscribeToApiCallResult,",
          "233:   setConfig,",
          "234:   start,",
          "235:   close,",
          "236:   stop,",
          "237: };",
          "",
          "[Removed Lines]",
          "231: const Worker = {",
          "239: export type IWorker = typeof Worker;",
          "242: Comlink.expose(Worker);",
          "",
          "[Added Lines]",
          "233: function replaceBasePath(basePath: string) {",
          "234:   setAPIBasePath(basePath);",
          "235: }",
          "237: const WebWorker = {",
          "243:   replaceBasePath,",
          "246: export type IWorker = typeof WebWorker;",
          "249: Comlink.expose(WebWorker);",
          "",
          "---------------"
        ],
        "aim/web/ui/src/services/live-update/examples/LiveUpdateBridge.example.js||aim/web/ui/src/services/live-update/examples/LiveUpdateBridge.example.js": [
          "File: aim/web/ui/src/services/live-update/examples/LiveUpdateBridge.example.js -> aim/web/ui/src/services/live-update/examples/LiveUpdateBridge.example.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     this.responseListener = responseListener;",
          "34:     this.instance = new LUWorker();",
          "35:     this.instance.setConfig(",
          "36:       appName,",
          "37:       embeddedAppNames[this.appName].endpoint,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:     this.instance.replaceBasePath(window.API_BASE_PATH);",
          "",
          "---------------"
        ]
      }
    }
  ]
}