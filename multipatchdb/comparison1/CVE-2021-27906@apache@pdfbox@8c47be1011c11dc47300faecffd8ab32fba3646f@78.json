{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ae2a87d37278c12a9c3993ccdb762b85ee94c7ed",
      "candidate_info": {
        "commit_hash": "ae2a87d37278c12a9c3993ccdb762b85ee94c7ed",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ae2a87d37278c12a9c3993ccdb762b85ee94c7ed",
        "files": [
          "tools/src/main/java/org/apache/pdfbox/tools/PDFText2HTML.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891642 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "tools/src/main/java/org/apache/pdfbox/tools/PDFText2HTML.java||tools/src/main/java/org/apache/pdfbox/tools/PDFText2HTML.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/src/main/java/org/apache/pdfbox/tools/PDFText2HTML.java||tools/src/main/java/org/apache/pdfbox/tools/PDFText2HTML.java": [
          "File: tools/src/main/java/org/apache/pdfbox/tools/PDFText2HTML.java -> tools/src/main/java/org/apache/pdfbox/tools/PDFText2HTML.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:         if ((character < 32) || (character > 126))",
          "235:         {",
          "238:         }",
          "239:         else",
          "240:         {",
          "",
          "[Removed Lines]",
          "236:             int charAsInt = character;",
          "237:             builder.append(\"&#\").append(charAsInt).append(\";\");",
          "",
          "[Added Lines]",
          "236:             builder.append(\"&#\").append((int) character).append(\";\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e34e4326611ff411ea6f8d90cb5935637ea86d84",
      "candidate_info": {
        "commit_hash": "e34e4326611ff411ea6f8d90cb5935637ea86d84",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e34e4326611ff411ea6f8d90cb5935637ea86d84",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/graphic/ICCProfileWrapper.java",
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java"
        ],
        "message": "PDFBOX-4892: remove redundant null check for loops, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889583 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/graphic/ICCProfileWrapper.java||preflight/src/main/java/org/apache/pdfbox/preflight/graphic/ICCProfileWrapper.java",
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/graphic/ICCProfileWrapper.java||preflight/src/main/java/org/apache/pdfbox/preflight/graphic/ICCProfileWrapper.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/graphic/ICCProfileWrapper.java -> preflight/src/main/java/org/apache/pdfbox/preflight/graphic/ICCProfileWrapper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:         COSBase cBase = catalog.getCOSObject().getItem(COSName.getPDFName(DOCUMENT_DICTIONARY_KEY_OUTPUT_INTENTS));",
          "128:         COSArray outputIntents = COSUtils.getAsArray(cBase, document.getDocument());",
          "131:         {",
          "132:             COSDictionary outputIntentDict = COSUtils.getAsDictionary(outputIntents.get(i), document.getDocument());",
          "133:             COSBase destOutputProfile = outputIntentDict.getItem(OUTPUT_INTENT_DICTIONARY_KEY_DEST_OUTPUT_PROFILE);",
          "",
          "[Removed Lines]",
          "130:         for (int i = 0; outputIntents != null && i < outputIntents.size(); ++i)",
          "",
          "[Added Lines]",
          "130:         if (outputIntents == null)",
          "131:         {",
          "132:             return null;",
          "133:         }",
          "134:         for (int i = 0; i < outputIntents.size(); ++i)",
          "",
          "---------------"
        ],
        "preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java -> preflight/src/main/java/org/apache/pdfbox/preflight/process/CatalogValidationProcess.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:         COSArray outputIntents = COSUtils.getAsArray(cBase, cosDocument);",
          "248:         Map<COSObjectKey, Boolean> tmpDestOutputProfile = new HashMap<COSObjectKey, Boolean>();",
          "250:         {",
          "251:             COSDictionary outputIntentDict = COSUtils.getAsDictionary(outputIntents.get(i), cosDocument);",
          "",
          "[Removed Lines]",
          "249:         for (int i = 0; outputIntents != null && i < outputIntents.size(); ++i)",
          "",
          "[Added Lines]",
          "249:         if (outputIntents == null)",
          "250:         {",
          "251:             return;",
          "252:         }",
          "253:         for (int i = 0; i < outputIntents.size(); ++i)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24a27734e2d78e3c024e542fd2bc9793fd45c638",
      "candidate_info": {
        "commit_hash": "24a27734e2d78e3c024e542fd2bc9793fd45c638",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/24a27734e2d78e3c024e542fd2bc9793fd45c638",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov; add debug log\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890729 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:     @Override",
          "156:     public Object accept( ICOSVisitor visitor ) throws IOException",
          "157:     {",
          "159:     }",
          "",
          "[Removed Lines]",
          "158:         return getObject() != null ? getObject().accept( visitor ) : COSNull.NULL.accept( visitor );",
          "",
          "[Added Lines]",
          "158:         COSBase object = getObject();",
          "159:         return object != null ? object.accept(visitor) : COSNull.NULL.accept(visitor);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06869356e3c103b653fd788abee261acb22e758f",
      "candidate_info": {
        "commit_hash": "06869356e3c103b653fd788abee261acb22e758f",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/06869356e3c103b653fd788abee261acb22e758f",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java"
        ],
        "message": "PDFBOX-4934: recover from bad UC2\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1880950 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:             if (strName != null)",
          "348:             {",
          "352:             }",
          "353:         }",
          "354:     }",
          "",
          "[Removed Lines]",
          "349:                 CMap prdCMap = CMapManager.getPredefinedCMap(strName);",
          "350:                 String ucs2Name = prdCMap.getRegistry() + \"-\" + prdCMap.getOrdering() + \"-UCS2\";",
          "351:                 cMapUCS2 = CMapManager.getPredefinedCMap(ucs2Name);",
          "",
          "[Added Lines]",
          "349:                 try",
          "350:                 {",
          "351:                     CMap prdCMap = CMapManager.getPredefinedCMap(strName);",
          "352:                     String ucs2Name = prdCMap.getRegistry() + \"-\" + prdCMap.getOrdering() + \"-UCS2\";",
          "353:                     cMapUCS2 = CMapManager.getPredefinedCMap(ucs2Name);",
          "354:                 }",
          "355:                 catch (IOException ex)",
          "356:                 {",
          "357:                     LOG.warn(\"Could not get \" + strName + \" UC2 map for font \" + getName(), ex);",
          "358:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e6a1651a6452f210044fb223fee5390496d4e0b",
      "candidate_info": {
        "commit_hash": "2e6a1651a6452f210044fb223fee5390496d4e0b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2e6a1651a6452f210044fb223fee5390496d4e0b",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java"
        ],
        "message": "PDFBOX-4892: content streams never contain COSObjects\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888895 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.apache.pdfbox.cos.COSDictionary;",
          "39: import org.apache.pdfbox.cos.COSName;",
          "40: import org.apache.pdfbox.cos.COSNumber;",
          "42: import org.apache.pdfbox.cos.COSString;",
          "43: import org.apache.pdfbox.filter.MissingImageReaderException;",
          "44: import org.apache.pdfbox.pdfparser.PDFStreamParser;",
          "",
          "[Removed Lines]",
          "41: import org.apache.pdfbox.cos.COSObject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "510:         Object token = parser.parseNextToken();",
          "511:         while (token != null)",
          "512:         {",
          "518:             {",
          "519:                 processOperator((Operator) token, arguments);",
          "520:                 arguments = new ArrayList<COSBase>();",
          "",
          "[Removed Lines]",
          "513:             if (token instanceof COSObject)",
          "514:             {",
          "515:                 arguments.add(((COSObject) token).getObject());",
          "516:             }",
          "517:             else if (token instanceof Operator)",
          "",
          "[Added Lines]",
          "512:             if (token instanceof Operator)",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: import org.apache.pdfbox.cos.COSName;",
          "32: import org.apache.pdfbox.cos.COSNull;",
          "33: import org.apache.pdfbox.cos.COSNumber;",
          "35: import org.apache.pdfbox.cos.COSStream;",
          "36: import org.apache.pdfbox.io.RandomAccessBuffer;",
          "37: import org.apache.pdfbox.pdmodel.common.PDStream;",
          "",
          "[Removed Lines]",
          "34: import org.apache.pdfbox.cos.COSObject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:                 {",
          "199:                     return Operator.getOperator(next);",
          "200:                 }",
          "211:             case '0':",
          "212:             case '1':",
          "213:             case '2':",
          "",
          "[Removed Lines]",
          "201:             case 'R':",
          "202:                 String line = readString();",
          "203:                 if( line.equals( \"R\" ) )",
          "204:                 {",
          "205:                     return new COSObject(null);",
          "206:                 }",
          "207:                 else",
          "208:                 {",
          "209:                     return Operator.getOperator(line);",
          "210:                 }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import org.apache.pdfbox.contentstream.operator.Operator;",
          "26: import org.apache.pdfbox.cos.COSBase;",
          "27: import org.apache.pdfbox.cos.COSNumber;",
          "29: import org.apache.pdfbox.cos.COSStream;",
          "30: import org.apache.pdfbox.pdfparser.PDFStreamParser;",
          "31: import org.apache.pdfbox.pdmodel.PDResources;",
          "",
          "[Removed Lines]",
          "28: import org.apache.pdfbox.cos.COSObject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:         Object token = parser.parseNextToken();",
          "99:         while (token != null)",
          "100:         {",
          "106:             {",
          "107:                 if (((Operator) token).getName().equals(\"d1\") && arguments.size() == 6)",
          "108:                 {",
          "",
          "[Removed Lines]",
          "101:             if (token instanceof COSObject)",
          "102:             {",
          "103:                 arguments.add(((COSObject) token).getObject());",
          "104:             }",
          "105:             else if (token instanceof Operator)",
          "",
          "[Added Lines]",
          "100:             if (token instanceof Operator)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "153:         Object token = parser.parseNextToken();",
          "154:         while (token != null)",
          "155:         {",
          "161:             {",
          "162:                 return parseWidth((Operator) token, arguments);",
          "163:             }",
          "",
          "[Removed Lines]",
          "156:             if (token instanceof COSObject)",
          "157:             {",
          "158:                 arguments.add(((COSObject) token).getObject());",
          "159:             }",
          "160:             else if (token instanceof Operator)",
          "",
          "[Added Lines]",
          "151:             if (token instanceof Operator)",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import org.apache.pdfbox.cos.COSBase;",
          "28: import org.apache.pdfbox.cos.COSName;",
          "29: import org.apache.pdfbox.cos.COSNumber;",
          "31: import org.apache.pdfbox.io.IOUtils;",
          "32: import org.apache.pdfbox.pdfparser.PDFStreamParser;",
          "33: import org.apache.pdfbox.pdmodel.PDAppearanceContentStream;",
          "",
          "[Removed Lines]",
          "30: import org.apache.pdfbox.cos.COSObject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "395:             Operator graphicOp = null;",
          "396:             for (Object token = parser.parseNextToken(); token != null; token = parser.parseNextToken())",
          "397:             {",
          "403:                 {",
          "404:                     Operator op = (Operator) token;",
          "405:                     String name = op.getName();",
          "",
          "[Removed Lines]",
          "398:                 if (token instanceof COSObject)",
          "399:                 {",
          "400:                     arguments.add(((COSObject) token).getObject());",
          "401:                 }",
          "402:                 else if (token instanceof Operator)",
          "",
          "[Added Lines]",
          "397:                 if (token instanceof Operator)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "464:             COSArray fontArguments = new COSArray();",
          "465:             for (Object token = parser.parseNextToken(); token != null; token = parser.parseNextToken())",
          "466:             {",
          "472:                 {",
          "473:                     Operator op = (Operator) token;",
          "474:                     String name = op.getName();",
          "",
          "[Removed Lines]",
          "467:                 if (token instanceof COSObject)",
          "468:                 {",
          "469:                     arguments.add(((COSObject) token).getObject());",
          "470:                 }",
          "471:                 else if (token instanceof Operator)",
          "",
          "[Added Lines]",
          "462:                 if (token instanceof Operator)",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import org.apache.pdfbox.cos.COSBase;",
          "28: import org.apache.pdfbox.cos.COSName;",
          "29: import org.apache.pdfbox.cos.COSNumber;",
          "31: import org.apache.pdfbox.cos.COSString;",
          "32: import org.apache.pdfbox.pdfparser.PDFStreamParser;",
          "33: import org.apache.pdfbox.pdmodel.PDPageContentStream;",
          "",
          "[Removed Lines]",
          "30: import org.apache.pdfbox.cos.COSObject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:         Object token = parser.parseNextToken();",
          "102:         while (token != null)",
          "103:         {",
          "109:             {",
          "110:                 processOperator((Operator) token, arguments);",
          "111:                 arguments = new ArrayList<COSBase>();",
          "",
          "[Removed Lines]",
          "104:             if (token instanceof COSObject)",
          "105:             {",
          "106:                 arguments.add(((COSObject) token).getObject());",
          "107:             }",
          "108:             else if (token instanceof Operator)",
          "",
          "[Added Lines]",
          "103:             if (token instanceof Operator)",
          "",
          "---------------"
        ]
      }
    }
  ]
}