{
  "cve_id": "CVE-2020-28360",
  "cve_desc": "Insufficient RegEx in private-ip npm package v1.0.5 and below insufficiently filters reserved IP ranges resulting in indeterminate SSRF. An attacker can perform a large range of requests to ARIN reserved IP ranges, resulting in an indeterminable number of critical attack vectors, allowing remote attackers to request server-side resources or potentially execute arbitrary code through various SSRF techniques.",
  "repo": "frenchbread/private-ip",
  "patch_hash": "840664c4b9ba7888c41cfee9666e9a593db133e9",
  "patch_info": {
    "commit_hash": "840664c4b9ba7888c41cfee9666e9a593db133e9",
    "repo": "frenchbread/private-ip",
    "commit_url": "https://github.com/frenchbread/private-ip/commit/840664c4b9ba7888c41cfee9666e9a593db133e9",
    "files": [
      "CREDITS.md",
      "README.md",
      "package.json",
      "src/index.js",
      "test.js",
      "yarn.lock"
    ],
    "message": "Add tests & replace regex with netmask.",
    "before_after_code_files": [
      "src/index.js||src/index.js",
      "test.js||test.js",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "src/index.js||src/index.js": [
      "File: src/index.js -> src/index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: export default (ip) => (",
      "11: )",
      "",
      "[Removed Lines]",
      "2:   /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||",
      "3:   /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||",
      "4:   /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||",
      "5:   /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||",
      "6:   /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||",
      "7:   /^f[cd][0-9a-f]{2}:/i.test(ip) ||",
      "8:   /^fe80:/i.test(ip) ||",
      "9:   /^::1$/.test(ip) ||",
      "10:   /^::$/.test(ip)",
      "",
      "[Added Lines]",
      "1: var Netmask = require('netmask').Netmask",
      "2: function netmaskCheck (params) {",
      "3:   let privateRanges = [",
      "4:     '0.0.0.0/8',",
      "5:     '10.0.0.0/8',",
      "6:     '100.64.0.0/10',",
      "7:     '127.0.0.0/8',",
      "8:     '169.254.0.0/16',",
      "9:     '172.16.0.0/12',",
      "10:     '192.0.0.0/24',",
      "11:     '192.0.0.0/29',",
      "12:     '192.0.0.8/32',",
      "13:     '192.0.0.9/32',",
      "14:     '192.0.0.10/32',",
      "15:     '192.0.0.170/32',",
      "16:     '192.0.0.171/32',",
      "17:     '192.0.2.0/24',",
      "18:     '192.31.196.0/24',",
      "19:     '192.52.193.0/24',",
      "20:     '192.88.99.0/24',",
      "21:     '192.168.0.0/16',",
      "22:     '192.175.48.0/24',",
      "23:     '198.18.0.0/15',",
      "24:     '198.51.100.0/24',",
      "25:     '203.0.113.0/24',",
      "26:     '240.0.0.0/4',",
      "27:     '255.255.255.255/32'",
      "28:   ].map(b => new Netmask(b))",
      "29:   for (let r of privateRanges) {",
      "30:     if (r.contains(params)) return true",
      "31:   }",
      "32:   return false",
      "33: }",
      "36:   netmaskCheck(ip)",
      "",
      "---------------"
    ],
    "test.js||test.js": [
      "File: test.js -> test.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: const publicIps = [",
      "5:   '164.101.185.82',",
      "6:   '226.84.185.150',",
      "8:   '71.12.102.112',",
      "10:   '223.231.138.242',",
      "11:   '156.238.194.84',",
      "12:   '101.0.26.90',",
      "",
      "[Removed Lines]",
      "7:   '255.38.207.121',",
      "9:   '250.29.143.180',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:   '172.16.0.0',",
      "24:   '172.31.255.255',",
      "25:   '192.168.0.0',",
      "27: ]",
      "29: publicIps.forEach((ip) => {",
      "",
      "[Removed Lines]",
      "26:   '192.168.255.255'",
      "",
      "[Added Lines]",
      "26:   '192.168.255.255',",
      "27:   '0.0.0.0',",
      "28:   '0.0.0.1',",
      "29:   '0.0.0.255',",
      "30:   '0.0.0.7',",
      "31:   '0.0.255.255',",
      "32:   '0.1.255.255',",
      "33:   '0.15.255.255',",
      "34:   '0.255.255.254',",
      "35:   '0.255.255.255',",
      "36:   '0.63.255.255',",
      "37:   '10.0.0.0',",
      "38:   '10.0.0.1',",
      "39:   '100.127.255.254',",
      "40:   '100.127.255.255',",
      "41:   '100.64.0.0',",
      "42:   '100.64.0.1',",
      "43:   '10.255.255.254',",
      "44:   '10.255.255.255',",
      "45:   '127.0.0.0',",
      "46:   '127.0.0.1',",
      "47:   '127.255.255.254',",
      "48:   '127.255.255.255',",
      "49:   '169.254.0.0',",
      "50:   '169.254.0.1',",
      "51:   '169.254.255.254',",
      "52:   '169.254.255.255',",
      "53:   '172.16.0.0',",
      "54:   '172.16.0.1',",
      "55:   '172.31.255.254',",
      "56:   '172.31.255.255',",
      "57:   '192.0.0.0',",
      "58:   '192.0.0.1',",
      "59:   '192.0.0.10',",
      "60:   '192.0.0.11',",
      "61:   '192.0.0.170',",
      "62:   '192.0.0.171',",
      "63:   '192.0.0.254',",
      "64:   '192.0.0.255',",
      "65:   '192.0.0.6',",
      "66:   '192.0.0.7',",
      "67:   '192.0.0.8',",
      "68:   '192.0.0.9',",
      "69:   '192.0.2.0',",
      "70:   '192.0.2.1',",
      "71:   '192.0.2.254',",
      "72:   '192.0.2.255',",
      "73:   '192.168.0.0',",
      "74:   '192.168.0.1',",
      "75:   '192.168.255.254',",
      "76:   '192.168.255.255',",
      "77:   '192.175.48.0',",
      "78:   '192.175.48.1',",
      "79:   '192.175.48.254',",
      "80:   '192.175.48.255',",
      "81:   '192.31.196.0',",
      "82:   '192.31.196.1',",
      "83:   '192.31.196.254',",
      "84:   '192.31.196.255',",
      "85:   '192.52.193.0',",
      "86:   '192.52.193.1',",
      "87:   '192.52.193.254',",
      "88:   '192.52.193.255',",
      "89:   '192.88.99.0',",
      "90:   '192.88.99.1',",
      "91:   '192.88.99.254',",
      "92:   '192.88.99.255',",
      "93:   '198.18.0.0',",
      "94:   '198.18.0.1',",
      "95:   '198.19.255.254',",
      "96:   '198.19.255.255',",
      "97:   '198.51.100.0',",
      "98:   '198.51.100.1',",
      "99:   '198.51.100.254',",
      "100:   '198.51.100.255',",
      "101:   '203.0.113.0',",
      "102:   '203.0.113.1',",
      "103:   '203.0.113.254',",
      "104:   '203.0.113.255',",
      "105:   '240.0.0.0',",
      "106:   '240.0.0.1',",
      "107:   '255.0.0.0',",
      "108:   '255.192.0.0',",
      "109:   '255.240.0.0',",
      "110:   '255.254.0.0',",
      "111:   '255.255.0.0',",
      "112:   '255.255.255.0',",
      "113:   '255.255.255.248',",
      "114:   '255.255.255.254',",
      "115:   '255.255.255.255',",
      "116:   '0000.0000.0000.0000',",
      "117:   '0000.0000'",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a22fa00810e37a8eff6018ad0f5a52d839c88590",
      "candidate_info": {
        "commit_hash": "a22fa00810e37a8eff6018ad0f5a52d839c88590",
        "repo": "frenchbread/private-ip",
        "commit_url": "https://github.com/frenchbread/private-ip/commit/a22fa00810e37a8eff6018ad0f5a52d839c88590",
        "files": [
          "test.js"
        ],
        "message": "add tests",
        "before_after_code_files": [
          "test.js||test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test.js||test.js"
          ],
          "candidate": [
            "test.js||test.js"
          ]
        }
      },
      "candidate_diff": {
        "test.js||test.js": [
          "File: test.js -> test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:   '0.255.255.255',",
          "51:   '10.0.0.0',",
          "52:   '10.0.0.1',",
          "58:   '10.255.255.254',",
          "59:   '10.255.255.255',",
          "60:   '100.64.0.0',",
          "",
          "[Removed Lines]",
          "53:   '010.000.000.001',",
          "54:   '100.127.255.254',",
          "55:   '100.127.255.255',",
          "56:   '100.64.0.0',",
          "57:   '100.64.0.1',",
          "",
          "[Added Lines]",
          "53:   '10.0.0.01',",
          "54:   '10.0.0.001',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:   'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'",
          "176: ]",
          "",
          "[Removed Lines]",
          "178: pub_ips.forEach(ip => test(`IP ${ip.toString()} should be public`, t => t.false(is_ip_private(ip))))",
          "180: priv_ips.forEach(ip => test(`IP ${ip.toString()} should be private`, t => t.true(is_ip_private(ip))))",
          "",
          "[Added Lines]",
          "175: pub_ips.forEach(ip_addr => test(`IP ${ip_addr.toString()} should be public`, t => t.false(is_ip_private(ip_addr))))",
          "177: priv_ips.forEach(ip_addr => test(`IP ${ip_addr.toString()} should be private`, t => t.true(is_ip_private(ip_addr))))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "12fe8546d143275cc2550acc2eaa11633533f3bf",
      "candidate_info": {
        "commit_hash": "12fe8546d143275cc2550acc2eaa11633533f3bf",
        "repo": "frenchbread/private-ip",
        "commit_url": "https://github.com/frenchbread/private-ip/commit/12fe8546d143275cc2550acc2eaa11633533f3bf",
        "files": [
          "src/index.js"
        ],
        "message": "chore: rename ipv4 check function",
        "before_after_code_files": [
          "src/index.js||src/index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/index.js||src/index.js"
          ],
          "candidate": [
            "src/index.js||src/index.js"
          ]
        }
      },
      "candidate_diff": {
        "src/index.js||src/index.js": [
          "File: src/index.js -> src/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: const Netmask = require('netmask').Netmask",
          "2: const isIp = require('is-ip')",
          "5:   let privateRanges = [",
          "6:     '0.0.0.0/8',",
          "7:     '10.0.0.0/8',",
          "",
          "[Removed Lines]",
          "4: function netmaskCheck (params) {",
          "",
          "[Added Lines]",
          "4: function ipv4Check (params) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: export default (ip) => {",
          "54:   if (isIp.v4(ip) || ip.startsWith('0')) {",
          "56:   }",
          "57:   return ipv6Check(ip)",
          "58: }",
          "",
          "[Removed Lines]",
          "55:     return netmaskCheck(ip)",
          "",
          "[Added Lines]",
          "55:     return ipv4Check(ip)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f31fc55dc29967df753525f361a88f823e3e2ffc",
      "candidate_info": {
        "commit_hash": "f31fc55dc29967df753525f361a88f823e3e2ffc",
        "repo": "frenchbread/private-ip",
        "commit_url": "https://github.com/frenchbread/private-ip/commit/f31fc55dc29967df753525f361a88f823e3e2ffc",
        "files": [
          "test.js"
        ],
        "message": "add tests",
        "before_after_code_files": [
          "test.js||test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test.js||test.js"
          ],
          "candidate": [
            "test.js||test.js"
          ]
        }
      },
      "candidate_diff": {
        "test.js||test.js": [
          "File: test.js -> test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:   '0.63.255.255',",
          "58:   '10.0.0.0',",
          "59:   '10.0.0.1',",
          "60:   '100.127.255.254',",
          "61:   '100.127.255.255',",
          "62:   '100.64.0.0',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:   '010.000.000.001',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:   '169.254.255.255',",
          "75:   '172.16.0.0',",
          "76:   '172.16.0.1',",
          "77:   '172.31.255.254',",
          "78:   '172.31.255.255',",
          "79:   '192.0.0.0',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:   '172.16.0.001',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae33e8cb97e7ae57fa25e0f1861684c0fb171d5e",
      "candidate_info": {
        "commit_hash": "ae33e8cb97e7ae57fa25e0f1861684c0fb171d5e",
        "repo": "frenchbread/private-ip",
        "commit_url": "https://github.com/frenchbread/private-ip/commit/ae33e8cb97e7ae57fa25e0f1861684c0fb171d5e",
        "files": [
          "package-lock.json",
          "package.json",
          "src/index.js",
          "test.js"
        ],
        "message": "Bug Fixed",
        "before_after_code_files": [
          "src/index.js||src/index.js",
          "test.js||test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/index.js||src/index.js",
            "test.js||test.js"
          ],
          "candidate": [
            "src/index.js||src/index.js",
            "test.js||test.js"
          ]
        }
      },
      "candidate_diff": {
        "src/index.js||src/index.js": [
          "File: src/index.js -> src/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: function ipv4Check (params) {",
          "5:   let privateRanges = [",
          "",
          "[Removed Lines]",
          "1: const Netmask = require('netmask').Netmask",
          "2: const isIp = require('is-ip')",
          "",
          "[Added Lines]",
          "1: const Netmask = require('netmask').Netmask;",
          "2: const ipRegex = require('ip-regex');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:     '255.255.255.255/32'",
          "30:   ].map(b => new Netmask(b))",
          "31:   for (let r of privateRanges) {",
          "33:   }",
          "35: }",
          "37: function ipv6Check (params) {",
          "",
          "[Removed Lines]",
          "32:     if (r.contains(params)) return true",
          "34:   return false",
          "",
          "[Added Lines]",
          "32:     if (r.contains(params)) return true;",
          "34:   if(/(^0\\.)|(^10\\.)|(^100\\.6[4-9]\\.)|(^100\\.[7-9]\\d\\.)|(^100\\.1[0-1]\\d\\.)|(^100\\.12[0-7]\\.)|(^127\\.)|(^169\\.254\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.0\\.0\\.)|(^192\\.0\\.2\\.)|(^192\\.88\\.99\\.)|(^192\\.168\\.)|(^198\\.1[8-9]\\.)|(^198\\.51\\.100\\.)|(^203.0\\.113\\.)|(^225\\.)|(^23[0-9]\\.)|(^24[0-9]\\.)|(^25[0-5]\\.)|(^192\\.[0-9]{0,3}\\.)/.test(params)){",
          "35:     return true;",
          "36:   }",
          "37:   return false;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51: }",
          "53: export default (ip) => {",
          "56:   }",
          "",
          "[Removed Lines]",
          "54:   if (isIp.v4(ip) || ip.startsWith('0')) {",
          "55:     return ipv4Check(ip)",
          "57:   return ipv6Check(ip)",
          "58: }",
          "",
          "[Added Lines]",
          "57:   if(ipRegex.v6().test(ip)){",
          "58:     return ipv6Check(ip);",
          "60:   else if (ipRegex().test(ip) || ip.startsWith('0')){",
          "61:     return ipv4Check(ip);",
          "62:   }else{",
          "63:     return false;",
          "64:   }",
          "65: }",
          "",
          "---------------"
        ],
        "test.js||test.js": [
          "File: test.js -> test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:   '10.255.255.255',",
          "66:   '127.0.0.0',",
          "67:   '127.0.0.1',",
          "68:   '127.255.255.254',",
          "69:   '127.255.255.255',",
          "70:   '169.254.0.0',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:   '127.0.0.01',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d9c66c4ba7b96f42a345d185890ee18f2b41356",
      "candidate_info": {
        "commit_hash": "2d9c66c4ba7b96f42a345d185890ee18f2b41356",
        "repo": "frenchbread/private-ip",
        "commit_url": "https://github.com/frenchbread/private-ip/commit/2d9c66c4ba7b96f42a345d185890ee18f2b41356",
        "files": [
          "src/index.js"
        ],
        "message": "keep Netmask map results around, instead of re-computing each time",
        "before_after_code_files": [
          "src/index.js||src/index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/index.js||src/index.js"
          ],
          "candidate": [
            "src/index.js||src/index.js"
          ]
        }
      },
      "candidate_diff": {
        "src/index.js||src/index.js": [
          "File: src/index.js -> src/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   '255.255.255.255/32'",
          "29: ]",
          "35:     if (r.contains(ip_addr)) return true",
          "36:   }",
          "",
          "[Removed Lines]",
          "31: function ipv4_check (ip_addr) {",
          "32:   const blocks = [...PRIVATE_IP_RANGES].map(ip_range => new Netmask(ip_range))",
          "34:   for (let r of blocks) {",
          "",
          "[Added Lines]",
          "31: const NETMASK_RANGES = PRIVATE_IP_RANGES.map(ip_range => new Netmask(ip_range))",
          "33: function ipv4_check (ip_addr) {",
          "34:   for (let r of NETMASK_RANGES) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}