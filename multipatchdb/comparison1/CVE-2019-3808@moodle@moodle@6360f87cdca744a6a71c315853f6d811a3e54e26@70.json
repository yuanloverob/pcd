{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "340f5c9e77620c259ba1f9aa31487f490eb9521a",
      "candidate_info": {
        "commit_hash": "340f5c9e77620c259ba1f9aa31487f490eb9521a",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/340f5c9e77620c259ba1f9aa31487f490eb9521a",
        "files": [
          "analytics/classes/model.php",
          "analytics/tests/model_test.php",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "Merge branch 'MDL-64996-master-untrainedstaticmodels' of git://github.com/mudrd8mz/moodle",
        "before_after_code_files": [
          "analytics/classes/model.php||analytics/classes/model.php",
          "analytics/tests/model_test.php||analytics/tests/model_test.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "analytics/classes/model.php||analytics/classes/model.php": [
          "File: analytics/classes/model.php -> analytics/classes/model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1627:         $this->purge_insights_cache();",
          "1630:         $this->model->timemodified = time();",
          "1631:         $this->model->usermodified = $USER->id;",
          "1632:         $DB->update_record('analytics_models', $this->model);",
          "",
          "[Removed Lines]",
          "1629:         $this->model->trained = 0;",
          "",
          "[Added Lines]",
          "1629:         if (!$this->is_static()) {",
          "1630:             $this->model->trained = 0;",
          "1631:         }",
          "",
          "---------------"
        ],
        "analytics/tests/model_test.php||analytics/tests/model_test.php": [
          "File: analytics/tests/model_test.php -> analytics/tests/model_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:         $this->assertEmpty($DB->count_records('analytics_predict_samples'));",
          "170:         $this->assertEmpty($DB->count_records('analytics_used_files'));",
          "172:         set_config('enabled_stores', '', 'tool_log');",
          "173:         get_log_manager(true);",
          "174:     }",
          "176:     public function test_model_manager() {",
          "177:         $this->resetAfterTest(true);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:         $this->assertEquals(0, $DB->get_field('analytics_models', 'trained', array('id' => $this->modelobj->id)));",
          "182:     public function test_clear_static() {",
          "183:         global $DB;",
          "184:         $this->resetAfterTest();",
          "186:         $statictarget = new test_static_target_shortname();",
          "187:         $indicators['test_indicator_max'] = \\core_analytics\\manager::get_indicator('test_indicator_max');",
          "188:         $model = \\core_analytics\\model::create($statictarget, $indicators, '\\core\\analytics\\time_splitting\\quarters');",
          "189:         $modelobj = $model->get_model_obj();",
          "192:         $this->assertEquals(1, $DB->get_field('analytics_models', 'trained', array('id' => $modelobj->id)));",
          "194:         $model->clear();",
          "197:         $this->assertEquals(1, $DB->get_field('analytics_models', 'trained', array('id' => $modelobj->id)));",
          "198:     }",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2917:         upgrade_main_savepoint(true, 2019031500.01);",
          "2918:     }",
          "2920:     return true;",
          "2921: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2920:     if ($oldversion < 2019032200.02) {",
          "2922:         $DB->set_field('analytics_models', 'trained', 1, ['target' => '\\core\\analytics\\target\\no_teaching']);",
          "2923:         upgrade_main_savepoint(true, 2019032200.02);",
          "2924:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019032200.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019032200.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5584c48a33c532fee47aee59c6a0aa044eb94732",
      "candidate_info": {
        "commit_hash": "5584c48a33c532fee47aee59c6a0aa044eb94732",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5584c48a33c532fee47aee59c6a0aa044eb94732",
        "files": [
          "lib/db/services.php",
          "message/externallib.php",
          "message/tests/externallib_test.php",
          "version.php"
        ],
        "message": "MDL-63725 core_message: added get_conversation_members web service",
        "before_after_code_files": [
          "lib/db/services.php||lib/db/services.php",
          "message/externallib.php||message/externallib.php",
          "message/tests/externallib_test.php||message/tests/externallib_test.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1045:         'services' => array(MOODLE_OFFICIAL_MOBILE_SERVICE),",
          "1046:         'ajax' => true,",
          "1047:     ),",
          "1048:     'core_message_get_unread_conversations_count' => array(",
          "1049:         'classname' => 'core_message_external',",
          "1050:         'methodname' => 'get_unread_conversations_count',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048:     'core_message_get_conversation_members' => array(",
          "1049:         'classname' => 'core_message_external',",
          "1050:         'methodname' => 'get_conversation_members',",
          "1051:         'classpath' => 'message/externallib.php',",
          "1052:         'description' => 'Retrieve a list of members in a conversation',",
          "1053:         'type' => 'read',",
          "1054:         'services' => array(MOODLE_OFFICIAL_MOBILE_SERVICE),",
          "1055:         'ajax' => true,",
          "1056:     ),",
          "",
          "---------------"
        ],
        "message/externallib.php||message/externallib.php": [
          "File: message/externallib.php -> message/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "667:         );",
          "668:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "675:     public static function get_conversation_members_parameters() {",
          "676:         return new external_function_parameters(",
          "677:             [",
          "678:                 'userid' => new external_value(PARAM_INT, 'The id of the user we are performing this action on behalf of'),",
          "679:                 'conversationid' => new external_value(PARAM_INT, 'The id of the conversation'),",
          "680:                 'includecontactrequests' => new external_value(PARAM_BOOL, 'Do we want to include contact requests?',",
          "681:                     VALUE_DEFAULT, false),",
          "682:                 'limitfrom' => new external_value(PARAM_INT, 'Limit from', VALUE_DEFAULT, 0),",
          "683:                 'limitnum' => new external_value(PARAM_INT, 'Limit number', VALUE_DEFAULT, 0)",
          "684:             ]",
          "685:         );",
          "686:     }",
          "698:     public static function get_conversation_members(int $userid, int $conversationid, bool $includecontactrequests = false,",
          "699:                                                     int $limitfrom = 0, int $limitnum = 0) {",
          "700:         global $CFG, $USER;",
          "703:         if (empty($CFG->messaging)) {",
          "704:             throw new moodle_exception('disabled', 'message');",
          "705:         }",
          "708:         $context = context_system::instance();",
          "709:         self::validate_context($context);",
          "711:         $capability = 'moodle/site:manageallmessaging';",
          "712:         if (($USER->id != $userid) && !has_capability($capability, $context)) {",
          "713:             throw new required_capability_exception($context, $capability, 'nopermissions', '');",
          "714:         }",
          "716:         $params = [",
          "717:             'userid' => $userid,",
          "718:             'conversationid' => $conversationid,",
          "719:             'includecontactrequests' => $includecontactrequests,",
          "720:             'limitfrom' => $limitfrom,",
          "721:             'limitnum' => $limitnum",
          "722:         ];",
          "723:         self::validate_parameters(self::get_conversation_members_parameters(), $params);",
          "725:         return \\core_message\\api::get_conversation_members($userid, $conversationid, $includecontactrequests,",
          "726:             $limitfrom, $limitnum);",
          "727:     }",
          "734:     public static function get_conversation_members_returns() {",
          "735:         return new external_multiple_structure(",
          "736:             self::get_conversation_member_structure(true)",
          "737:         );",
          "738:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "878:         return new external_single_structure(",
          "889:         );",
          "890:     }",
          "",
          "[Removed Lines]",
          "877:     private static function get_conversation_member_structure() {",
          "879:             array(",
          "880:                 'id' => new external_value(PARAM_INT, 'The user id'),",
          "881:                 'fullname' => new external_value(PARAM_NOTAGS, 'The user\\'s name'),",
          "882:                 'profileimageurl' => new external_value(PARAM_URL, 'User picture URL'),",
          "883:                 'profileimageurlsmall' => new external_value(PARAM_URL, 'Small user picture URL'),",
          "884:                 'isonline' => new external_value(PARAM_BOOL, 'The user\\'s online status'),",
          "885:                 'showonlinestatus' => new external_value(PARAM_BOOL, 'Show the user\\'s online status?'),",
          "886:                 'isblocked' => new external_value(PARAM_BOOL, 'If the user has been blocked'),",
          "887:                 'iscontact' => new external_value(PARAM_BOOL, 'Is the user a contact?')",
          "888:             )",
          "",
          "[Added Lines]",
          "948:     private static function get_conversation_member_structure(bool $includecontactrequests = false) {",
          "949:         $result = [",
          "950:             'id' => new external_value(PARAM_INT, 'The user id'),",
          "951:             'fullname' => new external_value(PARAM_NOTAGS, 'The user\\'s name'),",
          "952:             'profileimageurl' => new external_value(PARAM_URL, 'User picture URL'),",
          "953:             'profileimageurlsmall' => new external_value(PARAM_URL, 'Small user picture URL'),",
          "954:             'isonline' => new external_value(PARAM_BOOL, 'The user\\'s online status'),",
          "955:             'showonlinestatus' => new external_value(PARAM_BOOL, 'Show the user\\'s online status?'),",
          "956:             'isblocked' => new external_value(PARAM_BOOL, 'If the user has been blocked'),",
          "957:             'iscontact' => new external_value(PARAM_BOOL, 'Is the user a contact?'),",
          "958:         ];",
          "960:         if ($includecontactrequests) {",
          "961:             $result['contactrequests'] = new external_multiple_structure(",
          "962:                 new external_single_structure(",
          "963:                     [",
          "964:                         'id' => new external_value(PARAM_INT, 'The id of the message'),",
          "965:                         'userid' => new external_value(PARAM_INT, 'The id of the user who sent the message'),",
          "966:                         'requesteduserid' => new external_value(PARAM_RAW, 'The text of the message'),",
          "967:                         'timecreated' => new external_value(PARAM_INT, 'The timecreated timestamp for the message'),",
          "968:                     ]",
          "969:                 ), 'The contact requests', VALUE_OPTIONAL",
          "970:             );",
          "971:         }",
          "974:             $result",
          "",
          "---------------"
        ],
        "message/tests/externallib_test.php||message/tests/externallib_test.php": [
          "File: message/tests/externallib_test.php -> message/tests/externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4339:         $this->expectException(\\moodle_exception::class);",
          "4340:         $result = core_message_external::unset_favourite_conversations($user1->id, [0]);",
          "4341:     }",
          "4342: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4346:     public function test_get_conversation_members_messaging_disabled() {",
          "4347:         global $CFG;",
          "4349:         $this->resetAfterTest();",
          "4351:         $CFG->messaging = 0;",
          "4353:         $this->expectException('moodle_exception');",
          "4354:         core_message_external::get_conversation_members(1, 2);",
          "4355:     }",
          "4360:     public function test_get_conversation_members_wrong_user() {",
          "4361:         $this->resetAfterTest();",
          "4363:         $user1 = self::getDataGenerator()->create_user();",
          "4364:         $user2 = self::getDataGenerator()->create_user();",
          "4366:         $this->setUser($user2);",
          "4368:         $this->expectException('moodle_exception');",
          "4369:         core_message_external::get_conversation_members($user1->id, 2);",
          "4370:     }",
          "4375:     public function test_get_conversation_members() {",
          "4376:         $this->resetAfterTest();",
          "4378:         $lastaccess = new stdClass();",
          "4379:         $lastaccess->lastaccess = time();",
          "4381:         $user1 = self::getDataGenerator()->create_user($lastaccess);",
          "4382:         $user2 = self::getDataGenerator()->create_user();",
          "4383:         $user3 = self::getDataGenerator()->create_user();",
          "4386:         $user4 = self::getDataGenerator()->create_user();",
          "4389:         \\core_message\\api::create_contact_request($user1->id, $user3->id);",
          "4390:         \\core_message\\api::create_contact_request($user1->id, $user4->id);",
          "4391:         \\core_message\\api::create_contact_request($user2->id, $user3->id);",
          "4394:         \\core_message\\api::add_contact($user1->id, $user2->id);",
          "4397:         \\core_message\\api::block_user($user1->id, $user3->id);",
          "4399:         $conversation = \\core_message\\api::create_conversation(",
          "4400:             \\core_message\\api::MESSAGE_CONVERSATION_TYPE_GROUP,",
          "4401:             [",
          "4402:                 $user1->id,",
          "4403:                 $user2->id,",
          "4404:                 $user3->id",
          "4405:             ]",
          "4406:         );",
          "4407:         $conversationid = $conversation->id;",
          "4409:         $this->setAdminUser();",
          "4411:         $members = core_message_external::get_conversation_members($user1->id, $conversationid, false);",
          "4412:         external_api::clean_returnvalue(core_message_external::get_conversation_members_returns(), $members);",
          "4415:         ksort($members);",
          "4416:         $this->assertCount(3, $members);",
          "4417:         $member1 = array_shift($members);",
          "4418:         $member2 = array_shift($members);",
          "4419:         $member3 = array_shift($members);",
          "4422:         $this->assertEquals($user1->id, $member1->id);",
          "4423:         $this->assertEquals(fullname($user1), $member1->fullname);",
          "4424:         $this->assertEquals(true, $member1->isonline);",
          "4425:         $this->assertEquals(true, $member1->showonlinestatus);",
          "4426:         $this->assertEquals(false, $member1->iscontact);",
          "4427:         $this->assertEquals(false, $member1->isblocked);",
          "4428:         $this->assertObjectNotHasAttribute('contactrequests', $member1);",
          "4430:         $this->assertEquals($user2->id, $member2->id);",
          "4431:         $this->assertEquals(fullname($user2), $member2->fullname);",
          "4432:         $this->assertEquals(false, $member2->isonline);",
          "4433:         $this->assertEquals(true, $member2->showonlinestatus);",
          "4434:         $this->assertEquals(true, $member2->iscontact);",
          "4435:         $this->assertEquals(false, $member2->isblocked);",
          "4436:         $this->assertObjectNotHasAttribute('contactrequests', $member2);",
          "4438:         $this->assertEquals($user3->id, $member3->id);",
          "4439:         $this->assertEquals(fullname($user3), $member3->fullname);",
          "4440:         $this->assertEquals(false, $member3->isonline);",
          "4441:         $this->assertEquals(true, $member3->showonlinestatus);",
          "4442:         $this->assertEquals(false, $member3->iscontact);",
          "4443:         $this->assertEquals(true, $member3->isblocked);",
          "4444:         $this->assertObjectNotHasAttribute('contactrequests', $member3);",
          "4445:     }",
          "4450:     public function test_get_conversation_members_with_contact_requests() {",
          "4451:         $this->resetAfterTest();",
          "4453:         $lastaccess = new stdClass();",
          "4454:         $lastaccess->lastaccess = time();",
          "4456:         $user1 = self::getDataGenerator()->create_user($lastaccess);",
          "4457:         $user2 = self::getDataGenerator()->create_user();",
          "4458:         $user3 = self::getDataGenerator()->create_user();",
          "4461:         $user4 = self::getDataGenerator()->create_user();",
          "4464:         \\core_message\\api::create_contact_request($user1->id, $user2->id);",
          "4465:         \\core_message\\api::create_contact_request($user1->id, $user3->id);",
          "4466:         \\core_message\\api::create_contact_request($user1->id, $user4->id);",
          "4467:         \\core_message\\api::create_contact_request($user2->id, $user3->id);",
          "4470:         \\core_message\\api::add_contact($user1->id, $user2->id);",
          "4472:         \\core_message\\api::block_user($user1->id, $user3->id);",
          "4474:         $conversation = \\core_message\\api::create_conversation(",
          "4475:             \\core_message\\api::MESSAGE_CONVERSATION_TYPE_GROUP,",
          "4476:             [",
          "4477:                 $user1->id,",
          "4478:                 $user2->id,",
          "4479:                 $user3->id",
          "4480:             ]",
          "4481:         );",
          "4482:         $conversationid = $conversation->id;",
          "4484:         $this->setAdminUser();",
          "4486:         $members = core_message_external::get_conversation_members($user1->id, $conversationid, true);",
          "4487:         external_api::clean_returnvalue(core_message_external::get_conversation_members_returns(), $members);",
          "4490:         ksort($members);",
          "4491:         $this->assertCount(3, $members);",
          "4492:         $member1 = array_shift($members);",
          "4493:         $member2 = array_shift($members);",
          "4494:         $member3 = array_shift($members);",
          "4497:         $this->assertEquals($user1->id, $member1->id);",
          "4498:         $this->assertEquals(fullname($user1), $member1->fullname);",
          "4499:         $this->assertEquals(true, $member1->isonline);",
          "4500:         $this->assertEquals(true, $member1->showonlinestatus);",
          "4501:         $this->assertEquals(false, $member1->iscontact);",
          "4502:         $this->assertEquals(false, $member1->isblocked);",
          "4503:         $this->assertCount(3, $member1->contactrequests);",
          "4505:         $this->assertEquals($user2->id, $member2->id);",
          "4506:         $this->assertEquals(fullname($user2), $member2->fullname);",
          "4507:         $this->assertEquals(false, $member2->isonline);",
          "4508:         $this->assertEquals(true, $member2->showonlinestatus);",
          "4509:         $this->assertEquals(true, $member2->iscontact);",
          "4510:         $this->assertEquals(false, $member2->isblocked);",
          "4511:         $this->assertCount(2, $member2->contactrequests);",
          "4513:         $this->assertEquals($user3->id, $member3->id);",
          "4514:         $this->assertEquals(fullname($user3), $member3->fullname);",
          "4515:         $this->assertEquals(false, $member3->isonline);",
          "4516:         $this->assertEquals(true, $member3->showonlinestatus);",
          "4517:         $this->assertEquals(false, $member3->iscontact);",
          "4518:         $this->assertEquals(true, $member3->isblocked);",
          "4519:         $this->assertCount(2, $member3->contactrequests);",
          "4522:         $request1 = array_shift($member1->contactrequests);",
          "4523:         $request2 = array_shift($member1->contactrequests);",
          "4524:         $request3 = array_shift($member1->contactrequests);",
          "4526:         $this->assertEquals($user1->id, $request1->userid);",
          "4527:         $this->assertEquals($user2->id, $request1->requesteduserid);",
          "4529:         $this->assertEquals($user1->id, $request2->userid);",
          "4530:         $this->assertEquals($user3->id, $request2->requesteduserid);",
          "4532:         $this->assertEquals($user1->id, $request3->userid);",
          "4533:         $this->assertEquals($user4->id, $request3->requesteduserid);",
          "4535:         $request1 = array_shift($member2->contactrequests);",
          "4536:         $request2 = array_shift($member2->contactrequests);",
          "4538:         $this->assertEquals($user1->id, $request1->userid);",
          "4539:         $this->assertEquals($user2->id, $request1->requesteduserid);",
          "4541:         $this->assertEquals($user2->id, $request2->userid);",
          "4542:         $this->assertEquals($user3->id, $request2->requesteduserid);",
          "4544:         $request1 = array_shift($member3->contactrequests);",
          "4545:         $request2 = array_shift($member3->contactrequests);",
          "4547:         $this->assertEquals($user1->id, $request1->userid);",
          "4548:         $this->assertEquals($user3->id, $request1->requesteduserid);",
          "4550:         $this->assertEquals($user2->id, $request2->userid);",
          "4551:         $this->assertEquals($user3->id, $request2->requesteduserid);",
          "4552:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018103100.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018110100.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "666196271f2a83c6db22774fc75b2e261ee27994",
      "candidate_info": {
        "commit_hash": "666196271f2a83c6db22774fc75b2e261ee27994",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/666196271f2a83c6db22774fc75b2e261ee27994",
        "files": [
          "cache/stores/memcache/addinstanceform.php",
          "cache/stores/memcache/classes/privacy/provider.php",
          "cache/stores/memcache/lang/en/cachestore_memcache.php",
          "cache/stores/memcache/lib.php",
          "cache/stores/memcache/settings.php",
          "cache/stores/memcache/tests/memcache_test.php",
          "cache/stores/memcache/version.php",
          "cache/upgrade.txt",
          "lib/classes/plugin_manager.php",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-60630 cachestore: Remove memcache plugin",
        "before_after_code_files": [
          "cache/stores/memcache/addinstanceform.php||cache/stores/memcache/addinstanceform.php",
          "cache/stores/memcache/classes/privacy/provider.php||cache/stores/memcache/classes/privacy/provider.php",
          "cache/stores/memcache/lang/en/cachestore_memcache.php||cache/stores/memcache/lang/en/cachestore_memcache.php",
          "cache/stores/memcache/lib.php||cache/stores/memcache/lib.php",
          "cache/stores/memcache/settings.php||cache/stores/memcache/settings.php",
          "cache/stores/memcache/tests/memcache_test.php||cache/stores/memcache/tests/memcache_test.php",
          "cache/stores/memcache/version.php||cache/stores/memcache/version.php",
          "lib/classes/plugin_manager.php||lib/classes/plugin_manager.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "cache/stores/memcache/addinstanceform.php||cache/stores/memcache/addinstanceform.php": [
          "File: cache/stores/memcache/addinstanceform.php -> cache/stores/memcache/addinstanceform.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cache/stores/memcache/classes/privacy/provider.php||cache/stores/memcache/classes/privacy/provider.php": [
          "File: cache/stores/memcache/classes/privacy/provider.php -> cache/stores/memcache/classes/privacy/provider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cache/stores/memcache/lang/en/cachestore_memcache.php||cache/stores/memcache/lang/en/cachestore_memcache.php": [
          "File: cache/stores/memcache/lang/en/cachestore_memcache.php -> cache/stores/memcache/lang/en/cachestore_memcache.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cache/stores/memcache/lib.php||cache/stores/memcache/lib.php": [
          "File: cache/stores/memcache/lib.php -> cache/stores/memcache/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cache/stores/memcache/settings.php||cache/stores/memcache/settings.php": [
          "File: cache/stores/memcache/settings.php -> cache/stores/memcache/settings.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cache/stores/memcache/tests/memcache_test.php||cache/stores/memcache/tests/memcache_test.php": [
          "File: cache/stores/memcache/tests/memcache_test.php -> cache/stores/memcache/tests/memcache_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cache/stores/memcache/version.php||cache/stores/memcache/version.php": [
          "File: cache/stores/memcache/version.php -> cache/stores/memcache/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/classes/plugin_manager.php||lib/classes/plugin_manager.php": [
          "File: lib/classes/plugin_manager.php -> lib/classes/plugin_manager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1648:             'qformat' => array('blackboard', 'learnwise'),",
          "1649:             'auth' => array('radius', 'fc', 'nntp', 'pam', 'pop3', 'imap'),",
          "1650:             'block' => array('course_overview', 'messages'),",
          "1651:             'enrol' => array('authorize'),",
          "1652:             'report' => array('search'),",
          "1653:             'repository' => array('alfresco'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1651:             'cachestore' => array('memcache'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1732:             ),",
          "1734:             'cachestore' => array(",
          "1736:             ),",
          "1738:             'calendartype' => array(",
          "",
          "[Removed Lines]",
          "1735:                 'file', 'memcache', 'memcached', 'mongodb', 'session', 'static', 'apcu', 'redis'",
          "",
          "[Added Lines]",
          "1736:                 'file', 'memcached', 'mongodb', 'session', 'static', 'apcu', 'redis'",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2328:         upgrade_main_savepoint(true, 2018083100.01);",
          "2329:     }",
          "2331:     return true;",
          "2332: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2331:     if ($oldversion < 2018091200.00) {",
          "2332:         if (!file_exists($CFG->dirroot.'/cache/stores/memcache/settings.php')) {",
          "2333:             unset_all_config_for_plugin('cachestore_memcache');",
          "2334:         }",
          "2336:         upgrade_main_savepoint(true, 2018091200.00);",
          "2337:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018090700.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018091200.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f0a5cf2f57e3037b9f1c0650d631c98b856450b",
      "candidate_info": {
        "commit_hash": "9f0a5cf2f57e3037b9f1c0650d631c98b856450b",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/9f0a5cf2f57e3037b9f1c0650d631c98b856450b",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.2+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052002.07;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191008)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052002.08;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191012)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c3efe48f885797433397eca56f9a0239b6fe547",
      "candidate_info": {
        "commit_hash": "1c3efe48f885797433397eca56f9a0239b6fe547",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1c3efe48f885797433397eca56f9a0239b6fe547",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.8dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '38';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019090500.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.8dev (Build: 20190905)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019091300.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.8dev (Build: 20190913)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    }
  ]
}