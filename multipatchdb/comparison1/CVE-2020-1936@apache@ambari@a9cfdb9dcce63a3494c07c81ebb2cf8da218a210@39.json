{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "009bd76df27cf411d06940e6618dedc5a9e14866",
      "candidate_info": {
        "commit_hash": "009bd76df27cf411d06940e6618dedc5a9e14866",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/009bd76df27cf411d06940e6618dedc5a9e14866",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup.java"
        ],
        "message": "[AMBARI-25197] NullPointerException if there is no proper HDP/HDF repo version folder\n\n* [AMBARI-25197] NullPointerException if there is no proper HDP/HDF repo version folder (apappu)\n\n* [AMBARI-25197] NullPointerException if there is no proper HDP/HDF repo version folder (apappu)\n\n* [AMBARI-25197] NullPointerException if there is no proper HDP/HDF repo version folder (apappu)\n\n* [AMBARI-25197] NullPointerException if there is no proper HDP/HDF repo version folder (apappu)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup.java||ambari-server/src/main/java/org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup.java||ambari-server/src/main/java/org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup.java -> ambari-server/src/main/java/org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:           StackId stackId = repositoryVersion.getStackId();",
          "90:           StackInfo stack = stackManager.getStack(stackId.getStackName(), stackId.getStackVersion());",
          "94:           }",
          "95:         }",
          "96:       }",
          "",
          "[Removed Lines]",
          "92:           if (updateRepoVersion(stack, repositoryVersion)) {",
          "93:             repositoryVersionDao.merge(repositoryVersion);",
          "",
          "[Added Lines]",
          "92:           if (stack !=null) {",
          "93:             if (updateRepoVersion(stack, repositoryVersion)) {",
          "94:               repositoryVersionDao.merge(repositoryVersion);",
          "95:             }",
          "96:           } else {",
          "97:             throw new AmbariException(String.format(\"Stack %s %s was not found on the file system. In the event that it was removed, \" +",
          "98:               \"please ensure that it exists before starting Ambari Server.\",  stackId.getStackName(), stackId.getStackVersion()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce50c1a72afbb50be29613305ebe3c3dfdc2ebe1",
      "candidate_info": {
        "commit_hash": "ce50c1a72afbb50be29613305ebe3c3dfdc2ebe1",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/ce50c1a72afbb50be29613305ebe3c3dfdc2ebe1",
        "files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js"
        ],
        "message": "AMBARI-24246. Ambari does not pick the existing hive database from the jdbc url set",
        "before_after_code_files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js": [
          "File: ambari-web/app/mixins/common/configs/config_recommendation_parser.js -> ambari-web/app/mixins/common/configs/config_recommendation_parser.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:           allowConfigUpdate = false;",
          "171:         }",
          "172:       }",
          "174:         allowConfigUpdate = false;",
          "175:       }",
          "176:       if (allowConfigUpdate) {",
          "",
          "[Removed Lines]",
          "173:       if (prevRecommeneded !== config.get('value')) {",
          "",
          "[Added Lines]",
          "173:       if (prevRecommeneded !== value) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e95d537b5339ea871d3860ddaddf9ff485c80f08",
      "candidate_info": {
        "commit_hash": "e95d537b5339ea871d3860ddaddf9ff485c80f08",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/e95d537b5339ea871d3860ddaddf9ff485c80f08",
        "files": [
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py"
        ],
        "message": "AMBARI-24409. Infra Solr migration: Restore collection fails after EU on Custom Users + WE cluster. Error - Permission denied: u'/tmp/ranger/restore_core_pairs.json' (#1975)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py -> ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: from resource_management.core.shell import call",
          "28: from resource_management.core.logger import Logger",
          "30: from resource_management.libraries.functions.default import default",
          "31: from resource_management.libraries.functions.format import format",
          "32: from resource_management.libraries.resources.hdfs_resource import HdfsResource",
          "",
          "[Removed Lines]",
          "29: from resource_management.core.resources.system import Execute",
          "",
          "[Added Lines]",
          "29: from resource_management.core.resources.system import Execute, File",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268: def write_core_file(core, core_data):",
          "269:   core_json_location = format(\"{index_location}/{core}.json\")",
          "273: def create_core_pairs(original_cores, new_cores):",
          "274:   \"\"\"",
          "",
          "[Removed Lines]",
          "270:   with open(core_json_location, 'w') as outfile:",
          "271:     json.dump(core_data, outfile)",
          "",
          "[Added Lines]",
          "270:   File(core_json_location, content=json.dumps(core_data))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "286:       value['target_core']=new_cores[index][0]",
          "287:       value['target_host']=new_cores[index][1]",
          "288:       core_pairs_data.append(value)",
          "291:     return core_pairs_data",
          "293: def sort_core_host_pairs(host_core_map):",
          "",
          "[Removed Lines]",
          "289:     with open(format(\"{index_location}/restore_core_pairs.json\"), 'w') as outfile:",
          "290:       json.dump(core_pairs_data, outfile)",
          "",
          "[Added Lines]",
          "288:     File(format(\"{index_location}/restore_core_pairs.json\"), content=json.dumps(core_pairs_data))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79177a763d3f5798fc709fd466a16aa134dddeea",
      "candidate_info": {
        "commit_hash": "79177a763d3f5798fc709fd466a16aa134dddeea",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/79177a763d3f5798fc709fd466a16aa134dddeea",
        "files": [
          "ambari-web/app/controllers/main/host/details.js"
        ],
        "message": "[AMBARI-25202] recoverHost operation fails if public hostname is different from actual hostname (apappu)",
        "before_after_code_files": [
          "ambari-web/app/controllers/main/host/details.js||ambari-web/app/controllers/main/host/details.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/controllers/main/host/details.js||ambari-web/app/controllers/main/host/details.js": [
          "File: ambari-web/app/controllers/main/host/details.js -> ambari-web/app/controllers/main/host/details.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3099:   recoverHost: function() {",
          "3100:     var components = this.get('content.hostComponents');",
          "3102:     var self = this;",
          "3103:     var batches = [",
          "3104:       {",
          "",
          "[Removed Lines]",
          "3101:     var hostName = this.get('content.publicHostName');",
          "",
          "[Added Lines]",
          "3101:     var hostName = this.get('content.hostName');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c931dcc2b068fe1f9989d398bd43d2db5da3cace",
      "candidate_info": {
        "commit_hash": "c931dcc2b068fe1f9989d398bd43d2db5da3cace",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c931dcc2b068fe1f9989d398bd43d2db5da3cace",
        "files": [
          "ambari-metrics/ambari-metrics-common/pom.xml",
          "ambari-metrics/ambari-metrics-flume-sink/pom.xml",
          "ambari-metrics/ambari-metrics-host-aggregator/pom.xml",
          "ambari-metrics/ambari-metrics-timelineservice/pom.xml",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/net/RestMetricsSender.java"
        ],
        "message": "[AMBARI-24771] Fix CVE issues for Ambari Metrics (2.7.3) (#2454)",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/net/RestMetricsSender.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/net/RestMetricsSender.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/net/RestMetricsSender.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/net/RestMetricsSender.java": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/net/RestMetricsSender.java -> ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/loadsimulator/net/RestMetricsSender.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:   public String pushMetrics(String payload) {",
          "57:     String responseString = \"\";",
          "58:     UrlService svc = null;",
          "61:     try {",
          "62:       LOG.info(\"server: {}\", collectorServiceAddress);",
          "",
          "[Removed Lines]",
          "59:     Stopwatch timer = new Stopwatch().start();",
          "",
          "[Added Lines]",
          "59:     Stopwatch timer = Stopwatch.createStarted();",
          "",
          "---------------"
        ]
      }
    }
  ]
}