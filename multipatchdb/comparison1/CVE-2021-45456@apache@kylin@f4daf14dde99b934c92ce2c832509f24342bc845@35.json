{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7431240a7a8d868cbceba25cfb5b0d66c428cb66",
      "candidate_info": {
        "commit_hash": "7431240a7a8d868cbceba25cfb5b0d66c428cb66",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/7431240a7a8d868cbceba25cfb5b0d66c428cb66",
        "files": [
          "metrics-reporter-hive/src/main/java/org/apache/kylin/metrics/lib/impl/hive/HiveProducer.java"
        ],
        "message": "KYLIN-4496: Metric data missing\n\n(cherry picked from commit 278aababa11fff222327ec6b6f73e659b147b8d7)",
        "before_after_code_files": [
          "metrics-reporter-hive/src/main/java/org/apache/kylin/metrics/lib/impl/hive/HiveProducer.java||metrics-reporter-hive/src/main/java/org/apache/kylin/metrics/lib/impl/hive/HiveProducer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "metrics-reporter-hive/src/main/java/org/apache/kylin/metrics/lib/impl/hive/HiveProducer.java||metrics-reporter-hive/src/main/java/org/apache/kylin/metrics/lib/impl/hive/HiveProducer.java": [
          "File: metrics-reporter-hive/src/main/java/org/apache/kylin/metrics/lib/impl/hive/HiveProducer.java -> metrics-reporter-hive/src/main/java/org/apache/kylin/metrics/lib/impl/hive/HiveProducer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:     public void close() {",
          "116:         tableFieldSchemaCache.cleanUp();",
          "117:     }",
          "119:     public void send(final Record record) throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:         closeFout();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57687830f6455d9e15a5801994213b663b93849c",
      "candidate_info": {
        "commit_hash": "57687830f6455d9e15a5801994213b663b93849c",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/57687830f6455d9e15a5801994213b663b93849c",
        "files": [
          "build/bin/check-env.sh"
        ],
        "message": "KYLIN-3698 check-env.sh should print more details about checking items\n\n(cherry picked from commit 3774cae5efe318c20bbe2f80c20c74c5d0532b49)",
        "before_after_code_files": [
          "build/bin/check-env.sh||build/bin/check-env.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build/bin/check-env.sh||build/bin/check-env.sh": [
          "File: build/bin/check-env.sh -> build/bin/check-env.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: ## ${dir} assigned to $KYLIN_HOME/bin in header.sh",
          "23: source ${dir}/find-hadoop-conf-dir.sh",
          "25: if [ -z \"${kylin_hadoop_conf_dir}\" ]; then",
          "26:     hadoop_conf_param=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: if [[ $? == 0 ]]; then",
          "25:     echo \"...................................................[`setColor 32 PASS`]\"",
          "26: else",
          "27:     echo \"...................................................[`setColor 31 FAIL`]\"",
          "28: fi",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: metadataUrl=`${dir}/get-properties.sh kylin.metadata.url`",
          "39: if [[ \"${metadataUrl##*@}\" == \"hbase\" ]]",
          "40: then",
          "41:     if [ -z \"$(command -v hbase version)\" ]",
          "42:     then",
          "43:         quit \"Please make sure the user has the privilege to run hbase shell\"",
          "44:     fi",
          "45: fi",
          "47: if [ -z \"$(command -v hive --version)\" ]",
          "48: then",
          "49:     quit \"Please make sure the user has the privilege to run hive shell\"",
          "50: fi",
          "52: if [ -z \"$(command -v hadoop version)\" ]",
          "53: then",
          "54:     quit \"Please make sure the user has the privilege to run hadoop shell\"",
          "55: fi",
          "57: WORKING_DIR=`bash $KYLIN_HOME/bin/get-properties.sh kylin.env.hdfs-working-dir`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     echo \"Checking HBase\"",
          "49:         echo \"...................................................[`setColor 31 FAIL`]\"",
          "51:     else",
          "52:         echo \"...................................................[`setColor 32 PASS`]\"",
          "56: echo \"Checking hive\"",
          "59:     echo \"...................................................[`setColor 31 FAIL`]\"",
          "61: else",
          "62:     echo \"...................................................[`setColor 32 PASS`]\"",
          "65: echo \"Checking hadoop shell\"",
          "68:     echo \"...................................................[`setColor 31 FAIL`]\"",
          "70: else",
          "71:     echo \"...................................................[`setColor 32 PASS`]\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:     quit \"Please set kylin.env.hdfs-working-dir in kylin.properties\"",
          "61: fi",
          "63: hadoop ${hadoop_conf_param} fs -mkdir -p $WORKING_DIR",
          "64: if [ $? != 0 ]",
          "65: then",
          "66:     quit \"Failed to create $WORKING_DIR. Please make sure the user has right to access $WORKING_DIR\"",
          "67: fi",
          "69: SPARK_EVENTLOG_DIR=`bash $KYLIN_HOME/bin/get-properties.sh kylin.engine.spark-conf.spark.eventLog.dir`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: echo \"Checking hdfs working dir\"",
          "84:     echo \"...................................................[`setColor 31 FAIL`]\"",
          "86: else",
          "87:     echo \"...................................................[`setColor 32 PASS`]\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "89: ${KYLIN_HOME}/bin/check-port-availability.sh ||  exit 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112: echo \"\"",
          "113: echo `setColor 33 \"Checking environment finished successfully. To check again, run 'bin/check-env.sh' manually.\"`",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "133bfb8020ebc50fe712f0745e961c5dea51f072",
      "candidate_info": {
        "commit_hash": "133bfb8020ebc50fe712f0745e961c5dea51f072",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/133bfb8020ebc50fe712f0745e961c5dea51f072",
        "files": [
          "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java",
          "server/src/test/resources/hadoop-metrics2-kylin.properties"
        ],
        "message": "KYLIN-5029 set metrics refresh interval to a smaller value to make sure tests always passed   (#1683)\n\n* KYLIN-5029 set metrics refresh interval to a smaller value to make sure tests always passed\n\n* refine",
        "before_after_code_files": [
          "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java||server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java",
          "server/src/test/resources/hadoop-metrics2-kylin.properties||server/src/test/resources/hadoop-metrics2-kylin.properties"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java||server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java": [
          "File: server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java -> server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:         QueryMetricsFacade.updateMetrics(\"\", sqlRequest, sqlResponse);",
          "86:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QueryCount\"));",
          "87:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QuerySuccessCount\"));",
          "",
          "[Removed Lines]",
          "84:         Thread.sleep(10000);",
          "",
          "[Added Lines]",
          "84:         Thread.sleep(2000);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:         QueryMetricsFacade.updateMetrics(\"\", sqlRequest, sqlResponse2);",
          "115:         Assert.assertEquals(2L, mBeanServer.getAttribute(objectName, \"QueryCount\"));",
          "116:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QuerySuccessCount\"));",
          "",
          "[Removed Lines]",
          "113:         Thread.sleep(10000);",
          "",
          "[Added Lines]",
          "113:         Thread.sleep(2000);",
          "",
          "---------------"
        ],
        "server/src/test/resources/hadoop-metrics2-kylin.properties||server/src/test/resources/hadoop-metrics2-kylin.properties": [
          "File: server/src/test/resources/hadoop-metrics2-kylin.properties -> server/src/test/resources/hadoop-metrics2-kylin.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #",
          "2: # Licensed to the Apache Software Foundation (ASF) under one or more",
          "3: # contributor license agreements.  See the NOTICE file distributed with",
          "4: # this work for additional information regarding copyright ownership.",
          "5: # The ASF licenses this file to You under the Apache License, Version 2.0",
          "6: # (the \"License\"); you may not use this file except in compliance with",
          "7: # the License.  You may obtain a copy of the License at",
          "8: #",
          "9: #    http://www.apache.org/licenses/LICENSE-2.0",
          "10: #",
          "11: # Unless required by applicable law or agreed to in writing, software",
          "12: # distributed under the License is distributed on an \"AS IS\" BASIS,",
          "13: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "14: # See the License for the specific language governing permissions and",
          "15: # limitations under the License.",
          "16: #",
          "18: kylin.period=1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "23365b6cae8939e6bbefb328d1c80d4236afda34",
      "candidate_info": {
        "commit_hash": "23365b6cae8939e6bbefb328d1c80d4236afda34",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/23365b6cae8939e6bbefb328d1c80d4236afda34",
        "files": [
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeTableEncoder.scala"
        ],
        "message": "KYLIN-5011 HotFix for scatter skew data in dict-encoding step",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeTableEncoder.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeTableEncoder.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeTableEncoder.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeTableEncoder.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeTableEncoder.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeTableEncoder.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     val bucketThreshold = seg.kylinconf.getGlobalDictV2ThresholdBucketSize",
          "54:     val minBucketSize: Long = sourceCnt / bucketThreshold",
          "57:     cols.asScala.foreach(",
          "58:       ref => {",
          "59:         val globalDict = new NGlobalDictionary(seg.project, ref.tableAliasName, ref.columnName, seg.kylinconf.getHdfsWorkingDirectory)",
          "",
          "[Removed Lines]",
          "56:     var repartitionSizeAfterEncode = 0;",
          "",
          "[Added Lines]",
          "56:     var repartitionSizeAfterEncode = 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:         var encodeCol = dict_encode(col(encodeColRef).cast(StringType), lit(dictParams), lit(bucketSize).cast(StringType)).as(aliasName)",
          "73:         val columns = partitionedDs.schema.map(ty => col(ty.name))",
          "75:         if (seg.kylinconf.detectDataSkewInDictEncodingEnabled()) {",
          "77:           val castEncodeColRef = col(encodeColRef).cast(StringType)",
          "78:           val sampleData = ds.select(castEncodeColRef).sample(seg.kylinconf.sampleRateInEncodingSkewDetection()).cache()",
          "80:           val skewDictStorage = new Path(seg.kylinconf.getJobTmpDir(seg.project) +",
          "81:             \"/\" + jobId + \"/skewed_data/\" + ref.identity)",
          "82:           val skewedDict = new Object2LongOpenHashMap[String]()",
          "",
          "[Removed Lines]",
          "79:           val totalCount = sampleData.count();",
          "",
          "[Added Lines]",
          "75:         var scatterSkewedData = false",
          "80:           val totalCount = sampleData.count()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:           if (skewedDict.size() > 0) {",
          "93:             val kryo = new Kryo()",
          "94:             val fs = skewDictStorage.getFileSystem(new Configuration())",
          "95:             if (fs.exists(skewDictStorage)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:             scatterSkewedData = true",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "112:               .repartition(enlargedBucketSize, col(\"scatter_skew_data_\" + ref.columnName))",
          "113:               .select(columns ++ Seq(encodeCol): _*)",
          "114:           }",
          "116:           partitionedDs = partitionedDs",
          "117:             .repartition(enlargedBucketSize, col(encodeColRef).cast(StringType))",
          "118:             .select(columns ++ Seq(encodeCol): _*)",
          "",
          "[Removed Lines]",
          "115:         } else {",
          "",
          "[Added Lines]",
          "117:         }",
          "118:         if (!scatterSkewedData) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b10dd933954076d74caf762157b5971bc76854db",
      "candidate_info": {
        "commit_hash": "b10dd933954076d74caf762157b5971bc76854db",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/b10dd933954076d74caf762157b5971bc76854db",
        "files": [
          "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics2Facade.java",
          "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java"
        ],
        "message": "KYLIN-4929 skip update metrics for queries that hit no realization (#1605)\n\n* skip update metrics for queries that hit no realization\n\n* use string empty check\n\n(cherry picked from commit 448d38a103bfad2bffb94cfb21fa20a99d6d9ad3)",
        "before_after_code_files": [
          "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics2Facade.java||server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics2Facade.java",
          "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java||server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics2Facade.java||server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics2Facade.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics2Facade.java -> server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics2Facade.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import javax.annotation.concurrent.ThreadSafe;",
          "28: import org.apache.kylin.common.KylinConfig;",
          "29: import org.apache.kylin.common.metrics.common.Metrics;",
          "30: import org.apache.kylin.common.metrics.common.MetricsConstant;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.commons.lang3.StringUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         }",
          "59:         String projectName = sqlRequest.getProject();",
          "60:         String cube = sqlResponse.getCube();",
          "62:             return;",
          "63:         }",
          "64:         String cubeName = cube.replace(\"=\", \"->\");",
          "",
          "[Removed Lines]",
          "61:         if (cube == null) {",
          "",
          "[Added Lines]",
          "62:         if (StringUtils.isEmpty(cube)) {",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java||server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java -> server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import javax.annotation.concurrent.ThreadSafe;",
          "27: import org.apache.hadoop.metrics2.MetricsException;",
          "28: import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem;",
          "29: import org.apache.kylin.common.KylinConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import org.apache.commons.lang3.StringUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:         update(getQueryMetrics(projectName), sqlResponse);",
          "77:         String cube = sqlResponse.getCube();",
          "78:         String cubeName = cube.replace(\"=\", \"->\");",
          "79:         String cubeMetricName = projectName + \",sub=\" + cubeName;",
          "80:         update(getQueryMetrics(cubeMetricName), sqlResponse);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:         if (StringUtils.isEmpty(cube)) {",
          "80:             return;",
          "81:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}