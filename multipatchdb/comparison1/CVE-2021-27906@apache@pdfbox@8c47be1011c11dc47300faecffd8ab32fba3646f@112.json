{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0d4a50596e24b0185cf4251537ff5775cb075d6b",
      "candidate_info": {
        "commit_hash": "0d4a50596e24b0185cf4251537ff5775cb075d6b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0d4a50596e24b0185cf4251537ff5775cb075d6b",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ],
        "message": "PDFBOX-5244: check that there are two annotations on the page\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891745 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: import org.apache.pdfbox.pdmodel.PDPageContentStream;",
          "71: import org.apache.pdfbox.pdmodel.PDPageTree;",
          "72: import org.apache.pdfbox.pdmodel.encryption.SecurityProvider;",
          "73: import org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport;",
          "74: import org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature;",
          "75: import org.apache.pdfbox.pdmodel.interactive.form.PDField;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73: import org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "855:         inPath = destFile.getAbsolutePath();",
          "856:         fis = new FileInputStream(jpegPath);",
          "857:         signing = new CreateVisibleSignature(keyStore, password.toCharArray());",
          "860:         signing.setExternalSigning(externallySign);",
          "861:         destFile = new File(outDir, getOutputFileName(\"2signed{0}_visible_signed{0}_visible.pdf\"));",
          "862:         signing.signPDF(new File(inPath), destFile, null);",
          "863:         fis.close();",
          "865:         checkSignature(new File(inPath), destFile, false);",
          "866:     }",
          "868:     private void checkLTV(File outFile)",
          "",
          "[Removed Lines]",
          "858:         signing.setVisibleSignDesigner(inPath, 0, 0, -50, fis, 2);",
          "859:         signing.setVisibleSignatureProperties(\"name\", \"location\", \"Security\", 0, 2, true);",
          "",
          "[Added Lines]",
          "859:         signing.setVisibleSignDesigner(inPath, 200, 100, -50, fis, 1);",
          "860:         signing.setVisibleSignatureProperties(\"name\", \"location\", \"Security\", 0, 1, true);",
          "868:         PDDocument doc = PDDocument.load(destFile);",
          "869:         List<PDAnnotation> annotations = doc.getPage(0).getAnnotations();",
          "870:         Assert.assertEquals(2, annotations.size());",
          "871:         doc.close();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93b6fbbc063eb4ed2e09a66cbf38e57df04e04af",
      "candidate_info": {
        "commit_hash": "93b6fbbc063eb4ed2e09a66cbf38e57df04e04af",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/93b6fbbc063eb4ed2e09a66cbf38e57df04e04af",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ],
        "message": "PDFBOX-5157: add simple test\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888695 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:                 timeStampToken.getTimeStampInfo().getGenTime());",
          "310:         doc.close();",
          "311:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "312:         File inFile = new File(OUT_DIR, fileName);",
          "313:         String name = inFile.getName();",
          "314:         String substring = name.substring(0, name.lastIndexOf('.'));",
          "316:         File outFile = new File(OUT_DIR, substring + \"_LTV.pdf\");",
          "317:         AddValidationInformation addValidationInformation = new AddValidationInformation();",
          "318:         addValidationInformation.validateSignature(inFile, outFile);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dad160197b39434f5c683b65168848b695fa5dd5",
      "candidate_info": {
        "commit_hash": "dad160197b39434f5c683b65168848b695fa5dd5",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/dad160197b39434f5c683b65168848b695fa5dd5",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890726 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/GroupGraphics.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "658:                     }",
          "662:                     int groupRGB = groupData[index]; // color of group pixel",
          "",
          "[Removed Lines]",
          "661:                     float alphaFactor = alpha0 / (float)alphagn - alpha0 / 255.0f;",
          "",
          "[Added Lines]",
          "661:                     float alphaFactor = alpha0 / alphagn - alpha0 / 255.0f;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "304492e4446c699918c434207d420544497c6cd3",
      "candidate_info": {
        "commit_hash": "304492e4446c699918c434207d420544497c6cd3",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/304492e4446c699918c434207d420544497c6cd3",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891622 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java -> fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:                         NameRecord.PLATFORM_MACINTOSH,",
          "204:                         NameRecord.ENCODING_MACINTOSH_ROMAN,",
          "205:                         NameRecord.LANGUAGE_MACINTOSH_ENGLISH);",
          "212:     }",
          "",
          "[Removed Lines]",
          "206:         if (nameMac != null)",
          "207:         {",
          "208:             return nameMac;",
          "209:         }",
          "211:         return null;",
          "",
          "[Added Lines]",
          "206:         return nameMac;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c76f48d2a21fd6828a0371cb385e94ea51b4dc4d",
      "candidate_info": {
        "commit_hash": "c76f48d2a21fd6828a0371cb385e94ea51b4dc4d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c76f48d2a21fd6828a0371cb385e94ea51b4dc4d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java"
        ],
        "message": "PDFBOX-5266: show nothing if dash array is invalid\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892603 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:         {",
          "212:             setLineDashPattern(bs.getDashStyle().getDashArray(), 0);",
          "213:         }",
          "215:         {",
          "217:         }",
          "218:         setLineWidthOnDemand(lineWidth);",
          "219:     }",
          "",
          "[Removed Lines]",
          "214:         else if (bs == null && border.size() > 3 && border.getObject(3) instanceof COSArray)",
          "216:             setLineDashPattern(((COSArray) border.getObject(3)).toFloatArray(), 0);",
          "",
          "[Added Lines]",
          "214:         else if (bs == null && border.size() > 3)",
          "216:             if (border.getObject(3) instanceof COSArray)",
          "217:             {",
          "218:                 setLineDashPattern(((COSArray) border.getObject(3)).toFloatArray(), 0);",
          "219:             }",
          "220:             else",
          "221:             {",
          "223:                 setLineDashPattern(new float[1], 0);",
          "224:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}