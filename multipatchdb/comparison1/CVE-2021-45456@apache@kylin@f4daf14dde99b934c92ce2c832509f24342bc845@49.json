{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "093399f82ca872d217b3f941742847e84302eded",
      "candidate_info": {
        "commit_hash": "093399f82ca872d217b3f941742847e84302eded",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/093399f82ca872d217b3f941742847e84302eded",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java",
          "server-base/src/main/java/org/apache/kylin/rest/controller/DiagnosisController.java",
          "server-base/src/main/java/org/apache/kylin/rest/msg/CnMessage.java",
          "server-base/src/main/java/org/apache/kylin/rest/msg/Message.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
          "server-base/src/main/java/org/apache/kylin/rest/util/AclEvaluate.java"
        ],
        "message": "KYLIN-4617 Check whether project/jobid exists before download diagnosis package\n\nWhen download diagnosis package, it's better to check whether project/jobid exists, if not, it raise a BadRequestException with XXX doesn't exist instead of NPE.\n\n(cherry picked from commit 59b0bf32921afea2f85035a79744756a3602039a)",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java||core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java",
          "server-base/src/main/java/org/apache/kylin/rest/controller/DiagnosisController.java||server-base/src/main/java/org/apache/kylin/rest/controller/DiagnosisController.java",
          "server-base/src/main/java/org/apache/kylin/rest/msg/CnMessage.java||server-base/src/main/java/org/apache/kylin/rest/msg/CnMessage.java",
          "server-base/src/main/java/org/apache/kylin/rest/msg/Message.java||server-base/src/main/java/org/apache/kylin/rest/msg/Message.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
          "server-base/src/main/java/org/apache/kylin/rest/util/AclEvaluate.java||server-base/src/main/java/org/apache/kylin/rest/util/AclEvaluate.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
          ],
          "candidate": [
            "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java||core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java -> core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:         }",
          "177:     }",
          "180:     public static final String COMMAND_WHITE_LIST = \"[^\\\\w%,@/:=?.\\\"\\\\[\\\\]]\";",
          "181:     public static final String HIVE_BLOCK_LIST = \"[ <>()$;\\\\-#!+*\\\"'/=%@]+\";",
          "",
          "[Removed Lines]",
          "179:     public static final String COMMAND_BLOCK_LIST = \"[ &`>|{}()$;\\\\#~!+*\\\\\\\\]+\";",
          "",
          "[Added Lines]",
          "179:     public static final String COMMAND_BLOCK_LIST = \"[ &`>|{}()$;\\\\-#~!+*\\\\\\\\]+\";",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/controller/DiagnosisController.java||server-base/src/main/java/org/apache/kylin/rest/controller/DiagnosisController.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/controller/DiagnosisController.java -> server-base/src/main/java/org/apache/kylin/rest/controller/DiagnosisController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import javax.servlet.http.HttpServletResponse;",
          "28: import org.apache.kylin.common.persistence.AutoDeleteDirectory;",
          "30: import org.apache.kylin.metadata.badquery.BadQueryEntry;",
          "31: import org.apache.kylin.metadata.badquery.BadQueryHistory;",
          "32: import org.apache.kylin.rest.exception.InternalErrorException;",
          "",
          "[Removed Lines]",
          "29: import org.apache.kylin.common.util.CliCommandExecutor;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:     public void dumpProjectDiagnosisInfo(@PathVariable String project, final HttpServletRequest request,",
          "81:             final HttpServletResponse response) {",
          "82:         try (AutoDeleteDirectory diagDir = new AutoDeleteDirectory(\"diag_project\", \"\")) {",
          "84:             setDownloadResponse(filePath, response);",
          "85:         } catch (IOException e) {",
          "86:             throw new InternalErrorException(\"Failed to dump project diagnosis info. \" + e.getMessage(), e);",
          "",
          "[Removed Lines]",
          "83:             String filePath = dgService.dumpProjectDiagnosisInfo(CliCommandExecutor.checkParameter(project), diagDir.getFile());",
          "",
          "[Added Lines]",
          "82:             String filePath = dgService.dumpProjectDiagnosisInfo(project, diagDir.getFile());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:     public void dumpJobDiagnosisInfo(@PathVariable String jobId, final HttpServletRequest request,",
          "97:             final HttpServletResponse response) {",
          "98:         try (AutoDeleteDirectory diagDir = new AutoDeleteDirectory(\"diag_job\", \"\")) {",
          "100:             setDownloadResponse(filePath, response);",
          "101:         } catch (IOException e) {",
          "102:             throw new InternalErrorException(\"Failed to dump job diagnosis info. \" + e.getMessage(), e);",
          "",
          "[Removed Lines]",
          "99:             String filePath = dgService.dumpJobDiagnosisInfo(CliCommandExecutor.checkParameter(jobId), diagDir.getFile());",
          "",
          "[Added Lines]",
          "98:             String filePath = dgService.dumpJobDiagnosisInfo(jobId, diagDir.getFile());",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/msg/CnMessage.java||server-base/src/main/java/org/apache/kylin/rest/msg/CnMessage.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/msg/CnMessage.java -> server-base/src/main/java/org/apache/kylin/rest/msg/CnMessage.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:         return \"\u627e\u4e0d\u5230\u8bca\u65ad\u5305, \u8def\u5f84: %s\";",
          "405:     }",
          "408:     public String getVALID_ENCODING_NOT_AVAILABLE() {",
          "409:         return \"\u65e0\u6cd5\u4e3a\u6570\u636e\u7c7b\u578b: %s \u63d0\u4f9b\u5408\u6cd5\u7684\u7f16\u7801\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:     public String getDIAG_PROJECT_NOT_FOUND() {",
          "408:         return \"\u627e\u4e0d\u5230\u9879\u76ee: %s.\";",
          "409:     }",
          "411:     public String getDIAG_JOBID_NOT_FOUND() {",
          "412:         return \"\u627e\u4e0d\u5230\u4efb\u52a1ID: %s.\";",
          "413:     }",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/msg/Message.java||server-base/src/main/java/org/apache/kylin/rest/msg/Message.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/msg/Message.java -> server-base/src/main/java/org/apache/kylin/rest/msg/Message.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:         return \"Diagnosis package not found in directory: %s.\";",
          "418:     }",
          "421:     public String getVALID_ENCODING_NOT_AVAILABLE() {",
          "422:         return \"Can not provide valid encodings for datatype: %s.\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "420:     public String getDIAG_PROJECT_NOT_FOUND() {",
          "421:         return \"Can not find project: %s.\";",
          "422:     }",
          "424:     public String getDIAG_JOBID_NOT_FOUND() {",
          "425:         return \"Can not find job id: %s.\";",
          "426:     }",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: import org.apache.kylin.common.KylinConfig;",
          "31: import org.apache.kylin.common.util.CliCommandExecutor;",
          "32: import org.apache.kylin.common.util.Pair;",
          "33: import org.apache.kylin.metadata.badquery.BadQueryEntry;",
          "34: import org.apache.kylin.metadata.badquery.BadQueryHistory;",
          "35: import org.apache.kylin.rest.exception.BadRequestException;",
          "36: import org.apache.kylin.rest.msg.Message;",
          "37: import org.apache.kylin.rest.msg.MsgPicker;",
          "38: import org.apache.kylin.rest.util.AclEvaluate;",
          "39: import org.slf4j.Logger;",
          "40: import org.slf4j.LoggerFactory;",
          "41: import org.springframework.beans.factory.annotation.Autowired;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: import org.apache.kylin.job.JobInstance;",
          "36: import org.apache.kylin.metadata.project.ProjectInstance;",
          "37: import org.apache.kylin.metadata.project.ProjectManager;",
          "42: import org.apache.kylin.rest.util.ValidateUtil;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:     }",
          "83:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
          "85:         String[] args = { project, exportPath.getAbsolutePath() };",
          "86:         runDiagnosisCLI(args);",
          "87:         return getDiagnosisPackageName(exportPath);",
          "88:     }",
          "90:     public String dumpJobDiagnosisInfo(String jobId, File exportPath) throws IOException {",
          "92:         String[] args = { jobId, exportPath.getAbsolutePath() };",
          "93:         runDiagnosisCLI(args);",
          "94:         return getDiagnosisPackageName(exportPath);",
          "",
          "[Removed Lines]",
          "84:         aclEvaluate.checkProjectOperationPermission(project);",
          "91:         aclEvaluate.checkProjectOperationPermission(jobService.getJobInstance(jobId));",
          "",
          "[Added Lines]",
          "88:         Message msg = MsgPicker.getMsg();",
          "89:         ProjectInstance projectInstance =",
          "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
          "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
          "92:         if (null == projectInstance) {",
          "93:             throw new BadRequestException(",
          "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
          "95:         }",
          "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
          "103:         Message msg = MsgPicker.getMsg();",
          "104:         JobInstance jobInstance = jobService.getJobInstance(jobId);",
          "105:         if (null == jobInstance) {",
          "106:             throw new BadRequestException(",
          "107:                     String.format(Locale.ROOT, msg.getDIAG_JOBID_NOT_FOUND(), jobId));",
          "108:         }",
          "109:         aclEvaluate.checkProjectOperationPermission(jobInstance);",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/util/AclEvaluate.java||server-base/src/main/java/org/apache/kylin/rest/util/AclEvaluate.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/util/AclEvaluate.java -> server-base/src/main/java/org/apache/kylin/rest/util/AclEvaluate.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:         return getProjectInstance(projectName);",
          "61:     }",
          "63:     public void checkProjectAdminPermission(String projectName) {",
          "64:         ProjectInstance projectInstance = getProjectInstance(projectName);",
          "66:     }",
          "69:     public void checkProjectReadPermission(String projectName) {",
          "70:         ProjectInstance projectInstance = getProjectInstance(projectName);",
          "72:     }",
          "74:     public void checkProjectWritePermission(String projectName) {",
          "75:         ProjectInstance projectInstance = getProjectInstance(projectName);",
          "77:     }",
          "79:     public void checkProjectOperationPermission(String projectName) {",
          "80:         ProjectInstance projectInstance = getProjectInstance(projectName);",
          "82:     }",
          "",
          "[Removed Lines]",
          "65:         aclUtil.hasProjectAdminPermission(projectInstance);",
          "71:         aclUtil.hasProjectReadPermission(projectInstance);",
          "76:         aclUtil.hasProjectWritePermission(projectInstance);",
          "81:         aclUtil.hasProjectOperationPermission(projectInstance);",
          "",
          "[Added Lines]",
          "63:     public void checkProjectAdminPermission(ProjectInstance projectInstance) {",
          "64:         aclUtil.hasProjectAdminPermission(projectInstance);",
          "65:     }",
          "68:     public void checkProjectReadPermission(ProjectInstance projectInstance) {",
          "69:         aclUtil.hasProjectReadPermission(projectInstance);",
          "70:     }",
          "72:     public void checkProjectWritePermission(ProjectInstance projectInstance) {",
          "73:         aclUtil.hasProjectWritePermission(projectInstance);",
          "74:     }",
          "76:     public void checkProjectOperationPermission(ProjectInstance projectInstance) {",
          "77:         aclUtil.hasProjectOperationPermission(projectInstance);",
          "78:     }",
          "82:         checkProjectAdminPermission(projectInstance);",
          "88:         checkProjectReadPermission(projectInstance);",
          "93:         checkProjectWritePermission(projectInstance);",
          "98:         checkProjectOperationPermission(projectInstance);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "694d94b270b3f2722e590cb552816d0b2d3dda3c",
      "candidate_info": {
        "commit_hash": "694d94b270b3f2722e590cb552816d0b2d3dda3c",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/694d94b270b3f2722e590cb552816d0b2d3dda3c",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
          "server/src/main/webapp/WEB-INF/web.xml"
        ],
        "message": "test fix",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
            "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
            "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
            "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
            "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2740:         return getOptional(\"kylin.jdbc.url.allowed.sqlserver.schema\", DEFAULT_JDBC_URL_ALLOWED_SQLSERVER_SCHEMA);",
          "2741:     }",
          "2743: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2743:     public String getEncryptCipherIvSpec() {",
          "2744:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
          "2745:     }",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import java.security.NoSuchAlgorithmException;",
          "27: import org.apache.commons.codec.binary.Base64;",
          "29: import javax.crypto.Cipher;",
          "30: import javax.crypto.NoSuchPaddingException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.kylin.common.KylinConfig;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
          "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
          "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
          "46:         cipher.init(cipherMode, secretKey, ivSpec);",
          "47:         return cipher;",
          "48:     }",
          "",
          "[Removed Lines]",
          "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
          "",
          "[Added Lines]",
          "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
          "",
          "---------------"
        ],
        "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
          "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.kylin.common.util;",
          "21: import org.junit.Assert;",
          "22: import org.junit.Test;",
          "26:     @Test",
          "27:     public void testAESEncrypt(){",
          "",
          "[Removed Lines]",
          "24: public class EncryptUtilTest {",
          "",
          "[Added Lines]",
          "21: import org.junit.After;",
          "23: import org.junit.Before;",
          "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
          "27:     @Before",
          "28:     public void setUp() throws Exception {",
          "29:         this.createTestMetadata();",
          "30:     }",
          "32:     @After",
          "33:     public void after() throws Exception {",
          "34:         this.cleanupTestMetadata();",
          "35:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6766e0d7c5dcc3d5f2c577ab88d78fdaaf81743a",
      "candidate_info": {
        "commit_hash": "6766e0d7c5dcc3d5f2c577ab88d78fdaaf81743a",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/6766e0d7c5dcc3d5f2c577ab88d78fdaaf81743a",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
          "server/src/main/webapp/WEB-INF/web.xml"
        ],
        "message": "test fix",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
            "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
            "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
            "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
            "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2740:         return getOptional(\"kylin.jdbc.url.allowed.sqlserver.schema\", DEFAULT_JDBC_URL_ALLOWED_SQLSERVER_SCHEMA);",
          "2741:     }",
          "2743: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2743:     public String getEncryptCipherIvSpec() {",
          "2744:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
          "2745:     }",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import java.security.NoSuchAlgorithmException;",
          "27: import org.apache.commons.codec.binary.Base64;",
          "29: import javax.crypto.Cipher;",
          "30: import javax.crypto.NoSuchPaddingException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.kylin.common.KylinConfig;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
          "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
          "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
          "46:         cipher.init(cipherMode, secretKey, ivSpec);",
          "47:         return cipher;",
          "48:     }",
          "",
          "[Removed Lines]",
          "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
          "",
          "[Added Lines]",
          "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
          "",
          "---------------"
        ],
        "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
          "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.kylin.common.util;",
          "21: import org.junit.Assert;",
          "22: import org.junit.Test;",
          "26:     @Test",
          "27:     public void testAESEncrypt(){",
          "",
          "[Removed Lines]",
          "24: public class EncryptUtilTest {",
          "",
          "[Added Lines]",
          "21: import org.junit.After;",
          "23: import org.junit.Before;",
          "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
          "27:     @Before",
          "28:     public void setUp() throws Exception {",
          "29:         this.createTestMetadata();",
          "30:     }",
          "32:     @After",
          "33:     public void after() throws Exception {",
          "34:         this.cleanupTestMetadata();",
          "35:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}