{
  "cve_id": "CVE-2023-44765",
  "cve_desc": "A Cross Site Scripting (XSS) vulnerability in Concrete CMS versions 8.5.12 and below, and 9.0 through 9.2.1 allows an attacker to execute arbitrary code via a crafted script to Plural Handle of the Data Objects from System & Settings.",
  "repo": "concretecms/concretecms",
  "patch_hash": "0f0564232e0a49719d0bdff6223539b624f116ee",
  "patch_info": {
    "commit_hash": "0f0564232e0a49719d0bdff6223539b624f116ee",
    "repo": "concretecms/concretecms",
    "commit_url": "https://github.com/concretecms/concretecms/commit/0f0564232e0a49719d0bdff6223539b624f116ee",
    "files": [
      "concrete/controllers/single_page/dashboard/system/express/entities.php"
    ],
    "message": "Fix CC-481",
    "before_after_code_files": [
      "concrete/controllers/single_page/dashboard/system/express/entities.php||concrete/controllers/single_page/dashboard/system/express/entities.php"
    ]
  },
  "patch_diff": {
    "concrete/controllers/single_page/dashboard/system/express/entities.php||concrete/controllers/single_page/dashboard/system/express/entities.php": [
      "File: concrete/controllers/single_page/dashboard/system/express/entities.php -> concrete/controllers/single_page/dashboard/system/express/entities.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "31:             $vs = \\Core::make('helper/validation/strings');",
      "33:             $name = $sec->sanitizeString($this->request->request->get('name'));",
      "36:             if (!$vs->handle($handle)) {",
      "38:             } else {",
      "39:                 $entity = Express::getObjectByHandle($handle);",
      "40:                 if (is_object($entity)) {",
      "",
      "[Removed Lines]",
      "34:             $handle = $sec->sanitizeString($this->request->request->get('handle'));",
      "37:                 $this->error->add(t('You must create a handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
      "",
      "[Added Lines]",
      "34:             $handle = $this->request->request->get('handle');",
      "35:             $plural_handle = $this->request->request->get('plural_handle');",
      "38:                 $this->error->add(t('You must create a valid handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "44:                 }",
      "45:             }",
      "47:             if (!$name) {",
      "48:                 $this->error->add(t('You must give your data object a name.'), 'name');",
      "49:             }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "48:             if (!$vs->handle($plural_handle)) {",
      "49:                 $this->error->add(t('You must create a valid plural handle for your data object. It may contain only lowercase letters and underscores.'), 'plural_handle');",
      "50:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "51:             if (!$this->error->has()) {",
      "52:                 $entity = new Entity();",
      "53:                 $entity->setName($this->request->request->get('name'));",
      "56:                 $entity->setLabelMask($this->request->request->get('label_mask'));",
      "57:                 $entity->setDescription($this->request->request->get('description'));",
      "58:                 $entity->setIsPublished(false);",
      "",
      "[Removed Lines]",
      "54:                 $entity->setHandle($this->request->request->get('handle'));",
      "55:                 $entity->setPluralHandle($this->request->request->get('plural_handle'));",
      "",
      "[Added Lines]",
      "59:                 $entity->setHandle($handle);",
      "60:                 $entity->setPluralHandle($plural_handle);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "330:         $vs = \\Core::make('helper/validation/strings');",
      "332:         $name = $sec->sanitizeString($this->request->request->get('name'));",
      "335:         if (!$vs->handle($handle)) {",
      "337:         } else {",
      "338:             $exist = Express::getObjectByHandle($handle);",
      "339:             if (is_object($exist) && $exist->getID() != $id) {",
      "",
      "[Removed Lines]",
      "333:         $handle = $sec->sanitizeString($this->request->request->get('handle'));",
      "336:             $this->error->add(t('You must create a handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
      "",
      "[Added Lines]",
      "338:         $handle = $this->request->request->get('handle');",
      "339:         $plural_handle = $this->request->request->get('plural_handle');",
      "342:             $this->error->add(t('You must create a valid handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "343:             }",
      "344:         }",
      "346:         if (!$name) {",
      "347:             $this->error->add(t('You must give your data object a name.'), 'name');",
      "348:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "352:         if (!$vs->handle($plural_handle)) {",
      "353:             $this->error->add(",
      "354:                 t(",
      "355:                     'You must create a valid plural handle for your data object. It may contain only lowercase letters and underscores.'",
      "356:                 ),",
      "357:                 'plural_handle'",
      "358:             );",
      "359:         }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "380:             $entity->setName($name);",
      "381:             $entity->setHandle($handle);",
      "383:             $entity->setLabelMask($this->request->request->get('label_mask'));",
      "384:             $entity->setDescription($this->request->request->get('description'));",
      "385:             $entity->setDefaultViewForm($viewForm);",
      "",
      "[Removed Lines]",
      "382:             $entity->setPluralHandle($this->request->request->get('plural_handle'));",
      "",
      "[Added Lines]",
      "397:             $entity->setPluralHandle($plural_handle);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "da516f7f0ee8782f0256d8db4e7d7d53d4a0963c",
      "candidate_info": {
        "commit_hash": "da516f7f0ee8782f0256d8db4e7d7d53d4a0963c",
        "repo": "concretecms/concretecms",
        "commit_url": "https://github.com/concretecms/concretecms/commit/da516f7f0ee8782f0256d8db4e7d7d53d4a0963c",
        "files": [
          "concrete/controllers/single_page/dashboard/system/express/entities.php"
        ],
        "message": "Fix CC-481",
        "before_after_code_files": [
          "concrete/controllers/single_page/dashboard/system/express/entities.php||concrete/controllers/single_page/dashboard/system/express/entities.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "concrete/controllers/single_page/dashboard/system/express/entities.php||concrete/controllers/single_page/dashboard/system/express/entities.php"
          ],
          "candidate": [
            "concrete/controllers/single_page/dashboard/system/express/entities.php||concrete/controllers/single_page/dashboard/system/express/entities.php"
          ]
        }
      },
      "candidate_diff": {
        "concrete/controllers/single_page/dashboard/system/express/entities.php||concrete/controllers/single_page/dashboard/system/express/entities.php": [
          "File: concrete/controllers/single_page/dashboard/system/express/entities.php -> concrete/controllers/single_page/dashboard/system/express/entities.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:             $vs = \\Core::make('helper/validation/strings');",
          "27:             $name = $sec->sanitizeString($this->request->request->get('name'));",
          "30:             if (!$vs->handle($handle)) {",
          "32:             } else {",
          "33:                 $entity = Express::getObjectByHandle($handle);",
          "34:                 if (is_object($entity)) {",
          "",
          "[Removed Lines]",
          "28:             $handle = $sec->sanitizeString($this->request->request->get('handle'));",
          "31:                 $this->error->add(t('You must create a handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
          "",
          "[Added Lines]",
          "28:             $handle = $this->request->request->get('handle');",
          "29:             $plural_handle = $this->request->request->get('plural_handle');",
          "32:                 $this->error->add(t('You must create a valid handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:                 }",
          "37:             }",
          "39:             if (!$name) {",
          "40:                 $this->error->add(t('You must give your data object a name.'), 'name');",
          "41:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:             if (!$vs->handle($plural_handle)) {",
          "41:                 $this->error->add(t('You must create a valid plural handle for your data object. It may contain only lowercase letters and underscores.'), 'plural_handle');",
          "42:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43:             if (!$this->error->has()) {",
          "44:                 $entity = new Entity();",
          "45:                 $entity->setName($this->request->request->get('name'));",
          "48:                 $entity->setLabelMask($this->request->request->get('label_mask'));",
          "49:                 $entity->setDescription($this->request->request->get('description'));",
          "",
          "[Removed Lines]",
          "46:                 $entity->setHandle($this->request->request->get('handle'));",
          "47:                 $entity->setPluralHandle($this->request->request->get('plural_handle'));",
          "",
          "[Added Lines]",
          "51:                 $entity->setHandle($handle);",
          "52:                 $entity->setPluralHandle($plural_handle);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "233:         $vs = \\Core::make('helper/validation/strings');",
          "235:         $name = $sec->sanitizeString($this->request->request->get('name'));",
          "238:         if (!$vs->handle($handle)) {",
          "240:         } else {",
          "241:             $exist = Express::getObjectByHandle($handle);",
          "242:             if (is_object($exist) && $exist->getID() != $id) {",
          "",
          "[Removed Lines]",
          "236:         $handle = $sec->sanitizeString($this->request->request->get('handle'));",
          "239:             $this->error->add(t('You must create a handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
          "",
          "[Added Lines]",
          "241:         $handle = $this->request->request->get('handle');",
          "242:         $plural_handle = $this->request->request->get('plural_handle');",
          "245:             $this->error->add(t('You must create a valid handle for your data object. It may contain only lowercase letters and underscores.'), 'handle');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "244:             }",
          "245:         }",
          "247:         if (!$name) {",
          "248:             $this->error->add(t('You must give your data object a name.'), 'name');",
          "249:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "253:         if (!$vs->handle($plural_handle)) {",
          "254:             $this->error->add(",
          "255:                 t(",
          "256:                     'You must create a valid plural handle for your data object. It may contain only lowercase letters and underscores.'",
          "257:                 ),",
          "258:                 'plural_handle'",
          "259:             );",
          "260:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "278:             $entity->setName($name);",
          "279:             $entity->setHandle($handle);",
          "281:             $entity->setLabelMask($this->request->request->get('label_mask'));",
          "282:             $entity->setDescription($this->request->request->get('description'));",
          "283:             $entity->setDefaultViewForm($viewForm);",
          "",
          "[Removed Lines]",
          "280:             $entity->setPluralHandle($this->request->request->get('plural_handle'));",
          "",
          "[Added Lines]",
          "295:             $entity->setPluralHandle($plural_handle);",
          "",
          "---------------"
        ]
      }
    }
  ]
}