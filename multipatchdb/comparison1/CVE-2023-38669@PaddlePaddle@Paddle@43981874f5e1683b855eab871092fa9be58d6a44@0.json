{
  "cve_id": "CVE-2023-38669",
  "cve_desc": "Use after free in paddle.diagonal in PaddlePaddle before 2.5.0. This resulted in a potentially exploitable condition.\n",
  "repo": "PaddlePaddle/Paddle",
  "patch_hash": "43981874f5e1683b855eab871092fa9be58d6a44",
  "patch_info": {
    "commit_hash": "43981874f5e1683b855eab871092fa9be58d6a44",
    "repo": "PaddlePaddle/Paddle",
    "commit_url": "https://github.com/PaddlePaddle/Paddle/commit/43981874f5e1683b855eab871092fa9be58d6a44",
    "files": [
      "paddle/phi/infermeta/unary.cc"
    ],
    "message": "refine diagonal infermeta",
    "before_after_code_files": [
      "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc"
    ]
  },
  "patch_diff": {
    "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc": [
      "File: paddle/phi/infermeta/unary.cc -> paddle/phi/infermeta/unary.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "605:   int offset_ = offset;",
      "606:   int axis1_ = axis1 < 0 ? x_dims.size() + axis1 : axis1;",
      "607:   int axis2_ = axis2 < 0 ? x_dims.size() + axis2 : axis2;",
      "609:   PADDLE_ENFORCE_GE(",
      "610:       x_dims.size(),",
      "611:       2,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "621:           -(x_dims.size()),",
      "622:           (x_dims.size() - 1),",
      "623:           axis1));",
      "624:   PADDLE_ENFORCE_LT(",
      "625:       axis2_,",
      "626:       x_dims.size(),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "623:   PADDLE_ENFORCE_GE(",
      "624:       axis1_,",
      "625:       0,",
      "626:       phi::errors::OutOfRange(",
      "627:           \"Attr(axis1) is out of range (expected to be in range of [%ld, \"",
      "628:           \"%ld], but got %ld).\",",
      "629:           -(x_dims.size()),",
      "630:           (x_dims.size() - 1),",
      "631:           axis1));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "630:           -(x_dims.size()),",
      "631:           (x_dims.size() - 1),",
      "632:           axis2));",
      "633:   PADDLE_ENFORCE_NE(",
      "634:       axis1_,",
      "635:       axis2_,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "641:   PADDLE_ENFORCE_GE(",
      "642:       axis2_,",
      "643:       0,",
      "644:       phi::errors::OutOfRange(",
      "645:           \"Attr(axis2) is out of range (expected to be in range of [%ld, \"",
      "646:           \"%ld], but got %ld).\",",
      "647:           -(x_dims.size()),",
      "648:           (x_dims.size() - 1),",
      "649:           axis2));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "852c8db38cea0baecad9756b01903fa98e992395",
      "candidate_info": {
        "commit_hash": "852c8db38cea0baecad9756b01903fa98e992395",
        "repo": "PaddlePaddle/Paddle",
        "commit_url": "https://github.com/PaddlePaddle/Paddle/commit/852c8db38cea0baecad9756b01903fa98e992395",
        "files": [
          "paddle/phi/infermeta/unary.cc"
        ],
        "message": "refine diagonal infermeta (#49520)",
        "before_after_code_files": [
          "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PaddlePaddle/Paddle/pull/49520"
        ],
        "olp_code_files": {
          "patch": [
            "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc"
          ],
          "candidate": [
            "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc"
          ]
        }
      },
      "candidate_diff": {
        "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc": [
          "File: paddle/phi/infermeta/unary.cc -> paddle/phi/infermeta/unary.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "621:           -(x_dims.size()),",
          "622:           (x_dims.size() - 1),",
          "623:           axis1));",
          "624:   PADDLE_ENFORCE_LT(",
          "625:       axis2_,",
          "626:       x_dims.size(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "623:   PADDLE_ENFORCE_GE(",
          "624:       axis1_,",
          "625:       0,",
          "626:       phi::errors::OutOfRange(",
          "627:           \"Attr(axis1) is out of range (expected to be in range of [%ld, \"",
          "628:           \"%ld], but got %ld).\",",
          "629:           -(x_dims.size()),",
          "630:           (x_dims.size() - 1),",
          "631:           axis1));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "630:           -(x_dims.size()),",
          "631:           (x_dims.size() - 1),",
          "632:           axis2));",
          "633:   PADDLE_ENFORCE_NE(",
          "634:       axis1_,",
          "635:       axis2_,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "641:   PADDLE_ENFORCE_GE(",
          "642:       axis2_,",
          "643:       0,",
          "644:       phi::errors::OutOfRange(",
          "645:           \"Attr(axis2) is out of range (expected to be in range of [%ld, \"",
          "646:           \"%ld], but got %ld).\",",
          "647:           -(x_dims.size()),",
          "648:           (x_dims.size() - 1),",
          "649:           axis2));",
          "",
          "---------------"
        ]
      }
    }
  ]
}