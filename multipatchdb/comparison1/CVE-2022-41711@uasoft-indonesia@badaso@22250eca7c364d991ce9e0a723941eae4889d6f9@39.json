{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9ec49218ca58bf6f1740b0a406c0c435a59173d1",
      "candidate_info": {
        "commit_hash": "9ec49218ca58bf6f1740b0a406c0c435a59173d1",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/9ec49218ca58bf6f1740b0a406c0c435a59173d1",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: use Illuminate\\Support\\Facades\\DB;",
          "8: use Illuminate\\Support\\Facades\\Hash;",
          "9: use Illuminate\\Support\\Facades\\Schema;",
          "10: use Tests\\TestCase;",
          "11: use Uasoft\\Badaso\\Helpers\\CallHelperTest;",
          "12: use Uasoft\\Badaso\\Models\\DataType;",
          "13: use Uasoft\\Badaso\\Models\\Migration;",
          "14: use Uasoft\\Badaso\\Models\\Permission;",
          "17: class BadasoApiCrudManagementTest extends TestCase",
          "18: {",
          "",
          "[Removed Lines]",
          "15: use Illuminate\\Support\\Str;",
          "",
          "[Added Lines]",
          "10: use Illuminate\\Support\\Str;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1369:         $table_name = 'table_public';",
          "1370:         Schema::dropIfExists($table_name);",
          "1373:                 $table->id();",
          "1374:                 $table->text('name')->nullable();",
          "1375:                 $table->bigInteger('user_id')->nullable()->unsigned();",
          "1377:                 $table->softDeletes();",
          "1378:                 $table->timestamps();",
          "1379:             });",
          "",
          "[Removed Lines]",
          "1371:         if (!Schema::hasTable($table_name)) {",
          "1372:             Schema::create($table_name, function (Blueprint $table) use ($table_name) {",
          "1376:                 $table->foreign('user_id')->references('id')->on(config('badaso.database.prefix') . 'users')->onDelete('cascade');",
          "",
          "[Added Lines]",
          "1371:         if (! Schema::hasTable($table_name)) {",
          "1372:             Schema::create($table_name, function (Blueprint $table) {",
          "1376:                 $table->foreign('user_id')->references('id')->on(config('badaso.database.prefix').'users')->onDelete('cascade');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1494:         $response->assertSuccessful();",
          "1498:         foreach ($permissions as $key => $value) {",
          "1499:             $permission_id = $value->id;",
          "1500:         }",
          "",
          "[Removed Lines]",
          "1497:         $permissions = Permission::where('key', 'browse_' . $table_name)->get();",
          "",
          "[Added Lines]",
          "1497:         $permissions = Permission::where('key', 'browse_'.$table_name)->get();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1502:             'always_allow' =>  false,",
          "1503:             'description' =>  Str::uuid(),",
          "1504:             'is_public' =>  true,",
          "1506:             'id' => $permission_id,",
          "1507:         ];",
          "1508:         $response_permission = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/permissions/edit'), $request_data);",
          "",
          "[Removed Lines]",
          "1505:             'key' => 'browse_' . $table_name,",
          "",
          "[Added Lines]",
          "1505:             'key' => 'browse_'.$table_name,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d072563f68a7a4045e155661211c6f817e381fa",
      "candidate_info": {
        "commit_hash": "7d072563f68a7a4045e155661211c6f817e381fa",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/7d072563f68a7a4045e155661211c6f817e381fa",
        "files": [
          "src/Helpers/GetData.php"
        ],
        "message": "temp",
        "before_after_code_files": [
          "src/Helpers/GetData.php||src/Helpers/GetData.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:         $field_identify_related_user = null;",
          "29:         $roles_can_see_all_data = [];",
          "36:         $user_roles = auth()->user()->roles;",
          "38:         foreach ($user_roles as $key => $user_role) {",
          "",
          "[Removed Lines]",
          "31:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "33:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "35:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "",
          "[Added Lines]",
          "31:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "33:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "35:         $roles_can_see_all_data = json_decode($permissions) ? json_decode($permissions['roles_can_see_all_data']) : [];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:         $field_identify_related_user = null;",
          "108:         $roles_can_see_all_data = [];",
          "115:         $user_roles = auth()->user()->roles;",
          "117:         foreach ($user_roles as $key => $user_role) {",
          "",
          "[Removed Lines]",
          "110:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "112:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "114:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "",
          "[Added Lines]",
          "110:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "112:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "114:         $roles_can_see_all_data = json_decode($permissions) ? json_decode($permissions['roles_can_see_all_data']) : [];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "222:         $field_identify_related_user = null;",
          "223:         $roles_can_see_all_data = [];",
          "230:         $user_roles = auth()->user()->roles;",
          "232:         foreach ($user_roles as $key => $user_role) {",
          "",
          "[Removed Lines]",
          "225:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "227:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "229:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "",
          "[Added Lines]",
          "225:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "227:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "229:         $roles_can_see_all_data = json_decode($permissions) ? json_decode($permissions['roles_can_see_all_data']) : [];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "307:         $field_identify_related_user = null;",
          "308:         $roles_can_see_all_data = [];",
          "315:         $user_roles = auth()->user()->roles;",
          "317:         foreach ($user_roles as $key => $user_role) {",
          "",
          "[Removed Lines]",
          "310:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "312:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "314:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "",
          "[Added Lines]",
          "310:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "312:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "314:         $roles_can_see_all_data = json_decode($permissions) ? json_decode($permissions['roles_can_see_all_data']) : [];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "530319861380fa5b672dcd7d191f90e2e54c48f0",
      "candidate_info": {
        "commit_hash": "530319861380fa5b672dcd7d191f90e2e54c48f0",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/530319861380fa5b672dcd7d191f90e2e54c48f0",
        "files": [
          "src/Config/backup.php"
        ],
        "message": "commit",
        "before_after_code_files": [
          "src/Config/backup.php||src/Config/backup.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Config/backup.php||src/Config/backup.php": [
          "File: src/Config/backup.php -> src/Config/backup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:             \\Spatie\\Backup\\Notifications\\Notifications\\BackupHasFailedNotification::class         => ['mail'],",
          "102:             \\Spatie\\Backup\\Notifications\\Notifications\\UnhealthyBackupWasFoundNotification::class => ['mail'],",
          "103:             \\Spatie\\Backup\\Notifications\\Notifications\\CleanupHasFailedNotification::class        => ['mail'],",
          "105:             \\Spatie\\Backup\\Notifications\\Notifications\\HealthyBackupWasFoundNotification::class   => ['mail'],",
          "106:             \\Spatie\\Backup\\Notifications\\Notifications\\CleanupWasSuccessfulNotification::class    => ['mail'],",
          "107:         ],",
          "",
          "[Removed Lines]",
          "104:             \\Spatie\\Backup\\Notifications\\Notifications\\BackupWasSuccessfuNotificationl::class     => ['mail'],",
          "",
          "[Added Lines]",
          "104:             \\Spatie\\Backup\\Notifications\\Notifications\\BackupWasSuccessfulNotification::class     => ['mail'],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37ae595bc97814a3ebd58bcea0ffb591c120d554",
      "candidate_info": {
        "commit_hash": "37ae595bc97814a3ebd58bcea0ffb591c120d554",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/37ae595bc97814a3ebd58bcea0ffb591c120d554",
        "files": [
          "src/Badaso.php",
          "src/Controllers/BadasoPermissionController.php",
          "src/Helpers/GetData.php",
          "src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php",
          "src/Models/Permission.php",
          "src/resources/js/components/BadasoDataIdentifier.vue",
          "src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/permission-management/browse.vue",
          "src/resources/js/pages/permission-management/edit.vue",
          "src/resources/js/pages/permission-management/read.vue"
        ],
        "message": "task [v2] add-feature-read-itself",
        "before_after_code_files": [
          "src/Badaso.php||src/Badaso.php",
          "src/Controllers/BadasoPermissionController.php||src/Controllers/BadasoPermissionController.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php||src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php",
          "src/Models/Permission.php||src/Models/Permission.php",
          "src/resources/js/components/BadasoDataIdentifier.vue||src/resources/js/components/BadasoDataIdentifier.vue",
          "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/permission-management/browse.vue||src/resources/js/pages/permission-management/browse.vue",
          "src/resources/js/pages/permission-management/edit.vue||src/resources/js/pages/permission-management/edit.vue",
          "src/resources/js/pages/permission-management/read.vue||src/resources/js/pages/permission-management/read.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Badaso.php||src/Badaso.php": [
          "File: src/Badaso.php -> src/Badaso.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:         'hidden',",
          "57:         'code',",
          "58:         'relation',",
          "59:     ];",
          "61:     protected $supported_filter_operator = [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         'data_identifier',",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoPermissionController.php||src/Controllers/BadasoPermissionController.php": [
          "File: src/Controllers/BadasoPermissionController.php -> src/Controllers/BadasoPermissionController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:                 'always_allow' => 'required',",
          "56:                 'is_public'    => 'required',",
          "57:                 'table_name'   => 'nullable',",
          "58:             ]);",
          "60:             $permission = Permission::find($request->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:                 'roles_can_see_all_data'   => 'nullable',",
          "59:                 'field_identify_related_user'   => 'nullable',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:             $permission->description = $request->description;",
          "65:             $permission->always_allow = $request->always_allow;",
          "66:             $permission->is_public = $request->is_public;",
          "67:             $permission->save();",
          "69:             DB::commit();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:             $permission->roles_can_see_all_data = $request->roles_can_see_all_data;",
          "70:             $permission->field_identify_related_user = $request->field_identify_related_user;",
          "",
          "---------------"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Exception;",
          "6: use Illuminate\\Support\\Facades\\DB;",
          "7: use ReflectionClass;",
          "9: class GetData",
          "10: {",
          "11:     public static function serverSideWithModel($data_type, $builder_params, $only_data_soft_delete = false)",
          "12:     {",
          "13:         $fields = collect($data_type->dataRows)->where('browse', 1)->pluck('field')->all();",
          "14:         $ids = collect($data_type->dataRows)->where('field', 'id')->pluck('field')->all();",
          "17:         $model = app($data_type->model_name);",
          "18:         $limit = $builder_params['limit'];",
          "",
          "[Removed Lines]",
          "15:         $fields = array_merge($fields, $ids);",
          "",
          "[Added Lines]",
          "8: use Uasoft\\Badaso\\Models\\Permission;",
          "14:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "17:         $fields = array_merge($fields, $ids, $fields_data_identifier);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:         $filter_operator = $builder_params['filter_operator'];",
          "23:         $filter_value = $builder_params['filter_value'];",
          "25:         $records = [];",
          "26:         $query = $model::query()->select($fields);",
          "29:         $is_soft_delete = $data_type->is_soft_delete;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:         $is_roles = false;",
          "28:         $field_identify_related_user = null;",
          "29:         $roles_can_see_all_data = [];",
          "31:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "33:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "35:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "36:         $user_roles = auth()->user()->roles;",
          "38:         foreach ($user_roles as $key => $user_role) {",
          "39:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "40:         };",
          "42:         $is_field = in_array($field_identify_related_user, array_merge($fields, $fields_data_identifier));",
          "47:         if (!$is_roles) {",
          "48:             if ($is_field) {",
          "49:                 $query = $model::query()->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "50:             }",
          "51:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:     public static function clientSideWithModel($data_type, $builder_params, $only_data_soft_delete = false)",
          "74:     {",
          "75:         $data_rows = collect($data_type->dataRows);",
          "76:         $fields = collect($data_type->dataRows)->where('browse', 1)->pluck('field')->all();",
          "77:         $ids = collect($data_type->dataRows)->where('field', 'id')->pluck('field')->all();",
          "78:         $field_manytomany = [];",
          "80:         foreach ($data_rows as $key => $data_row) {",
          "81:             if (isset($data_row['relation']) && $data_row['relation']['relation_type'] == 'belongs_to_many') {",
          "82:                 $field_manytomany[] = $data_row['field'];",
          "83:             }",
          "84:         }",
          "88:         $model = app($data_type->model_name);",
          "89:         $order_field = $builder_params['order_field'];",
          "",
          "[Removed Lines]",
          "86:         $fields = array_diff(array_merge($fields, $ids), $field_manytomany);",
          "",
          "[Added Lines]",
          "100:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "106:         $is_roles = false;",
          "107:         $field_identify_related_user = null;",
          "108:         $roles_can_see_all_data = [];",
          "110:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "112:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "114:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "115:         $user_roles = auth()->user()->roles;",
          "117:         foreach ($user_roles as $key => $user_role) {",
          "118:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "119:         };",
          "121:         $is_field = in_array($field_identify_related_user, array_merge($fields, $fields_data_identifier));",
          "129:         $fields = array_diff(array_merge($fields, $ids, $fields_data_identifier), $field_manytomany);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "94:         if ($order_field) {",
          "95:             $data = $model::query()->select($fields)->orderBy($order_field, $order_direction);",
          "96:         } else {",
          "97:             $data = $model::query()->select($fields);",
          "98:         }",
          "100:         $is_soft_delete = $data_type->is_soft_delete;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:             if (!$is_roles) {",
          "140:                 if ($is_field) {",
          "141:                     $data = $model::query()->select($fields)->orderBy($order_field, $order_direction)->where($field_identify_related_user, auth()->user()->id);",
          "142:                 }",
          "143:             }",
          "146:             if (!$is_roles) {",
          "147:                 if ($is_field) {",
          "148:                     $data = $model::query()->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "149:                 }",
          "150:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "153:     public static function serverSideWithQueryBuilder($data_type, $builder_params, $only_data_soft_delete = false)",
          "154:     {",
          "155:         $fields = collect($data_type->dataRows)->where('browse', 1)->pluck('field')->all();",
          "156:         $ids = collect($data_type->dataRows)->where('field', 'id')->pluck('field')->all();",
          "159:         $limit = $builder_params['limit'];",
          "160:         $page = $builder_params['page'];",
          "",
          "[Removed Lines]",
          "157:         $fields = array_merge($fields, $ids);",
          "",
          "[Added Lines]",
          "208:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "211:         $fields = array_merge($fields, $ids, $fields_data_identifier);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "164:         $filter_operator = $builder_params['filter_operator'];",
          "165:         $filter_value = $builder_params['filter_value'];",
          "167:         $query = DB::table($data_type->name)->select($fields);",
          "170:         $is_soft_delete = $data_type->is_soft_delete;",
          "171:         if ($is_soft_delete) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:         $is_roles = false;",
          "222:         $field_identify_related_user = null;",
          "223:         $roles_can_see_all_data = [];",
          "225:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "227:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "229:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "230:         $user_roles = auth()->user()->roles;",
          "232:         foreach ($user_roles as $key => $user_role) {",
          "233:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "234:         };",
          "236:         $is_field = in_array($field_identify_related_user, array_merge($fields, $fields_data_identifier));",
          "239:         if (!$is_roles) {",
          "240:             if ($is_field) {",
          "241:                 $query = DB::table($data_type->name)->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "242:             }",
          "243:         }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "223:     public static function clientSideWithQueryBuilder($data_type, $builder_params, $only_data_soft_delete = false)",
          "224:     {",
          "225:         $data_rows = collect($data_type->dataRows);",
          "226:         $fields = $data_rows->where('browse', 1)->pluck('field')->all();",
          "227:         $ids = $data_rows->where('field', 'id')->pluck('field')->all();",
          "228:         $field_manytomany = [];",
          "230:         foreach ($data_rows as $key => $data_row) {",
          "231:             if (isset($data_row['relation']) && $data_row['relation']['relation_type'] == 'belongs_to_many') {",
          "232:                 $field_manytomany[] = $data_row['field'];",
          "233:             }",
          "234:         }",
          "237:         $order_field = $builder_params['order_field'];",
          "238:         $order_direction = $builder_params['order_direction'];",
          "",
          "[Removed Lines]",
          "236:         $fields = array_diff(array_merge($fields, $ids), $field_manytomany);",
          "",
          "[Added Lines]",
          "301:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "306:         $is_roles = false;",
          "307:         $field_identify_related_user = null;",
          "308:         $roles_can_see_all_data = [];",
          "310:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "312:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "314:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "315:         $user_roles = auth()->user()->roles;",
          "317:         foreach ($user_roles as $key => $user_role) {",
          "318:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "319:         };",
          "327:         $is_field = in_array($field_identify_related_user, array_merge($fields, $fields_data_identifier));",
          "328:         $fields = array_diff(array_merge($fields, $ids, $fields_data_identifier), $field_manytomany);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "303:             return $record;",
          "304:         });",
          "306:         $data = [];",
          "308:         foreach ($records as $row) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:         if (!$is_roles) {",
          "399:             if($is_field){",
          "400:                 foreach ($records as $key => $record) {",
          "401:                     if (isset($record->{$field_identify_related_user}) &&",
          "402:                         $record->{$field_identify_related_user} != auth()->user()->id) {",
          "403:                         unset($records[$key]);",
          "404:                     }",
          "405:                 }",
          "406:             }",
          "407:         }",
          "",
          "---------------"
        ],
        "src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php||src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php": [
          "File: src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php -> src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Illuminate\\Database\\Migrations\\Migration;",
          "4: use Illuminate\\Database\\Schema\\Blueprint;",
          "5: use Illuminate\\Support\\Facades\\Schema;",
          "7: class AlterTableBadasoPermissionsTables extends Migration",
          "8: {",
          "14:     public function up()",
          "15:     {",
          "16:         try {",
          "17:             Schema::table(config('badaso.database.prefix') . 'permissions', function (Blueprint $table) {",
          "18:                 $table->string('roles_can_see_all_data')->after('is_public')->nullable();",
          "19:                 $table->string('field_identify_related_user')->after('roles_can_see_all_data')->nullable();",
          "20:             });",
          "21:         } catch (PDOException $ex) {",
          "22:             $this->down();",
          "24:             throw $ex;",
          "25:         }",
          "26:     }",
          "33:     public function down()",
          "34:     {",
          "36:     }",
          "37: }",
          "",
          "---------------"
        ],
        "src/Models/Permission.php||src/Models/Permission.php": [
          "File: src/Models/Permission.php -> src/Models/Permission.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     public static function generateFor($table_name, $is_maintenance = false)",
          "28:     {",
          "29:         $permissions = [];",
          "36:         if ($is_maintenance) {",
          "38:         }",
          "40:         $administrator = Role::where('name', 'administrator')->firstOrFail();",
          "",
          "[Removed Lines]",
          "30:         $permissions[] = self::firstOrCreate(['key' => 'browse_'.$table_name, 'description' => 'Browse '.$table_name, 'table_name' => $table_name]);",
          "31:         $permissions[] = self::firstOrCreate(['key' => 'read_'.$table_name, 'description' => 'Read '.$table_name, 'table_name' => $table_name]);",
          "32:         $permissions[] = self::firstOrCreate(['key' => 'edit_'.$table_name, 'description' => 'Edit '.$table_name, 'table_name' => $table_name]);",
          "33:         $permissions[] = self::firstOrCreate(['key' => 'add_'.$table_name, 'description' => 'Add '.$table_name, 'table_name' => $table_name]);",
          "34:         $permissions[] = self::firstOrCreate(['key' => 'delete_'.$table_name, 'description' => 'Delete '.$table_name, 'table_name' => $table_name]);",
          "37:             $permissions[] = self::firstOrCreate(['key' => 'maintenance_'.$table_name, 'description' => 'Maintenance '.$table_name, 'table_name' => $table_name]);",
          "",
          "[Added Lines]",
          "30:         $permissions[] = self::firstOrCreate(['key' => 'browse_'.$table_name, 'description' => 'Browse '.$table_name, 'table_name' => $table_name, 'roles_can_see_all_data' => '[\"administrator\"]', 'field_identify_related_user' => 'user_id']);",
          "31:         $permissions[] = self::firstOrCreate(['key' => 'read_'.$table_name, 'description' => 'Read '.$table_name, 'table_name' => $table_name, 'roles_can_see_all_data' => '[\"administrator\"]', 'field_identify_related_user' => 'user_id']);",
          "32:         $permissions[] = self::firstOrCreate(['key' => 'edit_'.$table_name, 'description' => 'Edit '.$table_name, 'table_name' => $table_name, 'roles_can_see_all_data' => '[\"administrator\"]', 'field_identify_related_user' => 'user_id']);",
          "33:         $permissions[] = self::firstOrCreate(['key' => 'add_'.$table_name, 'description' => 'Add '.$table_name, 'table_name' => $table_name, 'roles_can_see_all_data' => '[\"administrator\"]', 'field_identify_related_user' => 'user_id']);",
          "34:         $permissions[] = self::firstOrCreate(['key' => 'delete_'.$table_name, 'description' => 'Delete '.$table_name, 'table_name' => $table_name, 'roles_can_see_all_data' => '[\"administrator\"]', 'field_identify_related_user' => 'user_id']);",
          "37:             $permissions[] = self::firstOrCreate(['key' => 'maintenance_'.$table_name, 'description' => 'Maintenance '.$table_name, 'table_name' => $table_name, 'roles_can_see_all_data' => '[\"administrator\"]', 'field_identify_related_user' => 'user_id']);",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoDataIdentifier.vue||src/resources/js/components/BadasoDataIdentifier.vue": [
          "File: src/resources/js/components/BadasoDataIdentifier.vue -> src/resources/js/components/BadasoDataIdentifier.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <template>",
          "2:   <vs-input type=\"hidden\" :value=\"value\" @input=\"handleInput($event)\" />",
          "3: </template>",
          "5: <script>",
          "6: export default {",
          "7:   name: \"BadasoDataIdentifier\",",
          "8:   components: {},",
          "9:   data: () => ({}),",
          "10:   props: {",
          "11:     size: {",
          "12:       type: String,",
          "13:       default: \"12\",",
          "14:     },",
          "15:     label: {",
          "16:       type: String,",
          "17:       default: \"Text\",",
          "18:     },",
          "19:     placeholder: {",
          "20:       type: String,",
          "21:       default: \"Text\",",
          "22:     },",
          "23:     value: {",
          "24:       type: String,",
          "25:       required: true,",
          "26:       default: \"\",",
          "27:     },",
          "28:     additionalInfo: {",
          "29:       type: String,",
          "30:       default: \"\",",
          "31:     },",
          "32:     alert: {",
          "33:       type: String || Array,",
          "34:       default: \"\",",
          "35:     },",
          "36:   },",
          "37:   methods: {",
          "38:     handleInput(val) {",
          "39:       this.$emit(\"input\", val);",
          "40:     },",
          "41:   },",
          "42: };",
          "43: </script>",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js": [
          "File: src/resources/js/lang/modules/en.js -> src/resources/js/lang/modules/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "849:       alwaysAllow: \"Always Allow\",",
          "850:       isPublic: \"Is Public\",",
          "851:       action: \"Action\",",
          "852:     },",
          "853:     footer: {",
          "854:       descriptionTitle: \"Registries\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "852:       rolesCanSeeAllData: \"Roles Can See All Data\",",
          "853:       fieldIdentifyRelatedUser: \"Field Identify Related User\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "892:           title: \"Table Name\",",
          "893:           placeholder: \"Table Name\",",
          "894:         },",
          "895:       },",
          "896:       button: \"Save\",",
          "897:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "897:         rolesCanSeeAllData: {",
          "898:           title: \"Role can see all data\",",
          "899:           placeholder: \"Role can see all data\",",
          "900:         },",
          "901:         fieldIdentifyRelatedUser: {",
          "902:           title: \"Column for identify user related data\",",
          "903:           placeholder: \"Column for identify user related data\",",
          "904:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "911:         no: \"No\",",
          "912:       },",
          "913:       button: \"Edit\",",
          "914:     },",
          "915:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "924:       rolesCanSeeAllData: \"Roles Can See All Data\",",
          "925:       fieldIdentifyRelatedUser: \"Field Identify Related User\"",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "822:       alwaysAllow: \"Selalu diizinkan\",",
          "823:       isPublic: \"Publik\",",
          "824:       action: \"Aksi\",",
          "825:     },",
          "826:     help: {",
          "827:       alwaysAllow:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "825:       rolesCanSeeAllData: \"Role yang dapat melihat semua data\",",
          "826:       fieldIdentifyRelatedUser: \"Kolom relasi untuk identifikasi data user\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "870:           title: \"Nama Tabel\",",
          "871:           placeholder: \"Nama Tabel\",",
          "872:         },",
          "873:       },",
          "874:       button: \"Simpan\",",
          "875:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "875:         rolesCanSeeAllData: {",
          "876:           title: \"Role dapat melihat semua data\",",
          "877:           placeholder: \"Role dapat melihat semua data\",",
          "878:         },",
          "879:         fieldIdentifyRelatedUser: {",
          "880:           title: \"Kolom relasi untuk identifikasi data user\",",
          "881:           placeholder: \"Kolom relasi untuk identifikasi data user\",",
          "882:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "889:         no: \"Tidak\",",
          "890:       },",
          "891:       button: \"Ubah\",",
          "892:     },",
          "893:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "902:       rolesCanSeeAllData: \"Role yang dapat melihat semua data\",",
          "903:       fieldIdentifyRelatedUser: \"Kolom relasi untuk identifikasi data user\"",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue": [
          "File: src/resources/js/pages/crud-generated/add.vue -> src/resources/js/pages/crud-generated/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:                       errors[$caseConvert.stringSnakeToCamel(dataRow.field)]",
          "234:                     \"",
          "235:                   ></badaso-hidden>",
          "236:                   <badaso-checkbox",
          "237:                     v-if=\"dataRow.type == 'checkbox'\"",
          "238:                     :label=\"dataRow.displayName\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236:                   <badaso-data-identifier",
          "237:                     v-if=\"dataRow.type == 'data_identifier'\"",
          "238:                     :label=\"dataRow.displayName\"",
          "239:                     :placeholder=\"dataRow.displayName\"",
          "240:                     v-model=\"dataRow.value\"",
          "241:                     :alert=\"",
          "242:                       errors[$caseConvert.stringSnakeToCamel(dataRow.field)]",
          "243:                     \"",
          "244:                   ></badaso-data-identifier>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "420:     isMaintenance: false,",
          "421:     dataLength: 0,",
          "422:     pathname: location.pathname,",
          "423:   }),",
          "424:   mounted() {",
          "425:     this.getDataType();",
          "426:     this.getRelationDataBySlug();",
          "427:     this.requestObjectStoreData();",
          "428:   },",
          "429:   methods: {",
          "430:     submitForm() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "432:     userId: \"\",",
          "438:     this.getUser();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "437:         if (row && row.value || row.type == 'switch' ||  row.type == 'slider') {",
          "438:           dataRows[row.field] = row.value;",
          "439:         }",
          "440:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "451:         if (row.type == 'data_identifier'){",
          "452:           dataRows[row.field] = this.userId;",
          "453:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "555:         }",
          "556:       });",
          "557:     },",
          "558:   },",
          "559:   computed: {",
          "560:     isOnline: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "572:     getUser() {",
          "573:       this.errors = {};",
          "574:       this.$openLoader();",
          "575:       this.$api.badasoAuthUser",
          "576:         .user({})",
          "577:         .then((response) => {",
          "578:           this.$closeLoader();",
          "579:           this.userId = response.data.user.id;",
          "580:         })",
          "581:         .catch((error) => {",
          "582:           this.errors = error.errors;",
          "583:           this.$closeLoader();",
          "584:           this.$vs.notify({",
          "585:             title: this.$t(\"alert.danger\"),",
          "586:             text: error.message,",
          "587:             color: \"danger\",",
          "588:           });",
          "589:         });",
          "590:     }",
          "",
          "---------------"
        ],
        "src/resources/js/pages/permission-management/browse.vue||src/resources/js/pages/permission-management/browse.vue": [
          "File: src/resources/js/pages/permission-management/browse.vue -> src/resources/js/pages/permission-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:                 <vs-th sort-key=\"tableName\">",
          "54:                   {{ $t(\"permission.header.tableName\") }}",
          "55:                 </vs-th>",
          "56:                 <vs-th sort-key=\"alwaysAllow\">",
          "57:                   {{ $t(\"permission.header.alwaysAllow\") }}",
          "58:                 </vs-th>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:                 <vs-th sort-key=\"rolesCanSeeAllData\">",
          "57:                   {{ $t(\"permission.header.rolesCanSeeAllData\") }}",
          "58:                 </vs-th>",
          "59:                 <vs-th sort-key=\"fieldIdentifyRelatedUser\">",
          "60:                   {{ $t(\"permission.header.fieldIdentifyRelatedUser\") }}",
          "61:                 </vs-th>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:                   <vs-td :data=\"data[indextr].tableName\">",
          "76:                     {{ data[indextr].tableName }}",
          "77:                   </vs-td>",
          "79:                   <vs-td :data=\"data[indextr].alwaysAllow\">",
          "80:                     <span v-if=\"data[indextr].alwaysAllow == 1\">Yes</span>",
          "81:                     <span v-else>No</span>",
          "82:                   </vs-td>",
          "83:                   <vs-td :data=\"data[indextr].isPublic\">",
          "84:                     <span v-if=\"data[indextr].isPublic == 1\">Yes</span>",
          "85:                     <span v-else>No</span>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:                   <vs-td :data=\"data[indextr].rolesCanSeeAllData\">",
          "86:                     {{ data[indextr].rolesCanSeeAllData }}",
          "87:                   </vs-td>",
          "89:                   <vs-td :data=\"data[indextr].fieldIdentifyRelatedUser\">",
          "90:                     {{ data[indextr].fieldIdentifyRelatedUser }}",
          "91:                   </vs-td>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189:           this.$closeLoader();",
          "190:           this.selected = [];",
          "191:           this.permissions = response.data.permissions;",
          "192:         })",
          "193:         .catch((error) => {",
          "194:           this.$closeLoader();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:           this.permissions.map((value) => {",
          "208:             if (value.rolesCanSeeAllData){",
          "209:               let rolesAllData = JSON.parse(value.rolesCanSeeAllData)",
          "210:               value.rolesCanSeeAllData = rolesAllData.toString()",
          "211:             }",
          "212:             return value;",
          "213:           })",
          "",
          "---------------"
        ],
        "src/resources/js/pages/permission-management/edit.vue||src/resources/js/pages/permission-management/edit.vue": [
          "File: src/resources/js/pages/permission-management/edit.vue -> src/resources/js/pages/permission-management/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:               :placeholder=\"$t('permission.edit.field.tableName.placeholder')\"",
          "47:               :alert=\"errors.tableName\"",
          "48:             ></badaso-text>",
          "49:           </vs-row>",
          "50:         </vs-card>",
          "51:       </vs-col>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:             <badaso-select-multiple",
          "50:               :label=\"$t('permission.edit.field.rolesCanSeeAllData.title')\"",
          "51:               :placeholder=\"$t('permission.edit.field.rolesCanSeeAllData.placeholder')\"",
          "52:               v-model=\"permission.rolesCanSeeAllData\"",
          "53:               size=\"12\"",
          "54:               :items=\"roleData ? roleData : []\"",
          "55:             ></badaso-select-multiple>",
          "56:             <badaso-select",
          "57:               :label=\"$t('permission.edit.field.fieldIdentifyRelatedUser.title')\"",
          "58:               :placeholder=\"$t('permission.edit.field.fieldIdentifyRelatedUser.placeholder')\"",
          "59:               v-model=\"permission.fieldIdentifyRelatedUser\"",
          "60:               size=\"12\"",
          "61:               :items=\"fieldData ? fieldData : []\"",
          "62:             ></badaso-select>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:       description: \"\",",
          "87:       alwaysAllow: false,",
          "88:     },",
          "89:   }),",
          "90:   mounted() {",
          "91:     this.getPermissionDetail();",
          "92:   },",
          "93:   methods: {",
          "94:     getPermissionDetail() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:     roleData: [],",
          "104:     selected: [],",
          "105:     fieldData: [],",
          "106:     table: \"\",",
          "110:     this.getRole();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:             this.permission.description == null",
          "107:               ? \"\"",
          "108:               : this.permission.description;",
          "109:         })",
          "110:         .catch((error) => {",
          "111:           this.$closeLoader();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:           this.getFieldTable(this.permission.tableName);",
          "129:           this.permission.rolesCanSeeAllData = this.permission.rolesCanSeeAllData ? JSON.parse(this.permission.rolesCanSeeAllData) : [];",
          "130:         })",
          "131:         .catch((error) => {",
          "132:           this.$closeLoader();",
          "133:           this.$vs.notify({",
          "134:             title: this.$t(\"alert.danger\"),",
          "135:             text: error.message,",
          "136:             color: \"danger\",",
          "137:           });",
          "138:         });",
          "139:     },",
          "140:     getFieldTable(table) {",
          "141:       this.$api.badasoCrud",
          "142:         .read({",
          "143:           table: table,",
          "144:         })",
          "145:         .then((response) => {",
          "146:             this.fieldData = response.data.crud.dataRows;",
          "147:             for(let key in this.fieldData){",
          "148:               if (this.fieldData[key].displayName){",
          "149:                 this.fieldData[key].label = this.fieldData[key].field",
          "150:                 delete this.fieldData[key].displayName",
          "151:               }",
          "152:               if (this.fieldData[key].field){",
          "153:                 this.fieldData[key].value = this.fieldData[key].field",
          "154:                 delete this.fieldData[key].field",
          "155:               }",
          "156:             }",
          "157:             this.fieldData.push({",
          "158:               label: \"user_id\",",
          "159:               value: \"user_id\"",
          "160:             })",
          "161:         })",
          "162:         .catch(() => {",
          "163:           this.$closeLoader();",
          "164:         });",
          "165:     },",
          "166:     getRole() {",
          "167:       this.$api.badasoRole",
          "168:         .browse()",
          "169:         .then((response) => {",
          "170:           this.$closeLoader();",
          "171:           this.roleData = response.data.roles;",
          "172:           for(let key in this.roleData){",
          "173:             if (this.roleData[key].displayName){",
          "174:               this.roleData[key].label = this.roleData[key].displayName",
          "175:               delete this.roleData[key].displayName",
          "176:             }",
          "177:             if (this.roleData[key].name){",
          "178:               this.roleData[key].value = this.roleData[key].name",
          "179:               delete this.roleData[key].name",
          "180:             }",
          "181:           }",
          "",
          "---------------"
        ],
        "src/resources/js/pages/permission-management/read.vue||src/resources/js/pages/permission-management/read.vue": [
          "File: src/resources/js/pages/permission-management/read.vue -> src/resources/js/pages/permission-management/read.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:               <th>{{ $t(\"permission.detail.tableName\") }}</th>",
          "35:               <td>{{ permission.tableName }}</td>",
          "36:             </tr>",
          "37:             <tr>",
          "38:               <th>{{ $t(\"permission.detail.alwaysAllow.title\") }}</th>",
          "39:               <td>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:             <tr>",
          "38:               <th>{{ $t(\"permission.detail.rolesCanSeeAllData\") }}</th>",
          "39:               <td>{{ permission.rolesCanSeeAllData }}</td>",
          "40:             </tr>",
          "41:             <tr>",
          "42:               <th>{{ $t(\"permission.detail.fieldIdentifyRelatedUser\") }}</th>",
          "43:               <td>{{ permission.fieldIdentifyRelatedUser }}</td>",
          "44:             </tr>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:         .then((response) => {",
          "91:           this.$closeLoader();",
          "92:           this.permission = response.data.permission;",
          "93:         })",
          "94:         .catch((error) => {",
          "95:           this.$closeLoader();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:           this.permission.rolesCanSeeAllData = JSON.parse(this.permission.rolesCanSeeAllData).toString()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "628f998b3cf07d6aa95250fcf3d77ba49cebe335",
      "candidate_info": {
        "commit_hash": "628f998b3cf07d6aa95250fcf3d77ba49cebe335",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/628f998b3cf07d6aa95250fcf3d77ba49cebe335",
        "files": [
          "src/Migrations/2023_02_24_042847_alter_badaso_users_tables.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Migrations/2023_02_24_042847_alter_badaso_users_tables.php||src/Migrations/2023_02_24_042847_alter_badaso_users_tables.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Migrations/2023_02_24_042847_alter_badaso_users_tables.php||src/Migrations/2023_02_24_042847_alter_badaso_users_tables.php": [
          "File: src/Migrations/2023_02_24_042847_alter_badaso_users_tables.php -> src/Migrations/2023_02_24_042847_alter_badaso_users_tables.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     public function up()",
          "15:     {",
          "17:             $table->timestamp('last_sent_token_at')->nullable()->after('remember_token');",
          "18:         });",
          "19:     }",
          "",
          "[Removed Lines]",
          "16:         Schema::table(config('badaso.database.prefix') . 'users', function (Blueprint $table) {",
          "",
          "[Added Lines]",
          "16:         Schema::table(config('badaso.database.prefix').'users', function (Blueprint $table) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:     public function down()",
          "27:     {",
          "29:     }",
          "30: }",
          "",
          "[Removed Lines]",
          "28:         Schema::dropIfExists(config('badaso.database.prefix') . 'users');",
          "",
          "[Added Lines]",
          "28:         Schema::dropIfExists(config('badaso.database.prefix').'users');",
          "",
          "---------------"
        ]
      }
    }
  ]
}