{
  "cve_id": "CVE-2023-45348",
  "cve_desc": "Apache Airflow, versions 2.7.0 and 2.7.1, is affected by a vulnerability that allows an authenticated user to retrieve sensitive configuration information when the \"expose_config\" option is set to \"non-sensitive-only\". The `expose_config` option is False by default.\nIt is recommended to upgrade to a version that is not affected.",
  "repo": "apache/airflow",
  "patch_hash": "a4a0b5dd3d0ce05311c70bb9a32b66a650dbc0b4",
  "patch_info": {
    "commit_hash": "a4a0b5dd3d0ce05311c70bb9a32b66a650dbc0b4",
    "repo": "apache/airflow",
    "commit_url": "https://github.com/apache/airflow/commit/a4a0b5dd3d0ce05311c70bb9a32b66a650dbc0b4",
    "files": [
      "airflow/api_connexion/endpoints/config_endpoint.py",
      "airflow/configuration.py",
      "tests/api_connexion/endpoints/test_config_endpoint.py"
    ],
    "message": "Check if the lower of provided values are sensitives in config endpoint (#34712)\n\n* Check if the lower of provided values are sensitives in config endpoint\n\n* update unit test\n\n* ensure that all values in sensitive dict are in lower characters\n\n(cherry picked from commit f044589b685855a8fce8f5376bea2564c5a001f7)",
    "before_after_code_files": [
      "airflow/api_connexion/endpoints/config_endpoint.py||airflow/api_connexion/endpoints/config_endpoint.py",
      "airflow/configuration.py||airflow/configuration.py",
      "tests/api_connexion/endpoints/test_config_endpoint.py||tests/api_connexion/endpoints/test_config_endpoint.py"
    ]
  },
  "patch_diff": {
    "airflow/api_connexion/endpoints/config_endpoint.py||airflow/api_connexion/endpoints/config_endpoint.py": [
      "File: airflow/api_connexion/endpoints/config_endpoint.py -> airflow/api_connexion/endpoints/config_endpoint.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "123:                 \"Config not found.\", detail=f\"The option [{section}/{option}] is not found in config.\"",
      "124:             )",
      "127:             value = \"< hidden >\"",
      "128:         else:",
      "129:             value = conf.get(section, option)",
      "",
      "[Removed Lines]",
      "126:         if (section, option) in conf.sensitive_config_values:",
      "",
      "[Added Lines]",
      "126:         if (section.lower(), option.lower()) in conf.sensitive_config_values:",
      "",
      "---------------"
    ],
    "airflow/configuration.py||airflow/configuration.py": [
      "File: airflow/configuration.py -> airflow/configuration.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "311:             for s, s_c in self.configuration_description.items()",
      "312:             for k, item in s_c.get(\"options\").items()  # type: ignore[union-attr]",
      "313:         }",
      "315:         depr_option = {self.deprecated_options[x][:-1] for x in sensitive if x in self.deprecated_options}",
      "316:         depr_section = {",
      "317:             (self.deprecated_sections[s][0], k) for s, k in sensitive if s in self.deprecated_sections",
      "",
      "[Removed Lines]",
      "314:         sensitive = {(section, key) for (section, key), v in flattened.items() if v.get(\"sensitive\") is True}",
      "",
      "[Added Lines]",
      "314:         sensitive = {",
      "315:             (section.lower(), key.lower())",
      "316:             for (section, key), v in flattened.items()",
      "317:             if v.get(\"sensitive\") is True",
      "318:         }",
      "",
      "---------------"
    ],
    "tests/api_connexion/endpoints/test_config_endpoint.py||tests/api_connexion/endpoints/test_config_endpoint.py": [
      "File: tests/api_connexion/endpoints/test_config_endpoint.py -> tests/api_connexion/endpoints/test_config_endpoint.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "247:         return_value=MOCK_CONF_WITH_SENSITIVE_VALUE,",
      "248:     )",
      "249:     @conf_vars({(\"webserver\", \"expose_config\"): \"non-sensitive-only\"})",
      "251:         response = self.client.get(",
      "253:             headers={\"Accept\": \"text/plain\"},",
      "254:             environ_overrides={\"REMOTE_USER\": \"test\"},",
      "255:         )",
      "256:         assert response.status_code == 200",
      "257:         expected = textwrap.dedent(",
      "261:         \"\"\"",
      "262:         )",
      "263:         assert expected == response.data.decode()",
      "",
      "[Removed Lines]",
      "250:     def test_should_respond_200_text_plain_with_non_sensitive_only(self, mock_as_dict):",
      "252:             \"/api/v1/config/section/core/option/sql_alchemy_conn\",",
      "258:             \"\"\"\\",
      "259:         [core]",
      "260:         sql_alchemy_conn = < hidden >",
      "",
      "[Added Lines]",
      "250:     @pytest.mark.parametrize(",
      "251:         \"section, option\",",
      "252:         [",
      "253:             (\"core\", \"sql_alchemy_conn\"),",
      "254:             (\"core\", \"SQL_ALCHEMY_CONN\"),",
      "255:             (\"corE\", \"sql_alchemy_conn\"),",
      "256:             (\"CORE\", \"sql_alchemy_conn\"),",
      "257:         ],",
      "258:     )",
      "259:     def test_should_respond_200_text_plain_with_non_sensitive_only(self, mock_as_dict, section, option):",
      "261:             f\"/api/v1/config/section/{section}/option/{option}\",",
      "267:             f\"\"\"\\",
      "268:         [{section}]",
      "269:         {option} = < hidden >",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7232953b22eff615a6ff94772f770fa50fcc7c01",
      "candidate_info": {
        "commit_hash": "7232953b22eff615a6ff94772f770fa50fcc7c01",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/7232953b22eff615a6ff94772f770fa50fcc7c01",
        "files": [
          "airflow/www/static/js/dag/grid/dagRuns/Bar.tsx"
        ],
        "message": "correcting wrong time showing in grid view (#34179)\n\n* correcting wrong time showing in grid view\n\n* lint errors resolved\n\n* lint errors resolved\n\n(cherry picked from commit 8871f9591cc164f7692bd3fa0088f5e565d7d498)",
        "before_after_code_files": [
          "airflow/www/static/js/dag/grid/dagRuns/Bar.tsx||airflow/www/static/js/dag/grid/dagRuns/Bar.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/34775"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/www/static/js/dag/grid/dagRuns/Bar.tsx||airflow/www/static/js/dag/grid/dagRuns/Bar.tsx": [
          "File: airflow/www/static/js/dag/grid/dagRuns/Bar.tsx -> airflow/www/static/js/dag/grid/dagRuns/Bar.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import { useContainerRef } from \"src/context/containerRef\";",
          "27: import Time from \"src/components/Time\";",
          "28: import type { SelectionProps } from \"src/dag/useSelection\";",
          "30: import RunTypeIcon from \"src/components/RunTypeIcon\";",
          "32: import DagRunTooltip from \"./Tooltip\";",
          "33: import type { RunWithDuration } from \".\";",
          "",
          "[Removed Lines]",
          "29: import { hoverDelay, getStatusBackgroundColor } from \"src/utils\";",
          "",
          "[Added Lines]",
          "29: import {",
          "30:   hoverDelay,",
          "31:   getStatusBackgroundColor,",
          "32:   getDagRunLabel,",
          "33: } from \"src/utils\";",
          "36: import { useGridData } from \"src/api\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   isSelected,",
          "52:   onSelect,",
          "53: }: Props) => {",
          "55:   const containerRef = useContainerRef();",
          "56:   const { colors } = useTheme();",
          "57:   const hoverBlue = `${colors.blue[100]}50`;",
          "",
          "[Removed Lines]",
          "54:   const { runType, runId, duration, state, executionDate } = run;",
          "",
          "[Added Lines]",
          "59:   const { runType, runId, duration, state } = run;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:     inverseIndex === 4 || (inverseIndex > 4 && (inverseIndex - 4) % 10 === 0);",
          "88:   const color = stateColors[state];",
          "90:   return (",
          "91:     <Box",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:   const {",
          "95:     data: { ordering },",
          "96:   } = useGridData();",
          "97:   const dagRun = run;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "159:             transform=\"rotate(-30deg) translateX(28px)\"",
          "160:             mt=\"-23px !important\"",
          "161:           >",
          "163:           </Text>",
          "164:           <Box borderLeftWidth={1} opacity={0.7} height=\"100px\" zIndex={0} />",
          "165:         </VStack>",
          "",
          "[Removed Lines]",
          "162:             <Time dateTime={executionDate} format=\"MMM DD, HH:mm\" />",
          "",
          "[Added Lines]",
          "171:             <Time",
          "172:               dateTime={getDagRunLabel({ dagRun, ordering })}",
          "173:               format=\"MMM DD, HH:mm\"",
          "174:             />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4230098a59d1ed77a51289a100caa32d3c482532",
      "candidate_info": {
        "commit_hash": "4230098a59d1ed77a51289a100caa32d3c482532",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/4230098a59d1ed77a51289a100caa32d3c482532",
        "files": [
          "airflow/www/static/js/dag/grid/index.tsx"
        ],
        "message": "Change two whitespaces to one (#34519)\n\n(cherry picked from commit a1bd8719581f2ef1fb25aeaa89e3520e8bc81172)",
        "before_after_code_files": [
          "airflow/www/static/js/dag/grid/index.tsx||airflow/www/static/js/dag/grid/index.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/34775"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/www/static/js/dag/grid/index.tsx||airflow/www/static/js/dag/grid/index.tsx": [
          "File: airflow/www/static/js/dag/grid/index.tsx -> airflow/www/static/js/dag/grid/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:           zIndex={2}",
          "154:           top={-8}",
          "155:           onClick={onPanelToggle}",
          "157:           aria-label={isPanelOpen ? \"Show Details\" : \"Hide Details\"}",
          "158:           icon={<MdDoubleArrow />}",
          "159:           transform={isPanelOpen ? undefined : \"rotateZ(180deg)\"}",
          "",
          "[Removed Lines]",
          "156:           title={`${isPanelOpen ? \"Hide \" : \"Show \"} Details Panel`}",
          "",
          "[Added Lines]",
          "156:           title={`${isPanelOpen ? \"Hide\" : \"Show\"} Details Panel`}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5b28c4515380bfbec1ced61cee374164c208a944",
      "candidate_info": {
        "commit_hash": "5b28c4515380bfbec1ced61cee374164c208a944",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/5b28c4515380bfbec1ced61cee374164c208a944",
        "files": [
          "airflow/utils/state.py",
          "docs/apache-airflow/public-airflow-interface.rst",
          "docs/conf.py"
        ],
        "message": "Add state utils to Public Airflow Interface (#34059)\n\n(cherry picked from commit c44e5b5ccc439fbe9a50afcb3d12c6a335518bb3)",
        "before_after_code_files": [
          "airflow/utils/state.py||airflow/utils/state.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/34775"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/utils/state.py||airflow/utils/state.py": [
          "File: airflow/utils/state.py -> airflow/utils/state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: class State:",
          "85:     # Backwards-compat constants for code that does not yet use the enum",
          "86:     # These first three are shared by DagState and TaskState",
          "",
          "[Removed Lines]",
          "83:     \"\"\"Static class with task instance state constants and color methods to avoid hardcoding.\"\"\"",
          "",
          "[Added Lines]",
          "83:     \"\"\"Static class with task instance state constants and color methods to avoid hard-coding.\"\"\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e868785d561ee2747b7b081b3e0558af7504e8d0",
      "candidate_info": {
        "commit_hash": "e868785d561ee2747b7b081b3e0558af7504e8d0",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/e868785d561ee2747b7b081b3e0558af7504e8d0",
        "files": [
          "dev/breeze/src/airflow_breeze/utils/docker_command_utils.py",
          "scripts/ci/docker-compose/_docker.env",
          "scripts/ci/docker-compose/base.yml",
          "scripts/ci/docker-compose/devcontainer.env",
          "scripts/in_container/_in_container_utils.sh"
        ],
        "message": "Support rootless mode for docker. (#34537)\n\nIn case docker is run in rootless mode, the host UID is mapped to root\nuser automatically and host user id is mapped to 100999 (unknown) so\nchanging ownership for created files in rootless mode is problematic\nas it makes the generated files inaccessible\n\n(cherry picked from commit 0631af86525ad98e90cdc0bf120df7192ea2e912)",
        "before_after_code_files": [
          "dev/breeze/src/airflow_breeze/utils/docker_command_utils.py||dev/breeze/src/airflow_breeze/utils/docker_command_utils.py",
          "scripts/ci/docker-compose/_docker.env||scripts/ci/docker-compose/_docker.env",
          "scripts/ci/docker-compose/devcontainer.env||scripts/ci/docker-compose/devcontainer.env",
          "scripts/in_container/_in_container_utils.sh||scripts/in_container/_in_container_utils.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/34775"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "dev/breeze/src/airflow_breeze/utils/docker_command_utils.py||dev/breeze/src/airflow_breeze/utils/docker_command_utils.py": [
          "File: dev/breeze/src/airflow_breeze/utils/docker_command_utils.py -> dev/breeze/src/airflow_breeze/utils/docker_command_utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:     return extra_docker_flags",
          "146: def check_docker_resources(airflow_image_name: str) -> RunCommandResult:",
          "147:     \"\"\"",
          "148:     Check if we have enough resources to run docker. This is done via running script embedded in our image.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146: def is_docker_rootless():",
          "147:     response = run_command(",
          "148:         [\"docker\", \"info\", \"-f\", \"{{println .SecurityOptions}}\"], capture_output=True, check=True, text=True",
          "149:     )",
          "150:     if \"rootless\" in response.stdout.strip():",
          "151:         get_console().print(\"[info]Docker is running in rootless mode.[/]\\n\")",
          "152:         return True",
          "153:     return False",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "569:     set_value_to_default_if_not_set(env, \"COLLECT_ONLY\", \"false\")",
          "570:     set_value_to_default_if_not_set(env, \"DB_RESET\", \"false\")",
          "571:     set_value_to_default_if_not_set(env, \"DEFAULT_BRANCH\", AIRFLOW_BRANCH)",
          "572:     set_value_to_default_if_not_set(env, \"ENABLED_SYSTEMS\", \"\")",
          "573:     set_value_to_default_if_not_set(env, \"ENABLE_TEST_COVERAGE\", \"false\")",
          "574:     set_value_to_default_if_not_set(env, \"HELM_TEST_PACKAGE\", \"\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "582:     set_value_to_default_if_not_set(env, \"DOCKER_IS_ROOTLESS\", \"false\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "704: def perform_environment_checks():",
          "705:     check_docker_is_running()",
          "706:     check_docker_version()",
          "707:     check_docker_compose_version()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "718:     if is_docker_rootless():",
          "719:         os.environ[\"DOCKER_IS_ROOTLESS\"] = \"true\"",
          "",
          "---------------"
        ],
        "scripts/ci/docker-compose/_docker.env||scripts/ci/docker-compose/_docker.env": [
          "File: scripts/ci/docker-compose/_docker.env -> scripts/ci/docker-compose/_docker.env",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: DEFAULT_BRANCH",
          "38: DEFAULT_CONSTRAINTS_BRANCH",
          "39: DEV_MODE",
          "40: ENABLED_SYSTEMS",
          "41: ENABLE_TEST_COVERAGE",
          "42: GITHUB_ACTIONS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: DOCKER_IS_ROOTLESS",
          "",
          "---------------"
        ],
        "scripts/ci/docker-compose/devcontainer.env||scripts/ci/docker-compose/devcontainer.env": [
          "File: scripts/ci/docker-compose/devcontainer.env -> scripts/ci/docker-compose/devcontainer.env",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: DEFAULT_BRANCH=\"main\"",
          "36: DEFAULT_CONSTRAINTS_BRANCH=\"constraints-main\"",
          "37: DEV_MODE=\"true\"",
          "38: ENABLED_SYSTEMS=",
          "39: ENABLE_TEST_COVERAGE=\"false\"",
          "40: GITHUB_ACTIONS=\"false\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: DOCKER_IS_ROOTLESS=\"false\"",
          "",
          "---------------"
        ],
        "scripts/in_container/_in_container_utils.sh||scripts/in_container/_in_container_utils.sh": [
          "File: scripts/in_container/_in_container_utils.sh -> scripts/in_container/_in_container_utils.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #",
          "67: function in_container_fix_ownership() {",
          "68:     if [[ ${HOST_OS:=} == \"linux\" ]]; then",
          "69:         DIRECTORIES_TO_FIX=(",
          "70:             \"/dist\"",
          "71:             \"/files\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:         if [[ ${DOCKER_IS_ROOTLESS=} == \"true\" ]]; then",
          "70:              echo \"${COLOR_YELLOW}Skip fixing ownership of generated files: Docker is rootless${COLOR_RESET}\"",
          "71:              return",
          "72:         fi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "784d162256293466d99da00db06ff1ec8f5d86c8",
      "candidate_info": {
        "commit_hash": "784d162256293466d99da00db06ff1ec8f5d86c8",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/784d162256293466d99da00db06ff1ec8f5d86c8",
        "files": [
          "airflow/configuration.py"
        ],
        "message": "Fix some whitespace (#34632)\n\n(cherry picked from commit 97de019995185cba1e7e63ea525d099ff5c94ea7)",
        "before_after_code_files": [
          "airflow/configuration.py||airflow/configuration.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/34775"
        ],
        "olp_code_files": {
          "patch": [
            "airflow/configuration.py||airflow/configuration.py"
          ],
          "candidate": [
            "airflow/configuration.py||airflow/configuration.py"
          ]
        }
      },
      "candidate_diff": {
        "airflow/configuration.py||airflow/configuration.py": [
          "File: airflow/configuration.py -> airflow/configuration.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1852:                     raise AirflowConfigException(",
          "1853:                         f\"The provider {provider} is attempting to contribute \"",
          "1854:                         f\"configuration section {provider_section} that \"",
          "1857:                         \"cannot contribute options to existing sections or override other \"",
          "1858:                         \"provider's configuration.\",",
          "1859:                         UserWarning,",
          "",
          "[Removed Lines]",
          "1855:                         f\"has already been added before. The source of it: {section_source}.\"",
          "1856:                         \"This is forbidden. A provider can only add new sections. It\"",
          "",
          "[Added Lines]",
          "1855:                         f\"has already been added before. The source of it: {section_source}. \"",
          "1856:                         \"This is forbidden. A provider can only add new sections. It \"",
          "",
          "---------------"
        ]
      }
    }
  ]
}