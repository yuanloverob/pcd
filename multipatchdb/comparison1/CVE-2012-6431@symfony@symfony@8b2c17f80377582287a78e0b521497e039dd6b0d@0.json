{
  "cve_id": "CVE-2012-6431",
  "cve_desc": "Symfony 2.0.x before 2.0.20 does not process URL encoded data consistently within the Routing and Security components, which allows remote attackers to bypass intended URI restrictions via a doubly encoded string.",
  "repo": "symfony/symfony",
  "patch_hash": "8b2c17f80377582287a78e0b521497e039dd6b0d",
  "patch_info": {
    "commit_hash": "8b2c17f80377582287a78e0b521497e039dd6b0d",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/8b2c17f80377582287a78e0b521497e039dd6b0d",
    "files": [
      "src/Symfony/Bundle/FrameworkBundle/EventListener/RouterListener.php",
      "src/Symfony/Component/Security/Http/HttpUtils.php"
    ],
    "message": "fix double-decoding in the routing system",
    "before_after_code_files": [
      "src/Symfony/Bundle/FrameworkBundle/EventListener/RouterListener.php||src/Symfony/Bundle/FrameworkBundle/EventListener/RouterListener.php",
      "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Bundle/FrameworkBundle/EventListener/RouterListener.php||src/Symfony/Bundle/FrameworkBundle/EventListener/RouterListener.php": [
      "File: src/Symfony/Bundle/FrameworkBundle/EventListener/RouterListener.php -> src/Symfony/Bundle/FrameworkBundle/EventListener/RouterListener.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:         try {",
      "75:             if (null !== $this->logger) {",
      "76:                 $this->logger->info(sprintf('Matched route \"%s\" (parameters: %s)', $parameters['_route'], $this->parametersToString($parameters)));",
      "",
      "[Removed Lines]",
      "73:             $parameters = $this->router->match($request->getPathInfo());",
      "",
      "[Added Lines]",
      "76:             $parameters = $this->router->match(urlencode($request->getPathInfo()));",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php": [
      "File: src/Symfony/Component/Security/Http/HttpUtils.php -> src/Symfony/Component/Security/Http/HttpUtils.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "107:     {",
      "108:         if ('/' !== $path[0]) {",
      "109:             try {",
      "112:                 return $path === $parameters['_route'];",
      "113:             } catch (MethodNotAllowedException $e) {",
      "",
      "[Removed Lines]",
      "110:                 $parameters = $this->router->match($request->getPathInfo());",
      "",
      "[Added Lines]",
      "110:                 $parameters = $this->router->match(urlencode($request->getPathInfo()));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "129:         }",
      "131:         try {",
      "134:             if (isset($parameters['_locale'])) {",
      "135:                 $context->setParameter('_locale', $parameters['_locale']);",
      "",
      "[Removed Lines]",
      "132:             $parameters = $this->router->match($request->getPathInfo());",
      "",
      "[Added Lines]",
      "132:             $parameters = $this->router->match(urlencode($request->getPathInfo()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f300edebe4c27171a4fc7c6dfd0a71f219a6d850",
      "candidate_info": {
        "commit_hash": "f300edebe4c27171a4fc7c6dfd0a71f219a6d850",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/f300edebe4c27171a4fc7c6dfd0a71f219a6d850",
        "files": [
          "UPDATE.md",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Resources/config/localized_routing.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/WebTestCase.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/localized_routes.yml",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/localized_routes_with_forward.yml",
          "src/Symfony/Component/HttpFoundation/RequestMatcher.php",
          "src/Symfony/Component/Security/Http/HttpUtils.php",
          "tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php",
          "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php"
        ],
        "message": "fixes several bugs",
        "before_after_code_files": [
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/Functional/WebTestCase.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/WebTestCase.php",
          "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php",
          "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php",
          "tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php||tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php",
          "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php||tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php"
          ],
          "candidate": [
            "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:         throw new \\RuntimeException('logoutAction() should never be called.');",
          "35:     }",
          "37:     public function profileAction()",
          "38:     {",
          "39:         return new Response('Profile');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:     public function secureAction()",
          "38:     {",
          "39:         throw new \\RuntimeException('secureAction() should never be called.');",
          "40:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/LocalizedRoutesAsPathTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:         $this->assertEquals('Homepage', $client->followRedirect()->text());",
          "27:     }",
          "29:     public function getLocales()",
          "30:     {",
          "31:         return array(array('en'), array('de'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:     public function testAccessRestrictedResource($locale)",
          "33:     {",
          "34:         $client = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => 'localized_routes.yml'));",
          "35:         $client->insulate();",
          "37:         $client->request('GET', '/'.$locale.'/secure/');",
          "38:         $this->assertRedirect($client->getResponse(), '/'.$locale.'/login');",
          "39:     }",
          "44:     public function testAccessRestrictedResourceWithForward($locale)",
          "45:     {",
          "46:         $client = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => 'localized_routes_with_forward.yml'));",
          "47:         $client->insulate();",
          "49:         $crawler = $client->request('GET', '/'.$locale.'/secure/');",
          "50:         $this->assertEquals(1, count($crawler->selectButton('login')), (string) $client->getResponse());",
          "51:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: class SecurityRoutingIntegrationTest extends WebTestCase",
          "15: {",
          "17:     {",
          "19:         $client->request('GET', '/protected_resource');",
          "21:         $this->assertRedirect($client->getResponse(), '/login');",
          "22:     }",
          "25:     {",
          "27:         $client->request('GET', '/unprotected_resource');",
          "30:     }",
          "33:     {",
          "36:         $form = $client->request('GET', '/login')->selectButton('login')->form();",
          "37:         $form['_username'] = 'johannes';",
          "",
          "[Removed Lines]",
          "16:     public function testRoutingErrorIsNotExposedForProtectedResourceWhenAnonymous()",
          "18:         $client = $this->createClient(array('test_case' => 'StandardFormLogin'));",
          "24:     public function testRoutingErrorIsExposedWhenNotProtected()",
          "26:         $client = $this->createClient(array('test_case' => 'StandardFormLogin'));",
          "29:         $this->assertEquals(404, $client->getResponse()->getStatusCode());",
          "32:     public function testRoutingErrorIsNotExposedForProtectedResourceWhenLoggedInWithInsufficientRights()",
          "34:         $client = $this->createClient(array('test_case' => 'StandardFormLogin'));",
          "",
          "[Added Lines]",
          "19:     public function testRoutingErrorIsNotExposedForProtectedResourceWhenAnonymous($config)",
          "21:         $client = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => $config));",
          "22:         $client->insulate();",
          "31:     public function testRoutingErrorIsExposedWhenNotProtected($config)",
          "33:         $client = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => $config));",
          "34:         $client->insulate();",
          "37:         $this->assertEquals(404, $client->getResponse()->getStatusCode(), (string) $client->getResponse());",
          "43:     public function testRoutingErrorIsNotExposedForProtectedResourceWhenLoggedInWithInsufficientRights($config)",
          "45:         $client = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => $config));",
          "46:         $client->insulate();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:         $this->assertNotEquals(404, $client->getResponse()->getStatusCode());",
          "44:     }",
          "46:     protected function setUp()",
          "47:     {",
          "48:         parent::setUp();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:     public function getConfigs()",
          "59:     {",
          "60:         return array(array('config.yml'), array('routes_as_path.yml'));",
          "61:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/Functional/WebTestCase.php||src/Symfony/Bundle/SecurityBundle/Tests/Functional/WebTestCase.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/Functional/WebTestCase.php -> src/Symfony/Bundle/SecurityBundle/Tests/Functional/WebTestCase.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: {",
          "19:     static public function assertRedirect($response, $location)",
          "20:     {",
          "22:         self::assertEquals('http://localhost'.$location, $response->headers->get('Location'));",
          "23:     }",
          "",
          "[Removed Lines]",
          "21:         self::assertTrue($response->isRedirect());",
          "",
          "[Added Lines]",
          "21:         self::assertTrue($response->isRedirect(), 'Response is not a redirect, got status code: '.$response->getStatusCode());",
          "",
          "---------------"
        ],
        "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php": [
          "File: src/Symfony/Component/HttpFoundation/RequestMatcher.php -> src/Symfony/Component/HttpFoundation/RequestMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         }",
          "102:         if (null !== $this->path) {",
          "109:             if (!preg_match('#'.$path.'#', $request->getPathInfo())) {",
          "110:                 return false;",
          "",
          "[Removed Lines]",
          "103:             if (null !== $session = $request->getSession()) {",
          "104:                 $path = strtr($this->path, array('{_locale}' => $session->getLocale(), '#' => '\\\\#'));",
          "105:             } else {",
          "106:                 $path = str_replace('#', '\\\\#', $this->path);",
          "107:             }",
          "",
          "[Added Lines]",
          "103:             $path = str_replace('#', '\\\\#', $this->path);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php": [
          "File: src/Symfony/Component/Security/Http/HttpUtils.php -> src/Symfony/Component/Security/Http/HttpUtils.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Security\\Http;",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "15: use Symfony\\Component\\HttpFoundation\\RedirectResponse;",
          "16: use Symfony\\Component\\Routing\\RouterInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use Symfony\\Component\\Security\\Core\\SecurityContextInterface;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     public function createRedirectResponse(Request $request, $path, $status = 302)",
          "47:     {",
          "49:             $path = $request->getUriForPath($path);",
          "50:         } elseif (0 !== strpos($path, 'http')) {",
          "64:             $path = $this->generateUrl($path, true);",
          "65:         }",
          "",
          "[Removed Lines]",
          "48:         if (0 === strpos($path, '/')) {",
          "52:             $context = $this->router->getContext();",
          "53:             try {",
          "54:                 $parameters = $this->router->match($request->getPathInfo());",
          "55:             } catch (\\Exception $e) {",
          "56:             }",
          "58:             if (isset($parameters['_locale'])) {",
          "59:                 $context->setParameter('_locale', $parameters['_locale']);",
          "60:             } elseif ($session = $request->getSession()) {",
          "61:                 $context->setParameter('_locale', $session->getLocale());",
          "62:             }",
          "",
          "[Added Lines]",
          "50:         if ('/' === $path[0]) {",
          "53:             $this->resetLocale($request);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "78:     public function createRequest(Request $request, $path)",
          "79:     {",
          "80:         if ($path && '/' !== $path[0] && 0 !== strpos($path, 'http')) {",
          "81:             $path = $this->generateUrl($path, true);",
          "82:         }",
          "85:     }",
          "",
          "[Removed Lines]",
          "84:         return Request::create($path, 'get', array(), $request->cookies->all(), array(), $request->server->all());",
          "",
          "[Added Lines]",
          "71:             $this->resetLocale($request);",
          "75:         $newRequest = Request::create($path, 'get', array(), $request->cookies->all(), array(), $request->server->all());",
          "76:         if ($session = $request->getSession()) {",
          "77:             $newRequest->setSession($session);",
          "78:         }",
          "80:         if ($request->attributes->has(SecurityContextInterface::AUTHENTICATION_ERROR)) {",
          "81:             $newRequest->attributes->set(SecurityContextInterface::AUTHENTICATION_ERROR, $request->attributes->get(SecurityContextInterface::AUTHENTICATION_ERROR));",
          "82:         }",
          "83:         if ($request->attributes->has(SecurityContextInterface::ACCESS_DENIED_ERROR)) {",
          "84:             $newRequest->attributes->set(SecurityContextInterface::ACCESS_DENIED_ERROR, $request->attributes->get(SecurityContextInterface::ACCESS_DENIED_ERROR));",
          "85:         }",
          "86:         if ($request->attributes->has(SecurityContextInterface::LAST_USERNAME)) {",
          "87:             $newRequest->attributes->set(SecurityContextInterface::LAST_USERNAME, $request->attributes->get(SecurityContextInterface::LAST_USERNAME));",
          "88:         }",
          "90:         return $newRequest;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:         return $path === $request->getPathInfo();",
          "108:     }",
          "110:     private function generateUrl($route, $absolute = false)",
          "111:     {",
          "112:         if (null === $this->router) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:     private function resetLocale(Request $request)",
          "118:     {",
          "119:         $context = $this->router->getContext();",
          "120:         if ($context->getParameter('_locale')) {",
          "121:             return;",
          "122:         }",
          "124:         try {",
          "125:             $parameters = $this->router->match($request->getPathInfo());",
          "127:             if (isset($parameters['_locale'])) {",
          "128:                 $context->setParameter('_locale', $parameters['_locale']);",
          "129:             } elseif ($session = $request->getSession()) {",
          "130:                 $context->setParameter('_locale', $session->getLocale());",
          "131:             }",
          "132:         } catch (\\Exception $e) {",
          "134:         }",
          "135:     }",
          "",
          "---------------"
        ],
        "tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php||tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php": [
          "File: tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php -> tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:         $this->assertFalse($matcher->matches($request));",
          "143:     }",
          "146:     {",
          "147:         $matcher = new RequestMatcher();",
          "148:         $request = Request::create('/en/login');",
          "",
          "[Removed Lines]",
          "145:     public function testPathWithLocale()",
          "",
          "[Added Lines]",
          "145:     public function testPathWithLocaleIsNotSupported()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:         $request->setSession($session);",
          "154:         $matcher->matchPath('^/{_locale}/login$');",
          "158:         $this->assertFalse($matcher->matches($request));",
          "159:     }",
          "",
          "[Removed Lines]",
          "155:         $this->assertTrue($matcher->matches($request));",
          "157:         $session->setLocale('de');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php||tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php": [
          "File: tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php -> tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         $this->assertEquals('bar', $subRequest->server->get('Foo'));",
          "64:         $subRequest = $utils->createRequest($this->getRequest(), 'foobar');",
          "65:         $this->assertEquals('/foo/bar', $subRequest->getPathInfo());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:         $utils = new HttpUtils($router = $this->getMockBuilder('Symfony\\Component\\Routing\\Router')->disableOriginalConstructor()->getMock());",
          "65:         $router",
          "66:             ->expects($this->once())",
          "67:             ->method('generate')",
          "68:             ->will($this->returnValue('/foo/bar'))",
          "69:         ;",
          "70:         $router",
          "71:             ->expects($this->any())",
          "72:             ->method('getContext')",
          "73:             ->will($this->returnValue($this->getMock('Symfony\\Component\\Routing\\RequestContext')))",
          "74:         ;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1436d8dab76ba8c16da0328d05af78fd31ac40b8",
      "candidate_info": {
        "commit_hash": "1436d8dab76ba8c16da0328d05af78fd31ac40b8",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/1436d8dab76ba8c16da0328d05af78fd31ac40b8",
        "files": [
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/FormLoginFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security.xml",
          "src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.xml",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Security/Factory/AbstractFactoryTest.php",
          "src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php",
          "src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php",
          "src/Symfony/Component/Security/Http/Firewall/LogoutListener.php",
          "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/HttpUtils.php",
          "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php"
        ],
        "message": "[Security] added an HttpUtils class to manage logic related to Requests and Responses\n\nThis change removes the need for the {_locale} hack.\nNow, all paths in the Security component can be:\n\n* An absolute path (/login)\n* An absolute URL (http://symfony.com/login)\n* A route name (login)\n\nSo, if you want to use a path that includes a global parameter (like _locale),\nuse a route instead of a path.",
        "before_after_code_files": [
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/FormLoginFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/FormLoginFactory.php",
          "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Security/Factory/AbstractFactoryTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Security/Factory/AbstractFactoryTest.php",
          "src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php||src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php",
          "src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php||src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php",
          "src/Symfony/Component/Security/Http/Firewall/LogoutListener.php||src/Symfony/Component/Security/Http/Firewall/LogoutListener.php",
          "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php",
          "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php",
          "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php||tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php"
          ],
          "candidate": [
            "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:     {",
          "149:         $listenerId = $this->getListenerId();",
          "150:         $listener = new DefinitionDecorator($listenerId);",
          "155:         if (isset($config['success_handler'])) {",
          "157:         }",
          "160:         if (isset($config['failure_handler'])) {",
          "162:         }",
          "164:         $listenerId .= '.'.$id;",
          "",
          "[Removed Lines]",
          "151:         $listener->replaceArgument(3, $id);",
          "152:         $listener->replaceArgument(4, array_intersect_key($config, $this->options));",
          "156:             $listener->replaceArgument(5, new Reference($config['success_handler']));",
          "161:             $listener->replaceArgument(6, new Reference($config['failure_handler']));",
          "",
          "[Added Lines]",
          "151:         $listener->replaceArgument(4, $id);",
          "152:         $listener->replaceArgument(5, array_intersect_key($config, $this->options));",
          "156:             $listener->replaceArgument(6, new Reference($config['success_handler']));",
          "161:             $listener->replaceArgument(7, new Reference($config['failure_handler']));",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/FormLoginFactory.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/FormLoginFactory.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/FormLoginFactory.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/FormLoginFactory.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:         $entryPointId = 'security.authentication.form_entry_point.'.$id;",
          "92:         $container",
          "93:             ->setDefinition($entryPointId, new DefinitionDecorator('security.authentication.form_entry_point'))",
          "94:             ->addArgument($config['login_path'])",
          "95:             ->addArgument($config['use_forward'])",
          "96:         ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:             ->addArgument(new Reference('security.http_utils'))",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php": [
          "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:         if (isset($firewall['logout'])) {",
          "281:             $listenerId = 'security.logout_listener.'.$id;",
          "282:             $listener = $container->setDefinition($listenerId, new DefinitionDecorator('security.logout_listener'));",
          "285:             $listeners[] = new Reference($listenerId);",
          "288:             if (isset($firewall['logout']['success_handler'])) {",
          "290:             }",
          "",
          "[Removed Lines]",
          "283:             $listener->replaceArgument(1, $firewall['logout']['path']);",
          "284:             $listener->replaceArgument(2, $firewall['logout']['target']);",
          "289:                 $listener->replaceArgument(3, new Reference($firewall['logout']['success_handler']));",
          "",
          "[Added Lines]",
          "283:             $listener->replaceArgument(2, $firewall['logout']['path']);",
          "284:             $listener->replaceArgument(3, $firewall['logout']['target']);",
          "289:                 $listener->replaceArgument(4, new Reference($firewall['logout']['success_handler']));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "513:     {",
          "514:         $exceptionListenerId = 'security.exception_listener.'.$id;",
          "515:         $listener = $container->setDefinition($exceptionListenerId, new DefinitionDecorator('security.exception_listener'));",
          "519:         if (isset($config['access_denied_handler'])) {",
          "521:         } else if (isset($config['access_denied_url'])) {",
          "523:         }",
          "525:         return $exceptionListenerId;",
          "",
          "[Removed Lines]",
          "516:         $listener->replaceArgument(2, null === $defaultEntryPoint ? null : new Reference($defaultEntryPoint));",
          "520:             $listener->replaceArgument(4, new Reference($config['access_denied_handler']));",
          "522:             $listener->replaceArgument(3, $config['access_denied_url']);",
          "",
          "[Added Lines]",
          "516:         $listener->replaceArgument(3, null === $defaultEntryPoint ? null : new Reference($defaultEntryPoint));",
          "520:             $listener->replaceArgument(5, new Reference($config['access_denied_handler']));",
          "522:             $listener->replaceArgument(4, $config['access_denied_url']);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Security/Factory/AbstractFactoryTest.php||src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Security/Factory/AbstractFactoryTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Security/Factory/AbstractFactoryTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Security/Factory/AbstractFactoryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:         $this->assertTrue($container->hasDefinition('abstract_listener.foo'));",
          "48:         $definition = $container->getDefinition('abstract_listener.foo');",
          "49:         $this->assertEquals(array(",
          "52:                 'use_forward'                    => true,",
          "53:                 'failure_path'                   => '/foo',",
          "54:             ),",
          "56:         ), $definition->getArguments());",
          "",
          "[Removed Lines]",
          "50:             'index_3' => 'foo',",
          "51:             'index_4' => array(",
          "55:             'index_5' => new Reference('foo'),",
          "",
          "[Added Lines]",
          "50:             'index_4' => 'foo',",
          "51:             'index_5' => array(",
          "55:             'index_6' => new Reference('foo'),",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php||src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php": [
          "File: src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php -> src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Security\\Http\\EntryPoint;",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "17: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "18: use Symfony\\Component\\Security\\Http\\EntryPoint\\AuthenticationEntryPointInterface;",
          "19: use Symfony\\Component\\HttpKernel\\HttpKernelInterface;",
          "",
          "[Removed Lines]",
          "15: use Symfony\\Component\\HttpFoundation\\Response;",
          "16: use Symfony\\Component\\HttpFoundation\\RedirectResponse;",
          "",
          "[Added Lines]",
          "17: use Symfony\\Component\\Security\\Http\\HttpUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:     private $loginPath;",
          "29:     private $useForward;",
          "30:     private $httpKernel;",
          "40:     {",
          "41:         $this->httpKernel = $kernel;",
          "42:         $this->loginPath = $loginPath;",
          "43:         $this->useForward = (Boolean) $useForward;",
          "44:     }",
          "",
          "[Removed Lines]",
          "39:     public function __construct(HttpKernelInterface $kernel, $loginPath, $useForward = false)",
          "",
          "[Added Lines]",
          "30:     private $httpUtils;",
          "40:     public function __construct(HttpKernelInterface $kernel, HttpUtils $httpUtils, $loginPath, $useForward = false)",
          "43:         $this->httpUtils = $httpUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:     public function start(Request $request, AuthenticationException $authException = null)",
          "50:     {",
          "52:         if ($this->useForward) {",
          "55:             return $this->httpKernel->handle($subRequest, HttpKernelInterface::SUB_REQUEST);",
          "56:         }",
          "59:     }",
          "60: }",
          "",
          "[Removed Lines]",
          "51:         $path = str_replace('{_locale}', $request->getSession()->getLocale(), $this->loginPath);",
          "53:             $subRequest = Request::create($path, 'get', array(), $request->cookies->all(), array(), $request->server->all());",
          "58:         return new RedirectResponse(0 !== strpos($path, 'http') ? $request->getUriForPath($path) : $path, 302);",
          "",
          "[Added Lines]",
          "54:             $path = $this->httpUtils->createRequest($request, $this->loginPath);",
          "59:         return $this->httpUtils->createRedirectResponse($request, $this->loginPath);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;",
          "25: use Symfony\\Component\\HttpFoundation\\Request;",
          "26: use Symfony\\Component\\HttpFoundation\\Response;",
          "28: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;",
          "29: use Symfony\\Component\\EventDispatcher\\EventDispatcherInterface;",
          "30: use Symfony\\Component\\Security\\Http\\Event\\InteractiveLoginEvent;",
          "31: use Symfony\\Component\\Security\\Http\\SecurityEvents;",
          "",
          "[Removed Lines]",
          "27: use Symfony\\Component\\HttpFoundation\\RedirectResponse;",
          "",
          "[Added Lines]",
          "31: use Symfony\\Component\\Security\\Http\\HttpUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:     private $successHandler;",
          "60:     private $failureHandler;",
          "61:     private $rememberMeServices;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:     private $httpUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "78:     {",
          "79:         if (empty($providerKey)) {",
          "80:             throw new \\InvalidArgumentException('$providerKey must not be empty.');",
          "",
          "[Removed Lines]",
          "77:     public function __construct(SecurityContextInterface $securityContext, AuthenticationManagerInterface $authenticationManager, SessionAuthenticationStrategyInterface $sessionStrategy, $providerKey, array $options = array(), AuthenticationSuccessHandlerInterface $successHandler = null, AuthenticationFailureHandlerInterface $failureHandler = null, LoggerInterface $logger = null, EventDispatcherInterface $dispatcher = null)",
          "",
          "[Added Lines]",
          "79:     public function __construct(SecurityContextInterface $securityContext, AuthenticationManagerInterface $authenticationManager, SessionAuthenticationStrategyInterface $sessionStrategy, HttpUtils $httpUtils, $providerKey, array $options = array(), AuthenticationSuccessHandlerInterface $successHandler = null, AuthenticationFailureHandlerInterface $failureHandler = null, LoggerInterface $logger = null, EventDispatcherInterface $dispatcher = null)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "98:         ), $options);",
          "99:         $this->logger = $logger;",
          "100:         $this->dispatcher = $dispatcher;",
          "101:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:         $this->httpUtils = $httpUtils;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "166:     protected function requiresAuthentication(Request $request)",
          "167:     {",
          "169:     }",
          "",
          "[Removed Lines]",
          "168:         return str_replace('{_locale}', $request->getSession()->getLocale(), $this->options['check_path']) === $request->getPathInfo();",
          "",
          "[Added Lines]",
          "171:         return $this->httpUtils->checkRequestPath($request, $this->options['check_path']);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "195:             $this->options['failure_path'] = $this->options['login_path'];",
          "196:         }",
          "200:         if ($this->options['failure_forward']) {",
          "201:             if (null !== $this->logger) {",
          "203:             }",
          "206:             $subRequest->attributes->set(SecurityContextInterface::AUTHENTICATION_ERROR, $failed);",
          "208:             return $event->getKernel()->handle($subRequest, HttpKernelInterface::SUB_REQUEST);",
          "209:         }",
          "211:         if (null !== $this->logger) {",
          "213:         }",
          "215:         $request->getSession()->set(SecurityContextInterface::AUTHENTICATION_ERROR, $failed);",
          "218:     }",
          "220:     private function onSuccess(GetResponseEvent $event, Request $request, TokenInterface $token)",
          "",
          "[Removed Lines]",
          "198:         $path = str_replace('{_locale}', $request->getSession()->getLocale(), $this->options['failure_path']);",
          "202:                 $this->logger->debug(sprintf('Forwarding to %s', $path));",
          "205:             $subRequest = Request::create($path, 'get', array(), $request->cookies->all(), array(), $request->server->all());",
          "212:             $this->logger->debug(sprintf('Redirecting to %s', $path));",
          "217:         return new RedirectResponse(0 !== strpos($path, 'http') ? $request->getUriForPath($path) : $path, 302);",
          "",
          "[Added Lines]",
          "203:                 $this->logger->debug(sprintf('Forwarding to %s', $this->options['failure_path']));",
          "206:             $subRequest = $this->httpUtils->createRequest($request, $this->options['failure_path']);",
          "213:             $this->logger->debug(sprintf('Redirecting to %s', $this->options['failure_path']));",
          "218:         return $this->httpUtils->createRedirectResponse($request, $this->options['failure_path']);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "237:         if (null !== $this->successHandler) {",
          "238:             $response = $this->successHandler->onAuthenticationSuccess($request, $token);",
          "239:         } else {",
          "242:         }",
          "244:         if (null !== $this->rememberMeServices) {",
          "",
          "[Removed Lines]",
          "240:             $path = str_replace('{_locale}', $session->getLocale(), $this->determineTargetUrl($request));",
          "241:             $response = new RedirectResponse(0 !== strpos($path, 'http') ? $request->getUriForPath($path) : $path, 302);",
          "",
          "[Added Lines]",
          "241:             $response = $this->httpUtils->createRedirectResponse($request, $this->determineTargetUrl($request));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php||src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php -> src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: use Symfony\\Component\\Security\\Core\\SecurityContextInterface;",
          "17: use Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolverInterface;",
          "18: use Symfony\\Component\\Security\\Http\\EntryPoint\\AuthenticationEntryPointInterface;",
          "20: use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;",
          "21: use Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException;",
          "22: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken;",
          "23: use Symfony\\Component\\Security\\Core\\Exception\\InsufficientAuthenticationException;",
          "24: use Symfony\\Component\\HttpFoundation\\Request;",
          "25: use Symfony\\Component\\HttpKernel\\HttpKernelInterface;",
          "26: use Symfony\\Component\\HttpKernel\\KernelEvents;",
          "27: use Symfony\\Component\\HttpKernel\\Event\\GetResponseForExceptionEvent;",
          "",
          "[Removed Lines]",
          "19: use Symfony\\Component\\HttpKernel\\Log\\LoggerInterface;",
          "",
          "[Added Lines]",
          "23: use Symfony\\Component\\Security\\Http\\HttpUtils;",
          "25: use Symfony\\Component\\HttpKernel\\Log\\LoggerInterface;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     private $authenticationTrustResolver;",
          "42:     private $errorPage;",
          "43:     private $logger;",
          "46:     {",
          "47:         $this->context = $context;",
          "48:         $this->accessDeniedHandler = $accessDeniedHandler;",
          "49:         $this->authenticationEntryPoint = $authenticationEntryPoint;",
          "50:         $this->authenticationTrustResolver = $trustResolver;",
          "51:         $this->errorPage = $errorPage;",
          "",
          "[Removed Lines]",
          "45:     public function __construct(SecurityContextInterface $context, AuthenticationTrustResolverInterface $trustResolver, AuthenticationEntryPointInterface $authenticationEntryPoint = null, $errorPage = null, AccessDeniedHandlerInterface $accessDeniedHandler = null, LoggerInterface $logger = null)",
          "",
          "[Added Lines]",
          "45:     private $httpUtils;",
          "47:     public function __construct(SecurityContextInterface $context, AuthenticationTrustResolverInterface $trustResolver, HttpUtils $httpUtils, AuthenticationEntryPointInterface $authenticationEntryPoint = null, $errorPage = null, AccessDeniedHandlerInterface $accessDeniedHandler = null, LoggerInterface $logger = null)",
          "51:         $this->httpUtils = $httpUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:                             return;",
          "116:                         }",
          "119:                         $subRequest->attributes->set(SecurityContextInterface::ACCESS_DENIED_ERROR, $exception);",
          "121:                         $response = $event->getKernel()->handle($subRequest, HttpKernelInterface::SUB_REQUEST, true);",
          "",
          "[Removed Lines]",
          "118:                         $subRequest = Request::create($this->errorPage, 'get', array(), $request->cookies->all(), array(), $request->server->all());",
          "",
          "[Added Lines]",
          "121:                         $subRequest = $this->httpUtils->createRequest($request, $this->errorPage);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/LogoutListener.php||src/Symfony/Component/Security/Http/Firewall/LogoutListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/LogoutListener.php -> src/Symfony/Component/Security/Http/Firewall/LogoutListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: use Symfony\\Component\\Security\\Http\\Logout\\LogoutHandlerInterface;",
          "17: use Symfony\\Component\\Security\\Core\\SecurityContextInterface;",
          "18: use Symfony\\Component\\HttpFoundation\\Response;",
          "19: use Symfony\\Component\\HttpFoundation\\RedirectResponse;",
          "20: use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: use Symfony\\Component\\Security\\Http\\HttpUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     private $targetUrl;",
          "32:     private $handlers;",
          "33:     private $successHandler;",
          "44:     {",
          "45:         $this->securityContext = $securityContext;",
          "46:         $this->logoutPath = $logoutPath;",
          "47:         $this->targetUrl = $targetUrl;",
          "48:         $this->successHandler = $successHandler;",
          "",
          "[Removed Lines]",
          "43:     public function __construct(SecurityContextInterface $securityContext, $logoutPath, $targetUrl = '/', LogoutSuccessHandlerInterface $successHandler = null)",
          "",
          "[Added Lines]",
          "35:     private $httpUtils;",
          "46:     public function __construct(SecurityContextInterface $securityContext, HttpUtils $httpUtils, $logoutPath, $targetUrl = '/', LogoutSuccessHandlerInterface $successHandler = null)",
          "49:         $this->httpUtils = $httpUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     {",
          "70:         $request = $event->getRequest();",
          "76:             return;",
          "77:         }",
          "",
          "[Removed Lines]",
          "72:         $logoutPath = str_replace('{_locale}', $request->getSession()->getLocale(), $this->logoutPath);",
          "73:         $targetUrl = str_replace('{_locale}', $request->getSession()->getLocale(), $this->targetUrl);",
          "75:         if ($logoutPath !== $request->getPathInfo()) {",
          "",
          "[Added Lines]",
          "76:         if (!$this->httpUtils->checkRequestPath($request, $this->logoutPath)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "83:                 throw new \\RuntimeException('Logout Success Handler did not return a Response.');",
          "84:             }",
          "85:         } else {",
          "87:         }",
          "",
          "[Removed Lines]",
          "86:             $response = new RedirectResponse(0 !== strpos($targetUrl, 'http') ? $request->getUriForPath($targetUrl) : $targetUrl, 302);",
          "",
          "[Added Lines]",
          "87:             $response = $this->httpUtils->createRedirectResponse($request, $this->targetUrl);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php||src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php": [
          "File: src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php -> src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: use Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationFailureHandlerInterface;",
          "18: use Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationSuccessHandlerInterface;",
          "19: use Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface;",
          "20: use Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface;",
          "21: use Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;",
          "22: use Symfony\\Component\\Security\\Core\\Exception\\InvalidCsrfTokenException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: use Symfony\\Component\\Security\\Http\\HttpUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     {",
          "42:             'username_parameter' => '_username',",
          "43:             'password_parameter' => '_password',",
          "44:             'csrf_parameter'     => '_csrf_token',",
          "",
          "[Removed Lines]",
          "39:     public function __construct(SecurityContextInterface $securityContext, AuthenticationManagerInterface $authenticationManager, SessionAuthenticationStrategyInterface $sessionStrategy, $providerKey, array $options = array(), AuthenticationSuccessHandlerInterface $successHandler = null, AuthenticationFailureHandlerInterface $failureHandler = null, LoggerInterface $logger = null, EventDispatcherInterface $dispatcher = null, CsrfProviderInterface $csrfProvider = null)",
          "41:         parent::__construct($securityContext, $authenticationManager, $sessionStrategy, $providerKey, array_merge(array(",
          "",
          "[Added Lines]",
          "40:     public function __construct(SecurityContextInterface $securityContext, AuthenticationManagerInterface $authenticationManager, SessionAuthenticationStrategyInterface $sessionStrategy, HttpUtils $httpUtils, $providerKey, array $options = array(), AuthenticationSuccessHandlerInterface $successHandler = null, AuthenticationFailureHandlerInterface $failureHandler = null, LoggerInterface $logger = null, EventDispatcherInterface $dispatcher = null, CsrfProviderInterface $csrfProvider = null)",
          "42:         parent::__construct($securityContext, $authenticationManager, $sessionStrategy, $httpUtils, $providerKey, array_merge(array(",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php": [
          "File: src/Symfony/Component/Security/Http/HttpUtils.php -> src/Symfony/Component/Security/Http/HttpUtils.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Component\\Security\\Http;",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "15: use Symfony\\Component\\HttpFoundation\\RedirectResponse;",
          "16: use Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;",
          "23: class HttpUtils",
          "24: {",
          "25:     private $urlGenerator;",
          "32:     public function __construct(UrlGeneratorInterface $urlGenerator = null)",
          "33:     {",
          "34:         $this->urlGenerator = $urlGenerator;",
          "35:     }",
          "46:     public function createRedirectResponse(Request $request, $path, $status = 302)",
          "47:     {",
          "48:         if (0 === strpos($path, '/')) {",
          "49:             $path = $request->getUriForPath($path);",
          "50:         } elseif (0 !== strpos($path, 'http')) {",
          "51:             $path = $this->generateUrl($path, true);",
          "52:         }",
          "54:         return new RedirectResponse($path, 302);",
          "55:     }",
          "65:     public function createRequest(Request $request, $path)",
          "66:     {",
          "67:         if ($path && '/' !== $path[0] && 0 !== strpos($path, 'http')) {",
          "68:             $path = $this->generateUrl($path, true);",
          "69:         }",
          "71:         return Request::create($path, 'get', array(), $request->cookies->all(), array(), $request->server->all());",
          "72:     }",
          "82:     public function checkRequestPath(Request $request, $path)",
          "83:     {",
          "84:         if ('/' !== $path[0]) {",
          "85:             $path = preg_replace('#'.preg_quote($request->getBaseUrl(), '#').'#', '', $this->generateUrl($path));",
          "86:         }",
          "88:         return $path === $request->getPathInfo();",
          "89:     }",
          "91:     private function generateUrl($route, $absolute = false)",
          "92:     {",
          "93:         if (null === $this->urlGenerator) {",
          "94:             throw new \\LogicException('You must provide a UrlGeneratorInterface instance to be able to use routes.');",
          "95:         }",
          "97:         return $this->urlGenerator->generate($route, array(), $absolute);",
          "98:     }",
          "99: }",
          "",
          "---------------"
        ],
        "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php||tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php": [
          "File: tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php -> tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "12: namespace Symfony\\Tests\\Component\\Security\\Http;",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "15: use Symfony\\Component\\HttpFoundation\\Response;",
          "16: use Symfony\\Component\\Security\\Http\\HttpUtils;",
          "18: class HttpUtilsTest extends \\PHPUnit_Framework_TestCase",
          "19: {",
          "20:     public function testCreateRedirectResponse()",
          "21:     {",
          "22:         $utils = new HttpUtils($generator = $this->getUrlGenerator());",
          "25:         $response = $utils->createRedirectResponse($this->getRequest(), '/foobar');",
          "26:         $this->assertTrue($response->isRedirect('http://localhost/foobar'));",
          "27:         $this->assertEquals(302, $response->getStatusCode());",
          "30:         $response = $utils->createRedirectResponse($this->getRequest(), 'http://symfony.com/');",
          "31:         $this->assertTrue($response->isRedirect('http://symfony.com/'));",
          "34:         $utils = new HttpUtils($generator = $this->getMock('Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface'));",
          "35:         $generator",
          "36:             ->expects($this->any())",
          "37:             ->method('generate')",
          "38:             ->with('foobar', array(), true)",
          "39:             ->will($this->returnValue('http://localhost/foo/bar'))",
          "40:         ;",
          "41:         $response = $utils->createRedirectResponse($this->getRequest(), 'foobar');",
          "42:     }",
          "44:     public function testCreateRequest()",
          "45:     {",
          "46:         $utils = new HttpUtils($this->getUrlGenerator());",
          "49:         $request = $this->getRequest();",
          "50:         $request->server->set('Foo', 'bar');",
          "51:         $subRequest = $utils->createRequest($request, '/foobar');",
          "53:         $this->assertEquals('GET', $subRequest->getMethod());",
          "54:         $this->assertEquals('/foobar', $subRequest->getPathInfo());",
          "55:         $this->assertEquals('bar', $subRequest->server->get('Foo'));",
          "58:         $subRequest = $utils->createRequest($this->getRequest(), 'foobar');",
          "59:         $this->assertEquals('/foo/bar', $subRequest->getPathInfo());",
          "62:         $subRequest = $utils->createRequest($this->getRequest(), 'http://symfony.com/');",
          "63:         $this->assertEquals('/', $subRequest->getPathInfo());",
          "64:     }",
          "66:     public function testCheckRequestPath()",
          "67:     {",
          "68:         $utils = new HttpUtils($this->getUrlGenerator());",
          "70:         $this->assertTrue($utils->checkRequestPath($this->getRequest(), '/'));",
          "71:         $this->assertFalse($utils->checkRequestPath($this->getRequest(), '/foo'));",
          "73:         $this->assertFalse($utils->checkRequestPath($this->getRequest(), 'foobar'));",
          "74:         $this->assertTrue($utils->checkRequestPath($this->getRequest('/foo/bar'), 'foobar'));",
          "75:     }",
          "77:     private function getUrlGenerator()",
          "78:     {",
          "79:         $generator = $this->getMock('Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface');",
          "80:         $generator",
          "81:             ->expects($this->any())",
          "82:             ->method('generate')",
          "83:             ->will($this->returnValue('/foo/bar'))",
          "84:         ;",
          "86:         return $generator;",
          "87:     }",
          "89:     private function getRequest($path = '/')",
          "90:     {",
          "91:         return Request::create($path, 'get');",
          "92:     }",
          "93: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f8a98033a949630cc6bd2a6f37c401b25ac0383",
      "candidate_info": {
        "commit_hash": "4f8a98033a949630cc6bd2a6f37c401b25ac0383",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/4f8a98033a949630cc6bd2a6f37c401b25ac0383",
        "files": [
          "src/Symfony/Component/Security/Http/HttpUtils.php",
          "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php"
        ],
        "message": "[Security] removed a hack",
        "before_after_code_files": [
          "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php",
          "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php||tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php"
          ],
          "candidate": [
            "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/Security/Http/HttpUtils.php||src/Symfony/Component/Security/Http/HttpUtils.php": [
          "File: src/Symfony/Component/Security/Http/HttpUtils.php -> src/Symfony/Component/Security/Http/HttpUtils.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Symfony\\Component\\HttpFoundation\\Request;",
          "15: use Symfony\\Component\\HttpFoundation\\RedirectResponse;",
          "",
          "[Removed Lines]",
          "16: use Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;",
          "",
          "[Added Lines]",
          "16: use Symfony\\Component\\Routing\\RouterInterface;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23: class HttpUtils",
          "24: {",
          "33:     {",
          "35:     }",
          "",
          "[Removed Lines]",
          "25:     private $urlGenerator;",
          "32:     public function __construct(UrlGeneratorInterface $urlGenerator = null)",
          "34:         $this->urlGenerator = $urlGenerator;",
          "",
          "[Added Lines]",
          "25:     private $router;",
          "32:     public function __construct(RouterInterface $router = null)",
          "34:         $this->router = $router;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:     public function checkRequestPath(Request $request, $path)",
          "83:     {",
          "84:         if ('/' !== $path[0]) {",
          "86:         }",
          "88:         return $path === $request->getPathInfo();",
          "",
          "[Removed Lines]",
          "85:             $path = preg_replace('#'.preg_quote($request->getBaseUrl(), '#').'#', '', $this->generateUrl($path));",
          "",
          "[Added Lines]",
          "85:             try {",
          "86:                 $parameters = $this->router->match($request->getPathInfo());",
          "88:                 return $path === $parameters['_route'];",
          "89:             } catch (\\Exception $e) {",
          "90:             }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:     private function generateUrl($route, $absolute = false)",
          "92:     {",
          "95:         }",
          "98:     }",
          "99: }",
          "",
          "[Removed Lines]",
          "93:         if (null === $this->urlGenerator) {",
          "94:             throw new \\LogicException('You must provide a UrlGeneratorInterface instance to be able to use routes.');",
          "97:         return $this->urlGenerator->generate($route, array(), $absolute);",
          "",
          "[Added Lines]",
          "98:         if (null === $this->router) {",
          "99:             throw new \\LogicException('You must provide a RouterInterface instance to be able to use routes.');",
          "102:         return $this->router->generate($route, array(), $absolute);",
          "",
          "---------------"
        ],
        "tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php||tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php": [
          "File: tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php -> tests/Symfony/Tests/Component/Security/Http/HttpUtilsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: {",
          "20:     public function testCreateRedirectResponse()",
          "21:     {",
          "25:         $response = $utils->createRedirectResponse($this->getRequest(), '/foobar');",
          "",
          "[Removed Lines]",
          "22:         $utils = new HttpUtils($generator = $this->getUrlGenerator());",
          "",
          "[Added Lines]",
          "22:         $utils = new HttpUtils($this->getRouter());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:         $this->assertTrue($response->isRedirect('http://symfony.com/'));",
          "36:             ->expects($this->any())",
          "37:             ->method('generate')",
          "38:             ->with('foobar', array(), true)",
          "",
          "[Removed Lines]",
          "34:         $utils = new HttpUtils($generator = $this->getMock('Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface'));",
          "35:         $generator",
          "",
          "[Added Lines]",
          "34:         $utils = new HttpUtils($router = $this->getMock('Symfony\\Component\\Routing\\RouterInterface'));",
          "35:         $router",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:     public function testCreateRequest()",
          "45:     {",
          "49:         $request = $this->getRequest();",
          "",
          "[Removed Lines]",
          "46:         $utils = new HttpUtils($this->getUrlGenerator());",
          "",
          "[Added Lines]",
          "46:         $utils = new HttpUtils($this->getRouter());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "66:     public function testCheckRequestPath()",
          "67:     {",
          "70:         $this->assertTrue($utils->checkRequestPath($this->getRequest(), '/'));",
          "71:         $this->assertFalse($utils->checkRequestPath($this->getRequest(), '/foo'));",
          "73:         $this->assertFalse($utils->checkRequestPath($this->getRequest(), 'foobar'));",
          "74:         $this->assertTrue($utils->checkRequestPath($this->getRequest('/foo/bar'), 'foobar'));",
          "75:     }",
          "78:     {",
          "81:             ->expects($this->any())",
          "82:             ->method('generate')",
          "83:             ->will($this->returnValue('/foo/bar'))",
          "84:         ;",
          "87:     }",
          "89:     private function getRequest($path = '/')",
          "",
          "[Removed Lines]",
          "68:         $utils = new HttpUtils($this->getUrlGenerator());",
          "77:     private function getUrlGenerator()",
          "79:         $generator = $this->getMock('Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface');",
          "80:         $generator",
          "86:         return $generator;",
          "",
          "[Added Lines]",
          "68:         $utils = new HttpUtils($this->getRouter());",
          "73:         $router = $this->getMock('Symfony\\Component\\Routing\\RouterInterface');",
          "74:         $router",
          "75:             ->expects($this->any())",
          "76:             ->method('match')",
          "77:             ->will($this->returnValue(array()))",
          "78:         ;",
          "79:         $utils = new HttpUtils($router);",
          "82:         $router = $this->getMock('Symfony\\Component\\Routing\\RouterInterface');",
          "83:         $router",
          "84:             ->expects($this->any())",
          "85:             ->method('match')",
          "86:             ->will($this->returnValue(array('_route' => 'foobar')))",
          "87:         ;",
          "88:         $utils = new HttpUtils($router);",
          "92:     private function getRouter()",
          "94:         $router = $this->getMock('Symfony\\Component\\Routing\\RouterInterface');",
          "95:         $router",
          "101:         return $router;",
          "",
          "---------------"
        ]
      }
    }
  ]
}