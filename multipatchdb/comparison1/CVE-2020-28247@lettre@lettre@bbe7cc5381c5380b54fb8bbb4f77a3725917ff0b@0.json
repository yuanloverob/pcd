{
  "cve_id": "CVE-2020-28247",
  "cve_desc": "The lettre library through 0.10.0-alpha for Rust allows arbitrary sendmail option injection via transport/sendmail/mod.rs.",
  "repo": "lettre/lettre",
  "patch_hash": "bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b",
  "patch_info": {
    "commit_hash": "bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b",
    "repo": "lettre/lettre",
    "commit_url": "https://github.com/lettre/lettre/commit/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b",
    "files": [
      "src/transport/sendmail/mod.rs"
    ],
    "message": "fix(transport-sendmail): Stop argument parsing before destination addresses",
    "before_after_code_files": [
      "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
    ]
  },
  "patch_diff": {
    "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs": [
      "File: src/transport/sendmail/mod.rs -> src/transport/sendmail/mod.rs",
      "--- Hunk 1 ---",
      "[Context before]",
      "120:         c.arg(\"-i\")",
      "121:             .arg(\"-f\")",
      "122:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
      "123:             .args(envelope.to())",
      "124:             .stdin(Stdio::piped())",
      "125:             .stdout(Stdio::piped());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "123:             .arg(\"--\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "135:         c.arg(\"-i\")",
      "136:             .arg(\"-f\")",
      "137:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
      "138:             .args(envelope.to())",
      "139:             .stdin(Stdio::piped())",
      "140:             .stdout(Stdio::piped());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "139:             .arg(\"--\")",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "150:         c.arg(\"-i\")",
      "151:             .arg(\"-f\")",
      "152:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
      "153:             .args(envelope.to())",
      "154:             .stdin(Stdio::piped())",
      "155:             .stdout(Stdio::piped());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:             .arg(\"--\")",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a0da9fc2b9df89bb6199f4a3bdb31c7380c9ee87",
      "candidate_info": {
        "commit_hash": "a0da9fc2b9df89bb6199f4a3bdb31c7380c9ee87",
        "repo": "lettre/lettre",
        "commit_url": "https://github.com/lettre/lettre/commit/a0da9fc2b9df89bb6199f4a3bdb31c7380c9ee87",
        "files": [
          "src/transport/sendmail/mod.rs"
        ],
        "message": "fix(transport-sendmail): Only pass -f option to sendmail when needed",
        "before_after_code_files": [
          "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/lettre/lettre/pull/508"
        ],
        "olp_code_files": {
          "patch": [
            "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
          ],
          "candidate": [
            "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
          ]
        }
      },
      "candidate_diff": {
        "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs": [
          "File: src/transport/sendmail/mod.rs -> src/transport/sendmail/mod.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:     fn command(&self, envelope: &Envelope) -> Command {",
          "119:         let mut c = Command::new(&self.command);",
          "124:             .args(envelope.to())",
          "125:             .stdin(Stdio::piped())",
          "126:             .stdout(Stdio::piped());",
          "",
          "[Removed Lines]",
          "120:         c.arg(\"-i\")",
          "121:             .arg(\"-f\")",
          "122:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
          "123:             .arg(\"--\")",
          "",
          "[Added Lines]",
          "120:         c.arg(\"-i\");",
          "121:         if let Some(from) = envelope.from() {",
          "122:             c.arg(\"-f\").arg(from);",
          "123:         }",
          "124:         c.arg(\"--\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:         let mut c = Command::new(&self.command);",
          "135:         c.kill_on_drop(true);",
          "140:             .args(envelope.to())",
          "141:             .stdin(Stdio::piped())",
          "142:             .stdout(Stdio::piped());",
          "",
          "[Removed Lines]",
          "136:         c.arg(\"-i\")",
          "137:             .arg(\"-f\")",
          "138:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
          "139:             .arg(\"--\")",
          "",
          "[Added Lines]",
          "137:         c.arg(\"-i\");",
          "138:         if let Some(from) = envelope.from() {",
          "139:             c.arg(\"-f\").arg(from);",
          "140:         }",
          "141:         c.arg(\"--\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:         let mut c = Command::new(&self.command);",
          "151:         c.kill_on_drop(true);",
          "156:             .args(envelope.to())",
          "157:             .stdin(Stdio::piped())",
          "158:             .stdout(Stdio::piped());",
          "",
          "[Removed Lines]",
          "152:         c.arg(\"-i\")",
          "153:             .arg(\"-f\")",
          "154:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
          "155:             .arg(\"--\")",
          "",
          "[Added Lines]",
          "154:         c.arg(\"-i\");",
          "155:         if let Some(from) = envelope.from() {",
          "156:             c.arg(\"-f\").arg(from);",
          "157:         }",
          "158:         c.arg(\"--\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a9d4fbf7e0ab66041a53f19f8c64fb4d5baf4a1",
      "candidate_info": {
        "commit_hash": "4a9d4fbf7e0ab66041a53f19f8c64fb4d5baf4a1",
        "repo": "lettre/lettre",
        "commit_url": "https://github.com/lettre/lettre/commit/4a9d4fbf7e0ab66041a53f19f8c64fb4d5baf4a1",
        "files": [
          "src/transport/sendmail/mod.rs"
        ],
        "message": "fix(transport-sendmail): Capture sendmail stderr to make possible to debug",
        "before_after_code_files": [
          "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/lettre/lettre/pull/508"
        ],
        "olp_code_files": {
          "patch": [
            "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
          ],
          "candidate": [
            "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
          ]
        }
      },
      "candidate_diff": {
        "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs": [
          "File: src/transport/sendmail/mod.rs -> src/transport/sendmail/mod.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:         c.arg(\"--\")",
          "125:             .args(envelope.to())",
          "126:             .stdin(Stdio::piped())",
          "128:         c",
          "129:     }",
          "",
          "[Removed Lines]",
          "127:             .stdout(Stdio::piped());",
          "",
          "[Added Lines]",
          "127:             .stdout(Stdio::piped())",
          "128:             .stderr(Stdio::piped());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:         c.arg(\"--\")",
          "142:             .args(envelope.to())",
          "143:             .stdin(Stdio::piped())",
          "145:         c",
          "146:     }",
          "",
          "[Removed Lines]",
          "144:             .stdout(Stdio::piped());",
          "",
          "[Added Lines]",
          "145:             .stdout(Stdio::piped())",
          "146:             .stderr(Stdio::piped());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:         c.arg(\"--\")",
          "159:             .args(envelope.to())",
          "160:             .stdin(Stdio::piped())",
          "162:         c",
          "163:     }",
          "164: }",
          "",
          "[Removed Lines]",
          "161:             .stdout(Stdio::piped());",
          "",
          "[Added Lines]",
          "163:             .stdout(Stdio::piped())",
          "164:             .stderr(Stdio::piped());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa31e4fff6afa7ddbf45057e60c102b7b43703e9",
      "candidate_info": {
        "commit_hash": "aa31e4fff6afa7ddbf45057e60c102b7b43703e9",
        "repo": "lettre/lettre",
        "commit_url": "https://github.com/lettre/lettre/commit/aa31e4fff6afa7ddbf45057e60c102b7b43703e9",
        "files": [
          "src/transport/sendmail/mod.rs"
        ],
        "message": "fix(transport-sendmail): Stop argument parsing before destination addresses",
        "before_after_code_files": [
          "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
          ],
          "candidate": [
            "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs"
          ]
        }
      },
      "candidate_diff": {
        "src/transport/sendmail/mod.rs||src/transport/sendmail/mod.rs": [
          "File: src/transport/sendmail/mod.rs -> src/transport/sendmail/mod.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:         c.arg(\"-i\")",
          "121:             .arg(\"-f\")",
          "122:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
          "123:             .args(envelope.to())",
          "124:             .stdin(Stdio::piped())",
          "125:             .stdout(Stdio::piped());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:             .arg(\"--\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:         c.arg(\"-i\")",
          "136:             .arg(\"-f\")",
          "137:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
          "138:             .args(envelope.to())",
          "139:             .stdin(Stdio::piped())",
          "140:             .stdout(Stdio::piped());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:             .arg(\"--\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:         c.arg(\"-i\")",
          "151:             .arg(\"-f\")",
          "152:             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))",
          "153:             .args(envelope.to())",
          "154:             .stdin(Stdio::piped())",
          "155:             .stdout(Stdio::piped());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155:             .arg(\"--\")",
          "",
          "---------------"
        ]
      }
    }
  ]
}