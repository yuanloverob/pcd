{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "02b1a246ddea6352e1e8e472bfa96712a68d42cd",
      "candidate_info": {
        "commit_hash": "02b1a246ddea6352e1e8e472bfa96712a68d42cd",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/02b1a246ddea6352e1e8e472bfa96712a68d42cd",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java"
        ],
        "message": "PDFBOX-5196, PDFBOX-5137: use numFrameComponents instead of numScanComponents to get component count, as suggested by Matej Risek and St\u00e9phane Vall\u00e9e; closes #110\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890059 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:         try",
          "225:         {",
          "226:             XPath xpath = XPathFactory.newInstance().newXPath();",
          "229:             {",
          "230:                 return 0;",
          "231:             }",
          "233:         }",
          "234:         catch (NumberFormatException ex)",
          "235:         {",
          "",
          "[Removed Lines]",
          "227:             String numScanComponents = xpath.evaluate(\"markerSequence/sos/@numScanComponents\", root);",
          "228:             if (numScanComponents.isEmpty())",
          "232:             return Integer.parseInt(numScanComponents);",
          "",
          "[Added Lines]",
          "227:             String numFrameComponents = xpath.evaluate(\"markerSequence/sof/@numFrameComponents\", root);",
          "228:             if (numFrameComponents.isEmpty())",
          "232:             return Integer.parseInt(numFrameComponents);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee068f6bd4659f6208c2a0f804d08040bab8ede9",
      "candidate_info": {
        "commit_hash": "ee068f6bd4659f6208c2a0f804d08040bab8ede9",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ee068f6bd4659f6208c2a0f804d08040bab8ede9",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java"
        ],
        "message": "PDFBOX-4892: performance improvement, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888372 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:             float[] srcValues = new float[4];",
          "167:             float[] lastValues = new float[] { -1.0f, -1.0f, -1.0f, -1.0f };",
          "168:             float[] destValues = new float[3];",
          "170:             int startX = raster.getMinX();",
          "172:             int startY = raster.getMinY();",
          "174:             {",
          "176:                 {",
          "177:                     raster.getPixel(x, y, srcValues);",
          "179:                     if (!Arrays.equals(lastValues, srcValues))",
          "180:                     {",
          "187:                         destValues = destCS.fromCIEXYZ(colorSpace.toCIEXYZ(srcValues));",
          "188:                         for (int k = 0; k < destValues.length; k++)",
          "",
          "[Removed Lines]",
          "169:             int width = raster.getWidth();",
          "171:             int height = raster.getHeight();",
          "173:             for (int x = startX; x < width + startX; x++)",
          "175:                 for (int y = startY; y < height + startY; y++)",
          "181:                         for (int k = 0; k < 4; k++)",
          "182:                         {",
          "183:                             lastValues[k] = srcValues[k];",
          "184:                             srcValues[k] = srcValues[k] / 255f;",
          "185:                         }",
          "",
          "[Added Lines]",
          "171:             int endX = raster.getWidth() + startX;",
          "172:             int endY = raster.getHeight() + startY;",
          "173:             for (int x = startX; x < endX; x++)",
          "175:                 for (int y = startY; y < endY; y++)",
          "181:                         lastValues[0] = srcValues[0];",
          "182:                         srcValues[0] = srcValues[0] / 255f;",
          "184:                         lastValues[1] = srcValues[1];",
          "185:                         srcValues[1] = srcValues[1] / 255f;",
          "187:                         lastValues[2] = srcValues[2];",
          "188:                         srcValues[2] = srcValues[2] / 255f;",
          "190:                         lastValues[3] = srcValues[3];",
          "191:                         srcValues[3] = srcValues[3] / 255f;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f51029358e21c986b67dca74a17af9b0aac2e3b",
      "candidate_info": {
        "commit_hash": "9f51029358e21c986b67dca74a17af9b0aac2e3b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9f51029358e21c986b67dca74a17af9b0aac2e3b",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java"
        ],
        "message": "PDFBOX-4946: avoid ArrayIndexOutOfBoundsException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881377 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:                 LOG.warn(\"Using non-embedded GIDs in font \" + getName());",
          "237:                 int cid = codeToCID(code);",
          "239:             }",
          "240:             else",
          "241:             {",
          "",
          "[Removed Lines]",
          "238:                 return cid2gid[cid];",
          "",
          "[Added Lines]",
          "238:                 if (cid < cid2gid.length)",
          "239:                 {",
          "240:                     return cid2gid[cid];",
          "241:                 }",
          "242:                 else",
          "243:                 {",
          "244:                     return 0;",
          "245:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25f91c4e6d54f89f1d940f8ebea645c109535dcf",
      "candidate_info": {
        "commit_hash": "25f91c4e6d54f89f1d940f8ebea645c109535dcf",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/25f91c4e6d54f89f1d940f8ebea645c109535dcf",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java"
        ],
        "message": "PDFBOX-5138: create output directory\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887974 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestEmbeddedFiles.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:         String outputFile = \"target/test-output/EmbeddedFile.pdf\";",
          "45:         String embeddedFile = \"target/test-output/Test.txt\";",
          "47:         new File(outputFile).delete();",
          "48:         new File(embeddedFile).delete();",
          "49:         String[] args = new String[] { outputFile };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:         new File(\"target/test-output\").mkdirs();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b5c3126520a169e9a6784f2b3ac3ee3d0bb712e",
      "candidate_info": {
        "commit_hash": "4b5c3126520a169e9a6784f2b3ac3ee3d0bb712e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4b5c3126520a169e9a6784f2b3ac3ee3d0bb712e",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java"
        ],
        "message": "PDFBOX-5199: remove unneeded close\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890106 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java||pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java||pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java -> pdfbox/src/main/java/org/apache/pdfbox/filter/CCITTFaxFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:                 break;",
          "138:             }",
          "139:         }",
          "141:     }",
          "143:     private void invertBitmap(byte[] bufferData)",
          "",
          "[Removed Lines]",
          "140:         decoderStream.close();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:         CCITTFaxEncoderStream ccittFaxEncoderStream =",
          "158:                 new CCITTFaxEncoderStream(encoded, cols, rows, TIFFExtension.FILL_LEFT_TO_RIGHT);",
          "159:         IOUtils.copy(input, ccittFaxEncoderStream);",
          "161:     }",
          "162: }",
          "",
          "[Removed Lines]",
          "160:         input.close();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}