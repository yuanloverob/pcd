{
  "cve_id": "CVE-2023-38672",
  "cve_desc": "FPE in paddle.trace in PaddlePaddle before 2.5.0. This flaw can cause a runtime crash and a denial of service.\n",
  "repo": "PaddlePaddle/Paddle",
  "patch_hash": "09926af166b060c9a9845c309110d3baa82921fd",
  "patch_info": {
    "commit_hash": "09926af166b060c9a9845c309110d3baa82921fd",
    "repo": "PaddlePaddle/Paddle",
    "commit_url": "https://github.com/PaddlePaddle/Paddle/commit/09926af166b060c9a9845c309110d3baa82921fd",
    "files": [
      "paddle/phi/infermeta/unary.cc",
      "python/paddle/fluid/tests/unittests/test_matrix_power_op.py"
    ],
    "message": "add static check",
    "before_after_code_files": [
      "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc",
      "python/paddle/fluid/tests/unittests/test_matrix_power_op.py||python/paddle/fluid/tests/unittests/test_matrix_power_op.py"
    ]
  },
  "patch_diff": {
    "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc": [
      "File: paddle/phi/infermeta/unary.cc -> paddle/phi/infermeta/unary.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "1889:                         \"The Input(X) should have at least 2 dimensions. But \"",
      "1890:                         \"received a %d dimension tensor.\",",
      "1891:                         n_dim));",
      "1892:   PADDLE_ENFORCE_EQ(dims[n_dim - 2],",
      "1893:                     dims[n_dim - 1],",
      "1894:                     phi::errors::InvalidArgument(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1892:   for (int i = 0; i < n_dim; ++i)",
      "1893:     PADDLE_ENFORCE_NE(",
      "1894:         dims[i],",
      "1895:         0,",
      "1896:         phi::errors::InvalidArgument(\"The size of Input(X) should not be 0.\"));",
      "",
      "---------------"
    ],
    "python/paddle/fluid/tests/unittests/test_matrix_power_op.py||python/paddle/fluid/tests/unittests/test_matrix_power_op.py": [
      "File: python/paddle/fluid/tests/unittests/test_matrix_power_op.py -> python/paddle/fluid/tests/unittests/test_matrix_power_op.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "312:         input = fluid.data(name=\"input_3\", shape=[4, 5], dtype=\"float32\")",
      "313:         self.assertRaises(ValueError, paddle.linalg.matrix_power, input, 2)",
      "316:         with paddle.fluid.dygraph.guard():",
      "317:             input = paddle.to_tensor(",
      "318:                 paddle.uniform([1, 1, 0, 0]).astype('float32')",
      "",
      "[Removed Lines]",
      "315:         # The size of input should not be 0",
      "",
      "[Added Lines]",
      "315:         # The size of input should not be 0 (static graph)",
      "316:         input = fluid.data(name=\"input_4\", shape=[1, 1, 0, 0], dtype=\"float32\")",
      "317:         self.assertRaises(ValueError, paddle.linalg.matrix_power, input, 2)",
      "319:         # The size of input should not be 0 (dynamic graph)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fb74147c6aa3ae8a1256f8e84f46af3632190f44",
      "candidate_info": {
        "commit_hash": "fb74147c6aa3ae8a1256f8e84f46af3632190f44",
        "repo": "PaddlePaddle/Paddle",
        "commit_url": "https://github.com/PaddlePaddle/Paddle/commit/fb74147c6aa3ae8a1256f8e84f46af3632190f44",
        "files": [
          "paddle/phi/infermeta/unary.cc",
          "python/paddle/fluid/tests/unittests/test_matrix_power_op.py"
        ],
        "message": "Fix the div 0 error of matrix_power (#49942)\n\n* add zero size check in matrix_power_kernel_impl.h\n\n* add zero size check in matrix_power_kernel_impl.h\n\n* add zero size check in unittest\n\n* bug_fix\n\n* bug_fix\n\n* bug_fix\n\n* bug_fix\n\n* bug_fix\n\n* bug fix\n\n* bug_fix\n\n* bug_fix\n\n* add static check\n\n* delete the dy codes",
        "before_after_code_files": [
          "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc",
          "python/paddle/fluid/tests/unittests/test_matrix_power_op.py||python/paddle/fluid/tests/unittests/test_matrix_power_op.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PaddlePaddle/Paddle/pull/49942"
        ],
        "olp_code_files": {
          "patch": [
            "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc",
            "python/paddle/fluid/tests/unittests/test_matrix_power_op.py||python/paddle/fluid/tests/unittests/test_matrix_power_op.py"
          ],
          "candidate": [
            "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc",
            "python/paddle/fluid/tests/unittests/test_matrix_power_op.py||python/paddle/fluid/tests/unittests/test_matrix_power_op.py"
          ]
        }
      },
      "candidate_diff": {
        "paddle/phi/infermeta/unary.cc||paddle/phi/infermeta/unary.cc": [
          "File: paddle/phi/infermeta/unary.cc -> paddle/phi/infermeta/unary.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1889:                         \"The Input(X) should have at least 2 dimensions. But \"",
          "1890:                         \"received a %d dimension tensor.\",",
          "1891:                         n_dim));",
          "1892:   PADDLE_ENFORCE_EQ(dims[n_dim - 2],",
          "1893:                     dims[n_dim - 1],",
          "1894:                     phi::errors::InvalidArgument(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1892:   for (int i = 0; i < n_dim; ++i)",
          "1893:     PADDLE_ENFORCE_NE(",
          "1894:         dims[i],",
          "1895:         0,",
          "1896:         phi::errors::InvalidArgument(\"The size of Input(X) should not be 0.\"));",
          "",
          "---------------"
        ],
        "python/paddle/fluid/tests/unittests/test_matrix_power_op.py||python/paddle/fluid/tests/unittests/test_matrix_power_op.py": [
          "File: python/paddle/fluid/tests/unittests/test_matrix_power_op.py -> python/paddle/fluid/tests/unittests/test_matrix_power_op.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "312:         input = fluid.data(name=\"input_3\", shape=[4, 5], dtype=\"float32\")",
          "313:         self.assertRaises(ValueError, paddle.linalg.matrix_power, input, 2)",
          "316: class TestMatrixPowerSingularAPI(unittest.TestCase):",
          "317:     def setUp(self):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:         # The size of input should not be 0",
          "316:         input = fluid.data(name=\"input_4\", shape=[1, 1, 0, 0], dtype=\"float32\")",
          "317:         self.assertRaises(ValueError, paddle.linalg.matrix_power, input, 2)",
          "",
          "---------------"
        ]
      }
    }
  ]
}