{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8f99db76217652f89000c90ea93657b4cb057f7c",
      "candidate_info": {
        "commit_hash": "8f99db76217652f89000c90ea93657b4cb057f7c",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/8f99db76217652f89000c90ea93657b4cb057f7c",
        "files": [
          "examples/views/table/base/Selection.vue",
          "package.json",
          "packages/table/src/methods.js",
          "packages/v-x-e-table/src/commands.js",
          "packages/v-x-e-table/src/formats.js",
          "packages/v-x-e-table/src/menus.js"
        ],
        "message": "fix",
        "before_after_code_files": [
          "examples/views/table/base/Selection.vue||examples/views/table/base/Selection.vue",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/v-x-e-table/src/commands.js||packages/v-x-e-table/src/commands.js",
          "packages/v-x-e-table/src/formats.js||packages/v-x-e-table/src/formats.js",
          "packages/v-x-e-table/src/menus.js||packages/v-x-e-table/src/menus.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/views/table/base/Selection.vue||examples/views/table/base/Selection.vue": [
          "File: examples/views/table/base/Selection.vue -> examples/views/table/base/Selection.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:       border",
          "17:       ref=\"xTable1\"",
          "18:       :data=\"tableData\"",
          "19:       @checkbox-all=\"selectAllEvent\"",
          "20:       @checkbox-change=\"selectChangeEvent\">",
          "21:       <vxe-column type=\"checkbox\" width=\"60\"></vxe-column>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:       :checkbox-config=\"{isShiftKey: true}\"",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3080:     }",
          "3081:   },",
          "3082:   triggerCheckRowEvent (evnt, params, value) {",
          "3085:       this.handleSelectRow(params, value)",
          "3086:       this.emitEvent('checkbox-change', Object.assign({",
          "3087:         records: this.getCheckboxRecords(),",
          "",
          "[Removed Lines]",
          "3083:     const { checkMethod } = this.checkboxOpts",
          "3084:     if (!checkMethod || checkMethod({ row: params.row })) {",
          "",
          "[Added Lines]",
          "3083:     const { checkboxOpts, afterFullData } = this",
          "3084:     const { checkMethod } = checkboxOpts",
          "3085:     const { row } = params",
          "3086:     if (checkboxOpts.isShiftKey && evnt.shiftKey && !this.treeConfig) {",
          "3087:       const checkboxRecords = this.getCheckboxRecords()",
          "3088:       if (checkboxRecords.length) {",
          "3089:         const firstRow = checkboxRecords[0]",
          "3090:         const _rowIndex = this.getVTRowIndex(row)",
          "3091:         const _firstRowIndex = this.getVTRowIndex(firstRow)",
          "3092:         if (_rowIndex !== _firstRowIndex) {",
          "3093:           this.setAllCheckboxRow(false)",
          "3094:           const rangeRows = _rowIndex < _firstRowIndex ? afterFullData.slice(_rowIndex, _firstRowIndex + 1) : afterFullData.slice(_firstRowIndex, _rowIndex + 1)",
          "3095:           this.handleCheckedCheckboxRow(rangeRows, true, false)",
          "3096:           this.emitEvent('checkbox-range-select', Object.assign({ rangeRecords: rangeRows }, params), evnt)",
          "3097:           return",
          "3098:         }",
          "3099:       }",
          "3100:     }",
          "3101:     if (!checkMethod || checkMethod({ row })) {",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/commands.js||packages/v-x-e-table/src/commands.js": [
          "File: packages/v-x-e-table/src/commands.js -> packages/v-x-e-table/src/commands.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   add (name, render) {",
          "21:     const conf = this.store[name]",
          "25:         warnLog('vxe.error.delProp', ['callback', 'commandMethod'])",
          "29:       }",
          "30:     }",
          "",
          "[Removed Lines]",
          "23:     if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "24:       if (XEUtils.isFunction(render)) {",
          "26:         render = {",
          "27:           commandMethod: render",
          "28:         }",
          "",
          "[Added Lines]",
          "23:     if (XEUtils.isFunction(render)) {",
          "24:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "26:       }",
          "27:       render = {",
          "28:         commandMethod: render",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/formats.js||packages/v-x-e-table/src/formats.js": [
          "File: packages/v-x-e-table/src/formats.js -> packages/v-x-e-table/src/formats.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   add (name, render) {",
          "21:     const conf = this.store[name]",
          "25:         warnLog('vxe.error.delProp', ['callback', 'cellFormatMethod'])",
          "29:       }",
          "30:     }",
          "",
          "[Removed Lines]",
          "23:     if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "24:       if (XEUtils.isFunction(render)) {",
          "26:         render = {",
          "27:           cellFormatMethod: render",
          "28:         }",
          "",
          "[Added Lines]",
          "23:     if (XEUtils.isFunction(render)) {",
          "24:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "26:       }",
          "27:       render = {",
          "28:         cellFormatMethod: render",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/menus.js||packages/v-x-e-table/src/menus.js": [
          "File: packages/v-x-e-table/src/menus.js -> packages/v-x-e-table/src/menus.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   add (name, render) {",
          "21:     const conf = this.store[name]",
          "25:         warnLog('vxe.error.delProp', ['callback', 'menuMethod'])",
          "29:       }",
          "30:     }",
          "",
          "[Removed Lines]",
          "23:     if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "24:       if (XEUtils.isFunction(render)) {",
          "26:         render = {",
          "27:           menuMethod: render",
          "28:         }",
          "",
          "[Added Lines]",
          "23:     if (XEUtils.isFunction(render)) {",
          "24:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "26:       }",
          "27:       render = {",
          "28:         menuMethod: render",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27b4d19e1f19756f877de4f81b44903c5b064df6",
      "candidate_info": {
        "commit_hash": "27b4d19e1f19756f877de4f81b44903c5b064df6",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/27b4d19e1f19756f877de4f81b44903c5b064df6",
        "files": [
          "packages/table/src/body.js"
        ],
        "message": "fix scroll #2156",
        "before_after_code_files": [
          "packages/table/src/body.js||packages/table/src/body.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ],
          "candidate": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ]
        }
      },
      "candidate_diff": {
        "packages/table/src/body.js||packages/table/src/body.js": [
          "File: packages/table/src/body.js -> packages/table/src/body.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "504:   },",
          "505:   beforeDestroy () {",
          "506:     clearTimeout(this.wheelTime)",
          "509:   },",
          "510:   destroyed () {",
          "511:     const { $parent: $xetable, fixedType } = this",
          "",
          "[Removed Lines]",
          "507:     this.$el._onscroll = null",
          "508:     this.$el.onscroll = null",
          "",
          "[Added Lines]",
          "507:     if (this.$el) {",
          "508:       this.$el._onscroll = null",
          "509:       this.$el.onscroll = null",
          "510:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca929ea9d8abf53b535bf82991ae527e7e68d6a3",
      "candidate_info": {
        "commit_hash": "ca929ea9d8abf53b535bf82991ae527e7e68d6a3",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/ca929ea9d8abf53b535bf82991ae527e7e68d6a3",
        "files": [
          "package.json",
          "packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js",
          "packages/form/src/util.js",
          "styles/form.scss",
          "types/component.d.ts",
          "types/form-item.d.ts",
          "types/v-x-e-table/renderer.d.ts"
        ],
        "message": "\u589e\u52a0\u53c2\u6570 showTitle\u3001contentClassName\u3001contentStyle",
        "before_after_code_files": [
          "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js||packages/form/src/form-item.js",
          "packages/form/src/util.js||packages/form/src/util.js",
          "styles/form.scss||styles/form.scss",
          "types/component.d.ts||types/component.d.ts",
          "types/form-item.d.ts||types/form-item.d.ts",
          "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js": [
          "File: packages/form/src/form-config-item.js -> packages/form/src/form-config-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   render (h) {",
          "29:     const { _e, $xeform, itemConfig: item } = this",
          "30:     const { rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow } = $xeform",
          "32:     const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "33:     const itemClassName = compConf ? compConf.itemClassName : ''",
          "34:     const itemStyle = compConf ? compConf.itemStyle : null",
          "35:     const itemContentClassName = compConf ? compConf.itemContentClassName : ''",
          "36:     const itemContentStyle = compConf ? compConf.itemContentStyle : null",
          "37:     const span = item.span || $xeform.span",
          "38:     const align = item.align || $xeform.align",
          "39:     const titleAlign = XEUtils.eqNull(item.titleAlign) ? allTitleAlign : item.titleAlign",
          "",
          "[Removed Lines]",
          "31:     const { slots, title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, children } = item",
          "",
          "[Added Lines]",
          "31:     const { slots, title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, children, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "37:     const itemTitleClassName = compConf ? compConf.itemTitleClassName : ''",
          "38:     const itemTitleStyle = compConf ? compConf.itemTitleStyle : null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     const titleColon = XEUtils.eqNull(item.titleColon) ? allTitleColon : item.titleColon",
          "42:     const titleAsterisk = XEUtils.eqNull(item.titleAsterisk) ? allTitleAsterisk : item.titleAsterisk",
          "43:     const itemOverflow = (XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow)) ? allTitleOverflow : titleOverflow",
          "48:     const params = { data, field, property: field, item, $form: $xeform, $grid: $xeform.xegrid }",
          "49:     let isRequired",
          "50:     if (visible === false) {",
          "",
          "[Removed Lines]",
          "44:     const showEllipsis = itemOverflow === 'ellipsis'",
          "45:     const showTitle = itemOverflow === 'title'",
          "46:     const showTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "47:     const hasEllipsis = showTitle || showTooltip || showEllipsis",
          "",
          "[Added Lines]",
          "46:     const ovEllipsis = itemOverflow === 'ellipsis'",
          "47:     const ovTitle = itemOverflow === 'title'",
          "48:     const ovTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "49:     const hasEllipsis = ovTitle || ovTooltip || ovEllipsis",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81:     } else if (field) {",
          "82:       contentVNs = [XEUtils.toValueString(XEUtils.get(data, field))]",
          "83:     }",
          "85:       mouseenter (evnt) {",
          "86:         $xeform.triggerTitleTipEvent(evnt, params)",
          "87:       },",
          "",
          "[Removed Lines]",
          "84:     const ons = showTooltip ? {",
          "",
          "[Added Lines]",
          "86:     const ons = ovTooltip ? {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "109:       h('div', {",
          "110:         class: 'vxe-form--item-inner'",
          "111:       }, [",
          "119:           attrs: {",
          "121:           },",
          "122:           on: ons",
          "123:         }, renderTitle(h, $xeform, item)) : null,",
          "124:         h('div', {",
          "127:         }, contentVNs.concat(",
          "128:           [",
          "129:             collapseNode ? h('div', {",
          "",
          "[Removed Lines]",
          "112:         title || (slots && slots.title) ? h('div', {",
          "113:           class: ['vxe-form--item-title', titleAlign ? `align--${titleAlign}` : null, {",
          "114:             'is--ellipsis': hasEllipsis",
          "115:           }],",
          "116:           style: titleWidth ? {",
          "117:             width: isNaN(titleWidth) ? titleWidth : `${titleWidth}px`",
          "118:           } : null,",
          "120:             title: showTitle ? getFuncText(title) : null",
          "125:           class: ['vxe-form--item-content', align ? `align--${align}` : '', itemContentClassName ? (XEUtils.isFunction(itemContentClassName) ? itemContentClassName(params) : itemContentClassName) : ''],",
          "126:           style: XEUtils.isFunction(itemContentStyle) ? itemContentStyle(params) : itemContentStyle",
          "",
          "[Added Lines]",
          "114:         (showTitle !== false) && (title || (slots && slots.title)) ? h('div', {",
          "115:           class: [",
          "116:             'vxe-form--item-title',",
          "117:             titleAlign ? `align--${titleAlign}` : '',",
          "118:             hasEllipsis ? 'is--ellipsis' : '',",
          "119:             itemTitleClassName ? (XEUtils.isFunction(itemTitleClassName) ? itemTitleClassName(params) : itemTitleClassName) : '',",
          "120:             titleClassName ? (XEUtils.isFunction(titleClassName) ? titleClassName(params) : titleClassName) : ''",
          "121:           ],",
          "123:           style: Object.assign(",
          "124:             {},",
          "125:             XEUtils.isFunction(itemTitleStyle) ? itemTitleStyle(params) : itemTitleStyle,",
          "126:             XEUtils.isFunction(titleStyle) ? titleStyle(params) : titleStyle,",
          "127:             titleWidth ? {",
          "128:               width: isNaN(titleWidth) ? titleWidth : `${titleWidth}px`",
          "129:             } : null",
          "130:           ),",
          "132:             title: ovTitle ? getFuncText(title) : null",
          "137:           class: [",
          "138:             'vxe-form--item-content',",
          "139:             align ? `align--${align}` : '',",
          "140:             itemContentClassName ? (XEUtils.isFunction(itemContentClassName) ? itemContentClassName(params) : itemContentClassName) : '',",
          "141:             contentClassName ? (XEUtils.isFunction(contentClassName) ? contentClassName(params) : contentClassName) : ''",
          "142:           ],",
          "143:           style: Object.assign({}, XEUtils.isFunction(itemContentStyle) ? itemContentStyle(params) : itemContentStyle, XEUtils.isFunction(contentStyle) ? contentStyle(params) : contentStyle)",
          "",
          "---------------"
        ],
        "packages/form/src/form-item.js||packages/form/src/form-item.js": [
          "File: packages/form/src/form-item.js -> packages/form/src/form-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     type: Boolean,",
          "29:     default: null",
          "30:   },",
          "31:   className: [String, Function],",
          "32:   titleOverflow: {",
          "33:     type: [Boolean, String],",
          "34:     default: null",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:   showTitle: {",
          "32:     type: Boolean,",
          "33:     default: true",
          "34:   },",
          "36:   contentClassName: [String, Function],",
          "37:   contentStyle: [Object, Function],",
          "38:   titleClassName: [String, Function],",
          "39:   titleStyle: [Object, Function],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: const renderItem = (h, _vm, item, slots) => {",
          "54:   const { _e, rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow } = _vm",
          "56:   const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "57:   const itemClassName = compConf ? compConf.itemClassName : ''",
          "58:   const itemStyle = compConf ? compConf.itemStyle : null",
          "59:   const itemContentClassName = compConf ? compConf.itemContentClassName : ''",
          "60:   const itemContentStyle = compConf ? compConf.itemContentStyle : null",
          "61:   const span = item.span || _vm.span",
          "62:   const align = item.align || _vm.align",
          "63:   const titleAlign = XEUtils.eqNull(item.titleAlign) ? allTitleAlign : item.titleAlign",
          "",
          "[Removed Lines]",
          "55:   const { title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow } = item",
          "",
          "[Added Lines]",
          "63:   const { title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "69:   const itemTitleClassName = compConf ? compConf.itemTitleClassName : ''",
          "70:   const itemTitleStyle = compConf ? compConf.itemTitleStyle : null",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:   const titleColon = XEUtils.eqNull(item.titleColon) ? allTitleColon : item.titleColon",
          "66:   const titleAsterisk = XEUtils.eqNull(item.titleAsterisk) ? allTitleAsterisk : item.titleAsterisk",
          "67:   const itemOverflow = (XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow)) ? allTitleOverflow : titleOverflow",
          "72:   const params = { data, field, property: field, item, $form: _vm, $grid: _vm.xegrid }",
          "73:   let isRequired",
          "74:   if (visible === false) {",
          "",
          "[Removed Lines]",
          "68:   const showEllipsis = itemOverflow === 'ellipsis'",
          "69:   const showTitle = itemOverflow === 'title'",
          "70:   const showTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "71:   const hasEllipsis = showTitle || showTooltip || showEllipsis",
          "",
          "[Added Lines]",
          "78:   const ovEllipsis = itemOverflow === 'ellipsis'",
          "79:   const ovTitle = itemOverflow === 'title'",
          "80:   const ovTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "81:   const hasEllipsis = ovTitle || ovTooltip || ovEllipsis",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90:   } else if (field) {",
          "91:     contentVNs = [`${XEUtils.get(data, field)}`]",
          "92:   }",
          "94:     mouseenter (evnt) {",
          "95:       _vm.triggerTitleTipEvent(evnt, params)",
          "96:     },",
          "",
          "[Removed Lines]",
          "93:   const ons = showTooltip ? {",
          "",
          "[Added Lines]",
          "103:   const ons = ovTooltip ? {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "118:     h('div', {",
          "119:       class: 'vxe-form--item-inner'",
          "120:     }, [",
          "128:         attrs: {",
          "130:         },",
          "131:         on: ons",
          "132:       }, renderTitle(h, _vm, item)) : null,",
          "133:       h('div', {",
          "136:       }, contentVNs.concat(",
          "137:         [",
          "138:           collapseNode ? h('div', {",
          "",
          "[Removed Lines]",
          "121:       title || (slots && slots.title) ? h('div', {",
          "122:         class: ['vxe-form--item-title', titleAlign ? `align--${titleAlign}` : null, {",
          "123:           'is--ellipsis': hasEllipsis",
          "124:         }],",
          "125:         style: titleWidth ? {",
          "126:           width: isNaN(titleWidth) ? titleWidth : `${titleWidth}px`",
          "127:         } : null,",
          "129:           title: showTitle ? getFuncText(title) : null",
          "134:         class: ['vxe-form--item-content', align ? `align--${align}` : '', itemContentClassName ? (XEUtils.isFunction(itemContentClassName) ? itemContentClassName(params) : itemContentClassName) : ''],",
          "135:         style: XEUtils.isFunction(itemContentStyle) ? itemContentStyle(params) : itemContentStyle",
          "",
          "[Added Lines]",
          "131:       (showTitle !== false) && (title || (slots && slots.title)) ? h('div', {",
          "132:         class: [",
          "133:           'vxe-form--item-title',",
          "134:           titleAlign ? `align--${titleAlign}` : '',",
          "135:           hasEllipsis ? 'is--ellipsis' : '',",
          "136:           itemTitleClassName ? (XEUtils.isFunction(itemTitleClassName) ? itemTitleClassName(params) : itemTitleClassName) : '',",
          "137:           titleClassName ? (XEUtils.isFunction(titleClassName) ? titleClassName(params) : titleClassName) : ''",
          "138:         ],",
          "139:         style: Object.assign(",
          "140:           {},",
          "141:           XEUtils.isFunction(itemTitleStyle) ? itemTitleStyle(params) : itemTitleStyle,",
          "142:           XEUtils.isFunction(titleStyle) ? titleStyle(params) : titleStyle,",
          "143:           titleWidth ? {",
          "144:             width: isNaN(titleWidth) ? titleWidth : `${titleWidth}px`",
          "145:           } : null",
          "146:         ),",
          "148:           title: ovTitle ? getFuncText(title) : null",
          "153:         class: [",
          "154:           'vxe-form--item-content',",
          "155:           align ? `align--${align}` : '',",
          "156:           itemContentClassName ? (XEUtils.isFunction(itemContentClassName) ? itemContentClassName(params) : itemContentClassName) : '',",
          "157:           contentClassName ? (XEUtils.isFunction(contentClassName) ? contentClassName(params) : contentClassName) : ''",
          "158:         ],",
          "159:         style: Object.assign({}, XEUtils.isFunction(itemContentStyle) ? itemContentStyle(params) : itemContentStyle, XEUtils.isFunction(contentStyle) ? contentStyle(params) : contentStyle)",
          "",
          "---------------"
        ],
        "packages/form/src/util.js||packages/form/src/util.js": [
          "File: packages/form/src/util.js -> packages/form/src/util.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:       titlePrefix: item.titlePrefix,",
          "19:       titleSuffix: item.titleSuffix,",
          "20:       titleOverflow: item.titleOverflow,",
          "21:       resetValue: item.resetValue,",
          "22:       visible: item.visible,",
          "23:       visibleMethod: item.visibleMethod,",
          "24:       folding: item.folding,",
          "25:       collapseNode: item.collapseNode,",
          "26:       className: item.className,",
          "27:       itemRender: item.itemRender,",
          "29:       showError: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:       showTitle: item.showTitle,",
          "28:       contentClassName: item.className,",
          "29:       contentStyle: item.contentStyle,",
          "30:       titleClassName: item.titleClassName,",
          "31:       titleStyle: item.titleStyle,",
          "",
          "---------------"
        ],
        "styles/form.scss||styles/form.scss": [
          "File: styles/form.scss -> styles/form.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: .vxe-form {",
          "95:   .vxe-form--gather {",
          "97:   }",
          "98:   .vxe-form--item {",
          "99:     display: none;",
          "100:     padding: 0.5em 0.8em 0.5em 0;",
          "101:     &.is--active {",
          "102:       &:not(.is--hidden) {",
          "104:       }",
          "105:     }",
          "106:   }",
          "",
          "[Removed Lines]",
          "96:     display: inline-block;",
          "103:         display: inline-block;",
          "",
          "[Added Lines]",
          "96:     display: inline-flex;",
          "97:     flex-direction: row;",
          "98:     flex-wrap: wrap;",
          "99:     align-content: flex-start;",
          "100:   }",
          "101:   .vxe-form--wrapper {",
          "102:     display: flex;",
          "103:     flex-direction: row;",
          "104:     flex-wrap: wrap;",
          "111:         display: inline-flex;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:     display: flex;",
          "170:     flex-direction: row;",
          "171:     align-items: center;",
          "172:     .vxe-form--item-title {",
          "173:       flex-shrink: 0;",
          "174:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:     flex-grow: 1;",
          "",
          "---------------"
        ],
        "types/component.d.ts||types/component.d.ts": [
          "File: types/component.d.ts -> types/component.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   [key: string]: any;",
          "24: }",
          "26: export type SlotVNodeType = VNode | string | number",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: export type VNodeStyle = Record<string, string | number>",
          "27: export type VNodeClassName = Record<string, boolean>",
          "",
          "---------------"
        ],
        "types/form-item.d.ts||types/form-item.d.ts": [
          "File: types/form-item.d.ts -> types/form-item.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   titleSuffix?: FormItemTitleOptions;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:   showTitle?: boolean",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:   titleSuffix?: FormItemTitleOptions;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   showTitle?: boolean",
          "",
          "---------------"
        ],
        "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts": [
          "File: types/v-x-e-table/renderer.d.ts -> types/v-x-e-table/renderer.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { CreateElement } from 'vue'",
          "3: import { Table } from '../table'",
          "4: import { Grid } from '../grid'",
          "5: import { ColumnInfo, ColumnCellRenderOptions, ColumnContentRenderOptions } from '../column'",
          "",
          "[Removed Lines]",
          "2: import { SlotVNodeType, RowInfo, VNodeStyle } from '../component'",
          "",
          "[Added Lines]",
          "2: import { SlotVNodeType, RowInfo, VNodeStyle, VNodeClassName } from '../component'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:   isFooter?: boolean;",
          "37:   showFilterFooter?: boolean;",
          "38:   renderFilter?(h: CreateElement, renderOpts: ColumnFilterRenderOptions, params: ColumnFilterRenderParams): SlotVNodeType | SlotVNodeType[];",
          "39:   filterMethod?(params: ColumnFilterMethodParams): boolean;",
          "",
          "[Removed Lines]",
          "36:   filterClassName?: string | ((params: ColumnFilterRenderParams) => string | { [key: string]: boolean })",
          "",
          "[Added Lines]",
          "36:   filterClassName?: string | ((params: ColumnFilterRenderParams) => string | VNodeClassName)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42:   defaultFilterMethod?(params: ColumnFilterMethodParams): boolean;",
          "47:   renderHeader?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "48:   renderDefault?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "49:   renderFooter?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnFooterRenderParams): SlotVNodeType | SlotVNodeType[];",
          "",
          "[Removed Lines]",
          "45:   cellClassName?: string | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => string | { [key: string]: boolean })",
          "46:   cellStyle?: string | VNodeStyle | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => string | VNodeStyle)",
          "",
          "[Added Lines]",
          "45:   cellClassName?: string | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => string | VNodeClassName)",
          "46:   cellStyle?:  VNodeStyle | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => VNodeStyle)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "63:   renderToolbarTool?(h: CreateElement, renderOpts: ToolbarToolRenderOptions, params: ToolbarToolRenderParams): SlotVNodeType | SlotVNodeType[];",
          "70:   renderItemTitle?(h: CreateElement, renderOpts: FormItemRenderOptions, params: FormItemRenderParams): SlotVNodeType | SlotVNodeType[];",
          "71:   renderItemContent?(h: CreateElement, renderOpts: FormItemRenderOptions, params: FormItemRenderParams): SlotVNodeType | SlotVNodeType[];",
          "72:   itemVisibleMethod?(params: FormItemVisibleParams): boolean;",
          "",
          "[Removed Lines]",
          "66:   itemClassName?: string | ((params: FormItemRenderParams) => string | { [key: string]: boolean })",
          "67:   itemStyle?: string | VNodeStyle | ((params: FormItemRenderParams) => string | VNodeStyle)",
          "68:   itemContentClassName?: string | ((params: FormItemRenderParams) => string | { [key: string]: boolean })",
          "69:   itemContentStyle?: string | VNodeStyle | ((params: FormItemRenderParams) => string | VNodeStyle)",
          "",
          "[Added Lines]",
          "66:   itemClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "67:   itemStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "68:   itemContentClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "69:   itemContentStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "70:   itemTitleClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "71:   itemTitleStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb022fabf6932333e2d8364cd1ecf279318f498c",
      "candidate_info": {
        "commit_hash": "eb022fabf6932333e2d8364cd1ecf279318f498c",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/eb022fabf6932333e2d8364cd1ecf279318f498c",
        "files": [
          "packages/table/src/methods.js"
        ],
        "message": "fix \u4fee\u590d\u975e\u7f16\u8f91\u5217\u89e6\u53d1\u63d0\u793a\u6846\u95ee\u9898",
        "before_after_code_files": [
          "packages/table/src/methods.js||packages/table/src/methods.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2605:     const { row, column } = params",
          "2606:     const cell = evnt.currentTarget",
          "2607:     this.handleTargetEnterEvent(tooltipStore.column !== column || tooltipStore.row !== row)",
          "2610:         return",
          "2611:       }",
          "2612:     }",
          "",
          "[Removed Lines]",
          "2608:     if (isEnableConf(editConfig)) {",
          "2609:       if ((editOpts.mode === 'row' && actived.row === row) || (actived.row === row && actived.column === column)) {",
          "",
          "[Added Lines]",
          "2609:     if (column.editRender && isEnableConf(editConfig)) {",
          "2611:       if (editOpts.mode === 'row' && actived.row === row) {",
          "2612:         return",
          "2613:       }",
          "2615:       if (actived.row === row && actived.column === column) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eebb3142a919cd18c665d9af01aa12fe62e5f9e0",
      "candidate_info": {
        "commit_hash": "eebb3142a919cd18c665d9af01aa12fe62e5f9e0",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/eebb3142a919cd18c665d9af01aa12fe62e5f9e0",
        "files": [
          "package.json",
          "packages/grid/src/grid.ts",
          "packages/table/render/index.ts",
          "packages/toolbar/src/toolbar.ts"
        ],
        "message": "\u91cd\u6784v3\u7248\u672c",
        "before_after_code_files": [
          "packages/grid/src/grid.ts||packages/grid/src/grid.ts",
          "packages/table/render/index.ts||packages/table/render/index.ts",
          "packages/toolbar/src/toolbar.ts||packages/toolbar/src/toolbar.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/grid/src/grid.ts||packages/grid/src/grid.ts": [
          "File: packages/grid/src/grid.ts -> packages/grid/src/grid.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "668:               }",
          "669:             }",
          "670:             if (isInited) {",
          "674:               if (defaultSort) {",
          "675:                 if (!XEUtils.isArray(defaultSort)) {",
          "",
          "[Removed Lines]",
          "671:               const { sortOpts } = $xetable",
          "672:               let defaultSort = sortOpts.defaultSort",
          "",
          "[Added Lines]",
          "671:               let defaultSort = null",
          "672:               if ($xetable) {",
          "673:                 const { sortOpts } = $xetable",
          "674:                 defaultSort = sortOpts.defaultSort",
          "675:               }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "683:                   }",
          "684:                 })",
          "685:               }",
          "692:                 filterList = $xetable.getCheckedFilters()",
          "693:               }",
          "694:             }",
          "695:             const commitParams = {",
          "696:               code,",
          "",
          "[Removed Lines]",
          "686:               filterList = $xetable.getCheckedFilters()",
          "687:             } else {",
          "688:               if (isReload) {",
          "689:                 $xetable.clearAll()",
          "690:               } else {",
          "691:                 sortList = $xetable.getSortColumns()",
          "",
          "[Added Lines]",
          "689:               if ($xetable) {",
          "692:             } else {",
          "693:               if ($xetable) {",
          "694:                 if (isReload) {",
          "695:                   $xetable.clearAll()",
          "696:                 } else {",
          "697:                   sortList = $xetable.getSortColumns()",
          "698:                   filterList = $xetable.getCheckedFilters()",
          "699:                 }",
          "700:               }",
          "",
          "---------------"
        ],
        "packages/table/render/index.ts||packages/table/render/index.ts": [
          "File: packages/table/render/index.ts -> packages/table/render/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: }",
          "26: function getLabelFormatDate (value: any, props: any) {",
          "28: }",
          "",
          "[Removed Lines]",
          "27:   return getFormatDate(value, props, getI18n(`vxe.input.date.labelFormat.${props.type}`))",
          "",
          "[Added Lines]",
          "27:   return getFormatDate(value, props, getI18n(`vxe.input.date.labelFormat.${props.type || 'date'}`))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "640:       const { row, column } = params",
          "641:       let cellValue = XEUtils.get(row, column.field)",
          "642:       if (cellValue) {",
          "652:       }",
          "653:       return getCellLabelVNs(h, renderOpts, params, cellValue)",
          "654:     },",
          "",
          "[Removed Lines]",
          "643:         switch (props.type) {",
          "644:           case 'date':",
          "645:           case 'week':",
          "646:           case 'month':",
          "647:           case 'quarter':",
          "648:           case 'year':",
          "649:             cellValue = getLabelFormatDate(cellValue, props)",
          "650:             break",
          "651:         }",
          "",
          "[Added Lines]",
          "643:         cellValue = getLabelFormatDate(cellValue, props)",
          "",
          "---------------"
        ],
        "packages/toolbar/src/toolbar.ts||packages/toolbar/src/toolbar.ts": [
          "File: packages/toolbar/src/toolbar.ts -> packages/toolbar/src/toolbar.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:                 circle: child.circle,",
          "358:                 round: child.round,",
          "359:                 status: child.status,",
          "361:               },",
          "362:               on: {",
          "363:                 click: ({ $event }: any) => isBtn ? $xeToolbar.btnEvent($event, child) : $xeToolbar.tolEvent($event, child)",
          "",
          "[Removed Lines]",
          "360:                 content: child.name",
          "",
          "[Added Lines]",
          "360:                 content: child.name,",
          "361:                 routerLink: item.routerLink,",
          "362:                 permissionCode: item.permissionCode",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "411:                       round: item.round,",
          "412:                       status: item.status,",
          "413:                       content: item.name,",
          "414:                       permissionCode: item.permissionCode,",
          "415:                       destroyOnClose: item.destroyOnClose,",
          "416:                       placement: item.placement,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "416:                       routerLink: item.routerLink,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "479:                       round: item.round,",
          "480:                       status: item.status,",
          "481:                       content: item.name,",
          "482:                       destroyOnClose: item.destroyOnClose,",
          "483:                       placement: item.placement,",
          "484:                       transfer: item.transfer",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "485:                       routerLink: item.routerLink,",
          "486:                       permissionCode: item.permissionCode,",
          "",
          "---------------"
        ]
      }
    }
  ]
}