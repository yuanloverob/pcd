{
  "cve_id": "CVE-2020-35124",
  "cve_desc": "A cross-site scripting (XSS) vulnerability in the assets component of Mautic before 3.2.4 allows remote attackers to inject executable JavaScript through the Referer header of asset downloads.",
  "repo": "mautic/mautic",
  "patch_hash": "20c5dc39b62164f6922ce53ea42cbb4ccec64e57",
  "patch_info": {
    "commit_hash": "20c5dc39b62164f6922ce53ea42cbb4ccec64e57",
    "repo": "mautic/mautic",
    "commit_url": "https://github.com/mautic/mautic/commit/20c5dc39b62164f6922ce53ea42cbb4ccec64e57",
    "files": [
      "app/bundles/ApiBundle/Form/Type/ClientType.php",
      "app/bundles/CategoryBundle/Form/Type/CategoryType.php",
      "app/bundles/LeadBundle/Form/Type/CompanyType.php",
      "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
      "app/bundles/UserBundle/Form/Type/PasswordResetType.php",
      "app/bundles/UserBundle/Form/Type/UserType.php",
      "plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
    ],
    "message": "Merge branch 'fix-xss-56' into release-xss-56",
    "before_after_code_files": [
      "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php",
      "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php",
      "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php",
      "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
      "app/bundles/UserBundle/Form/Type/PasswordResetType.php||app/bundles/UserBundle/Form/Type/PasswordResetType.php",
      "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php",
      "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
    ]
  },
  "patch_diff": {
    "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php": [
      "File: app/bundles/ApiBundle/Form/Type/ClientType.php -> app/bundles/ApiBundle/Form/Type/ClientType.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:     public function buildForm(FormBuilderInterface $builder, array $options)",
      "75:     {",
      "77:         $builder->addEventSubscriber(new FormExitSubscriber('api.client', $options));",
      "79:         if (!$options['data']->getId()) {",
      "",
      "[Removed Lines]",
      "76:         $builder->addEventSubscriber(new CleanFormSubscriber());",
      "",
      "[Added Lines]",
      "76:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
      "",
      "---------------"
    ],
    "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php": [
      "File: app/bundles/CategoryBundle/Form/Type/CategoryType.php -> app/bundles/CategoryBundle/Form/Type/CategoryType.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "38:     public function buildForm(FormBuilderInterface $builder, array $options)",
      "39:     {",
      "41:         $builder->addEventSubscriber(new FormExitSubscriber('category.category', $options));",
      "43:         if (!$options['data']->getId()) {",
      "",
      "[Removed Lines]",
      "40:         $builder->addEventSubscriber(new CleanFormSubscriber());",
      "",
      "[Added Lines]",
      "40:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
      "",
      "---------------"
    ],
    "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php": [
      "File: app/bundles/LeadBundle/Form/Type/CompanyType.php -> app/bundles/LeadBundle/Form/Type/CompanyType.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "14: use Doctrine\\ORM\\EntityManager;",
      "15: use Mautic\\CoreBundle\\Form\\DataTransformer\\IdToEntityModelTransformer;",
      "16: use Mautic\\CoreBundle\\Form\\Type\\FormButtonsType;",
      "17: use Mautic\\LeadBundle\\Entity\\Company;",
      "18: use Mautic\\UserBundle\\Entity\\User;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16: use Mautic\\CoreBundle\\Form\\EventListener\\CleanFormSubscriber;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "57:     public function buildForm(FormBuilderInterface $builder, array $options)",
      "58:     {",
      "61:         $transformer = new IdToEntityModelTransformer($this->em, User::class);",
      "",
      "[Removed Lines]",
      "59:         $this->getFormFields($builder, $options, 'company');",
      "",
      "[Added Lines]",
      "60:         $cleaningRules                 = $this->getFormFields($builder, $options, 'company');",
      "61:         $cleaningRules['companyemail'] = 'email';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "138:                 ],",
      "139:             ]",
      "140:         );",
      "141:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         $builder->addEventSubscriber(new CleanFormSubscriber($cleaningRules));",
      "",
      "---------------"
    ],
    "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php": [
      "File: app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php -> app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28:     public function buildForm(FormBuilderInterface $builder, array $options)",
      "29:     {",
      "32:         $builder->add(",
      "33:             'identifier',",
      "",
      "[Removed Lines]",
      "30:         $builder->addEventSubscriber(new CleanFormSubscriber());",
      "",
      "[Added Lines]",
      "30:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
      "",
      "---------------"
    ],
    "app/bundles/UserBundle/Form/Type/PasswordResetType.php||app/bundles/UserBundle/Form/Type/PasswordResetType.php": [
      "File: app/bundles/UserBundle/Form/Type/PasswordResetType.php -> app/bundles/UserBundle/Form/Type/PasswordResetType.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "26:     public function buildForm(FormBuilderInterface $builder, array $options)",
      "27:     {",
      "30:         $builder->add(",
      "31:             'identifier',",
      "",
      "[Removed Lines]",
      "28:         $builder->addEventSubscriber(new CleanFormSubscriber());",
      "",
      "[Added Lines]",
      "28:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
      "",
      "---------------"
    ],
    "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php": [
      "File: app/bundles/UserBundle/Form/Type/UserType.php -> app/bundles/UserBundle/Form/Type/UserType.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "66:     public function buildForm(FormBuilderInterface $builder, array $options)",
      "67:     {",
      "69:         $builder->addEventSubscriber(new FormExitSubscriber('user.user', $options));",
      "71:         $builder->add(",
      "",
      "[Removed Lines]",
      "68:         $builder->addEventSubscriber(new CleanFormSubscriber());",
      "",
      "[Added Lines]",
      "68:         $builder->addEventSubscriber(new CleanFormSubscriber(['signature' => 'html', 'email' => 'email']));",
      "",
      "---------------"
    ],
    "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php": [
      "File: plugins/MauticSocialBundle/Form/Type/MonitoringType.php -> plugins/MauticSocialBundle/Form/Type/MonitoringType.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "41:     public function buildForm(FormBuilderInterface $builder, array $options)",
      "42:     {",
      "45:         $builder->add('title', TextType::class, [",
      "46:             'label'      => 'mautic.core.name',",
      "",
      "[Removed Lines]",
      "43:         $builder->addEventSubscriber(new CleanFormSubscriber());",
      "",
      "[Added Lines]",
      "43:         $builder->addEventSubscriber(new CleanFormSubscriber(['description' => 'html']));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2c80e1050936d228609dcbb008880ee8df4b650c",
      "candidate_info": {
        "commit_hash": "2c80e1050936d228609dcbb008880ee8df4b650c",
        "repo": "mautic/mautic",
        "commit_url": "https://github.com/mautic/mautic/commit/2c80e1050936d228609dcbb008880ee8df4b650c",
        "files": [
          "app/bundles/CoreBundle/Update/Step/InstallNewFilesStep.php"
        ],
        "message": "Fix update error detection logic",
        "before_after_code_files": [
          "app/bundles/CoreBundle/Update/Step/InstallNewFilesStep.php||app/bundles/CoreBundle/Update/Step/InstallNewFilesStep.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/mautic/mautic/pull/9587"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "app/bundles/CoreBundle/Update/Step/InstallNewFilesStep.php||app/bundles/CoreBundle/Update/Step/InstallNewFilesStep.php": [
          "File: app/bundles/CoreBundle/Update/Step/InstallNewFilesStep.php -> app/bundles/CoreBundle/Update/Step/InstallNewFilesStep.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:         $package = $this->updateHelper->fetchPackage($update['package']);",
          "131:             throw new UpdateFailedException($this->translator->trans($package['message']));",
          "132:         }",
          "",
          "[Removed Lines]",
          "130:         if (isset($package['error'])) {",
          "",
          "[Added Lines]",
          "130:         if (isset($package['error']) && true === $package['error']) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af5b003ec5ca46af2f9ae8889a7a1c53fa099109",
      "candidate_info": {
        "commit_hash": "af5b003ec5ca46af2f9ae8889a7a1c53fa099109",
        "repo": "mautic/mautic",
        "commit_url": "https://github.com/mautic/mautic/commit/af5b003ec5ca46af2f9ae8889a7a1c53fa099109",
        "files": [
          "app/bundles/CoreBundle/Helper/InputHelper.php",
          "app/bundles/CoreBundle/Tests/Unit/Helper/InputHelperTest.php"
        ],
        "message": "Better sanitization of URLs",
        "before_after_code_files": [
          "app/bundles/CoreBundle/Helper/InputHelper.php||app/bundles/CoreBundle/Helper/InputHelper.php",
          "app/bundles/CoreBundle/Tests/Unit/Helper/InputHelperTest.php||app/bundles/CoreBundle/Tests/Unit/Helper/InputHelperTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/mautic/mautic/pull/9587"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "app/bundles/CoreBundle/Helper/InputHelper.php||app/bundles/CoreBundle/Helper/InputHelper.php": [
          "File: app/bundles/CoreBundle/Helper/InputHelper.php -> app/bundles/CoreBundle/Helper/InputHelper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "297:         $value = filter_var($value, FILTER_SANITIZE_URL);",
          "298:         $parts = parse_url($value);",
          "315:                 }",
          "317:             }",
          "331:         }",
          "337:     }",
          "",
          "[Removed Lines]",
          "300:         if ($parts && !empty($parts['path'])) {",
          "301:             if (isset($parts['scheme'])) {",
          "302:                 if (!in_array($parts['scheme'], $allowedProtocols)) {",
          "303:                     $parts['scheme'] = $defaultProtocol;",
          "304:                 }",
          "305:             } else {",
          "306:                 $parts['scheme'] = $defaultProtocol;",
          "307:             }",
          "309:             if (!empty($removeQuery) && !empty($parts['query'])) {",
          "310:                 parse_str($parts['query'], $query);",
          "311:                 foreach ($removeQuery as $q) {",
          "312:                     if (isset($query[$q])) {",
          "313:                         unset($query[$q]);",
          "314:                     }",
          "316:                 $parts['query'] = http_build_query($query);",
          "319:             $value =",
          "320:                 (!empty($parts['scheme']) ? $parts['scheme'].'://' : '').",
          "321:                 (!empty($parts['user']) ? $parts['user'].':' : '').",
          "322:                 (!empty($parts['pass']) ? $parts['pass'].'@' : '').",
          "323:                 (!empty($parts['host']) ? $parts['host'] : '').",
          "324:                 (!empty($parts['port']) ? ':'.$parts['port'] : '').",
          "325:                 (!empty($parts['path']) ? $parts['path'] : '').",
          "326:                 (!empty($parts['query']) ? '?'.$parts['query'] : '').",
          "327:                 (!$ignoreFragment && !empty($parts['fragment']) ? '#'.$parts['fragment'] : '');",
          "328:         } else {",
          "330:             $value = self::clean($value);",
          "334:         $value = preg_replace('#<script(.*?)>(.*?)</script>#is', '', $value);",
          "336:         return $value;",
          "",
          "[Added Lines]",
          "300:         if (!$parts || !filter_var($value, FILTER_VALIDATE_URL)) {",
          "302:             return self::clean($value);",
          "303:         }",
          "305:         $parts['scheme'] = $parts['scheme'] ?? $defaultProtocol;",
          "306:         if (!in_array($parts['scheme'], $allowedProtocols)) {",
          "307:             $parts['scheme'] = $defaultProtocol;",
          "308:         }",
          "310:         if (!empty($parts['query'])) {",
          "311:             parse_str($parts['query'], $query);",
          "314:             foreach ($removeQuery as $q) {",
          "315:                 if (isset($query[$q])) {",
          "316:                     unset($query[$q]);",
          "321:             $parts['query'] = http_build_query($query);",
          "324:         return",
          "326:             (!empty($parts['scheme']) ? $parts['scheme'].'://' : '').",
          "328:             (!empty($parts['user']) ? strip_tags($parts['user']).':' : '').",
          "329:             (!empty($parts['pass']) ? strip_tags($parts['pass']).'@' : '').",
          "331:             (!empty($parts['host']) ? $parts['host'] : '').",
          "333:             (!empty($parts['port']) ? ':'.(int) $parts['port'] : '').",
          "335:             (!empty($parts['path']) ? strip_tags($parts['path']) : '').",
          "337:             (!empty($parts['query']) ? '?'.$parts['query'] : '').",
          "339:             (!$ignoreFragment && !empty($parts['fragment']) ? '#'.strip_tags($parts['fragment']) : '');",
          "",
          "---------------"
        ],
        "app/bundles/CoreBundle/Tests/Unit/Helper/InputHelperTest.php||app/bundles/CoreBundle/Tests/Unit/Helper/InputHelperTest.php": [
          "File: app/bundles/CoreBundle/Tests/Unit/Helper/InputHelperTest.php -> app/bundles/CoreBundle/Tests/Unit/Helper/InputHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Mautic\\CoreBundle\\Tests\\Unit\\Helper;",
          "14: use Mautic\\CoreBundle\\Helper\\InputHelper;",
          "17: {",
          "",
          "[Removed Lines]",
          "16: class InputHelperTest extends \\PHPUnit\\Framework\\TestCase",
          "",
          "[Added Lines]",
          "15: use PHPUnit\\Framework\\Assert;",
          "16: use PHPUnit\\Framework\\TestCase;",
          "18: class InputHelperTest extends TestCase",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163:             $this->assertEquals(InputHelper::transliterate($input), $expected);",
          "164:         }",
          "165:     }",
          "166: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     public function testUrlSanitization(string $inputUrl, string $outputUrl, bool $ignoreFragment = false): void",
          "173:     {",
          "174:         $cleanedUrl = InputHelper::url($inputUrl, false, null, null, [], $ignoreFragment);",
          "176:         Assert::assertEquals($cleanedUrl, $outputUrl);",
          "177:     }",
          "179:     public function urlProvider(): iterable",
          "180:     {",
          "182:         yield ['https://www.mautic.org/somewhere/something?foo=bar#abc123', 'https://www.mautic.org/somewhere/something?foo=bar#abc123'];",
          "185:         yield ['<img src=\"hello.png\" />', '&#60;imgsrc=&#34;hello.png&#34;/&#62;'];",
          "188:         yield ['foo://www.mautic.org', 'http://www.mautic.org'];",
          "191:         yield ['http://user:password@www.mautic.org', 'http://user:password@www.mautic.org'];",
          "194:         yield ['http://<img>:<img>@www.mautic.org', 'http://:@www.mautic.org'];",
          "197:         yield ['http://<img/src=\"doesnotexist.jpg\">', 'http://&#60;img/src=&#34;doesnotexist.jpg&#34;&#62;'];",
          "200:         yield ['http://www.mautic.org:8080/path', 'http://www.mautic.org:8080/path'];",
          "203:         yield ['http://www.mautic.org/abc<img/src=\"doesnotexist.jpg\">123', 'http://www.mautic.org/abc123'];",
          "206:         yield ['http://www.mautic.org?<foo>=bar', 'http://www.mautic.org?%3Cfoo%3E=bar'];",
          "209:         yield ['http://www.mautic.org?%3Cfoo%3E=<bar>', 'http://www.mautic.org?%3Cfoo%3E=%3Cbar%3E'];",
          "212:         yield ['http://www.mautic.org#<img/src=\"doesnotexist.jpg\">', 'http://www.mautic.org#'];",
          "213:         yield ['http://www.mautic.org#%3Cimg%2Fsrc%3D%22doesnotexist.jpg%22%3E', 'http://www.mautic.org#%3Cimg%2Fsrc%3D%22doesnotexist.jpg%22%3E'];",
          "214:         yield ['http://www.mautic.org#abc<img/src=\"doesnotexist.jpg\">123', 'http://www.mautic.org#abc123'];",
          "217:         yield ['http://www.mautic.org#abc123', 'http://www.mautic.org', true];",
          "218:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e3f3f2cc3540a2bf89d7a67398995ddb6a4b489e",
      "candidate_info": {
        "commit_hash": "e3f3f2cc3540a2bf89d7a67398995ddb6a4b489e",
        "repo": "mautic/mautic",
        "commit_url": "https://github.com/mautic/mautic/commit/e3f3f2cc3540a2bf89d7a67398995ddb6a4b489e",
        "files": [
          "app/bundles/ApiBundle/Form/Type/ClientType.php",
          "app/bundles/CategoryBundle/Form/Type/CategoryType.php",
          "app/bundles/LeadBundle/Form/Type/CompanyType.php",
          "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
          "app/bundles/UserBundle/Form/Type/PasswordResetType.php",
          "app/bundles/UserBundle/Form/Type/UserType.php",
          "plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
        ],
        "message": "Add and improve input cleaning in multiple areas",
        "before_after_code_files": [
          "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php",
          "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php",
          "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php",
          "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
          "app/bundles/UserBundle/Form/Type/PasswordResetType.php||app/bundles/UserBundle/Form/Type/PasswordResetType.php",
          "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php",
          "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/mautic/mautic/pull/9587"
        ],
        "olp_code_files": {
          "patch": [
            "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php",
            "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php",
            "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php",
            "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
            "app/bundles/UserBundle/Form/Type/PasswordResetType.php||app/bundles/UserBundle/Form/Type/PasswordResetType.php",
            "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php",
            "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
          ],
          "candidate": [
            "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php",
            "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php",
            "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php",
            "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
            "app/bundles/UserBundle/Form/Type/PasswordResetType.php||app/bundles/UserBundle/Form/Type/PasswordResetType.php",
            "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php",
            "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
          ]
        }
      },
      "candidate_diff": {
        "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php": [
          "File: app/bundles/ApiBundle/Form/Type/ClientType.php -> app/bundles/ApiBundle/Form/Type/ClientType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "75:     {",
          "77:         $builder->addEventSubscriber(new FormExitSubscriber('api.client', $options));",
          "79:         if (!$options['data']->getId()) {",
          "",
          "[Removed Lines]",
          "76:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "76:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
          "",
          "---------------"
        ],
        "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php": [
          "File: app/bundles/CategoryBundle/Form/Type/CategoryType.php -> app/bundles/CategoryBundle/Form/Type/CategoryType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "39:     {",
          "41:         $builder->addEventSubscriber(new FormExitSubscriber('category.category', $options));",
          "43:         if (!$options['data']->getId()) {",
          "",
          "[Removed Lines]",
          "40:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "40:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
          "",
          "---------------"
        ],
        "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php": [
          "File: app/bundles/LeadBundle/Form/Type/CompanyType.php -> app/bundles/LeadBundle/Form/Type/CompanyType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Doctrine\\ORM\\EntityManager;",
          "15: use Mautic\\CoreBundle\\Form\\DataTransformer\\IdToEntityModelTransformer;",
          "16: use Mautic\\CoreBundle\\Form\\Type\\FormButtonsType;",
          "17: use Mautic\\LeadBundle\\Entity\\Company;",
          "18: use Mautic\\UserBundle\\Entity\\User;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use Mautic\\CoreBundle\\Form\\EventListener\\CleanFormSubscriber;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "58:     {",
          "61:         $transformer = new IdToEntityModelTransformer($this->em, User::class);",
          "",
          "[Removed Lines]",
          "59:         $this->getFormFields($builder, $options, 'company');",
          "",
          "[Added Lines]",
          "60:         $cleaningRules                 = $this->getFormFields($builder, $options, 'company');",
          "61:         $cleaningRules['companyemail'] = 'email';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:                 ],",
          "139:             ]",
          "140:         );",
          "141:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:         $builder->addEventSubscriber(new CleanFormSubscriber($cleaningRules));",
          "",
          "---------------"
        ],
        "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php": [
          "File: app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php -> app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "29:     {",
          "32:         $builder->add(",
          "33:             'identifier',",
          "",
          "[Removed Lines]",
          "30:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "30:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
          "",
          "---------------"
        ],
        "app/bundles/UserBundle/Form/Type/PasswordResetType.php||app/bundles/UserBundle/Form/Type/PasswordResetType.php": [
          "File: app/bundles/UserBundle/Form/Type/PasswordResetType.php -> app/bundles/UserBundle/Form/Type/PasswordResetType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "27:     {",
          "30:         $builder->add(",
          "31:             'identifier',",
          "",
          "[Removed Lines]",
          "28:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "28:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
          "",
          "---------------"
        ],
        "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php": [
          "File: app/bundles/UserBundle/Form/Type/UserType.php -> app/bundles/UserBundle/Form/Type/UserType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "67:     {",
          "69:         $builder->addEventSubscriber(new FormExitSubscriber('user.user', $options));",
          "71:         $builder->add(",
          "",
          "[Removed Lines]",
          "68:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "68:         $builder->addEventSubscriber(new CleanFormSubscriber(['signature' => 'html', 'email' => 'email']));",
          "",
          "---------------"
        ],
        "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php": [
          "File: plugins/MauticSocialBundle/Form/Type/MonitoringType.php -> plugins/MauticSocialBundle/Form/Type/MonitoringType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "42:     {",
          "45:         $builder->add('title', TextType::class, [",
          "46:             'label'      => 'mautic.core.name',",
          "",
          "[Removed Lines]",
          "43:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "43:         $builder->addEventSubscriber(new CleanFormSubscriber(['description' => 'html']));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80910fd11d0f377ea5b655effbd1e511e6cd3104",
      "candidate_info": {
        "commit_hash": "80910fd11d0f377ea5b655effbd1e511e6cd3104",
        "repo": "mautic/mautic",
        "commit_url": "https://github.com/mautic/mautic/commit/80910fd11d0f377ea5b655effbd1e511e6cd3104",
        "files": [
          "app/bundles/ApiBundle/Form/Type/ClientType.php",
          "app/bundles/CategoryBundle/Form/Type/CategoryType.php",
          "app/bundles/LeadBundle/Form/Type/CompanyType.php",
          "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
          "app/bundles/UserBundle/Form/Type/UserType.php",
          "plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
        ],
        "message": "Add and improve input cleaning in multiple areas",
        "before_after_code_files": [
          "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php",
          "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php",
          "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php",
          "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
          "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php",
          "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php",
            "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php",
            "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php",
            "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
            "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php",
            "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
          ],
          "candidate": [
            "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php",
            "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php",
            "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php",
            "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
            "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php",
            "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php"
          ]
        }
      },
      "candidate_diff": {
        "app/bundles/ApiBundle/Form/Type/ClientType.php||app/bundles/ApiBundle/Form/Type/ClientType.php": [
          "File: app/bundles/ApiBundle/Form/Type/ClientType.php -> app/bundles/ApiBundle/Form/Type/ClientType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "66:     {",
          "68:         $builder->addEventSubscriber(new FormExitSubscriber('api.client', $options));",
          "70:         if (!$options['data']->getId()) {",
          "",
          "[Removed Lines]",
          "67:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "67:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
          "",
          "---------------"
        ],
        "app/bundles/CategoryBundle/Form/Type/CategoryType.php||app/bundles/CategoryBundle/Form/Type/CategoryType.php": [
          "File: app/bundles/CategoryBundle/Form/Type/CategoryType.php -> app/bundles/CategoryBundle/Form/Type/CategoryType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "55:     {",
          "57:         $builder->addEventSubscriber(new FormExitSubscriber('category.category', $options));",
          "59:         if (!$options['data']->getId()) {",
          "",
          "[Removed Lines]",
          "56:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "56:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
          "",
          "---------------"
        ],
        "app/bundles/LeadBundle/Form/Type/CompanyType.php||app/bundles/LeadBundle/Form/Type/CompanyType.php": [
          "File: app/bundles/LeadBundle/Form/Type/CompanyType.php -> app/bundles/LeadBundle/Form/Type/CompanyType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use Doctrine\\ORM\\EntityManager;",
          "15: use Mautic\\CoreBundle\\Form\\DataTransformer\\IdToEntityModelTransformer;",
          "16: use Mautic\\CoreBundle\\Security\\Permissions\\CorePermissions;",
          "17: use Symfony\\Component\\Form\\AbstractType;",
          "18: use Symfony\\Component\\Form\\FormBuilderInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use Mautic\\CoreBundle\\Form\\EventListener\\CleanFormSubscriber;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "64:     {",
          "67:         $transformer = new IdToEntityModelTransformer(",
          "68:             $this->em,",
          "",
          "[Removed Lines]",
          "65:         $this->getFormFields($builder, $options, 'company');",
          "",
          "[Added Lines]",
          "66:         $cleaningRules                 = $this->getFormFields($builder, $options, 'company');",
          "67:         $cleaningRules['companyemail'] = 'email';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "142:                 ],",
          "143:             ],",
          "144:         ]);",
          "145:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:         $builder->addEventSubscriber(new CleanFormSubscriber($cleaningRules));",
          "",
          "---------------"
        ],
        "app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php||app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php": [
          "File: app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php -> app/bundles/UserBundle/Form/Type/PasswordResetConfirmType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "28:     {",
          "31:         $builder->add('identifier', 'text', [",
          "32:             'label'      => 'mautic.user.auth.form.loginusername',",
          "",
          "[Removed Lines]",
          "29:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "29:         $builder->addEventSubscriber(new CleanFormSubscriber([]));",
          "",
          "---------------"
        ],
        "app/bundles/UserBundle/Form/Type/UserType.php||app/bundles/UserBundle/Form/Type/UserType.php": [
          "File: app/bundles/UserBundle/Form/Type/UserType.php -> app/bundles/UserBundle/Form/Type/UserType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "91:     {",
          "93:         $builder->addEventSubscriber(new FormExitSubscriber('user.user', $options));",
          "95:         $builder->add(",
          "",
          "[Removed Lines]",
          "92:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "92:         $builder->addEventSubscriber(new CleanFormSubscriber(['signature' => 'html', 'email' => 'email']));",
          "",
          "---------------"
        ],
        "plugins/MauticSocialBundle/Form/Type/MonitoringType.php||plugins/MauticSocialBundle/Form/Type/MonitoringType.php": [
          "File: plugins/MauticSocialBundle/Form/Type/MonitoringType.php -> plugins/MauticSocialBundle/Form/Type/MonitoringType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:     public function buildForm(FormBuilderInterface $builder, array $options)",
          "25:     {",
          "28:         $builder->add('title', 'text', [",
          "29:             'label'      => 'mautic.core.name',",
          "",
          "[Removed Lines]",
          "26:         $builder->addEventSubscriber(new CleanFormSubscriber());",
          "",
          "[Added Lines]",
          "26:         $builder->addEventSubscriber(new CleanFormSubscriber(['description' => 'html']));",
          "",
          "---------------"
        ]
      }
    }
  ]
}