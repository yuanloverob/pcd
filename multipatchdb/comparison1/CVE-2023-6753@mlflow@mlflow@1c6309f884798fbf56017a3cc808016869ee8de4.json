{
  "cve_id": "CVE-2023-6753",
  "cve_desc": "Path Traversal in GitHub repository mlflow/mlflow prior to 2.9.2.",
  "repo": "mlflow/mlflow",
  "patch_hash": "1c6309f884798fbf56017a3cc808016869ee8de4",
  "patch_info": {
    "commit_hash": "1c6309f884798fbf56017a3cc808016869ee8de4",
    "repo": "mlflow/mlflow",
    "commit_url": "https://github.com/mlflow/mlflow/commit/1c6309f884798fbf56017a3cc808016869ee8de4",
    "files": [
      "mlflow/data/http_dataset_source.py",
      "tests/data/test_http_dataset_source.py"
    ],
    "message": "Fix for windows traversal attack (#10647)\n\nSigned-off-by: Ben Wilson <benjamin.wilson@databricks.com>\nSigned-off-by: Ben Wilson <39283302+BenWilson2@users.noreply.github.com>\nCo-authored-by: Harutaka Kawamura <hkawamura0130@gmail.com>",
    "before_after_code_files": [
      "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py",
      "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py"
    ]
  },
  "patch_diff": {
    "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py": [
      "File: mlflow/data/http_dataset_source.py -> mlflow/data/http_dataset_source.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import os",
      "3: import re",
      "4: from typing import Any, Dict",
      "5: from urllib.parse import urlparse",
      "",
      "[Removed Lines]",
      "2: import posixpath",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "41:     def _get_source_type() -> str:",
      "42:         return \"http\"",
      "44:     def load(self, dst_path=None) -> str:",
      "45:         \"\"\"",
      "46:         Downloads the dataset source to the local filesystem.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "43:     def _extract_filename(self, response) -> str:",
      "44:         \"\"\"",
      "45:         Extracts a filename from the Content-Disposition header or the URL's path.",
      "46:         \"\"\"",
      "47:         if content_disposition := response.headers.get(\"Content-Disposition\"):",
      "48:             for match in re.finditer(r\"filename=(.+)\", content_disposition):",
      "49:                 filename = match[1].strip(\"'\\\"\")",
      "50:                 if _is_path(filename):",
      "51:                     raise MlflowException.invalid_parameter_value(",
      "52:                         f\"Invalid filename in Content-Disposition header: {filename}. \"",
      "53:                         \"It must be a file name, not a path.\"",
      "54:                     )",
      "55:                 return filename",
      "57:         # Extract basename from URL if no valid filename in Content-Disposition",
      "58:         return os.path.basename(urlparse(self.url).path)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "58:         )",
      "59:         augmented_raise_for_status(resp)",
      "76:             basename = \"dataset_source\"",
      "78:         if dst_path is None:",
      "",
      "[Removed Lines]",
      "61:         path = urlparse(self.url).path",
      "62:         content_disposition = resp.headers.get(\"Content-Disposition\")",
      "63:         if content_disposition is not None and (",
      "64:             file_name := next(re.finditer(r\"filename=(.+)\", content_disposition), None)",
      "65:         ):",
      "66:             # NB: If the filename is quoted, unquote it",
      "67:             basename = file_name[1].strip(\"'\\\"\")",
      "68:             if _is_path(basename):",
      "69:                 raise MlflowException.invalid_parameter_value(",
      "70:                     f\"Invalid filename in Content-Disposition header: {basename}. \"",
      "71:                     \"It must be a file name, not a path.\"",
      "72:                 )",
      "73:         elif path is not None and len(posixpath.basename(path)) > 0:",
      "74:             basename = posixpath.basename(path)",
      "75:         else:",
      "",
      "[Added Lines]",
      "77:         basename = self._extract_filename(resp)",
      "79:         if not basename:",
      "",
      "---------------"
    ],
    "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py": [
      "File: tests/data/test_http_dataset_source.py -> tests/data/test_http_dataset_source.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: from mlflow.data.dataset_source_registry import get_dataset_source_from_json, resolve_dataset_source",
      "9: from mlflow.data.http_dataset_source import HTTPDatasetSource",
      "10: from mlflow.exceptions import MlflowException",
      "11: from mlflow.utils.rest_utils import cloud_storage_http_request",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11: from mlflow.utils.os import is_windows",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "156:         with pytest.raises(MlflowException, match=\"Invalid filename in Content-Disposition header\"):",
      "157:             source.load()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "161: @pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")",
      "162: @pytest.mark.parametrize(",
      "163:     \"filename\",",
      "164:     [",
      "165:         r\"..\\..\\poc.txt\",",
      "166:         r\"Users\\User\\poc.txt\",",
      "167:     ],",
      "168: )",
      "169: def test_source_load_with_content_disposition_header_invalid_filename_windows(filename):",
      "170:     def download_with_mock_content_disposition_headers(*args, **kwargs):",
      "171:         response = cloud_storage_http_request(*args, **kwargs)",
      "172:         response.headers = {\"Content-Disposition\": f\"attachment; filename={filename}\"}",
      "173:         return response",
      "175:     with mock.patch(",
      "176:         \"mlflow.data.http_dataset_source.cloud_storage_http_request\",",
      "177:         side_effect=download_with_mock_content_disposition_headers,",
      "178:     ):",
      "179:         source = HTTPDatasetSource(",
      "180:             \"https://raw.githubusercontent.com/mlflow/mlflow/master/tests/datasets/winequality-red.csv\"",
      "181:         )",
      "183:         # Expect an MlflowException for invalid filenames",
      "184:         with pytest.raises(MlflowException, match=\"Invalid filename in Content-Disposition header\"):",
      "185:             source.load()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3a58f74aeec78a0d9c21cdf62e44e89e5017ca68",
      "candidate_info": {
        "commit_hash": "3a58f74aeec78a0d9c21cdf62e44e89e5017ca68",
        "repo": "mlflow/mlflow",
        "commit_url": "https://github.com/mlflow/mlflow/commit/3a58f74aeec78a0d9c21cdf62e44e89e5017ca68",
        "files": [
          ".github/workflows/master.yml",
          "dev/generate-protos.sh",
          "docs/source/python_api/mlflow.data.rst",
          "docs/source/tracking.rst",
          "mlflow/__init__.py",
          "mlflow/data/__init__.py",
          "mlflow/data/artifact_dataset_sources.py",
          "mlflow/data/code_dataset_source.py",
          "mlflow/data/dataset.py",
          "mlflow/data/dataset_registry.py",
          "mlflow/data/dataset_source.py",
          "mlflow/data/dataset_source_registry.py",
          "mlflow/data/delta_dataset_source.py",
          "mlflow/data/digest_utils.py",
          "mlflow/data/filesystem_dataset_source.py",
          "mlflow/data/http_dataset_source.py",
          "mlflow/data/huggingface_dataset.py",
          "mlflow/data/huggingface_dataset_source.py",
          "mlflow/data/numpy_dataset.py",
          "mlflow/data/pandas_dataset.py",
          "mlflow/data/pyfunc_dataset_mixin.py",
          "mlflow/data/schema.py",
          "mlflow/data/sources.py",
          "mlflow/data/spark_dataset.py",
          "mlflow/data/spark_dataset_source.py",
          "mlflow/data/spark_delta_utils.py",
          "mlflow/data/tensorflow_dataset.py",
          "mlflow/entities/__init__.py",
          "mlflow/entities/dataset.py",
          "mlflow/entities/dataset_input.py",
          "mlflow/entities/input_tag.py",
          "mlflow/entities/run.py",
          "mlflow/entities/run_inputs.py",
          "mlflow/fastai/__init__.py",
          "mlflow/gluon/__init__.py",
          "mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java",
          "mlflow/java/client/src/main/java/org/mlflow/internal/proto/Internal.java",
          "mlflow/lightgbm.py",
          "mlflow/models/evaluation/base.py",
          "mlflow/protos/internal.proto",
          "mlflow/protos/internal_pb2.py",
          "mlflow/protos/service.proto",
          "mlflow/protos/service_pb2.py",
          "mlflow/pyspark/ml/__init__.py",
          "mlflow/pytorch/__init__.py",
          "mlflow/server/handlers.py",
          "mlflow/sklearn/__init__.py",
          "mlflow/statsmodels.py",
          "mlflow/store/artifact/artifact_repository_registry.py",
          "mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py",
          "mlflow/store/tracking/abstract_store.py",
          "mlflow/store/tracking/dbmodels/models.py",
          "mlflow/store/tracking/file_store.py",
          "mlflow/store/tracking/rest_store.py",
          "mlflow/store/tracking/sqlalchemy_store.py",
          "mlflow/tensorflow/__init__.py",
          "mlflow/tracking/_tracking_service/client.py",
          "mlflow/tracking/client.py",
          "mlflow/tracking/fluent.py",
          "mlflow/transformers.py",
          "mlflow/utils/autologging_utils/client.py",
          "mlflow/utils/mlflow_tags.py",
          "mlflow/utils/uri.py",
          "mlflow/utils/validation.py",
          "mlflow/xgboost/__init__.py",
          "requirements/doc-requirements.txt",
          "requirements/extra-ml-requirements.txt",
          "tests/data/test_artifact_dataset_sources.py",
          "tests/data/test_code_dataset_source.py",
          "tests/data/test_dataset.py",
          "tests/data/test_dataset_registry.py",
          "tests/data/test_dataset_source.py",
          "tests/data/test_dataset_source_registry.py",
          "tests/data/test_delta_dataset_source.py",
          "tests/data/test_http_dataset_source.py",
          "tests/data/test_huggingface_dataset_and_source.py",
          "tests/data/test_numpy_dataset.py",
          "tests/data/test_pandas_dataset.py",
          "tests/data/test_spark_dataset.py",
          "tests/data/test_spark_dataset_source.py",
          "tests/data/test_tensorflow_dataset.py",
          "tests/entities/conftest.py",
          "tests/entities/test_dataset.py",
          "tests/entities/test_dataset_input.py",
          "tests/entities/test_input_tag.py",
          "tests/entities/test_run.py",
          "tests/entities/test_run_inputs.py",
          "tests/evaluate/test_evaluation.py",
          "tests/lightgbm/test_lightgbm_autolog.py",
          "tests/resources/data/__init__.py",
          "tests/resources/data/dataset.py",
          "tests/resources/data/dataset_source.py",
          "tests/resources/db/latest_schema.sql",
          "tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset.py",
          "tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset_source.py",
          "tests/resources/mlflow-test-plugin/setup.py",
          "tests/sklearn/test_sklearn_autolog.py",
          "tests/spark/autologging/ml/test_pyspark_ml_autologging.py",
          "tests/store/tracking/test_abstract_store.py",
          "tests/store/tracking/test_file_store.py",
          "tests/store/tracking/test_rest_store.py",
          "tests/store/tracking/test_sqlalchemy_store.py",
          "tests/store/tracking/test_sqlalchemy_store_schema.py",
          "tests/tensorflow/test_tensorflow2_autolog.py",
          "tests/tracking/fluent/test_fluent.py",
          "tests/tracking/fluent/test_fluent_autolog.py",
          "tests/tracking/test_rest_tracking.py",
          "tests/xgboost/test_xgboost_autolog.py"
        ],
        "message": "MLflow Dataset Tracking (#8186)\n\n* [Feature branch] Introduce dataset source plugin system (#8046)\n\n* [Feature branch] Plugin system for MLflow dataset tracking (#8042)\n\n* Source reg\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Rename\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Registry\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Data\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Rename data.py\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dataset sources\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Partial\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Sources\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* done\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* dbfs data source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dummy\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Tweaks\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some docs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Working pandas\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Pandas works :D\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Colspec in schema\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test structure\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Move\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some tests\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Suite\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Many test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Add files\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Blacken\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* CI\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove todo\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Simplify\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Resource init\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Removals\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Tweak\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove unused\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix tests, rename\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove dataset stuff\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Better docs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Blank init\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Restore file\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Datasets files\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Lint\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Better docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Docstring\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Implement data sources for MLflow artifact repositories (#8051)\n\n* Source reg\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Rename\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Registry\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Data\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Rename data.py\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dataset sources\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Partial\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Sources\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* done\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* dbfs data source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dummy\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Tweaks\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some docs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Working pandas\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Pandas works :D\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Colspec in schema\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test structure\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Move\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some tests\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Suite\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Many test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Add files\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Blacken\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* CI\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove todo\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Simplify\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Resource init\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Removals\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Tweak\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove unused\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix tests, rename\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove dataset stuff\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Better docs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Blank init\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Restore file\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Datasets files\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Lint\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Better docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Docstring\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Register artifact sources\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Get it working\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* artifact DS\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some test coverage\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test, docstring\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix windows\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Assert on content\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Rename datasets download() to load(), add dst_path for downloads (#8069)\n\n* fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove separator\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Lint\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* increase python ci timeout (#8134)\n\nSigned-off-by: Ben Wilson <benjamin.wilson@databricks.com>\n\n* [Feature Branch] Dataset and source for HuggingFace (#8119)\n\n* Source reg\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Rename\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Registry\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Data\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Rename data.py\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dataset sources\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Partial\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Sources\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* done\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* dbfs data source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dummy\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Tweaks\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some docs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Working pandas\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Pandas works :D\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Colspec in schema\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test structure\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Move\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some tests\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Suite\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Many test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Add files\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Blacken\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* CI\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove todo\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Simplify\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Resource init\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Removals\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Tweak\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove unused\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix tests, rename\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove dataset stuff\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Better docs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Blank init\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Restore file\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Datasets files\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Lint\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Better docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Docstring\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* HF source base\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More args\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More args\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* HF - needs tests\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Updates\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Loosen dict requirements\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix windows\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* to_pyfunc, targets, test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Docstrings and couple tests\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Mixin\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* hyphen source type\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Digest fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Add consistent digest big data test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Format\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] DB and schema for Datasets (#8128)\n\n* [Feature branch] Add Numpy and Pandas Datasets (#8111)\n\n* add numpy dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test for numpy dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add pandas dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* update\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test for deterministic hash\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add property\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* targets in numpy\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* PyFuncConvertibleDatasetMixin\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* create delta and spark dataset sources\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix delta and spark source\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test from_pandas and from_numpy\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* delta information\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* from_pandas with delta and spark sources\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* tablse\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix delta tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* _get_table_info_if_uc\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* databricks-uc host creds\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* _is_uc_table\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* split out spark and delta dataset source tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Autoformat: https://github.com/mlflow/mlflow/actions/runs/4602300008\n\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* cleanup\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* addressing comments\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* bump delta core to 2.2.0\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixed all references of spark session\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* remove import\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\nCo-authored-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* [Feature Branch] File store for MLflow datasets (#8146)\n\n* Check out data model files except sql\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Working filestore\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Simplify\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test cases\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* SQL, REST notimplemennt\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Address comment\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Address comments\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Coverage\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Add internal\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove exp\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Pass\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Datasets rest and sqlalchemy backend (#8129)\n\n* Add log inputs to rest store\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test_rest_store\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Autoformat: https://github.com/mlflow/mlflow/actions/runs/4604613188\n\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* log_inputs api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* bulk writes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* implement read inputs to run via _get_run_inputs\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* unused import\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test_log_inputs_fails_with_missing_inputs and test_log_inputs_fails_with_too_large_inputs\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* search_runs and test case\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* more tests [wip]\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixed write side\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixing some tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix overwrite issue\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* cleanup\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* teardown\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\nCo-authored-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* [Feature branch] log_input fluent api (#8172)\n\n* Add log inputs to rest store\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test_rest_store\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Autoformat: https://github.com/mlflow/mlflow/actions/runs/4604613188\n\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* log_inputs api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* bulk writes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* draft for log_inputs fluent api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fluent log_input api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test case\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* implement read inputs to run via _get_run_inputs\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* unused import\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test_log_inputs_fails_with_missing_inputs and test_log_inputs_fails_with_too_large_inputs\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* search_runs and test case\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* more tests [wip]\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pylint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixing up test_log_input\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixed write side\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixing some tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix overwrite issue\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* cleanup\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Autoformat: https://github.com/mlflow/mlflow/actions/runs/4627612637\n\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* teardown\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\nCo-authored-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* [Feature branch] python server log inputs (#8185)\n\n* Add log inputs to rest store\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test_rest_store\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Autoformat: https://github.com/mlflow/mlflow/actions/runs/4604613188\n\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* log_inputs api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* bulk writes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* draft for log_inputs fluent api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fluent log_input api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test case\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* implement read inputs to run via _get_run_inputs\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* unused import\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test_log_inputs_fails_with_missing_inputs and test_log_inputs_fails_with_too_large_inputs\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* search_runs and test case\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* more tests [wip]\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pylint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixing up test_log_input\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixed write side\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixing some tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix overwrite issue\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* cleanup\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Autoformat: https://github.com/mlflow/mlflow/actions/runs/4627612637\n\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* teardown\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* python server log inputs\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* check keys\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* remove run_uuid\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\nCo-authored-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\n\n* create a code dataset source (#8201)\n\n* create a code dataset source\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* mlflow_source_type and mlflow_source_name\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Spark Dataset for MLflow Tracking (#8151)\n\n* add numpy dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test for numpy dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add pandas dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* update\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Partial spark ds, hash is broken\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* test for deterministic hash\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add property\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* targets in numpy\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* PyFuncConvertibleDatasetMixin\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* create delta and spark dataset sources\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix delta and spark source\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* spark\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* spark\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Add\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* test from_pandas and from_numpy\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* delta information\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix kwagrs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Register\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dedupe\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* remove nl\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Address comments\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* test case for spark dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* approx count\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* skeleton for various from_spark tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* tests for properties\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix _is_delta_table\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test cleanup\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* move pyspark import\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* trying again\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* create spark_delta_utils\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pyspark import into util fn\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* import utils inside loaders\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* check for pyspark in sys modules\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* move pyspark import to load in spark and delta source\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\nCo-authored-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small bug fixes for datasets (#8227)\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Tensorflow Dataset for MLflow tracking (#8218)\n\n* tensorflow dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* more progress\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix schema and profile\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test tensor\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* move tf imports\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test_tensorflow_dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* remove reference to dataframe\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* [Feature branch] NumPy dataset fix: incorporate targets into schema and profile (#8305)\n\n* Infer schem dict\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix profile and schema for np\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Import data (#8314)\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Change MLflow dataset placeholder name to \"dataset\" (#8315)\n\n* Use dataset as default\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dataset\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Small improvements to dataset sources (#8300)\n\n* Patches\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Make dataset sources importable\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove protocol\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Cherry pick\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix entrypoint loading error and revert dummy dataset\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Comment\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix typo\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* DS\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix attempt\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix silliness\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Introduce mlflow.data.get_source() API (#8318)\n\n* load from source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Load source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Experimental\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Tensorflow targets (#8329)\n\n* tensorflow dataset targets\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test coverage\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* cosmetic changes:\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* [Feature branch] Support Dataset in `mlflow.evaluate` (#8194)\n\n* starting out\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* draft of branching with mlflow dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add to_evaluation_dataset to pyfunc mixin\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* to_evaluation_dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* log input\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add to_evaluation_dataset to all dataset types\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* remove tensorflow impl\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* use metric prefix as name\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add test without metric_prefix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* update to_evaluation_dataset and add test cases\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* update docstrings and use client api\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix case with no context\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* make targets optional\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* disable=unused-variable\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix tensorflow targets and expand tests for to_evaluation_dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* only support eval dataset if Tensor\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* [Feature Branch] Fix naming issue for Spark datasets loaded from Delta, improve test coverage (#8304)\n\n* SQL\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix approx count performance\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\nSigned-off-by: Corey Zumar <39497902+dbczumar@users.noreply.github.com>\n\n* [Feature branch] Mark datasets as experimental (#8302)\n\n* Patches\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Make dataset sources importable\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove protocol\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Cherry pick\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix entrypoint loading error and revert dummy dataset\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Make experimental\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Mark DS and sources experimental\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Experimental entities\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Experimental input tags\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* get run docstrings\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Autologging for datasets (#8202)\n\n* autologging draft\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* dataset autologging utils\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* extend numpy_dataset to support arbitrary source\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* autologging for sklearn\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add targets\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* some fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lightgbm\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* xgboost\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* tensorflow\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pyspark ml\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* use spark dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* use scipy sparse instead of sklearn\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* few lints\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix up tensorflow dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* linter\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add missing log_datasets\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* version branching for spark and xgboost\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* skip for xgb < 1.7\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* spark autologgging\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fixes and lightgbm eval logging\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* some code cleanup\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add validation to sklearn\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* check schema in tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* eval logging for xgboost\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix this leak\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* use the autologging_client\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix tensorflow and lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* names for sklearn xgb lightgbm\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add back log_datasets dummy\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* eval dataset logging for tf\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* nits\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix eval\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix schemas\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* more fixes\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* update _log_pretraining_metadata\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* validation data as tuple\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* use tensorflow dataset for validation_data if tensor\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix schema\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* [Feature branch] HTTP Dataset source (#8299)\n\n* HTTP source\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix tests\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Some tests\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More test coverage\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* HF fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Var naming\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Remove protocol\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* t log# This is a combination of 3 commits.\n\nFixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\nFix lint\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\nTensorFlow\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix entrypoint loading error and revert dummy dataset\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Simplify test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Coverage\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Revert train\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Update http_dataset_source.py\n\n* Format\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\nSigned-off-by: Corey Zumar <39497902+dbczumar@users.noreply.github.com>\n\n* add MLFLOW_DATABRICKS_NOTEBOOK_ID to code dataset source (#8341)\n\n* add MLFLOW_DATABRICKS_NOTEBOOK_ID to code dataset source\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* test\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* store all context tags\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix naming for sklearn autologged datasets (#8343)\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Fix RunInputs to return entity instead of proto (#8347)\n\n* Fix proto return rest store\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* run input entity\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add test\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Use CodeDatasetSource if source info not provided (#8344)\n\n* use CodeDatasetSource if source info not provided\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* lint:\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* docstring\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Test (#8364)\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Fix bug when constructing Spark datasets from file path sources (#8366)\n\n* Check DS\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix python skinny scipy (#8379)\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix log_input with tags (#8384)\n\n* fix log_input for tags\n\nSigned-off-by: Ann Zhang <ann.zhang@databricks.com>\n\n* Add tests for log_input\n\nSigned-off-by: Ann Zhang <ann.zhang@databricks.com>\n\n---------\n\nSigned-off-by: Ann Zhang <ann.zhang@databricks.com>\n\n* [Feature branch] Fix schema / profile support for tensor datasets with dictionaries (#8372)\n\n* Schema + test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Improve coverage\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fixes\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* More coverage\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Test coverage\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix docstring\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* TF import fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Handle none case\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* handle none and add test\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix TF autolog\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fix schema test\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nCo-authored-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Datasets boilerplate in transformers autolog (#8469)\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Update schema in sklearn and xgboost tests  (#8525)\n\n* Update schema in sklearn and xgboost tests\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* empty\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Update optional targets logic with datasets (#8536)\n\n* Update optional targets logic with datasets\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* targets\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Fix get source code (#8543)\n\n* Update optional targets logic with datasets\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* targets\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Add CodeDatasetSource to dataset_source_registry\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* use unknown, increase timeout (#8549)\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* [Feature branch] Docs for MLflow datasets (#8303)\n\n* docs progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Initial API docs\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Renaming for tf\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Partial\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* data rst\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Install deps\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Fix\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Dataset\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* Progress\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\n\n* fix some doc references\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* alias\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* use numpy with a local array\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pyspark import\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* remove annotations for spark df\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* remove mlflow.data.DatasetSource and mlflow.data.Dataset\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* add dataset sources\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* double backtick\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* tracking doc\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* small fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* fix py class\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pysaprk\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nCo-authored-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* Small lint and test fixes (#8569)\n\n* line too long\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* docs format\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pyspark 3.4\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n* pyspark in extra ml requirements:\n\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\n\n---------\n\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\nSigned-off-by: Ben Wilson <benjamin.wilson@databricks.com>\nSigned-off-by: Prithvi Kannan <prithvi.kannan@databricks.com>\nSigned-off-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\nSigned-off-by: Corey Zumar <39497902+dbczumar@users.noreply.github.com>\nSigned-off-by: Ann Zhang <ann.zhang@databricks.com>\nCo-authored-by: Corey Zumar <39497902+dbczumar@users.noreply.github.com>\nCo-authored-by: Ben Wilson <39283302+BenWilson2@users.noreply.github.com>\nCo-authored-by: mlflow-automation <mlflow-automation@users.noreply.github.com>\nCo-authored-by: dbczumar <corey.zumar@databricks.com>\nCo-authored-by: Ann Zhang <ann.zhang@databricks.com>",
        "before_after_code_files": [
          "dev/generate-protos.sh||dev/generate-protos.sh",
          "mlflow/__init__.py||mlflow/__init__.py",
          "mlflow/data/__init__.py||mlflow/data/__init__.py",
          "mlflow/data/artifact_dataset_sources.py||mlflow/data/artifact_dataset_sources.py",
          "mlflow/data/code_dataset_source.py||mlflow/data/code_dataset_source.py",
          "mlflow/data/dataset.py||mlflow/data/dataset.py",
          "mlflow/data/dataset_registry.py||mlflow/data/dataset_registry.py",
          "mlflow/data/dataset_source.py||mlflow/data/dataset_source.py",
          "mlflow/data/dataset_source_registry.py||mlflow/data/dataset_source_registry.py",
          "mlflow/data/delta_dataset_source.py||mlflow/data/delta_dataset_source.py",
          "mlflow/data/digest_utils.py||mlflow/data/digest_utils.py",
          "mlflow/data/filesystem_dataset_source.py||mlflow/data/filesystem_dataset_source.py",
          "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py",
          "mlflow/data/huggingface_dataset.py||mlflow/data/huggingface_dataset.py",
          "mlflow/data/huggingface_dataset_source.py||mlflow/data/huggingface_dataset_source.py",
          "mlflow/data/numpy_dataset.py||mlflow/data/numpy_dataset.py",
          "mlflow/data/pandas_dataset.py||mlflow/data/pandas_dataset.py",
          "mlflow/data/pyfunc_dataset_mixin.py||mlflow/data/pyfunc_dataset_mixin.py",
          "mlflow/data/schema.py||mlflow/data/schema.py",
          "mlflow/data/sources.py||mlflow/data/sources.py",
          "mlflow/data/spark_dataset.py||mlflow/data/spark_dataset.py",
          "mlflow/data/spark_dataset_source.py||mlflow/data/spark_dataset_source.py",
          "mlflow/data/spark_delta_utils.py||mlflow/data/spark_delta_utils.py",
          "mlflow/data/tensorflow_dataset.py||mlflow/data/tensorflow_dataset.py",
          "mlflow/entities/__init__.py||mlflow/entities/__init__.py",
          "mlflow/entities/dataset.py||mlflow/entities/dataset.py",
          "mlflow/entities/dataset_input.py||mlflow/entities/dataset_input.py",
          "mlflow/entities/input_tag.py||mlflow/entities/input_tag.py",
          "mlflow/entities/run.py||mlflow/entities/run.py",
          "mlflow/entities/run_inputs.py||mlflow/entities/run_inputs.py",
          "mlflow/fastai/__init__.py||mlflow/fastai/__init__.py",
          "mlflow/gluon/__init__.py||mlflow/gluon/__init__.py",
          "mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java||mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java",
          "mlflow/java/client/src/main/java/org/mlflow/internal/proto/Internal.java||mlflow/java/client/src/main/java/org/mlflow/internal/proto/Internal.java",
          "mlflow/lightgbm.py||mlflow/lightgbm.py",
          "mlflow/models/evaluation/base.py||mlflow/models/evaluation/base.py",
          "mlflow/protos/internal.proto||mlflow/protos/internal.proto",
          "mlflow/protos/internal_pb2.py||mlflow/protos/internal_pb2.py",
          "mlflow/protos/service.proto||mlflow/protos/service.proto",
          "mlflow/protos/service_pb2.py||mlflow/protos/service_pb2.py",
          "mlflow/pyspark/ml/__init__.py||mlflow/pyspark/ml/__init__.py",
          "mlflow/pytorch/__init__.py||mlflow/pytorch/__init__.py",
          "mlflow/server/handlers.py||mlflow/server/handlers.py",
          "mlflow/sklearn/__init__.py||mlflow/sklearn/__init__.py",
          "mlflow/statsmodels.py||mlflow/statsmodels.py",
          "mlflow/store/artifact/artifact_repository_registry.py||mlflow/store/artifact/artifact_repository_registry.py",
          "mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py||mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py",
          "mlflow/store/tracking/abstract_store.py||mlflow/store/tracking/abstract_store.py",
          "mlflow/store/tracking/dbmodels/models.py||mlflow/store/tracking/dbmodels/models.py",
          "mlflow/store/tracking/file_store.py||mlflow/store/tracking/file_store.py",
          "mlflow/store/tracking/rest_store.py||mlflow/store/tracking/rest_store.py",
          "mlflow/store/tracking/sqlalchemy_store.py||mlflow/store/tracking/sqlalchemy_store.py",
          "mlflow/tensorflow/__init__.py||mlflow/tensorflow/__init__.py",
          "mlflow/tracking/_tracking_service/client.py||mlflow/tracking/_tracking_service/client.py",
          "mlflow/tracking/client.py||mlflow/tracking/client.py",
          "mlflow/tracking/fluent.py||mlflow/tracking/fluent.py",
          "mlflow/transformers.py||mlflow/transformers.py",
          "mlflow/utils/autologging_utils/client.py||mlflow/utils/autologging_utils/client.py",
          "mlflow/utils/mlflow_tags.py||mlflow/utils/mlflow_tags.py",
          "mlflow/utils/uri.py||mlflow/utils/uri.py",
          "mlflow/utils/validation.py||mlflow/utils/validation.py",
          "mlflow/xgboost/__init__.py||mlflow/xgboost/__init__.py",
          "tests/data/test_artifact_dataset_sources.py||tests/data/test_artifact_dataset_sources.py",
          "tests/data/test_code_dataset_source.py||tests/data/test_code_dataset_source.py",
          "tests/data/test_dataset.py||tests/data/test_dataset.py",
          "tests/data/test_dataset_registry.py||tests/data/test_dataset_registry.py",
          "tests/data/test_dataset_source.py||tests/data/test_dataset_source.py",
          "tests/data/test_dataset_source_registry.py||tests/data/test_dataset_source_registry.py",
          "tests/data/test_delta_dataset_source.py||tests/data/test_delta_dataset_source.py",
          "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py",
          "tests/data/test_huggingface_dataset_and_source.py||tests/data/test_huggingface_dataset_and_source.py",
          "tests/data/test_numpy_dataset.py||tests/data/test_numpy_dataset.py",
          "tests/data/test_pandas_dataset.py||tests/data/test_pandas_dataset.py",
          "tests/data/test_spark_dataset.py||tests/data/test_spark_dataset.py",
          "tests/data/test_spark_dataset_source.py||tests/data/test_spark_dataset_source.py",
          "tests/data/test_tensorflow_dataset.py||tests/data/test_tensorflow_dataset.py",
          "tests/entities/conftest.py||tests/entities/conftest.py",
          "tests/entities/test_dataset.py||tests/entities/test_dataset.py",
          "tests/entities/test_dataset_input.py||tests/entities/test_dataset_input.py",
          "tests/entities/test_input_tag.py||tests/entities/test_input_tag.py",
          "tests/entities/test_run.py||tests/entities/test_run.py",
          "tests/entities/test_run_inputs.py||tests/entities/test_run_inputs.py",
          "tests/evaluate/test_evaluation.py||tests/evaluate/test_evaluation.py",
          "tests/lightgbm/test_lightgbm_autolog.py||tests/lightgbm/test_lightgbm_autolog.py",
          "tests/resources/data/dataset.py||tests/resources/data/dataset.py",
          "tests/resources/data/dataset_source.py||tests/resources/data/dataset_source.py",
          "tests/resources/db/latest_schema.sql||tests/resources/db/latest_schema.sql",
          "tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset.py||tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset.py",
          "tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset_source.py||tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset_source.py",
          "tests/resources/mlflow-test-plugin/setup.py||tests/resources/mlflow-test-plugin/setup.py",
          "tests/sklearn/test_sklearn_autolog.py||tests/sklearn/test_sklearn_autolog.py",
          "tests/spark/autologging/ml/test_pyspark_ml_autologging.py||tests/spark/autologging/ml/test_pyspark_ml_autologging.py",
          "tests/store/tracking/test_abstract_store.py||tests/store/tracking/test_abstract_store.py",
          "tests/store/tracking/test_file_store.py||tests/store/tracking/test_file_store.py",
          "tests/store/tracking/test_rest_store.py||tests/store/tracking/test_rest_store.py",
          "tests/store/tracking/test_sqlalchemy_store.py||tests/store/tracking/test_sqlalchemy_store.py",
          "tests/store/tracking/test_sqlalchemy_store_schema.py||tests/store/tracking/test_sqlalchemy_store_schema.py",
          "tests/tensorflow/test_tensorflow2_autolog.py||tests/tensorflow/test_tensorflow2_autolog.py",
          "tests/tracking/fluent/test_fluent.py||tests/tracking/fluent/test_fluent.py",
          "tests/tracking/fluent/test_fluent_autolog.py||tests/tracking/fluent/test_fluent_autolog.py",
          "tests/tracking/test_rest_tracking.py||tests/tracking/test_rest_tracking.py",
          "tests/xgboost/test_xgboost_autolog.py||tests/xgboost/test_xgboost_autolog.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py",
            "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py"
          ],
          "candidate": [
            "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py",
            "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py"
          ]
        }
      },
      "candidate_diff": {
        "dev/generate-protos.sh||dev/generate-protos.sh": [
          "File: dev/generate-protos.sh -> dev/generate-protos.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     \"$PROTOS\"/model_registry.proto \\",
          "17:     \"$PROTOS\"/databricks_artifacts.proto \\",
          "18:     \"$PROTOS\"/mlflow_artifacts.proto \\",
          "19:     \"$PROTOS\"/scalapb/scalapb.proto \\",
          "21: # Separate out building UC model registry protos to avoid autogenerating",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:     \"$PROTOS\"/internal.proto \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: OLD_SCALAPB=\"from scalapb import scalapb_pb2 as scalapb_dot_scalapb__pb2\"",
          "41: NEW_SCALAPB=\"from .scalapb import scalapb_pb2 as scalapb_dot_scalapb__pb2\"",
          "44: OLD_DATABRICKS=\"import databricks_pb2 as databricks__pb2\"",
          "45: NEW_DATABRICKS=\"from . import databricks_pb2 as databricks__pb2\"",
          "48: OLD_DATABRICKS_UC_REGISTRY=\"import databricks_uc_registry_messages_pb2 as databricks__uc__registry__messages__pb2\"",
          "49: NEW_DATABRICKS_UC_REGISTRY=\"from . import databricks_uc_registry_messages_pb2 as databricks_uc_registry_messages_pb2\"",
          "",
          "[Removed Lines]",
          "42: sed -i'.old' -e \"s/$OLD_SCALAPB/$NEW_SCALAPB/g\" \"$PROTOS/databricks_pb2.py\" \"$PROTOS/service_pb2.py\" \"$PROTOS/model_registry_pb2.py\" \"$PROTOS/databricks_artifacts_pb2.py\" \"$PROTOS/mlflow_artifacts_pb2.py\" \"$PROTOS/databricks_uc_registry_service_pb2.py\" \"$PROTOS/databricks_uc_registry_messages_pb2.py\" \"$TEST_PROTOS/test_message_pb2.py\"",
          "46: sed -i'.old' -e \"s/$OLD_DATABRICKS/$NEW_DATABRICKS/g\" \"$PROTOS/service_pb2.py\" \"$PROTOS/model_registry_pb2.py\" \"$PROTOS/databricks_artifacts_pb2.py\" \"$PROTOS/mlflow_artifacts_pb2.py\" \"$PROTOS/databricks_uc_registry_service_pb2.py\" \"$PROTOS/databricks_uc_registry_messages_pb2.py\" \"$TEST_PROTOS/test_message_pb2.py\"",
          "",
          "[Added Lines]",
          "43: sed -i'.old' -e \"s/$OLD_SCALAPB/$NEW_SCALAPB/g\" \"$PROTOS/databricks_pb2.py\" \"$PROTOS/service_pb2.py\" \"$PROTOS/model_registry_pb2.py\" \"$PROTOS/databricks_artifacts_pb2.py\" \"$PROTOS/mlflow_artifacts_pb2.py\" \"$PROTOS/internal_pb2.py\" \"$PROTOS/databricks_uc_registry_service_pb2.py\" \"$PROTOS/databricks_uc_registry_messages_pb2.py\" \"$TEST_PROTOS/test_message_pb2.py\"",
          "47: sed -i'.old' -e \"s/$OLD_DATABRICKS/$NEW_DATABRICKS/g\" \"$PROTOS/service_pb2.py\" \"$PROTOS/model_registry_pb2.py\" \"$PROTOS/databricks_artifacts_pb2.py\" \"$PROTOS/mlflow_artifacts_pb2.py\" \"$PROTOS/internal_pb2.py\" \"$PROTOS/databricks_uc_registry_service_pb2.py\" \"$PROTOS/databricks_uc_registry_messages_pb2.py\" \"$TEST_PROTOS/test_message_pb2.py\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: rm \"$PROTOS/model_registry_pb2.py.old\"",
          "55: rm \"$PROTOS/databricks_artifacts_pb2.py.old\"",
          "56: rm \"$PROTOS/mlflow_artifacts_pb2.py.old\"",
          "57: rm \"$PROTOS/databricks_uc_registry_messages_pb2.py.old\"",
          "58: rm \"$PROTOS/databricks_uc_registry_service_pb2.py.old\"",
          "59: rm \"$TEST_PROTOS/test_message_pb2.py.old\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: rm \"$PROTOS/internal_pb2.py.old\"",
          "",
          "---------------"
        ],
        "mlflow/__init__.py||mlflow/__init__.py": [
          "File: mlflow/__init__.py -> mlflow/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: from mlflow import artifacts  # pylint: disable=unused-import",
          "45: from mlflow import client  # pylint: disable=unused-import",
          "46: from mlflow import exceptions  # pylint: disable=unused-import",
          "48: # model flavors",
          "49: _model_flavors_supported = []",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: from mlflow import data  # pylint: disable=unused-import",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:     delete_run,",
          "167:     autolog,",
          "168:     last_active_run,",
          "169:     get_parent_run,",
          "170: )",
          "171: from mlflow.tracking._model_registry.fluent import (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170:     log_input,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "204:     \"log_figure\",",
          "205:     \"log_table\",",
          "206:     \"log_image\",",
          "207:     \"active_run\",",
          "208:     \"start_run\",",
          "209:     \"end_run\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209:     \"log_input\",",
          "",
          "---------------"
        ],
        "mlflow/data/__init__.py||mlflow/data/__init__.py": [
          "File: mlflow/data/__init__.py -> mlflow/data/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import sys",
          "2: from typing import Union",
          "4: from . import sources as mlflow_data_sources",
          "5: from mlflow.data import dataset_registry",
          "6: from mlflow.data.dataset import Dataset",
          "7: from mlflow.data.dataset_source import DatasetSource",
          "8: from mlflow.data.dataset_source_registry import get_dataset_source_from_json, get_registered_sources",
          "9: from mlflow.entities import DatasetInput",
          "10: from mlflow.entities import Dataset as DatasetEntity",
          "11: from mlflow.exceptions import MlflowException",
          "12: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "13: from mlflow.utils.annotations import experimental",
          "16: @experimental",
          "17: def get_source(dataset: Union[DatasetEntity, DatasetInput, Dataset]) -> DatasetSource:",
          "18:     \"\"\"",
          "19:     Obtains the source of the specified dataset or dataset input.",
          "21:     :param dataset: An instance of :py:class:`mlflow.data.dataset.Dataset",
          "22:                     <mlflow.data.dataset.Dataset>`,",
          "23:                     :py:class:`mlflow.entities.Dataset`, or",
          "24:                     :py:class:`mlflow.entities.DatasetInput`.",
          "25:     :return: An instance of :py:class:`DatasetSource <mlflow.data.dataset_source.DatasetSource>`.",
          "26:     \"\"\"",
          "27:     if isinstance(dataset, DatasetInput):",
          "28:         dataset: DatasetEntity = dataset.dataset",
          "30:     if isinstance(dataset, DatasetEntity):",
          "31:         dataset_source: DatasetSource = get_dataset_source_from_json(",
          "32:             source_json=dataset.source,",
          "33:             source_type=dataset.source_type,",
          "34:         )",
          "35:     elif isinstance(dataset, Dataset):",
          "36:         dataset_source: DatasetSource = dataset.source",
          "37:     else:",
          "38:         raise MlflowException(",
          "39:             f\"Unrecognized dataset type {type(dataset)}. Expected one of: \"",
          "40:             f\"`mlflow.data.dataset.Dataset`,\"",
          "41:             f\" `mlflow.entities.Dataset`, `mlflow.entities.DatasetInput`.\",",
          "42:             INVALID_PARAMETER_VALUE,",
          "43:         )",
          "45:     return dataset_source",
          "48: __all__ = [\"get_source\"]",
          "51: def _define_dataset_constructors_in_current_module():",
          "52:     data_module = sys.modules[__name__]",
          "53:     for (",
          "54:         constructor_name,",
          "55:         constructor_fn,",
          "56:     ) in dataset_registry.get_registered_constructors().items():",
          "57:         setattr(data_module, constructor_name, constructor_fn)",
          "58:         __all__.append(constructor_name)",
          "61: _define_dataset_constructors_in_current_module()",
          "64: def _define_dataset_sources_in_sources_module():",
          "65:     for source in get_registered_sources():",
          "66:         setattr(mlflow_data_sources, source.__name__, source)",
          "67:         mlflow_data_sources.__all__.append(source.__name__)",
          "70: _define_dataset_sources_in_sources_module()",
          "",
          "---------------"
        ],
        "mlflow/data/artifact_dataset_sources.py||mlflow/data/artifact_dataset_sources.py": [
          "File: mlflow/data/artifact_dataset_sources.py -> mlflow/data/artifact_dataset_sources.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import warnings",
          "2: from pathlib import Path",
          "3: from typing import TypeVar, Any, Dict",
          "4: from urllib.parse import urlparse",
          "6: from mlflow.artifacts import download_artifacts",
          "7: from mlflow.exceptions import MlflowException",
          "8: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "9: from mlflow.store.artifact.artifact_repo import ArtifactRepository",
          "10: from mlflow.store.artifact.artifact_repository_registry import get_registered_artifact_repositories",
          "11: from mlflow.utils.annotations import experimental",
          "12: from mlflow.utils.uri import is_local_uri",
          "15: def register_artifact_dataset_sources():",
          "16:     from mlflow.data.dataset_source_registry import register_dataset_source",
          "18:     registered_source_schemes = set()",
          "19:     artifact_schemes_to_exclude = [",
          "20:         \"http\",",
          "21:         \"https\",",
          "22:         \"runs\",",
          "23:         \"models\",",
          "24:         \"mlflow-artifacts\",",
          "25:         # DBFS supports two access patterns: dbfs:/ (URI) and /dbfs (FUSE).",
          "26:         # The DBFS artifact repository online supports dbfs:/ (URI). To ensure",
          "27:         # a consistent dictionary representation of DBFS datasets across the URI and",
          "28:         # FUSE representations, we exclude dbfs from the set of dataset sources",
          "29:         # that are autogenerated using artifact repositories and instead define",
          "30:         # a separate DBFSDatasetSource elsewhere",
          "31:         \"dbfs\",",
          "32:     ]",
          "33:     schemes_to_artifact_repos = get_registered_artifact_repositories()",
          "34:     for scheme, artifact_repo in schemes_to_artifact_repos.items():",
          "35:         if scheme in artifact_schemes_to_exclude or scheme in registered_source_schemes:",
          "36:             continue",
          "38:         if \"ArtifactRepository\" in artifact_repo.__name__:",
          "39:             # Artifact repository name is something like \"LocalArtifactRepository\",",
          "40:             # \"S3ArtifactRepository\", etc. To preserve capitalization, strip ArtifactRepository",
          "41:             # and replace it with ArtifactDatasetSource",
          "42:             dataset_source_name = artifact_repo.__name__.replace(",
          "43:                 \"ArtifactRepository\", \"ArtifactDatasetSource\"",
          "44:             )",
          "45:         else:",
          "46:             # Artifact repository name has some other form, e.g. \"dbfs_artifact_repo_factory\".",
          "47:             # In this case, generate the name by capitalizing the first letter of the scheme and",
          "48:             # appending ArtifactRepository",
          "49:             scheme = str(scheme)",
          "51:             def camelcase_scheme(scheme, separator):",
          "52:                 return \"\".join([part.capitalize() for part in scheme.split(separator)])",
          "54:             if \"-\" in scheme:",
          "55:                 source_name_prefix = camelcase_scheme(scheme, \"-\")",
          "56:             elif \"_\" in scheme:",
          "57:                 source_name_prefix = camelcase_scheme(scheme, \"_\")",
          "58:             else:",
          "59:                 source_name_prefix = scheme.capitalize()",
          "61:             dataset_source_name = source_name_prefix + \"ArtifactDatasetSource\"",
          "63:         try:",
          "64:             registered_source_schemes.add(scheme)",
          "65:             dataset_source = _create_dataset_source_for_artifact_repo(",
          "66:                 scheme=scheme, dataset_source_name=dataset_source_name, artifact_repo=artifact_repo",
          "67:             )",
          "68:             register_dataset_source(dataset_source)",
          "69:         except Exception as e:",
          "70:             warnings.warn(",
          "71:                 f\"Failed to register a dataset source for URIs with scheme '{scheme}': {e}\",",
          "72:                 stacklevel=2,",
          "73:             )",
          "76: def _create_dataset_source_for_artifact_repo(",
          "77:     scheme: str, dataset_source_name: str, artifact_repo: ArtifactRepository",
          "78: ):",
          "79:     from mlflow.data.filesystem_dataset_source import FileSystemDatasetSource",
          "81:     if scheme in [\"\", \"file\"]:",
          "82:         source_type = \"local\"",
          "83:         class_docstring = \"Represents the source of a dataset stored on the local filesystem.\"",
          "84:     else:",
          "85:         source_type = scheme",
          "86:         class_docstring = (",
          "87:             f\"Represents a filesystem-based or blob-storage-based dataset source identified by a\"",
          "88:             f\" URI with scheme '{scheme}'.\"",
          "89:         )",
          "91:     DatasetForArtifactRepoSourceType = TypeVar(dataset_source_name)",
          "93:     @experimental",
          "94:     class ArtifactRepoSource(FileSystemDatasetSource):",
          "95:         def __init__(self, uri: str):",
          "96:             self._uri = uri",
          "98:         @property",
          "99:         def uri(self):",
          "100:             \"\"\"",
          "101:             The URI with scheme '{scheme}' referring to the dataset source filesystem location.",
          "103:             :return: The URI with scheme '{scheme}' referring to the dataset source filesystem",
          "104:                      location.",
          "105:             \"\"\"",
          "106:             return self._uri",
          "108:         @staticmethod",
          "109:         def _get_source_type() -> str:",
          "110:             return source_type",
          "112:         def load(self, dst_path=None) -> str:",
          "113:             \"\"\"",
          "114:             Downloads the dataset source to the local filesystem.",
          "116:             :param dst_path: Path of the local filesystem destination directory to which to download",
          "117:                              the dataset source. If the directory does not exist, it is created. If",
          "118:                              unspecified, the dataset source is downloaded to a new uniquely-named",
          "119:                              directory on the local filesystem, unless the dataset source already",
          "120:                              exists on the local filesystem, in which case its local path is",
          "121:                              returned directly.",
          "122:             :return: The path to the downloaded dataset source on the local filesystem.",
          "123:             \"\"\"",
          "124:             return download_artifacts(artifact_uri=self.uri, dst_path=dst_path)",
          "126:         @staticmethod",
          "127:         def _can_resolve(raw_source: Any):",
          "128:             is_local_source_type = ArtifactRepoSource._get_source_type() == \"local\"",
          "130:             if not isinstance(raw_source, str) and (",
          "131:                 not isinstance(raw_source, Path) and is_local_source_type",
          "132:             ):",
          "133:                 return False",
          "135:             try:",
          "136:                 if is_local_source_type:",
          "137:                     return is_local_uri(str(raw_source), is_tracking_or_registry_uri=False)",
          "138:                 else:",
          "139:                     parsed_source = urlparse(str(raw_source))",
          "140:                     return parsed_source.scheme == scheme",
          "141:             except Exception:",
          "142:                 return False",
          "144:         @classmethod",
          "145:         def _resolve(cls, raw_source: Any) -> DatasetForArtifactRepoSourceType:",
          "146:             return cls(str(raw_source))",
          "148:         def _to_dict(self) -> Dict[Any, Any]:",
          "149:             \"\"\"",
          "150:             :return: A JSON-compatible dictionary representation of the {dataset_source_name}.",
          "151:             \"\"\"",
          "152:             return {",
          "153:                 \"uri\": self.uri,",
          "154:             }",
          "156:         @classmethod",
          "157:         def _from_dict(cls, source_dict: Dict[Any, Any]) -> DatasetForArtifactRepoSourceType:",
          "158:             uri = source_dict.get(\"uri\")",
          "159:             if uri is None:",
          "160:                 raise MlflowException(",
          "161:                     f'Failed to parse {dataset_source_name}. Missing expected key: \"uri\"',",
          "162:                     INVALID_PARAMETER_VALUE,",
          "163:                 )",
          "165:             return cls(uri=uri)",
          "167:     ArtifactRepoSource.__name__ = dataset_source_name",
          "168:     ArtifactRepoSource.__qualname__ = dataset_source_name",
          "169:     ArtifactRepoSource.__doc__ = class_docstring",
          "170:     ArtifactRepoSource._to_dict.__doc__ = ArtifactRepoSource._to_dict.__doc__.format(",
          "171:         dataset_source_name=dataset_source_name",
          "172:     )",
          "173:     ArtifactRepoSource.uri.__doc__ = ArtifactRepoSource.uri.__doc__.format(scheme=scheme)",
          "174:     return ArtifactRepoSource",
          "",
          "---------------"
        ],
        "mlflow/data/code_dataset_source.py||mlflow/data/code_dataset_source.py": [
          "File: mlflow/data/code_dataset_source.py -> mlflow/data/code_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from typing import TypeVar, Any, Dict",
          "3: from mlflow.data.dataset_source import DatasetSource",
          "4: from mlflow.utils.annotations import experimental",
          "7: CodeDatasetSourceType = TypeVar(\"CodeDatasetSourceType\", bound=\"CodeDatasetSource\")",
          "10: @experimental",
          "11: class CodeDatasetSource(DatasetSource):",
          "12:     def __init__(",
          "13:         self,",
          "14:         tags: Dict[Any, Any],",
          "15:     ):",
          "16:         self._tags = tags",
          "18:     @staticmethod",
          "19:     def _get_source_type() -> str:",
          "20:         return \"code\"",
          "22:     def load(self, **kwargs):",
          "23:         \"\"\"",
          "24:         Load is not implemented for Code Dataset Source.",
          "25:         \"\"\"",
          "26:         raise NotImplementedError",
          "28:     @staticmethod",
          "29:     def _can_resolve(raw_source: Any):",
          "30:         return False",
          "32:     @classmethod",
          "33:     def _resolve(cls, raw_source: str) -> CodeDatasetSourceType:",
          "34:         raise NotImplementedError",
          "36:     def _to_dict(self) -> Dict[Any, Any]:",
          "37:         return {\"tags\": self._tags}",
          "39:     @classmethod",
          "40:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> CodeDatasetSourceType:",
          "41:         return cls(",
          "42:             tags=source_dict.get(\"tags\"),",
          "43:         )",
          "",
          "---------------"
        ],
        "mlflow/data/dataset.py||mlflow/data/dataset.py": [
          "File: mlflow/data/dataset.py -> mlflow/data/dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: from abc import abstractmethod",
          "3: from typing import Optional, Any, Dict",
          "5: from mlflow.data.dataset_source import DatasetSource",
          "6: from mlflow.entities import Dataset as DatasetEntity",
          "7: from mlflow.utils.annotations import experimental",
          "10: @experimental",
          "11: class Dataset:",
          "12:     \"\"\"",
          "13:     Represents a dataset for use with MLflow Tracking, including the name, digest (hash),",
          "14:     schema, and profile of the dataset as well as source information (e.g. the S3 bucket or",
          "15:     managed Delta table from which the dataset was derived). Most datasets expose features",
          "16:     and targets for training and evaluation as well.",
          "17:     \"\"\"",
          "19:     def __init__(",
          "20:         self, source: DatasetSource, name: Optional[str] = None, digest: Optional[str] = None",
          "21:     ):",
          "22:         \"\"\"",
          "23:         Base constructor for a dataset. All subclasses must call this",
          "24:         constructor.",
          "25:         \"\"\"",
          "26:         self._name = name",
          "27:         self._source = source",
          "28:         # Note: Subclasses should call super() once they've initialized all of",
          "29:         # the class attributes necessary for digest computation",
          "30:         self._digest = digest or self._compute_digest()",
          "32:     @abstractmethod",
          "33:     def _compute_digest(self) -> str:",
          "34:         \"\"\"",
          "35:         Computes a digest for the dataset. Called if the user doesn't supply",
          "36:         a digest when constructing the dataset.",
          "38:         :return: A string digest for the dataset. We recommend a maximum digest length",
          "39:                  of 10 characters with an ideal length of 8 characters.",
          "40:         \"\"\"",
          "42:     @abstractmethod",
          "43:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "44:         \"\"\"",
          "45:         :param base_dict: A string dictionary of base information about the",
          "46:                           dataset, including: name, digest, source, and source",
          "47:                           type.",
          "48:         :return: A string dictionary containing the following fields: name,",
          "49:                  digest, source, source type, schema (optional), profile",
          "50:                  (optional).",
          "51:         \"\"\"",
          "53:     def to_json(self) -> str:",
          "54:         \"\"\"",
          "55:         Obtains a JSON string representation of the",
          "56:         :py:class:`Dataset <mlflow.data.dataset.Dataset>`.",
          "58:         :return: A JSON string representation of the",
          "59:                  :py:class:`Dataset <mlflow.data.dataset.Dataset>`.",
          "60:         \"\"\"",
          "61:         base_dict = {",
          "62:             \"name\": self.name,",
          "63:             \"digest\": self.digest,",
          "64:             \"source\": self._source.to_json(),",
          "65:             \"source_type\": self._source._get_source_type(),",
          "66:         }",
          "67:         return json.dumps(self._to_dict(base_dict))",
          "69:     @property",
          "70:     def name(self) -> str:",
          "71:         \"\"\"",
          "72:         The name of the dataset, e.g. ``\"iris_data\"``, ``\"myschema.mycatalog.mytable@v1\"``, etc.",
          "73:         \"\"\"",
          "74:         if self._name is not None:",
          "75:             return self._name",
          "76:         else:",
          "77:             return \"dataset\"",
          "79:     @property",
          "80:     def digest(self) -> str:",
          "81:         \"\"\"",
          "82:         A unique hash or fingerprint of the dataset, e.g. ``\"498c7496\"``.",
          "83:         \"\"\"",
          "84:         return self._digest",
          "86:     @property",
          "87:     def source(self) -> DatasetSource:",
          "88:         \"\"\"",
          "89:         Information about the dataset's source, represented as an instance of",
          "90:         :py:class:`DatasetSource <mlflow.data.dataset_source.DatasetSource>`. For example, this",
          "91:         may be the S3 location or the name of the managed Delta Table from which the dataset",
          "92:         was derived.",
          "93:         \"\"\"",
          "94:         return self._source",
          "96:     @property",
          "97:     @abstractmethod",
          "98:     def profile(self) -> Optional[Any]:",
          "99:         \"\"\"",
          "100:         Optional summary statistics for the dataset, such as the number of rows in a table, the",
          "101:         mean / median / std of each table column, etc.",
          "102:         \"\"\"",
          "104:     @property",
          "105:     @abstractmethod",
          "106:     def schema(self) -> Optional[Any]:",
          "107:         \"\"\"",
          "108:         Optional dataset schema, such as an instance of :py:class:`mlflow.types.Schema` representing",
          "109:         the features and targets of the dataset.",
          "110:         \"\"\"",
          "112:     def _to_mlflow_entity(self) -> DatasetEntity:",
          "113:         \"\"\"",
          "114:         :return: A DatasetEntity instance representing the dataset.",
          "115:         \"\"\"",
          "116:         dataset_json = json.loads(self.to_json())",
          "117:         return DatasetEntity(",
          "118:             name=dataset_json[\"name\"],",
          "119:             digest=dataset_json[\"digest\"],",
          "120:             source_type=dataset_json[\"source_type\"],",
          "121:             source=dataset_json[\"source\"],",
          "122:             schema=dataset_json[\"schema\"],",
          "123:             profile=dataset_json[\"profile\"],",
          "124:         )",
          "",
          "---------------"
        ],
        "mlflow/data/dataset_registry.py||mlflow/data/dataset_registry.py": [
          "File: mlflow/data/dataset_registry.py -> mlflow/data/dataset_registry.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import inspect",
          "2: import entrypoints",
          "3: import warnings",
          "4: from typing import Dict",
          "6: import mlflow.data",
          "7: from mlflow.exceptions import MlflowException",
          "8: from mlflow.data.dataset import Dataset",
          "9: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "12: class DatasetRegistry:",
          "13:     def __init__(self):",
          "14:         self.constructors = {}",
          "16:     def register_constructor(self, constructor_fn: callable, constructor_name: str = None) -> str:",
          "17:         \"\"\"",
          "18:         Registers a dataset constructor.",
          "20:         :param constructor_fn: A function that accepts at least the following",
          "21:                                inputs and returns an instance of a subclass of",
          "22:                                :py:class:`mlflow.data.dataset.Dataset`:",
          "24:                                - name: Optional. A string dataset name",
          "25:                                - digest: Optional. A string dataset digest.",
          "27:         :param constructor_name: The name of the constructor, e.g.",
          "28:                                  \"from_spark\". The name must begin with the",
          "29:                                  string \"from_\" or \"load_\". If unspecified, the `__name__`",
          "30:                                  attribute of the `constructor_fn` is used instead and must",
          "31:                                  begin with the string \"from_\" or \"load_\".",
          "32:         :return: The name of the registered constructor, e.g. \"from_pandas\" or \"load_delta\".",
          "33:         \"\"\"",
          "34:         if constructor_name is None:",
          "35:             constructor_name = constructor_fn.__name__",
          "36:         DatasetRegistry._validate_constructor(constructor_fn, constructor_name)",
          "37:         self.constructors[constructor_name] = constructor_fn",
          "38:         return constructor_name",
          "40:     def register_entrypoints(self):",
          "41:         \"\"\"",
          "42:         Registers dataset sources defined as Python entrypoints. For reference, see",
          "43:         https://mlflow.org/docs/latest/plugins.html#defining-a-plugin.",
          "44:         \"\"\"",
          "45:         for entrypoint in entrypoints.get_group_all(\"mlflow.dataset_constructor\"):",
          "46:             try:",
          "47:                 self.register_constructor(",
          "48:                     constructor_fn=entrypoint.load(), constructor_name=entrypoint.name",
          "49:                 )",
          "50:             except Exception as exc:",
          "51:                 warnings.warn(",
          "52:                     f\"Failure attempting to register dataset constructor\"",
          "53:                     f' \"{entrypoint.name}\": {exc}.',",
          "54:                     stacklevel=2,",
          "55:                 )",
          "57:     @staticmethod",
          "58:     def _validate_constructor(constructor_fn: callable, constructor_name: str):",
          "59:         if not constructor_name.startswith(\"load_\") and not constructor_name.startswith(\"from_\"):",
          "60:             raise MlflowException(",
          "61:                 f\"Invalid dataset constructor name: {constructor_name}.\"",
          "62:                 f\" Constructor name must start with 'load_' or 'from_'.\",",
          "63:                 INVALID_PARAMETER_VALUE,",
          "64:             )",
          "66:         signature = inspect.signature(constructor_fn)",
          "67:         parameters = signature.parameters",
          "68:         for expected_kwarg in [\"name\", \"digest\"]:",
          "69:             if expected_kwarg not in parameters or parameters[expected_kwarg].kind not in [",
          "70:                 inspect.Parameter.KEYWORD_ONLY,",
          "71:                 inspect.Parameter.POSITIONAL_OR_KEYWORD,",
          "72:             ]:",
          "73:                 raise MlflowException(",
          "74:                     f\"Invalid dataset constructor function: {constructor_fn.__name__}. Function\"",
          "75:                     f\" must define an optional parameter named '{expected_kwarg}'.\",",
          "76:                     INVALID_PARAMETER_VALUE,",
          "77:                 )",
          "79:         if not issubclass(signature.return_annotation, Dataset):",
          "80:             raise MlflowException(",
          "81:                 f\"Invalid dataset constructor function: {constructor_fn.__name__}. Function must\"",
          "82:                 f\" have a return type annotation that is a subclass of\"",
          "83:                 f\" :py:class:`mlflow.data.dataset.Dataset`.\",",
          "84:                 INVALID_PARAMETER_VALUE,",
          "85:             )",
          "88: def register_constructor(constructor_fn: callable, constructor_name: str = None) -> str:",
          "89:     \"\"\"",
          "90:     Registers a dataset constructor.",
          "92:     :param constructor_fn: A function that accepts at least the following",
          "93:                            inputs and returns an instance of a subclass of",
          "94:                            :py:class:`mlflow.data.dataset.Dataset`:",
          "96:                            - name: Optional. A string dataset name",
          "97:                            - digest: Optional. A string dataset digest.",
          "99:     :param constructor_name: The name of the constructor, e.g.",
          "100:                              \"from_spark\". The name must begin with the",
          "101:                              string \"from_\" or \"load_\". If unspecified, the `__name__`",
          "102:                              attribute of the `constructor_fn` is used instead and must",
          "103:                              begin with the string \"from_\" or \"load_\".",
          "104:     :return: The name of the registered constructor, e.g. \"from_pandas\" or \"load_delta\".",
          "105:     \"\"\"",
          "106:     registered_constructor_name = _dataset_registry.register_constructor(",
          "107:         constructor_fn=constructor_fn, constructor_name=constructor_name",
          "108:     )",
          "109:     setattr(mlflow.data, registered_constructor_name, constructor_fn)",
          "110:     mlflow.data.__all__.append(registered_constructor_name)",
          "111:     return registered_constructor_name",
          "114: def get_registered_constructors() -> Dict[str, callable]:",
          "115:     \"\"\"",
          "116:     Obtains the registered dataset constructors.",
          "118:     :return: A dictionary mapping constructor names to constructor functions.",
          "119:     \"\"\"",
          "120:     return _dataset_registry.constructors",
          "123: _dataset_registry = DatasetRegistry()",
          "124: _dataset_registry.register_entrypoints()",
          "125: try:",
          "126:     from mlflow.data.pandas_dataset import from_pandas",
          "128:     _dataset_registry.register_constructor(from_pandas)",
          "129: except ImportError:",
          "130:     pass",
          "131: try:",
          "132:     from mlflow.data.numpy_dataset import from_numpy",
          "134:     _dataset_registry.register_constructor(from_numpy)",
          "135: except ImportError:",
          "136:     pass",
          "137: try:",
          "138:     from mlflow.data.huggingface_dataset import from_huggingface",
          "140:     _dataset_registry.register_constructor(from_huggingface)",
          "141: except ImportError:",
          "142:     pass",
          "143: try:",
          "144:     from mlflow.data.tensorflow_dataset import from_tensorflow",
          "146:     _dataset_registry.register_constructor(from_tensorflow)",
          "147: except ImportError:",
          "148:     pass",
          "149: try:",
          "150:     from mlflow.data.spark_dataset import load_delta, from_spark",
          "152:     _dataset_registry.register_constructor(load_delta)",
          "153:     _dataset_registry.register_constructor(from_spark)",
          "154: except ImportError:",
          "155:     pass",
          "",
          "---------------"
        ],
        "mlflow/data/dataset_source.py||mlflow/data/dataset_source.py": [
          "File: mlflow/data/dataset_source.py -> mlflow/data/dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "3: from abc import abstractmethod",
          "4: from typing import TypeVar, Any, Dict",
          "6: from mlflow.utils.annotations import experimental",
          "9: DatasetSourceType = TypeVar(\"DatasetSourceType\", bound=\"DatasetSource\")",
          "12: @experimental",
          "13: class DatasetSource:",
          "14:     \"\"\"",
          "15:     Represents the source of a dataset used in MLflow Tracking, providing information such as",
          "16:     cloud storage location, delta table name / version, etc.",
          "17:     \"\"\"",
          "19:     @staticmethod",
          "20:     @abstractmethod",
          "21:     def _get_source_type() -> str:",
          "22:         \"\"\"",
          "23:         Obtains a string representing the source type of the dataset.",
          "25:         :return: A string representing the source type of the dataset, e.g. \"s3\", \"delta_table\", ...",
          "26:         \"\"\"",
          "28:     @abstractmethod",
          "29:     def load(self) -> Any:",
          "30:         \"\"\"",
          "31:         Loads files / objects referred to by the DatasetSource. For example, depending on the type",
          "32:         of :py:class:`DatasetSource <mlflow.data.dataset_source.DatasetSource>`, this may download",
          "33:         source CSV files from S3 to the local filesystem, load a source Delta Table as a Spark",
          "34:         DataFrame, etc.",
          "36:         :return: The downloaded source, e.g. a local filesystem path, a Spark DataFrame, etc.",
          "37:         \"\"\"",
          "39:     @staticmethod",
          "40:     @abstractmethod",
          "41:     def _can_resolve(raw_source: Any) -> bool:",
          "42:         \"\"\"",
          "43:         Determines whether this type of DatasetSource can be resolved from a specified raw source",
          "44:         object. For example, an S3DatasetSource can be resolved from an S3 URI like",
          "45:         \"s3://mybucket/path/to/iris/data\" but not from an Azure Blob Storage URI like",
          "46:         \"wasbs:/account@host.blob.core.windows.net\".",
          "48:         :param raw_source: The raw source, e.g. a string like \"s3://mybucket/path/to/iris/data\".",
          "49:         :return: True if this DatsetSource can resolve the raw source, False otherwise.",
          "50:         \"\"\"",
          "52:     @classmethod",
          "53:     @abstractmethod",
          "54:     def _resolve(cls, raw_source: Any) -> DatasetSourceType:",
          "55:         \"\"\"",
          "56:         Constructs an instance of the DatasetSource from a raw source object, such as a",
          "57:         string URI like \"s3://mybucket/path/to/iris/data\" or a delta table identifier",
          "58:         like \"my.delta.table@2\".",
          "60:         :param raw_source: The raw source, e.g. a string like \"s3://mybucket/path/to/iris/data\".",
          "61:         :return: A DatasetSource instance derived from the raw_source.",
          "62:         \"\"\"",
          "64:     @abstractmethod",
          "65:     def _to_dict(self) -> Dict[str, Any]:",
          "66:         \"\"\"",
          "67:         Obtains a JSON-compatible dictionary representation of the DatasetSource.",
          "69:         :return: A JSON-compatible dictionary representation of the DatasetSource.",
          "70:         \"\"\"",
          "72:     def to_json(self) -> str:",
          "73:         \"\"\"",
          "74:         Obtains a JSON string representation of the",
          "75:         :py:class:`DatasetSource <mlflow.data.dataset_source.DatasetSource>`.",
          "77:         :return: A JSON string representation of the",
          "78:                  :py:class:`DatasetSource <mlflow.data.dataset_source.DatasetSource>`.",
          "80:         \"\"\"",
          "81:         return json.dumps(self._to_dict())",
          "83:     @classmethod",
          "84:     @abstractmethod",
          "85:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> DatasetSourceType:",
          "86:         \"\"\"",
          "87:         Constructs an instance of the DatasetSource from a dictionary representation.",
          "89:         :param source_dict: A dictionary representation of the DatasetSource.",
          "90:         :return: A DatasetSource instance.",
          "91:         \"\"\"",
          "93:     @classmethod",
          "94:     def from_json(cls, source_json: str) -> DatasetSourceType:",
          "95:         \"\"\"",
          "96:         Constructs an instance of the DatasetSource from a JSON string representation.",
          "98:         :param source_dict: A JSON string representation of the DatasetSource.",
          "99:         :return: A DatasetSource instance.",
          "100:         \"\"\"",
          "101:         return cls._from_dict(json.loads(source_json))",
          "",
          "---------------"
        ],
        "mlflow/data/dataset_source_registry.py||mlflow/data/dataset_source_registry.py": [
          "File: mlflow/data/dataset_source_registry.py -> mlflow/data/dataset_source_registry.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import entrypoints",
          "2: import warnings",
          "3: from typing import Any, List",
          "5: from mlflow.data.artifact_dataset_sources import register_artifact_dataset_sources",
          "6: from mlflow.data.dataset_source import DatasetSource",
          "7: from mlflow.data.http_dataset_source import HTTPDatasetSource",
          "8: from mlflow.exceptions import MlflowException",
          "9: from mlflow.protos.databricks_pb2 import RESOURCE_DOES_NOT_EXIST",
          "12: class DatasetSourceRegistry:",
          "13:     def __init__(self):",
          "14:         self.sources = []",
          "16:     def register(self, source: DatasetSource):",
          "17:         \"\"\"",
          "18:         Registers a DatasetSource for use with MLflow Tracking.",
          "20:         :param source: The DatasetSource to register.",
          "21:         \"\"\"",
          "22:         self.sources.append(source)",
          "24:     def register_entrypoints(self):",
          "25:         \"\"\"",
          "26:         Registers dataset sources defined as Python entrypoints. For reference, see",
          "27:         https://mlflow.org/docs/latest/plugins.html#defining-a-plugin.",
          "28:         \"\"\"",
          "29:         for entrypoint in entrypoints.get_group_all(\"mlflow.dataset_source\"):",
          "30:             try:",
          "31:                 self.register(entrypoint.load())",
          "32:             except (AttributeError, ImportError) as exc:",
          "33:                 warnings.warn(",
          "34:                     f\"Failure attempting to register dataset source with source type\"",
          "35:                     f' \"{entrypoint.source_type}\": {exc}',",
          "36:                     stacklevel=2,",
          "37:                 )",
          "39:     def resolve(",
          "40:         self, raw_source: Any, candidate_sources: List[DatasetSource] = None",
          "41:     ) -> DatasetSource:",
          "42:         \"\"\"",
          "43:         Resolves a raw source object, such as a string URI, to a DatasetSource for use with",
          "44:         MLflow Tracking.",
          "46:         :param raw_source: The raw source, e.g. a string like \"s3://mybucket/path/to/iris/data\" or a",
          "47:                            HuggingFace :py:class:`datasets.Dataset` object.",
          "48:         :param candidate_sources: A list of DatasetSource classes to consider as potential sources",
          "49:                                   when resolving the raw source. Subclasses of the specified",
          "50:                                   candidate sources are also considered. If unspecified, all",
          "51:                                   registered sources are considered.",
          "52:         :throws: MlflowException if no DatasetSource class can resolve the raw source.",
          "53:         :return: The resolved DatasetSource.",
          "54:         \"\"\"",
          "55:         matching_sources = []",
          "56:         for source in self.sources:",
          "57:             if candidate_sources and not any(",
          "58:                 issubclass(source, candidate_src) for candidate_src in candidate_sources",
          "59:             ):",
          "60:                 continue",
          "61:             try:",
          "62:                 if source._can_resolve(raw_source):",
          "63:                     matching_sources.append(source)",
          "64:             except Exception as e:",
          "65:                 warnings.warn(",
          "66:                     f\"Failed to determine whether {source.__name__} can resolve source\"",
          "67:                     f\" information for '{raw_source}'. Exception: {e}\",",
          "68:                     stacklevel=2,",
          "69:                 )",
          "70:                 continue",
          "72:         if len(matching_sources) > 1:",
          "73:             source_class_names_str = \", \".join([source.__name__ for source in matching_sources])",
          "74:             warnings.warn(",
          "75:                 f\"The specified dataset source can be interpreted in multiple ways:\"",
          "76:                 f\" {source_class_names_str}. MLflow will assume that this is a\"",
          "77:                 f\" {matching_sources[-1].__name__} source.\",",
          "78:                 stacklevel=2,",
          "79:             )",
          "81:         for matching_source in reversed(matching_sources):",
          "82:             try:",
          "83:                 return matching_source._resolve(raw_source)",
          "84:             except Exception as e:",
          "85:                 warnings.warn(",
          "86:                     f\"Encountered an unexpected error while using {matching_source.__name__} to\"",
          "87:                     f\" resolve source information for '{raw_source}'. Exception: {e}\",",
          "88:                     stacklevel=2,",
          "89:                 )",
          "90:                 continue",
          "92:         raise MlflowException(",
          "93:             f\"Could not find a source information resolver for the specified\"",
          "94:             f\" dataset source: {raw_source}.\",",
          "95:             RESOURCE_DOES_NOT_EXIST,",
          "96:         )",
          "98:     def get_source_from_json(self, source_json: str, source_type: str) -> DatasetSource:",
          "99:         \"\"\"",
          "100:         Parses and returns a DatasetSource object from its JSON representation.",
          "102:         :param source_json: The JSON representation of the DatasetSource.",
          "103:         :param source_type: The string type of the DatasetSource, which indicates how to parse the",
          "104:                             source JSON.",
          "105:         \"\"\"",
          "106:         for source in reversed(self.sources):",
          "107:             if source._get_source_type() == source_type:",
          "108:                 return source.from_json(source_json)",
          "110:         raise MlflowException(",
          "111:             f\"Could not parse dataset source from JSON due to unrecognized\"",
          "112:             f\" source type: {source_type}.\",",
          "113:             RESOURCE_DOES_NOT_EXIST,",
          "114:         )",
          "117: def register_dataset_source(source: DatasetSource):",
          "118:     \"\"\"",
          "119:     Registers a DatasetSource for use with MLflow Tracking.",
          "121:     :param source: The DatasetSource to register.",
          "122:     \"\"\"",
          "123:     _dataset_source_registry.register(source)",
          "126: def resolve_dataset_source(",
          "127:     raw_source: Any, candidate_sources: List[DatasetSource] = None",
          "128: ) -> DatasetSource:",
          "129:     \"\"\"",
          "130:     Resolves a raw source object, such as a string URI, to a DatasetSource for use with",
          "131:     MLflow Tracking.",
          "133:     :param raw_source: The raw source, e.g. a string like \"s3://mybucket/path/to/iris/data\" or a",
          "134:                        HuggingFace :py:class:`datasets.Dataset` object.",
          "135:     :param candidate_sources: A list of DatasetSource classes to consider as potential sources",
          "136:                               when resolving the raw source. Subclasses of the specified candidate",
          "137:                               sources are also considered. If unspecified, all registered sources",
          "138:                               are considered.",
          "139:     :throws: MlflowException if no DatasetSource class can resolve the raw source.",
          "140:     :return: The resolved DatasetSource.",
          "141:     \"\"\"",
          "142:     return _dataset_source_registry.resolve(",
          "143:         raw_source=raw_source, candidate_sources=candidate_sources",
          "144:     )",
          "147: def get_dataset_source_from_json(source_json: str, source_type: str) -> DatasetSource:",
          "148:     \"\"\"",
          "149:     Parses and returns a DatasetSource object from its JSON representation.",
          "151:     :param source_json: The JSON representation of the DatasetSource.",
          "152:     :param source_type: The string type of the DatasetSource, which indicates how to parse the",
          "153:                         source JSON.",
          "154:     \"\"\"",
          "155:     return _dataset_source_registry.get_source_from_json(",
          "156:         source_json=source_json, source_type=source_type",
          "157:     )",
          "160: def get_registered_sources() -> List[DatasetSource]:",
          "161:     \"\"\"",
          "162:     Obtains the registered dataset sources.",
          "164:     :return: A list of registered dataset sources.",
          "165:     \"\"\"",
          "166:     return _dataset_source_registry.sources",
          "169: # NB: The ordering here is important. The last dataset source to be registered takes precedence",
          "170: # when resolving dataset information for a raw source (e.g. a string like \"s3://mybucket/my/path\").",
          "171: # Dataset sources derived from artifact repositories are the most generic / provide the most",
          "172: # general information about dataset source locations, so they are registered first. More specific",
          "173: # source information is provided by specialized dataset platform sources like",
          "174: # HuggingFaceDatasetSource, so these sources are registered next. Finally, externally-defined",
          "175: # dataset sources are registered last because externally-defined behavior should take precedence",
          "176: # over any internally-defined generic behavior",
          "177: _dataset_source_registry = DatasetSourceRegistry()",
          "178: register_artifact_dataset_sources()",
          "179: _dataset_source_registry.register(HTTPDatasetSource)",
          "180: _dataset_source_registry.register_entrypoints()",
          "182: try:",
          "183:     from mlflow.data.huggingface_dataset_source import HuggingFaceDatasetSource",
          "185:     _dataset_source_registry.register(HuggingFaceDatasetSource)",
          "186: except ImportError:",
          "187:     pass",
          "188: try:",
          "189:     from mlflow.data.spark_dataset_source import SparkDatasetSource",
          "191:     _dataset_source_registry.register(SparkDatasetSource)",
          "192: except ImportError:",
          "193:     pass",
          "194: try:",
          "195:     from mlflow.data.delta_dataset_source import DeltaDatasetSource",
          "197:     _dataset_source_registry.register(DeltaDatasetSource)",
          "198: except ImportError:",
          "199:     pass",
          "200: try:",
          "201:     from mlflow.data.code_dataset_source import CodeDatasetSource",
          "203:     _dataset_source_registry.register(CodeDatasetSource)",
          "204: except ImportError:",
          "205:     pass",
          "",
          "---------------"
        ],
        "mlflow/data/delta_dataset_source.py||mlflow/data/delta_dataset_source.py": [
          "File: mlflow/data/delta_dataset_source.py -> mlflow/data/delta_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from typing import TypeVar, Any, Optional, Dict",
          "3: from mlflow.data.dataset_source import DatasetSource",
          "4: from mlflow.exceptions import MlflowException",
          "5: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "6: from mlflow.utils.databricks_utils import is_in_databricks_runtime",
          "7: from mlflow.utils.annotations import experimental",
          "10: DeltaDatasetSourceType = TypeVar(\"DeltaDatasetSourceType\", bound=\"DeltaDatasetSource\")",
          "12: DATABRICKS_HIVE_METASTORE_NAME = \"hive_metastore\"",
          "13: # these two catalog names both points to the workspace local default HMS (hive metastore).",
          "14: DATABRICKS_LOCAL_METASTORE_NAMES = [DATABRICKS_HIVE_METASTORE_NAME, \"spark_catalog\"]",
          "15: # samples catalog is managed by databricks for hosting public dataset like NYC taxi dataset.",
          "16: # it is neither a UC nor local metastore catalog",
          "17: DATABRICKS_SAMPLES_CATALOG_NAME = \"samples\"",
          "20: @experimental",
          "21: class DeltaDatasetSource(DatasetSource):",
          "22:     \"\"\"",
          "23:     Represents the source of a dataset stored at in a delta table.",
          "24:     \"\"\"",
          "26:     def __init__(",
          "27:         self,",
          "28:         path: Optional[str] = None,",
          "29:         delta_table_name: Optional[str] = None,",
          "30:         delta_table_version: Optional[int] = None,",
          "31:     ):",
          "32:         if (path, delta_table_name).count(None) != 1:",
          "33:             raise MlflowException(",
          "34:                 'Must specify exactly one of \"path\" or \"table_name\"',",
          "35:                 INVALID_PARAMETER_VALUE,",
          "36:             )",
          "37:         self._path = path",
          "38:         self._delta_table_name = delta_table_name",
          "39:         self._delta_table_version = delta_table_version",
          "41:     @staticmethod",
          "42:     def _get_source_type() -> str:",
          "43:         return \"delta_table\"",
          "45:     def load(self, **kwargs):",
          "46:         \"\"\"",
          "47:         Loads the dataset source as a Delta Dataset Source.",
          "48:         :return: An instance of ``pyspark.sql.DataFrame``.",
          "49:         \"\"\"",
          "50:         from pyspark.sql import SparkSession",
          "52:         spark = SparkSession.builder.getOrCreate()",
          "54:         spark_read_op = spark.read.format(\"delta\")",
          "55:         if self._delta_table_version is not None:",
          "56:             spark_read_op = spark_read_op.option(\"versionAsOf\", self._delta_table_version)",
          "58:         if self._path:",
          "59:             return spark_read_op.load(self._path)",
          "60:         else:",
          "61:             return spark_read_op.table(self._delta_table_name)",
          "63:     @property",
          "64:     def path(self) -> Optional[str]:",
          "65:         return self._path",
          "67:     @property",
          "68:     def delta_table_name(self) -> Optional[str]:",
          "69:         return self._delta_table_name",
          "71:     @property",
          "72:     def delta_table_version(self) -> Optional[int]:",
          "73:         return self._delta_table_version",
          "75:     @staticmethod",
          "76:     def _can_resolve(raw_source: Any):",
          "77:         return False",
          "79:     @classmethod",
          "80:     def _resolve(cls, raw_source: str) -> DeltaDatasetSourceType:",
          "81:         raise NotImplementedError",
          "83:     # check if table is in the Databricks Unity Catalog",
          "84:     def _is_databricks_uc_table(self):",
          "85:         if is_in_databricks_runtime() and self._delta_table_name is not None:",
          "86:             try:",
          "87:                 catalog_name, _, _ = self._delta_table_name.split(\".\")",
          "88:                 return (",
          "89:                     catalog_name not in DATABRICKS_LOCAL_METASTORE_NAMES",
          "90:                     and catalog_name != DATABRICKS_SAMPLES_CATALOG_NAME",
          "91:                 )",
          "92:             except ValueError:",
          "93:                 return False",
          "95:     def _to_dict(self) -> Dict[Any, Any]:",
          "96:         info = {}",
          "97:         if self._path:",
          "98:             info[\"path\"] = self._path",
          "99:         if self._delta_table_name:",
          "100:             info[\"delta_table_name\"] = self._delta_table_name",
          "101:         if self._delta_table_version:",
          "102:             info[\"delta_table_version\"] = self._delta_table_version",
          "103:         if self._is_databricks_uc_table():",
          "104:             info[\"is_databricks_uc_table\"] = True",
          "105:         return info",
          "107:     @classmethod",
          "108:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> DeltaDatasetSourceType:",
          "109:         return cls(",
          "110:             path=source_dict.get(\"path\"),",
          "111:             delta_table_name=source_dict.get(\"delta_table_name\"),",
          "112:             delta_table_version=source_dict.get(\"delta_table_version\"),",
          "113:         )",
          "",
          "---------------"
        ],
        "mlflow/data/digest_utils.py||mlflow/data/digest_utils.py": [
          "File: mlflow/data/digest_utils.py -> mlflow/data/digest_utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from packaging.version import Version",
          "2: import hashlib",
          "3: from typing import List, Any",
          "5: from mlflow.exceptions import MlflowException",
          "6: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "8: MAX_ROWS = 10000",
          "11: def compute_pandas_digest(df) -> str:",
          "12:     \"\"\"",
          "13:     Computes a digest for the given Pandas DataFrame.",
          "15:     :param df: A Pandas DataFrame.",
          "16:     :return: A string digest.",
          "17:     \"\"\"",
          "18:     import numpy as np",
          "19:     import pandas as pd",
          "21:     # drop object columns",
          "22:     df = df.select_dtypes(exclude=[\"object\"])",
          "24:     # trim to max rows",
          "25:     trimmed_df = df.head(MAX_ROWS)",
          "27:     return get_normalized_md5_digest(",
          "28:         [",
          "29:             pd.util.hash_pandas_object(trimmed_df).values,",
          "30:             np.int64(len(df)),",
          "31:         ]",
          "32:         + [str(x).encode() for x in df.columns]",
          "33:     )",
          "36: def compute_numpy_digest(features, targets=None) -> str:",
          "37:     \"\"\"",
          "38:     Computes a digest for the given numpy array.",
          "40:     :param features: A numpy array containing dataset features.",
          "41:     :param targets: A numpy array containing dataset targets. Optional.",
          "42:     :return: A string digest.",
          "43:     \"\"\"",
          "44:     import numpy as np",
          "45:     import pandas as pd",
          "47:     hashable_elements = []",
          "49:     def hash_array(array):",
          "50:         flattened_array = array.flatten()",
          "51:         trimmed_array = flattened_array[0:MAX_ROWS]",
          "52:         try:",
          "53:             hashable_elements.append(pd.util.hash_array(trimmed_array))",
          "54:         except TypeError:",
          "55:             hashable_elements.append(np.int64(trimmed_array.size))",
          "57:         # hash full array dimensions",
          "58:         for x in array.shape:",
          "59:             hashable_elements.append(np.int64(x))",
          "61:     def hash_dict_of_arrays(array_dict):",
          "62:         for key in sorted(array_dict.keys()):",
          "63:             hash_array(array_dict[key])",
          "65:     for item in [features, targets]:",
          "66:         if item is None:",
          "67:             continue",
          "68:         if isinstance(item, dict):",
          "69:             hash_dict_of_arrays(item)",
          "70:         else:",
          "71:             hash_array(item)",
          "73:     return get_normalized_md5_digest(hashable_elements)",
          "76: def compute_tensorflow_dataset_digest(dataset, targets=None) -> str:",
          "77:     \"\"\"",
          "78:     Computes a digest for the given Tensorflow dataset.",
          "80:     :param dataset: A Tensorflow dataset.",
          "81:     :return: A string digest.",
          "82:     \"\"\"",
          "83:     import numpy as np",
          "84:     import pandas as pd",
          "85:     import tensorflow as tf",
          "87:     hashable_elements = []",
          "89:     def hash_tf_dataset_iterator_element(element):",
          "90:         if element is None:",
          "91:             return",
          "92:         flat_element = tf.nest.flatten(element)",
          "93:         flattened_array = np.concatenate([x.flatten() for x in flat_element])",
          "94:         trimmed_array = flattened_array[0:MAX_ROWS]",
          "95:         try:",
          "96:             hashable_elements.append(pd.util.hash_array(trimmed_array))",
          "97:         except TypeError:",
          "98:             hashable_elements.append(np.int64(trimmed_array.size))",
          "100:     for element in dataset.as_numpy_iterator():",
          "101:         hash_tf_dataset_iterator_element(element)",
          "102:     if targets is not None:",
          "103:         for element in targets.as_numpy_iterator():",
          "104:             hash_tf_dataset_iterator_element(element)",
          "106:     return get_normalized_md5_digest(hashable_elements)",
          "109: def compute_tensor_digest(tensor_data, tensor_targets) -> str:",
          "110:     \"\"\"",
          "111:     Computes a digest for the given Tensorflow tensor.",
          "113:     :param tensor: A Tensorflow tensor.",
          "114:     :return: A string digest.",
          "115:     \"\"\"",
          "116:     if tensor_targets is None:",
          "117:         return compute_numpy_digest(tensor_data.numpy())",
          "118:     else:",
          "119:         return compute_numpy_digest(tensor_data.numpy(), tensor_targets.numpy())",
          "122: def compute_spark_df_digest(df) -> str:",
          "123:     \"\"\"",
          "124:     Computes a digest for the given Spark DataFrame. Retrieve a semantic hash of the",
          "125:     DataFrame's logical plan, which is much more efficient and deterministic than hashing",
          "126:     DataFrame records",
          "128:     :param df: A Spark DataFrame.",
          "129:     :return: A string digest.",
          "130:     \"\"\"",
          "132:     import pyspark",
          "133:     import numpy as np",
          "135:     # Spark 3.1.0+ has a semanticHash() method on DataFrame",
          "136:     if Version(pyspark.__version__) >= Version(\"3.1.0\"):",
          "137:         semantic_hash = df.semanticHash()",
          "138:     else:",
          "139:         semantic_hash = df._jdf.queryExecution().analyzed().semanticHash()",
          "140:     return get_normalized_md5_digest([np.int64(semantic_hash)])",
          "143: def get_normalized_md5_digest(elements: List[Any]) -> str:",
          "144:     \"\"\"",
          "145:     Computes a normalized digest for a list of hashable elements.",
          "147:     :param elements: A list of hashable elements for inclusion in the md5 digest.",
          "148:     :return: An 8-character, truncated md5 digest.",
          "149:     \"\"\"",
          "151:     if not elements:",
          "152:         raise MlflowException(",
          "153:             \"No hashable elements were provided for md5 digest creation\",",
          "154:             INVALID_PARAMETER_VALUE,",
          "155:         )",
          "157:     md5 = hashlib.md5()",
          "158:     for element in elements:",
          "159:         md5.update(element)",
          "161:     return md5.hexdigest()[:8]",
          "",
          "---------------"
        ],
        "mlflow/data/filesystem_dataset_source.py||mlflow/data/filesystem_dataset_source.py": [
          "File: mlflow/data/filesystem_dataset_source.py -> mlflow/data/filesystem_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from abc import abstractmethod",
          "2: from typing import TypeVar, Any, Dict",
          "4: from mlflow.data.dataset_source import DatasetSource",
          "5: from mlflow.utils.annotations import experimental",
          "8: FileSystemDatasetSourceType = TypeVar(",
          "9:     \"FileSystemDatasetSourceType\", bound=\"FileSystemDatasetSource\"",
          "10: )",
          "13: @experimental",
          "14: class FileSystemDatasetSource(DatasetSource):",
          "15:     \"\"\"",
          "16:     Represents the source of a dataset stored on a filesystem, e.g. a local UNIX filesystem,",
          "17:     blob storage services like S3, etc.",
          "18:     \"\"\"",
          "20:     @property",
          "21:     @abstractmethod",
          "22:     def uri(self):",
          "23:         \"\"\"",
          "24:         The URI referring to the dataset source filesystem location.",
          "26:         :return: The URI referring to the dataset source filesystem location,",
          "27:                  e.g \"s3://mybucket/path/to/mydataset\", \"/tmp/path/to/my/dataset\" etc.",
          "28:         \"\"\"",
          "30:     @staticmethod",
          "31:     @abstractmethod",
          "32:     def _get_source_type() -> str:",
          "33:         \"\"\"",
          "34:         :return: A string describing the filesystem containing the dataset, e.g. \"local\", \"s3\", ...",
          "35:         \"\"\"",
          "37:     @abstractmethod",
          "38:     def load(self, dst_path=None) -> str:",
          "39:         \"\"\"",
          "40:         Downloads the dataset source to the local filesystem.",
          "42:         :param dst_path: Path of the local filesystem destination directory to which to download the",
          "43:                          dataset source. If the directory does not exist, it is created. If",
          "44:                          unspecified, the dataset source is downloaded to a new uniquely-named",
          "45:                          directory on the local filesystem, unless the dataset source already",
          "46:                          exists on the local filesystem, in which case its local path is returned",
          "47:                          directly.",
          "48:         :return: The path to the downloaded dataset source on the local filesystem.",
          "49:         \"\"\"",
          "51:     @staticmethod",
          "52:     @abstractmethod",
          "53:     def _can_resolve(raw_source: Any) -> bool:",
          "54:         \"\"\"",
          "55:         :param raw_source: The raw source, e.g. a string like",
          "56:                            \"s3://mybucket/path/to/iris/data\".",
          "57:         :return: True if this DatsetSource can resolve the raw source, False otherwise.",
          "58:         \"\"\"",
          "60:     @classmethod",
          "61:     @abstractmethod",
          "62:     def _resolve(cls, raw_source: Any) -> FileSystemDatasetSourceType:",
          "63:         \"\"\"",
          "64:         :param raw_source: The raw source, e.g. a string like \"s3://mybucket/path/to/iris/data\".",
          "65:         \"\"\"",
          "67:     @abstractmethod",
          "68:     def _to_dict(self) -> Dict[Any, Any]:",
          "69:         \"\"\"",
          "70:         :return: A JSON-compatible dictionary representation of the FileSystemDatasetSource.",
          "71:         \"\"\"",
          "73:     @classmethod",
          "74:     @abstractmethod",
          "75:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> FileSystemDatasetSourceType:",
          "76:         \"\"\"",
          "77:         :param source_dict: A dictionary representation of the FileSystemDatasetSource.",
          "78:         \"\"\"",
          "",
          "---------------"
        ],
        "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py": [
          "File: mlflow/data/http_dataset_source.py -> mlflow/data/http_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import os",
          "2: import posixpath",
          "3: import re",
          "4: import tempfile",
          "6: from typing import TypeVar, Any, Dict",
          "7: from urllib.parse import urlparse",
          "9: from mlflow.data.dataset_source import DatasetSource",
          "10: from mlflow.exceptions import MlflowException",
          "11: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "12: from mlflow.utils.rest_utils import cloud_storage_http_request, augmented_raise_for_status",
          "15: HTTPDatasetSourceType = TypeVar(\"HTTPDatasetSourceType\", bound=\"HTTPDatasetSource\")",
          "18: class HTTPDatasetSource(DatasetSource):",
          "19:     \"\"\"",
          "20:     Represents the source of a dataset stored at a web location and referred to",
          "21:     by an HTTP or HTTPS URL.",
          "22:     \"\"\"",
          "24:     def __init__(self, url):",
          "25:         self._url = url",
          "27:     @property",
          "28:     def url(self):",
          "29:         \"\"\"",
          "30:         The HTTP/S URL referring to the dataset source location.",
          "32:         :return: The HTTP/S URL referring to the dataset source location.",
          "33:         \"\"\"",
          "34:         return self._url",
          "36:     @staticmethod",
          "37:     def _get_source_type() -> str:",
          "38:         return \"http\"",
          "40:     def load(self, dst_path=None) -> str:",
          "41:         \"\"\"",
          "42:         Downloads the dataset source to the local filesystem.",
          "44:         :param dst_path: Path of the local filesystem destination directory to which to download the",
          "45:                          dataset source. If the directory does not exist, it is created. If",
          "46:                          unspecified, the dataset source is downloaded to a new uniquely-named",
          "47:                          directory on the local filesystem.",
          "48:         :return: The path to the downloaded dataset source on the local filesystem.",
          "49:         \"\"\"",
          "50:         resp = cloud_storage_http_request(",
          "51:             method=\"GET\",",
          "52:             url=self.url,",
          "53:         )",
          "54:         augmented_raise_for_status(resp)",
          "56:         path = urlparse(self.url).path",
          "57:         content_disposition = resp.headers.get(\"Content-Disposition\")",
          "58:         if (",
          "59:             content_disposition is not None",
          "60:             and len(file_names := re.findall(\"filename=(.+)\", content_disposition)) > 0",
          "61:         ):",
          "62:             # NB: If the filename is quoted, unquote it",
          "63:             basename = file_names[0].lstrip('\"').rstrip('\"').lstrip(\"'\").rstrip(\"'\")",
          "64:         elif path is not None and len(posixpath.basename(path)) > 0:",
          "65:             basename = posixpath.basename(path)",
          "66:         else:",
          "67:             basename = \"dataset_source\"",
          "69:         if dst_path is None:",
          "70:             dst_path = tempfile.mkdtemp()",
          "72:         dst_path = os.path.join(dst_path, basename)",
          "73:         with open(dst_path, \"wb\") as f:",
          "74:             chunk_size = 1024 * 1024  # 1 MB",
          "75:             for chunk in resp.iter_content(chunk_size=chunk_size):",
          "76:                 f.write(chunk)",
          "78:         return dst_path",
          "80:     @staticmethod",
          "81:     def _can_resolve(raw_source: Any) -> bool:",
          "82:         \"\"\"",
          "83:         :param raw_source: The raw source, e.g. a string like \"http://mysite/mydata.tar.gz\".",
          "84:         :return: True if this DatsetSource can resolve the raw source, False otherwise.",
          "85:         \"\"\"",
          "86:         if not isinstance(raw_source, str):",
          "87:             return False",
          "89:         try:",
          "90:             parsed_source = urlparse(str(raw_source))",
          "91:             return parsed_source.scheme in [\"http\", \"https\"]",
          "92:         except Exception:",
          "93:             return False",
          "95:     @classmethod",
          "96:     def _resolve(cls, raw_source: Any) -> HTTPDatasetSourceType:",
          "97:         \"\"\"",
          "98:         :param raw_source: The raw source, e.g. a string like \"http://mysite/mydata.tar.gz\".",
          "99:         \"\"\"",
          "100:         return HTTPDatasetSource(raw_source)",
          "102:     def _to_dict(self) -> Dict[Any, Any]:",
          "103:         \"\"\"",
          "104:         :return: A JSON-compatible dictionary representation of the HTTPDatasetSource.",
          "105:         \"\"\"",
          "106:         return {",
          "107:             \"url\": self.url,",
          "108:         }",
          "110:     @classmethod",
          "111:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> HTTPDatasetSourceType:",
          "112:         \"\"\"",
          "113:         :param source_dict: A dictionary representation of the HTTPDatasetSource.",
          "114:         \"\"\"",
          "115:         url = source_dict.get(\"url\")",
          "116:         if url is None:",
          "117:             raise MlflowException(",
          "118:                 'Failed to parse HTTPDatasetSource. Missing expected key: \"url\"',",
          "119:                 INVALID_PARAMETER_VALUE,",
          "120:             )",
          "122:         return cls(url=url)",
          "",
          "---------------"
        ],
        "mlflow/data/huggingface_dataset.py||mlflow/data/huggingface_dataset.py": [
          "File: mlflow/data/huggingface_dataset.py -> mlflow/data/huggingface_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import logging",
          "3: from functools import cached_property",
          "4: from typing import Any, Union, Optional, Mapping, Sequence, Dict",
          "6: import datasets",
          "8: from mlflow.data.dataset import Dataset",
          "9: from mlflow.data.digest_utils import compute_pandas_digest",
          "10: from mlflow.data.pyfunc_dataset_mixin import PyFuncConvertibleDatasetMixin, PyFuncInputsOutputs",
          "11: from mlflow.data.huggingface_dataset_source import HuggingFaceDatasetSource",
          "12: from mlflow.exceptions import MlflowException",
          "13: from mlflow.models.evaluation.base import EvaluationDataset",
          "14: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE, INTERNAL_ERROR",
          "15: from mlflow.types import Schema",
          "16: from mlflow.types.utils import _infer_schema",
          "17: from mlflow.utils.annotations import experimental",
          "19: _logger = logging.getLogger(__name__)",
          "21: _MAX_ROWS_FOR_DIGEST_COMPUTATION_AND_SCHEMA_INFERENCE = 10000",
          "24: @experimental",
          "25: class HuggingFaceDataset(Dataset, PyFuncConvertibleDatasetMixin):",
          "26:     \"\"\"",
          "27:     Represents a HuggingFace dataset for use with MLflow Tracking.",
          "28:     \"\"\"",
          "30:     def __init__(",
          "31:         self,",
          "32:         ds: datasets.Dataset,",
          "33:         source: HuggingFaceDatasetSource,",
          "34:         targets: Optional[str] = None,",
          "35:         name: Optional[str] = None,",
          "36:         digest: Optional[str] = None,",
          "37:     ):",
          "38:         \"\"\"",
          "39:         :param ds: A Hugging Face dataset. Must be an instance of `datasets.Dataset`.",
          "40:                    Other types, such as :py:class:`datasets.DatasetDict`, are not supported.",
          "41:         :param source: The source of the Hugging Face dataset.",
          "42:         :param name: The name of the dataset. E.g. \"wiki_train\". If unspecified, a name is",
          "43:                      automatically generated.",
          "44:         :param digest: The digest (hash, fingerprint) of the dataset. If unspecified, a digest",
          "45:                        is automatically computed.",
          "46:         \"\"\"",
          "47:         if targets is not None and targets not in ds.column_names:",
          "48:             raise MlflowException(",
          "49:                 f\"The specified Hugging Face dataset does not contain the specified targets column\"",
          "50:                 f\" '{targets}'.\",",
          "51:                 INVALID_PARAMETER_VALUE,",
          "52:             )",
          "54:         self._ds = ds",
          "55:         self._targets = targets",
          "56:         super().__init__(source=source, name=name, digest=digest)",
          "58:     def _compute_digest(self) -> str:",
          "59:         \"\"\"",
          "60:         Computes a digest for the dataset. Called if the user doesn't supply",
          "61:         a digest when constructing the dataset.",
          "62:         \"\"\"",
          "63:         df = next(",
          "64:             self._ds.to_pandas(",
          "65:                 batch_size=_MAX_ROWS_FOR_DIGEST_COMPUTATION_AND_SCHEMA_INFERENCE, batched=True",
          "66:             )",
          "67:         )",
          "68:         return compute_pandas_digest(df)",
          "70:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "71:         \"\"\"",
          "72:         :param base_dict: A string dictionary of base information about the",
          "73:                           dataset, including: name, digest, source, and source",
          "74:                           type.",
          "75:         :return: A string dictionary containing the following fields: name,",
          "76:                  digest, source, source type, schema (optional), profile",
          "77:                  (optional).",
          "78:         \"\"\"",
          "79:         base_dict.update(",
          "80:             {",
          "81:                 \"schema\": json.dumps({\"mlflow_colspec\": self.schema.to_dict()})",
          "82:                 if self.schema",
          "83:                 else None,",
          "84:                 \"profile\": json.dumps(self.profile),",
          "85:             }",
          "86:         )",
          "87:         return base_dict",
          "89:     @property",
          "90:     def ds(self) -> datasets.Dataset:",
          "91:         \"\"\"",
          "92:         The Hugging Face ``datasets.Dataset`` instance.",
          "94:         :return: The Hugging Face ``datasets.Dataset`` instance.",
          "95:         \"\"\"",
          "96:         return self._ds",
          "98:     @property",
          "99:     def targets(self) -> Optional[str]:",
          "100:         \"\"\"",
          "101:         The name of the Hugging Face dataset column containing targets (labels) for supervised",
          "102:         learning.",
          "104:         :return: The string name of the Hugging Face dataset column containing targets.",
          "105:         \"\"\"",
          "106:         return self._targets",
          "108:     @property",
          "109:     def source(self) -> HuggingFaceDatasetSource:",
          "110:         \"\"\"",
          "111:         Hugging Face dataset source information.",
          "113:         :return: A :py:class:`mlflow.data.huggingface_dataset_source.HuggingFaceDatasetSource`",
          "114:                  instance.",
          "115:         \"\"\"",
          "116:         return self._source",
          "118:     @property",
          "119:     def profile(self) -> Optional[Any]:",
          "120:         \"\"\"",
          "121:         Summary statistics for the Hugging Face dataset, including the number of rows,",
          "122:         size, and size in bytes.",
          "123:         \"\"\"",
          "124:         return {",
          "125:             \"num_rows\": self._ds.num_rows,",
          "126:             \"dataset_size\": self._ds.dataset_size,",
          "127:             \"size_in_bytes\": self._ds.size_in_bytes,",
          "128:         }",
          "130:     @cached_property",
          "131:     def schema(self) -> Optional[Schema]:",
          "132:         \"\"\"",
          "133:         The MLflow ColSpec schema of the Hugging Face dataset.",
          "134:         \"\"\"",
          "135:         try:",
          "136:             df = next(",
          "137:                 self._ds.to_pandas(",
          "138:                     batch_size=_MAX_ROWS_FOR_DIGEST_COMPUTATION_AND_SCHEMA_INFERENCE, batched=True",
          "139:                 )",
          "140:             )",
          "141:             return _infer_schema(df)",
          "142:         except Exception as e:",
          "143:             _logger.warning(\"Failed to infer schema for Hugging Face dataset. Exception: %s\", e)",
          "144:             return None",
          "146:     def to_pyfunc(self) -> PyFuncInputsOutputs:",
          "147:         df = self._ds.to_pandas()",
          "148:         if self._targets is not None:",
          "149:             if self._targets not in df.columns:",
          "150:                 raise MlflowException(",
          "151:                     f\"Failed to convert Hugging Face dataset to pyfunc inputs and outputs because\"",
          "152:                     f\" the pandas representation of the Hugging Face dataset does not contain the\"",
          "153:                     f\" specified targets column '{self._targets}'.\",",
          "154:                     # This is an internal error because we should have validated the presence of",
          "155:                     # the target column in the Hugging Face dataset at construction time",
          "156:                     INTERNAL_ERROR,",
          "157:                 )",
          "158:             inputs = df.drop(columns=self._targets)",
          "159:             outputs = df[self._targets]",
          "160:             return PyFuncInputsOutputs(inputs=inputs, outputs=outputs)",
          "161:         else:",
          "162:             return PyFuncInputsOutputs(inputs=df, outputs=None)",
          "164:     def to_evaluation_dataset(self, path=None, feature_names=None) -> EvaluationDataset:",
          "165:         \"\"\"",
          "166:         Converts the dataset to an EvaluationDataset for model evaluation. Required",
          "167:         for use with mlflow.evaluate().",
          "168:         \"\"\"",
          "169:         return EvaluationDataset(",
          "170:             data=self._ds.to_pandas(),",
          "171:             targets=self._targets,",
          "172:             path=path,",
          "173:             feature_names=feature_names,",
          "174:         )",
          "177: @experimental",
          "178: def from_huggingface(",
          "179:     ds,",
          "180:     path: str = None,",
          "181:     targets: Optional[str] = None,",
          "182:     data_dir: Optional[str] = None,",
          "183:     data_files: Optional[Union[str, Sequence[str], Mapping[str, Union[str, Sequence[str]]]]] = None,",
          "184:     revision=None,",
          "185:     task=None,",
          "186:     name: Optional[str] = None,",
          "187:     digest: Optional[str] = None,",
          "188: ) -> HuggingFaceDataset:",
          "189:     \"\"\"",
          "190:     Given a Hugging Face ``datasets.Dataset``, constructs an MLflow :py:class:`HuggingFaceDataset`",
          "191:     object for use with MLflow Tracking.",
          "193:     :param ds: A Hugging Face dataset. Must be an instance of ``datasets.Dataset``.",
          "194:                Other types, such as ``datasets.DatasetDict``, are not supported.",
          "195:     :param path: The path of the Hugging Face dataset used to construct the source. This is used by",
          "196:                  the ``datasets.load_dataset()`` function to reload the dataset upon request via",
          "197:                  :py:func:`HuggingFaceDataset.source.load()",
          "198:                  <mlflow.data.huggingface_dataset_source.HuggingFaceDatasetSource.load>`.",
          "199:                  If no path is specified, a CodeDatasetSource is used, which will source",
          "200:                  information from the run context.",
          "201:     :param targets: The name of the Hugging Face ``dataset.Dataset`` column containing targets",
          "202:                     (labels) for supervised learning.",
          "203:     :param data_dir: The `data_dir` of the Hugging Face dataset configuration. This is used by the",
          "204:                      ``datasets.load_dataset()`` function to reload the dataset upon request via",
          "205:                      :py:func:`HuggingFaceDataset.source.load()",
          "206:                      <mlflow.data.huggingface_dataset_source.HuggingFaceDatasetSource.load>`.",
          "207:     :param data_files: Paths to source data file(s) for the Hugging Face dataset configuration.",
          "208:                        This is used by the ``datasets.load_dataset()`` function to reload the",
          "209:                        dataset upon request via :py:func:`HuggingFaceDataset.source.load()",
          "210:                        <mlflow.data.huggingface_dataset_source.HuggingFaceDatasetSource.load>`.",
          "211:     :param revision: Version of the dataset script to load. This is used by the",
          "212:                      ``datasets.load_dataset()`` function to reload the dataset upon request via",
          "213:                      :py:func:`HuggingFaceDataset.source.load()",
          "214:                      <mlflow.data.huggingface_dataset_source.HuggingFaceDatasetSource.load>`.",
          "215:     :param task: The task to prepare the Hugging Face dataset for during training and evaluation.",
          "216:                  This is used by the ``datasets.load_dataset()`` function to reload the dataset",
          "217:                  upon request via :py:func:`HuggingFaceDataset.source.load()",
          "218:                  <mlflow.data.huggingface_dataset_source.HuggingFaceDatasetSource.load>`.",
          "219:     :param name: The name of the dataset. E.g. \"wiki_train\". If unspecified, a name is",
          "220:                  automatically generated.",
          "221:     :param digest: The digest (hash, fingerprint) of the dataset. If unspecified, a digest",
          "222:                    is automatically computed.",
          "223:     \"\"\"",
          "224:     from mlflow.data.code_dataset_source import CodeDatasetSource",
          "225:     from mlflow.tracking.context import registry",
          "227:     if not isinstance(ds, datasets.Dataset):",
          "228:         raise MlflowException(",
          "229:             f\"The specified Hugging Face dataset must be an instance of ``datasets.Dataset``.\"",
          "230:             f\" Instead, found an instance of: {type(ds)}\",",
          "231:             INVALID_PARAMETER_VALUE,",
          "232:         )",
          "234:     # if arguments for source are passed in directly, use them.",
          "235:     # otherwise construct a CodeDatasetSource.",
          "236:     if path is not None:",
          "237:         source = HuggingFaceDatasetSource(",
          "238:             path=path,",
          "239:             config_name=ds.config_name,",
          "240:             data_dir=data_dir,",
          "241:             data_files=data_files,",
          "242:             split=ds.split,",
          "243:             revision=revision,",
          "244:             task=task,",
          "245:         )",
          "246:     else:",
          "247:         context_tags = registry.resolve_tags()",
          "248:         source = CodeDatasetSource(tags=context_tags)",
          "249:     return HuggingFaceDataset(ds=ds, targets=targets, source=source, name=name, digest=digest)",
          "",
          "---------------"
        ],
        "mlflow/data/huggingface_dataset_source.py||mlflow/data/huggingface_dataset_source.py": [
          "File: mlflow/data/huggingface_dataset_source.py -> mlflow/data/huggingface_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import datasets",
          "3: from typing import TypeVar, Any, Union, Optional, Mapping, Sequence, Dict",
          "5: from mlflow.data.dataset_source import DatasetSource",
          "6: from mlflow.utils.annotations import experimental",
          "9: HuggingFaceDatasetSourceType = TypeVar(",
          "10:     \"HuggingFaceDatasetSourceType\", bound=\"HuggingFaceDatasetSource\"",
          "11: )",
          "14: @experimental",
          "15: class HuggingFaceDatasetSource(DatasetSource):",
          "16:     \"\"\"",
          "17:     Represents the source of a Hugging Face dataset used in MLflow Tracking.",
          "18:     \"\"\"",
          "20:     def __init__(",
          "21:         self,",
          "22:         path: str,",
          "23:         config_name: Optional[str] = None,",
          "24:         data_dir: Optional[str] = None,",
          "25:         data_files: Optional[",
          "26:             Union[str, Sequence[str], Mapping[str, Union[str, Sequence[str]]]]",
          "27:         ] = None,",
          "28:         split: Optional[Union[str, datasets.Split]] = None,",
          "29:         revision: Optional[Union[str, datasets.Version]] = None,",
          "30:         task: Optional[Union[str, datasets.TaskTemplate]] = None,",
          "31:     ):",
          "32:         \"\"\"",
          "33:         :param path: The path of the Hugging Face dataset.",
          "34:         :param config_name: The name of of the Hugging Face dataset configuration.",
          "35:         :param data_dir: The `data_dir` of the Hugging Face dataset configuration.",
          "36:         :param data_files: Paths to source data file(s) for the Hugging Face dataset configuration.",
          "37:         :param revision: Version of the dataset script to load.",
          "38:         :param task: The task to prepare the Hugging Face dataset for during training and",
          "39:                      evaluation.",
          "40:         \"\"\"",
          "41:         self._path = path",
          "42:         self._config_name = config_name",
          "43:         self._data_dir = data_dir",
          "44:         self._data_files = data_files",
          "45:         self._split = split",
          "46:         self._revision = revision",
          "47:         self._task = task",
          "49:     @staticmethod",
          "50:     def _get_source_type() -> str:",
          "51:         return \"hugging_face\"",
          "53:     def load(self, **kwargs):",
          "54:         \"\"\"",
          "55:         Loads the dataset source as a Hugging Face Dataset.",
          "57:         :param kwargs: Additional keyword arguments used for loading the dataset with",
          "58:                        the Hugging Face ``datasets.load_dataset()`` method. The following keyword",
          "59:                        arguments are used automatically from the dataset source but may be",
          "60:                        overridden by values passed in ``**kwargs``: ``path``, ``name``,",
          "61:                        ``data_dir``, ``data_files``, ``split``, ``revision``, ``task``.",
          "62:         :return: An instance of ``datasets.Dataset``.",
          "63:         \"\"\"",
          "64:         load_kwargs = {",
          "65:             \"path\": self._path,",
          "66:             \"name\": self._config_name,",
          "67:             \"data_dir\": self._data_dir,",
          "68:             \"data_files\": self._data_files,",
          "69:             \"split\": self._split,",
          "70:             \"revision\": self._revision,",
          "71:             \"task\": self._task,",
          "72:         }",
          "73:         load_kwargs.update(kwargs)",
          "75:         return datasets.load_dataset(**load_kwargs)",
          "77:     @staticmethod",
          "78:     def _can_resolve(raw_source: Any):",
          "79:         # NB: Initially, we expect that Hugging Face dataset sources will only be used with",
          "80:         # Hugging Face datasets constructed by from_huggingface_dataset, which can create",
          "81:         # an instance of HuggingFaceDatasetSource directly without the need for resolution",
          "82:         return False",
          "84:     @classmethod",
          "85:     def _resolve(cls, raw_source: str) -> HuggingFaceDatasetSourceType:",
          "86:         raise NotImplementedError",
          "88:     def _to_dict(self) -> Dict[Any, Any]:",
          "89:         return {",
          "90:             \"path\": self._path,",
          "91:             \"config_name\": self._config_name,",
          "92:             \"data_dir\": self._data_dir,",
          "93:             \"data_files\": self._data_files,",
          "94:             \"split\": str(self._split),",
          "95:             \"revision\": self._revision,",
          "96:             \"task\": self._task,",
          "97:         }",
          "99:     @classmethod",
          "100:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> HuggingFaceDatasetSourceType:",
          "101:         return cls(",
          "102:             path=source_dict.get(\"path\"),",
          "103:             config_name=source_dict.get(\"config_name\"),",
          "104:             data_dir=source_dict.get(\"data_dir\"),",
          "105:             data_files=source_dict.get(\"data_files\"),",
          "106:             split=source_dict.get(\"split\"),",
          "107:             revision=source_dict.get(\"revision\"),",
          "108:             task=source_dict.get(\"task\"),",
          "109:         )",
          "",
          "---------------"
        ],
        "mlflow/data/numpy_dataset.py||mlflow/data/numpy_dataset.py": [
          "File: mlflow/data/numpy_dataset.py -> mlflow/data/numpy_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import logging",
          "3: from typing import Optional, Any, Dict, Union",
          "5: import numpy as np",
          "6: from functools import cached_property",
          "8: from mlflow.data.dataset import Dataset",
          "9: from mlflow.data.schema import TensorDatasetSchema",
          "10: from mlflow.data.dataset_source import DatasetSource",
          "11: from mlflow.data.digest_utils import compute_numpy_digest",
          "12: from mlflow.data.pyfunc_dataset_mixin import PyFuncConvertibleDatasetMixin, PyFuncInputsOutputs",
          "13: from mlflow.models.evaluation.base import EvaluationDataset",
          "14: from mlflow.types.utils import _infer_schema",
          "15: from mlflow.utils.annotations import experimental",
          "17: _logger = logging.getLogger(__name__)",
          "20: @experimental",
          "21: class NumpyDataset(Dataset, PyFuncConvertibleDatasetMixin):",
          "22:     \"\"\"",
          "23:     Represents a NumPy dataset for use with MLflow Tracking.",
          "24:     \"\"\"",
          "26:     def __init__(",
          "27:         self,",
          "28:         features: Union[np.ndarray, Dict[str, np.ndarray]],",
          "29:         source: DatasetSource,",
          "30:         targets: Union[np.ndarray, Dict[str, np.ndarray]] = None,",
          "31:         name: Optional[str] = None,",
          "32:         digest: Optional[str] = None,",
          "33:     ):",
          "34:         \"\"\"",
          "35:         :param features: A numpy array or dictionary of numpy arrays containing dataset features.",
          "36:         :param source: The source of the numpy dataset.",
          "37:         :param targets: A numpy array or dictionary of numpy arrays containing dataset targets.",
          "38:                         Optional.",
          "39:         :param name: The name of the dataset. E.g. \"wiki_train\". If unspecified, a name is",
          "40:                      automatically generated.",
          "41:         :param digest: The digest (hash, fingerprint) of the dataset. If unspecified, a digest",
          "42:                        is automatically computed.",
          "43:         \"\"\"",
          "44:         self._features = features",
          "45:         self._targets = targets",
          "46:         super().__init__(source=source, name=name, digest=digest)",
          "48:     def _compute_digest(self) -> str:",
          "49:         \"\"\"",
          "50:         Computes a digest for the dataset. Called if the user doesn't supply",
          "51:         a digest when constructing the dataset.",
          "52:         \"\"\"",
          "53:         return compute_numpy_digest(self._features, self._targets)",
          "55:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "56:         \"\"\"",
          "57:         :param base_dict: A string dictionary of base information about the",
          "58:                           dataset, including: name, digest, source, and source",
          "59:                           type.",
          "60:         :return: A string dictionary containing the following fields: name,",
          "61:                  digest, source, source type, schema (optional), profile",
          "62:                  (optional).",
          "63:         \"\"\"",
          "64:         base_dict.update(",
          "65:             {",
          "66:                 \"schema\": json.dumps(self.schema.to_dict()) if self.schema else None,",
          "67:                 \"profile\": json.dumps(self.profile),",
          "68:             }",
          "69:         )",
          "70:         return base_dict",
          "72:     @property",
          "73:     def source(self) -> DatasetSource:",
          "74:         \"\"\"",
          "75:         The source of the dataset.",
          "76:         \"\"\"",
          "77:         return self._source",
          "79:     @property",
          "80:     def features(self) -> Union[np.ndarray, Dict[str, np.ndarray]]:",
          "81:         \"\"\"",
          "82:         The features of the dataset.",
          "83:         \"\"\"",
          "84:         return self._features",
          "86:     @property",
          "87:     def targets(self) -> Optional[Union[np.ndarray, Dict[str, np.ndarray]]]:",
          "88:         \"\"\"",
          "89:         The targets of the dataset. May be ``None`` if no targets are available.",
          "90:         \"\"\"",
          "91:         return self._targets",
          "93:     @property",
          "94:     def profile(self) -> Optional[Any]:",
          "95:         \"\"\"",
          "96:         A profile of the dataset. May be ``None`` if a profile cannot be computed.",
          "97:         \"\"\"",
          "99:         def get_profile_attribute(numpy_data, attr_name):",
          "100:             if isinstance(numpy_data, dict):",
          "101:                 return {key: getattr(array, attr_name) for key, array in numpy_data.items()}",
          "102:             else:",
          "103:                 return getattr(numpy_data, attr_name)",
          "105:         profile = {",
          "106:             \"features_shape\": get_profile_attribute(self._features, \"shape\"),",
          "107:             \"features_size\": get_profile_attribute(self._features, \"size\"),",
          "108:             \"features_nbytes\": get_profile_attribute(self._features, \"nbytes\"),",
          "109:         }",
          "110:         if self._targets is not None:",
          "111:             profile.update(",
          "112:                 {",
          "113:                     \"targets_shape\": get_profile_attribute(self._targets, \"shape\"),",
          "114:                     \"targets_size\": get_profile_attribute(self._targets, \"size\"),",
          "115:                     \"targets_nbytes\": get_profile_attribute(self._targets, \"nbytes\"),",
          "116:                 }",
          "117:             )",
          "119:         return profile",
          "121:     @cached_property",
          "122:     def schema(self) -> Optional[TensorDatasetSchema]:",
          "123:         \"\"\"",
          "124:         MLflow TensorSpec schema representing the dataset features and targets (optional).",
          "125:         \"\"\"",
          "126:         try:",
          "127:             features_schema = _infer_schema(self._features)",
          "128:             targets_schema = None",
          "129:             if self._targets is not None:",
          "130:                 targets_schema = _infer_schema(self._targets)",
          "131:             return TensorDatasetSchema(features=features_schema, targets=targets_schema)",
          "132:         except Exception as e:",
          "133:             _logger.warning(\"Failed to infer schema for NumPy dataset. Exception: %s\", e)",
          "134:             return None",
          "136:     def to_pyfunc(self) -> PyFuncInputsOutputs:",
          "137:         \"\"\"",
          "138:         Converts the dataset to a collection of pyfunc inputs and outputs for model",
          "139:         evaluation. Required for use with mlflow.evaluate().",
          "140:         \"\"\"",
          "141:         return PyFuncInputsOutputs(self._features, self._targets)",
          "143:     def to_evaluation_dataset(self, path=None, feature_names=None) -> EvaluationDataset:",
          "144:         \"\"\"",
          "145:         Converts the dataset to an EvaluationDataset for model evaluation. Required",
          "146:         for use with mlflow.sklearn.evalute().",
          "147:         \"\"\"",
          "148:         return EvaluationDataset(",
          "149:             data=self._features,",
          "150:             targets=self._targets,",
          "151:             path=path,",
          "152:             feature_names=feature_names,",
          "153:         )",
          "156: @experimental",
          "157: def from_numpy(",
          "158:     features: Union[np.ndarray, Dict[str, np.ndarray]],",
          "159:     source: Union[str, DatasetSource] = None,",
          "160:     targets: Union[np.ndarray, Dict[str, np.ndarray]] = None,",
          "161:     name: Optional[str] = None,",
          "162:     digest: Optional[str] = None,",
          "163: ) -> NumpyDataset:",
          "164:     \"\"\"",
          "165:     Constructs a :py:class:`NumpyDataset <mlflow.data.numpy_dataset.NumpyDataset>` object from",
          "166:     NumPy features, optional targets, and source. If the source is path like, then this will",
          "167:     construct a DatasetSource object from the source path. Otherwise, the source is assumed to",
          "168:     be a DatasetSource object.",
          "170:     :param features: NumPy features, represented as an np.ndarray or dictionary of named",
          "171:                      np.ndarrays.",
          "172:     :param source: The source from which the numpy data was derived, e.g. a filesystem",
          "173:                    path, an S3 URI, an HTTPS URL, a delta table name with version, or",
          "174:                    spark table etc. ``source`` may be specified as a URI, a path-like string,",
          "175:                    or an instance of",
          "176:                    :py:class:`DatasetSource <mlflow.data.dataset_source.DatasetSource>`.",
          "177:                    If unspecified, the source is assumed to be the code location",
          "178:                    (e.g. notebook cell, script, etc.) where",
          "179:                    :py:func:`from_numpy <mlflow.data.from_numpy>` is being called.",
          "180:     :param targets: Optional NumPy targets, represented as an np.ndarray or dictionary of named",
          "181:                     np.ndarrays.",
          "182:     :param name: The name of the dataset. If unspecified, a name is generated.",
          "183:     :param digest: The dataset digest (hash). If unspecified, a digest is computed",
          "184:                    automatically.",
          "185:     \"\"\"",
          "186:     from mlflow.data.code_dataset_source import CodeDatasetSource",
          "187:     from mlflow.data.dataset_source_registry import resolve_dataset_source",
          "188:     from mlflow.tracking.context import registry",
          "190:     if source is not None:",
          "191:         if isinstance(source, DatasetSource):",
          "192:             resolved_source = source",
          "193:         else:",
          "194:             resolved_source = resolve_dataset_source(",
          "195:                 source,",
          "196:             )",
          "197:     else:",
          "198:         context_tags = registry.resolve_tags()",
          "199:         resolved_source = CodeDatasetSource(tags=context_tags)",
          "200:     return NumpyDataset(",
          "201:         features=features, source=resolved_source, targets=targets, name=name, digest=digest",
          "202:     )",
          "",
          "---------------"
        ],
        "mlflow/data/pandas_dataset.py||mlflow/data/pandas_dataset.py": [
          "File: mlflow/data/pandas_dataset.py -> mlflow/data/pandas_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import logging",
          "3: from typing import Optional, Any, Dict, Union",
          "5: import pandas as pd",
          "6: from functools import cached_property",
          "8: from mlflow.data.dataset import Dataset",
          "9: from mlflow.data.dataset_source import DatasetSource",
          "10: from mlflow.data.digest_utils import compute_pandas_digest",
          "11: from mlflow.data.pyfunc_dataset_mixin import PyFuncConvertibleDatasetMixin, PyFuncInputsOutputs",
          "12: from mlflow.exceptions import MlflowException",
          "13: from mlflow.models.evaluation.base import EvaluationDataset",
          "14: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "15: from mlflow.types import Schema",
          "16: from mlflow.types.utils import _infer_schema",
          "17: from mlflow.utils.annotations import experimental",
          "19: _logger = logging.getLogger(__name__)",
          "22: class PandasDataset(Dataset, PyFuncConvertibleDatasetMixin):",
          "23:     \"\"\"",
          "24:     Represents a Pandas DataFrame for use with MLflow Tracking.",
          "25:     \"\"\"",
          "27:     def __init__(",
          "28:         self,",
          "29:         df: pd.DataFrame,",
          "30:         source: DatasetSource,",
          "31:         targets: str = None,",
          "32:         name: Optional[str] = None,",
          "33:         digest: Optional[str] = None,",
          "34:     ):",
          "35:         \"\"\"",
          "36:         :param df: A pandas DataFrame.",
          "37:         :param source: The source of the pandas DataFrame.",
          "38:         :param targets: The name of the target column. Optional.",
          "39:         :param name: The name of the dataset. E.g. \"wiki_train\". If unspecified, a name is",
          "40:                      automatically generated.",
          "41:         :param digest: The digest (hash, fingerprint) of the dataset. If unspecified, a digest",
          "42:                        is automatically computed.",
          "43:         \"\"\"",
          "44:         if targets is not None and targets not in df.columns:",
          "45:             raise MlflowException(",
          "46:                 f\"The specified pandas DataFrame does not contain the specified targets column\"",
          "47:                 f\" '{targets}'.\",",
          "48:                 INVALID_PARAMETER_VALUE,",
          "49:             )",
          "50:         self._df = df",
          "51:         self._targets = targets",
          "52:         super().__init__(source=source, name=name, digest=digest)",
          "54:     def _compute_digest(self) -> str:",
          "55:         \"\"\"",
          "56:         Computes a digest for the dataset. Called if the user doesn't supply",
          "57:         a digest when constructing the dataset.",
          "58:         \"\"\"",
          "59:         return compute_pandas_digest(self._df)",
          "61:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "62:         \"\"\"",
          "63:         :param base_dict: A string dictionary of base information about the",
          "64:                           dataset, including: name, digest, source, and source",
          "65:                           type.",
          "66:         :return: A string dictionary containing the following fields: name,",
          "67:                  digest, source, source type, schema (optional), profile",
          "68:                  (optional).",
          "69:         \"\"\"",
          "70:         base_dict.update(",
          "71:             {",
          "72:                 \"schema\": json.dumps({\"mlflow_colspec\": self.schema.to_dict()})",
          "73:                 if self.schema",
          "74:                 else None,",
          "75:                 \"profile\": json.dumps(self.profile),",
          "76:             }",
          "77:         )",
          "78:         return base_dict",
          "80:     @property",
          "81:     def df(self) -> pd.DataFrame:",
          "82:         \"\"\"",
          "83:         The underlying pandas DataFrame.",
          "84:         \"\"\"",
          "85:         return self._df",
          "87:     @property",
          "88:     def source(self) -> DatasetSource:",
          "89:         \"\"\"",
          "90:         The source of the dataset.",
          "91:         \"\"\"",
          "92:         return self._source",
          "94:     @property",
          "95:     def targets(self) -> Optional[str]:",
          "96:         \"\"\"",
          "97:         The name of the target column. May be ``None`` if no target column is available.",
          "98:         \"\"\"",
          "99:         return self._targets",
          "101:     @property",
          "102:     def profile(self) -> Optional[Any]:",
          "103:         \"\"\"",
          "104:         A profile of the dataset. May be ``None`` if a profile cannot be computed.",
          "105:         \"\"\"",
          "106:         return {",
          "107:             \"num_rows\": len(self._df),",
          "108:             \"num_elements\": int(self._df.size),",
          "109:         }",
          "111:     @cached_property",
          "112:     def schema(self) -> Optional[Schema]:",
          "113:         \"\"\"",
          "114:         An instance of :py:class:`mlflow.types.Schema` representing the tabular dataset. May be",
          "115:         ``None`` if the schema cannot be inferred from the dataset.",
          "116:         \"\"\"",
          "117:         try:",
          "118:             return _infer_schema(self._df)",
          "119:         except Exception as e:",
          "120:             _logger.warning(\"Failed to infer schema for Pandas dataset. Exception: %s\", e)",
          "121:             return None",
          "123:     def to_pyfunc(self) -> PyFuncInputsOutputs:",
          "124:         \"\"\"",
          "125:         Converts the dataset to a collection of pyfunc inputs and outputs for model",
          "126:         evaluation. Required for use with mlflow.evaluate().",
          "127:         \"\"\"",
          "128:         if self._targets:",
          "129:             inputs = self._df.drop(columns=[self._targets])",
          "130:             outputs = self._df[self._targets]",
          "131:             return PyFuncInputsOutputs(inputs, outputs)",
          "132:         else:",
          "133:             return PyFuncInputsOutputs(self._df)",
          "135:     def to_evaluation_dataset(self, path=None, feature_names=None) -> EvaluationDataset:",
          "136:         \"\"\"",
          "137:         Converts the dataset to an EvaluationDataset for model evaluation. Required",
          "138:         for use with mlflow.evaluate().",
          "139:         \"\"\"",
          "140:         return EvaluationDataset(",
          "141:             data=self._df,",
          "142:             targets=self._targets,",
          "143:             path=path,",
          "144:             feature_names=feature_names,",
          "145:         )",
          "148: @experimental",
          "149: def from_pandas(",
          "150:     df: pd.DataFrame,",
          "151:     source: Union[str, DatasetSource] = None,",
          "152:     targets: Optional[str] = None,",
          "153:     name: Optional[str] = None,",
          "154:     digest: Optional[str] = None,",
          "155: ) -> PandasDataset:",
          "156:     \"\"\"",
          "157:     Constructs a :py:class:`PandasDataset <mlflow.data.pandas_dataset.PandasDataset>` instance from",
          "158:     a Pandas DataFrame, optional targets, and source.",
          "160:     :param df: A Pandas DataFrame.",
          "161:     :param source: The source from which the DataFrame was derived, e.g. a filesystem",
          "162:                    path, an S3 URI, an HTTPS URL, a delta table name with version, or",
          "163:                    spark table etc. ``source`` may be specified as a URI, a path-like string,",
          "164:                    or an instance of",
          "165:                    :py:class:`DatasetSource <mlflow.data.dataset_source.DatasetSource>`.",
          "166:                    If unspecified, the source is assumed to be the code location",
          "167:                    (e.g. notebook cell, script, etc.) where",
          "168:                    :py:func:`from_pandas <mlflow.data.from_pandas>` is being called.",
          "169:     :param targets: An optional target column name for supervised training. This column",
          "170:                     must be present in the dataframe (``df``).",
          "171:     :param name: The name of the dataset. If unspecified, a name is generated.",
          "172:     :param digest: The dataset digest (hash). If unspecified, a digest is computed",
          "173:                    automatically.",
          "174:     \"\"\"",
          "175:     from mlflow.data.code_dataset_source import CodeDatasetSource",
          "176:     from mlflow.data.dataset_source_registry import resolve_dataset_source",
          "177:     from mlflow.tracking.context import registry",
          "179:     if source is not None:",
          "180:         if isinstance(source, DatasetSource):",
          "181:             resolved_source = source",
          "182:         else:",
          "183:             resolved_source = resolve_dataset_source(",
          "184:                 source,",
          "185:             )",
          "186:     else:",
          "187:         context_tags = registry.resolve_tags()",
          "188:         resolved_source = CodeDatasetSource(tags=context_tags)",
          "189:     return PandasDataset(df=df, source=resolved_source, targets=targets, name=name, digest=digest)",
          "",
          "---------------"
        ],
        "mlflow/data/pyfunc_dataset_mixin.py||mlflow/data/pyfunc_dataset_mixin.py": [
          "File: mlflow/data/pyfunc_dataset_mixin.py -> mlflow/data/pyfunc_dataset_mixin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.models.utils import PyFuncInput, PyFuncOutput",
          "2: from typing import List",
          "3: from abc import abstractmethod",
          "4: from dataclasses import dataclass",
          "5: from mlflow.models.evaluation.base import EvaluationDataset",
          "8: @dataclass",
          "9: class PyFuncInputsOutputs:",
          "10:     inputs: List[PyFuncInput]",
          "11:     outputs: List[PyFuncOutput] = None",
          "14: class PyFuncConvertibleDatasetMixin:",
          "15:     @abstractmethod",
          "16:     def to_pyfunc(self) -> PyFuncInputsOutputs:",
          "17:         \"\"\"",
          "18:         Converts the dataset to a collection of pyfunc inputs and outputs for model",
          "19:         evaluation. Required for use with mlflow.evaluate().",
          "20:         May not be implemented by all datasets.",
          "21:         \"\"\"",
          "23:     @abstractmethod",
          "24:     def to_evaluation_dataset(self, path=None, feature_names=None) -> EvaluationDataset:",
          "25:         \"\"\"",
          "26:         Converts the dataset to an EvaluationDataset for model evaluation.",
          "27:         May not be implemented by all datasets.",
          "28:         \"\"\"",
          "",
          "---------------"
        ],
        "mlflow/data/schema.py||mlflow/data/schema.py": [
          "File: mlflow/data/schema.py -> mlflow/data/schema.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.exceptions import MlflowException",
          "2: from mlflow.types.schema import Schema",
          "3: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "4: from typing import Dict, Any",
          "7: class TensorDatasetSchema:",
          "8:     \"\"\"",
          "9:     Represents the schema of a dataset with tensor features and targets.",
          "10:     \"\"\"",
          "12:     def __init__(self, features: Schema, targets: Schema = None):",
          "13:         if not isinstance(features, Schema):",
          "14:             raise MlflowException(",
          "15:                 \"features must be mlflow.types.Schema, got '{}'\".format(type(features)),",
          "16:                 INVALID_PARAMETER_VALUE,",
          "17:             )",
          "18:         if targets is not None and not isinstance(targets, Schema):",
          "19:             raise MlflowException(",
          "20:                 \"targets must be either None or mlflow.types.Schema, \"",
          "21:                 \"got '{}'\".format(type(features)),",
          "22:                 INVALID_PARAMETER_VALUE,",
          "23:             )",
          "24:         self.features = features",
          "25:         self.targets = targets",
          "27:     def to_dict(self) -> Dict[str, Any]:",
          "28:         \"\"\"",
          "29:         Serialize into a 'jsonable' dictionary.",
          "31:         :return: dictionary representation of the schema's features and targets (if defined).",
          "32:         \"\"\"",
          "34:         return {",
          "35:             \"mlflow_tensorspec\": {",
          "36:                 \"features\": self.features.to_json(),",
          "37:                 \"targets\": self.targets.to_json() if self.targets is not None else None,",
          "38:             },",
          "39:         }",
          "41:     @classmethod",
          "42:     def from_dict(cls, schema_dict: Dict[str, Any]):",
          "43:         \"\"\"",
          "44:         Deserialize from dictionary representation.",
          "46:         :param schema_dict: Dictionary representation of model signature.",
          "47:                             Expected dictionary format:",
          "48:                             `{'features': <json string>, 'targets': <json string>\" }`",
          "50:         :return: TensorDatasetSchema populated with the data from the dictionary.",
          "51:         \"\"\"",
          "52:         if \"mlflow_tensorspec\" not in schema_dict:",
          "53:             raise MlflowException(",
          "54:                 \"TensorDatasetSchema dictionary is missing expected key 'mlflow_tensorspec'\",",
          "55:                 INVALID_PARAMETER_VALUE,",
          "56:             )",
          "58:         schema_dict = schema_dict[\"mlflow_tensorspec\"]",
          "59:         features = Schema.from_json(schema_dict[\"features\"])",
          "60:         if \"targets\" in schema_dict and schema_dict[\"targets\"] is not None:",
          "61:             targets = Schema.from_json(schema_dict[\"targets\"])",
          "62:             return cls(features, targets)",
          "63:         else:",
          "64:             return cls(features)",
          "66:     def __eq__(self, other) -> bool:",
          "67:         return (",
          "68:             isinstance(other, TensorDatasetSchema)",
          "69:             and self.features == other.features",
          "70:             and self.targets == other.targets",
          "71:         )",
          "73:     def __repr__(self) -> str:",
          "74:         return (",
          "75:             \"features: \\n\"",
          "76:             \"  {}\\n\"",
          "77:             \"targets: \\n\"",
          "78:             \"  {}\\n\".format(repr(self.features), repr(self.targets))",
          "79:         )",
          "",
          "---------------"
        ],
        "mlflow/data/sources.py||mlflow/data/sources.py": [
          "File: mlflow/data/sources.py -> mlflow/data/sources.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: __all__ = []",
          "",
          "---------------"
        ],
        "mlflow/data/spark_dataset.py||mlflow/data/spark_dataset.py": [
          "File: mlflow/data/spark_dataset.py -> mlflow/data/spark_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import logging",
          "3: from functools import cached_property",
          "4: from typing import Any, Dict, Optional, Union",
          "6: from mlflow.data.dataset import Dataset",
          "7: from mlflow.data.dataset_source import DatasetSource",
          "8: from mlflow.data.delta_dataset_source import DeltaDatasetSource",
          "9: from mlflow.data.digest_utils import compute_spark_df_digest",
          "10: from mlflow.data.pyfunc_dataset_mixin import PyFuncConvertibleDatasetMixin, PyFuncInputsOutputs",
          "11: from mlflow.data.spark_dataset_source import SparkDatasetSource",
          "12: from mlflow.exceptions import MlflowException",
          "13: from mlflow.models.evaluation.base import EvaluationDataset",
          "14: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE, INTERNAL_ERROR",
          "15: from mlflow.types import Schema",
          "16: from mlflow.types.utils import _infer_schema",
          "17: from mlflow.utils.annotations import experimental",
          "19: _logger = logging.getLogger(__name__)",
          "22: @experimental",
          "23: class SparkDataset(Dataset, PyFuncConvertibleDatasetMixin):",
          "24:     \"\"\"",
          "25:     Represents a Spark dataset (e.g. data derived from a Spark Table / file directory or Delta",
          "26:     Table) for use with MLflow Tracking.",
          "27:     \"\"\"",
          "29:     def __init__(",
          "30:         self,",
          "31:         df,",
          "32:         source: DatasetSource,",
          "33:         targets: Optional[str] = None,",
          "34:         name: Optional[str] = None,",
          "35:         digest: Optional[str] = None,",
          "36:     ):",
          "37:         if targets is not None and targets not in df.columns:",
          "38:             raise MlflowException(",
          "39:                 f\"The specified Spark dataset does not contain the specified targets column\"",
          "40:                 f\" '{targets}'.\",",
          "41:                 INVALID_PARAMETER_VALUE,",
          "42:             )",
          "44:         self._df = df",
          "45:         self._targets = targets",
          "46:         super().__init__(source=source, name=name, digest=digest)",
          "48:     def _compute_digest(self) -> str:",
          "49:         \"\"\"",
          "50:         Computes a digest for the dataset. Called if the user doesn't supply",
          "51:         a digest when constructing the dataset.",
          "52:         \"\"\"",
          "53:         # Retrieve a semantic hash of the DataFrame's logical plan, which is much more efficient",
          "54:         # and deterministic than hashing DataFrame records",
          "55:         return compute_spark_df_digest(self._df)",
          "57:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "58:         \"\"\"",
          "59:         :param base_dict: A string dictionary of base information about the",
          "60:                           dataset, including: name, digest, source, and source",
          "61:                           type.",
          "62:         :return: A string dictionary containing the following fields: name,",
          "63:                  digest, source, source type, schema (optional), profile",
          "64:                  (optional).",
          "65:         \"\"\"",
          "66:         base_dict.update(",
          "67:             {",
          "68:                 \"schema\": json.dumps({\"mlflow_colspec\": self.schema.to_dict()})",
          "69:                 if self.schema",
          "70:                 else None,",
          "71:                 \"profile\": json.dumps(self.profile),",
          "72:             }",
          "73:         )",
          "74:         return base_dict",
          "76:     @property",
          "77:     def df(self):",
          "78:         \"\"\"",
          "79:         The Spark DataFrame instance.",
          "81:         :return: The Spark DataFrame instance.",
          "83:         \"\"\"",
          "84:         return self._df",
          "86:     @property",
          "87:     def targets(self) -> Optional[str]:",
          "88:         \"\"\"",
          "89:         The name of the Spark DataFrame column containing targets (labels) for supervised",
          "90:         learning.",
          "92:         :return: The string name of the Spark DataFrame column containing targets.",
          "93:         \"\"\"",
          "94:         return self._targets",
          "96:     @property",
          "97:     def source(self) -> Union[SparkDatasetSource, DeltaDatasetSource]:",
          "98:         \"\"\"",
          "99:         Spark dataset source information.",
          "101:         :return: An instance of :py:class:`SparkDatasetSource",
          "102:             <mlflow.data.spark_dataset_source.SparkDatasetSource>`",
          "103:             or :py:class:`DeltaDatasetSource",
          "104:             <mlflow.data.delta_dataset_source.DeltaDatasetSource>`.",
          "105:         \"\"\"",
          "106:         return self._source",
          "108:     @property",
          "109:     def profile(self) -> Optional[Any]:",
          "110:         \"\"\"",
          "111:         A profile of the dataset. May be None if no profile is available.",
          "112:         \"\"\"",
          "113:         try:",
          "114:             from pyspark.rdd import BoundedFloat",
          "116:             # Use Spark RDD countApprox to get approximate count since count() may be expensive.",
          "117:             # Note that we call the Scala RDD API because the PySpark API does not respect the",
          "118:             # specified timeout. Reference code:",
          "119:             # https://spark.apache.org/docs/3.4.0/api/python/_modules/pyspark/rdd.html",
          "120:             # #RDD.countApprox. This is confirmed to work in all Spark 3.x versions",
          "121:             py_rdd = self.df.rdd",
          "122:             drdd = py_rdd.mapPartitions(lambda it: [float(sum(1 for i in it))])",
          "123:             jrdd = drdd.mapPartitions(lambda it: [float(sum(it))])._to_java_object_rdd()",
          "124:             jdrdd = drdd.ctx._jvm.JavaDoubleRDD.fromRDD(jrdd.rdd())",
          "125:             timeout_millis = 5000",
          "126:             confidence = 0.9",
          "127:             approx_count_operation = jdrdd.sumApprox(timeout_millis, confidence)",
          "128:             approx_count_result = approx_count_operation.initialValue()",
          "129:             approx_count_float = BoundedFloat(",
          "130:                 mean=approx_count_result.mean(),",
          "131:                 confidence=approx_count_result.confidence(),",
          "132:                 low=approx_count_result.low(),",
          "133:                 high=approx_count_result.high(),",
          "134:             )",
          "135:             approx_count = int(approx_count_float)",
          "136:             if approx_count <= 0:",
          "137:                 # An approximate count of zero likely indicates that the count timed",
          "138:                 # out before an estimate could be made. In this case, we use the value",
          "139:                 # \"unknown\" so that users don't think the dataset is empty",
          "140:                 approx_count = \"unknown\"",
          "142:             return {",
          "143:                 \"approx_count\": approx_count,",
          "144:             }",
          "145:         except Exception as e:",
          "146:             _logger.warning(",
          "147:                 \"Encountered an unexpected exception while computing Spark dataset profile.\"",
          "148:                 \" Exception: %s\",",
          "149:                 e,",
          "150:             )",
          "152:     @cached_property",
          "153:     def schema(self) -> Optional[Schema]:",
          "154:         \"\"\"",
          "155:         The MLflow ColSpec schema of the Spark dataset.",
          "156:         \"\"\"",
          "157:         try:",
          "158:             return _infer_schema(self._df)",
          "159:         except Exception as e:",
          "160:             _logger.warning(\"Failed to infer schema for Spark dataset. Exception: %s\", e)",
          "161:             return None",
          "163:     def to_pyfunc(self) -> PyFuncInputsOutputs:",
          "164:         \"\"\"",
          "165:         Converts the Spark DataFrame to pandas and splits the resulting",
          "166:         :py:class:`pandas.DataFrame` into: 1. a :py:class:`pandas.DataFrame` of features and",
          "167:         2. a :py:class:`pandas.Series` of targets.",
          "169:         To avoid overuse of driver memory, only the first 10,000 DataFrame rows are selected.",
          "170:         \"\"\"",
          "171:         df = self._df.limit(10000).toPandas()",
          "172:         if self._targets is not None:",
          "173:             if self._targets not in df.columns:",
          "174:                 raise MlflowException(",
          "175:                     f\"Failed to convert Spark dataset to pyfunc inputs and outputs because\"",
          "176:                     f\" the pandas representation of the Spark dataset does not contain the\"",
          "177:                     f\" specified targets column '{self._targets}'.\",",
          "178:                     # This is an internal error because we should have validated the presence of",
          "179:                     # the target column in the Hugging Face dataset at construction time",
          "180:                     INTERNAL_ERROR,",
          "181:                 )",
          "182:             inputs = df.drop(columns=self._targets)",
          "183:             outputs = df[self._targets]",
          "184:             return PyFuncInputsOutputs(inputs=inputs, outputs=outputs)",
          "185:         else:",
          "186:             return PyFuncInputsOutputs(inputs=df, outputs=None)",
          "188:     def to_evaluation_dataset(self, path=None, feature_names=None) -> EvaluationDataset:",
          "189:         \"\"\"",
          "190:         Converts the dataset to an EvaluationDataset for model evaluation. Required",
          "191:         for use with mlflow.evaluate().",
          "192:         \"\"\"",
          "193:         return EvaluationDataset(",
          "194:             data=self._df.limit(10000).toPandas(),",
          "195:             targets=self._targets,",
          "196:             path=path,",
          "197:             feature_names=feature_names,",
          "198:         )",
          "201: @experimental",
          "202: def load_delta(",
          "203:     path: Optional[str] = None,",
          "204:     table_name: Optional[str] = None,",
          "205:     version: Optional[str] = None,",
          "206:     targets: Optional[str] = None,",
          "207:     name: Optional[str] = None,",
          "208:     digest: Optional[str] = None,",
          "209: ) -> SparkDataset:",
          "210:     \"\"\"",
          "211:     Loads a :py:class:`SparkDataset <mlflow.data.spark_dataset.SparkDataset>` from a Delta table",
          "212:     for use with MLflow Tracking.",
          "214:     :param path: The path to the Delta table. Either ``path`` or ``table_name`` must be specified.",
          "215:     :param table_name: The name of the Delta table. Either ``path`` or ``table_name`` must be",
          "216:                        specified.",
          "217:     :param version: The Delta table version. If not specified, the version will be inferred.",
          "218:     :param targets: Optional. The name of the Delta table column containing targets (labels) for",
          "219:                     supervised learning.",
          "220:     :param name: The name of the dataset. E.g. \"wiki_train\". If unspecified, a name is",
          "221:                  automatically generated.",
          "222:     :param digest: The digest (hash, fingerprint) of the dataset. If unspecified, a digest",
          "223:                    is automatically computed.",
          "224:     :return: An instance of :py:class:`SparkDataset <mlflow.data.spark_dataset.SparkDataset>`.",
          "225:     \"\"\"",
          "226:     from mlflow.data.spark_delta_utils import (",
          "227:         _try_get_delta_table_latest_version_from_path,",
          "228:         _try_get_delta_table_latest_version_from_table_name,",
          "229:     )",
          "231:     if (path, table_name).count(None) != 1:",
          "232:         raise MlflowException(",
          "233:             \"Must specify exactly one of `table_name` or `path`.\",",
          "234:             INVALID_PARAMETER_VALUE,",
          "235:         )",
          "237:     if version is None:",
          "238:         if path is not None:",
          "239:             version = _try_get_delta_table_latest_version_from_path(path)",
          "240:         else:",
          "241:             version = _try_get_delta_table_latest_version_from_table_name(table_name)",
          "243:     if name is None and table_name is not None:",
          "244:         name = table_name + (f\"@v{version}\" if version is not None else \"\")",
          "246:     source = DeltaDatasetSource(path=path, delta_table_name=table_name, delta_table_version=version)",
          "247:     df = source.load()",
          "249:     return SparkDataset(",
          "250:         df=df,",
          "251:         source=source,",
          "252:         targets=targets,",
          "253:         name=name,",
          "254:         digest=digest,",
          "255:     )",
          "258: @experimental",
          "259: def from_spark(",
          "260:     df,",
          "261:     path: Optional[str] = None,",
          "262:     table_name: Optional[str] = None,",
          "263:     version: Optional[str] = None,",
          "264:     sql: Optional[str] = None,",
          "265:     targets: Optional[str] = None,",
          "266:     name: Optional[str] = None,",
          "267:     digest: Optional[str] = None,",
          "268: ) -> SparkDataset:",
          "269:     \"\"\"",
          "270:     Given a Spark DataFrame, constructs a",
          "271:     :py:class:`SparkDataset <mlflow.data.spark_dataset.SparkDataset>` object for use with",
          "272:     MLflow Tracking.",
          "274:     :param df: The Spark DataFrame from which to construct a SparkDataset.",
          "275:     :param path: The path of the Spark or Delta source that the DataFrame originally came from.",
          "276:                  Note that the path does not have to match the DataFrame exactly, since the",
          "277:                  DataFrame may have been modified by Spark operations. This is used to reload the",
          "278:                  dataset upon request via :py:func:`SparkDataset.source.load()",
          "279:                  <mlflow.data.spark_dataset_source.SparkDatasetSource.load>`. If none of ``path``,",
          "280:                  ``table_name``, or ``sql`` are specified, a CodeDatasetSource is used, which will",
          "281:                  source information from the run context.",
          "282:     :param table_name: The name of the Spark or Delta table that the DataFrame originally came from.",
          "283:                        Note that the table does not have to match the DataFrame exactly, since the",
          "284:                        DataFrame may have been modified by Spark operations. This is used to reload",
          "285:                        the dataset upon request via :py:func:`SparkDataset.source.load()",
          "286:                        <mlflow.data.spark_dataset_source.SparkDatasetSource.load>`. If none of",
          "287:                        ``path``, ``table_name``, or ``sql`` are specified, a CodeDatasetSource is",
          "288:                        used, which will source information from the run context.",
          "289:     :param version: If the DataFrame originally came from a Delta table, specifies the version",
          "290:                     of the Delta table. This is used to reload the dataset upon request via",
          "291:                     :py:func:`SparkDataset.source.load()",
          "292:                     <mlflow.data.spark_dataset_source.SparkDatasetSource.load>`.  ``version``",
          "293:                     cannot be specified if ``sql`` is specified.",
          "294:     :param sql: The Spark SQL statement that was originally used to construct the DataFrame.",
          "295:                 Note that the Spark SQL statement does not have to match the DataFrame exactly,",
          "296:                 since the DataFrame may have been modified by Spark operations. This is used to",
          "297:                 reload the dataset upon request via :py:func:`SparkDataset.source.load()",
          "298:                 <mlflow.data.spark_dataset_source.SparkDatasetSource.load>`. If none of",
          "299:                 ``path``, ``table_name``, or ``sql`` are specified, a CodeDatasetSource is used,",
          "300:                 which will source information from the run context.",
          "301:     :param targets: Optional. The name of the Data Frame column containing targets (labels) for",
          "302:                     supervised learning.",
          "303:     :param name: The name of the dataset. E.g. \"wiki_train\". If unspecified, a name is",
          "304:                  automatically generated.",
          "305:     :param digest: The digest (hash, fingerprint) of the dataset. If unspecified, a digest",
          "306:                    is automatically computed.",
          "307:     :return: An instance of :py:class:`SparkDataset <mlflow.data.spark_dataset.SparkDataset>`.",
          "308:     \"\"\"",
          "309:     from mlflow.data.code_dataset_source import CodeDatasetSource",
          "310:     from mlflow.tracking.context import registry",
          "311:     from mlflow.data.spark_delta_utils import (",
          "312:         _is_delta_table,",
          "313:         _is_delta_table_path,",
          "314:         _try_get_delta_table_latest_version_from_path,",
          "315:         _try_get_delta_table_latest_version_from_table_name,",
          "316:     )",
          "318:     if (path, table_name, sql).count(None) < 2:",
          "319:         raise MlflowException(",
          "320:             \"Must specify at most one of `path`, `table_name`, or `sql`.\",",
          "321:             INVALID_PARAMETER_VALUE,",
          "322:         )",
          "324:     if (sql, version).count(None) == 0:",
          "325:         raise MlflowException(",
          "326:             \"`version` may not be specified when `sql` is specified. `version` may only be\"",
          "327:             \" specified when `table_name` or `path` is specified.\",",
          "328:             INVALID_PARAMETER_VALUE,",
          "329:         )",
          "331:     if sql is not None:",
          "332:         source = SparkDatasetSource(sql=sql)",
          "333:     elif path is not None:",
          "334:         if _is_delta_table_path(path):",
          "335:             version = version or _try_get_delta_table_latest_version_from_path(path)",
          "336:             source = DeltaDatasetSource(path=path, delta_table_version=version)",
          "337:         elif version is None:",
          "338:             source = SparkDatasetSource(path=path)",
          "339:         else:",
          "340:             raise MlflowException(",
          "341:                 f\"Version '{version}' was specified, but the path '{path}' does not refer\"",
          "342:                 f\" to a Delta table.\",",
          "343:                 INVALID_PARAMETER_VALUE,",
          "344:             )",
          "345:     elif table_name is not None:",
          "346:         if _is_delta_table(table_name):",
          "347:             version = version or _try_get_delta_table_latest_version_from_table_name(table_name)",
          "348:             source = DeltaDatasetSource(",
          "349:                 delta_table_name=table_name,",
          "350:                 delta_table_version=version,",
          "351:             )",
          "352:         elif version is None:",
          "353:             source = SparkDatasetSource(table_name=table_name)",
          "354:         else:",
          "355:             raise MlflowException(",
          "356:                 f\"Version '{version}' was specified, but could not find a Delta table with name\"",
          "357:                 f\" '{table_name}'.\",",
          "358:                 INVALID_PARAMETER_VALUE,",
          "359:             )",
          "360:     else:",
          "361:         context_tags = registry.resolve_tags()",
          "362:         source = CodeDatasetSource(tags=context_tags)",
          "364:     return SparkDataset(",
          "365:         df=df,",
          "366:         source=source,",
          "367:         targets=targets,",
          "368:         name=name,",
          "369:         digest=digest,",
          "370:     )",
          "",
          "---------------"
        ],
        "mlflow/data/spark_dataset_source.py||mlflow/data/spark_dataset_source.py": [
          "File: mlflow/data/spark_dataset_source.py -> mlflow/data/spark_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from typing import TypeVar, Any, Optional, Dict",
          "3: from mlflow.data.dataset_source import DatasetSource",
          "4: from mlflow.exceptions import MlflowException",
          "5: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "6: from mlflow.utils.annotations import experimental",
          "9: SparkDatasetSourceType = TypeVar(\"SparkDatasetSourceType\", bound=\"SparkDatasetSource\")",
          "12: @experimental",
          "13: class SparkDatasetSource(DatasetSource):",
          "14:     \"\"\"",
          "15:     Represents the source of a dataset stored in a spark table.",
          "16:     \"\"\"",
          "18:     def __init__(",
          "19:         self,",
          "20:         path: Optional[str] = None,",
          "21:         table_name: Optional[str] = None,",
          "22:         sql: Optional[str] = None,",
          "23:     ):",
          "24:         if (path, table_name, sql).count(None) != 2:",
          "25:             raise MlflowException(",
          "26:                 'Must specify exactly one of \"path\", \"table_name\", or \"sql\"',",
          "27:                 INVALID_PARAMETER_VALUE,",
          "28:             )",
          "29:         self._path = path",
          "30:         self._table_name = table_name",
          "31:         self._sql = sql",
          "33:     @staticmethod",
          "34:     def _get_source_type() -> str:",
          "35:         return \"spark\"",
          "37:     def load(self, **kwargs):",
          "38:         \"\"\"",
          "39:         Loads the dataset source as a Spark Dataset Source.",
          "40:         :return: An instance of ``pyspark.sql.DataFrame``.",
          "41:         \"\"\"",
          "42:         from pyspark.sql import SparkSession",
          "44:         spark = SparkSession.builder.getOrCreate()",
          "46:         if self._path:",
          "47:             return spark.read.parquet(self._path)",
          "48:         if self._table_name:",
          "49:             return spark.read.table(self._table_name)",
          "50:         if self._sql:",
          "51:             return spark.sql(self._sql)",
          "53:     @staticmethod",
          "54:     def _can_resolve(raw_source: Any):",
          "55:         return False",
          "57:     @classmethod",
          "58:     def _resolve(cls, raw_source: str) -> SparkDatasetSourceType:",
          "59:         raise NotImplementedError",
          "61:     def _to_dict(self) -> Dict[Any, Any]:",
          "62:         info = {}",
          "63:         if self._path is not None:",
          "64:             info[\"path\"] = self._path",
          "65:         elif self._table_name is not None:",
          "66:             info[\"table_name\"] = self._table_name",
          "67:         elif self._sql is not None:",
          "68:             info[\"sql\"] = self._sql",
          "69:         return info",
          "71:     @classmethod",
          "72:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> SparkDatasetSourceType:",
          "73:         return cls(",
          "74:             path=source_dict.get(\"path\"),",
          "75:             table_name=source_dict.get(\"table_name\"),",
          "76:             sql=source_dict.get(\"sql\"),",
          "77:         )",
          "",
          "---------------"
        ],
        "mlflow/data/spark_delta_utils.py||mlflow/data/spark_delta_utils.py": [
          "File: mlflow/data/spark_delta_utils.py -> mlflow/data/spark_delta_utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import os",
          "2: import logging",
          "4: from typing import Optional",
          "6: _logger = logging.getLogger(__name__)",
          "9: def _is_delta_table(table_name: str) -> bool:",
          "10:     \"\"\"",
          "11:     Checks if a Delta table exists with the specified table name.",
          "13:     :return: True if a Delta table exists with the specified table name. False otherwise.",
          "14:     :rtype: bool",
          "15:     \"\"\"",
          "16:     from pyspark.sql import SparkSession",
          "17:     from pyspark.sql.utils import AnalysisException",
          "19:     spark = SparkSession.builder.getOrCreate()",
          "21:     try:",
          "22:         # use DESCRIBE DETAIL to check if the table is a Delta table",
          "23:         # https://docs.databricks.com/delta/delta-utility.html#describe-detail",
          "24:         # format will be `delta` for delta tables",
          "25:         spark.sql(f\"DESCRIBE DETAIL {table_name}\").filter(\"format = 'delta'\").count()",
          "26:         return True",
          "27:     except AnalysisException:",
          "28:         return False",
          "31: def _is_delta_table_path(path: str) -> bool:",
          "32:     \"\"\"",
          "33:     Checks if the specified filesystem path is a Delta table.",
          "35:     :return: True if the specified path is a Delta table. False otherwise.",
          "36:     \"\"\"",
          "37:     if os.path.exists(path) and os.path.isdir(path) and \"_delta_log\" in os.listdir(path):",
          "38:         return True",
          "39:     from mlflow.utils.uri import dbfs_hdfs_uri_to_fuse_path",
          "41:     try:",
          "42:         dbfs_path = dbfs_hdfs_uri_to_fuse_path(path)",
          "43:         return os.path.exists(dbfs_path) and \"_delta_log\" in os.listdir(dbfs_path)",
          "44:     except Exception:",
          "45:         return False",
          "48: def _try_get_delta_table_latest_version_from_path(path: str) -> Optional[int]:",
          "49:     \"\"\"",
          "50:     Gets the latest version of the Delta table located at the specified path.",
          "52:     :param path: The path to the Delta table.",
          "53:     :return: The version of the Delta table, or None if it cannot be resolved (e.g. because the",
          "54:              Delta core library is not installed or the specified path does not refer to a Delta",
          "55:              table).",
          "56:     \"\"\"",
          "57:     from pyspark.sql import SparkSession",
          "59:     try:",
          "60:         spark = SparkSession.builder.getOrCreate()",
          "61:         j_delta_table = spark._jvm.io.delta.tables.DeltaTable.forPath(spark._jsparkSession, path)",
          "62:         return _get_delta_table_latest_version(j_delta_table)",
          "63:     except Exception as e:",
          "64:         _logger.warning(",
          "65:             \"Failed to obtain version information for Delta table at path '%s'. Version information\"",
          "66:             \" may not be included in the dataset source for MLflow Tracking. Exception: %s\",",
          "67:             path,",
          "68:             e,",
          "69:         )",
          "72: def _try_get_delta_table_latest_version_from_table_name(table_name: str) -> Optional[int]:",
          "73:     \"\"\"",
          "74:     Gets the latest version of the Delta table with the specified name.",
          "76:     :param table_name: The name of the Delta table.",
          "77:     :return: The version of the Delta table, or None if it cannot be resolved (e.g. because the",
          "78:              Delta core library is not installed or no such table exists).",
          "79:     \"\"\"",
          "80:     from pyspark.sql import SparkSession",
          "82:     try:",
          "83:         spark = SparkSession.builder.getOrCreate()",
          "84:         j_delta_table = spark._jvm.io.delta.tables.DeltaTable.forName(",
          "85:             spark._jsparkSession, table_name",
          "86:         )",
          "87:         return _get_delta_table_latest_version(j_delta_table)",
          "88:     except Exception as e:",
          "89:         _logger.warning(",
          "90:             \"Failed to obtain version information for Delta table with name '%s'. Version\"",
          "91:             \" information may not be included in the dataset source for MLflow Tracking.\"",
          "92:             \" Exception: %s\",",
          "93:             table_name,",
          "94:             e,",
          "95:         )",
          "98: def _get_delta_table_latest_version(j_delta_table) -> int:",
          "99:     \"\"\"",
          "100:     Obtains the latest version of the specified Delta table Java class.",
          "102:     :param delta_table: A Java DeltaTable class instance.",
          "103:     :return: The version of the Delta table.",
          "104:     \"\"\"",
          "105:     latest_commit_jdf = j_delta_table.history(1)",
          "106:     latest_commit_row = latest_commit_jdf.head()",
          "107:     version_field_idx = latest_commit_row.fieldIndex(\"version\")",
          "108:     return latest_commit_row.get(version_field_idx)",
          "",
          "---------------"
        ],
        "mlflow/data/tensorflow_dataset.py||mlflow/data/tensorflow_dataset.py": [
          "File: mlflow/data/tensorflow_dataset.py -> mlflow/data/tensorflow_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import logging",
          "3: from functools import cached_property",
          "4: from typing import Optional, Any, Dict, Union, Tuple",
          "6: import numpy as np",
          "8: from mlflow.data.dataset import Dataset",
          "9: from mlflow.data.dataset_source import DatasetSource",
          "10: from mlflow.data.digest_utils import compute_tensor_digest, compute_tensorflow_dataset_digest",
          "11: from mlflow.data.pyfunc_dataset_mixin import PyFuncConvertibleDatasetMixin, PyFuncInputsOutputs",
          "12: from mlflow.data.schema import TensorDatasetSchema",
          "13: from mlflow.exceptions import MlflowException",
          "14: from mlflow.models.evaluation.base import EvaluationDataset",
          "15: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE, INTERNAL_ERROR",
          "16: from mlflow.types.schema import Schema",
          "17: from mlflow.types.utils import _infer_schema",
          "18: from mlflow.utils.annotations import experimental",
          "20: _logger = logging.getLogger(__name__)",
          "23: @experimental",
          "24: class TensorFlowDataset(Dataset, PyFuncConvertibleDatasetMixin):",
          "25:     \"\"\"",
          "26:     Represents a TensorFlow dataset for use with MLflow Tracking.",
          "27:     \"\"\"",
          "29:     def __init__(",
          "30:         self,",
          "31:         features,",
          "32:         source: DatasetSource,",
          "33:         targets=None,",
          "34:         name: Optional[str] = None,",
          "35:         digest: Optional[str] = None,",
          "36:     ):",
          "37:         \"\"\"",
          "38:         :param features: A TensorFlow dataset or tensor of features.",
          "39:         :param source: The source of the TensorFlow dataset.",
          "40:         :param targets: A TensorFlow dataset or tensor of targets. Optional.",
          "41:         :param name: The name of the dataset. E.g. \"wiki_train\". If unspecified, a name is",
          "42:                      automatically generated.",
          "43:         :param digest: The digest (hash, fingerprint) of the dataset. If unspecified, a digest",
          "44:                        is automatically computed.",
          "45:         \"\"\"",
          "46:         import tensorflow as tf",
          "48:         if not isinstance(features, tf.data.Dataset) and not tf.is_tensor(features):",
          "49:             raise MlflowException(",
          "50:                 f\"'features' must be an instance of tf.data.Dataset or a TensorFlow Tensor.\"",
          "51:                 f\" Found: {type(features)}.\",",
          "52:                 INVALID_PARAMETER_VALUE,",
          "53:             )",
          "55:         if tf.is_tensor(features) and targets is not None and not tf.is_tensor(targets):",
          "56:             raise MlflowException(",
          "57:                 f\"If 'features' is a TensorFlow Tensor, then 'targets' must also be a TensorFlow\"",
          "58:                 f\" Tensor. Found: {type(targets)}.\",",
          "59:                 INVALID_PARAMETER_VALUE,",
          "60:             )",
          "62:         if (",
          "63:             isinstance(features, tf.data.Dataset)",
          "64:             and targets is not None",
          "65:             and not isinstance(targets, tf.data.Dataset)",
          "66:         ):",
          "67:             raise MlflowException(",
          "68:                 \"If 'features' is an instance of tf.data.Dataset, then 'targets' must also be an\"",
          "69:                 f\" instance of tf.data.Dataset. Found: {type(targets)}.\",",
          "70:                 INVALID_PARAMETER_VALUE,",
          "71:             )",
          "73:         self._features = features",
          "74:         self._targets = targets",
          "75:         super().__init__(source=source, name=name, digest=digest)",
          "77:     def _compute_digest(self) -> str:",
          "78:         \"\"\"",
          "79:         Computes a digest for the dataset. Called if the user doesn't supply",
          "80:         a digest when constructing the dataset.",
          "81:         \"\"\"",
          "82:         import tensorflow as tf",
          "84:         return (",
          "85:             compute_tensorflow_dataset_digest(self._features, self._targets)",
          "86:             if isinstance(self._features, tf.data.Dataset)",
          "87:             else compute_tensor_digest(self._features, self._targets)",
          "88:         )",
          "90:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "91:         \"\"\"",
          "92:         :param base_dict: A string dictionary of base information about the",
          "93:                           dataset, including: name, digest, source, and source",
          "94:                           type.",
          "95:         :return: A string dictionary containing the following fields: name,",
          "96:                  digest, source, source type, schema (optional), profile",
          "97:                  (optional).",
          "98:         \"\"\"",
          "99:         base_dict.update(",
          "100:             {",
          "101:                 \"schema\": json.dumps(self.schema.to_dict()) if self.schema else None,",
          "102:                 \"profile\": json.dumps(self.profile),",
          "103:             }",
          "104:         )",
          "105:         return base_dict",
          "107:     @property",
          "108:     def data(self):",
          "109:         \"\"\"",
          "110:         The underlying TensorFlow data.",
          "111:         \"\"\"",
          "112:         return self._features",
          "114:     @property",
          "115:     def source(self) -> DatasetSource:",
          "116:         \"\"\"",
          "117:         The source of the dataset.",
          "118:         \"\"\"",
          "119:         return self._source",
          "121:     @property",
          "122:     def targets(self):",
          "123:         \"\"\"",
          "124:         The targets of the dataset.",
          "125:         \"\"\"",
          "126:         return self._targets",
          "128:     @property",
          "129:     def profile(self) -> Optional[Any]:",
          "130:         \"\"\"",
          "131:         A profile of the dataset. May be None if no profile is available.",
          "132:         \"\"\"",
          "133:         import tensorflow as tf",
          "135:         profile = {",
          "136:             \"features_cardinality\": int(self._features.cardinality().numpy())",
          "137:             if isinstance(self._features, tf.data.Dataset)",
          "138:             else int(tf.size(self._features).numpy()),",
          "139:         }",
          "140:         if self._targets is not None:",
          "141:             profile.update(",
          "142:                 {",
          "143:                     \"targets_cardinality\": int(self._targets.cardinality().numpy())",
          "144:                     if isinstance(self._targets, tf.data.Dataset)",
          "145:                     else int(tf.size(self._targets).numpy()),",
          "146:                 }",
          "147:             )",
          "148:         return profile",
          "150:     @cached_property",
          "151:     def schema(self) -> Optional[TensorDatasetSchema]:",
          "152:         \"\"\"",
          "153:         An MLflow TensorSpec schema representing the tensor dataset",
          "154:         \"\"\"",
          "155:         try:",
          "156:             features_schema = TensorFlowDataset._get_tf_object_schema(self._features)",
          "157:             targets_schema = None",
          "158:             if self._targets is not None:",
          "159:                 targets_schema = TensorFlowDataset._get_tf_object_schema(self._targets)",
          "160:             return TensorDatasetSchema(features=features_schema, targets=targets_schema)",
          "161:         except Exception as e:",
          "162:             _logger.warning(\"Failed to infer schema for TensorFlow dataset. Exception: %s\", e)",
          "163:             return None",
          "165:     @staticmethod",
          "166:     def _get_tf_object_schema(tf_object) -> Schema:",
          "167:         import tensorflow as tf",
          "169:         if isinstance(tf_object, tf.data.Dataset):",
          "170:             numpy_data = next(tf_object.as_numpy_iterator())",
          "171:             if isinstance(numpy_data, np.ndarray):",
          "172:                 return _infer_schema(numpy_data)",
          "173:             elif isinstance(numpy_data, dict):",
          "174:                 return TensorFlowDataset._get_schema_from_tf_dataset_dict_numpy_data(numpy_data)",
          "175:             elif isinstance(numpy_data, tuple):",
          "176:                 return TensorFlowDataset._get_schema_from_tf_dataset_tuple_numpy_data(numpy_data)",
          "177:             else:",
          "178:                 raise MlflowException(",
          "179:                     f\"Failed to infer schema for tf.data.Dataset due to unrecognized numpy iterator\"",
          "180:                     f\" data type. Numpy iterator data types 'np.ndarray', 'dict', and 'tuple' are\"",
          "181:                     f\" supported. Found: {type(numpy_data)}.\",",
          "182:                     INVALID_PARAMETER_VALUE,",
          "183:                 )",
          "184:         elif tf.is_tensor(tf_object):",
          "185:             return _infer_schema(tf_object.numpy())",
          "186:         else:",
          "187:             raise MlflowException(",
          "188:                 f\"Cannot infer schema of an object that is not an instance of tf.data.Dataset or\"",
          "189:                 f\" a TensorFlow Tensor. Found: {type(tf_object)}\",",
          "190:                 INTERNAL_ERROR,",
          "191:             )",
          "193:     @staticmethod",
          "194:     def _get_schema_from_tf_dataset_dict_numpy_data(numpy_data: Dict[Any, Any]) -> Schema:",
          "195:         if not all(isinstance(data_element, np.ndarray) for data_element in numpy_data.values()):",
          "196:             raise MlflowException(",
          "197:                 \"Failed to infer schema for tf.data.Dataset. Schemas can only be inferred\"",
          "198:                 \" if the dataset consists of tensors. Ragged tensors, tensor arrays, and\"",
          "199:                 \" other types are not supported. Additionally, datasets with nested tensors\"",
          "200:                 \" are not supported.\",",
          "201:                 INVALID_PARAMETER_VALUE,",
          "202:             )",
          "203:         return _infer_schema(numpy_data)",
          "205:     @staticmethod",
          "206:     def _get_schema_from_tf_dataset_tuple_numpy_data(numpy_data: Tuple[Any]) -> Schema:",
          "207:         if not all(isinstance(data_element, np.ndarray) for data_element in numpy_data):",
          "208:             raise MlflowException(",
          "209:                 \"Failed to infer schema for tf.data.Dataset. Schemas can only be inferred\"",
          "210:                 \" if the dataset consists of tensors. Ragged tensors, tensor arrays, and\"",
          "211:                 \" other types are not supported. Additionally, datasets with nested tensors\"",
          "212:                 \" are not supported.\",",
          "213:                 INVALID_PARAMETER_VALUE,",
          "214:             )",
          "215:         return _infer_schema(",
          "216:             {",
          "217:                 # MLflow Schemas currently require each tensor to have a name, if more than",
          "218:                 # one tensor is defined. Accordingly, use the index as the name",
          "219:                 str(i): data_element",
          "220:                 for i, data_element in enumerate(numpy_data)",
          "221:             }",
          "222:         )",
          "224:     def to_pyfunc(self) -> PyFuncInputsOutputs:",
          "225:         \"\"\"",
          "226:         Converts the dataset to a collection of pyfunc inputs and outputs for model",
          "227:         evaluation. Required for use with mlflow.evaluate().",
          "228:         \"\"\"",
          "229:         return PyFuncInputsOutputs(self._features, self._targets)",
          "231:     def to_evaluation_dataset(self, path=None, feature_names=None) -> EvaluationDataset:",
          "232:         \"\"\"",
          "233:         Converts the dataset to an EvaluationDataset for model evaluation. Only supported if the",
          "234:         dataset is a Tensor. Required for use with mlflow.evaluate().",
          "235:         \"\"\"",
          "236:         import tensorflow as tf",
          "238:         # check that data and targets are Tensors",
          "239:         if not tf.is_tensor(self._features):",
          "240:             raise MlflowException(\"Data must be a Tensor to convert to an EvaluationDataset.\")",
          "241:         if self._targets is not None and not tf.is_tensor(self._targets):",
          "242:             raise MlflowException(\"Targets must be a Tensor to convert to an EvaluationDataset.\")",
          "243:         return EvaluationDataset(",
          "244:             data=self._features.numpy(),",
          "245:             targets=self._targets.numpy() if self._targets is not None else None,",
          "246:             path=path,",
          "247:             feature_names=feature_names,",
          "248:         )",
          "251: def from_tensorflow(",
          "252:     features,",
          "253:     source: Optional[Union[str, DatasetSource]] = None,",
          "254:     targets=None,",
          "255:     name: Optional[str] = None,",
          "256:     digest: Optional[str] = None,",
          "257: ) -> TensorFlowDataset:",
          "258:     \"\"\"",
          "259:     Constructs a TensorFlowDataset object from TensorFlow data, optional targets, and source.",
          "260:     If the source is path like, then this will construct a DatasetSource object from the source",
          "261:     path. Otherwise, the source is assumed to be a DatasetSource object.",
          "263:     :param features: A TensorFlow dataset or tensor of features.",
          "264:     :param source: The source from which the data was derived, e.g. a filesystem",
          "265:                     path, an S3 URI, an HTTPS URL, a delta table name with version, or",
          "266:                     spark table etc. If source is not a path like string,",
          "267:                     pass in a DatasetSource object directly. If no source is specified,",
          "268:                     a CodeDatasetSource is used, which will source information from the run",
          "269:                     context.",
          "270:     :param targets: A TensorFlow dataset or tensor of targets. Optional.",
          "271:     :param name: The name of the dataset. If unspecified, a name is generated.",
          "272:     :param digest: A dataset digest (hash). If unspecified, a digest is computed",
          "273:                     automatically.",
          "274:     \"\"\"",
          "275:     from mlflow.data.code_dataset_source import CodeDatasetSource",
          "276:     from mlflow.data.dataset_source_registry import resolve_dataset_source",
          "277:     from mlflow.tracking.context import registry",
          "279:     if source is not None:",
          "280:         if isinstance(source, DatasetSource):",
          "281:             resolved_source = source",
          "282:         else:",
          "283:             resolved_source = resolve_dataset_source(",
          "284:                 source,",
          "285:             )",
          "286:     else:",
          "287:         context_tags = registry.resolve_tags()",
          "288:         resolved_source = CodeDatasetSource(tags=context_tags)",
          "289:     return TensorFlowDataset(",
          "290:         features=features, source=resolved_source, targets=targets, name=name, digest=digest",
          "291:     )",
          "",
          "---------------"
        ],
        "mlflow/entities/__init__.py||mlflow/entities/__init__.py": [
          "File: mlflow/entities/__init__.py -> mlflow/entities/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: from mlflow.entities.run_tag import RunTag",
          "17: from mlflow.entities.source_type import SourceType",
          "18: from mlflow.entities.view_type import ViewType",
          "20: __all__ = [",
          "21:     \"Experiment\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: from mlflow.entities.dataset import Dataset",
          "20: from mlflow.entities.input_tag import InputTag",
          "21: from mlflow.entities.dataset_input import DatasetInput",
          "22: from mlflow.entities.run_inputs import RunInputs",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     \"SourceType\",",
          "32:     \"ViewType\",",
          "33:     \"LifecycleStage\",",
          "34: ]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:     \"Dataset\",",
          "39:     \"InputTag\",",
          "40:     \"DatasetInput\",",
          "41:     \"RunInputs\",",
          "",
          "---------------"
        ],
        "mlflow/entities/dataset.py||mlflow/entities/dataset.py": [
          "File: mlflow/entities/dataset.py -> mlflow/entities/dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities._mlflow_object import _MLflowObject",
          "2: from mlflow.protos.service_pb2 import Dataset as ProtoDataset",
          "3: from mlflow.utils.annotations import experimental",
          "5: from typing import Optional",
          "8: @experimental",
          "9: class Dataset(_MLflowObject):",
          "10:     \"\"\"Dataset object associated with an experiment.\"\"\"",
          "12:     def __init__(",
          "13:         self,",
          "14:         name: str,",
          "15:         digest: str,",
          "16:         source_type: str,",
          "17:         source: str,",
          "18:         schema: Optional[str] = None,",
          "19:         profile: Optional[str] = None,",
          "20:     ) -> None:",
          "21:         self._name = name",
          "22:         self._digest = digest",
          "23:         self._source_type = source_type",
          "24:         self._source = source",
          "25:         self._schema = schema",
          "26:         self._profile = profile",
          "28:     def __eq__(self, other: _MLflowObject) -> bool:",
          "29:         if type(other) is type(self):",
          "30:             return self.__dict__ == other.__dict__",
          "31:         return False",
          "33:     @property",
          "34:     def name(self) -> str:",
          "35:         \"\"\"String name of the dataset.\"\"\"",
          "36:         return self._name",
          "38:     @property",
          "39:     def digest(self) -> str:",
          "40:         \"\"\"String digest of the dataset.\"\"\"",
          "41:         return self._digest",
          "43:     @property",
          "44:     def source_type(self) -> str:",
          "45:         \"\"\"String source_type of the dataset.\"\"\"",
          "46:         return self._source_type",
          "48:     @property",
          "49:     def source(self) -> str:",
          "50:         \"\"\"String source of the dataset.\"\"\"",
          "51:         return self._source",
          "53:     @property",
          "54:     def schema(self) -> str:",
          "55:         \"\"\"String schema of the dataset.\"\"\"",
          "56:         return self._schema",
          "58:     @property",
          "59:     def profile(self) -> str:",
          "60:         \"\"\"String profile of the dataset.\"\"\"",
          "61:         return self._profile",
          "63:     def to_proto(self):",
          "64:         dataset = ProtoDataset()",
          "65:         dataset.name = self.name",
          "66:         dataset.digest = self.digest",
          "67:         dataset.source_type = self.source_type",
          "68:         dataset.source = self.source",
          "69:         if self.schema:",
          "70:             dataset.schema = self.schema",
          "71:         if self.profile:",
          "72:             dataset.profile = self.profile",
          "73:         return dataset",
          "75:     @classmethod",
          "76:     def from_proto(cls, proto):",
          "77:         return cls(",
          "78:             proto.name, proto.digest, proto.source_type, proto.source, proto.schema, proto.profile",
          "79:         )",
          "",
          "---------------"
        ],
        "mlflow/entities/dataset_input.py||mlflow/entities/dataset_input.py": [
          "File: mlflow/entities/dataset_input.py -> mlflow/entities/dataset_input.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities._mlflow_object import _MLflowObject",
          "2: from mlflow.protos.service_pb2 import DatasetInput as ProtoDatasetInput",
          "3: from mlflow.entities.dataset import Dataset",
          "4: from mlflow.entities.input_tag import InputTag",
          "5: from mlflow.utils.annotations import experimental",
          "7: from typing import Optional, List",
          "10: @experimental",
          "11: class DatasetInput(_MLflowObject):",
          "12:     \"\"\"DatasetInput object associated with an experiment.\"\"\"",
          "14:     def __init__(self, dataset: Dataset, tags: Optional[List[InputTag]] = None) -> None:",
          "15:         self._dataset = dataset",
          "16:         self._tags = tags or []",
          "18:     def __eq__(self, other: _MLflowObject) -> bool:",
          "19:         if type(other) is type(self):",
          "20:             return self.__dict__ == other.__dict__",
          "21:         return False",
          "23:     def _add_tag(self, tag: InputTag) -> None:",
          "24:         self._tags.append(tag)",
          "26:     @property",
          "27:     def tags(self) -> List[InputTag]:",
          "28:         \"\"\"Array of input tags.\"\"\"",
          "29:         return self._tags",
          "31:     @property",
          "32:     def dataset(self) -> Dataset:",
          "33:         \"\"\"Dataset.\"\"\"",
          "34:         return self._dataset",
          "36:     def to_proto(self):",
          "37:         dataset_input = ProtoDatasetInput()",
          "38:         dataset_input.tags.extend([tag.to_proto() for tag in self.tags])",
          "39:         dataset_input.dataset.MergeFrom(self.dataset.to_proto())",
          "40:         return dataset_input",
          "42:     @classmethod",
          "43:     def from_proto(cls, proto):",
          "44:         dataset_input = cls(Dataset.from_proto(proto.dataset))",
          "45:         for input_tag in proto.tags:",
          "46:             dataset_input._add_tag(InputTag.from_proto(input_tag))",
          "47:         return dataset_input",
          "",
          "---------------"
        ],
        "mlflow/entities/input_tag.py||mlflow/entities/input_tag.py": [
          "File: mlflow/entities/input_tag.py -> mlflow/entities/input_tag.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities._mlflow_object import _MLflowObject",
          "2: from mlflow.protos.service_pb2 import InputTag as ProtoInputTag",
          "3: from mlflow.utils.annotations import experimental",
          "6: @experimental",
          "7: class InputTag(_MLflowObject):",
          "8:     \"\"\"Input tag object associated with a dataset.\"\"\"",
          "10:     def __init__(self, key: str, value: str) -> None:",
          "11:         self._key = key",
          "12:         self._value = value",
          "14:     def __eq__(self, other: _MLflowObject) -> bool:",
          "15:         if type(other) is type(self):",
          "16:             return self.__dict__ == other.__dict__",
          "17:         return False",
          "19:     @property",
          "20:     def key(self) -> str:",
          "21:         \"\"\"String name of the input tag.\"\"\"",
          "22:         return self._key",
          "24:     @property",
          "25:     def value(self) -> str:",
          "26:         \"\"\"String value of the input tag.\"\"\"",
          "27:         return self._value",
          "29:     def to_proto(self):",
          "30:         tag = ProtoInputTag()",
          "31:         tag.key = self.key",
          "32:         tag.value = self.value",
          "33:         return tag",
          "35:     @classmethod",
          "36:     def from_proto(cls, proto):",
          "37:         return cls(proto.key, proto.value)",
          "",
          "---------------"
        ],
        "mlflow/entities/run.py||mlflow/entities/run.py": [
          "File: mlflow/entities/run.py -> mlflow/entities/run.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from mlflow.entities._mlflow_object import _MLflowObject",
          "2: from mlflow.entities.run_data import RunData",
          "3: from mlflow.entities.run_info import RunInfo",
          "4: from mlflow.exceptions import MlflowException",
          "5: from mlflow.protos.service_pb2 import Run as ProtoRun",
          "8: class Run(_MLflowObject):",
          "9:     \"\"\"",
          "10:     Run object.",
          "11:     \"\"\"",
          "14:         if run_info is None:",
          "15:             raise MlflowException(\"run_info cannot be None\")",
          "16:         self._info = run_info",
          "17:         self._data = run_data",
          "19:     @property",
          "21:         \"\"\"",
          "22:         The run metadata, such as the run id, start time, and status.",
          "",
          "[Removed Lines]",
          "13:     def __init__(self, run_info, run_data):",
          "20:     def info(self):",
          "",
          "[Added Lines]",
          "4: from mlflow.entities.run_inputs import RunInputs",
          "8: from typing import Any, Dict, Optional",
          "16:     def __init__(",
          "17:         self, run_info: RunInfo, run_data: RunData, run_inputs: Optional[RunInputs] = None",
          "18:     ) -> None:",
          "23:         self._inputs = run_inputs",
          "26:     def info(self) -> RunInfo:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         return self._info",
          "28:     @property",
          "30:         \"\"\"",
          "31:         The run data, including metrics, parameters, and tags.",
          "",
          "[Removed Lines]",
          "29:     def data(self):",
          "",
          "[Added Lines]",
          "35:     def data(self) -> RunData:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:         \"\"\"",
          "35:         return self._data",
          "37:     def to_proto(self):",
          "38:         run = ProtoRun()",
          "39:         run.info.MergeFrom(self.info.to_proto())",
          "40:         if self.data:",
          "41:             run.data.MergeFrom(self.data.to_proto())",
          "42:         return run",
          "44:     @classmethod",
          "45:     def from_proto(cls, proto):",
          "49:         run_dict = {",
          "50:             \"info\": dict(self.info),",
          "51:         }",
          "52:         if self.data:",
          "53:             run_dict[\"data\"] = self.data.to_dictionary()",
          "54:         return run_dict",
          "",
          "[Removed Lines]",
          "46:         return cls(RunInfo.from_proto(proto.info), RunData.from_proto(proto.data))",
          "48:     def to_dictionary(self):",
          "",
          "[Added Lines]",
          "43:     @property",
          "44:     def inputs(self) -> RunInputs:",
          "45:         \"\"\"",
          "46:         The run inputs, including dataset inputs",
          "48:         :rtype: :py:class:`mlflow.entities.RunData`",
          "49:         \"\"\"",
          "50:         return self._inputs",
          "57:         if self.inputs:",
          "58:             run.inputs.MergeFrom(self.inputs.to_proto())",
          "63:         return cls(",
          "64:             RunInfo.from_proto(proto.info),",
          "65:             RunData.from_proto(proto.data),",
          "66:             RunInputs.from_proto(proto.inputs),",
          "67:         )",
          "69:     def to_dictionary(self) -> Dict[Any, Any]:",
          "75:         if self.inputs:",
          "76:             run_dict[\"inputs\"] = self.inputs.to_dictionary()",
          "",
          "---------------"
        ],
        "mlflow/entities/run_inputs.py||mlflow/entities/run_inputs.py": [
          "File: mlflow/entities/run_inputs.py -> mlflow/entities/run_inputs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities._mlflow_object import _MLflowObject",
          "2: from mlflow.protos.service_pb2 import RunInputs as ProtoRunInputs",
          "3: from mlflow.entities.dataset_input import DatasetInput",
          "5: from typing import List, Dict, Any",
          "8: class RunInputs(_MLflowObject):",
          "9:     \"\"\"RunInputs object.\"\"\"",
          "11:     def __init__(self, dataset_inputs: List[DatasetInput]) -> None:",
          "12:         self._dataset_inputs = dataset_inputs",
          "14:     def __eq__(self, other: _MLflowObject) -> bool:",
          "15:         if type(other) is type(self):",
          "16:             return self.__dict__ == other.__dict__",
          "17:         return False",
          "19:     @property",
          "20:     def dataset_inputs(self) -> List[DatasetInput]:",
          "21:         \"\"\"Array of dataset inputs.\"\"\"",
          "22:         return self._dataset_inputs",
          "24:     def to_proto(self):",
          "25:         run_inputs = ProtoRunInputs()",
          "26:         run_inputs.dataset_inputs.extend(",
          "27:             [dataset_input.to_proto() for dataset_input in self.dataset_inputs]",
          "28:         )",
          "29:         return run_inputs",
          "31:     def to_dictionary(self) -> Dict[Any, Any]:",
          "32:         return {",
          "33:             \"dataset_inputs\": self.dataset_inputs,",
          "34:         }",
          "36:     @classmethod",
          "37:     def from_proto(cls, proto):",
          "38:         dataset_inputs = [",
          "39:             DatasetInput.from_proto(dataset_input) for dataset_input in proto.dataset_inputs",
          "40:         ]",
          "41:         return cls(dataset_inputs)",
          "",
          "---------------"
        ],
        "mlflow/fastai/__init__.py||mlflow/fastai/__init__.py": [
          "File: mlflow/fastai/__init__.py -> mlflow/fastai/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "422: @autologging_integration(FLAVOR_NAME)",
          "423: def autolog(",
          "424:     log_models=True,",
          "425:     disable=False,",
          "426:     exclusive=False,",
          "427:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "441:     :param log_models: If ``True``, trained models are logged as MLflow model artifacts.",
          "442:                        If ``False``, trained models are not logged.",
          "443:     :param disable: If ``True``, disables the Fastai autologging integration. If ``False``,",
          "444:                     enables the Fastai autologging integration.",
          "445:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "444:     :param log_datasets: If ``True``, dataset information is logged to MLflow Tracking.",
          "445:                          If ``False``, dataset information is not logged.",
          "",
          "---------------"
        ],
        "mlflow/gluon/__init__.py||mlflow/gluon/__init__.py": [
          "File: mlflow/gluon/__init__.py -> mlflow/gluon/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "396: @autologging_integration(FLAVOR_NAME)",
          "397: def autolog(",
          "398:     log_models=True,",
          "399:     disable=False,",
          "400:     exclusive=False,",
          "401:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "399:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "411:     :param log_models: If ``True``, trained models are logged as MLflow model artifacts.",
          "412:                        If ``False``, trained models are not logged.",
          "413:     :param disable: If ``True``, disables the MXNet Gluon autologging integration. If ``False``,",
          "414:                     enables the MXNet Gluon autologging integration.",
          "415:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:     :param log_datasets: If ``True``, dataset information is logged to MLflow Tracking.",
          "415:                          If ``False``, dataset information is not logged.",
          "",
          "---------------"
        ],
        "mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java||mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java": [
          "File: mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java -> mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2491:     org.mlflow.api.proto.Service.RunDataOrBuilder getDataOrBuilder();",
          "2492:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2501:     boolean hasInputs();",
          "2510:     org.mlflow.api.proto.Service.RunInputs getInputs();",
          "2518:     org.mlflow.api.proto.Service.RunInputsOrBuilder getInputsOrBuilder();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2566:               bitField0_ |= 0x00000002;",
          "2567:               break;",
          "2568:             }",
          "2569:             default: {",
          "2570:               if (!parseUnknownField(",
          "2571:                   input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2596:             case 26: {",
          "2597:               org.mlflow.api.proto.Service.RunInputs.Builder subBuilder = null;",
          "2598:               if (((bitField0_ & 0x00000004) != 0)) {",
          "2599:                 subBuilder = inputs_.toBuilder();",
          "2600:               }",
          "2601:               inputs_ = input.readMessage(org.mlflow.api.proto.Service.RunInputs.PARSER, extensionRegistry);",
          "2602:               if (subBuilder != null) {",
          "2603:                 subBuilder.mergeFrom(inputs_);",
          "2604:                 inputs_ = subBuilder.buildPartial();",
          "2605:               }",
          "2606:               bitField0_ |= 0x00000004;",
          "2607:               break;",
          "2608:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2675:       return data_ == null ? org.mlflow.api.proto.Service.RunData.getDefaultInstance() : data_;",
          "2676:     }",
          "2678:     private byte memoizedIsInitialized = -1;",
          "2679:     @java.lang.Override",
          "2680:     public final boolean isInitialized() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2718:     public static final int INPUTS_FIELD_NUMBER = 3;",
          "2719:     private org.mlflow.api.proto.Service.RunInputs inputs_;",
          "2728:     @java.lang.Override",
          "2729:     public boolean hasInputs() {",
          "2730:       return ((bitField0_ & 0x00000004) != 0);",
          "2731:     }",
          "2740:     @java.lang.Override",
          "2741:     public org.mlflow.api.proto.Service.RunInputs getInputs() {",
          "2742:       return inputs_ == null ? org.mlflow.api.proto.Service.RunInputs.getDefaultInstance() : inputs_;",
          "2743:     }",
          "2751:     @java.lang.Override",
          "2752:     public org.mlflow.api.proto.Service.RunInputsOrBuilder getInputsOrBuilder() {",
          "2753:       return inputs_ == null ? org.mlflow.api.proto.Service.RunInputs.getDefaultInstance() : inputs_;",
          "2754:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2695:       if (((bitField0_ & 0x00000002) != 0)) {",
          "2696:         output.writeMessage(2, getData());",
          "2697:       }",
          "2698:       unknownFields.writeTo(output);",
          "2699:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2776:       if (((bitField0_ & 0x00000004) != 0)) {",
          "2777:         output.writeMessage(3, getInputs());",
          "2778:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2712:         size += com.google.protobuf.CodedOutputStream",
          "2713:           .computeMessageSize(2, getData());",
          "2714:       }",
          "2715:       size += unknownFields.getSerializedSize();",
          "2716:       memoizedSize = size;",
          "2717:       return size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2796:       if (((bitField0_ & 0x00000004) != 0)) {",
          "2797:         size += com.google.protobuf.CodedOutputStream",
          "2798:           .computeMessageSize(3, getInputs());",
          "2799:       }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2737:         if (!getData()",
          "2738:             .equals(other.getData())) return false;",
          "2739:       }",
          "2740:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "2741:       return true;",
          "2742:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2825:       if (hasInputs() != other.hasInputs()) return false;",
          "2826:       if (hasInputs()) {",
          "2827:         if (!getInputs()",
          "2828:             .equals(other.getInputs())) return false;",
          "2829:       }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2756:         hash = (37 * hash) + DATA_FIELD_NUMBER;",
          "2757:         hash = (53 * hash) + getData().hashCode();",
          "2758:       }",
          "2759:       hash = (29 * hash) + unknownFields.hashCode();",
          "2760:       memoizedHashCode = hash;",
          "2761:       return hash;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2849:       if (hasInputs()) {",
          "2850:         hash = (37 * hash) + INPUTS_FIELD_NUMBER;",
          "2851:         hash = (53 * hash) + getInputs().hashCode();",
          "2852:       }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2890:                 .alwaysUseFieldBuilders) {",
          "2891:           getInfoFieldBuilder();",
          "2892:           getDataFieldBuilder();",
          "2893:         }",
          "2894:       }",
          "2895:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2987:           getInputsFieldBuilder();",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2907:           dataBuilder_.clear();",
          "2908:         }",
          "2909:         bitField0_ = (bitField0_ & ~0x00000002);",
          "2910:         return this;",
          "2911:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3005:         if (inputsBuilder_ == null) {",
          "3006:           inputs_ = null;",
          "3007:         } else {",
          "3008:           inputsBuilder_.clear();",
          "3009:         }",
          "3010:         bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2951:           }",
          "2952:           to_bitField0_ |= 0x00000002;",
          "2953:         }",
          "2954:         result.bitField0_ = to_bitField0_;",
          "2955:         onBuilt();",
          "2956:         return result;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3055:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "3056:           if (inputsBuilder_ == null) {",
          "3057:             result.inputs_ = inputs_;",
          "3058:           } else {",
          "3059:             result.inputs_ = inputsBuilder_.build();",
          "3060:           }",
          "3061:           to_bitField0_ |= 0x00000004;",
          "3062:         }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3006:         if (other.hasData()) {",
          "3007:           mergeData(other.getData());",
          "3008:         }",
          "3009:         this.mergeUnknownFields(other.unknownFields);",
          "3010:         onChanged();",
          "3011:         return this;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3118:         if (other.hasInputs()) {",
          "3119:           mergeInputs(other.getInputs());",
          "3120:         }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3347:         }",
          "3348:         return dataBuilder_;",
          "3349:       }",
          "3350:       @java.lang.Override",
          "3351:       public final Builder setUnknownFields(",
          "3352:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3463:       private org.mlflow.api.proto.Service.RunInputs inputs_;",
          "3464:       private com.google.protobuf.SingleFieldBuilderV3<",
          "3465:           org.mlflow.api.proto.Service.RunInputs, org.mlflow.api.proto.Service.RunInputs.Builder, org.mlflow.api.proto.Service.RunInputsOrBuilder> inputsBuilder_;",
          "3474:       public boolean hasInputs() {",
          "3475:         return ((bitField0_ & 0x00000004) != 0);",
          "3476:       }",
          "3485:       public org.mlflow.api.proto.Service.RunInputs getInputs() {",
          "3486:         if (inputsBuilder_ == null) {",
          "3487:           return inputs_ == null ? org.mlflow.api.proto.Service.RunInputs.getDefaultInstance() : inputs_;",
          "3488:         } else {",
          "3489:           return inputsBuilder_.getMessage();",
          "3490:         }",
          "3491:       }",
          "3499:       public Builder setInputs(org.mlflow.api.proto.Service.RunInputs value) {",
          "3500:         if (inputsBuilder_ == null) {",
          "3501:           if (value == null) {",
          "3502:             throw new NullPointerException();",
          "3503:           }",
          "3504:           inputs_ = value;",
          "3505:           onChanged();",
          "3506:         } else {",
          "3507:           inputsBuilder_.setMessage(value);",
          "3508:         }",
          "3509:         bitField0_ |= 0x00000004;",
          "3510:         return this;",
          "3511:       }",
          "3519:       public Builder setInputs(",
          "3520:           org.mlflow.api.proto.Service.RunInputs.Builder builderForValue) {",
          "3521:         if (inputsBuilder_ == null) {",
          "3522:           inputs_ = builderForValue.build();",
          "3523:           onChanged();",
          "3524:         } else {",
          "3525:           inputsBuilder_.setMessage(builderForValue.build());",
          "3526:         }",
          "3527:         bitField0_ |= 0x00000004;",
          "3528:         return this;",
          "3529:       }",
          "3537:       public Builder mergeInputs(org.mlflow.api.proto.Service.RunInputs value) {",
          "3538:         if (inputsBuilder_ == null) {",
          "3539:           if (((bitField0_ & 0x00000004) != 0) &&",
          "3540:               inputs_ != null &&",
          "3541:               inputs_ != org.mlflow.api.proto.Service.RunInputs.getDefaultInstance()) {",
          "3542:             inputs_ =",
          "3543:               org.mlflow.api.proto.Service.RunInputs.newBuilder(inputs_).mergeFrom(value).buildPartial();",
          "3544:           } else {",
          "3545:             inputs_ = value;",
          "3546:           }",
          "3547:           onChanged();",
          "3548:         } else {",
          "3549:           inputsBuilder_.mergeFrom(value);",
          "3550:         }",
          "3551:         bitField0_ |= 0x00000004;",
          "3552:         return this;",
          "3553:       }",
          "3561:       public Builder clearInputs() {",
          "3562:         if (inputsBuilder_ == null) {",
          "3563:           inputs_ = null;",
          "3564:           onChanged();",
          "3565:         } else {",
          "3566:           inputsBuilder_.clear();",
          "3567:         }",
          "3568:         bitField0_ = (bitField0_ & ~0x00000004);",
          "3569:         return this;",
          "3570:       }",
          "3578:       public org.mlflow.api.proto.Service.RunInputs.Builder getInputsBuilder() {",
          "3579:         bitField0_ |= 0x00000004;",
          "3580:         onChanged();",
          "3581:         return getInputsFieldBuilder().getBuilder();",
          "3582:       }",
          "3590:       public org.mlflow.api.proto.Service.RunInputsOrBuilder getInputsOrBuilder() {",
          "3591:         if (inputsBuilder_ != null) {",
          "3592:           return inputsBuilder_.getMessageOrBuilder();",
          "3593:         } else {",
          "3594:           return inputs_ == null ?",
          "3595:               org.mlflow.api.proto.Service.RunInputs.getDefaultInstance() : inputs_;",
          "3596:         }",
          "3597:       }",
          "3605:       private com.google.protobuf.SingleFieldBuilderV3<",
          "3606:           org.mlflow.api.proto.Service.RunInputs, org.mlflow.api.proto.Service.RunInputs.Builder, org.mlflow.api.proto.Service.RunInputsOrBuilder>",
          "3607:           getInputsFieldBuilder() {",
          "3608:         if (inputsBuilder_ == null) {",
          "3609:           inputsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "3610:               org.mlflow.api.proto.Service.RunInputs, org.mlflow.api.proto.Service.RunInputs.Builder, org.mlflow.api.proto.Service.RunInputsOrBuilder>(",
          "3611:                   getInputs(),",
          "3612:                   getParentForChildren(),",
          "3613:                   isClean());",
          "3614:           inputs_ = null;",
          "3615:         }",
          "3616:         return inputsBuilder_;",
          "3617:       }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "5282:   }",
          "5286:       com.google.protobuf.MessageOrBuilder {",
          "5345:   }",
          "5354:       com.google.protobuf.GeneratedMessageV3 implements",
          "5357:   private static final long serialVersionUID = 0L;",
          "5360:       super(builder);",
          "5361:     }",
          "5365:     }",
          "5367:     @java.lang.Override",
          "5368:     @SuppressWarnings({\"unused\"})",
          "5369:     protected java.lang.Object newInstance(",
          "5370:         UnusedPrivateParameter unused) {",
          "5372:     }",
          "5374:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "5284:   public interface RunTagOrBuilder extends",
          "5296:     boolean hasKey();",
          "5305:     java.lang.String getKey();",
          "5314:     com.google.protobuf.ByteString",
          "5315:         getKeyBytes();",
          "5325:     boolean hasValue();",
          "5334:     java.lang.String getValue();",
          "5343:     com.google.protobuf.ByteString",
          "5344:         getValueBytes();",
          "5353:   public static final class RunTag extends",
          "5356:       RunTagOrBuilder {",
          "5359:     private RunTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "5362:     private RunTag() {",
          "5363:       key_ = \"\";",
          "5364:       value_ = \"\";",
          "5371:       return new RunTag();",
          "",
          "[Added Lines]",
          "5552:   public interface RunInputsOrBuilder extends",
          "5563:     java.util.List<org.mlflow.api.proto.Service.DatasetInput>",
          "5564:         getDatasetInputsList();",
          "5572:     org.mlflow.api.proto.Service.DatasetInput getDatasetInputs(int index);",
          "5580:     int getDatasetInputsCount();",
          "5588:     java.util.List<? extends org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "5589:         getDatasetInputsOrBuilderList();",
          "5597:     org.mlflow.api.proto.Service.DatasetInputOrBuilder getDatasetInputsOrBuilder(",
          "5598:         int index);",
          "5609:   public static final class RunInputs extends",
          "5612:       RunInputsOrBuilder {",
          "5615:     private RunInputs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "5618:     private RunInputs() {",
          "5619:       datasetInputs_ = java.util.Collections.emptyList();",
          "5626:       return new RunInputs();",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5376:     getUnknownFields() {",
          "5377:       return this.unknownFields;",
          "5378:     }",
          "5380:         com.google.protobuf.CodedInputStream input,",
          "5381:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5382:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "5379:     private RunTag(",
          "",
          "[Added Lines]",
          "5634:     private RunInputs(",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "5396:               done = true;",
          "5397:               break;",
          "5398:             case 10: {",
          "5408:               break;",
          "5409:             }",
          "5410:             default: {",
          "",
          "[Removed Lines]",
          "5399:               com.google.protobuf.ByteString bs = input.readBytes();",
          "5400:               bitField0_ |= 0x00000001;",
          "5401:               key_ = bs;",
          "5402:               break;",
          "5403:             }",
          "5404:             case 18: {",
          "5405:               com.google.protobuf.ByteString bs = input.readBytes();",
          "5406:               bitField0_ |= 0x00000002;",
          "5407:               value_ = bs;",
          "",
          "[Added Lines]",
          "5654:               if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "5655:                 datasetInputs_ = new java.util.ArrayList<org.mlflow.api.proto.Service.DatasetInput>();",
          "5656:                 mutable_bitField0_ |= 0x00000001;",
          "5657:               }",
          "5658:               datasetInputs_.add(",
          "5659:                   input.readMessage(org.mlflow.api.proto.Service.DatasetInput.PARSER, extensionRegistry));",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "5422:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "5423:             e).setUnfinishedMessage(this);",
          "5424:       } finally {",
          "5425:         this.unknownFields = unknownFields.build();",
          "5426:         makeExtensionsImmutable();",
          "5427:       }",
          "5428:     }",
          "5429:     public static final com.google.protobuf.Descriptors.Descriptor",
          "5430:         getDescriptor() {",
          "5432:     }",
          "5434:     @java.lang.Override",
          "5435:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "5436:         internalGetFieldAccessorTable() {",
          "5438:           .ensureFieldAccessorsInitialized(",
          "5440:     }",
          "5453:     @java.lang.Override",
          "5456:     }",
          "5465:     @java.lang.Override",
          "5479:     }",
          "5488:     @java.lang.Override",
          "5501:     }",
          "5513:     @java.lang.Override",
          "5516:     }",
          "5525:     @java.lang.Override",
          "5561:     }",
          "5563:     private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "5431:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_descriptor;",
          "5437:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_fieldAccessorTable",
          "5439:               org.mlflow.api.proto.Service.RunTag.class, org.mlflow.api.proto.Service.RunTag.Builder.class);",
          "5442:     private int bitField0_;",
          "5443:     public static final int KEY_FIELD_NUMBER = 1;",
          "5444:     private volatile java.lang.Object key_;",
          "5454:     public boolean hasKey() {",
          "5455:       return ((bitField0_ & 0x00000001) != 0);",
          "5466:     public java.lang.String getKey() {",
          "5467:       java.lang.Object ref = key_;",
          "5468:       if (ref instanceof java.lang.String) {",
          "5469:         return (java.lang.String) ref;",
          "5470:       } else {",
          "5471:         com.google.protobuf.ByteString bs =",
          "5472:             (com.google.protobuf.ByteString) ref;",
          "5473:         java.lang.String s = bs.toStringUtf8();",
          "5474:         if (bs.isValidUtf8()) {",
          "5475:           key_ = s;",
          "5476:         }",
          "5477:         return s;",
          "5478:       }",
          "5489:     public com.google.protobuf.ByteString",
          "5490:         getKeyBytes() {",
          "5491:       java.lang.Object ref = key_;",
          "5492:       if (ref instanceof java.lang.String) {",
          "5493:         com.google.protobuf.ByteString b =",
          "5494:             com.google.protobuf.ByteString.copyFromUtf8(",
          "5495:                 (java.lang.String) ref);",
          "5496:         key_ = b;",
          "5497:         return b;",
          "5498:       } else {",
          "5499:         return (com.google.protobuf.ByteString) ref;",
          "5500:       }",
          "5503:     public static final int VALUE_FIELD_NUMBER = 2;",
          "5504:     private volatile java.lang.Object value_;",
          "5514:     public boolean hasValue() {",
          "5515:       return ((bitField0_ & 0x00000002) != 0);",
          "5526:     public java.lang.String getValue() {",
          "5527:       java.lang.Object ref = value_;",
          "5528:       if (ref instanceof java.lang.String) {",
          "5529:         return (java.lang.String) ref;",
          "5530:       } else {",
          "5531:         com.google.protobuf.ByteString bs =",
          "5532:             (com.google.protobuf.ByteString) ref;",
          "5533:         java.lang.String s = bs.toStringUtf8();",
          "5534:         if (bs.isValidUtf8()) {",
          "5535:           value_ = s;",
          "5536:         }",
          "5537:         return s;",
          "5538:       }",
          "5539:     }",
          "5548:     @java.lang.Override",
          "5549:     public com.google.protobuf.ByteString",
          "5550:         getValueBytes() {",
          "5551:       java.lang.Object ref = value_;",
          "5552:       if (ref instanceof java.lang.String) {",
          "5553:         com.google.protobuf.ByteString b =",
          "5554:             com.google.protobuf.ByteString.copyFromUtf8(",
          "5555:                 (java.lang.String) ref);",
          "5556:         value_ = b;",
          "5557:         return b;",
          "5558:       } else {",
          "5559:         return (com.google.protobuf.ByteString) ref;",
          "5560:       }",
          "",
          "[Added Lines]",
          "5677:         if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "5678:           datasetInputs_ = java.util.Collections.unmodifiableList(datasetInputs_);",
          "5679:         }",
          "5686:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunInputs_descriptor;",
          "5692:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunInputs_fieldAccessorTable",
          "5694:               org.mlflow.api.proto.Service.RunInputs.class, org.mlflow.api.proto.Service.RunInputs.Builder.class);",
          "5697:     public static final int DATASET_INPUTS_FIELD_NUMBER = 1;",
          "5698:     private java.util.List<org.mlflow.api.proto.Service.DatasetInput> datasetInputs_;",
          "5707:     public java.util.List<org.mlflow.api.proto.Service.DatasetInput> getDatasetInputsList() {",
          "5708:       return datasetInputs_;",
          "5718:     public java.util.List<? extends org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "5719:         getDatasetInputsOrBuilderList() {",
          "5720:       return datasetInputs_;",
          "5730:     public int getDatasetInputsCount() {",
          "5731:       return datasetInputs_.size();",
          "5741:     public org.mlflow.api.proto.Service.DatasetInput getDatasetInputs(int index) {",
          "5742:       return datasetInputs_.get(index);",
          "5752:     public org.mlflow.api.proto.Service.DatasetInputOrBuilder getDatasetInputsOrBuilder(",
          "5753:         int index) {",
          "5754:       return datasetInputs_.get(index);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "5574:     @java.lang.Override",
          "5575:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "5576:                         throws java.io.IOException {",
          "5582:       }",
          "5583:       unknownFields.writeTo(output);",
          "5584:     }",
          "",
          "[Removed Lines]",
          "5577:       if (((bitField0_ & 0x00000001) != 0)) {",
          "5578:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);",
          "5579:       }",
          "5580:       if (((bitField0_ & 0x00000002) != 0)) {",
          "5581:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);",
          "",
          "[Added Lines]",
          "5771:       for (int i = 0; i < datasetInputs_.size(); i++) {",
          "5772:         output.writeMessage(1, datasetInputs_.get(i));",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "5589:       if (size != -1) return size;",
          "5591:       size = 0;",
          "5597:       }",
          "5598:       size += unknownFields.getSerializedSize();",
          "5599:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "5592:       if (((bitField0_ & 0x00000001) != 0)) {",
          "5593:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);",
          "5594:       }",
          "5595:       if (((bitField0_ & 0x00000002) != 0)) {",
          "5596:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);",
          "",
          "[Added Lines]",
          "5783:       for (int i = 0; i < datasetInputs_.size(); i++) {",
          "5784:         size += com.google.protobuf.CodedOutputStream",
          "5785:           .computeMessageSize(1, datasetInputs_.get(i));",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5605:       if (obj == this) {",
          "5606:        return true;",
          "5607:       }",
          "5609:         return super.equals(obj);",
          "5610:       }",
          "5623:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "5624:       return true;",
          "5625:     }",
          "",
          "[Removed Lines]",
          "5608:       if (!(obj instanceof org.mlflow.api.proto.Service.RunTag)) {",
          "5611:       org.mlflow.api.proto.Service.RunTag other = (org.mlflow.api.proto.Service.RunTag) obj;",
          "5613:       if (hasKey() != other.hasKey()) return false;",
          "5614:       if (hasKey()) {",
          "5615:         if (!getKey()",
          "5616:             .equals(other.getKey())) return false;",
          "5617:       }",
          "5618:       if (hasValue() != other.hasValue()) return false;",
          "5619:       if (hasValue()) {",
          "5620:         if (!getValue()",
          "5621:             .equals(other.getValue())) return false;",
          "5622:       }",
          "",
          "[Added Lines]",
          "5797:       if (!(obj instanceof org.mlflow.api.proto.Service.RunInputs)) {",
          "5800:       org.mlflow.api.proto.Service.RunInputs other = (org.mlflow.api.proto.Service.RunInputs) obj;",
          "5802:       if (!getDatasetInputsList()",
          "5803:           .equals(other.getDatasetInputsList())) return false;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "5631:       }",
          "5632:       int hash = 41;",
          "5633:       hash = (19 * hash) + getDescriptor().hashCode();",
          "5641:       }",
          "5642:       hash = (29 * hash) + unknownFields.hashCode();",
          "5643:       memoizedHashCode = hash;",
          "5644:       return hash;",
          "5645:     }",
          "5648:         java.nio.ByteBuffer data)",
          "5649:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "5650:       return PARSER.parseFrom(data);",
          "5651:     }",
          "5653:         java.nio.ByteBuffer data,",
          "5654:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5655:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "5656:       return PARSER.parseFrom(data, extensionRegistry);",
          "5657:     }",
          "5659:         com.google.protobuf.ByteString data)",
          "5660:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "5661:       return PARSER.parseFrom(data);",
          "5662:     }",
          "5664:         com.google.protobuf.ByteString data,",
          "5665:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5666:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "5667:       return PARSER.parseFrom(data, extensionRegistry);",
          "5668:     }",
          "5670:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "5671:       return PARSER.parseFrom(data);",
          "5672:     }",
          "5674:         byte[] data,",
          "5675:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5676:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "5677:       return PARSER.parseFrom(data, extensionRegistry);",
          "5678:     }",
          "5680:         throws java.io.IOException {",
          "5681:       return com.google.protobuf.GeneratedMessageV3",
          "5682:           .parseWithIOException(PARSER, input);",
          "5683:     }",
          "5685:         java.io.InputStream input,",
          "5686:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5687:         throws java.io.IOException {",
          "5688:       return com.google.protobuf.GeneratedMessageV3",
          "5689:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "5690:     }",
          "5692:         throws java.io.IOException {",
          "5693:       return com.google.protobuf.GeneratedMessageV3",
          "5694:           .parseDelimitedWithIOException(PARSER, input);",
          "5695:     }",
          "5697:         java.io.InputStream input,",
          "5698:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5699:         throws java.io.IOException {",
          "5700:       return com.google.protobuf.GeneratedMessageV3",
          "5701:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "5702:     }",
          "5704:         com.google.protobuf.CodedInputStream input)",
          "5705:         throws java.io.IOException {",
          "5706:       return com.google.protobuf.GeneratedMessageV3",
          "5707:           .parseWithIOException(PARSER, input);",
          "5708:     }",
          "5710:         com.google.protobuf.CodedInputStream input,",
          "5711:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5712:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "5634:       if (hasKey()) {",
          "5635:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "5636:         hash = (53 * hash) + getKey().hashCode();",
          "5637:       }",
          "5638:       if (hasValue()) {",
          "5639:         hash = (37 * hash) + VALUE_FIELD_NUMBER;",
          "5640:         hash = (53 * hash) + getValue().hashCode();",
          "5647:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "5652:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "5658:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "5663:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "5669:     public static org.mlflow.api.proto.Service.RunTag parseFrom(byte[] data)",
          "5673:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "5679:     public static org.mlflow.api.proto.Service.RunTag parseFrom(java.io.InputStream input)",
          "5684:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "5691:     public static org.mlflow.api.proto.Service.RunTag parseDelimitedFrom(java.io.InputStream input)",
          "5696:     public static org.mlflow.api.proto.Service.RunTag parseDelimitedFrom(",
          "5703:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "5709:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "",
          "[Added Lines]",
          "5815:       if (getDatasetInputsCount() > 0) {",
          "5816:         hash = (37 * hash) + DATASET_INPUTS_FIELD_NUMBER;",
          "5817:         hash = (53 * hash) + getDatasetInputsList().hashCode();",
          "5824:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "5829:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "5835:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "5840:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "5846:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(byte[] data)",
          "5850:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "5856:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(java.io.InputStream input)",
          "5861:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "5868:     public static org.mlflow.api.proto.Service.RunInputs parseDelimitedFrom(java.io.InputStream input)",
          "5873:     public static org.mlflow.api.proto.Service.RunInputs parseDelimitedFrom(",
          "5880:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "5886:     public static org.mlflow.api.proto.Service.RunInputs parseFrom(",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "5719:     public static Builder newBuilder() {",
          "5720:       return DEFAULT_INSTANCE.toBuilder();",
          "5721:     }",
          "5723:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "5724:     }",
          "5725:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "5722:     public static Builder newBuilder(org.mlflow.api.proto.Service.RunTag prototype) {",
          "",
          "[Added Lines]",
          "5899:     public static Builder newBuilder(org.mlflow.api.proto.Service.RunInputs prototype) {",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "5736:     }",
          "5744:     public static final class Builder extends",
          "5745:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "5748:       public static final com.google.protobuf.Descriptors.Descriptor",
          "5749:           getDescriptor() {",
          "5751:       }",
          "5753:       @java.lang.Override",
          "5754:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "5755:           internalGetFieldAccessorTable() {",
          "5757:             .ensureFieldAccessorsInitialized(",
          "5759:       }",
          "5762:       private Builder() {",
          "5763:         maybeForceBuilderInitialization();",
          "5764:       }",
          "",
          "[Removed Lines]",
          "5747:         org.mlflow.api.proto.Service.RunTagOrBuilder {",
          "5750:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_descriptor;",
          "5756:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_fieldAccessorTable",
          "5758:                 org.mlflow.api.proto.Service.RunTag.class, org.mlflow.api.proto.Service.RunTag.Builder.class);",
          "",
          "[Added Lines]",
          "5926:         org.mlflow.api.proto.Service.RunInputsOrBuilder {",
          "5929:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInputs_descriptor;",
          "5935:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInputs_fieldAccessorTable",
          "5937:                 org.mlflow.api.proto.Service.RunInputs.class, org.mlflow.api.proto.Service.RunInputs.Builder.class);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5771:       private void maybeForceBuilderInitialization() {",
          "5772:         if (com.google.protobuf.GeneratedMessageV3",
          "5773:                 .alwaysUseFieldBuilders) {",
          "5774:         }",
          "5775:       }",
          "5776:       @java.lang.Override",
          "5777:       public Builder clear() {",
          "5778:         super.clear();",
          "5783:         return this;",
          "5784:       }",
          "5786:       @java.lang.Override",
          "5787:       public com.google.protobuf.Descriptors.Descriptor",
          "5788:           getDescriptorForType() {",
          "5790:       }",
          "5792:       @java.lang.Override",
          "5795:       }",
          "5797:       @java.lang.Override",
          "5800:         if (!result.isInitialized()) {",
          "5801:           throw newUninitializedMessageException(result);",
          "5802:         }",
          "",
          "[Removed Lines]",
          "5779:         key_ = \"\";",
          "5780:         bitField0_ = (bitField0_ & ~0x00000001);",
          "5781:         value_ = \"\";",
          "5782:         bitField0_ = (bitField0_ & ~0x00000002);",
          "5789:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_descriptor;",
          "5793:       public org.mlflow.api.proto.Service.RunTag getDefaultInstanceForType() {",
          "5794:         return org.mlflow.api.proto.Service.RunTag.getDefaultInstance();",
          "5798:       public org.mlflow.api.proto.Service.RunTag build() {",
          "5799:         org.mlflow.api.proto.Service.RunTag result = buildPartial();",
          "",
          "[Added Lines]",
          "5953:           getDatasetInputsFieldBuilder();",
          "5959:         if (datasetInputsBuilder_ == null) {",
          "5960:           datasetInputs_ = java.util.Collections.emptyList();",
          "5961:           bitField0_ = (bitField0_ & ~0x00000001);",
          "5962:         } else {",
          "5963:           datasetInputsBuilder_.clear();",
          "5964:         }",
          "5971:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInputs_descriptor;",
          "5975:       public org.mlflow.api.proto.Service.RunInputs getDefaultInstanceForType() {",
          "5976:         return org.mlflow.api.proto.Service.RunInputs.getDefaultInstance();",
          "5980:       public org.mlflow.api.proto.Service.RunInputs build() {",
          "5981:         org.mlflow.api.proto.Service.RunInputs result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5804:       }",
          "5806:       @java.lang.Override",
          "5809:         int from_bitField0_ = bitField0_;",
          "5817:         }",
          "5820:         onBuilt();",
          "5821:         return result;",
          "5822:       }",
          "",
          "[Removed Lines]",
          "5807:       public org.mlflow.api.proto.Service.RunTag buildPartial() {",
          "5808:         org.mlflow.api.proto.Service.RunTag result = new org.mlflow.api.proto.Service.RunTag(this);",
          "5810:         int to_bitField0_ = 0;",
          "5811:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "5812:           to_bitField0_ |= 0x00000001;",
          "5813:         }",
          "5814:         result.key_ = key_;",
          "5815:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "5816:           to_bitField0_ |= 0x00000002;",
          "5818:         result.value_ = value_;",
          "5819:         result.bitField0_ = to_bitField0_;",
          "",
          "[Added Lines]",
          "5989:       public org.mlflow.api.proto.Service.RunInputs buildPartial() {",
          "5990:         org.mlflow.api.proto.Service.RunInputs result = new org.mlflow.api.proto.Service.RunInputs(this);",
          "5992:         if (datasetInputsBuilder_ == null) {",
          "5993:           if (((bitField0_ & 0x00000001) != 0)) {",
          "5994:             datasetInputs_ = java.util.Collections.unmodifiableList(datasetInputs_);",
          "5995:             bitField0_ = (bitField0_ & ~0x00000001);",
          "5996:           }",
          "5997:           result.datasetInputs_ = datasetInputs_;",
          "5998:         } else {",
          "5999:           result.datasetInputs_ = datasetInputsBuilder_.build();",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "5855:       }",
          "5856:       @java.lang.Override",
          "5857:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "5860:         } else {",
          "5861:           super.mergeFrom(other);",
          "5862:           return this;",
          "5863:         }",
          "5864:       }",
          "5877:         }",
          "5878:         this.mergeUnknownFields(other.unknownFields);",
          "5879:         onChanged();",
          "",
          "[Removed Lines]",
          "5858:         if (other instanceof org.mlflow.api.proto.Service.RunTag) {",
          "5859:           return mergeFrom((org.mlflow.api.proto.Service.RunTag)other);",
          "5866:       public Builder mergeFrom(org.mlflow.api.proto.Service.RunTag other) {",
          "5867:         if (other == org.mlflow.api.proto.Service.RunTag.getDefaultInstance()) return this;",
          "5868:         if (other.hasKey()) {",
          "5869:           bitField0_ |= 0x00000001;",
          "5870:           key_ = other.key_;",
          "5871:           onChanged();",
          "5872:         }",
          "5873:         if (other.hasValue()) {",
          "5874:           bitField0_ |= 0x00000002;",
          "5875:           value_ = other.value_;",
          "5876:           onChanged();",
          "",
          "[Added Lines]",
          "6039:         if (other instanceof org.mlflow.api.proto.Service.RunInputs) {",
          "6040:           return mergeFrom((org.mlflow.api.proto.Service.RunInputs)other);",
          "6047:       public Builder mergeFrom(org.mlflow.api.proto.Service.RunInputs other) {",
          "6048:         if (other == org.mlflow.api.proto.Service.RunInputs.getDefaultInstance()) return this;",
          "6049:         if (datasetInputsBuilder_ == null) {",
          "6050:           if (!other.datasetInputs_.isEmpty()) {",
          "6051:             if (datasetInputs_.isEmpty()) {",
          "6052:               datasetInputs_ = other.datasetInputs_;",
          "6053:               bitField0_ = (bitField0_ & ~0x00000001);",
          "6054:             } else {",
          "6055:               ensureDatasetInputsIsMutable();",
          "6056:               datasetInputs_.addAll(other.datasetInputs_);",
          "6057:             }",
          "6058:             onChanged();",
          "6059:           }",
          "6060:         } else {",
          "6061:           if (!other.datasetInputs_.isEmpty()) {",
          "6062:             if (datasetInputsBuilder_.isEmpty()) {",
          "6063:               datasetInputsBuilder_.dispose();",
          "6064:               datasetInputsBuilder_ = null;",
          "6065:               datasetInputs_ = other.datasetInputs_;",
          "6066:               bitField0_ = (bitField0_ & ~0x00000001);",
          "6067:               datasetInputsBuilder_ =",
          "6068:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "6069:                    getDatasetInputsFieldBuilder() : null;",
          "6070:             } else {",
          "6071:               datasetInputsBuilder_.addAllMessages(other.datasetInputs_);",
          "6072:             }",
          "6073:           }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "5890:           com.google.protobuf.CodedInputStream input,",
          "5891:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "5892:           throws java.io.IOException {",
          "5894:         try {",
          "5895:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "5896:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "5898:           throw e.unwrapIOException();",
          "5899:         } finally {",
          "5900:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "5893:         org.mlflow.api.proto.Service.RunTag parsedMessage = null;",
          "5897:           parsedMessage = (org.mlflow.api.proto.Service.RunTag) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "6090:         org.mlflow.api.proto.Service.RunInputs parsedMessage = null;",
          "6094:           parsedMessage = (org.mlflow.api.proto.Service.RunInputs) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5905:       }",
          "5906:       private int bitField0_;",
          "5919:       }",
          "5938:         } else {",
          "5940:         }",
          "5941:       }",
          "5959:         } else {",
          "5961:         }",
          "5962:       }",
          "5980:         return this;",
          "5981:       }",
          "5994:         return this;",
          "5995:       }",
          "6013:         return this;",
          "6014:       }",
          "6027:       }",
          "6046:         } else {",
          "6048:         }",
          "6049:       }",
          "6067:         } else {",
          "6069:         }",
          "6070:       }",
          "6088:         return this;",
          "6089:       }",
          "6102:         return this;",
          "6103:       }",
          "6121:         return this;",
          "6122:       }",
          "6123:       @java.lang.Override",
          "6124:       public final Builder setUnknownFields(",
          "6125:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "5908:       private java.lang.Object key_ = \"\";",
          "5917:       public boolean hasKey() {",
          "5918:         return ((bitField0_ & 0x00000001) != 0);",
          "5928:       public java.lang.String getKey() {",
          "5929:         java.lang.Object ref = key_;",
          "5930:         if (!(ref instanceof java.lang.String)) {",
          "5931:           com.google.protobuf.ByteString bs =",
          "5932:               (com.google.protobuf.ByteString) ref;",
          "5933:           java.lang.String s = bs.toStringUtf8();",
          "5934:           if (bs.isValidUtf8()) {",
          "5935:             key_ = s;",
          "5936:           }",
          "5937:           return s;",
          "5939:           return (java.lang.String) ref;",
          "5950:       public com.google.protobuf.ByteString",
          "5951:           getKeyBytes() {",
          "5952:         java.lang.Object ref = key_;",
          "5953:         if (ref instanceof String) {",
          "5954:           com.google.protobuf.ByteString b =",
          "5955:               com.google.protobuf.ByteString.copyFromUtf8(",
          "5956:                   (java.lang.String) ref);",
          "5957:           key_ = b;",
          "5958:           return b;",
          "5960:           return (com.google.protobuf.ByteString) ref;",
          "5972:       public Builder setKey(",
          "5973:           java.lang.String value) {",
          "5974:         if (value == null) {",
          "5975:     throw new NullPointerException();",
          "5976:   }",
          "5977:   bitField0_ |= 0x00000001;",
          "5978:         key_ = value;",
          "5979:         onChanged();",
          "5990:       public Builder clearKey() {",
          "5991:         bitField0_ = (bitField0_ & ~0x00000001);",
          "5992:         key_ = getDefaultInstance().getKey();",
          "5993:         onChanged();",
          "6005:       public Builder setKeyBytes(",
          "6006:           com.google.protobuf.ByteString value) {",
          "6007:         if (value == null) {",
          "6008:     throw new NullPointerException();",
          "6009:   }",
          "6010:   bitField0_ |= 0x00000001;",
          "6011:         key_ = value;",
          "6012:         onChanged();",
          "6016:       private java.lang.Object value_ = \"\";",
          "6025:       public boolean hasValue() {",
          "6026:         return ((bitField0_ & 0x00000002) != 0);",
          "6036:       public java.lang.String getValue() {",
          "6037:         java.lang.Object ref = value_;",
          "6038:         if (!(ref instanceof java.lang.String)) {",
          "6039:           com.google.protobuf.ByteString bs =",
          "6040:               (com.google.protobuf.ByteString) ref;",
          "6041:           java.lang.String s = bs.toStringUtf8();",
          "6042:           if (bs.isValidUtf8()) {",
          "6043:             value_ = s;",
          "6044:           }",
          "6045:           return s;",
          "6047:           return (java.lang.String) ref;",
          "6058:       public com.google.protobuf.ByteString",
          "6059:           getValueBytes() {",
          "6060:         java.lang.Object ref = value_;",
          "6061:         if (ref instanceof String) {",
          "6062:           com.google.protobuf.ByteString b =",
          "6063:               com.google.protobuf.ByteString.copyFromUtf8(",
          "6064:                   (java.lang.String) ref);",
          "6065:           value_ = b;",
          "6066:           return b;",
          "6068:           return (com.google.protobuf.ByteString) ref;",
          "6080:       public Builder setValue(",
          "6081:           java.lang.String value) {",
          "6082:         if (value == null) {",
          "6083:     throw new NullPointerException();",
          "6084:   }",
          "6085:   bitField0_ |= 0x00000002;",
          "6086:         value_ = value;",
          "6087:         onChanged();",
          "6098:       public Builder clearValue() {",
          "6099:         bitField0_ = (bitField0_ & ~0x00000002);",
          "6100:         value_ = getDefaultInstance().getValue();",
          "6101:         onChanged();",
          "6113:       public Builder setValueBytes(",
          "6114:           com.google.protobuf.ByteString value) {",
          "6115:         if (value == null) {",
          "6116:     throw new NullPointerException();",
          "6117:   }",
          "6118:   bitField0_ |= 0x00000002;",
          "6119:         value_ = value;",
          "6120:         onChanged();",
          "",
          "[Added Lines]",
          "6105:       private java.util.List<org.mlflow.api.proto.Service.DatasetInput> datasetInputs_ =",
          "6106:         java.util.Collections.emptyList();",
          "6107:       private void ensureDatasetInputsIsMutable() {",
          "6108:         if (!((bitField0_ & 0x00000001) != 0)) {",
          "6109:           datasetInputs_ = new java.util.ArrayList<org.mlflow.api.proto.Service.DatasetInput>(datasetInputs_);",
          "6110:           bitField0_ |= 0x00000001;",
          "6111:          }",
          "6112:       }",
          "6114:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "6115:           org.mlflow.api.proto.Service.DatasetInput, org.mlflow.api.proto.Service.DatasetInput.Builder, org.mlflow.api.proto.Service.DatasetInputOrBuilder> datasetInputsBuilder_;",
          "6124:       public java.util.List<org.mlflow.api.proto.Service.DatasetInput> getDatasetInputsList() {",
          "6125:         if (datasetInputsBuilder_ == null) {",
          "6126:           return java.util.Collections.unmodifiableList(datasetInputs_);",
          "6127:         } else {",
          "6128:           return datasetInputsBuilder_.getMessageList();",
          "6129:         }",
          "6138:       public int getDatasetInputsCount() {",
          "6139:         if (datasetInputsBuilder_ == null) {",
          "6140:           return datasetInputs_.size();",
          "6142:           return datasetInputsBuilder_.getCount();",
          "6152:       public org.mlflow.api.proto.Service.DatasetInput getDatasetInputs(int index) {",
          "6153:         if (datasetInputsBuilder_ == null) {",
          "6154:           return datasetInputs_.get(index);",
          "6156:           return datasetInputsBuilder_.getMessage(index);",
          "6166:       public Builder setDatasetInputs(",
          "6167:           int index, org.mlflow.api.proto.Service.DatasetInput value) {",
          "6168:         if (datasetInputsBuilder_ == null) {",
          "6169:           if (value == null) {",
          "6170:             throw new NullPointerException();",
          "6171:           }",
          "6172:           ensureDatasetInputsIsMutable();",
          "6173:           datasetInputs_.set(index, value);",
          "6174:           onChanged();",
          "6175:         } else {",
          "6176:           datasetInputsBuilder_.setMessage(index, value);",
          "6177:         }",
          "6187:       public Builder setDatasetInputs(",
          "6188:           int index, org.mlflow.api.proto.Service.DatasetInput.Builder builderForValue) {",
          "6189:         if (datasetInputsBuilder_ == null) {",
          "6190:           ensureDatasetInputsIsMutable();",
          "6191:           datasetInputs_.set(index, builderForValue.build());",
          "6192:           onChanged();",
          "6193:         } else {",
          "6194:           datasetInputsBuilder_.setMessage(index, builderForValue.build());",
          "6195:         }",
          "6205:       public Builder addDatasetInputs(org.mlflow.api.proto.Service.DatasetInput value) {",
          "6206:         if (datasetInputsBuilder_ == null) {",
          "6207:           if (value == null) {",
          "6208:             throw new NullPointerException();",
          "6209:           }",
          "6210:           ensureDatasetInputsIsMutable();",
          "6211:           datasetInputs_.add(value);",
          "6212:           onChanged();",
          "6213:         } else {",
          "6214:           datasetInputsBuilder_.addMessage(value);",
          "6215:         }",
          "6225:       public Builder addDatasetInputs(",
          "6226:           int index, org.mlflow.api.proto.Service.DatasetInput value) {",
          "6227:         if (datasetInputsBuilder_ == null) {",
          "6228:           if (value == null) {",
          "6229:             throw new NullPointerException();",
          "6230:           }",
          "6231:           ensureDatasetInputsIsMutable();",
          "6232:           datasetInputs_.add(index, value);",
          "6233:           onChanged();",
          "6234:         } else {",
          "6235:           datasetInputsBuilder_.addMessage(index, value);",
          "6236:         }",
          "6237:         return this;",
          "6246:       public Builder addDatasetInputs(",
          "6247:           org.mlflow.api.proto.Service.DatasetInput.Builder builderForValue) {",
          "6248:         if (datasetInputsBuilder_ == null) {",
          "6249:           ensureDatasetInputsIsMutable();",
          "6250:           datasetInputs_.add(builderForValue.build());",
          "6251:           onChanged();",
          "6253:           datasetInputsBuilder_.addMessage(builderForValue.build());",
          "6255:         return this;",
          "6264:       public Builder addDatasetInputs(",
          "6265:           int index, org.mlflow.api.proto.Service.DatasetInput.Builder builderForValue) {",
          "6266:         if (datasetInputsBuilder_ == null) {",
          "6267:           ensureDatasetInputsIsMutable();",
          "6268:           datasetInputs_.add(index, builderForValue.build());",
          "6269:           onChanged();",
          "6271:           datasetInputsBuilder_.addMessage(index, builderForValue.build());",
          "6273:         return this;",
          "6282:       public Builder addAllDatasetInputs(",
          "6283:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.DatasetInput> values) {",
          "6284:         if (datasetInputsBuilder_ == null) {",
          "6285:           ensureDatasetInputsIsMutable();",
          "6286:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "6287:               values, datasetInputs_);",
          "6288:           onChanged();",
          "6289:         } else {",
          "6290:           datasetInputsBuilder_.addAllMessages(values);",
          "6291:         }",
          "6301:       public Builder clearDatasetInputs() {",
          "6302:         if (datasetInputsBuilder_ == null) {",
          "6303:           datasetInputs_ = java.util.Collections.emptyList();",
          "6304:           bitField0_ = (bitField0_ & ~0x00000001);",
          "6305:           onChanged();",
          "6306:         } else {",
          "6307:           datasetInputsBuilder_.clear();",
          "6308:         }",
          "6318:       public Builder removeDatasetInputs(int index) {",
          "6319:         if (datasetInputsBuilder_ == null) {",
          "6320:           ensureDatasetInputsIsMutable();",
          "6321:           datasetInputs_.remove(index);",
          "6322:           onChanged();",
          "6323:         } else {",
          "6324:           datasetInputsBuilder_.remove(index);",
          "6325:         }",
          "6335:       public org.mlflow.api.proto.Service.DatasetInput.Builder getDatasetInputsBuilder(",
          "6336:           int index) {",
          "6337:         return getDatasetInputsFieldBuilder().getBuilder(index);",
          "6338:       }",
          "6346:       public org.mlflow.api.proto.Service.DatasetInputOrBuilder getDatasetInputsOrBuilder(",
          "6347:           int index) {",
          "6348:         if (datasetInputsBuilder_ == null) {",
          "6349:           return datasetInputs_.get(index);  } else {",
          "6350:           return datasetInputsBuilder_.getMessageOrBuilder(index);",
          "6351:         }",
          "6352:       }",
          "6360:       public java.util.List<? extends org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "6361:            getDatasetInputsOrBuilderList() {",
          "6362:         if (datasetInputsBuilder_ != null) {",
          "6363:           return datasetInputsBuilder_.getMessageOrBuilderList();",
          "6364:         } else {",
          "6365:           return java.util.Collections.unmodifiableList(datasetInputs_);",
          "6366:         }",
          "6367:       }",
          "6375:       public org.mlflow.api.proto.Service.DatasetInput.Builder addDatasetInputsBuilder() {",
          "6376:         return getDatasetInputsFieldBuilder().addBuilder(",
          "6377:             org.mlflow.api.proto.Service.DatasetInput.getDefaultInstance());",
          "6378:       }",
          "6386:       public org.mlflow.api.proto.Service.DatasetInput.Builder addDatasetInputsBuilder(",
          "6387:           int index) {",
          "6388:         return getDatasetInputsFieldBuilder().addBuilder(",
          "6389:             index, org.mlflow.api.proto.Service.DatasetInput.getDefaultInstance());",
          "6390:       }",
          "6398:       public java.util.List<org.mlflow.api.proto.Service.DatasetInput.Builder>",
          "6399:            getDatasetInputsBuilderList() {",
          "6400:         return getDatasetInputsFieldBuilder().getBuilderList();",
          "6401:       }",
          "6402:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "6403:           org.mlflow.api.proto.Service.DatasetInput, org.mlflow.api.proto.Service.DatasetInput.Builder, org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "6404:           getDatasetInputsFieldBuilder() {",
          "6405:         if (datasetInputsBuilder_ == null) {",
          "6406:           datasetInputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "6407:               org.mlflow.api.proto.Service.DatasetInput, org.mlflow.api.proto.Service.DatasetInput.Builder, org.mlflow.api.proto.Service.DatasetInputOrBuilder>(",
          "6408:                   datasetInputs_,",
          "6409:                   ((bitField0_ & 0x00000001) != 0),",
          "6410:                   getParentForChildren(),",
          "6411:                   isClean());",
          "6412:           datasetInputs_ = null;",
          "6413:         }",
          "6414:         return datasetInputsBuilder_;",
          "6415:       }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "6133:       }",
          "6137:     }",
          "6141:     static {",
          "6143:     }",
          "6146:       return DEFAULT_INSTANCE;",
          "6147:     }",
          "6151:       @java.lang.Override",
          "6153:           com.google.protobuf.CodedInputStream input,",
          "6154:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6155:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "6157:       }",
          "6158:     };",
          "6161:       return PARSER;",
          "6162:     }",
          "6164:     @java.lang.Override",
          "6166:       return PARSER;",
          "6167:     }",
          "6169:     @java.lang.Override",
          "6171:       return DEFAULT_INSTANCE;",
          "6172:     }",
          "6174:   }",
          "6178:       com.google.protobuf.MessageOrBuilder {",
          "",
          "[Removed Lines]",
          "6140:     private static final org.mlflow.api.proto.Service.RunTag DEFAULT_INSTANCE;",
          "6142:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RunTag();",
          "6145:     public static org.mlflow.api.proto.Service.RunTag getDefaultInstance() {",
          "6149:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RunTag>",
          "6150:         PARSER = new com.google.protobuf.AbstractParser<RunTag>() {",
          "6152:       public RunTag parsePartialFrom(",
          "6156:         return new RunTag(input, extensionRegistry);",
          "6160:     public static com.google.protobuf.Parser<RunTag> parser() {",
          "6165:     public com.google.protobuf.Parser<RunTag> getParserForType() {",
          "6170:     public org.mlflow.api.proto.Service.RunTag getDefaultInstanceForType() {",
          "6176:   public interface ExperimentTagOrBuilder extends",
          "",
          "[Added Lines]",
          "6433:     private static final org.mlflow.api.proto.Service.RunInputs DEFAULT_INSTANCE;",
          "6435:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RunInputs();",
          "6438:     public static org.mlflow.api.proto.Service.RunInputs getDefaultInstance() {",
          "6442:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RunInputs>",
          "6443:         PARSER = new com.google.protobuf.AbstractParser<RunInputs>() {",
          "6445:       public RunInputs parsePartialFrom(",
          "6449:         return new RunInputs(input, extensionRegistry);",
          "6453:     public static com.google.protobuf.Parser<RunInputs> parser() {",
          "6458:     public com.google.protobuf.Parser<RunInputs> getParserForType() {",
          "6463:     public org.mlflow.api.proto.Service.RunInputs getDefaultInstanceForType() {",
          "6469:   public interface RunTagOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "6237:   }",
          "6246:       com.google.protobuf.GeneratedMessageV3 implements",
          "6249:   private static final long serialVersionUID = 0L;",
          "6252:       super(builder);",
          "6253:     }",
          "6255:       key_ = \"\";",
          "6256:       value_ = \"\";",
          "6257:     }",
          "",
          "[Removed Lines]",
          "6245:   public static final class ExperimentTag extends",
          "6248:       ExperimentTagOrBuilder {",
          "6251:     private ExperimentTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "6254:     private ExperimentTag() {",
          "",
          "[Added Lines]",
          "6538:   public static final class RunTag extends",
          "6541:       RunTagOrBuilder {",
          "6544:     private RunTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "6547:     private RunTag() {",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "6260:     @SuppressWarnings({\"unused\"})",
          "6261:     protected java.lang.Object newInstance(",
          "6262:         UnusedPrivateParameter unused) {",
          "6264:     }",
          "6266:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "6263:       return new ExperimentTag();",
          "",
          "[Added Lines]",
          "6556:       return new RunTag();",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "6268:     getUnknownFields() {",
          "6269:       return this.unknownFields;",
          "6270:     }",
          "6272:         com.google.protobuf.CodedInputStream input,",
          "6273:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6274:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "6271:     private ExperimentTag(",
          "",
          "[Added Lines]",
          "6564:     private RunTag(",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "6320:     }",
          "6321:     public static final com.google.protobuf.Descriptors.Descriptor",
          "6322:         getDescriptor() {",
          "6324:     }",
          "6326:     @java.lang.Override",
          "6327:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "6328:         internalGetFieldAccessorTable() {",
          "6330:           .ensureFieldAccessorsInitialized(",
          "6332:     }",
          "6334:     private int bitField0_;",
          "",
          "[Removed Lines]",
          "6323:       return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_descriptor;",
          "6329:       return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_fieldAccessorTable",
          "6331:               org.mlflow.api.proto.Service.ExperimentTag.class, org.mlflow.api.proto.Service.ExperimentTag.Builder.class);",
          "",
          "[Added Lines]",
          "6616:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_descriptor;",
          "6622:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_fieldAccessorTable",
          "6624:               org.mlflow.api.proto.Service.RunTag.class, org.mlflow.api.proto.Service.RunTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "6497:       if (obj == this) {",
          "6498:        return true;",
          "6499:       }",
          "6501:         return super.equals(obj);",
          "6502:       }",
          "6505:       if (hasKey() != other.hasKey()) return false;",
          "6506:       if (hasKey()) {",
          "",
          "[Removed Lines]",
          "6500:       if (!(obj instanceof org.mlflow.api.proto.Service.ExperimentTag)) {",
          "6503:       org.mlflow.api.proto.Service.ExperimentTag other = (org.mlflow.api.proto.Service.ExperimentTag) obj;",
          "",
          "[Added Lines]",
          "6793:       if (!(obj instanceof org.mlflow.api.proto.Service.RunTag)) {",
          "6796:       org.mlflow.api.proto.Service.RunTag other = (org.mlflow.api.proto.Service.RunTag) obj;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "6536:       return hash;",
          "6537:     }",
          "6540:         java.nio.ByteBuffer data)",
          "6541:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "6542:       return PARSER.parseFrom(data);",
          "6543:     }",
          "6545:         java.nio.ByteBuffer data,",
          "6546:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6547:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "6548:       return PARSER.parseFrom(data, extensionRegistry);",
          "6549:     }",
          "6551:         com.google.protobuf.ByteString data)",
          "6552:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "6553:       return PARSER.parseFrom(data);",
          "6554:     }",
          "6556:         com.google.protobuf.ByteString data,",
          "6557:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6558:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "6559:       return PARSER.parseFrom(data, extensionRegistry);",
          "6560:     }",
          "6562:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "6563:       return PARSER.parseFrom(data);",
          "6564:     }",
          "6566:         byte[] data,",
          "6567:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6568:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "6569:       return PARSER.parseFrom(data, extensionRegistry);",
          "6570:     }",
          "6572:         throws java.io.IOException {",
          "6573:       return com.google.protobuf.GeneratedMessageV3",
          "6574:           .parseWithIOException(PARSER, input);",
          "6575:     }",
          "6577:         java.io.InputStream input,",
          "6578:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6579:         throws java.io.IOException {",
          "6580:       return com.google.protobuf.GeneratedMessageV3",
          "6581:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "6582:     }",
          "6584:         throws java.io.IOException {",
          "6585:       return com.google.protobuf.GeneratedMessageV3",
          "6586:           .parseDelimitedWithIOException(PARSER, input);",
          "6587:     }",
          "6589:         java.io.InputStream input,",
          "6590:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6591:         throws java.io.IOException {",
          "6592:       return com.google.protobuf.GeneratedMessageV3",
          "6593:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "6594:     }",
          "6596:         com.google.protobuf.CodedInputStream input)",
          "6597:         throws java.io.IOException {",
          "6598:       return com.google.protobuf.GeneratedMessageV3",
          "6599:           .parseWithIOException(PARSER, input);",
          "6600:     }",
          "6602:         com.google.protobuf.CodedInputStream input,",
          "6603:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6604:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "6539:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "6544:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "6550:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "6555:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "6561:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(byte[] data)",
          "6565:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "6571:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(java.io.InputStream input)",
          "6576:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "6583:     public static org.mlflow.api.proto.Service.ExperimentTag parseDelimitedFrom(java.io.InputStream input)",
          "6588:     public static org.mlflow.api.proto.Service.ExperimentTag parseDelimitedFrom(",
          "6595:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "6601:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "",
          "[Added Lines]",
          "6832:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "6837:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "6843:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "6848:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "6854:     public static org.mlflow.api.proto.Service.RunTag parseFrom(byte[] data)",
          "6858:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "6864:     public static org.mlflow.api.proto.Service.RunTag parseFrom(java.io.InputStream input)",
          "6869:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "6876:     public static org.mlflow.api.proto.Service.RunTag parseDelimitedFrom(java.io.InputStream input)",
          "6881:     public static org.mlflow.api.proto.Service.RunTag parseDelimitedFrom(",
          "6888:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "6894:     public static org.mlflow.api.proto.Service.RunTag parseFrom(",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "6611:     public static Builder newBuilder() {",
          "6612:       return DEFAULT_INSTANCE.toBuilder();",
          "6613:     }",
          "6615:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "6616:     }",
          "6617:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "6614:     public static Builder newBuilder(org.mlflow.api.proto.Service.ExperimentTag prototype) {",
          "",
          "[Added Lines]",
          "6907:     public static Builder newBuilder(org.mlflow.api.proto.Service.RunTag prototype) {",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6628:     }",
          "6636:     public static final class Builder extends",
          "6637:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "6640:       public static final com.google.protobuf.Descriptors.Descriptor",
          "6641:           getDescriptor() {",
          "6643:       }",
          "6645:       @java.lang.Override",
          "6646:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "6647:           internalGetFieldAccessorTable() {",
          "6649:             .ensureFieldAccessorsInitialized(",
          "6651:       }",
          "6654:       private Builder() {",
          "6655:         maybeForceBuilderInitialization();",
          "6656:       }",
          "",
          "[Removed Lines]",
          "6639:         org.mlflow.api.proto.Service.ExperimentTagOrBuilder {",
          "6642:         return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_descriptor;",
          "6648:         return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_fieldAccessorTable",
          "6650:                 org.mlflow.api.proto.Service.ExperimentTag.class, org.mlflow.api.proto.Service.ExperimentTag.Builder.class);",
          "",
          "[Added Lines]",
          "6932:         org.mlflow.api.proto.Service.RunTagOrBuilder {",
          "6935:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_descriptor;",
          "6941:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_fieldAccessorTable",
          "6943:                 org.mlflow.api.proto.Service.RunTag.class, org.mlflow.api.proto.Service.RunTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "6678:       @java.lang.Override",
          "6679:       public com.google.protobuf.Descriptors.Descriptor",
          "6680:           getDescriptorForType() {",
          "6682:       }",
          "6684:       @java.lang.Override",
          "6687:       }",
          "6689:       @java.lang.Override",
          "6692:         if (!result.isInitialized()) {",
          "6693:           throw newUninitializedMessageException(result);",
          "6694:         }",
          "",
          "[Removed Lines]",
          "6681:         return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_descriptor;",
          "6685:       public org.mlflow.api.proto.Service.ExperimentTag getDefaultInstanceForType() {",
          "6686:         return org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance();",
          "6690:       public org.mlflow.api.proto.Service.ExperimentTag build() {",
          "6691:         org.mlflow.api.proto.Service.ExperimentTag result = buildPartial();",
          "",
          "[Added Lines]",
          "6974:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunTag_descriptor;",
          "6978:       public org.mlflow.api.proto.Service.RunTag getDefaultInstanceForType() {",
          "6979:         return org.mlflow.api.proto.Service.RunTag.getDefaultInstance();",
          "6983:       public org.mlflow.api.proto.Service.RunTag build() {",
          "6984:         org.mlflow.api.proto.Service.RunTag result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "6696:       }",
          "6698:       @java.lang.Override",
          "6701:         int from_bitField0_ = bitField0_;",
          "6702:         int to_bitField0_ = 0;",
          "6703:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "6699:       public org.mlflow.api.proto.Service.ExperimentTag buildPartial() {",
          "6700:         org.mlflow.api.proto.Service.ExperimentTag result = new org.mlflow.api.proto.Service.ExperimentTag(this);",
          "",
          "[Added Lines]",
          "6992:       public org.mlflow.api.proto.Service.RunTag buildPartial() {",
          "6993:         org.mlflow.api.proto.Service.RunTag result = new org.mlflow.api.proto.Service.RunTag(this);",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "6747:       }",
          "6748:       @java.lang.Override",
          "6749:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "6752:         } else {",
          "6753:           super.mergeFrom(other);",
          "6754:           return this;",
          "6755:         }",
          "6756:       }",
          "6760:         if (other.hasKey()) {",
          "6761:           bitField0_ |= 0x00000001;",
          "6762:           key_ = other.key_;",
          "",
          "[Removed Lines]",
          "6750:         if (other instanceof org.mlflow.api.proto.Service.ExperimentTag) {",
          "6751:           return mergeFrom((org.mlflow.api.proto.Service.ExperimentTag)other);",
          "6758:       public Builder mergeFrom(org.mlflow.api.proto.Service.ExperimentTag other) {",
          "6759:         if (other == org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "7043:         if (other instanceof org.mlflow.api.proto.Service.RunTag) {",
          "7044:           return mergeFrom((org.mlflow.api.proto.Service.RunTag)other);",
          "7051:       public Builder mergeFrom(org.mlflow.api.proto.Service.RunTag other) {",
          "7052:         if (other == org.mlflow.api.proto.Service.RunTag.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "6782:           com.google.protobuf.CodedInputStream input,",
          "6783:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "6784:           throws java.io.IOException {",
          "6786:         try {",
          "6787:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "6788:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "6790:           throw e.unwrapIOException();",
          "6791:         } finally {",
          "6792:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "6785:         org.mlflow.api.proto.Service.ExperimentTag parsedMessage = null;",
          "6789:           parsedMessage = (org.mlflow.api.proto.Service.ExperimentTag) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "7078:         org.mlflow.api.proto.Service.RunTag parsedMessage = null;",
          "7082:           parsedMessage = (org.mlflow.api.proto.Service.RunTag) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "7025:       }",
          "7029:     }",
          "7033:     static {",
          "7035:     }",
          "7038:       return DEFAULT_INSTANCE;",
          "7039:     }",
          "7043:       @java.lang.Override",
          "7045:           com.google.protobuf.CodedInputStream input,",
          "7046:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "7047:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "7049:       }",
          "7050:     };",
          "7053:       return PARSER;",
          "7054:     }",
          "7056:     @java.lang.Override",
          "7058:       return PARSER;",
          "7059:     }",
          "7061:     @java.lang.Override",
          "7063:       return DEFAULT_INSTANCE;",
          "7064:     }",
          "7066:   }",
          "7070:       com.google.protobuf.MessageOrBuilder {",
          "7318:     com.google.protobuf.ByteString",
          "7347:     com.google.protobuf.ByteString",
          "7349:   }",
          "7358:       com.google.protobuf.GeneratedMessageV3 implements",
          "7361:   private static final long serialVersionUID = 0L;",
          "7364:       super(builder);",
          "7365:     }",
          "7375:     }",
          "7377:     @java.lang.Override",
          "7378:     @SuppressWarnings({\"unused\"})",
          "7379:     protected java.lang.Object newInstance(",
          "7380:         UnusedPrivateParameter unused) {",
          "7382:     }",
          "7384:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "7032:     private static final org.mlflow.api.proto.Service.ExperimentTag DEFAULT_INSTANCE;",
          "7034:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.ExperimentTag();",
          "7037:     public static org.mlflow.api.proto.Service.ExperimentTag getDefaultInstance() {",
          "7041:     @java.lang.Deprecated public static final com.google.protobuf.Parser<ExperimentTag>",
          "7042:         PARSER = new com.google.protobuf.AbstractParser<ExperimentTag>() {",
          "7044:       public ExperimentTag parsePartialFrom(",
          "7048:         return new ExperimentTag(input, extensionRegistry);",
          "7052:     public static com.google.protobuf.Parser<ExperimentTag> parser() {",
          "7057:     public com.google.protobuf.Parser<ExperimentTag> getParserForType() {",
          "7062:     public org.mlflow.api.proto.Service.ExperimentTag getDefaultInstanceForType() {",
          "7068:   public interface RunInfoOrBuilder extends",
          "7080:     boolean hasRunId();",
          "7089:     java.lang.String getRunId();",
          "7098:     com.google.protobuf.ByteString",
          "7099:         getRunIdBytes();",
          "7110:     boolean hasRunUuid();",
          "7120:     java.lang.String getRunUuid();",
          "7130:     com.google.protobuf.ByteString",
          "7131:         getRunUuidBytes();",
          "7141:     boolean hasRunName();",
          "7150:     java.lang.String getRunName();",
          "7159:     com.google.protobuf.ByteString",
          "7160:         getRunNameBytes();",
          "7170:     boolean hasExperimentId();",
          "7179:     java.lang.String getExperimentId();",
          "7188:     com.google.protobuf.ByteString",
          "7189:         getExperimentIdBytes();",
          "7201:     boolean hasUserId();",
          "7212:     java.lang.String getUserId();",
          "7223:     com.google.protobuf.ByteString",
          "7224:         getUserIdBytes();",
          "7234:     boolean hasStatus();",
          "7243:     org.mlflow.api.proto.Service.RunStatus getStatus();",
          "7253:     boolean hasStartTime();",
          "7262:     long getStartTime();",
          "7272:     boolean hasEndTime();",
          "7281:     long getEndTime();",
          "7294:     boolean hasArtifactUri();",
          "7306:     java.lang.String getArtifactUri();",
          "7319:         getArtifactUriBytes();",
          "7329:     boolean hasLifecycleStage();",
          "7338:     java.lang.String getLifecycleStage();",
          "7348:         getLifecycleStageBytes();",
          "7357:   public static final class RunInfo extends",
          "7360:       RunInfoOrBuilder {",
          "7363:     private RunInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "7366:     private RunInfo() {",
          "7367:       runId_ = \"\";",
          "7368:       runUuid_ = \"\";",
          "7369:       runName_ = \"\";",
          "7370:       experimentId_ = \"\";",
          "7371:       userId_ = \"\";",
          "7372:       status_ = 1;",
          "7373:       artifactUri_ = \"\";",
          "7374:       lifecycleStage_ = \"\";",
          "7381:       return new RunInfo();",
          "",
          "[Added Lines]",
          "7325:     private static final org.mlflow.api.proto.Service.RunTag DEFAULT_INSTANCE;",
          "7327:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RunTag();",
          "7330:     public static org.mlflow.api.proto.Service.RunTag getDefaultInstance() {",
          "7334:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RunTag>",
          "7335:         PARSER = new com.google.protobuf.AbstractParser<RunTag>() {",
          "7337:       public RunTag parsePartialFrom(",
          "7341:         return new RunTag(input, extensionRegistry);",
          "7345:     public static com.google.protobuf.Parser<RunTag> parser() {",
          "7350:     public com.google.protobuf.Parser<RunTag> getParserForType() {",
          "7355:     public org.mlflow.api.proto.Service.RunTag getDefaultInstanceForType() {",
          "7361:   public interface ExperimentTagOrBuilder extends",
          "7373:     boolean hasKey();",
          "7382:     java.lang.String getKey();",
          "7392:         getKeyBytes();",
          "7402:     boolean hasValue();",
          "7411:     java.lang.String getValue();",
          "7421:         getValueBytes();",
          "7430:   public static final class ExperimentTag extends",
          "7433:       ExperimentTagOrBuilder {",
          "7436:     private ExperimentTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "7439:     private ExperimentTag() {",
          "7440:       key_ = \"\";",
          "7441:       value_ = \"\";",
          "7448:       return new ExperimentTag();",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "7386:     getUnknownFields() {",
          "7387:       return this.unknownFields;",
          "7388:     }",
          "7390:         com.google.protobuf.CodedInputStream input,",
          "7391:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "7392:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "7389:     private RunInfo(",
          "",
          "[Added Lines]",
          "7456:     private ExperimentTag(",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "7407:               break;",
          "7408:             case 10: {",
          "7409:               com.google.protobuf.ByteString bs = input.readBytes();",
          "7412:               break;",
          "7413:             }",
          "7414:             case 18: {",
          "7415:               com.google.protobuf.ByteString bs = input.readBytes();",
          "7470:               break;",
          "7471:             }",
          "7472:             default: {",
          "",
          "[Removed Lines]",
          "7410:               bitField0_ |= 0x00000002;",
          "7411:               runUuid_ = bs;",
          "7416:               bitField0_ |= 0x00000008;",
          "7417:               experimentId_ = bs;",
          "7418:               break;",
          "7419:             }",
          "7420:             case 26: {",
          "7421:               com.google.protobuf.ByteString bs = input.readBytes();",
          "7422:               bitField0_ |= 0x00000004;",
          "7423:               runName_ = bs;",
          "7424:               break;",
          "7425:             }",
          "7426:             case 50: {",
          "7427:               com.google.protobuf.ByteString bs = input.readBytes();",
          "7428:               bitField0_ |= 0x00000010;",
          "7429:               userId_ = bs;",
          "7430:               break;",
          "7431:             }",
          "7432:             case 56: {",
          "7433:               int rawValue = input.readEnum();",
          "7434:                 @SuppressWarnings(\"deprecation\")",
          "7435:               org.mlflow.api.proto.Service.RunStatus value = org.mlflow.api.proto.Service.RunStatus.valueOf(rawValue);",
          "7436:               if (value == null) {",
          "7437:                 unknownFields.mergeVarintField(7, rawValue);",
          "7438:               } else {",
          "7439:                 bitField0_ |= 0x00000020;",
          "7440:                 status_ = rawValue;",
          "7441:               }",
          "7442:               break;",
          "7443:             }",
          "7444:             case 64: {",
          "7445:               bitField0_ |= 0x00000040;",
          "7446:               startTime_ = input.readInt64();",
          "7447:               break;",
          "7448:             }",
          "7449:             case 72: {",
          "7450:               bitField0_ |= 0x00000080;",
          "7451:               endTime_ = input.readInt64();",
          "7452:               break;",
          "7453:             }",
          "7454:             case 106: {",
          "7455:               com.google.protobuf.ByteString bs = input.readBytes();",
          "7456:               bitField0_ |= 0x00000100;",
          "7457:               artifactUri_ = bs;",
          "7458:               break;",
          "7459:             }",
          "7460:             case 114: {",
          "7461:               com.google.protobuf.ByteString bs = input.readBytes();",
          "7462:               bitField0_ |= 0x00000200;",
          "7463:               lifecycleStage_ = bs;",
          "7464:               break;",
          "7465:             }",
          "7466:             case 122: {",
          "7467:               com.google.protobuf.ByteString bs = input.readBytes();",
          "7468:               bitField0_ |= 0x00000001;",
          "7469:               runId_ = bs;",
          "",
          "[Added Lines]",
          "7477:               bitField0_ |= 0x00000001;",
          "7478:               key_ = bs;",
          "7483:               bitField0_ |= 0x00000002;",
          "7484:               value_ = bs;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "7490:     }",
          "7491:     public static final com.google.protobuf.Descriptors.Descriptor",
          "7492:         getDescriptor() {",
          "7494:     }",
          "7496:     @java.lang.Override",
          "7497:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "7498:         internalGetFieldAccessorTable() {",
          "7500:           .ensureFieldAccessorsInitialized(",
          "7502:     }",
          "7504:     private int bitField0_;",
          "7515:     @java.lang.Override",
          "7517:       return ((bitField0_ & 0x00000001) != 0);",
          "7518:     }",
          "7527:     @java.lang.Override",
          "7530:       if (ref instanceof java.lang.String) {",
          "7531:         return (java.lang.String) ref;",
          "7532:       } else {",
          "",
          "[Removed Lines]",
          "7493:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_descriptor;",
          "7499:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_fieldAccessorTable",
          "7501:               org.mlflow.api.proto.Service.RunInfo.class, org.mlflow.api.proto.Service.RunInfo.Builder.class);",
          "7505:     public static final int RUN_ID_FIELD_NUMBER = 15;",
          "7506:     private volatile java.lang.Object runId_;",
          "7516:     public boolean hasRunId() {",
          "7528:     public java.lang.String getRunId() {",
          "7529:       java.lang.Object ref = runId_;",
          "",
          "[Added Lines]",
          "7508:       return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_descriptor;",
          "7514:       return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_fieldAccessorTable",
          "7516:               org.mlflow.api.proto.Service.ExperimentTag.class, org.mlflow.api.proto.Service.ExperimentTag.Builder.class);",
          "7520:     public static final int KEY_FIELD_NUMBER = 1;",
          "7521:     private volatile java.lang.Object key_;",
          "7531:     public boolean hasKey() {",
          "7543:     public java.lang.String getKey() {",
          "7544:       java.lang.Object ref = key_;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "7534:             (com.google.protobuf.ByteString) ref;",
          "7535:         java.lang.String s = bs.toStringUtf8();",
          "7536:         if (bs.isValidUtf8()) {",
          "7538:         }",
          "7539:         return s;",
          "7540:       }",
          "7541:     }",
          "7550:     @java.lang.Override",
          "7551:     public com.google.protobuf.ByteString",
          "7554:       if (ref instanceof java.lang.String) {",
          "7555:         com.google.protobuf.ByteString b =",
          "7556:             com.google.protobuf.ByteString.copyFromUtf8(",
          "7557:                 (java.lang.String) ref);",
          "7559:         return b;",
          "7560:       } else {",
          "7561:         return (com.google.protobuf.ByteString) ref;",
          "7562:       }",
          "7563:     }",
          "7576:     @java.lang.Override",
          "7578:       return ((bitField0_ & 0x00000002) != 0);",
          "7579:     }",
          "7986:     @java.lang.Override",
          "7989:       if (ref instanceof java.lang.String) {",
          "7990:         return (java.lang.String) ref;",
          "7991:       } else {",
          "",
          "[Removed Lines]",
          "7537:           runId_ = s;",
          "7552:         getRunIdBytes() {",
          "7553:       java.lang.Object ref = runId_;",
          "7558:         runId_ = b;",
          "7565:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "7566:     private volatile java.lang.Object runUuid_;",
          "7577:     public boolean hasRunUuid() {",
          "7589:     @java.lang.Override",
          "7590:     public java.lang.String getRunUuid() {",
          "7591:       java.lang.Object ref = runUuid_;",
          "7592:       if (ref instanceof java.lang.String) {",
          "7593:         return (java.lang.String) ref;",
          "7594:       } else {",
          "7595:         com.google.protobuf.ByteString bs =",
          "7596:             (com.google.protobuf.ByteString) ref;",
          "7597:         java.lang.String s = bs.toStringUtf8();",
          "7598:         if (bs.isValidUtf8()) {",
          "7599:           runUuid_ = s;",
          "7600:         }",
          "7601:         return s;",
          "7602:       }",
          "7603:     }",
          "7613:     @java.lang.Override",
          "7614:     public com.google.protobuf.ByteString",
          "7615:         getRunUuidBytes() {",
          "7616:       java.lang.Object ref = runUuid_;",
          "7617:       if (ref instanceof java.lang.String) {",
          "7618:         com.google.protobuf.ByteString b =",
          "7619:             com.google.protobuf.ByteString.copyFromUtf8(",
          "7620:                 (java.lang.String) ref);",
          "7621:         runUuid_ = b;",
          "7622:         return b;",
          "7623:       } else {",
          "7624:         return (com.google.protobuf.ByteString) ref;",
          "7625:       }",
          "7626:     }",
          "7628:     public static final int RUN_NAME_FIELD_NUMBER = 3;",
          "7629:     private volatile java.lang.Object runName_;",
          "7638:     @java.lang.Override",
          "7639:     public boolean hasRunName() {",
          "7640:       return ((bitField0_ & 0x00000004) != 0);",
          "7641:     }",
          "7650:     @java.lang.Override",
          "7651:     public java.lang.String getRunName() {",
          "7652:       java.lang.Object ref = runName_;",
          "7653:       if (ref instanceof java.lang.String) {",
          "7654:         return (java.lang.String) ref;",
          "7655:       } else {",
          "7656:         com.google.protobuf.ByteString bs =",
          "7657:             (com.google.protobuf.ByteString) ref;",
          "7658:         java.lang.String s = bs.toStringUtf8();",
          "7659:         if (bs.isValidUtf8()) {",
          "7660:           runName_ = s;",
          "7661:         }",
          "7662:         return s;",
          "7663:       }",
          "7664:     }",
          "7673:     @java.lang.Override",
          "7674:     public com.google.protobuf.ByteString",
          "7675:         getRunNameBytes() {",
          "7676:       java.lang.Object ref = runName_;",
          "7677:       if (ref instanceof java.lang.String) {",
          "7678:         com.google.protobuf.ByteString b =",
          "7679:             com.google.protobuf.ByteString.copyFromUtf8(",
          "7680:                 (java.lang.String) ref);",
          "7681:         runName_ = b;",
          "7682:         return b;",
          "7683:       } else {",
          "7684:         return (com.google.protobuf.ByteString) ref;",
          "7685:       }",
          "7686:     }",
          "7688:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 2;",
          "7689:     private volatile java.lang.Object experimentId_;",
          "7698:     @java.lang.Override",
          "7699:     public boolean hasExperimentId() {",
          "7700:       return ((bitField0_ & 0x00000008) != 0);",
          "7701:     }",
          "7710:     @java.lang.Override",
          "7711:     public java.lang.String getExperimentId() {",
          "7712:       java.lang.Object ref = experimentId_;",
          "7713:       if (ref instanceof java.lang.String) {",
          "7714:         return (java.lang.String) ref;",
          "7715:       } else {",
          "7716:         com.google.protobuf.ByteString bs =",
          "7717:             (com.google.protobuf.ByteString) ref;",
          "7718:         java.lang.String s = bs.toStringUtf8();",
          "7719:         if (bs.isValidUtf8()) {",
          "7720:           experimentId_ = s;",
          "7721:         }",
          "7722:         return s;",
          "7723:       }",
          "7724:     }",
          "7733:     @java.lang.Override",
          "7734:     public com.google.protobuf.ByteString",
          "7735:         getExperimentIdBytes() {",
          "7736:       java.lang.Object ref = experimentId_;",
          "7737:       if (ref instanceof java.lang.String) {",
          "7738:         com.google.protobuf.ByteString b =",
          "7739:             com.google.protobuf.ByteString.copyFromUtf8(",
          "7740:                 (java.lang.String) ref);",
          "7741:         experimentId_ = b;",
          "7742:         return b;",
          "7743:       } else {",
          "7744:         return (com.google.protobuf.ByteString) ref;",
          "7745:       }",
          "7746:     }",
          "7748:     public static final int USER_ID_FIELD_NUMBER = 6;",
          "7749:     private volatile java.lang.Object userId_;",
          "7760:     @java.lang.Override",
          "7761:     public boolean hasUserId() {",
          "7762:       return ((bitField0_ & 0x00000010) != 0);",
          "7763:     }",
          "7774:     @java.lang.Override",
          "7775:     public java.lang.String getUserId() {",
          "7776:       java.lang.Object ref = userId_;",
          "7777:       if (ref instanceof java.lang.String) {",
          "7778:         return (java.lang.String) ref;",
          "7779:       } else {",
          "7780:         com.google.protobuf.ByteString bs =",
          "7781:             (com.google.protobuf.ByteString) ref;",
          "7782:         java.lang.String s = bs.toStringUtf8();",
          "7783:         if (bs.isValidUtf8()) {",
          "7784:           userId_ = s;",
          "7785:         }",
          "7786:         return s;",
          "7787:       }",
          "7788:     }",
          "7799:     @java.lang.Override",
          "7800:     public com.google.protobuf.ByteString",
          "7801:         getUserIdBytes() {",
          "7802:       java.lang.Object ref = userId_;",
          "7803:       if (ref instanceof java.lang.String) {",
          "7804:         com.google.protobuf.ByteString b =",
          "7805:             com.google.protobuf.ByteString.copyFromUtf8(",
          "7806:                 (java.lang.String) ref);",
          "7807:         userId_ = b;",
          "7808:         return b;",
          "7809:       } else {",
          "7810:         return (com.google.protobuf.ByteString) ref;",
          "7811:       }",
          "7812:     }",
          "7814:     public static final int STATUS_FIELD_NUMBER = 7;",
          "7815:     private int status_;",
          "7824:     @java.lang.Override public boolean hasStatus() {",
          "7825:       return ((bitField0_ & 0x00000020) != 0);",
          "7826:     }",
          "7835:     @java.lang.Override public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "7836:       @SuppressWarnings(\"deprecation\")",
          "7837:       org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "7838:       return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "7839:     }",
          "7841:     public static final int START_TIME_FIELD_NUMBER = 8;",
          "7842:     private long startTime_;",
          "7851:     @java.lang.Override",
          "7852:     public boolean hasStartTime() {",
          "7853:       return ((bitField0_ & 0x00000040) != 0);",
          "7854:     }",
          "7863:     @java.lang.Override",
          "7864:     public long getStartTime() {",
          "7865:       return startTime_;",
          "7866:     }",
          "7868:     public static final int END_TIME_FIELD_NUMBER = 9;",
          "7869:     private long endTime_;",
          "7878:     @java.lang.Override",
          "7879:     public boolean hasEndTime() {",
          "7880:       return ((bitField0_ & 0x00000080) != 0);",
          "7881:     }",
          "7890:     @java.lang.Override",
          "7891:     public long getEndTime() {",
          "7892:       return endTime_;",
          "7893:     }",
          "7895:     public static final int ARTIFACT_URI_FIELD_NUMBER = 13;",
          "7896:     private volatile java.lang.Object artifactUri_;",
          "7908:     @java.lang.Override",
          "7909:     public boolean hasArtifactUri() {",
          "7910:       return ((bitField0_ & 0x00000100) != 0);",
          "7911:     }",
          "7923:     @java.lang.Override",
          "7924:     public java.lang.String getArtifactUri() {",
          "7925:       java.lang.Object ref = artifactUri_;",
          "7926:       if (ref instanceof java.lang.String) {",
          "7927:         return (java.lang.String) ref;",
          "7928:       } else {",
          "7929:         com.google.protobuf.ByteString bs =",
          "7930:             (com.google.protobuf.ByteString) ref;",
          "7931:         java.lang.String s = bs.toStringUtf8();",
          "7932:         if (bs.isValidUtf8()) {",
          "7933:           artifactUri_ = s;",
          "7934:         }",
          "7935:         return s;",
          "7936:       }",
          "7937:     }",
          "7949:     @java.lang.Override",
          "7950:     public com.google.protobuf.ByteString",
          "7951:         getArtifactUriBytes() {",
          "7952:       java.lang.Object ref = artifactUri_;",
          "7953:       if (ref instanceof java.lang.String) {",
          "7954:         com.google.protobuf.ByteString b =",
          "7955:             com.google.protobuf.ByteString.copyFromUtf8(",
          "7956:                 (java.lang.String) ref);",
          "7957:         artifactUri_ = b;",
          "7958:         return b;",
          "7959:       } else {",
          "7960:         return (com.google.protobuf.ByteString) ref;",
          "7961:       }",
          "7962:     }",
          "7964:     public static final int LIFECYCLE_STAGE_FIELD_NUMBER = 14;",
          "7965:     private volatile java.lang.Object lifecycleStage_;",
          "7974:     @java.lang.Override",
          "7975:     public boolean hasLifecycleStage() {",
          "7976:       return ((bitField0_ & 0x00000200) != 0);",
          "7977:     }",
          "7987:     public java.lang.String getLifecycleStage() {",
          "7988:       java.lang.Object ref = lifecycleStage_;",
          "",
          "[Added Lines]",
          "7552:           key_ = s;",
          "7567:         getKeyBytes() {",
          "7568:       java.lang.Object ref = key_;",
          "7573:         key_ = b;",
          "7580:     public static final int VALUE_FIELD_NUMBER = 2;",
          "7581:     private volatile java.lang.Object value_;",
          "7591:     public boolean hasValue() {",
          "7603:     public java.lang.String getValue() {",
          "7604:       java.lang.Object ref = value_;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "7993:             (com.google.protobuf.ByteString) ref;",
          "7994:         java.lang.String s = bs.toStringUtf8();",
          "7995:         if (bs.isValidUtf8()) {",
          "7997:         }",
          "7998:         return s;",
          "7999:       }",
          "8000:     }",
          "8009:     @java.lang.Override",
          "8010:     public com.google.protobuf.ByteString",
          "8013:       if (ref instanceof java.lang.String) {",
          "8014:         com.google.protobuf.ByteString b =",
          "8015:             com.google.protobuf.ByteString.copyFromUtf8(",
          "8016:                 (java.lang.String) ref);",
          "8018:         return b;",
          "8019:       } else {",
          "8020:         return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "7996:           lifecycleStage_ = s;",
          "8011:         getLifecycleStageBytes() {",
          "8012:       java.lang.Object ref = lifecycleStage_;",
          "8017:         lifecycleStage_ = b;",
          "",
          "[Added Lines]",
          "7612:           value_ = s;",
          "7627:         getValueBytes() {",
          "7628:       java.lang.Object ref = value_;",
          "7633:         value_ = b;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "8035:     @java.lang.Override",
          "8036:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "8037:                         throws java.io.IOException {",
          "8065:       if (((bitField0_ & 0x00000001) != 0)) {",
          "8067:       }",
          "8068:       unknownFields.writeTo(output);",
          "8069:     }",
          "",
          "[Removed Lines]",
          "8038:       if (((bitField0_ & 0x00000002) != 0)) {",
          "8039:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "8040:       }",
          "8041:       if (((bitField0_ & 0x00000008) != 0)) {",
          "8042:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, experimentId_);",
          "8043:       }",
          "8044:       if (((bitField0_ & 0x00000004) != 0)) {",
          "8045:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runName_);",
          "8046:       }",
          "8047:       if (((bitField0_ & 0x00000010) != 0)) {",
          "8048:         com.google.protobuf.GeneratedMessageV3.writeString(output, 6, userId_);",
          "8049:       }",
          "8050:       if (((bitField0_ & 0x00000020) != 0)) {",
          "8051:         output.writeEnum(7, status_);",
          "8052:       }",
          "8053:       if (((bitField0_ & 0x00000040) != 0)) {",
          "8054:         output.writeInt64(8, startTime_);",
          "8055:       }",
          "8056:       if (((bitField0_ & 0x00000080) != 0)) {",
          "8057:         output.writeInt64(9, endTime_);",
          "8058:       }",
          "8059:       if (((bitField0_ & 0x00000100) != 0)) {",
          "8060:         com.google.protobuf.GeneratedMessageV3.writeString(output, 13, artifactUri_);",
          "8061:       }",
          "8062:       if (((bitField0_ & 0x00000200) != 0)) {",
          "8063:         com.google.protobuf.GeneratedMessageV3.writeString(output, 14, lifecycleStage_);",
          "8064:       }",
          "8066:         com.google.protobuf.GeneratedMessageV3.writeString(output, 15, runId_);",
          "",
          "[Added Lines]",
          "7655:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);",
          "7656:       }",
          "7657:       if (((bitField0_ & 0x00000002) != 0)) {",
          "7658:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "8074:       if (size != -1) return size;",
          "8076:       size = 0;",
          "8107:       if (((bitField0_ & 0x00000001) != 0)) {",
          "8109:       }",
          "8110:       size += unknownFields.getSerializedSize();",
          "8111:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "8077:       if (((bitField0_ & 0x00000002) != 0)) {",
          "8078:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "8079:       }",
          "8080:       if (((bitField0_ & 0x00000008) != 0)) {",
          "8081:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, experimentId_);",
          "8082:       }",
          "8083:       if (((bitField0_ & 0x00000004) != 0)) {",
          "8084:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runName_);",
          "8085:       }",
          "8086:       if (((bitField0_ & 0x00000010) != 0)) {",
          "8087:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, userId_);",
          "8088:       }",
          "8089:       if (((bitField0_ & 0x00000020) != 0)) {",
          "8090:         size += com.google.protobuf.CodedOutputStream",
          "8091:           .computeEnumSize(7, status_);",
          "8092:       }",
          "8093:       if (((bitField0_ & 0x00000040) != 0)) {",
          "8094:         size += com.google.protobuf.CodedOutputStream",
          "8095:           .computeInt64Size(8, startTime_);",
          "8096:       }",
          "8097:       if (((bitField0_ & 0x00000080) != 0)) {",
          "8098:         size += com.google.protobuf.CodedOutputStream",
          "8099:           .computeInt64Size(9, endTime_);",
          "8100:       }",
          "8101:       if (((bitField0_ & 0x00000100) != 0)) {",
          "8102:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, artifactUri_);",
          "8103:       }",
          "8104:       if (((bitField0_ & 0x00000200) != 0)) {",
          "8105:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, lifecycleStage_);",
          "8106:       }",
          "8108:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, runId_);",
          "",
          "[Added Lines]",
          "7670:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);",
          "7671:       }",
          "7672:       if (((bitField0_ & 0x00000002) != 0)) {",
          "7673:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "8117:       if (obj == this) {",
          "8118:        return true;",
          "8119:       }",
          "8121:         return super.equals(obj);",
          "8122:       }",
          "8129:       }",
          "8173:       }",
          "8174:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "8175:       return true;",
          "",
          "[Removed Lines]",
          "8120:       if (!(obj instanceof org.mlflow.api.proto.Service.RunInfo)) {",
          "8123:       org.mlflow.api.proto.Service.RunInfo other = (org.mlflow.api.proto.Service.RunInfo) obj;",
          "8125:       if (hasRunId() != other.hasRunId()) return false;",
          "8126:       if (hasRunId()) {",
          "8127:         if (!getRunId()",
          "8128:             .equals(other.getRunId())) return false;",
          "8130:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "8131:       if (hasRunUuid()) {",
          "8132:         if (!getRunUuid()",
          "8133:             .equals(other.getRunUuid())) return false;",
          "8134:       }",
          "8135:       if (hasRunName() != other.hasRunName()) return false;",
          "8136:       if (hasRunName()) {",
          "8137:         if (!getRunName()",
          "8138:             .equals(other.getRunName())) return false;",
          "8139:       }",
          "8140:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "8141:       if (hasExperimentId()) {",
          "8142:         if (!getExperimentId()",
          "8143:             .equals(other.getExperimentId())) return false;",
          "8144:       }",
          "8145:       if (hasUserId() != other.hasUserId()) return false;",
          "8146:       if (hasUserId()) {",
          "8147:         if (!getUserId()",
          "8148:             .equals(other.getUserId())) return false;",
          "8149:       }",
          "8150:       if (hasStatus() != other.hasStatus()) return false;",
          "8151:       if (hasStatus()) {",
          "8152:         if (status_ != other.status_) return false;",
          "8153:       }",
          "8154:       if (hasStartTime() != other.hasStartTime()) return false;",
          "8155:       if (hasStartTime()) {",
          "8156:         if (getStartTime()",
          "8157:             != other.getStartTime()) return false;",
          "8158:       }",
          "8159:       if (hasEndTime() != other.hasEndTime()) return false;",
          "8160:       if (hasEndTime()) {",
          "8161:         if (getEndTime()",
          "8162:             != other.getEndTime()) return false;",
          "8163:       }",
          "8164:       if (hasArtifactUri() != other.hasArtifactUri()) return false;",
          "8165:       if (hasArtifactUri()) {",
          "8166:         if (!getArtifactUri()",
          "8167:             .equals(other.getArtifactUri())) return false;",
          "8168:       }",
          "8169:       if (hasLifecycleStage() != other.hasLifecycleStage()) return false;",
          "8170:       if (hasLifecycleStage()) {",
          "8171:         if (!getLifecycleStage()",
          "8172:             .equals(other.getLifecycleStage())) return false;",
          "",
          "[Added Lines]",
          "7685:       if (!(obj instanceof org.mlflow.api.proto.Service.ExperimentTag)) {",
          "7688:       org.mlflow.api.proto.Service.ExperimentTag other = (org.mlflow.api.proto.Service.ExperimentTag) obj;",
          "7690:       if (hasKey() != other.hasKey()) return false;",
          "7691:       if (hasKey()) {",
          "7692:         if (!getKey()",
          "7693:             .equals(other.getKey())) return false;",
          "7695:       if (hasValue() != other.hasValue()) return false;",
          "7696:       if (hasValue()) {",
          "7697:         if (!getValue()",
          "7698:             .equals(other.getValue())) return false;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "8182:       }",
          "8183:       int hash = 41;",
          "8184:       hash = (19 * hash) + getDescriptor().hashCode();",
          "8222:       }",
          "8226:       }",
          "8227:       hash = (29 * hash) + unknownFields.hashCode();",
          "8228:       memoizedHashCode = hash;",
          "8229:       return hash;",
          "8230:     }",
          "8233:         java.nio.ByteBuffer data)",
          "8234:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "8235:       return PARSER.parseFrom(data);",
          "8236:     }",
          "8238:         java.nio.ByteBuffer data,",
          "8239:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8240:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "8241:       return PARSER.parseFrom(data, extensionRegistry);",
          "8242:     }",
          "8244:         com.google.protobuf.ByteString data)",
          "8245:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "8246:       return PARSER.parseFrom(data);",
          "8247:     }",
          "8249:         com.google.protobuf.ByteString data,",
          "8250:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8251:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "8252:       return PARSER.parseFrom(data, extensionRegistry);",
          "8253:     }",
          "8255:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "8256:       return PARSER.parseFrom(data);",
          "8257:     }",
          "8259:         byte[] data,",
          "8260:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8261:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "8262:       return PARSER.parseFrom(data, extensionRegistry);",
          "8263:     }",
          "8265:         throws java.io.IOException {",
          "8266:       return com.google.protobuf.GeneratedMessageV3",
          "8267:           .parseWithIOException(PARSER, input);",
          "8268:     }",
          "8270:         java.io.InputStream input,",
          "8271:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8272:         throws java.io.IOException {",
          "8273:       return com.google.protobuf.GeneratedMessageV3",
          "8274:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "8275:     }",
          "8277:         throws java.io.IOException {",
          "8278:       return com.google.protobuf.GeneratedMessageV3",
          "8279:           .parseDelimitedWithIOException(PARSER, input);",
          "8280:     }",
          "8282:         java.io.InputStream input,",
          "8283:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8284:         throws java.io.IOException {",
          "8285:       return com.google.protobuf.GeneratedMessageV3",
          "8286:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "8287:     }",
          "8289:         com.google.protobuf.CodedInputStream input)",
          "8290:         throws java.io.IOException {",
          "8291:       return com.google.protobuf.GeneratedMessageV3",
          "8292:           .parseWithIOException(PARSER, input);",
          "8293:     }",
          "8295:         com.google.protobuf.CodedInputStream input,",
          "8296:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8297:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "8185:       if (hasRunId()) {",
          "8186:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "8187:         hash = (53 * hash) + getRunId().hashCode();",
          "8188:       }",
          "8189:       if (hasRunUuid()) {",
          "8190:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "8191:         hash = (53 * hash) + getRunUuid().hashCode();",
          "8192:       }",
          "8193:       if (hasRunName()) {",
          "8194:         hash = (37 * hash) + RUN_NAME_FIELD_NUMBER;",
          "8195:         hash = (53 * hash) + getRunName().hashCode();",
          "8196:       }",
          "8197:       if (hasExperimentId()) {",
          "8198:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "8199:         hash = (53 * hash) + getExperimentId().hashCode();",
          "8200:       }",
          "8201:       if (hasUserId()) {",
          "8202:         hash = (37 * hash) + USER_ID_FIELD_NUMBER;",
          "8203:         hash = (53 * hash) + getUserId().hashCode();",
          "8204:       }",
          "8205:       if (hasStatus()) {",
          "8206:         hash = (37 * hash) + STATUS_FIELD_NUMBER;",
          "8207:         hash = (53 * hash) + status_;",
          "8208:       }",
          "8209:       if (hasStartTime()) {",
          "8210:         hash = (37 * hash) + START_TIME_FIELD_NUMBER;",
          "8211:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "8212:             getStartTime());",
          "8213:       }",
          "8214:       if (hasEndTime()) {",
          "8215:         hash = (37 * hash) + END_TIME_FIELD_NUMBER;",
          "8216:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "8217:             getEndTime());",
          "8218:       }",
          "8219:       if (hasArtifactUri()) {",
          "8220:         hash = (37 * hash) + ARTIFACT_URI_FIELD_NUMBER;",
          "8221:         hash = (53 * hash) + getArtifactUri().hashCode();",
          "8223:       if (hasLifecycleStage()) {",
          "8224:         hash = (37 * hash) + LIFECYCLE_STAGE_FIELD_NUMBER;",
          "8225:         hash = (53 * hash) + getLifecycleStage().hashCode();",
          "8232:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "8237:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "8243:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "8248:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "8254:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(byte[] data)",
          "8258:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "8264:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(java.io.InputStream input)",
          "8269:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "8276:     public static org.mlflow.api.proto.Service.RunInfo parseDelimitedFrom(java.io.InputStream input)",
          "8281:     public static org.mlflow.api.proto.Service.RunInfo parseDelimitedFrom(",
          "8288:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "8294:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "",
          "[Added Lines]",
          "7711:       if (hasKey()) {",
          "7712:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "7713:         hash = (53 * hash) + getKey().hashCode();",
          "7715:       if (hasValue()) {",
          "7716:         hash = (37 * hash) + VALUE_FIELD_NUMBER;",
          "7717:         hash = (53 * hash) + getValue().hashCode();",
          "7724:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "7729:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "7735:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "7740:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "7746:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(byte[] data)",
          "7750:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "7756:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(java.io.InputStream input)",
          "7761:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "7768:     public static org.mlflow.api.proto.Service.ExperimentTag parseDelimitedFrom(java.io.InputStream input)",
          "7773:     public static org.mlflow.api.proto.Service.ExperimentTag parseDelimitedFrom(",
          "7780:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "7786:     public static org.mlflow.api.proto.Service.ExperimentTag parseFrom(",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "8304:     public static Builder newBuilder() {",
          "8305:       return DEFAULT_INSTANCE.toBuilder();",
          "8306:     }",
          "8308:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "8309:     }",
          "8310:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "8307:     public static Builder newBuilder(org.mlflow.api.proto.Service.RunInfo prototype) {",
          "",
          "[Added Lines]",
          "7799:     public static Builder newBuilder(org.mlflow.api.proto.Service.ExperimentTag prototype) {",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "8321:     }",
          "8329:     public static final class Builder extends",
          "8330:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "8333:       public static final com.google.protobuf.Descriptors.Descriptor",
          "8334:           getDescriptor() {",
          "8336:       }",
          "8338:       @java.lang.Override",
          "8339:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "8340:           internalGetFieldAccessorTable() {",
          "8342:             .ensureFieldAccessorsInitialized(",
          "8344:       }",
          "8347:       private Builder() {",
          "8348:         maybeForceBuilderInitialization();",
          "8349:       }",
          "",
          "[Removed Lines]",
          "8332:         org.mlflow.api.proto.Service.RunInfoOrBuilder {",
          "8335:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_descriptor;",
          "8341:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_fieldAccessorTable",
          "8343:                 org.mlflow.api.proto.Service.RunInfo.class, org.mlflow.api.proto.Service.RunInfo.Builder.class);",
          "",
          "[Added Lines]",
          "7824:         org.mlflow.api.proto.Service.ExperimentTagOrBuilder {",
          "7827:         return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_descriptor;",
          "7833:         return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_fieldAccessorTable",
          "7835:                 org.mlflow.api.proto.Service.ExperimentTag.class, org.mlflow.api.proto.Service.ExperimentTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "8361:       @java.lang.Override",
          "8362:       public Builder clear() {",
          "8363:         super.clear();",
          "8365:         bitField0_ = (bitField0_ & ~0x00000001);",
          "8367:         bitField0_ = (bitField0_ & ~0x00000002);",
          "8384:         return this;",
          "8385:       }",
          "8387:       @java.lang.Override",
          "8388:       public com.google.protobuf.Descriptors.Descriptor",
          "8389:           getDescriptorForType() {",
          "8391:       }",
          "8393:       @java.lang.Override",
          "8396:       }",
          "8398:       @java.lang.Override",
          "8401:         if (!result.isInitialized()) {",
          "8402:           throw newUninitializedMessageException(result);",
          "8403:         }",
          "",
          "[Removed Lines]",
          "8364:         runId_ = \"\";",
          "8366:         runUuid_ = \"\";",
          "8368:         runName_ = \"\";",
          "8369:         bitField0_ = (bitField0_ & ~0x00000004);",
          "8370:         experimentId_ = \"\";",
          "8371:         bitField0_ = (bitField0_ & ~0x00000008);",
          "8372:         userId_ = \"\";",
          "8373:         bitField0_ = (bitField0_ & ~0x00000010);",
          "8374:         status_ = 1;",
          "8375:         bitField0_ = (bitField0_ & ~0x00000020);",
          "8376:         startTime_ = 0L;",
          "8377:         bitField0_ = (bitField0_ & ~0x00000040);",
          "8378:         endTime_ = 0L;",
          "8379:         bitField0_ = (bitField0_ & ~0x00000080);",
          "8380:         artifactUri_ = \"\";",
          "8381:         bitField0_ = (bitField0_ & ~0x00000100);",
          "8382:         lifecycleStage_ = \"\";",
          "8383:         bitField0_ = (bitField0_ & ~0x00000200);",
          "8390:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_descriptor;",
          "8394:       public org.mlflow.api.proto.Service.RunInfo getDefaultInstanceForType() {",
          "8395:         return org.mlflow.api.proto.Service.RunInfo.getDefaultInstance();",
          "8399:       public org.mlflow.api.proto.Service.RunInfo build() {",
          "8400:         org.mlflow.api.proto.Service.RunInfo result = buildPartial();",
          "",
          "[Added Lines]",
          "7856:         key_ = \"\";",
          "7858:         value_ = \"\";",
          "7866:         return org.mlflow.api.proto.Service.internal_static_mlflow_ExperimentTag_descriptor;",
          "7870:       public org.mlflow.api.proto.Service.ExperimentTag getDefaultInstanceForType() {",
          "7871:         return org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance();",
          "7875:       public org.mlflow.api.proto.Service.ExperimentTag build() {",
          "7876:         org.mlflow.api.proto.Service.ExperimentTag result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "8405:       }",
          "8407:       @java.lang.Override",
          "8410:         int from_bitField0_ = bitField0_;",
          "8411:         int to_bitField0_ = 0;",
          "8412:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "8413:           to_bitField0_ |= 0x00000001;",
          "8414:         }",
          "8416:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "8417:           to_bitField0_ |= 0x00000002;",
          "8418:         }",
          "8452:         result.bitField0_ = to_bitField0_;",
          "8453:         onBuilt();",
          "8454:         return result;",
          "",
          "[Removed Lines]",
          "8408:       public org.mlflow.api.proto.Service.RunInfo buildPartial() {",
          "8409:         org.mlflow.api.proto.Service.RunInfo result = new org.mlflow.api.proto.Service.RunInfo(this);",
          "8415:         result.runId_ = runId_;",
          "8419:         result.runUuid_ = runUuid_;",
          "8420:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "8421:           to_bitField0_ |= 0x00000004;",
          "8422:         }",
          "8423:         result.runName_ = runName_;",
          "8424:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "8425:           to_bitField0_ |= 0x00000008;",
          "8426:         }",
          "8427:         result.experimentId_ = experimentId_;",
          "8428:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "8429:           to_bitField0_ |= 0x00000010;",
          "8430:         }",
          "8431:         result.userId_ = userId_;",
          "8432:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "8433:           to_bitField0_ |= 0x00000020;",
          "8434:         }",
          "8435:         result.status_ = status_;",
          "8436:         if (((from_bitField0_ & 0x00000040) != 0)) {",
          "8437:           result.startTime_ = startTime_;",
          "8438:           to_bitField0_ |= 0x00000040;",
          "8439:         }",
          "8440:         if (((from_bitField0_ & 0x00000080) != 0)) {",
          "8441:           result.endTime_ = endTime_;",
          "8442:           to_bitField0_ |= 0x00000080;",
          "8443:         }",
          "8444:         if (((from_bitField0_ & 0x00000100) != 0)) {",
          "8445:           to_bitField0_ |= 0x00000100;",
          "8446:         }",
          "8447:         result.artifactUri_ = artifactUri_;",
          "8448:         if (((from_bitField0_ & 0x00000200) != 0)) {",
          "8449:           to_bitField0_ |= 0x00000200;",
          "8450:         }",
          "8451:         result.lifecycleStage_ = lifecycleStage_;",
          "",
          "[Added Lines]",
          "7884:       public org.mlflow.api.proto.Service.ExperimentTag buildPartial() {",
          "7885:         org.mlflow.api.proto.Service.ExperimentTag result = new org.mlflow.api.proto.Service.ExperimentTag(this);",
          "7891:         result.key_ = key_;",
          "7895:         result.value_ = value_;",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "8488:       }",
          "8489:       @java.lang.Override",
          "8490:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "8493:         } else {",
          "8494:           super.mergeFrom(other);",
          "8495:           return this;",
          "8496:         }",
          "8497:       }",
          "8502:           bitField0_ |= 0x00000001;",
          "8504:           onChanged();",
          "8505:         }",
          "8507:           bitField0_ |= 0x00000002;",
          "8543:           onChanged();",
          "8544:         }",
          "8545:         this.mergeUnknownFields(other.unknownFields);",
          "",
          "[Removed Lines]",
          "8491:         if (other instanceof org.mlflow.api.proto.Service.RunInfo) {",
          "8492:           return mergeFrom((org.mlflow.api.proto.Service.RunInfo)other);",
          "8499:       public Builder mergeFrom(org.mlflow.api.proto.Service.RunInfo other) {",
          "8500:         if (other == org.mlflow.api.proto.Service.RunInfo.getDefaultInstance()) return this;",
          "8501:         if (other.hasRunId()) {",
          "8503:           runId_ = other.runId_;",
          "8506:         if (other.hasRunUuid()) {",
          "8508:           runUuid_ = other.runUuid_;",
          "8509:           onChanged();",
          "8510:         }",
          "8511:         if (other.hasRunName()) {",
          "8512:           bitField0_ |= 0x00000004;",
          "8513:           runName_ = other.runName_;",
          "8514:           onChanged();",
          "8515:         }",
          "8516:         if (other.hasExperimentId()) {",
          "8517:           bitField0_ |= 0x00000008;",
          "8518:           experimentId_ = other.experimentId_;",
          "8519:           onChanged();",
          "8520:         }",
          "8521:         if (other.hasUserId()) {",
          "8522:           bitField0_ |= 0x00000010;",
          "8523:           userId_ = other.userId_;",
          "8524:           onChanged();",
          "8525:         }",
          "8526:         if (other.hasStatus()) {",
          "8527:           setStatus(other.getStatus());",
          "8528:         }",
          "8529:         if (other.hasStartTime()) {",
          "8530:           setStartTime(other.getStartTime());",
          "8531:         }",
          "8532:         if (other.hasEndTime()) {",
          "8533:           setEndTime(other.getEndTime());",
          "8534:         }",
          "8535:         if (other.hasArtifactUri()) {",
          "8536:           bitField0_ |= 0x00000100;",
          "8537:           artifactUri_ = other.artifactUri_;",
          "8538:           onChanged();",
          "8539:         }",
          "8540:         if (other.hasLifecycleStage()) {",
          "8541:           bitField0_ |= 0x00000200;",
          "8542:           lifecycleStage_ = other.lifecycleStage_;",
          "",
          "[Added Lines]",
          "7935:         if (other instanceof org.mlflow.api.proto.Service.ExperimentTag) {",
          "7936:           return mergeFrom((org.mlflow.api.proto.Service.ExperimentTag)other);",
          "7943:       public Builder mergeFrom(org.mlflow.api.proto.Service.ExperimentTag other) {",
          "7944:         if (other == org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance()) return this;",
          "7945:         if (other.hasKey()) {",
          "7947:           key_ = other.key_;",
          "7950:         if (other.hasValue()) {",
          "7952:           value_ = other.value_;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "8557:           com.google.protobuf.CodedInputStream input,",
          "8558:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8559:           throws java.io.IOException {",
          "8561:         try {",
          "8562:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "8563:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "8565:           throw e.unwrapIOException();",
          "8566:         } finally {",
          "8567:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "8560:         org.mlflow.api.proto.Service.RunInfo parsedMessage = null;",
          "8564:           parsedMessage = (org.mlflow.api.proto.Service.RunInfo) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "7970:         org.mlflow.api.proto.Service.ExperimentTag parsedMessage = null;",
          "7974:           parsedMessage = (org.mlflow.api.proto.Service.ExperimentTag) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "8572:       }",
          "8573:       private int bitField0_;",
          "8585:         return ((bitField0_ & 0x00000001) != 0);",
          "8586:       }",
          "8597:         if (!(ref instanceof java.lang.String)) {",
          "8598:           com.google.protobuf.ByteString bs =",
          "8599:               (com.google.protobuf.ByteString) ref;",
          "8600:           java.lang.String s = bs.toStringUtf8();",
          "8601:           if (bs.isValidUtf8()) {",
          "8603:           }",
          "8604:           return s;",
          "8605:         } else {",
          "",
          "[Removed Lines]",
          "8575:       private java.lang.Object runId_ = \"\";",
          "8584:       public boolean hasRunId() {",
          "8595:       public java.lang.String getRunId() {",
          "8596:         java.lang.Object ref = runId_;",
          "8602:             runId_ = s;",
          "",
          "[Added Lines]",
          "7985:       private java.lang.Object key_ = \"\";",
          "7994:       public boolean hasKey() {",
          "8005:       public java.lang.String getKey() {",
          "8006:         java.lang.Object ref = key_;",
          "8012:             key_ = s;",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "8608:       }",
          "8617:       public com.google.protobuf.ByteString",
          "8620:         if (ref instanceof String) {",
          "8621:           com.google.protobuf.ByteString b =",
          "8622:               com.google.protobuf.ByteString.copyFromUtf8(",
          "8623:                   (java.lang.String) ref);",
          "8625:           return b;",
          "8626:         } else {",
          "8627:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "8618:           getRunIdBytes() {",
          "8619:         java.lang.Object ref = runId_;",
          "8624:           runId_ = b;",
          "",
          "[Added Lines]",
          "8028:           getKeyBytes() {",
          "8029:         java.lang.Object ref = key_;",
          "8034:           key_ = b;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "8629:       }",
          "8640:           java.lang.String value) {",
          "8641:         if (value == null) {",
          "8642:     throw new NullPointerException();",
          "8643:   }",
          "8644:   bitField0_ |= 0x00000001;",
          "8646:         onChanged();",
          "8647:         return this;",
          "8648:       }",
          "8658:         bitField0_ = (bitField0_ & ~0x00000001);",
          "8660:         onChanged();",
          "8661:         return this;",
          "8662:       }",
          "8673:           com.google.protobuf.ByteString value) {",
          "8674:         if (value == null) {",
          "8675:     throw new NullPointerException();",
          "8676:   }",
          "8677:   bitField0_ |= 0x00000001;",
          "8679:         onChanged();",
          "8680:         return this;",
          "8681:       }",
          "8694:         return ((bitField0_ & 0x00000002) != 0);",
          "8695:       }",
          "8707:         if (!(ref instanceof java.lang.String)) {",
          "8708:           com.google.protobuf.ByteString bs =",
          "8709:               (com.google.protobuf.ByteString) ref;",
          "8710:           java.lang.String s = bs.toStringUtf8();",
          "8711:           if (bs.isValidUtf8()) {",
          "8713:           }",
          "8714:           return s;",
          "8715:         } else {",
          "",
          "[Removed Lines]",
          "8639:       public Builder setRunId(",
          "8645:         runId_ = value;",
          "8657:       public Builder clearRunId() {",
          "8659:         runId_ = getDefaultInstance().getRunId();",
          "8672:       public Builder setRunIdBytes(",
          "8678:         runId_ = value;",
          "8683:       private java.lang.Object runUuid_ = \"\";",
          "8693:       public boolean hasRunUuid() {",
          "8705:       public java.lang.String getRunUuid() {",
          "8706:         java.lang.Object ref = runUuid_;",
          "8712:             runUuid_ = s;",
          "",
          "[Added Lines]",
          "8049:       public Builder setKey(",
          "8055:         key_ = value;",
          "8067:       public Builder clearKey() {",
          "8069:         key_ = getDefaultInstance().getKey();",
          "8082:       public Builder setKeyBytes(",
          "8088:         key_ = value;",
          "8093:       private java.lang.Object value_ = \"\";",
          "8102:       public boolean hasValue() {",
          "8113:       public java.lang.String getValue() {",
          "8114:         java.lang.Object ref = value_;",
          "8120:             value_ = s;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "8718:       }",
          "8728:       public com.google.protobuf.ByteString",
          "8731:         if (ref instanceof String) {",
          "8732:           com.google.protobuf.ByteString b =",
          "8733:               com.google.protobuf.ByteString.copyFromUtf8(",
          "8734:                   (java.lang.String) ref);",
          "8736:           return b;",
          "8737:         } else {",
          "8738:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "8729:           getRunUuidBytes() {",
          "8730:         java.lang.Object ref = runUuid_;",
          "8735:           runUuid_ = b;",
          "",
          "[Added Lines]",
          "8136:           getValueBytes() {",
          "8137:         java.lang.Object ref = value_;",
          "8142:           value_ = b;",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "8740:       }",
          "8752:           java.lang.String value) {",
          "8753:         if (value == null) {",
          "8754:     throw new NullPointerException();",
          "8755:   }",
          "8756:   bitField0_ |= 0x00000002;",
          "8758:         onChanged();",
          "8759:         return this;",
          "8760:       }",
          "8771:         bitField0_ = (bitField0_ & ~0x00000002);",
          "8773:         onChanged();",
          "8774:         return this;",
          "8775:       }",
          "8787:           com.google.protobuf.ByteString value) {",
          "8788:         if (value == null) {",
          "8789:     throw new NullPointerException();",
          "8790:   }",
          "8791:   bitField0_ |= 0x00000002;",
          "8793:         onChanged();",
          "8794:         return this;",
          "8795:       }",
          "8808:       }",
          "8830:       }",
          "8851:       }",
          "8865:   }",
          "8895:           com.google.protobuf.ByteString value) {",
          "8896:         if (value == null) {",
          "8897:     throw new NullPointerException();",
          "8898:   }",
          "8901:         onChanged();",
          "8902:         return this;",
          "8903:       }",
          "8916:       }",
          "8927:         if (!(ref instanceof java.lang.String)) {",
          "8928:           com.google.protobuf.ByteString bs =",
          "8929:               (com.google.protobuf.ByteString) ref;",
          "8930:           java.lang.String s = bs.toStringUtf8();",
          "8931:           if (bs.isValidUtf8()) {",
          "8933:           }",
          "8934:           return s;",
          "8935:         } else {",
          "",
          "[Removed Lines]",
          "8751:       public Builder setRunUuid(",
          "8757:         runUuid_ = value;",
          "8770:       public Builder clearRunUuid() {",
          "8772:         runUuid_ = getDefaultInstance().getRunUuid();",
          "8786:       public Builder setRunUuidBytes(",
          "8792:         runUuid_ = value;",
          "8797:       private java.lang.Object runName_ = \"\";",
          "8806:       public boolean hasRunName() {",
          "8807:         return ((bitField0_ & 0x00000004) != 0);",
          "8817:       public java.lang.String getRunName() {",
          "8818:         java.lang.Object ref = runName_;",
          "8819:         if (!(ref instanceof java.lang.String)) {",
          "8820:           com.google.protobuf.ByteString bs =",
          "8821:               (com.google.protobuf.ByteString) ref;",
          "8822:           java.lang.String s = bs.toStringUtf8();",
          "8823:           if (bs.isValidUtf8()) {",
          "8824:             runName_ = s;",
          "8825:           }",
          "8826:           return s;",
          "8827:         } else {",
          "8828:           return (java.lang.String) ref;",
          "8829:         }",
          "8839:       public com.google.protobuf.ByteString",
          "8840:           getRunNameBytes() {",
          "8841:         java.lang.Object ref = runName_;",
          "8842:         if (ref instanceof String) {",
          "8843:           com.google.protobuf.ByteString b =",
          "8844:               com.google.protobuf.ByteString.copyFromUtf8(",
          "8845:                   (java.lang.String) ref);",
          "8846:           runName_ = b;",
          "8847:           return b;",
          "8848:         } else {",
          "8849:           return (com.google.protobuf.ByteString) ref;",
          "8850:         }",
          "8861:       public Builder setRunName(",
          "8862:           java.lang.String value) {",
          "8863:         if (value == null) {",
          "8864:     throw new NullPointerException();",
          "8866:   bitField0_ |= 0x00000004;",
          "8867:         runName_ = value;",
          "8868:         onChanged();",
          "8869:         return this;",
          "8870:       }",
          "8879:       public Builder clearRunName() {",
          "8880:         bitField0_ = (bitField0_ & ~0x00000004);",
          "8881:         runName_ = getDefaultInstance().getRunName();",
          "8882:         onChanged();",
          "8883:         return this;",
          "8884:       }",
          "8894:       public Builder setRunNameBytes(",
          "8899:   bitField0_ |= 0x00000004;",
          "8900:         runName_ = value;",
          "8905:       private java.lang.Object experimentId_ = \"\";",
          "8914:       public boolean hasExperimentId() {",
          "8915:         return ((bitField0_ & 0x00000008) != 0);",
          "8925:       public java.lang.String getExperimentId() {",
          "8926:         java.lang.Object ref = experimentId_;",
          "8932:             experimentId_ = s;",
          "",
          "[Added Lines]",
          "8157:       public Builder setValue(",
          "8163:         value_ = value;",
          "8175:       public Builder clearValue() {",
          "8177:         value_ = getDefaultInstance().getValue();",
          "8190:       public Builder setValueBytes(",
          "8196:         value_ = value;",
          "8200:       @java.lang.Override",
          "8201:       public final Builder setUnknownFields(",
          "8202:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "8203:         return super.setUnknownFields(unknownFields);",
          "8206:       @java.lang.Override",
          "8207:       public final Builder mergeUnknownFields(",
          "8208:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "8209:         return super.mergeUnknownFields(unknownFields);",
          "8214:     }",
          "8217:     private static final org.mlflow.api.proto.Service.ExperimentTag DEFAULT_INSTANCE;",
          "8218:     static {",
          "8219:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.ExperimentTag();",
          "8220:     }",
          "8222:     public static org.mlflow.api.proto.Service.ExperimentTag getDefaultInstance() {",
          "8223:       return DEFAULT_INSTANCE;",
          "8224:     }",
          "8226:     @java.lang.Deprecated public static final com.google.protobuf.Parser<ExperimentTag>",
          "8227:         PARSER = new com.google.protobuf.AbstractParser<ExperimentTag>() {",
          "8228:       @java.lang.Override",
          "8229:       public ExperimentTag parsePartialFrom(",
          "8230:           com.google.protobuf.CodedInputStream input,",
          "8231:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8232:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "8233:         return new ExperimentTag(input, extensionRegistry);",
          "8235:     };",
          "8237:     public static com.google.protobuf.Parser<ExperimentTag> parser() {",
          "8238:       return PARSER;",
          "8239:     }",
          "8241:     @java.lang.Override",
          "8242:     public com.google.protobuf.Parser<ExperimentTag> getParserForType() {",
          "8243:       return PARSER;",
          "8244:     }",
          "8246:     @java.lang.Override",
          "8247:     public org.mlflow.api.proto.Service.ExperimentTag getDefaultInstanceForType() {",
          "8248:       return DEFAULT_INSTANCE;",
          "8249:     }",
          "8253:   public interface RunInfoOrBuilder extends",
          "8255:       com.google.protobuf.MessageOrBuilder {",
          "8265:     boolean hasRunId();",
          "8274:     java.lang.String getRunId();",
          "8283:     com.google.protobuf.ByteString",
          "8284:         getRunIdBytes();",
          "8295:     boolean hasRunUuid();",
          "8305:     java.lang.String getRunUuid();",
          "8315:     com.google.protobuf.ByteString",
          "8316:         getRunUuidBytes();",
          "8326:     boolean hasRunName();",
          "8335:     java.lang.String getRunName();",
          "8344:     com.google.protobuf.ByteString",
          "8345:         getRunNameBytes();",
          "8355:     boolean hasExperimentId();",
          "8364:     java.lang.String getExperimentId();",
          "8373:     com.google.protobuf.ByteString",
          "8374:         getExperimentIdBytes();",
          "8386:     boolean hasUserId();",
          "8397:     java.lang.String getUserId();",
          "8408:     com.google.protobuf.ByteString",
          "8409:         getUserIdBytes();",
          "8419:     boolean hasStatus();",
          "8428:     org.mlflow.api.proto.Service.RunStatus getStatus();",
          "8438:     boolean hasStartTime();",
          "8447:     long getStartTime();",
          "8457:     boolean hasEndTime();",
          "8466:     long getEndTime();",
          "8479:     boolean hasArtifactUri();",
          "8491:     java.lang.String getArtifactUri();",
          "8503:     com.google.protobuf.ByteString",
          "8504:         getArtifactUriBytes();",
          "8514:     boolean hasLifecycleStage();",
          "8523:     java.lang.String getLifecycleStage();",
          "8532:     com.google.protobuf.ByteString",
          "8533:         getLifecycleStageBytes();",
          "8534:   }",
          "8542:   public static final class RunInfo extends",
          "8543:       com.google.protobuf.GeneratedMessageV3 implements",
          "8545:       RunInfoOrBuilder {",
          "8546:   private static final long serialVersionUID = 0L;",
          "8548:     private RunInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "8549:       super(builder);",
          "8550:     }",
          "8551:     private RunInfo() {",
          "8552:       runId_ = \"\";",
          "8553:       runUuid_ = \"\";",
          "8554:       runName_ = \"\";",
          "8555:       experimentId_ = \"\";",
          "8556:       userId_ = \"\";",
          "8557:       status_ = 1;",
          "8558:       artifactUri_ = \"\";",
          "8559:       lifecycleStage_ = \"\";",
          "8560:     }",
          "8562:     @java.lang.Override",
          "8563:     @SuppressWarnings({\"unused\"})",
          "8564:     protected java.lang.Object newInstance(",
          "8565:         UnusedPrivateParameter unused) {",
          "8566:       return new RunInfo();",
          "8567:     }",
          "8569:     @java.lang.Override",
          "8570:     public final com.google.protobuf.UnknownFieldSet",
          "8571:     getUnknownFields() {",
          "8572:       return this.unknownFields;",
          "8573:     }",
          "8574:     private RunInfo(",
          "8575:         com.google.protobuf.CodedInputStream input,",
          "8576:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "8577:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "8578:       this();",
          "8579:       if (extensionRegistry == null) {",
          "8580:         throw new java.lang.NullPointerException();",
          "8581:       }",
          "8582:       int mutable_bitField0_ = 0;",
          "8583:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "8584:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "8585:       try {",
          "8586:         boolean done = false;",
          "8587:         while (!done) {",
          "8588:           int tag = input.readTag();",
          "8589:           switch (tag) {",
          "8590:             case 0:",
          "8591:               done = true;",
          "8592:               break;",
          "8593:             case 10: {",
          "8594:               com.google.protobuf.ByteString bs = input.readBytes();",
          "8595:               bitField0_ |= 0x00000002;",
          "8596:               runUuid_ = bs;",
          "8597:               break;",
          "8598:             }",
          "8599:             case 18: {",
          "8600:               com.google.protobuf.ByteString bs = input.readBytes();",
          "8601:               bitField0_ |= 0x00000008;",
          "8602:               experimentId_ = bs;",
          "8603:               break;",
          "8604:             }",
          "8605:             case 26: {",
          "8606:               com.google.protobuf.ByteString bs = input.readBytes();",
          "8607:               bitField0_ |= 0x00000004;",
          "8608:               runName_ = bs;",
          "8609:               break;",
          "8610:             }",
          "8611:             case 50: {",
          "8612:               com.google.protobuf.ByteString bs = input.readBytes();",
          "8613:               bitField0_ |= 0x00000010;",
          "8614:               userId_ = bs;",
          "8615:               break;",
          "8616:             }",
          "8617:             case 56: {",
          "8618:               int rawValue = input.readEnum();",
          "8619:                 @SuppressWarnings(\"deprecation\")",
          "8620:               org.mlflow.api.proto.Service.RunStatus value = org.mlflow.api.proto.Service.RunStatus.valueOf(rawValue);",
          "8621:               if (value == null) {",
          "8622:                 unknownFields.mergeVarintField(7, rawValue);",
          "8623:               } else {",
          "8624:                 bitField0_ |= 0x00000020;",
          "8625:                 status_ = rawValue;",
          "8626:               }",
          "8627:               break;",
          "8628:             }",
          "8629:             case 64: {",
          "8630:               bitField0_ |= 0x00000040;",
          "8631:               startTime_ = input.readInt64();",
          "8632:               break;",
          "8633:             }",
          "8634:             case 72: {",
          "8635:               bitField0_ |= 0x00000080;",
          "8636:               endTime_ = input.readInt64();",
          "8637:               break;",
          "8638:             }",
          "8639:             case 106: {",
          "8640:               com.google.protobuf.ByteString bs = input.readBytes();",
          "8641:               bitField0_ |= 0x00000100;",
          "8642:               artifactUri_ = bs;",
          "8643:               break;",
          "8644:             }",
          "8645:             case 114: {",
          "8646:               com.google.protobuf.ByteString bs = input.readBytes();",
          "8647:               bitField0_ |= 0x00000200;",
          "8648:               lifecycleStage_ = bs;",
          "8649:               break;",
          "8650:             }",
          "8651:             case 122: {",
          "8652:               com.google.protobuf.ByteString bs = input.readBytes();",
          "8653:               bitField0_ |= 0x00000001;",
          "8654:               runId_ = bs;",
          "8655:               break;",
          "8656:             }",
          "8657:             default: {",
          "8658:               if (!parseUnknownField(",
          "8659:                   input, unknownFields, extensionRegistry, tag)) {",
          "8660:                 done = true;",
          "8661:               }",
          "8662:               break;",
          "8663:             }",
          "8664:           }",
          "8665:         }",
          "8666:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "8667:         throw e.setUnfinishedMessage(this);",
          "8668:       } catch (java.io.IOException e) {",
          "8669:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "8670:             e).setUnfinishedMessage(this);",
          "8671:       } finally {",
          "8672:         this.unknownFields = unknownFields.build();",
          "8673:         makeExtensionsImmutable();",
          "8674:       }",
          "8675:     }",
          "8676:     public static final com.google.protobuf.Descriptors.Descriptor",
          "8677:         getDescriptor() {",
          "8678:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_descriptor;",
          "8679:     }",
          "8681:     @java.lang.Override",
          "8682:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "8683:         internalGetFieldAccessorTable() {",
          "8684:       return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_fieldAccessorTable",
          "8685:           .ensureFieldAccessorsInitialized(",
          "8686:               org.mlflow.api.proto.Service.RunInfo.class, org.mlflow.api.proto.Service.RunInfo.Builder.class);",
          "8687:     }",
          "8689:     private int bitField0_;",
          "8690:     public static final int RUN_ID_FIELD_NUMBER = 15;",
          "8691:     private volatile java.lang.Object runId_;",
          "8700:     @java.lang.Override",
          "8701:     public boolean hasRunId() {",
          "8702:       return ((bitField0_ & 0x00000001) != 0);",
          "8703:     }",
          "8712:     @java.lang.Override",
          "8713:     public java.lang.String getRunId() {",
          "8714:       java.lang.Object ref = runId_;",
          "8715:       if (ref instanceof java.lang.String) {",
          "8716:         return (java.lang.String) ref;",
          "8717:       } else {",
          "8718:         com.google.protobuf.ByteString bs =",
          "8719:             (com.google.protobuf.ByteString) ref;",
          "8720:         java.lang.String s = bs.toStringUtf8();",
          "8721:         if (bs.isValidUtf8()) {",
          "8722:           runId_ = s;",
          "8723:         }",
          "8724:         return s;",
          "8725:       }",
          "8726:     }",
          "8735:     @java.lang.Override",
          "8736:     public com.google.protobuf.ByteString",
          "8737:         getRunIdBytes() {",
          "8738:       java.lang.Object ref = runId_;",
          "8739:       if (ref instanceof java.lang.String) {",
          "8740:         com.google.protobuf.ByteString b =",
          "8741:             com.google.protobuf.ByteString.copyFromUtf8(",
          "8742:                 (java.lang.String) ref);",
          "8743:         runId_ = b;",
          "8744:         return b;",
          "8745:       } else {",
          "8746:         return (com.google.protobuf.ByteString) ref;",
          "8747:       }",
          "8748:     }",
          "8750:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "8751:     private volatile java.lang.Object runUuid_;",
          "8761:     @java.lang.Override",
          "8762:     public boolean hasRunUuid() {",
          "8763:       return ((bitField0_ & 0x00000002) != 0);",
          "8764:     }",
          "8774:     @java.lang.Override",
          "8775:     public java.lang.String getRunUuid() {",
          "8776:       java.lang.Object ref = runUuid_;",
          "8777:       if (ref instanceof java.lang.String) {",
          "8778:         return (java.lang.String) ref;",
          "8779:       } else {",
          "8780:         com.google.protobuf.ByteString bs =",
          "8781:             (com.google.protobuf.ByteString) ref;",
          "8782:         java.lang.String s = bs.toStringUtf8();",
          "8783:         if (bs.isValidUtf8()) {",
          "8784:           runUuid_ = s;",
          "8785:         }",
          "8786:         return s;",
          "8787:       }",
          "8788:     }",
          "8798:     @java.lang.Override",
          "8799:     public com.google.protobuf.ByteString",
          "8800:         getRunUuidBytes() {",
          "8801:       java.lang.Object ref = runUuid_;",
          "8802:       if (ref instanceof java.lang.String) {",
          "8803:         com.google.protobuf.ByteString b =",
          "8804:             com.google.protobuf.ByteString.copyFromUtf8(",
          "8805:                 (java.lang.String) ref);",
          "8806:         runUuid_ = b;",
          "8807:         return b;",
          "8808:       } else {",
          "8809:         return (com.google.protobuf.ByteString) ref;",
          "8810:       }",
          "8811:     }",
          "8813:     public static final int RUN_NAME_FIELD_NUMBER = 3;",
          "8814:     private volatile java.lang.Object runName_;",
          "8823:     @java.lang.Override",
          "8824:     public boolean hasRunName() {",
          "8825:       return ((bitField0_ & 0x00000004) != 0);",
          "8826:     }",
          "8835:     @java.lang.Override",
          "8836:     public java.lang.String getRunName() {",
          "8837:       java.lang.Object ref = runName_;",
          "8838:       if (ref instanceof java.lang.String) {",
          "8839:         return (java.lang.String) ref;",
          "8840:       } else {",
          "8841:         com.google.protobuf.ByteString bs =",
          "8842:             (com.google.protobuf.ByteString) ref;",
          "8843:         java.lang.String s = bs.toStringUtf8();",
          "8844:         if (bs.isValidUtf8()) {",
          "8845:           runName_ = s;",
          "8846:         }",
          "8847:         return s;",
          "8848:       }",
          "8849:     }",
          "8858:     @java.lang.Override",
          "8859:     public com.google.protobuf.ByteString",
          "8860:         getRunNameBytes() {",
          "8861:       java.lang.Object ref = runName_;",
          "8862:       if (ref instanceof java.lang.String) {",
          "8863:         com.google.protobuf.ByteString b =",
          "8864:             com.google.protobuf.ByteString.copyFromUtf8(",
          "8865:                 (java.lang.String) ref);",
          "8866:         runName_ = b;",
          "8867:         return b;",
          "8868:       } else {",
          "8869:         return (com.google.protobuf.ByteString) ref;",
          "8870:       }",
          "8871:     }",
          "8873:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 2;",
          "8874:     private volatile java.lang.Object experimentId_;",
          "8883:     @java.lang.Override",
          "8884:     public boolean hasExperimentId() {",
          "8885:       return ((bitField0_ & 0x00000008) != 0);",
          "8886:     }",
          "8895:     @java.lang.Override",
          "8896:     public java.lang.String getExperimentId() {",
          "8897:       java.lang.Object ref = experimentId_;",
          "8898:       if (ref instanceof java.lang.String) {",
          "8899:         return (java.lang.String) ref;",
          "8900:       } else {",
          "8901:         com.google.protobuf.ByteString bs =",
          "8902:             (com.google.protobuf.ByteString) ref;",
          "8903:         java.lang.String s = bs.toStringUtf8();",
          "8904:         if (bs.isValidUtf8()) {",
          "8905:           experimentId_ = s;",
          "8906:         }",
          "8907:         return s;",
          "8908:       }",
          "8909:     }",
          "8918:     @java.lang.Override",
          "8919:     public com.google.protobuf.ByteString",
          "8920:         getExperimentIdBytes() {",
          "8921:       java.lang.Object ref = experimentId_;",
          "8922:       if (ref instanceof java.lang.String) {",
          "8923:         com.google.protobuf.ByteString b =",
          "8924:             com.google.protobuf.ByteString.copyFromUtf8(",
          "8925:                 (java.lang.String) ref);",
          "8926:         experimentId_ = b;",
          "8927:         return b;",
          "8928:       } else {",
          "8929:         return (com.google.protobuf.ByteString) ref;",
          "8930:       }",
          "8931:     }",
          "8933:     public static final int USER_ID_FIELD_NUMBER = 6;",
          "8934:     private volatile java.lang.Object userId_;",
          "8945:     @java.lang.Override",
          "8946:     public boolean hasUserId() {",
          "8947:       return ((bitField0_ & 0x00000010) != 0);",
          "8948:     }",
          "8959:     @java.lang.Override",
          "8960:     public java.lang.String getUserId() {",
          "8961:       java.lang.Object ref = userId_;",
          "8962:       if (ref instanceof java.lang.String) {",
          "8963:         return (java.lang.String) ref;",
          "8964:       } else {",
          "8965:         com.google.protobuf.ByteString bs =",
          "8966:             (com.google.protobuf.ByteString) ref;",
          "8967:         java.lang.String s = bs.toStringUtf8();",
          "8968:         if (bs.isValidUtf8()) {",
          "8969:           userId_ = s;",
          "8970:         }",
          "8971:         return s;",
          "8972:       }",
          "8973:     }",
          "8984:     @java.lang.Override",
          "8985:     public com.google.protobuf.ByteString",
          "8986:         getUserIdBytes() {",
          "8987:       java.lang.Object ref = userId_;",
          "8988:       if (ref instanceof java.lang.String) {",
          "8989:         com.google.protobuf.ByteString b =",
          "8990:             com.google.protobuf.ByteString.copyFromUtf8(",
          "8991:                 (java.lang.String) ref);",
          "8992:         userId_ = b;",
          "8993:         return b;",
          "8994:       } else {",
          "8995:         return (com.google.protobuf.ByteString) ref;",
          "8996:       }",
          "8997:     }",
          "8999:     public static final int STATUS_FIELD_NUMBER = 7;",
          "9000:     private int status_;",
          "9009:     @java.lang.Override public boolean hasStatus() {",
          "9010:       return ((bitField0_ & 0x00000020) != 0);",
          "9011:     }",
          "9020:     @java.lang.Override public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "9021:       @SuppressWarnings(\"deprecation\")",
          "9022:       org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "9023:       return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "9024:     }",
          "9026:     public static final int START_TIME_FIELD_NUMBER = 8;",
          "9027:     private long startTime_;",
          "9036:     @java.lang.Override",
          "9037:     public boolean hasStartTime() {",
          "9038:       return ((bitField0_ & 0x00000040) != 0);",
          "9039:     }",
          "9048:     @java.lang.Override",
          "9049:     public long getStartTime() {",
          "9050:       return startTime_;",
          "9051:     }",
          "9053:     public static final int END_TIME_FIELD_NUMBER = 9;",
          "9054:     private long endTime_;",
          "9063:     @java.lang.Override",
          "9064:     public boolean hasEndTime() {",
          "9065:       return ((bitField0_ & 0x00000080) != 0);",
          "9066:     }",
          "9075:     @java.lang.Override",
          "9076:     public long getEndTime() {",
          "9077:       return endTime_;",
          "9078:     }",
          "9080:     public static final int ARTIFACT_URI_FIELD_NUMBER = 13;",
          "9081:     private volatile java.lang.Object artifactUri_;",
          "9093:     @java.lang.Override",
          "9094:     public boolean hasArtifactUri() {",
          "9095:       return ((bitField0_ & 0x00000100) != 0);",
          "9096:     }",
          "9108:     @java.lang.Override",
          "9109:     public java.lang.String getArtifactUri() {",
          "9110:       java.lang.Object ref = artifactUri_;",
          "9111:       if (ref instanceof java.lang.String) {",
          "9112:         return (java.lang.String) ref;",
          "9113:       } else {",
          "9114:         com.google.protobuf.ByteString bs =",
          "9115:             (com.google.protobuf.ByteString) ref;",
          "9116:         java.lang.String s = bs.toStringUtf8();",
          "9117:         if (bs.isValidUtf8()) {",
          "9118:           artifactUri_ = s;",
          "9119:         }",
          "9120:         return s;",
          "9121:       }",
          "9122:     }",
          "9134:     @java.lang.Override",
          "9135:     public com.google.protobuf.ByteString",
          "9136:         getArtifactUriBytes() {",
          "9137:       java.lang.Object ref = artifactUri_;",
          "9138:       if (ref instanceof java.lang.String) {",
          "9139:         com.google.protobuf.ByteString b =",
          "9140:             com.google.protobuf.ByteString.copyFromUtf8(",
          "9141:                 (java.lang.String) ref);",
          "9142:         artifactUri_ = b;",
          "9143:         return b;",
          "9144:       } else {",
          "9145:         return (com.google.protobuf.ByteString) ref;",
          "9146:       }",
          "9147:     }",
          "9149:     public static final int LIFECYCLE_STAGE_FIELD_NUMBER = 14;",
          "9150:     private volatile java.lang.Object lifecycleStage_;",
          "9159:     @java.lang.Override",
          "9160:     public boolean hasLifecycleStage() {",
          "9161:       return ((bitField0_ & 0x00000200) != 0);",
          "9162:     }",
          "9171:     @java.lang.Override",
          "9172:     public java.lang.String getLifecycleStage() {",
          "9173:       java.lang.Object ref = lifecycleStage_;",
          "9174:       if (ref instanceof java.lang.String) {",
          "9175:         return (java.lang.String) ref;",
          "9176:       } else {",
          "9177:         com.google.protobuf.ByteString bs =",
          "9178:             (com.google.protobuf.ByteString) ref;",
          "9179:         java.lang.String s = bs.toStringUtf8();",
          "9180:         if (bs.isValidUtf8()) {",
          "9181:           lifecycleStage_ = s;",
          "9182:         }",
          "9183:         return s;",
          "9184:       }",
          "9185:     }",
          "9194:     @java.lang.Override",
          "9195:     public com.google.protobuf.ByteString",
          "9196:         getLifecycleStageBytes() {",
          "9197:       java.lang.Object ref = lifecycleStage_;",
          "9198:       if (ref instanceof java.lang.String) {",
          "9199:         com.google.protobuf.ByteString b =",
          "9200:             com.google.protobuf.ByteString.copyFromUtf8(",
          "9201:                 (java.lang.String) ref);",
          "9202:         lifecycleStage_ = b;",
          "9203:         return b;",
          "9204:       } else {",
          "9205:         return (com.google.protobuf.ByteString) ref;",
          "9206:       }",
          "9207:     }",
          "9209:     private byte memoizedIsInitialized = -1;",
          "9210:     @java.lang.Override",
          "9211:     public final boolean isInitialized() {",
          "9212:       byte isInitialized = memoizedIsInitialized;",
          "9213:       if (isInitialized == 1) return true;",
          "9214:       if (isInitialized == 0) return false;",
          "9216:       memoizedIsInitialized = 1;",
          "9217:       return true;",
          "9218:     }",
          "9220:     @java.lang.Override",
          "9221:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "9222:                         throws java.io.IOException {",
          "9223:       if (((bitField0_ & 0x00000002) != 0)) {",
          "9224:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "9225:       }",
          "9226:       if (((bitField0_ & 0x00000008) != 0)) {",
          "9227:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, experimentId_);",
          "9228:       }",
          "9229:       if (((bitField0_ & 0x00000004) != 0)) {",
          "9230:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runName_);",
          "9231:       }",
          "9232:       if (((bitField0_ & 0x00000010) != 0)) {",
          "9233:         com.google.protobuf.GeneratedMessageV3.writeString(output, 6, userId_);",
          "9234:       }",
          "9235:       if (((bitField0_ & 0x00000020) != 0)) {",
          "9236:         output.writeEnum(7, status_);",
          "9237:       }",
          "9238:       if (((bitField0_ & 0x00000040) != 0)) {",
          "9239:         output.writeInt64(8, startTime_);",
          "9240:       }",
          "9241:       if (((bitField0_ & 0x00000080) != 0)) {",
          "9242:         output.writeInt64(9, endTime_);",
          "9243:       }",
          "9244:       if (((bitField0_ & 0x00000100) != 0)) {",
          "9245:         com.google.protobuf.GeneratedMessageV3.writeString(output, 13, artifactUri_);",
          "9246:       }",
          "9247:       if (((bitField0_ & 0x00000200) != 0)) {",
          "9248:         com.google.protobuf.GeneratedMessageV3.writeString(output, 14, lifecycleStage_);",
          "9249:       }",
          "9250:       if (((bitField0_ & 0x00000001) != 0)) {",
          "9251:         com.google.protobuf.GeneratedMessageV3.writeString(output, 15, runId_);",
          "9252:       }",
          "9253:       unknownFields.writeTo(output);",
          "9254:     }",
          "9256:     @java.lang.Override",
          "9257:     public int getSerializedSize() {",
          "9258:       int size = memoizedSize;",
          "9259:       if (size != -1) return size;",
          "9261:       size = 0;",
          "9262:       if (((bitField0_ & 0x00000002) != 0)) {",
          "9263:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "9264:       }",
          "9265:       if (((bitField0_ & 0x00000008) != 0)) {",
          "9266:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, experimentId_);",
          "9267:       }",
          "9268:       if (((bitField0_ & 0x00000004) != 0)) {",
          "9269:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runName_);",
          "9270:       }",
          "9271:       if (((bitField0_ & 0x00000010) != 0)) {",
          "9272:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, userId_);",
          "9273:       }",
          "9274:       if (((bitField0_ & 0x00000020) != 0)) {",
          "9275:         size += com.google.protobuf.CodedOutputStream",
          "9276:           .computeEnumSize(7, status_);",
          "9277:       }",
          "9278:       if (((bitField0_ & 0x00000040) != 0)) {",
          "9279:         size += com.google.protobuf.CodedOutputStream",
          "9280:           .computeInt64Size(8, startTime_);",
          "9281:       }",
          "9282:       if (((bitField0_ & 0x00000080) != 0)) {",
          "9283:         size += com.google.protobuf.CodedOutputStream",
          "9284:           .computeInt64Size(9, endTime_);",
          "9285:       }",
          "9286:       if (((bitField0_ & 0x00000100) != 0)) {",
          "9287:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, artifactUri_);",
          "9288:       }",
          "9289:       if (((bitField0_ & 0x00000200) != 0)) {",
          "9290:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, lifecycleStage_);",
          "9291:       }",
          "9292:       if (((bitField0_ & 0x00000001) != 0)) {",
          "9293:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, runId_);",
          "9294:       }",
          "9295:       size += unknownFields.getSerializedSize();",
          "9296:       memoizedSize = size;",
          "9297:       return size;",
          "9298:     }",
          "9300:     @java.lang.Override",
          "9301:     public boolean equals(final java.lang.Object obj) {",
          "9302:       if (obj == this) {",
          "9303:        return true;",
          "9304:       }",
          "9305:       if (!(obj instanceof org.mlflow.api.proto.Service.RunInfo)) {",
          "9306:         return super.equals(obj);",
          "9307:       }",
          "9308:       org.mlflow.api.proto.Service.RunInfo other = (org.mlflow.api.proto.Service.RunInfo) obj;",
          "9310:       if (hasRunId() != other.hasRunId()) return false;",
          "9311:       if (hasRunId()) {",
          "9312:         if (!getRunId()",
          "9313:             .equals(other.getRunId())) return false;",
          "9314:       }",
          "9315:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "9316:       if (hasRunUuid()) {",
          "9317:         if (!getRunUuid()",
          "9318:             .equals(other.getRunUuid())) return false;",
          "9319:       }",
          "9320:       if (hasRunName() != other.hasRunName()) return false;",
          "9321:       if (hasRunName()) {",
          "9322:         if (!getRunName()",
          "9323:             .equals(other.getRunName())) return false;",
          "9324:       }",
          "9325:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "9326:       if (hasExperimentId()) {",
          "9327:         if (!getExperimentId()",
          "9328:             .equals(other.getExperimentId())) return false;",
          "9329:       }",
          "9330:       if (hasUserId() != other.hasUserId()) return false;",
          "9331:       if (hasUserId()) {",
          "9332:         if (!getUserId()",
          "9333:             .equals(other.getUserId())) return false;",
          "9334:       }",
          "9335:       if (hasStatus() != other.hasStatus()) return false;",
          "9336:       if (hasStatus()) {",
          "9337:         if (status_ != other.status_) return false;",
          "9338:       }",
          "9339:       if (hasStartTime() != other.hasStartTime()) return false;",
          "9340:       if (hasStartTime()) {",
          "9341:         if (getStartTime()",
          "9342:             != other.getStartTime()) return false;",
          "9343:       }",
          "9344:       if (hasEndTime() != other.hasEndTime()) return false;",
          "9345:       if (hasEndTime()) {",
          "9346:         if (getEndTime()",
          "9347:             != other.getEndTime()) return false;",
          "9348:       }",
          "9349:       if (hasArtifactUri() != other.hasArtifactUri()) return false;",
          "9350:       if (hasArtifactUri()) {",
          "9351:         if (!getArtifactUri()",
          "9352:             .equals(other.getArtifactUri())) return false;",
          "9353:       }",
          "9354:       if (hasLifecycleStage() != other.hasLifecycleStage()) return false;",
          "9355:       if (hasLifecycleStage()) {",
          "9356:         if (!getLifecycleStage()",
          "9357:             .equals(other.getLifecycleStage())) return false;",
          "9358:       }",
          "9359:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "9360:       return true;",
          "9361:     }",
          "9363:     @java.lang.Override",
          "9364:     public int hashCode() {",
          "9365:       if (memoizedHashCode != 0) {",
          "9366:         return memoizedHashCode;",
          "9367:       }",
          "9368:       int hash = 41;",
          "9369:       hash = (19 * hash) + getDescriptor().hashCode();",
          "9370:       if (hasRunId()) {",
          "9371:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "9372:         hash = (53 * hash) + getRunId().hashCode();",
          "9373:       }",
          "9374:       if (hasRunUuid()) {",
          "9375:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "9376:         hash = (53 * hash) + getRunUuid().hashCode();",
          "9377:       }",
          "9378:       if (hasRunName()) {",
          "9379:         hash = (37 * hash) + RUN_NAME_FIELD_NUMBER;",
          "9380:         hash = (53 * hash) + getRunName().hashCode();",
          "9381:       }",
          "9382:       if (hasExperimentId()) {",
          "9383:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "9384:         hash = (53 * hash) + getExperimentId().hashCode();",
          "9385:       }",
          "9386:       if (hasUserId()) {",
          "9387:         hash = (37 * hash) + USER_ID_FIELD_NUMBER;",
          "9388:         hash = (53 * hash) + getUserId().hashCode();",
          "9389:       }",
          "9390:       if (hasStatus()) {",
          "9391:         hash = (37 * hash) + STATUS_FIELD_NUMBER;",
          "9392:         hash = (53 * hash) + status_;",
          "9393:       }",
          "9394:       if (hasStartTime()) {",
          "9395:         hash = (37 * hash) + START_TIME_FIELD_NUMBER;",
          "9396:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "9397:             getStartTime());",
          "9398:       }",
          "9399:       if (hasEndTime()) {",
          "9400:         hash = (37 * hash) + END_TIME_FIELD_NUMBER;",
          "9401:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "9402:             getEndTime());",
          "9403:       }",
          "9404:       if (hasArtifactUri()) {",
          "9405:         hash = (37 * hash) + ARTIFACT_URI_FIELD_NUMBER;",
          "9406:         hash = (53 * hash) + getArtifactUri().hashCode();",
          "9407:       }",
          "9408:       if (hasLifecycleStage()) {",
          "9409:         hash = (37 * hash) + LIFECYCLE_STAGE_FIELD_NUMBER;",
          "9410:         hash = (53 * hash) + getLifecycleStage().hashCode();",
          "9411:       }",
          "9412:       hash = (29 * hash) + unknownFields.hashCode();",
          "9413:       memoizedHashCode = hash;",
          "9414:       return hash;",
          "9415:     }",
          "9417:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9418:         java.nio.ByteBuffer data)",
          "9419:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "9420:       return PARSER.parseFrom(data);",
          "9421:     }",
          "9422:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9423:         java.nio.ByteBuffer data,",
          "9424:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9425:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "9426:       return PARSER.parseFrom(data, extensionRegistry);",
          "9427:     }",
          "9428:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9429:         com.google.protobuf.ByteString data)",
          "9430:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "9431:       return PARSER.parseFrom(data);",
          "9432:     }",
          "9433:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9434:         com.google.protobuf.ByteString data,",
          "9435:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9436:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "9437:       return PARSER.parseFrom(data, extensionRegistry);",
          "9438:     }",
          "9439:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(byte[] data)",
          "9440:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "9441:       return PARSER.parseFrom(data);",
          "9442:     }",
          "9443:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9444:         byte[] data,",
          "9445:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9446:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "9447:       return PARSER.parseFrom(data, extensionRegistry);",
          "9448:     }",
          "9449:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(java.io.InputStream input)",
          "9450:         throws java.io.IOException {",
          "9451:       return com.google.protobuf.GeneratedMessageV3",
          "9452:           .parseWithIOException(PARSER, input);",
          "9453:     }",
          "9454:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9455:         java.io.InputStream input,",
          "9456:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9457:         throws java.io.IOException {",
          "9458:       return com.google.protobuf.GeneratedMessageV3",
          "9459:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "9460:     }",
          "9461:     public static org.mlflow.api.proto.Service.RunInfo parseDelimitedFrom(java.io.InputStream input)",
          "9462:         throws java.io.IOException {",
          "9463:       return com.google.protobuf.GeneratedMessageV3",
          "9464:           .parseDelimitedWithIOException(PARSER, input);",
          "9465:     }",
          "9466:     public static org.mlflow.api.proto.Service.RunInfo parseDelimitedFrom(",
          "9467:         java.io.InputStream input,",
          "9468:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9469:         throws java.io.IOException {",
          "9470:       return com.google.protobuf.GeneratedMessageV3",
          "9471:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "9472:     }",
          "9473:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9474:         com.google.protobuf.CodedInputStream input)",
          "9475:         throws java.io.IOException {",
          "9476:       return com.google.protobuf.GeneratedMessageV3",
          "9477:           .parseWithIOException(PARSER, input);",
          "9478:     }",
          "9479:     public static org.mlflow.api.proto.Service.RunInfo parseFrom(",
          "9480:         com.google.protobuf.CodedInputStream input,",
          "9481:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9482:         throws java.io.IOException {",
          "9483:       return com.google.protobuf.GeneratedMessageV3",
          "9484:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "9485:     }",
          "9487:     @java.lang.Override",
          "9488:     public Builder newBuilderForType() { return newBuilder(); }",
          "9489:     public static Builder newBuilder() {",
          "9490:       return DEFAULT_INSTANCE.toBuilder();",
          "9491:     }",
          "9492:     public static Builder newBuilder(org.mlflow.api.proto.Service.RunInfo prototype) {",
          "9493:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "9494:     }",
          "9495:     @java.lang.Override",
          "9496:     public Builder toBuilder() {",
          "9497:       return this == DEFAULT_INSTANCE",
          "9498:           ? new Builder() : new Builder().mergeFrom(this);",
          "9499:     }",
          "9501:     @java.lang.Override",
          "9502:     protected Builder newBuilderForType(",
          "9503:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "9504:       Builder builder = new Builder(parent);",
          "9505:       return builder;",
          "9506:     }",
          "9514:     public static final class Builder extends",
          "9515:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "9517:         org.mlflow.api.proto.Service.RunInfoOrBuilder {",
          "9518:       public static final com.google.protobuf.Descriptors.Descriptor",
          "9519:           getDescriptor() {",
          "9520:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_descriptor;",
          "9521:       }",
          "9523:       @java.lang.Override",
          "9524:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "9525:           internalGetFieldAccessorTable() {",
          "9526:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_fieldAccessorTable",
          "9527:             .ensureFieldAccessorsInitialized(",
          "9528:                 org.mlflow.api.proto.Service.RunInfo.class, org.mlflow.api.proto.Service.RunInfo.Builder.class);",
          "9529:       }",
          "9532:       private Builder() {",
          "9533:         maybeForceBuilderInitialization();",
          "9534:       }",
          "9536:       private Builder(",
          "9537:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "9538:         super(parent);",
          "9539:         maybeForceBuilderInitialization();",
          "9540:       }",
          "9541:       private void maybeForceBuilderInitialization() {",
          "9542:         if (com.google.protobuf.GeneratedMessageV3",
          "9543:                 .alwaysUseFieldBuilders) {",
          "9544:         }",
          "9545:       }",
          "9546:       @java.lang.Override",
          "9547:       public Builder clear() {",
          "9548:         super.clear();",
          "9549:         runId_ = \"\";",
          "9550:         bitField0_ = (bitField0_ & ~0x00000001);",
          "9551:         runUuid_ = \"\";",
          "9552:         bitField0_ = (bitField0_ & ~0x00000002);",
          "9553:         runName_ = \"\";",
          "9554:         bitField0_ = (bitField0_ & ~0x00000004);",
          "9555:         experimentId_ = \"\";",
          "9556:         bitField0_ = (bitField0_ & ~0x00000008);",
          "9557:         userId_ = \"\";",
          "9558:         bitField0_ = (bitField0_ & ~0x00000010);",
          "9559:         status_ = 1;",
          "9560:         bitField0_ = (bitField0_ & ~0x00000020);",
          "9561:         startTime_ = 0L;",
          "9562:         bitField0_ = (bitField0_ & ~0x00000040);",
          "9563:         endTime_ = 0L;",
          "9564:         bitField0_ = (bitField0_ & ~0x00000080);",
          "9565:         artifactUri_ = \"\";",
          "9566:         bitField0_ = (bitField0_ & ~0x00000100);",
          "9567:         lifecycleStage_ = \"\";",
          "9568:         bitField0_ = (bitField0_ & ~0x00000200);",
          "9569:         return this;",
          "9570:       }",
          "9572:       @java.lang.Override",
          "9573:       public com.google.protobuf.Descriptors.Descriptor",
          "9574:           getDescriptorForType() {",
          "9575:         return org.mlflow.api.proto.Service.internal_static_mlflow_RunInfo_descriptor;",
          "9576:       }",
          "9578:       @java.lang.Override",
          "9579:       public org.mlflow.api.proto.Service.RunInfo getDefaultInstanceForType() {",
          "9580:         return org.mlflow.api.proto.Service.RunInfo.getDefaultInstance();",
          "9581:       }",
          "9583:       @java.lang.Override",
          "9584:       public org.mlflow.api.proto.Service.RunInfo build() {",
          "9585:         org.mlflow.api.proto.Service.RunInfo result = buildPartial();",
          "9586:         if (!result.isInitialized()) {",
          "9587:           throw newUninitializedMessageException(result);",
          "9588:         }",
          "9589:         return result;",
          "9590:       }",
          "9592:       @java.lang.Override",
          "9593:       public org.mlflow.api.proto.Service.RunInfo buildPartial() {",
          "9594:         org.mlflow.api.proto.Service.RunInfo result = new org.mlflow.api.proto.Service.RunInfo(this);",
          "9595:         int from_bitField0_ = bitField0_;",
          "9596:         int to_bitField0_ = 0;",
          "9597:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "9598:           to_bitField0_ |= 0x00000001;",
          "9599:         }",
          "9600:         result.runId_ = runId_;",
          "9601:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "9602:           to_bitField0_ |= 0x00000002;",
          "9603:         }",
          "9604:         result.runUuid_ = runUuid_;",
          "9605:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "9606:           to_bitField0_ |= 0x00000004;",
          "9607:         }",
          "9608:         result.runName_ = runName_;",
          "9609:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "9610:           to_bitField0_ |= 0x00000008;",
          "9611:         }",
          "9612:         result.experimentId_ = experimentId_;",
          "9613:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "9614:           to_bitField0_ |= 0x00000010;",
          "9615:         }",
          "9616:         result.userId_ = userId_;",
          "9617:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "9618:           to_bitField0_ |= 0x00000020;",
          "9619:         }",
          "9620:         result.status_ = status_;",
          "9621:         if (((from_bitField0_ & 0x00000040) != 0)) {",
          "9622:           result.startTime_ = startTime_;",
          "9623:           to_bitField0_ |= 0x00000040;",
          "9624:         }",
          "9625:         if (((from_bitField0_ & 0x00000080) != 0)) {",
          "9626:           result.endTime_ = endTime_;",
          "9627:           to_bitField0_ |= 0x00000080;",
          "9628:         }",
          "9629:         if (((from_bitField0_ & 0x00000100) != 0)) {",
          "9630:           to_bitField0_ |= 0x00000100;",
          "9631:         }",
          "9632:         result.artifactUri_ = artifactUri_;",
          "9633:         if (((from_bitField0_ & 0x00000200) != 0)) {",
          "9634:           to_bitField0_ |= 0x00000200;",
          "9635:         }",
          "9636:         result.lifecycleStage_ = lifecycleStage_;",
          "9637:         result.bitField0_ = to_bitField0_;",
          "9638:         onBuilt();",
          "9639:         return result;",
          "9640:       }",
          "9642:       @java.lang.Override",
          "9643:       public Builder clone() {",
          "9644:         return super.clone();",
          "9645:       }",
          "9646:       @java.lang.Override",
          "9647:       public Builder setField(",
          "9648:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "9649:           java.lang.Object value) {",
          "9650:         return super.setField(field, value);",
          "9651:       }",
          "9652:       @java.lang.Override",
          "9653:       public Builder clearField(",
          "9654:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "9655:         return super.clearField(field);",
          "9656:       }",
          "9657:       @java.lang.Override",
          "9658:       public Builder clearOneof(",
          "9659:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "9660:         return super.clearOneof(oneof);",
          "9661:       }",
          "9662:       @java.lang.Override",
          "9663:       public Builder setRepeatedField(",
          "9664:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "9665:           int index, java.lang.Object value) {",
          "9666:         return super.setRepeatedField(field, index, value);",
          "9667:       }",
          "9668:       @java.lang.Override",
          "9669:       public Builder addRepeatedField(",
          "9670:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "9671:           java.lang.Object value) {",
          "9672:         return super.addRepeatedField(field, value);",
          "9673:       }",
          "9674:       @java.lang.Override",
          "9675:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "9676:         if (other instanceof org.mlflow.api.proto.Service.RunInfo) {",
          "9677:           return mergeFrom((org.mlflow.api.proto.Service.RunInfo)other);",
          "9678:         } else {",
          "9679:           super.mergeFrom(other);",
          "9680:           return this;",
          "9681:         }",
          "9682:       }",
          "9684:       public Builder mergeFrom(org.mlflow.api.proto.Service.RunInfo other) {",
          "9685:         if (other == org.mlflow.api.proto.Service.RunInfo.getDefaultInstance()) return this;",
          "9686:         if (other.hasRunId()) {",
          "9687:           bitField0_ |= 0x00000001;",
          "9688:           runId_ = other.runId_;",
          "9689:           onChanged();",
          "9690:         }",
          "9691:         if (other.hasRunUuid()) {",
          "9692:           bitField0_ |= 0x00000002;",
          "9693:           runUuid_ = other.runUuid_;",
          "9694:           onChanged();",
          "9695:         }",
          "9696:         if (other.hasRunName()) {",
          "9697:           bitField0_ |= 0x00000004;",
          "9698:           runName_ = other.runName_;",
          "9699:           onChanged();",
          "9700:         }",
          "9701:         if (other.hasExperimentId()) {",
          "9702:           bitField0_ |= 0x00000008;",
          "9703:           experimentId_ = other.experimentId_;",
          "9704:           onChanged();",
          "9705:         }",
          "9706:         if (other.hasUserId()) {",
          "9707:           bitField0_ |= 0x00000010;",
          "9708:           userId_ = other.userId_;",
          "9709:           onChanged();",
          "9710:         }",
          "9711:         if (other.hasStatus()) {",
          "9712:           setStatus(other.getStatus());",
          "9713:         }",
          "9714:         if (other.hasStartTime()) {",
          "9715:           setStartTime(other.getStartTime());",
          "9716:         }",
          "9717:         if (other.hasEndTime()) {",
          "9718:           setEndTime(other.getEndTime());",
          "9719:         }",
          "9720:         if (other.hasArtifactUri()) {",
          "9721:           bitField0_ |= 0x00000100;",
          "9722:           artifactUri_ = other.artifactUri_;",
          "9723:           onChanged();",
          "9724:         }",
          "9725:         if (other.hasLifecycleStage()) {",
          "9726:           bitField0_ |= 0x00000200;",
          "9727:           lifecycleStage_ = other.lifecycleStage_;",
          "9728:           onChanged();",
          "9729:         }",
          "9730:         this.mergeUnknownFields(other.unknownFields);",
          "9731:         onChanged();",
          "9732:         return this;",
          "9733:       }",
          "9735:       @java.lang.Override",
          "9736:       public final boolean isInitialized() {",
          "9737:         return true;",
          "9738:       }",
          "9740:       @java.lang.Override",
          "9741:       public Builder mergeFrom(",
          "9742:           com.google.protobuf.CodedInputStream input,",
          "9743:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9744:           throws java.io.IOException {",
          "9745:         org.mlflow.api.proto.Service.RunInfo parsedMessage = null;",
          "9746:         try {",
          "9747:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "9748:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "9749:           parsedMessage = (org.mlflow.api.proto.Service.RunInfo) e.getUnfinishedMessage();",
          "9750:           throw e.unwrapIOException();",
          "9751:         } finally {",
          "9752:           if (parsedMessage != null) {",
          "9753:             mergeFrom(parsedMessage);",
          "9754:           }",
          "9755:         }",
          "9756:         return this;",
          "9757:       }",
          "9758:       private int bitField0_;",
          "9760:       private java.lang.Object runId_ = \"\";",
          "9769:       public boolean hasRunId() {",
          "9770:         return ((bitField0_ & 0x00000001) != 0);",
          "9771:       }",
          "9780:       public java.lang.String getRunId() {",
          "9781:         java.lang.Object ref = runId_;",
          "9782:         if (!(ref instanceof java.lang.String)) {",
          "9783:           com.google.protobuf.ByteString bs =",
          "9784:               (com.google.protobuf.ByteString) ref;",
          "9785:           java.lang.String s = bs.toStringUtf8();",
          "9786:           if (bs.isValidUtf8()) {",
          "9787:             runId_ = s;",
          "9788:           }",
          "9789:           return s;",
          "9790:         } else {",
          "9791:           return (java.lang.String) ref;",
          "9792:         }",
          "9793:       }",
          "9802:       public com.google.protobuf.ByteString",
          "9803:           getRunIdBytes() {",
          "9804:         java.lang.Object ref = runId_;",
          "9805:         if (ref instanceof String) {",
          "9806:           com.google.protobuf.ByteString b =",
          "9807:               com.google.protobuf.ByteString.copyFromUtf8(",
          "9808:                   (java.lang.String) ref);",
          "9809:           runId_ = b;",
          "9810:           return b;",
          "9811:         } else {",
          "9812:           return (com.google.protobuf.ByteString) ref;",
          "9813:         }",
          "9814:       }",
          "9824:       public Builder setRunId(",
          "9825:           java.lang.String value) {",
          "9826:         if (value == null) {",
          "9827:     throw new NullPointerException();",
          "9828:   }",
          "9829:   bitField0_ |= 0x00000001;",
          "9830:         runId_ = value;",
          "9831:         onChanged();",
          "9832:         return this;",
          "9833:       }",
          "9842:       public Builder clearRunId() {",
          "9843:         bitField0_ = (bitField0_ & ~0x00000001);",
          "9844:         runId_ = getDefaultInstance().getRunId();",
          "9845:         onChanged();",
          "9846:         return this;",
          "9847:       }",
          "9857:       public Builder setRunIdBytes(",
          "9858:           com.google.protobuf.ByteString value) {",
          "9859:         if (value == null) {",
          "9860:     throw new NullPointerException();",
          "9861:   }",
          "9862:   bitField0_ |= 0x00000001;",
          "9863:         runId_ = value;",
          "9864:         onChanged();",
          "9865:         return this;",
          "9866:       }",
          "9868:       private java.lang.Object runUuid_ = \"\";",
          "9878:       public boolean hasRunUuid() {",
          "9879:         return ((bitField0_ & 0x00000002) != 0);",
          "9880:       }",
          "9890:       public java.lang.String getRunUuid() {",
          "9891:         java.lang.Object ref = runUuid_;",
          "9892:         if (!(ref instanceof java.lang.String)) {",
          "9893:           com.google.protobuf.ByteString bs =",
          "9894:               (com.google.protobuf.ByteString) ref;",
          "9895:           java.lang.String s = bs.toStringUtf8();",
          "9896:           if (bs.isValidUtf8()) {",
          "9897:             runUuid_ = s;",
          "9898:           }",
          "9899:           return s;",
          "9900:         } else {",
          "9901:           return (java.lang.String) ref;",
          "9902:         }",
          "9903:       }",
          "9913:       public com.google.protobuf.ByteString",
          "9914:           getRunUuidBytes() {",
          "9915:         java.lang.Object ref = runUuid_;",
          "9916:         if (ref instanceof String) {",
          "9917:           com.google.protobuf.ByteString b =",
          "9918:               com.google.protobuf.ByteString.copyFromUtf8(",
          "9919:                   (java.lang.String) ref);",
          "9920:           runUuid_ = b;",
          "9921:           return b;",
          "9922:         } else {",
          "9923:           return (com.google.protobuf.ByteString) ref;",
          "9924:         }",
          "9925:       }",
          "9936:       public Builder setRunUuid(",
          "9937:           java.lang.String value) {",
          "9938:         if (value == null) {",
          "9939:     throw new NullPointerException();",
          "9940:   }",
          "9941:   bitField0_ |= 0x00000002;",
          "9942:         runUuid_ = value;",
          "9943:         onChanged();",
          "9944:         return this;",
          "9945:       }",
          "9955:       public Builder clearRunUuid() {",
          "9956:         bitField0_ = (bitField0_ & ~0x00000002);",
          "9957:         runUuid_ = getDefaultInstance().getRunUuid();",
          "9958:         onChanged();",
          "9959:         return this;",
          "9960:       }",
          "9971:       public Builder setRunUuidBytes(",
          "9972:           com.google.protobuf.ByteString value) {",
          "9973:         if (value == null) {",
          "9974:     throw new NullPointerException();",
          "9975:   }",
          "9976:   bitField0_ |= 0x00000002;",
          "9977:         runUuid_ = value;",
          "9978:         onChanged();",
          "9979:         return this;",
          "9980:       }",
          "9982:       private java.lang.Object runName_ = \"\";",
          "9991:       public boolean hasRunName() {",
          "9992:         return ((bitField0_ & 0x00000004) != 0);",
          "9993:       }",
          "10002:       public java.lang.String getRunName() {",
          "10003:         java.lang.Object ref = runName_;",
          "10004:         if (!(ref instanceof java.lang.String)) {",
          "10005:           com.google.protobuf.ByteString bs =",
          "10006:               (com.google.protobuf.ByteString) ref;",
          "10007:           java.lang.String s = bs.toStringUtf8();",
          "10008:           if (bs.isValidUtf8()) {",
          "10009:             runName_ = s;",
          "10010:           }",
          "10011:           return s;",
          "10012:         } else {",
          "10013:           return (java.lang.String) ref;",
          "10014:         }",
          "10015:       }",
          "10024:       public com.google.protobuf.ByteString",
          "10025:           getRunNameBytes() {",
          "10026:         java.lang.Object ref = runName_;",
          "10027:         if (ref instanceof String) {",
          "10028:           com.google.protobuf.ByteString b =",
          "10029:               com.google.protobuf.ByteString.copyFromUtf8(",
          "10030:                   (java.lang.String) ref);",
          "10031:           runName_ = b;",
          "10032:           return b;",
          "10033:         } else {",
          "10034:           return (com.google.protobuf.ByteString) ref;",
          "10035:         }",
          "10036:       }",
          "10046:       public Builder setRunName(",
          "10047:           java.lang.String value) {",
          "10048:         if (value == null) {",
          "10049:     throw new NullPointerException();",
          "10050:   }",
          "10051:   bitField0_ |= 0x00000004;",
          "10052:         runName_ = value;",
          "10053:         onChanged();",
          "10054:         return this;",
          "10055:       }",
          "10064:       public Builder clearRunName() {",
          "10065:         bitField0_ = (bitField0_ & ~0x00000004);",
          "10066:         runName_ = getDefaultInstance().getRunName();",
          "10067:         onChanged();",
          "10068:         return this;",
          "10069:       }",
          "10079:       public Builder setRunNameBytes(",
          "10080:           com.google.protobuf.ByteString value) {",
          "10081:         if (value == null) {",
          "10082:     throw new NullPointerException();",
          "10083:   }",
          "10084:   bitField0_ |= 0x00000004;",
          "10085:         runName_ = value;",
          "10086:         onChanged();",
          "10087:         return this;",
          "10088:       }",
          "10090:       private java.lang.Object experimentId_ = \"\";",
          "10099:       public boolean hasExperimentId() {",
          "10100:         return ((bitField0_ & 0x00000008) != 0);",
          "10101:       }",
          "10110:       public java.lang.String getExperimentId() {",
          "10111:         java.lang.Object ref = experimentId_;",
          "10112:         if (!(ref instanceof java.lang.String)) {",
          "10113:           com.google.protobuf.ByteString bs =",
          "10114:               (com.google.protobuf.ByteString) ref;",
          "10115:           java.lang.String s = bs.toStringUtf8();",
          "10116:           if (bs.isValidUtf8()) {",
          "10117:             experimentId_ = s;",
          "10118:           }",
          "10119:           return s;",
          "10120:         } else {",
          "10121:           return (java.lang.String) ref;",
          "10122:         }",
          "10123:       }",
          "10132:       public com.google.protobuf.ByteString",
          "10133:           getExperimentIdBytes() {",
          "10134:         java.lang.Object ref = experimentId_;",
          "10135:         if (ref instanceof String) {",
          "10136:           com.google.protobuf.ByteString b =",
          "10137:               com.google.protobuf.ByteString.copyFromUtf8(",
          "10138:                   (java.lang.String) ref);",
          "10139:           experimentId_ = b;",
          "10140:           return b;",
          "10141:         } else {",
          "10142:           return (com.google.protobuf.ByteString) ref;",
          "10143:         }",
          "10144:       }",
          "10154:       public Builder setExperimentId(",
          "10155:           java.lang.String value) {",
          "10156:         if (value == null) {",
          "10157:     throw new NullPointerException();",
          "10158:   }",
          "10159:   bitField0_ |= 0x00000008;",
          "10160:         experimentId_ = value;",
          "10161:         onChanged();",
          "10162:         return this;",
          "10163:       }",
          "10172:       public Builder clearExperimentId() {",
          "10173:         bitField0_ = (bitField0_ & ~0x00000008);",
          "10174:         experimentId_ = getDefaultInstance().getExperimentId();",
          "10175:         onChanged();",
          "10176:         return this;",
          "10177:       }",
          "10187:       public Builder setExperimentIdBytes(",
          "10188:           com.google.protobuf.ByteString value) {",
          "10189:         if (value == null) {",
          "10190:     throw new NullPointerException();",
          "10191:   }",
          "10192:   bitField0_ |= 0x00000008;",
          "10193:         experimentId_ = value;",
          "10194:         onChanged();",
          "10195:         return this;",
          "10196:       }",
          "10198:       private java.lang.Object userId_ = \"\";",
          "10209:       public boolean hasUserId() {",
          "10210:         return ((bitField0_ & 0x00000010) != 0);",
          "10211:       }",
          "10222:       public java.lang.String getUserId() {",
          "10223:         java.lang.Object ref = userId_;",
          "10224:         if (!(ref instanceof java.lang.String)) {",
          "10225:           com.google.protobuf.ByteString bs =",
          "10226:               (com.google.protobuf.ByteString) ref;",
          "10227:           java.lang.String s = bs.toStringUtf8();",
          "10228:           if (bs.isValidUtf8()) {",
          "10229:             userId_ = s;",
          "10230:           }",
          "10231:           return s;",
          "10232:         } else {",
          "10233:           return (java.lang.String) ref;",
          "10234:         }",
          "10235:       }",
          "10246:       public com.google.protobuf.ByteString",
          "10247:           getUserIdBytes() {",
          "10248:         java.lang.Object ref = userId_;",
          "10249:         if (ref instanceof String) {",
          "10250:           com.google.protobuf.ByteString b =",
          "10251:               com.google.protobuf.ByteString.copyFromUtf8(",
          "10252:                   (java.lang.String) ref);",
          "10253:           userId_ = b;",
          "10254:           return b;",
          "10255:         } else {",
          "10256:           return (com.google.protobuf.ByteString) ref;",
          "10257:         }",
          "10258:       }",
          "10270:       public Builder setUserId(",
          "10271:           java.lang.String value) {",
          "10272:         if (value == null) {",
          "10273:     throw new NullPointerException();",
          "10274:   }",
          "10275:   bitField0_ |= 0x00000010;",
          "10276:         userId_ = value;",
          "10277:         onChanged();",
          "10278:         return this;",
          "10279:       }",
          "10290:       public Builder clearUserId() {",
          "10291:         bitField0_ = (bitField0_ & ~0x00000010);",
          "10292:         userId_ = getDefaultInstance().getUserId();",
          "10293:         onChanged();",
          "10294:         return this;",
          "10295:       }",
          "10307:       public Builder setUserIdBytes(",
          "10308:           com.google.protobuf.ByteString value) {",
          "10309:         if (value == null) {",
          "10310:     throw new NullPointerException();",
          "10311:   }",
          "10312:   bitField0_ |= 0x00000010;",
          "10313:         userId_ = value;",
          "10314:         onChanged();",
          "10315:         return this;",
          "10316:       }",
          "10318:       private int status_ = 1;",
          "10327:       @java.lang.Override public boolean hasStatus() {",
          "10328:         return ((bitField0_ & 0x00000020) != 0);",
          "10329:       }",
          "10338:       @java.lang.Override",
          "10339:       public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "10340:         @SuppressWarnings(\"deprecation\")",
          "10341:         org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "10342:         return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "10343:       }",
          "10353:       public Builder setStatus(org.mlflow.api.proto.Service.RunStatus value) {",
          "10354:         if (value == null) {",
          "10355:           throw new NullPointerException();",
          "10356:         }",
          "10357:         bitField0_ |= 0x00000020;",
          "10358:         status_ = value.getNumber();",
          "10359:         onChanged();",
          "10360:         return this;",
          "10361:       }",
          "10370:       public Builder clearStatus() {",
          "10371:         bitField0_ = (bitField0_ & ~0x00000020);",
          "10372:         status_ = 1;",
          "10373:         onChanged();",
          "10374:         return this;",
          "10375:       }",
          "10377:       private long startTime_ ;",
          "10386:       @java.lang.Override",
          "10387:       public boolean hasStartTime() {",
          "10388:         return ((bitField0_ & 0x00000040) != 0);",
          "10389:       }",
          "10398:       @java.lang.Override",
          "10399:       public long getStartTime() {",
          "10400:         return startTime_;",
          "10401:       }",
          "10411:       public Builder setStartTime(long value) {",
          "10412:         bitField0_ |= 0x00000040;",
          "10413:         startTime_ = value;",
          "10414:         onChanged();",
          "10415:         return this;",
          "10416:       }",
          "10425:       public Builder clearStartTime() {",
          "10426:         bitField0_ = (bitField0_ & ~0x00000040);",
          "10427:         startTime_ = 0L;",
          "10428:         onChanged();",
          "10429:         return this;",
          "10430:       }",
          "10432:       private long endTime_ ;",
          "10441:       @java.lang.Override",
          "10442:       public boolean hasEndTime() {",
          "10443:         return ((bitField0_ & 0x00000080) != 0);",
          "10444:       }",
          "10453:       @java.lang.Override",
          "10454:       public long getEndTime() {",
          "10455:         return endTime_;",
          "10456:       }",
          "10466:       public Builder setEndTime(long value) {",
          "10467:         bitField0_ |= 0x00000080;",
          "10468:         endTime_ = value;",
          "10469:         onChanged();",
          "10470:         return this;",
          "10471:       }",
          "10480:       public Builder clearEndTime() {",
          "10481:         bitField0_ = (bitField0_ & ~0x00000080);",
          "10482:         endTime_ = 0L;",
          "10483:         onChanged();",
          "10484:         return this;",
          "10485:       }",
          "10487:       private java.lang.Object artifactUri_ = \"\";",
          "10499:       public boolean hasArtifactUri() {",
          "10500:         return ((bitField0_ & 0x00000100) != 0);",
          "10501:       }",
          "10513:       public java.lang.String getArtifactUri() {",
          "10514:         java.lang.Object ref = artifactUri_;",
          "10515:         if (!(ref instanceof java.lang.String)) {",
          "10516:           com.google.protobuf.ByteString bs =",
          "10517:               (com.google.protobuf.ByteString) ref;",
          "10518:           java.lang.String s = bs.toStringUtf8();",
          "10519:           if (bs.isValidUtf8()) {",
          "10520:             artifactUri_ = s;",
          "10521:           }",
          "10522:           return s;",
          "10523:         } else {",
          "10524:           return (java.lang.String) ref;",
          "10525:         }",
          "10526:       }",
          "10538:       public com.google.protobuf.ByteString",
          "10539:           getArtifactUriBytes() {",
          "10540:         java.lang.Object ref = artifactUri_;",
          "10541:         if (ref instanceof String) {",
          "10542:           com.google.protobuf.ByteString b =",
          "10543:               com.google.protobuf.ByteString.copyFromUtf8(",
          "10544:                   (java.lang.String) ref);",
          "10545:           artifactUri_ = b;",
          "10546:           return b;",
          "10547:         } else {",
          "10548:           return (com.google.protobuf.ByteString) ref;",
          "10549:         }",
          "10550:       }",
          "10563:       public Builder setArtifactUri(",
          "10564:           java.lang.String value) {",
          "10565:         if (value == null) {",
          "10566:     throw new NullPointerException();",
          "10567:   }",
          "10568:   bitField0_ |= 0x00000100;",
          "10569:         artifactUri_ = value;",
          "10570:         onChanged();",
          "10571:         return this;",
          "10572:       }",
          "10584:       public Builder clearArtifactUri() {",
          "10585:         bitField0_ = (bitField0_ & ~0x00000100);",
          "10586:         artifactUri_ = getDefaultInstance().getArtifactUri();",
          "10587:         onChanged();",
          "10588:         return this;",
          "10589:       }",
          "10602:       public Builder setArtifactUriBytes(",
          "10603:           com.google.protobuf.ByteString value) {",
          "10604:         if (value == null) {",
          "10605:     throw new NullPointerException();",
          "10606:   }",
          "10607:   bitField0_ |= 0x00000100;",
          "10608:         artifactUri_ = value;",
          "10609:         onChanged();",
          "10610:         return this;",
          "10611:       }",
          "10613:       private java.lang.Object lifecycleStage_ = \"\";",
          "10622:       public boolean hasLifecycleStage() {",
          "10623:         return ((bitField0_ & 0x00000200) != 0);",
          "10624:       }",
          "10633:       public java.lang.String getLifecycleStage() {",
          "10634:         java.lang.Object ref = lifecycleStage_;",
          "10635:         if (!(ref instanceof java.lang.String)) {",
          "10636:           com.google.protobuf.ByteString bs =",
          "10637:               (com.google.protobuf.ByteString) ref;",
          "10638:           java.lang.String s = bs.toStringUtf8();",
          "10639:           if (bs.isValidUtf8()) {",
          "10640:             lifecycleStage_ = s;",
          "10641:           }",
          "10642:           return s;",
          "10643:         } else {",
          "10644:           return (java.lang.String) ref;",
          "10645:         }",
          "10646:       }",
          "10655:       public com.google.protobuf.ByteString",
          "10656:           getLifecycleStageBytes() {",
          "10657:         java.lang.Object ref = lifecycleStage_;",
          "10658:         if (ref instanceof String) {",
          "10659:           com.google.protobuf.ByteString b =",
          "10660:               com.google.protobuf.ByteString.copyFromUtf8(",
          "10661:                   (java.lang.String) ref);",
          "10662:           lifecycleStage_ = b;",
          "10663:           return b;",
          "10664:         } else {",
          "10665:           return (com.google.protobuf.ByteString) ref;",
          "10666:         }",
          "10667:       }",
          "10677:       public Builder setLifecycleStage(",
          "10678:           java.lang.String value) {",
          "10679:         if (value == null) {",
          "10680:     throw new NullPointerException();",
          "10681:   }",
          "10682:   bitField0_ |= 0x00000200;",
          "10683:         lifecycleStage_ = value;",
          "10684:         onChanged();",
          "10685:         return this;",
          "10686:       }",
          "10695:       public Builder clearLifecycleStage() {",
          "10696:         bitField0_ = (bitField0_ & ~0x00000200);",
          "10697:         lifecycleStage_ = getDefaultInstance().getLifecycleStage();",
          "10698:         onChanged();",
          "10699:         return this;",
          "10700:       }",
          "10710:       public Builder setLifecycleStageBytes(",
          "10711:           com.google.protobuf.ByteString value) {",
          "10712:         if (value == null) {",
          "10713:     throw new NullPointerException();",
          "10714:   }",
          "10715:   bitField0_ |= 0x00000200;",
          "10716:         lifecycleStage_ = value;",
          "10717:         onChanged();",
          "10718:         return this;",
          "10719:       }",
          "10720:       @java.lang.Override",
          "10721:       public final Builder setUnknownFields(",
          "10722:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "10723:         return super.setUnknownFields(unknownFields);",
          "10724:       }",
          "10726:       @java.lang.Override",
          "10727:       public final Builder mergeUnknownFields(",
          "10728:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "10729:         return super.mergeUnknownFields(unknownFields);",
          "10730:       }",
          "10734:     }",
          "10737:     private static final org.mlflow.api.proto.Service.RunInfo DEFAULT_INSTANCE;",
          "10738:     static {",
          "10739:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RunInfo();",
          "10740:     }",
          "10742:     public static org.mlflow.api.proto.Service.RunInfo getDefaultInstance() {",
          "10743:       return DEFAULT_INSTANCE;",
          "10744:     }",
          "10746:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RunInfo>",
          "10747:         PARSER = new com.google.protobuf.AbstractParser<RunInfo>() {",
          "10748:       @java.lang.Override",
          "10749:       public RunInfo parsePartialFrom(",
          "10750:           com.google.protobuf.CodedInputStream input,",
          "10751:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10752:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "10753:         return new RunInfo(input, extensionRegistry);",
          "10754:       }",
          "10755:     };",
          "10757:     public static com.google.protobuf.Parser<RunInfo> parser() {",
          "10758:       return PARSER;",
          "10759:     }",
          "10761:     @java.lang.Override",
          "10762:     public com.google.protobuf.Parser<RunInfo> getParserForType() {",
          "10763:       return PARSER;",
          "10764:     }",
          "10766:     @java.lang.Override",
          "10767:     public org.mlflow.api.proto.Service.RunInfo getDefaultInstanceForType() {",
          "10768:       return DEFAULT_INSTANCE;",
          "10769:     }",
          "10771:   }",
          "10773:   public interface ExperimentOrBuilder extends",
          "10775:       com.google.protobuf.MessageOrBuilder {",
          "10785:     boolean hasExperimentId();",
          "10794:     java.lang.String getExperimentId();",
          "10803:     com.google.protobuf.ByteString",
          "10804:         getExperimentIdBytes();",
          "10814:     boolean hasName();",
          "10823:     java.lang.String getName();",
          "10832:     com.google.protobuf.ByteString",
          "10833:         getNameBytes();",
          "10843:     boolean hasArtifactLocation();",
          "10852:     java.lang.String getArtifactLocation();",
          "10861:     com.google.protobuf.ByteString",
          "10862:         getArtifactLocationBytes();",
          "10873:     boolean hasLifecycleStage();",
          "10883:     java.lang.String getLifecycleStage();",
          "10893:     com.google.protobuf.ByteString",
          "10894:         getLifecycleStageBytes();",
          "10904:     boolean hasLastUpdateTime();",
          "10913:     long getLastUpdateTime();",
          "10923:     boolean hasCreationTime();",
          "10932:     long getCreationTime();",
          "10941:     java.util.List<org.mlflow.api.proto.Service.ExperimentTag>",
          "10942:         getTagsList();",
          "10950:     org.mlflow.api.proto.Service.ExperimentTag getTags(int index);",
          "10958:     int getTagsCount();",
          "10966:     java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "10967:         getTagsOrBuilderList();",
          "10975:     org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "10976:         int index);",
          "10977:   }",
          "10985:   public static final class Experiment extends",
          "10986:       com.google.protobuf.GeneratedMessageV3 implements",
          "10988:       ExperimentOrBuilder {",
          "10989:   private static final long serialVersionUID = 0L;",
          "10991:     private Experiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "10992:       super(builder);",
          "10993:     }",
          "10994:     private Experiment() {",
          "10995:       experimentId_ = \"\";",
          "10996:       name_ = \"\";",
          "10997:       artifactLocation_ = \"\";",
          "10998:       lifecycleStage_ = \"\";",
          "10999:       tags_ = java.util.Collections.emptyList();",
          "11000:     }",
          "11002:     @java.lang.Override",
          "11003:     @SuppressWarnings({\"unused\"})",
          "11004:     protected java.lang.Object newInstance(",
          "11005:         UnusedPrivateParameter unused) {",
          "11006:       return new Experiment();",
          "11007:     }",
          "11009:     @java.lang.Override",
          "11010:     public final com.google.protobuf.UnknownFieldSet",
          "11011:     getUnknownFields() {",
          "11012:       return this.unknownFields;",
          "11013:     }",
          "11014:     private Experiment(",
          "11015:         com.google.protobuf.CodedInputStream input,",
          "11016:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11017:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "11018:       this();",
          "11019:       if (extensionRegistry == null) {",
          "11020:         throw new java.lang.NullPointerException();",
          "11021:       }",
          "11022:       int mutable_bitField0_ = 0;",
          "11023:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "11024:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "11025:       try {",
          "11026:         boolean done = false;",
          "11027:         while (!done) {",
          "11028:           int tag = input.readTag();",
          "11029:           switch (tag) {",
          "11030:             case 0:",
          "11031:               done = true;",
          "11032:               break;",
          "11033:             case 10: {",
          "11034:               com.google.protobuf.ByteString bs = input.readBytes();",
          "11035:               bitField0_ |= 0x00000001;",
          "11036:               experimentId_ = bs;",
          "11037:               break;",
          "11038:             }",
          "11039:             case 18: {",
          "11040:               com.google.protobuf.ByteString bs = input.readBytes();",
          "11041:               bitField0_ |= 0x00000002;",
          "11042:               name_ = bs;",
          "11043:               break;",
          "11044:             }",
          "11045:             case 26: {",
          "11046:               com.google.protobuf.ByteString bs = input.readBytes();",
          "11047:               bitField0_ |= 0x00000004;",
          "11048:               artifactLocation_ = bs;",
          "11049:               break;",
          "11050:             }",
          "11051:             case 34: {",
          "11052:               com.google.protobuf.ByteString bs = input.readBytes();",
          "11053:               bitField0_ |= 0x00000008;",
          "11054:               lifecycleStage_ = bs;",
          "11055:               break;",
          "11056:             }",
          "11057:             case 40: {",
          "11058:               bitField0_ |= 0x00000010;",
          "11059:               lastUpdateTime_ = input.readInt64();",
          "11060:               break;",
          "11061:             }",
          "11062:             case 48: {",
          "11063:               bitField0_ |= 0x00000020;",
          "11064:               creationTime_ = input.readInt64();",
          "11065:               break;",
          "11066:             }",
          "11067:             case 58: {",
          "11068:               if (!((mutable_bitField0_ & 0x00000040) != 0)) {",
          "11069:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.ExperimentTag>();",
          "11070:                 mutable_bitField0_ |= 0x00000040;",
          "11071:               }",
          "11072:               tags_.add(",
          "11073:                   input.readMessage(org.mlflow.api.proto.Service.ExperimentTag.PARSER, extensionRegistry));",
          "11074:               break;",
          "11075:             }",
          "11076:             default: {",
          "11077:               if (!parseUnknownField(",
          "11078:                   input, unknownFields, extensionRegistry, tag)) {",
          "11079:                 done = true;",
          "11080:               }",
          "11081:               break;",
          "11082:             }",
          "11083:           }",
          "11084:         }",
          "11085:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "11086:         throw e.setUnfinishedMessage(this);",
          "11087:       } catch (java.io.IOException e) {",
          "11088:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "11089:             e).setUnfinishedMessage(this);",
          "11090:       } finally {",
          "11091:         if (((mutable_bitField0_ & 0x00000040) != 0)) {",
          "11092:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "11093:         }",
          "11094:         this.unknownFields = unknownFields.build();",
          "11095:         makeExtensionsImmutable();",
          "11096:       }",
          "11097:     }",
          "11098:     public static final com.google.protobuf.Descriptors.Descriptor",
          "11099:         getDescriptor() {",
          "11100:       return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_descriptor;",
          "11101:     }",
          "11103:     @java.lang.Override",
          "11104:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "11105:         internalGetFieldAccessorTable() {",
          "11106:       return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_fieldAccessorTable",
          "11107:           .ensureFieldAccessorsInitialized(",
          "11108:               org.mlflow.api.proto.Service.Experiment.class, org.mlflow.api.proto.Service.Experiment.Builder.class);",
          "11109:     }",
          "11111:     private int bitField0_;",
          "11112:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "11113:     private volatile java.lang.Object experimentId_;",
          "11122:     @java.lang.Override",
          "11123:     public boolean hasExperimentId() {",
          "11124:       return ((bitField0_ & 0x00000001) != 0);",
          "11125:     }",
          "11134:     @java.lang.Override",
          "11135:     public java.lang.String getExperimentId() {",
          "11136:       java.lang.Object ref = experimentId_;",
          "11137:       if (ref instanceof java.lang.String) {",
          "11138:         return (java.lang.String) ref;",
          "11139:       } else {",
          "11140:         com.google.protobuf.ByteString bs =",
          "11141:             (com.google.protobuf.ByteString) ref;",
          "11142:         java.lang.String s = bs.toStringUtf8();",
          "11143:         if (bs.isValidUtf8()) {",
          "11144:           experimentId_ = s;",
          "11145:         }",
          "11146:         return s;",
          "11147:       }",
          "11148:     }",
          "11157:     @java.lang.Override",
          "11158:     public com.google.protobuf.ByteString",
          "11159:         getExperimentIdBytes() {",
          "11160:       java.lang.Object ref = experimentId_;",
          "11161:       if (ref instanceof java.lang.String) {",
          "11162:         com.google.protobuf.ByteString b =",
          "11163:             com.google.protobuf.ByteString.copyFromUtf8(",
          "11164:                 (java.lang.String) ref);",
          "11165:         experimentId_ = b;",
          "11166:         return b;",
          "11167:       } else {",
          "11168:         return (com.google.protobuf.ByteString) ref;",
          "11169:       }",
          "11170:     }",
          "11172:     public static final int NAME_FIELD_NUMBER = 2;",
          "11173:     private volatile java.lang.Object name_;",
          "11182:     @java.lang.Override",
          "11183:     public boolean hasName() {",
          "11184:       return ((bitField0_ & 0x00000002) != 0);",
          "11185:     }",
          "11194:     @java.lang.Override",
          "11195:     public java.lang.String getName() {",
          "11196:       java.lang.Object ref = name_;",
          "11197:       if (ref instanceof java.lang.String) {",
          "11198:         return (java.lang.String) ref;",
          "11199:       } else {",
          "11200:         com.google.protobuf.ByteString bs =",
          "11201:             (com.google.protobuf.ByteString) ref;",
          "11202:         java.lang.String s = bs.toStringUtf8();",
          "11203:         if (bs.isValidUtf8()) {",
          "11204:           name_ = s;",
          "11205:         }",
          "11206:         return s;",
          "11207:       }",
          "11208:     }",
          "11217:     @java.lang.Override",
          "11218:     public com.google.protobuf.ByteString",
          "11219:         getNameBytes() {",
          "11220:       java.lang.Object ref = name_;",
          "11221:       if (ref instanceof java.lang.String) {",
          "11222:         com.google.protobuf.ByteString b =",
          "11223:             com.google.protobuf.ByteString.copyFromUtf8(",
          "11224:                 (java.lang.String) ref);",
          "11225:         name_ = b;",
          "11226:         return b;",
          "11227:       } else {",
          "11228:         return (com.google.protobuf.ByteString) ref;",
          "11229:       }",
          "11230:     }",
          "11232:     public static final int ARTIFACT_LOCATION_FIELD_NUMBER = 3;",
          "11233:     private volatile java.lang.Object artifactLocation_;",
          "11242:     @java.lang.Override",
          "11243:     public boolean hasArtifactLocation() {",
          "11244:       return ((bitField0_ & 0x00000004) != 0);",
          "11245:     }",
          "11254:     @java.lang.Override",
          "11255:     public java.lang.String getArtifactLocation() {",
          "11256:       java.lang.Object ref = artifactLocation_;",
          "11257:       if (ref instanceof java.lang.String) {",
          "11258:         return (java.lang.String) ref;",
          "11259:       } else {",
          "11260:         com.google.protobuf.ByteString bs =",
          "11261:             (com.google.protobuf.ByteString) ref;",
          "11262:         java.lang.String s = bs.toStringUtf8();",
          "11263:         if (bs.isValidUtf8()) {",
          "11264:           artifactLocation_ = s;",
          "11265:         }",
          "11266:         return s;",
          "11267:       }",
          "11268:     }",
          "11277:     @java.lang.Override",
          "11278:     public com.google.protobuf.ByteString",
          "11279:         getArtifactLocationBytes() {",
          "11280:       java.lang.Object ref = artifactLocation_;",
          "11281:       if (ref instanceof java.lang.String) {",
          "11282:         com.google.protobuf.ByteString b =",
          "11283:             com.google.protobuf.ByteString.copyFromUtf8(",
          "11284:                 (java.lang.String) ref);",
          "11285:         artifactLocation_ = b;",
          "11286:         return b;",
          "11287:       } else {",
          "11288:         return (com.google.protobuf.ByteString) ref;",
          "11289:       }",
          "11290:     }",
          "11292:     public static final int LIFECYCLE_STAGE_FIELD_NUMBER = 4;",
          "11293:     private volatile java.lang.Object lifecycleStage_;",
          "11303:     @java.lang.Override",
          "11304:     public boolean hasLifecycleStage() {",
          "11305:       return ((bitField0_ & 0x00000008) != 0);",
          "11306:     }",
          "11316:     @java.lang.Override",
          "11317:     public java.lang.String getLifecycleStage() {",
          "11318:       java.lang.Object ref = lifecycleStage_;",
          "11319:       if (ref instanceof java.lang.String) {",
          "11320:         return (java.lang.String) ref;",
          "11321:       } else {",
          "11322:         com.google.protobuf.ByteString bs =",
          "11323:             (com.google.protobuf.ByteString) ref;",
          "11324:         java.lang.String s = bs.toStringUtf8();",
          "11325:         if (bs.isValidUtf8()) {",
          "11326:           lifecycleStage_ = s;",
          "11327:         }",
          "11328:         return s;",
          "11329:       }",
          "11330:     }",
          "11340:     @java.lang.Override",
          "11341:     public com.google.protobuf.ByteString",
          "11342:         getLifecycleStageBytes() {",
          "11343:       java.lang.Object ref = lifecycleStage_;",
          "11344:       if (ref instanceof java.lang.String) {",
          "11345:         com.google.protobuf.ByteString b =",
          "11346:             com.google.protobuf.ByteString.copyFromUtf8(",
          "11347:                 (java.lang.String) ref);",
          "11348:         lifecycleStage_ = b;",
          "11349:         return b;",
          "11350:       } else {",
          "11351:         return (com.google.protobuf.ByteString) ref;",
          "11352:       }",
          "11353:     }",
          "11355:     public static final int LAST_UPDATE_TIME_FIELD_NUMBER = 5;",
          "11356:     private long lastUpdateTime_;",
          "11365:     @java.lang.Override",
          "11366:     public boolean hasLastUpdateTime() {",
          "11367:       return ((bitField0_ & 0x00000010) != 0);",
          "11368:     }",
          "11377:     @java.lang.Override",
          "11378:     public long getLastUpdateTime() {",
          "11379:       return lastUpdateTime_;",
          "11380:     }",
          "11382:     public static final int CREATION_TIME_FIELD_NUMBER = 6;",
          "11383:     private long creationTime_;",
          "11392:     @java.lang.Override",
          "11393:     public boolean hasCreationTime() {",
          "11394:       return ((bitField0_ & 0x00000020) != 0);",
          "11395:     }",
          "11404:     @java.lang.Override",
          "11405:     public long getCreationTime() {",
          "11406:       return creationTime_;",
          "11407:     }",
          "11409:     public static final int TAGS_FIELD_NUMBER = 7;",
          "11410:     private java.util.List<org.mlflow.api.proto.Service.ExperimentTag> tags_;",
          "11418:     @java.lang.Override",
          "11419:     public java.util.List<org.mlflow.api.proto.Service.ExperimentTag> getTagsList() {",
          "11420:       return tags_;",
          "11421:     }",
          "11429:     @java.lang.Override",
          "11430:     public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "11431:         getTagsOrBuilderList() {",
          "11432:       return tags_;",
          "11433:     }",
          "11441:     @java.lang.Override",
          "11442:     public int getTagsCount() {",
          "11443:       return tags_.size();",
          "11444:     }",
          "11452:     @java.lang.Override",
          "11453:     public org.mlflow.api.proto.Service.ExperimentTag getTags(int index) {",
          "11454:       return tags_.get(index);",
          "11455:     }",
          "11463:     @java.lang.Override",
          "11464:     public org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "11465:         int index) {",
          "11466:       return tags_.get(index);",
          "11467:     }",
          "11469:     private byte memoizedIsInitialized = -1;",
          "11470:     @java.lang.Override",
          "11471:     public final boolean isInitialized() {",
          "11472:       byte isInitialized = memoizedIsInitialized;",
          "11473:       if (isInitialized == 1) return true;",
          "11474:       if (isInitialized == 0) return false;",
          "11476:       memoizedIsInitialized = 1;",
          "11477:       return true;",
          "11478:     }",
          "11480:     @java.lang.Override",
          "11481:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "11482:                         throws java.io.IOException {",
          "11483:       if (((bitField0_ & 0x00000001) != 0)) {",
          "11484:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "11485:       }",
          "11486:       if (((bitField0_ & 0x00000002) != 0)) {",
          "11487:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);",
          "11488:       }",
          "11489:       if (((bitField0_ & 0x00000004) != 0)) {",
          "11490:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, artifactLocation_);",
          "11491:       }",
          "11492:       if (((bitField0_ & 0x00000008) != 0)) {",
          "11493:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, lifecycleStage_);",
          "11494:       }",
          "11495:       if (((bitField0_ & 0x00000010) != 0)) {",
          "11496:         output.writeInt64(5, lastUpdateTime_);",
          "11497:       }",
          "11498:       if (((bitField0_ & 0x00000020) != 0)) {",
          "11499:         output.writeInt64(6, creationTime_);",
          "11500:       }",
          "11501:       for (int i = 0; i < tags_.size(); i++) {",
          "11502:         output.writeMessage(7, tags_.get(i));",
          "11503:       }",
          "11504:       unknownFields.writeTo(output);",
          "11505:     }",
          "11507:     @java.lang.Override",
          "11508:     public int getSerializedSize() {",
          "11509:       int size = memoizedSize;",
          "11510:       if (size != -1) return size;",
          "11512:       size = 0;",
          "11513:       if (((bitField0_ & 0x00000001) != 0)) {",
          "11514:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "11515:       }",
          "11516:       if (((bitField0_ & 0x00000002) != 0)) {",
          "11517:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);",
          "11518:       }",
          "11519:       if (((bitField0_ & 0x00000004) != 0)) {",
          "11520:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, artifactLocation_);",
          "11521:       }",
          "11522:       if (((bitField0_ & 0x00000008) != 0)) {",
          "11523:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, lifecycleStage_);",
          "11524:       }",
          "11525:       if (((bitField0_ & 0x00000010) != 0)) {",
          "11526:         size += com.google.protobuf.CodedOutputStream",
          "11527:           .computeInt64Size(5, lastUpdateTime_);",
          "11528:       }",
          "11529:       if (((bitField0_ & 0x00000020) != 0)) {",
          "11530:         size += com.google.protobuf.CodedOutputStream",
          "11531:           .computeInt64Size(6, creationTime_);",
          "11532:       }",
          "11533:       for (int i = 0; i < tags_.size(); i++) {",
          "11534:         size += com.google.protobuf.CodedOutputStream",
          "11535:           .computeMessageSize(7, tags_.get(i));",
          "11536:       }",
          "11537:       size += unknownFields.getSerializedSize();",
          "11538:       memoizedSize = size;",
          "11539:       return size;",
          "11540:     }",
          "11542:     @java.lang.Override",
          "11543:     public boolean equals(final java.lang.Object obj) {",
          "11544:       if (obj == this) {",
          "11545:        return true;",
          "11546:       }",
          "11547:       if (!(obj instanceof org.mlflow.api.proto.Service.Experiment)) {",
          "11548:         return super.equals(obj);",
          "11549:       }",
          "11550:       org.mlflow.api.proto.Service.Experiment other = (org.mlflow.api.proto.Service.Experiment) obj;",
          "11552:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "11553:       if (hasExperimentId()) {",
          "11554:         if (!getExperimentId()",
          "11555:             .equals(other.getExperimentId())) return false;",
          "11556:       }",
          "11557:       if (hasName() != other.hasName()) return false;",
          "11558:       if (hasName()) {",
          "11559:         if (!getName()",
          "11560:             .equals(other.getName())) return false;",
          "11561:       }",
          "11562:       if (hasArtifactLocation() != other.hasArtifactLocation()) return false;",
          "11563:       if (hasArtifactLocation()) {",
          "11564:         if (!getArtifactLocation()",
          "11565:             .equals(other.getArtifactLocation())) return false;",
          "11566:       }",
          "11567:       if (hasLifecycleStage() != other.hasLifecycleStage()) return false;",
          "11568:       if (hasLifecycleStage()) {",
          "11569:         if (!getLifecycleStage()",
          "11570:             .equals(other.getLifecycleStage())) return false;",
          "11571:       }",
          "11572:       if (hasLastUpdateTime() != other.hasLastUpdateTime()) return false;",
          "11573:       if (hasLastUpdateTime()) {",
          "11574:         if (getLastUpdateTime()",
          "11575:             != other.getLastUpdateTime()) return false;",
          "11576:       }",
          "11577:       if (hasCreationTime() != other.hasCreationTime()) return false;",
          "11578:       if (hasCreationTime()) {",
          "11579:         if (getCreationTime()",
          "11580:             != other.getCreationTime()) return false;",
          "11581:       }",
          "11582:       if (!getTagsList()",
          "11583:           .equals(other.getTagsList())) return false;",
          "11584:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "11585:       return true;",
          "11586:     }",
          "11588:     @java.lang.Override",
          "11589:     public int hashCode() {",
          "11590:       if (memoizedHashCode != 0) {",
          "11591:         return memoizedHashCode;",
          "11592:       }",
          "11593:       int hash = 41;",
          "11594:       hash = (19 * hash) + getDescriptor().hashCode();",
          "11595:       if (hasExperimentId()) {",
          "11596:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "11597:         hash = (53 * hash) + getExperimentId().hashCode();",
          "11598:       }",
          "11599:       if (hasName()) {",
          "11600:         hash = (37 * hash) + NAME_FIELD_NUMBER;",
          "11601:         hash = (53 * hash) + getName().hashCode();",
          "11602:       }",
          "11603:       if (hasArtifactLocation()) {",
          "11604:         hash = (37 * hash) + ARTIFACT_LOCATION_FIELD_NUMBER;",
          "11605:         hash = (53 * hash) + getArtifactLocation().hashCode();",
          "11606:       }",
          "11607:       if (hasLifecycleStage()) {",
          "11608:         hash = (37 * hash) + LIFECYCLE_STAGE_FIELD_NUMBER;",
          "11609:         hash = (53 * hash) + getLifecycleStage().hashCode();",
          "11610:       }",
          "11611:       if (hasLastUpdateTime()) {",
          "11612:         hash = (37 * hash) + LAST_UPDATE_TIME_FIELD_NUMBER;",
          "11613:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "11614:             getLastUpdateTime());",
          "11615:       }",
          "11616:       if (hasCreationTime()) {",
          "11617:         hash = (37 * hash) + CREATION_TIME_FIELD_NUMBER;",
          "11618:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "11619:             getCreationTime());",
          "11620:       }",
          "11621:       if (getTagsCount() > 0) {",
          "11622:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "11623:         hash = (53 * hash) + getTagsList().hashCode();",
          "11624:       }",
          "11625:       hash = (29 * hash) + unknownFields.hashCode();",
          "11626:       memoizedHashCode = hash;",
          "11627:       return hash;",
          "11628:     }",
          "11630:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11631:         java.nio.ByteBuffer data)",
          "11632:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "11633:       return PARSER.parseFrom(data);",
          "11634:     }",
          "11635:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11636:         java.nio.ByteBuffer data,",
          "11637:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11638:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "11639:       return PARSER.parseFrom(data, extensionRegistry);",
          "11640:     }",
          "11641:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11642:         com.google.protobuf.ByteString data)",
          "11643:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "11644:       return PARSER.parseFrom(data);",
          "11645:     }",
          "11646:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11647:         com.google.protobuf.ByteString data,",
          "11648:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11649:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "11650:       return PARSER.parseFrom(data, extensionRegistry);",
          "11651:     }",
          "11652:     public static org.mlflow.api.proto.Service.Experiment parseFrom(byte[] data)",
          "11653:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "11654:       return PARSER.parseFrom(data);",
          "11655:     }",
          "11656:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11657:         byte[] data,",
          "11658:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11659:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "11660:       return PARSER.parseFrom(data, extensionRegistry);",
          "11661:     }",
          "11662:     public static org.mlflow.api.proto.Service.Experiment parseFrom(java.io.InputStream input)",
          "11663:         throws java.io.IOException {",
          "11664:       return com.google.protobuf.GeneratedMessageV3",
          "11665:           .parseWithIOException(PARSER, input);",
          "11666:     }",
          "11667:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11668:         java.io.InputStream input,",
          "11669:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11670:         throws java.io.IOException {",
          "11671:       return com.google.protobuf.GeneratedMessageV3",
          "11672:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "11673:     }",
          "11674:     public static org.mlflow.api.proto.Service.Experiment parseDelimitedFrom(java.io.InputStream input)",
          "11675:         throws java.io.IOException {",
          "11676:       return com.google.protobuf.GeneratedMessageV3",
          "11677:           .parseDelimitedWithIOException(PARSER, input);",
          "11678:     }",
          "11679:     public static org.mlflow.api.proto.Service.Experiment parseDelimitedFrom(",
          "11680:         java.io.InputStream input,",
          "11681:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11682:         throws java.io.IOException {",
          "11683:       return com.google.protobuf.GeneratedMessageV3",
          "11684:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "11685:     }",
          "11686:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11687:         com.google.protobuf.CodedInputStream input)",
          "11688:         throws java.io.IOException {",
          "11689:       return com.google.protobuf.GeneratedMessageV3",
          "11690:           .parseWithIOException(PARSER, input);",
          "11691:     }",
          "11692:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "11693:         com.google.protobuf.CodedInputStream input,",
          "11694:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11695:         throws java.io.IOException {",
          "11696:       return com.google.protobuf.GeneratedMessageV3",
          "11697:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "11698:     }",
          "11700:     @java.lang.Override",
          "11701:     public Builder newBuilderForType() { return newBuilder(); }",
          "11702:     public static Builder newBuilder() {",
          "11703:       return DEFAULT_INSTANCE.toBuilder();",
          "11704:     }",
          "11705:     public static Builder newBuilder(org.mlflow.api.proto.Service.Experiment prototype) {",
          "11706:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "11707:     }",
          "11708:     @java.lang.Override",
          "11709:     public Builder toBuilder() {",
          "11710:       return this == DEFAULT_INSTANCE",
          "11711:           ? new Builder() : new Builder().mergeFrom(this);",
          "11712:     }",
          "11714:     @java.lang.Override",
          "11715:     protected Builder newBuilderForType(",
          "11716:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "11717:       Builder builder = new Builder(parent);",
          "11718:       return builder;",
          "11719:     }",
          "11727:     public static final class Builder extends",
          "11728:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "11730:         org.mlflow.api.proto.Service.ExperimentOrBuilder {",
          "11731:       public static final com.google.protobuf.Descriptors.Descriptor",
          "11732:           getDescriptor() {",
          "11733:         return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_descriptor;",
          "11734:       }",
          "11736:       @java.lang.Override",
          "11737:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "11738:           internalGetFieldAccessorTable() {",
          "11739:         return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_fieldAccessorTable",
          "11740:             .ensureFieldAccessorsInitialized(",
          "11741:                 org.mlflow.api.proto.Service.Experiment.class, org.mlflow.api.proto.Service.Experiment.Builder.class);",
          "11742:       }",
          "11745:       private Builder() {",
          "11746:         maybeForceBuilderInitialization();",
          "11747:       }",
          "11749:       private Builder(",
          "11750:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "11751:         super(parent);",
          "11752:         maybeForceBuilderInitialization();",
          "11753:       }",
          "11754:       private void maybeForceBuilderInitialization() {",
          "11755:         if (com.google.protobuf.GeneratedMessageV3",
          "11756:                 .alwaysUseFieldBuilders) {",
          "11757:           getTagsFieldBuilder();",
          "11758:         }",
          "11759:       }",
          "11760:       @java.lang.Override",
          "11761:       public Builder clear() {",
          "11762:         super.clear();",
          "11763:         experimentId_ = \"\";",
          "11764:         bitField0_ = (bitField0_ & ~0x00000001);",
          "11765:         name_ = \"\";",
          "11766:         bitField0_ = (bitField0_ & ~0x00000002);",
          "11767:         artifactLocation_ = \"\";",
          "11768:         bitField0_ = (bitField0_ & ~0x00000004);",
          "11769:         lifecycleStage_ = \"\";",
          "11770:         bitField0_ = (bitField0_ & ~0x00000008);",
          "11771:         lastUpdateTime_ = 0L;",
          "11772:         bitField0_ = (bitField0_ & ~0x00000010);",
          "11773:         creationTime_ = 0L;",
          "11774:         bitField0_ = (bitField0_ & ~0x00000020);",
          "11775:         if (tagsBuilder_ == null) {",
          "11776:           tags_ = java.util.Collections.emptyList();",
          "11777:           bitField0_ = (bitField0_ & ~0x00000040);",
          "11778:         } else {",
          "11779:           tagsBuilder_.clear();",
          "11780:         }",
          "11781:         return this;",
          "11782:       }",
          "11784:       @java.lang.Override",
          "11785:       public com.google.protobuf.Descriptors.Descriptor",
          "11786:           getDescriptorForType() {",
          "11787:         return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_descriptor;",
          "11788:       }",
          "11790:       @java.lang.Override",
          "11791:       public org.mlflow.api.proto.Service.Experiment getDefaultInstanceForType() {",
          "11792:         return org.mlflow.api.proto.Service.Experiment.getDefaultInstance();",
          "11793:       }",
          "11795:       @java.lang.Override",
          "11796:       public org.mlflow.api.proto.Service.Experiment build() {",
          "11797:         org.mlflow.api.proto.Service.Experiment result = buildPartial();",
          "11798:         if (!result.isInitialized()) {",
          "11799:           throw newUninitializedMessageException(result);",
          "11800:         }",
          "11801:         return result;",
          "11802:       }",
          "11804:       @java.lang.Override",
          "11805:       public org.mlflow.api.proto.Service.Experiment buildPartial() {",
          "11806:         org.mlflow.api.proto.Service.Experiment result = new org.mlflow.api.proto.Service.Experiment(this);",
          "11807:         int from_bitField0_ = bitField0_;",
          "11808:         int to_bitField0_ = 0;",
          "11809:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "11810:           to_bitField0_ |= 0x00000001;",
          "11811:         }",
          "11812:         result.experimentId_ = experimentId_;",
          "11813:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "11814:           to_bitField0_ |= 0x00000002;",
          "11815:         }",
          "11816:         result.name_ = name_;",
          "11817:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "11818:           to_bitField0_ |= 0x00000004;",
          "11819:         }",
          "11820:         result.artifactLocation_ = artifactLocation_;",
          "11821:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "11822:           to_bitField0_ |= 0x00000008;",
          "11823:         }",
          "11824:         result.lifecycleStage_ = lifecycleStage_;",
          "11825:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "11826:           result.lastUpdateTime_ = lastUpdateTime_;",
          "11827:           to_bitField0_ |= 0x00000010;",
          "11828:         }",
          "11829:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "11830:           result.creationTime_ = creationTime_;",
          "11831:           to_bitField0_ |= 0x00000020;",
          "11832:         }",
          "11833:         if (tagsBuilder_ == null) {",
          "11834:           if (((bitField0_ & 0x00000040) != 0)) {",
          "11835:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "11836:             bitField0_ = (bitField0_ & ~0x00000040);",
          "11837:           }",
          "11838:           result.tags_ = tags_;",
          "11839:         } else {",
          "11840:           result.tags_ = tagsBuilder_.build();",
          "11841:         }",
          "11842:         result.bitField0_ = to_bitField0_;",
          "11843:         onBuilt();",
          "11844:         return result;",
          "11845:       }",
          "11847:       @java.lang.Override",
          "11848:       public Builder clone() {",
          "11849:         return super.clone();",
          "11850:       }",
          "11851:       @java.lang.Override",
          "11852:       public Builder setField(",
          "11853:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "11854:           java.lang.Object value) {",
          "11855:         return super.setField(field, value);",
          "11856:       }",
          "11857:       @java.lang.Override",
          "11858:       public Builder clearField(",
          "11859:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "11860:         return super.clearField(field);",
          "11861:       }",
          "11862:       @java.lang.Override",
          "11863:       public Builder clearOneof(",
          "11864:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "11865:         return super.clearOneof(oneof);",
          "11866:       }",
          "11867:       @java.lang.Override",
          "11868:       public Builder setRepeatedField(",
          "11869:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "11870:           int index, java.lang.Object value) {",
          "11871:         return super.setRepeatedField(field, index, value);",
          "11872:       }",
          "11873:       @java.lang.Override",
          "11874:       public Builder addRepeatedField(",
          "11875:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "11876:           java.lang.Object value) {",
          "11877:         return super.addRepeatedField(field, value);",
          "11878:       }",
          "11879:       @java.lang.Override",
          "11880:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "11881:         if (other instanceof org.mlflow.api.proto.Service.Experiment) {",
          "11882:           return mergeFrom((org.mlflow.api.proto.Service.Experiment)other);",
          "11883:         } else {",
          "11884:           super.mergeFrom(other);",
          "11885:           return this;",
          "11886:         }",
          "11887:       }",
          "11889:       public Builder mergeFrom(org.mlflow.api.proto.Service.Experiment other) {",
          "11890:         if (other == org.mlflow.api.proto.Service.Experiment.getDefaultInstance()) return this;",
          "11891:         if (other.hasExperimentId()) {",
          "11892:           bitField0_ |= 0x00000001;",
          "11893:           experimentId_ = other.experimentId_;",
          "11894:           onChanged();",
          "11895:         }",
          "11896:         if (other.hasName()) {",
          "11897:           bitField0_ |= 0x00000002;",
          "11898:           name_ = other.name_;",
          "11899:           onChanged();",
          "11900:         }",
          "11901:         if (other.hasArtifactLocation()) {",
          "11902:           bitField0_ |= 0x00000004;",
          "11903:           artifactLocation_ = other.artifactLocation_;",
          "11904:           onChanged();",
          "11905:         }",
          "11906:         if (other.hasLifecycleStage()) {",
          "11907:           bitField0_ |= 0x00000008;",
          "11908:           lifecycleStage_ = other.lifecycleStage_;",
          "11909:           onChanged();",
          "11910:         }",
          "11911:         if (other.hasLastUpdateTime()) {",
          "11912:           setLastUpdateTime(other.getLastUpdateTime());",
          "11913:         }",
          "11914:         if (other.hasCreationTime()) {",
          "11915:           setCreationTime(other.getCreationTime());",
          "11916:         }",
          "11917:         if (tagsBuilder_ == null) {",
          "11918:           if (!other.tags_.isEmpty()) {",
          "11919:             if (tags_.isEmpty()) {",
          "11920:               tags_ = other.tags_;",
          "11921:               bitField0_ = (bitField0_ & ~0x00000040);",
          "11922:             } else {",
          "11923:               ensureTagsIsMutable();",
          "11924:               tags_.addAll(other.tags_);",
          "11925:             }",
          "11926:             onChanged();",
          "11927:           }",
          "11928:         } else {",
          "11929:           if (!other.tags_.isEmpty()) {",
          "11930:             if (tagsBuilder_.isEmpty()) {",
          "11931:               tagsBuilder_.dispose();",
          "11932:               tagsBuilder_ = null;",
          "11933:               tags_ = other.tags_;",
          "11934:               bitField0_ = (bitField0_ & ~0x00000040);",
          "11935:               tagsBuilder_ =",
          "11936:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "11937:                    getTagsFieldBuilder() : null;",
          "11938:             } else {",
          "11939:               tagsBuilder_.addAllMessages(other.tags_);",
          "11940:             }",
          "11941:           }",
          "11942:         }",
          "11943:         this.mergeUnknownFields(other.unknownFields);",
          "11944:         onChanged();",
          "11945:         return this;",
          "11946:       }",
          "11948:       @java.lang.Override",
          "11949:       public final boolean isInitialized() {",
          "11950:         return true;",
          "11951:       }",
          "11953:       @java.lang.Override",
          "11954:       public Builder mergeFrom(",
          "11955:           com.google.protobuf.CodedInputStream input,",
          "11956:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11957:           throws java.io.IOException {",
          "11958:         org.mlflow.api.proto.Service.Experiment parsedMessage = null;",
          "11959:         try {",
          "11960:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "11961:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "11962:           parsedMessage = (org.mlflow.api.proto.Service.Experiment) e.getUnfinishedMessage();",
          "11963:           throw e.unwrapIOException();",
          "11964:         } finally {",
          "11965:           if (parsedMessage != null) {",
          "11966:             mergeFrom(parsedMessage);",
          "11967:           }",
          "11968:         }",
          "11969:         return this;",
          "11970:       }",
          "11971:       private int bitField0_;",
          "11973:       private java.lang.Object experimentId_ = \"\";",
          "11982:       public boolean hasExperimentId() {",
          "11983:         return ((bitField0_ & 0x00000001) != 0);",
          "11984:       }",
          "11993:       public java.lang.String getExperimentId() {",
          "11994:         java.lang.Object ref = experimentId_;",
          "11995:         if (!(ref instanceof java.lang.String)) {",
          "11996:           com.google.protobuf.ByteString bs =",
          "11997:               (com.google.protobuf.ByteString) ref;",
          "11998:           java.lang.String s = bs.toStringUtf8();",
          "11999:           if (bs.isValidUtf8()) {",
          "12000:             experimentId_ = s;",
          "12001:           }",
          "12002:           return s;",
          "12003:         } else {",
          "12004:           return (java.lang.String) ref;",
          "12005:         }",
          "12006:       }",
          "12015:       public com.google.protobuf.ByteString",
          "12016:           getExperimentIdBytes() {",
          "12017:         java.lang.Object ref = experimentId_;",
          "12018:         if (ref instanceof String) {",
          "12019:           com.google.protobuf.ByteString b =",
          "12020:               com.google.protobuf.ByteString.copyFromUtf8(",
          "12021:                   (java.lang.String) ref);",
          "12022:           experimentId_ = b;",
          "12023:           return b;",
          "12024:         } else {",
          "12025:           return (com.google.protobuf.ByteString) ref;",
          "12026:         }",
          "12027:       }",
          "12037:       public Builder setExperimentId(",
          "12038:           java.lang.String value) {",
          "12039:         if (value == null) {",
          "12040:     throw new NullPointerException();",
          "12041:   }",
          "12042:   bitField0_ |= 0x00000001;",
          "12043:         experimentId_ = value;",
          "12044:         onChanged();",
          "12045:         return this;",
          "12046:       }",
          "12055:       public Builder clearExperimentId() {",
          "12056:         bitField0_ = (bitField0_ & ~0x00000001);",
          "12057:         experimentId_ = getDefaultInstance().getExperimentId();",
          "12058:         onChanged();",
          "12059:         return this;",
          "12060:       }",
          "12070:       public Builder setExperimentIdBytes(",
          "12071:           com.google.protobuf.ByteString value) {",
          "12072:         if (value == null) {",
          "12073:     throw new NullPointerException();",
          "12074:   }",
          "12075:   bitField0_ |= 0x00000001;",
          "12076:         experimentId_ = value;",
          "12077:         onChanged();",
          "12078:         return this;",
          "12079:       }",
          "12081:       private java.lang.Object name_ = \"\";",
          "12090:       public boolean hasName() {",
          "12091:         return ((bitField0_ & 0x00000002) != 0);",
          "12092:       }",
          "12101:       public java.lang.String getName() {",
          "12102:         java.lang.Object ref = name_;",
          "12103:         if (!(ref instanceof java.lang.String)) {",
          "12104:           com.google.protobuf.ByteString bs =",
          "12105:               (com.google.protobuf.ByteString) ref;",
          "12106:           java.lang.String s = bs.toStringUtf8();",
          "12107:           if (bs.isValidUtf8()) {",
          "12108:             name_ = s;",
          "12109:           }",
          "12110:           return s;",
          "12111:         } else {",
          "12112:           return (java.lang.String) ref;",
          "12113:         }",
          "12114:       }",
          "12123:       public com.google.protobuf.ByteString",
          "12124:           getNameBytes() {",
          "12125:         java.lang.Object ref = name_;",
          "12126:         if (ref instanceof String) {",
          "12127:           com.google.protobuf.ByteString b =",
          "12128:               com.google.protobuf.ByteString.copyFromUtf8(",
          "12129:                   (java.lang.String) ref);",
          "12130:           name_ = b;",
          "12131:           return b;",
          "12132:         } else {",
          "12133:           return (com.google.protobuf.ByteString) ref;",
          "12134:         }",
          "12135:       }",
          "12145:       public Builder setName(",
          "12146:           java.lang.String value) {",
          "12147:         if (value == null) {",
          "12148:     throw new NullPointerException();",
          "12149:   }",
          "12150:   bitField0_ |= 0x00000002;",
          "12151:         name_ = value;",
          "12152:         onChanged();",
          "12153:         return this;",
          "12154:       }",
          "12163:       public Builder clearName() {",
          "12164:         bitField0_ = (bitField0_ & ~0x00000002);",
          "12165:         name_ = getDefaultInstance().getName();",
          "12166:         onChanged();",
          "12167:         return this;",
          "12168:       }",
          "12178:       public Builder setNameBytes(",
          "12179:           com.google.protobuf.ByteString value) {",
          "12180:         if (value == null) {",
          "12181:     throw new NullPointerException();",
          "12182:   }",
          "12183:   bitField0_ |= 0x00000002;",
          "12184:         name_ = value;",
          "12185:         onChanged();",
          "12186:         return this;",
          "12187:       }",
          "12189:       private java.lang.Object artifactLocation_ = \"\";",
          "12198:       public boolean hasArtifactLocation() {",
          "12199:         return ((bitField0_ & 0x00000004) != 0);",
          "12200:       }",
          "12209:       public java.lang.String getArtifactLocation() {",
          "12210:         java.lang.Object ref = artifactLocation_;",
          "12211:         if (!(ref instanceof java.lang.String)) {",
          "12212:           com.google.protobuf.ByteString bs =",
          "12213:               (com.google.protobuf.ByteString) ref;",
          "12214:           java.lang.String s = bs.toStringUtf8();",
          "12215:           if (bs.isValidUtf8()) {",
          "12216:             artifactLocation_ = s;",
          "12217:           }",
          "12218:           return s;",
          "12219:         } else {",
          "12220:           return (java.lang.String) ref;",
          "12221:         }",
          "12222:       }",
          "12231:       public com.google.protobuf.ByteString",
          "12232:           getArtifactLocationBytes() {",
          "12233:         java.lang.Object ref = artifactLocation_;",
          "12234:         if (ref instanceof String) {",
          "12235:           com.google.protobuf.ByteString b =",
          "12236:               com.google.protobuf.ByteString.copyFromUtf8(",
          "12237:                   (java.lang.String) ref);",
          "12238:           artifactLocation_ = b;",
          "12239:           return b;",
          "12240:         } else {",
          "12241:           return (com.google.protobuf.ByteString) ref;",
          "12242:         }",
          "12243:       }",
          "12253:       public Builder setArtifactLocation(",
          "12254:           java.lang.String value) {",
          "12255:         if (value == null) {",
          "12256:     throw new NullPointerException();",
          "12257:   }",
          "12258:   bitField0_ |= 0x00000004;",
          "12259:         artifactLocation_ = value;",
          "12260:         onChanged();",
          "12261:         return this;",
          "12262:       }",
          "12271:       public Builder clearArtifactLocation() {",
          "12272:         bitField0_ = (bitField0_ & ~0x00000004);",
          "12273:         artifactLocation_ = getDefaultInstance().getArtifactLocation();",
          "12274:         onChanged();",
          "12275:         return this;",
          "12276:       }",
          "12286:       public Builder setArtifactLocationBytes(",
          "12287:           com.google.protobuf.ByteString value) {",
          "12288:         if (value == null) {",
          "12289:     throw new NullPointerException();",
          "12290:   }",
          "12291:   bitField0_ |= 0x00000004;",
          "12292:         artifactLocation_ = value;",
          "12293:         onChanged();",
          "12294:         return this;",
          "12295:       }",
          "12297:       private java.lang.Object lifecycleStage_ = \"\";",
          "12307:       public boolean hasLifecycleStage() {",
          "12308:         return ((bitField0_ & 0x00000008) != 0);",
          "12309:       }",
          "12319:       public java.lang.String getLifecycleStage() {",
          "12320:         java.lang.Object ref = lifecycleStage_;",
          "12321:         if (!(ref instanceof java.lang.String)) {",
          "12322:           com.google.protobuf.ByteString bs =",
          "12323:               (com.google.protobuf.ByteString) ref;",
          "12324:           java.lang.String s = bs.toStringUtf8();",
          "12325:           if (bs.isValidUtf8()) {",
          "12326:             lifecycleStage_ = s;",
          "12327:           }",
          "12328:           return s;",
          "12329:         } else {",
          "12330:           return (java.lang.String) ref;",
          "12331:         }",
          "12332:       }",
          "12342:       public com.google.protobuf.ByteString",
          "12343:           getLifecycleStageBytes() {",
          "12344:         java.lang.Object ref = lifecycleStage_;",
          "12345:         if (ref instanceof String) {",
          "12346:           com.google.protobuf.ByteString b =",
          "12347:               com.google.protobuf.ByteString.copyFromUtf8(",
          "12348:                   (java.lang.String) ref);",
          "12349:           lifecycleStage_ = b;",
          "12350:           return b;",
          "12351:         } else {",
          "12352:           return (com.google.protobuf.ByteString) ref;",
          "12353:         }",
          "12354:       }",
          "12365:       public Builder setLifecycleStage(",
          "12366:           java.lang.String value) {",
          "12367:         if (value == null) {",
          "12368:     throw new NullPointerException();",
          "12369:   }",
          "12370:   bitField0_ |= 0x00000008;",
          "12371:         lifecycleStage_ = value;",
          "12372:         onChanged();",
          "12373:         return this;",
          "12374:       }",
          "12384:       public Builder clearLifecycleStage() {",
          "12385:         bitField0_ = (bitField0_ & ~0x00000008);",
          "12386:         lifecycleStage_ = getDefaultInstance().getLifecycleStage();",
          "12387:         onChanged();",
          "12388:         return this;",
          "12389:       }",
          "12400:       public Builder setLifecycleStageBytes(",
          "12401:           com.google.protobuf.ByteString value) {",
          "12402:         if (value == null) {",
          "12403:     throw new NullPointerException();",
          "12404:   }",
          "12405:   bitField0_ |= 0x00000008;",
          "12406:         lifecycleStage_ = value;",
          "12407:         onChanged();",
          "12408:         return this;",
          "12409:       }",
          "12411:       private long lastUpdateTime_ ;",
          "12420:       @java.lang.Override",
          "12421:       public boolean hasLastUpdateTime() {",
          "12422:         return ((bitField0_ & 0x00000010) != 0);",
          "12423:       }",
          "12432:       @java.lang.Override",
          "12433:       public long getLastUpdateTime() {",
          "12434:         return lastUpdateTime_;",
          "12435:       }",
          "12445:       public Builder setLastUpdateTime(long value) {",
          "12446:         bitField0_ |= 0x00000010;",
          "12447:         lastUpdateTime_ = value;",
          "12448:         onChanged();",
          "12449:         return this;",
          "12450:       }",
          "12459:       public Builder clearLastUpdateTime() {",
          "12460:         bitField0_ = (bitField0_ & ~0x00000010);",
          "12461:         lastUpdateTime_ = 0L;",
          "12462:         onChanged();",
          "12463:         return this;",
          "12464:       }",
          "12466:       private long creationTime_ ;",
          "12475:       @java.lang.Override",
          "12476:       public boolean hasCreationTime() {",
          "12477:         return ((bitField0_ & 0x00000020) != 0);",
          "12478:       }",
          "12487:       @java.lang.Override",
          "12488:       public long getCreationTime() {",
          "12489:         return creationTime_;",
          "12490:       }",
          "12500:       public Builder setCreationTime(long value) {",
          "12501:         bitField0_ |= 0x00000020;",
          "12502:         creationTime_ = value;",
          "12503:         onChanged();",
          "12504:         return this;",
          "12505:       }",
          "12514:       public Builder clearCreationTime() {",
          "12515:         bitField0_ = (bitField0_ & ~0x00000020);",
          "12516:         creationTime_ = 0L;",
          "12517:         onChanged();",
          "12518:         return this;",
          "12519:       }",
          "12521:       private java.util.List<org.mlflow.api.proto.Service.ExperimentTag> tags_ =",
          "12522:         java.util.Collections.emptyList();",
          "12523:       private void ensureTagsIsMutable() {",
          "12524:         if (!((bitField0_ & 0x00000040) != 0)) {",
          "12525:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.ExperimentTag>(tags_);",
          "12526:           bitField0_ |= 0x00000040;",
          "12527:          }",
          "12528:       }",
          "12530:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "12531:           org.mlflow.api.proto.Service.ExperimentTag, org.mlflow.api.proto.Service.ExperimentTag.Builder, org.mlflow.api.proto.Service.ExperimentTagOrBuilder> tagsBuilder_;",
          "12540:       public java.util.List<org.mlflow.api.proto.Service.ExperimentTag> getTagsList() {",
          "12541:         if (tagsBuilder_ == null) {",
          "12542:           return java.util.Collections.unmodifiableList(tags_);",
          "12543:         } else {",
          "12544:           return tagsBuilder_.getMessageList();",
          "12545:         }",
          "12546:       }",
          "12554:       public int getTagsCount() {",
          "12555:         if (tagsBuilder_ == null) {",
          "12556:           return tags_.size();",
          "12557:         } else {",
          "12558:           return tagsBuilder_.getCount();",
          "12559:         }",
          "12560:       }",
          "12568:       public org.mlflow.api.proto.Service.ExperimentTag getTags(int index) {",
          "12569:         if (tagsBuilder_ == null) {",
          "12570:           return tags_.get(index);",
          "12571:         } else {",
          "12572:           return tagsBuilder_.getMessage(index);",
          "12573:         }",
          "12574:       }",
          "12582:       public Builder setTags(",
          "12583:           int index, org.mlflow.api.proto.Service.ExperimentTag value) {",
          "12584:         if (tagsBuilder_ == null) {",
          "12585:           if (value == null) {",
          "12586:             throw new NullPointerException();",
          "12587:           }",
          "12588:           ensureTagsIsMutable();",
          "12589:           tags_.set(index, value);",
          "12590:           onChanged();",
          "12591:         } else {",
          "12592:           tagsBuilder_.setMessage(index, value);",
          "12593:         }",
          "12594:         return this;",
          "12595:       }",
          "12603:       public Builder setTags(",
          "12604:           int index, org.mlflow.api.proto.Service.ExperimentTag.Builder builderForValue) {",
          "12605:         if (tagsBuilder_ == null) {",
          "12606:           ensureTagsIsMutable();",
          "12607:           tags_.set(index, builderForValue.build());",
          "12608:           onChanged();",
          "12609:         } else {",
          "12610:           tagsBuilder_.setMessage(index, builderForValue.build());",
          "12611:         }",
          "12612:         return this;",
          "12613:       }",
          "12621:       public Builder addTags(org.mlflow.api.proto.Service.ExperimentTag value) {",
          "12622:         if (tagsBuilder_ == null) {",
          "12623:           if (value == null) {",
          "12624:             throw new NullPointerException();",
          "12625:           }",
          "12626:           ensureTagsIsMutable();",
          "12627:           tags_.add(value);",
          "12628:           onChanged();",
          "12629:         } else {",
          "12630:           tagsBuilder_.addMessage(value);",
          "12631:         }",
          "12632:         return this;",
          "12633:       }",
          "12641:       public Builder addTags(",
          "12642:           int index, org.mlflow.api.proto.Service.ExperimentTag value) {",
          "12643:         if (tagsBuilder_ == null) {",
          "12644:           if (value == null) {",
          "12645:             throw new NullPointerException();",
          "12646:           }",
          "12647:           ensureTagsIsMutable();",
          "12648:           tags_.add(index, value);",
          "12649:           onChanged();",
          "12650:         } else {",
          "12651:           tagsBuilder_.addMessage(index, value);",
          "12652:         }",
          "12653:         return this;",
          "12654:       }",
          "12662:       public Builder addTags(",
          "12663:           org.mlflow.api.proto.Service.ExperimentTag.Builder builderForValue) {",
          "12664:         if (tagsBuilder_ == null) {",
          "12665:           ensureTagsIsMutable();",
          "12666:           tags_.add(builderForValue.build());",
          "12667:           onChanged();",
          "12668:         } else {",
          "12669:           tagsBuilder_.addMessage(builderForValue.build());",
          "12670:         }",
          "12671:         return this;",
          "12672:       }",
          "12680:       public Builder addTags(",
          "12681:           int index, org.mlflow.api.proto.Service.ExperimentTag.Builder builderForValue) {",
          "12682:         if (tagsBuilder_ == null) {",
          "12683:           ensureTagsIsMutable();",
          "12684:           tags_.add(index, builderForValue.build());",
          "12685:           onChanged();",
          "12686:         } else {",
          "12687:           tagsBuilder_.addMessage(index, builderForValue.build());",
          "12688:         }",
          "12689:         return this;",
          "12690:       }",
          "12698:       public Builder addAllTags(",
          "12699:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.ExperimentTag> values) {",
          "12700:         if (tagsBuilder_ == null) {",
          "12701:           ensureTagsIsMutable();",
          "12702:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "12703:               values, tags_);",
          "12704:           onChanged();",
          "12705:         } else {",
          "12706:           tagsBuilder_.addAllMessages(values);",
          "12707:         }",
          "12708:         return this;",
          "12709:       }",
          "12717:       public Builder clearTags() {",
          "12718:         if (tagsBuilder_ == null) {",
          "12719:           tags_ = java.util.Collections.emptyList();",
          "12720:           bitField0_ = (bitField0_ & ~0x00000040);",
          "12721:           onChanged();",
          "12722:         } else {",
          "12723:           tagsBuilder_.clear();",
          "12724:         }",
          "12725:         return this;",
          "12726:       }",
          "12734:       public Builder removeTags(int index) {",
          "12735:         if (tagsBuilder_ == null) {",
          "12736:           ensureTagsIsMutable();",
          "12737:           tags_.remove(index);",
          "12738:           onChanged();",
          "12739:         } else {",
          "12740:           tagsBuilder_.remove(index);",
          "12741:         }",
          "12742:         return this;",
          "12743:       }",
          "12751:       public org.mlflow.api.proto.Service.ExperimentTag.Builder getTagsBuilder(",
          "12752:           int index) {",
          "12753:         return getTagsFieldBuilder().getBuilder(index);",
          "12754:       }",
          "12762:       public org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "12763:           int index) {",
          "12764:         if (tagsBuilder_ == null) {",
          "12765:           return tags_.get(index);  } else {",
          "12766:           return tagsBuilder_.getMessageOrBuilder(index);",
          "12767:         }",
          "12768:       }",
          "12776:       public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "12777:            getTagsOrBuilderList() {",
          "12778:         if (tagsBuilder_ != null) {",
          "12779:           return tagsBuilder_.getMessageOrBuilderList();",
          "12780:         } else {",
          "12781:           return java.util.Collections.unmodifiableList(tags_);",
          "12782:         }",
          "12783:       }",
          "12791:       public org.mlflow.api.proto.Service.ExperimentTag.Builder addTagsBuilder() {",
          "12792:         return getTagsFieldBuilder().addBuilder(",
          "12793:             org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance());",
          "12794:       }",
          "12802:       public org.mlflow.api.proto.Service.ExperimentTag.Builder addTagsBuilder(",
          "12803:           int index) {",
          "12804:         return getTagsFieldBuilder().addBuilder(",
          "12805:             index, org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance());",
          "12806:       }",
          "12814:       public java.util.List<org.mlflow.api.proto.Service.ExperimentTag.Builder>",
          "12815:            getTagsBuilderList() {",
          "12816:         return getTagsFieldBuilder().getBuilderList();",
          "12817:       }",
          "12818:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "12819:           org.mlflow.api.proto.Service.ExperimentTag, org.mlflow.api.proto.Service.ExperimentTag.Builder, org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "12820:           getTagsFieldBuilder() {",
          "12821:         if (tagsBuilder_ == null) {",
          "12822:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "12823:               org.mlflow.api.proto.Service.ExperimentTag, org.mlflow.api.proto.Service.ExperimentTag.Builder, org.mlflow.api.proto.Service.ExperimentTagOrBuilder>(",
          "12824:                   tags_,",
          "12825:                   ((bitField0_ & 0x00000040) != 0),",
          "12826:                   getParentForChildren(),",
          "12827:                   isClean());",
          "12828:           tags_ = null;",
          "12829:         }",
          "12830:         return tagsBuilder_;",
          "12831:       }",
          "12832:       @java.lang.Override",
          "12833:       public final Builder setUnknownFields(",
          "12834:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "12835:         return super.setUnknownFields(unknownFields);",
          "12836:       }",
          "12838:       @java.lang.Override",
          "12839:       public final Builder mergeUnknownFields(",
          "12840:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "12841:         return super.mergeUnknownFields(unknownFields);",
          "12842:       }",
          "12846:     }",
          "12849:     private static final org.mlflow.api.proto.Service.Experiment DEFAULT_INSTANCE;",
          "12850:     static {",
          "12851:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.Experiment();",
          "12852:     }",
          "12854:     public static org.mlflow.api.proto.Service.Experiment getDefaultInstance() {",
          "12855:       return DEFAULT_INSTANCE;",
          "12856:     }",
          "12858:     @java.lang.Deprecated public static final com.google.protobuf.Parser<Experiment>",
          "12859:         PARSER = new com.google.protobuf.AbstractParser<Experiment>() {",
          "12860:       @java.lang.Override",
          "12861:       public Experiment parsePartialFrom(",
          "12862:           com.google.protobuf.CodedInputStream input,",
          "12863:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12864:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "12865:         return new Experiment(input, extensionRegistry);",
          "12866:       }",
          "12867:     };",
          "12869:     public static com.google.protobuf.Parser<Experiment> parser() {",
          "12870:       return PARSER;",
          "12871:     }",
          "12873:     @java.lang.Override",
          "12874:     public com.google.protobuf.Parser<Experiment> getParserForType() {",
          "12875:       return PARSER;",
          "12876:     }",
          "12878:     @java.lang.Override",
          "12879:     public org.mlflow.api.proto.Service.Experiment getDefaultInstanceForType() {",
          "12880:       return DEFAULT_INSTANCE;",
          "12881:     }",
          "12883:   }",
          "12885:   public interface DatasetInputOrBuilder extends",
          "12887:       com.google.protobuf.MessageOrBuilder {",
          "12896:     java.util.List<org.mlflow.api.proto.Service.InputTag>",
          "12897:         getTagsList();",
          "12905:     org.mlflow.api.proto.Service.InputTag getTags(int index);",
          "12913:     int getTagsCount();",
          "12921:     java.util.List<? extends org.mlflow.api.proto.Service.InputTagOrBuilder>",
          "12922:         getTagsOrBuilderList();",
          "12930:     org.mlflow.api.proto.Service.InputTagOrBuilder getTagsOrBuilder(",
          "12931:         int index);",
          "12941:     boolean hasDataset();",
          "12950:     org.mlflow.api.proto.Service.Dataset getDataset();",
          "12958:     org.mlflow.api.proto.Service.DatasetOrBuilder getDatasetOrBuilder();",
          "12959:   }",
          "12969:   public static final class DatasetInput extends",
          "12970:       com.google.protobuf.GeneratedMessageV3 implements",
          "12972:       DatasetInputOrBuilder {",
          "12973:   private static final long serialVersionUID = 0L;",
          "12975:     private DatasetInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "12976:       super(builder);",
          "12977:     }",
          "12978:     private DatasetInput() {",
          "12979:       tags_ = java.util.Collections.emptyList();",
          "12980:     }",
          "12982:     @java.lang.Override",
          "12983:     @SuppressWarnings({\"unused\"})",
          "12984:     protected java.lang.Object newInstance(",
          "12985:         UnusedPrivateParameter unused) {",
          "12986:       return new DatasetInput();",
          "12987:     }",
          "12989:     @java.lang.Override",
          "12990:     public final com.google.protobuf.UnknownFieldSet",
          "12991:     getUnknownFields() {",
          "12992:       return this.unknownFields;",
          "12993:     }",
          "12994:     private DatasetInput(",
          "12995:         com.google.protobuf.CodedInputStream input,",
          "12996:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12997:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "12998:       this();",
          "12999:       if (extensionRegistry == null) {",
          "13000:         throw new java.lang.NullPointerException();",
          "13001:       }",
          "13002:       int mutable_bitField0_ = 0;",
          "13003:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "13004:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "13005:       try {",
          "13006:         boolean done = false;",
          "13007:         while (!done) {",
          "13008:           int tag = input.readTag();",
          "13009:           switch (tag) {",
          "13010:             case 0:",
          "13011:               done = true;",
          "13012:               break;",
          "13013:             case 10: {",
          "13014:               if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "13015:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.InputTag>();",
          "13016:                 mutable_bitField0_ |= 0x00000001;",
          "13017:               }",
          "13018:               tags_.add(",
          "13019:                   input.readMessage(org.mlflow.api.proto.Service.InputTag.PARSER, extensionRegistry));",
          "13020:               break;",
          "13021:             }",
          "13022:             case 18: {",
          "13023:               org.mlflow.api.proto.Service.Dataset.Builder subBuilder = null;",
          "13024:               if (((bitField0_ & 0x00000001) != 0)) {",
          "13025:                 subBuilder = dataset_.toBuilder();",
          "13026:               }",
          "13027:               dataset_ = input.readMessage(org.mlflow.api.proto.Service.Dataset.PARSER, extensionRegistry);",
          "13028:               if (subBuilder != null) {",
          "13029:                 subBuilder.mergeFrom(dataset_);",
          "13030:                 dataset_ = subBuilder.buildPartial();",
          "13031:               }",
          "13032:               bitField0_ |= 0x00000001;",
          "13033:               break;",
          "13034:             }",
          "13035:             default: {",
          "13036:               if (!parseUnknownField(",
          "13037:                   input, unknownFields, extensionRegistry, tag)) {",
          "13038:                 done = true;",
          "13039:               }",
          "13040:               break;",
          "13041:             }",
          "13042:           }",
          "13043:         }",
          "13044:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "13045:         throw e.setUnfinishedMessage(this);",
          "13046:       } catch (java.io.IOException e) {",
          "13047:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "13048:             e).setUnfinishedMessage(this);",
          "13049:       } finally {",
          "13050:         if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "13051:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "13052:         }",
          "13053:         this.unknownFields = unknownFields.build();",
          "13054:         makeExtensionsImmutable();",
          "13055:       }",
          "13056:     }",
          "13057:     public static final com.google.protobuf.Descriptors.Descriptor",
          "13058:         getDescriptor() {",
          "13059:       return org.mlflow.api.proto.Service.internal_static_mlflow_DatasetInput_descriptor;",
          "13060:     }",
          "13062:     @java.lang.Override",
          "13063:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "13064:         internalGetFieldAccessorTable() {",
          "13065:       return org.mlflow.api.proto.Service.internal_static_mlflow_DatasetInput_fieldAccessorTable",
          "13066:           .ensureFieldAccessorsInitialized(",
          "13067:               org.mlflow.api.proto.Service.DatasetInput.class, org.mlflow.api.proto.Service.DatasetInput.Builder.class);",
          "13068:     }",
          "13070:     private int bitField0_;",
          "13071:     public static final int TAGS_FIELD_NUMBER = 1;",
          "13072:     private java.util.List<org.mlflow.api.proto.Service.InputTag> tags_;",
          "13080:     @java.lang.Override",
          "13081:     public java.util.List<org.mlflow.api.proto.Service.InputTag> getTagsList() {",
          "13082:       return tags_;",
          "13083:     }",
          "13091:     @java.lang.Override",
          "13092:     public java.util.List<? extends org.mlflow.api.proto.Service.InputTagOrBuilder>",
          "13093:         getTagsOrBuilderList() {",
          "13094:       return tags_;",
          "13095:     }",
          "13103:     @java.lang.Override",
          "13104:     public int getTagsCount() {",
          "13105:       return tags_.size();",
          "13106:     }",
          "13114:     @java.lang.Override",
          "13115:     public org.mlflow.api.proto.Service.InputTag getTags(int index) {",
          "13116:       return tags_.get(index);",
          "13117:     }",
          "13125:     @java.lang.Override",
          "13126:     public org.mlflow.api.proto.Service.InputTagOrBuilder getTagsOrBuilder(",
          "13127:         int index) {",
          "13128:       return tags_.get(index);",
          "13129:     }",
          "13131:     public static final int DATASET_FIELD_NUMBER = 2;",
          "13132:     private org.mlflow.api.proto.Service.Dataset dataset_;",
          "13141:     @java.lang.Override",
          "13142:     public boolean hasDataset() {",
          "13143:       return ((bitField0_ & 0x00000001) != 0);",
          "13144:     }",
          "13153:     @java.lang.Override",
          "13154:     public org.mlflow.api.proto.Service.Dataset getDataset() {",
          "13155:       return dataset_ == null ? org.mlflow.api.proto.Service.Dataset.getDefaultInstance() : dataset_;",
          "13156:     }",
          "13164:     @java.lang.Override",
          "13165:     public org.mlflow.api.proto.Service.DatasetOrBuilder getDatasetOrBuilder() {",
          "13166:       return dataset_ == null ? org.mlflow.api.proto.Service.Dataset.getDefaultInstance() : dataset_;",
          "13167:     }",
          "13169:     private byte memoizedIsInitialized = -1;",
          "13170:     @java.lang.Override",
          "13171:     public final boolean isInitialized() {",
          "13172:       byte isInitialized = memoizedIsInitialized;",
          "13173:       if (isInitialized == 1) return true;",
          "13174:       if (isInitialized == 0) return false;",
          "13176:       memoizedIsInitialized = 1;",
          "13177:       return true;",
          "13178:     }",
          "13180:     @java.lang.Override",
          "13181:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "13182:                         throws java.io.IOException {",
          "13183:       for (int i = 0; i < tags_.size(); i++) {",
          "13184:         output.writeMessage(1, tags_.get(i));",
          "13185:       }",
          "13186:       if (((bitField0_ & 0x00000001) != 0)) {",
          "13187:         output.writeMessage(2, getDataset());",
          "13188:       }",
          "13189:       unknownFields.writeTo(output);",
          "13190:     }",
          "13192:     @java.lang.Override",
          "13193:     public int getSerializedSize() {",
          "13194:       int size = memoizedSize;",
          "13195:       if (size != -1) return size;",
          "13197:       size = 0;",
          "13198:       for (int i = 0; i < tags_.size(); i++) {",
          "13199:         size += com.google.protobuf.CodedOutputStream",
          "13200:           .computeMessageSize(1, tags_.get(i));",
          "13201:       }",
          "13202:       if (((bitField0_ & 0x00000001) != 0)) {",
          "13203:         size += com.google.protobuf.CodedOutputStream",
          "13204:           .computeMessageSize(2, getDataset());",
          "13205:       }",
          "13206:       size += unknownFields.getSerializedSize();",
          "13207:       memoizedSize = size;",
          "13208:       return size;",
          "13209:     }",
          "13211:     @java.lang.Override",
          "13212:     public boolean equals(final java.lang.Object obj) {",
          "13213:       if (obj == this) {",
          "13214:        return true;",
          "13215:       }",
          "13216:       if (!(obj instanceof org.mlflow.api.proto.Service.DatasetInput)) {",
          "13217:         return super.equals(obj);",
          "13218:       }",
          "13219:       org.mlflow.api.proto.Service.DatasetInput other = (org.mlflow.api.proto.Service.DatasetInput) obj;",
          "13221:       if (!getTagsList()",
          "13222:           .equals(other.getTagsList())) return false;",
          "13223:       if (hasDataset() != other.hasDataset()) return false;",
          "13224:       if (hasDataset()) {",
          "13225:         if (!getDataset()",
          "13226:             .equals(other.getDataset())) return false;",
          "13227:       }",
          "13228:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "13229:       return true;",
          "13230:     }",
          "13232:     @java.lang.Override",
          "13233:     public int hashCode() {",
          "13234:       if (memoizedHashCode != 0) {",
          "13235:         return memoizedHashCode;",
          "13236:       }",
          "13237:       int hash = 41;",
          "13238:       hash = (19 * hash) + getDescriptor().hashCode();",
          "13239:       if (getTagsCount() > 0) {",
          "13240:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "13241:         hash = (53 * hash) + getTagsList().hashCode();",
          "13242:       }",
          "13243:       if (hasDataset()) {",
          "13244:         hash = (37 * hash) + DATASET_FIELD_NUMBER;",
          "13245:         hash = (53 * hash) + getDataset().hashCode();",
          "13246:       }",
          "13247:       hash = (29 * hash) + unknownFields.hashCode();",
          "13248:       memoizedHashCode = hash;",
          "13249:       return hash;",
          "13250:     }",
          "13252:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13253:         java.nio.ByteBuffer data)",
          "13254:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "13255:       return PARSER.parseFrom(data);",
          "13256:     }",
          "13257:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13258:         java.nio.ByteBuffer data,",
          "13259:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13260:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "13261:       return PARSER.parseFrom(data, extensionRegistry);",
          "13262:     }",
          "13263:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13264:         com.google.protobuf.ByteString data)",
          "13265:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "13266:       return PARSER.parseFrom(data);",
          "13267:     }",
          "13268:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13269:         com.google.protobuf.ByteString data,",
          "13270:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13271:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "13272:       return PARSER.parseFrom(data, extensionRegistry);",
          "13273:     }",
          "13274:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(byte[] data)",
          "13275:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "13276:       return PARSER.parseFrom(data);",
          "13277:     }",
          "13278:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13279:         byte[] data,",
          "13280:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13281:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "13282:       return PARSER.parseFrom(data, extensionRegistry);",
          "13283:     }",
          "13284:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(java.io.InputStream input)",
          "13285:         throws java.io.IOException {",
          "13286:       return com.google.protobuf.GeneratedMessageV3",
          "13287:           .parseWithIOException(PARSER, input);",
          "13288:     }",
          "13289:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13290:         java.io.InputStream input,",
          "13291:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13292:         throws java.io.IOException {",
          "13293:       return com.google.protobuf.GeneratedMessageV3",
          "13294:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "13295:     }",
          "13296:     public static org.mlflow.api.proto.Service.DatasetInput parseDelimitedFrom(java.io.InputStream input)",
          "13297:         throws java.io.IOException {",
          "13298:       return com.google.protobuf.GeneratedMessageV3",
          "13299:           .parseDelimitedWithIOException(PARSER, input);",
          "13300:     }",
          "13301:     public static org.mlflow.api.proto.Service.DatasetInput parseDelimitedFrom(",
          "13302:         java.io.InputStream input,",
          "13303:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13304:         throws java.io.IOException {",
          "13305:       return com.google.protobuf.GeneratedMessageV3",
          "13306:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "13307:     }",
          "13308:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13309:         com.google.protobuf.CodedInputStream input)",
          "13310:         throws java.io.IOException {",
          "13311:       return com.google.protobuf.GeneratedMessageV3",
          "13312:           .parseWithIOException(PARSER, input);",
          "13313:     }",
          "13314:     public static org.mlflow.api.proto.Service.DatasetInput parseFrom(",
          "13315:         com.google.protobuf.CodedInputStream input,",
          "13316:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13317:         throws java.io.IOException {",
          "13318:       return com.google.protobuf.GeneratedMessageV3",
          "13319:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "13320:     }",
          "13322:     @java.lang.Override",
          "13323:     public Builder newBuilderForType() { return newBuilder(); }",
          "13324:     public static Builder newBuilder() {",
          "13325:       return DEFAULT_INSTANCE.toBuilder();",
          "13326:     }",
          "13327:     public static Builder newBuilder(org.mlflow.api.proto.Service.DatasetInput prototype) {",
          "13328:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "13329:     }",
          "13330:     @java.lang.Override",
          "13331:     public Builder toBuilder() {",
          "13332:       return this == DEFAULT_INSTANCE",
          "13333:           ? new Builder() : new Builder().mergeFrom(this);",
          "13334:     }",
          "13336:     @java.lang.Override",
          "13337:     protected Builder newBuilderForType(",
          "13338:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "13339:       Builder builder = new Builder(parent);",
          "13340:       return builder;",
          "13341:     }",
          "13351:     public static final class Builder extends",
          "13352:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "13354:         org.mlflow.api.proto.Service.DatasetInputOrBuilder {",
          "13355:       public static final com.google.protobuf.Descriptors.Descriptor",
          "13356:           getDescriptor() {",
          "13357:         return org.mlflow.api.proto.Service.internal_static_mlflow_DatasetInput_descriptor;",
          "13358:       }",
          "13360:       @java.lang.Override",
          "13361:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "13362:           internalGetFieldAccessorTable() {",
          "13363:         return org.mlflow.api.proto.Service.internal_static_mlflow_DatasetInput_fieldAccessorTable",
          "13364:             .ensureFieldAccessorsInitialized(",
          "13365:                 org.mlflow.api.proto.Service.DatasetInput.class, org.mlflow.api.proto.Service.DatasetInput.Builder.class);",
          "13366:       }",
          "13369:       private Builder() {",
          "13370:         maybeForceBuilderInitialization();",
          "13371:       }",
          "13373:       private Builder(",
          "13374:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "13375:         super(parent);",
          "13376:         maybeForceBuilderInitialization();",
          "13377:       }",
          "13378:       private void maybeForceBuilderInitialization() {",
          "13379:         if (com.google.protobuf.GeneratedMessageV3",
          "13380:                 .alwaysUseFieldBuilders) {",
          "13381:           getTagsFieldBuilder();",
          "13382:           getDatasetFieldBuilder();",
          "13383:         }",
          "13384:       }",
          "13385:       @java.lang.Override",
          "13386:       public Builder clear() {",
          "13387:         super.clear();",
          "13388:         if (tagsBuilder_ == null) {",
          "13389:           tags_ = java.util.Collections.emptyList();",
          "13390:           bitField0_ = (bitField0_ & ~0x00000001);",
          "13391:         } else {",
          "13392:           tagsBuilder_.clear();",
          "13393:         }",
          "13394:         if (datasetBuilder_ == null) {",
          "13395:           dataset_ = null;",
          "13396:         } else {",
          "13397:           datasetBuilder_.clear();",
          "13398:         }",
          "13399:         bitField0_ = (bitField0_ & ~0x00000002);",
          "13400:         return this;",
          "13401:       }",
          "13403:       @java.lang.Override",
          "13404:       public com.google.protobuf.Descriptors.Descriptor",
          "13405:           getDescriptorForType() {",
          "13406:         return org.mlflow.api.proto.Service.internal_static_mlflow_DatasetInput_descriptor;",
          "13407:       }",
          "13409:       @java.lang.Override",
          "13410:       public org.mlflow.api.proto.Service.DatasetInput getDefaultInstanceForType() {",
          "13411:         return org.mlflow.api.proto.Service.DatasetInput.getDefaultInstance();",
          "13412:       }",
          "13414:       @java.lang.Override",
          "13415:       public org.mlflow.api.proto.Service.DatasetInput build() {",
          "13416:         org.mlflow.api.proto.Service.DatasetInput result = buildPartial();",
          "13417:         if (!result.isInitialized()) {",
          "13418:           throw newUninitializedMessageException(result);",
          "13419:         }",
          "13420:         return result;",
          "13421:       }",
          "13423:       @java.lang.Override",
          "13424:       public org.mlflow.api.proto.Service.DatasetInput buildPartial() {",
          "13425:         org.mlflow.api.proto.Service.DatasetInput result = new org.mlflow.api.proto.Service.DatasetInput(this);",
          "13426:         int from_bitField0_ = bitField0_;",
          "13427:         int to_bitField0_ = 0;",
          "13428:         if (tagsBuilder_ == null) {",
          "13429:           if (((bitField0_ & 0x00000001) != 0)) {",
          "13430:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "13431:             bitField0_ = (bitField0_ & ~0x00000001);",
          "13432:           }",
          "13433:           result.tags_ = tags_;",
          "13434:         } else {",
          "13435:           result.tags_ = tagsBuilder_.build();",
          "13436:         }",
          "13437:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "13438:           if (datasetBuilder_ == null) {",
          "13439:             result.dataset_ = dataset_;",
          "13440:           } else {",
          "13441:             result.dataset_ = datasetBuilder_.build();",
          "13442:           }",
          "13443:           to_bitField0_ |= 0x00000001;",
          "13444:         }",
          "13445:         result.bitField0_ = to_bitField0_;",
          "13446:         onBuilt();",
          "13447:         return result;",
          "13448:       }",
          "13450:       @java.lang.Override",
          "13451:       public Builder clone() {",
          "13452:         return super.clone();",
          "13453:       }",
          "13454:       @java.lang.Override",
          "13455:       public Builder setField(",
          "13456:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "13457:           java.lang.Object value) {",
          "13458:         return super.setField(field, value);",
          "13459:       }",
          "13460:       @java.lang.Override",
          "13461:       public Builder clearField(",
          "13462:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "13463:         return super.clearField(field);",
          "13464:       }",
          "13465:       @java.lang.Override",
          "13466:       public Builder clearOneof(",
          "13467:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "13468:         return super.clearOneof(oneof);",
          "13469:       }",
          "13470:       @java.lang.Override",
          "13471:       public Builder setRepeatedField(",
          "13472:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "13473:           int index, java.lang.Object value) {",
          "13474:         return super.setRepeatedField(field, index, value);",
          "13475:       }",
          "13476:       @java.lang.Override",
          "13477:       public Builder addRepeatedField(",
          "13478:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "13479:           java.lang.Object value) {",
          "13480:         return super.addRepeatedField(field, value);",
          "13481:       }",
          "13482:       @java.lang.Override",
          "13483:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "13484:         if (other instanceof org.mlflow.api.proto.Service.DatasetInput) {",
          "13485:           return mergeFrom((org.mlflow.api.proto.Service.DatasetInput)other);",
          "13486:         } else {",
          "13487:           super.mergeFrom(other);",
          "13488:           return this;",
          "13489:         }",
          "13490:       }",
          "13492:       public Builder mergeFrom(org.mlflow.api.proto.Service.DatasetInput other) {",
          "13493:         if (other == org.mlflow.api.proto.Service.DatasetInput.getDefaultInstance()) return this;",
          "13494:         if (tagsBuilder_ == null) {",
          "13495:           if (!other.tags_.isEmpty()) {",
          "13496:             if (tags_.isEmpty()) {",
          "13497:               tags_ = other.tags_;",
          "13498:               bitField0_ = (bitField0_ & ~0x00000001);",
          "13499:             } else {",
          "13500:               ensureTagsIsMutable();",
          "13501:               tags_.addAll(other.tags_);",
          "13502:             }",
          "13503:             onChanged();",
          "13504:           }",
          "13505:         } else {",
          "13506:           if (!other.tags_.isEmpty()) {",
          "13507:             if (tagsBuilder_.isEmpty()) {",
          "13508:               tagsBuilder_.dispose();",
          "13509:               tagsBuilder_ = null;",
          "13510:               tags_ = other.tags_;",
          "13511:               bitField0_ = (bitField0_ & ~0x00000001);",
          "13512:               tagsBuilder_ =",
          "13513:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "13514:                    getTagsFieldBuilder() : null;",
          "13515:             } else {",
          "13516:               tagsBuilder_.addAllMessages(other.tags_);",
          "13517:             }",
          "13518:           }",
          "13519:         }",
          "13520:         if (other.hasDataset()) {",
          "13521:           mergeDataset(other.getDataset());",
          "13522:         }",
          "13523:         this.mergeUnknownFields(other.unknownFields);",
          "13524:         onChanged();",
          "13525:         return this;",
          "13526:       }",
          "13528:       @java.lang.Override",
          "13529:       public final boolean isInitialized() {",
          "13530:         return true;",
          "13531:       }",
          "13533:       @java.lang.Override",
          "13534:       public Builder mergeFrom(",
          "13535:           com.google.protobuf.CodedInputStream input,",
          "13536:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13537:           throws java.io.IOException {",
          "13538:         org.mlflow.api.proto.Service.DatasetInput parsedMessage = null;",
          "13539:         try {",
          "13540:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "13541:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "13542:           parsedMessage = (org.mlflow.api.proto.Service.DatasetInput) e.getUnfinishedMessage();",
          "13543:           throw e.unwrapIOException();",
          "13544:         } finally {",
          "13545:           if (parsedMessage != null) {",
          "13546:             mergeFrom(parsedMessage);",
          "13547:           }",
          "13548:         }",
          "13549:         return this;",
          "13550:       }",
          "13551:       private int bitField0_;",
          "13553:       private java.util.List<org.mlflow.api.proto.Service.InputTag> tags_ =",
          "13554:         java.util.Collections.emptyList();",
          "13555:       private void ensureTagsIsMutable() {",
          "13556:         if (!((bitField0_ & 0x00000001) != 0)) {",
          "13557:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.InputTag>(tags_);",
          "13558:           bitField0_ |= 0x00000001;",
          "13559:          }",
          "13560:       }",
          "13562:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "13563:           org.mlflow.api.proto.Service.InputTag, org.mlflow.api.proto.Service.InputTag.Builder, org.mlflow.api.proto.Service.InputTagOrBuilder> tagsBuilder_;",
          "13572:       public java.util.List<org.mlflow.api.proto.Service.InputTag> getTagsList() {",
          "13573:         if (tagsBuilder_ == null) {",
          "13574:           return java.util.Collections.unmodifiableList(tags_);",
          "13575:         } else {",
          "13576:           return tagsBuilder_.getMessageList();",
          "13577:         }",
          "13578:       }",
          "13586:       public int getTagsCount() {",
          "13587:         if (tagsBuilder_ == null) {",
          "13588:           return tags_.size();",
          "13589:         } else {",
          "13590:           return tagsBuilder_.getCount();",
          "13591:         }",
          "13592:       }",
          "13600:       public org.mlflow.api.proto.Service.InputTag getTags(int index) {",
          "13601:         if (tagsBuilder_ == null) {",
          "13602:           return tags_.get(index);",
          "13603:         } else {",
          "13604:           return tagsBuilder_.getMessage(index);",
          "13605:         }",
          "13606:       }",
          "13614:       public Builder setTags(",
          "13615:           int index, org.mlflow.api.proto.Service.InputTag value) {",
          "13616:         if (tagsBuilder_ == null) {",
          "13617:           if (value == null) {",
          "13618:             throw new NullPointerException();",
          "13619:           }",
          "13620:           ensureTagsIsMutable();",
          "13621:           tags_.set(index, value);",
          "13622:           onChanged();",
          "13623:         } else {",
          "13624:           tagsBuilder_.setMessage(index, value);",
          "13625:         }",
          "13626:         return this;",
          "13627:       }",
          "13635:       public Builder setTags(",
          "13636:           int index, org.mlflow.api.proto.Service.InputTag.Builder builderForValue) {",
          "13637:         if (tagsBuilder_ == null) {",
          "13638:           ensureTagsIsMutable();",
          "13639:           tags_.set(index, builderForValue.build());",
          "13640:           onChanged();",
          "13641:         } else {",
          "13642:           tagsBuilder_.setMessage(index, builderForValue.build());",
          "13643:         }",
          "13644:         return this;",
          "13645:       }",
          "13653:       public Builder addTags(org.mlflow.api.proto.Service.InputTag value) {",
          "13654:         if (tagsBuilder_ == null) {",
          "13655:           if (value == null) {",
          "13656:             throw new NullPointerException();",
          "13657:           }",
          "13658:           ensureTagsIsMutable();",
          "13659:           tags_.add(value);",
          "13660:           onChanged();",
          "13661:         } else {",
          "13662:           tagsBuilder_.addMessage(value);",
          "13663:         }",
          "13664:         return this;",
          "13665:       }",
          "13673:       public Builder addTags(",
          "13674:           int index, org.mlflow.api.proto.Service.InputTag value) {",
          "13675:         if (tagsBuilder_ == null) {",
          "13676:           if (value == null) {",
          "13677:             throw new NullPointerException();",
          "13678:           }",
          "13679:           ensureTagsIsMutable();",
          "13680:           tags_.add(index, value);",
          "13681:           onChanged();",
          "13682:         } else {",
          "13683:           tagsBuilder_.addMessage(index, value);",
          "13684:         }",
          "13685:         return this;",
          "13686:       }",
          "13694:       public Builder addTags(",
          "13695:           org.mlflow.api.proto.Service.InputTag.Builder builderForValue) {",
          "13696:         if (tagsBuilder_ == null) {",
          "13697:           ensureTagsIsMutable();",
          "13698:           tags_.add(builderForValue.build());",
          "13699:           onChanged();",
          "13700:         } else {",
          "13701:           tagsBuilder_.addMessage(builderForValue.build());",
          "13702:         }",
          "13703:         return this;",
          "13704:       }",
          "13712:       public Builder addTags(",
          "13713:           int index, org.mlflow.api.proto.Service.InputTag.Builder builderForValue) {",
          "13714:         if (tagsBuilder_ == null) {",
          "13715:           ensureTagsIsMutable();",
          "13716:           tags_.add(index, builderForValue.build());",
          "13717:           onChanged();",
          "13718:         } else {",
          "13719:           tagsBuilder_.addMessage(index, builderForValue.build());",
          "13720:         }",
          "13721:         return this;",
          "13722:       }",
          "13730:       public Builder addAllTags(",
          "13731:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.InputTag> values) {",
          "13732:         if (tagsBuilder_ == null) {",
          "13733:           ensureTagsIsMutable();",
          "13734:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "13735:               values, tags_);",
          "13736:           onChanged();",
          "13737:         } else {",
          "13738:           tagsBuilder_.addAllMessages(values);",
          "13739:         }",
          "13740:         return this;",
          "13741:       }",
          "13749:       public Builder clearTags() {",
          "13750:         if (tagsBuilder_ == null) {",
          "13751:           tags_ = java.util.Collections.emptyList();",
          "13752:           bitField0_ = (bitField0_ & ~0x00000001);",
          "13753:           onChanged();",
          "13754:         } else {",
          "13755:           tagsBuilder_.clear();",
          "13756:         }",
          "13757:         return this;",
          "13758:       }",
          "13766:       public Builder removeTags(int index) {",
          "13767:         if (tagsBuilder_ == null) {",
          "13768:           ensureTagsIsMutable();",
          "13769:           tags_.remove(index);",
          "13770:           onChanged();",
          "13771:         } else {",
          "13772:           tagsBuilder_.remove(index);",
          "13773:         }",
          "13774:         return this;",
          "13775:       }",
          "13783:       public org.mlflow.api.proto.Service.InputTag.Builder getTagsBuilder(",
          "13784:           int index) {",
          "13785:         return getTagsFieldBuilder().getBuilder(index);",
          "13786:       }",
          "13794:       public org.mlflow.api.proto.Service.InputTagOrBuilder getTagsOrBuilder(",
          "13795:           int index) {",
          "13796:         if (tagsBuilder_ == null) {",
          "13797:           return tags_.get(index);  } else {",
          "13798:           return tagsBuilder_.getMessageOrBuilder(index);",
          "13799:         }",
          "13800:       }",
          "13808:       public java.util.List<? extends org.mlflow.api.proto.Service.InputTagOrBuilder>",
          "13809:            getTagsOrBuilderList() {",
          "13810:         if (tagsBuilder_ != null) {",
          "13811:           return tagsBuilder_.getMessageOrBuilderList();",
          "13812:         } else {",
          "13813:           return java.util.Collections.unmodifiableList(tags_);",
          "13814:         }",
          "13815:       }",
          "13823:       public org.mlflow.api.proto.Service.InputTag.Builder addTagsBuilder() {",
          "13824:         return getTagsFieldBuilder().addBuilder(",
          "13825:             org.mlflow.api.proto.Service.InputTag.getDefaultInstance());",
          "13826:       }",
          "13834:       public org.mlflow.api.proto.Service.InputTag.Builder addTagsBuilder(",
          "13835:           int index) {",
          "13836:         return getTagsFieldBuilder().addBuilder(",
          "13837:             index, org.mlflow.api.proto.Service.InputTag.getDefaultInstance());",
          "13838:       }",
          "13846:       public java.util.List<org.mlflow.api.proto.Service.InputTag.Builder>",
          "13847:            getTagsBuilderList() {",
          "13848:         return getTagsFieldBuilder().getBuilderList();",
          "13849:       }",
          "13850:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "13851:           org.mlflow.api.proto.Service.InputTag, org.mlflow.api.proto.Service.InputTag.Builder, org.mlflow.api.proto.Service.InputTagOrBuilder>",
          "13852:           getTagsFieldBuilder() {",
          "13853:         if (tagsBuilder_ == null) {",
          "13854:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "13855:               org.mlflow.api.proto.Service.InputTag, org.mlflow.api.proto.Service.InputTag.Builder, org.mlflow.api.proto.Service.InputTagOrBuilder>(",
          "13856:                   tags_,",
          "13857:                   ((bitField0_ & 0x00000001) != 0),",
          "13858:                   getParentForChildren(),",
          "13859:                   isClean());",
          "13860:           tags_ = null;",
          "13861:         }",
          "13862:         return tagsBuilder_;",
          "13863:       }",
          "13865:       private org.mlflow.api.proto.Service.Dataset dataset_;",
          "13866:       private com.google.protobuf.SingleFieldBuilderV3<",
          "13867:           org.mlflow.api.proto.Service.Dataset, org.mlflow.api.proto.Service.Dataset.Builder, org.mlflow.api.proto.Service.DatasetOrBuilder> datasetBuilder_;",
          "13876:       public boolean hasDataset() {",
          "13877:         return ((bitField0_ & 0x00000002) != 0);",
          "13878:       }",
          "13887:       public org.mlflow.api.proto.Service.Dataset getDataset() {",
          "13888:         if (datasetBuilder_ == null) {",
          "13889:           return dataset_ == null ? org.mlflow.api.proto.Service.Dataset.getDefaultInstance() : dataset_;",
          "13890:         } else {",
          "13891:           return datasetBuilder_.getMessage();",
          "13892:         }",
          "13893:       }",
          "13901:       public Builder setDataset(org.mlflow.api.proto.Service.Dataset value) {",
          "13902:         if (datasetBuilder_ == null) {",
          "13903:           if (value == null) {",
          "13904:             throw new NullPointerException();",
          "13905:           }",
          "13906:           dataset_ = value;",
          "13907:           onChanged();",
          "13908:         } else {",
          "13909:           datasetBuilder_.setMessage(value);",
          "13910:         }",
          "13911:         bitField0_ |= 0x00000002;",
          "13912:         return this;",
          "13913:       }",
          "13921:       public Builder setDataset(",
          "13922:           org.mlflow.api.proto.Service.Dataset.Builder builderForValue) {",
          "13923:         if (datasetBuilder_ == null) {",
          "13924:           dataset_ = builderForValue.build();",
          "13925:           onChanged();",
          "13926:         } else {",
          "13927:           datasetBuilder_.setMessage(builderForValue.build());",
          "13928:         }",
          "13929:         bitField0_ |= 0x00000002;",
          "13930:         return this;",
          "13931:       }",
          "13939:       public Builder mergeDataset(org.mlflow.api.proto.Service.Dataset value) {",
          "13940:         if (datasetBuilder_ == null) {",
          "13941:           if (((bitField0_ & 0x00000002) != 0) &&",
          "13942:               dataset_ != null &&",
          "13943:               dataset_ != org.mlflow.api.proto.Service.Dataset.getDefaultInstance()) {",
          "13944:             dataset_ =",
          "13945:               org.mlflow.api.proto.Service.Dataset.newBuilder(dataset_).mergeFrom(value).buildPartial();",
          "13946:           } else {",
          "13947:             dataset_ = value;",
          "13948:           }",
          "13949:           onChanged();",
          "13950:         } else {",
          "13951:           datasetBuilder_.mergeFrom(value);",
          "13952:         }",
          "13953:         bitField0_ |= 0x00000002;",
          "13954:         return this;",
          "13955:       }",
          "13963:       public Builder clearDataset() {",
          "13964:         if (datasetBuilder_ == null) {",
          "13965:           dataset_ = null;",
          "13966:           onChanged();",
          "13967:         } else {",
          "13968:           datasetBuilder_.clear();",
          "13969:         }",
          "13970:         bitField0_ = (bitField0_ & ~0x00000002);",
          "13971:         return this;",
          "13972:       }",
          "13980:       public org.mlflow.api.proto.Service.Dataset.Builder getDatasetBuilder() {",
          "13981:         bitField0_ |= 0x00000002;",
          "13982:         onChanged();",
          "13983:         return getDatasetFieldBuilder().getBuilder();",
          "13984:       }",
          "13992:       public org.mlflow.api.proto.Service.DatasetOrBuilder getDatasetOrBuilder() {",
          "13993:         if (datasetBuilder_ != null) {",
          "13994:           return datasetBuilder_.getMessageOrBuilder();",
          "13995:         } else {",
          "13996:           return dataset_ == null ?",
          "13997:               org.mlflow.api.proto.Service.Dataset.getDefaultInstance() : dataset_;",
          "13998:         }",
          "13999:       }",
          "14007:       private com.google.protobuf.SingleFieldBuilderV3<",
          "14008:           org.mlflow.api.proto.Service.Dataset, org.mlflow.api.proto.Service.Dataset.Builder, org.mlflow.api.proto.Service.DatasetOrBuilder>",
          "14009:           getDatasetFieldBuilder() {",
          "14010:         if (datasetBuilder_ == null) {",
          "14011:           datasetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "14012:               org.mlflow.api.proto.Service.Dataset, org.mlflow.api.proto.Service.Dataset.Builder, org.mlflow.api.proto.Service.DatasetOrBuilder>(",
          "14013:                   getDataset(),",
          "14014:                   getParentForChildren(),",
          "14015:                   isClean());",
          "14016:           dataset_ = null;",
          "14017:         }",
          "14018:         return datasetBuilder_;",
          "14019:       }",
          "14020:       @java.lang.Override",
          "14021:       public final Builder setUnknownFields(",
          "14022:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "14023:         return super.setUnknownFields(unknownFields);",
          "14024:       }",
          "14026:       @java.lang.Override",
          "14027:       public final Builder mergeUnknownFields(",
          "14028:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "14029:         return super.mergeUnknownFields(unknownFields);",
          "14030:       }",
          "14034:     }",
          "14037:     private static final org.mlflow.api.proto.Service.DatasetInput DEFAULT_INSTANCE;",
          "14038:     static {",
          "14039:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DatasetInput();",
          "14040:     }",
          "14042:     public static org.mlflow.api.proto.Service.DatasetInput getDefaultInstance() {",
          "14043:       return DEFAULT_INSTANCE;",
          "14044:     }",
          "14046:     @java.lang.Deprecated public static final com.google.protobuf.Parser<DatasetInput>",
          "14047:         PARSER = new com.google.protobuf.AbstractParser<DatasetInput>() {",
          "14048:       @java.lang.Override",
          "14049:       public DatasetInput parsePartialFrom(",
          "14050:           com.google.protobuf.CodedInputStream input,",
          "14051:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14052:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14053:         return new DatasetInput(input, extensionRegistry);",
          "14054:       }",
          "14055:     };",
          "14057:     public static com.google.protobuf.Parser<DatasetInput> parser() {",
          "14058:       return PARSER;",
          "14059:     }",
          "14061:     @java.lang.Override",
          "14062:     public com.google.protobuf.Parser<DatasetInput> getParserForType() {",
          "14063:       return PARSER;",
          "14064:     }",
          "14066:     @java.lang.Override",
          "14067:     public org.mlflow.api.proto.Service.DatasetInput getDefaultInstanceForType() {",
          "14068:       return DEFAULT_INSTANCE;",
          "14069:     }",
          "14071:   }",
          "14073:   public interface InputTagOrBuilder extends",
          "14075:       com.google.protobuf.MessageOrBuilder {",
          "14085:     boolean hasKey();",
          "14094:     java.lang.String getKey();",
          "14103:     com.google.protobuf.ByteString",
          "14104:         getKeyBytes();",
          "14114:     boolean hasValue();",
          "14123:     java.lang.String getValue();",
          "14132:     com.google.protobuf.ByteString",
          "14133:         getValueBytes();",
          "14134:   }",
          "14144:   public static final class InputTag extends",
          "14145:       com.google.protobuf.GeneratedMessageV3 implements",
          "14147:       InputTagOrBuilder {",
          "14148:   private static final long serialVersionUID = 0L;",
          "14150:     private InputTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "14151:       super(builder);",
          "14152:     }",
          "14153:     private InputTag() {",
          "14154:       key_ = \"\";",
          "14155:       value_ = \"\";",
          "14156:     }",
          "14158:     @java.lang.Override",
          "14159:     @SuppressWarnings({\"unused\"})",
          "14160:     protected java.lang.Object newInstance(",
          "14161:         UnusedPrivateParameter unused) {",
          "14162:       return new InputTag();",
          "14163:     }",
          "14165:     @java.lang.Override",
          "14166:     public final com.google.protobuf.UnknownFieldSet",
          "14167:     getUnknownFields() {",
          "14168:       return this.unknownFields;",
          "14169:     }",
          "14170:     private InputTag(",
          "14171:         com.google.protobuf.CodedInputStream input,",
          "14172:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14173:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "14174:       this();",
          "14175:       if (extensionRegistry == null) {",
          "14176:         throw new java.lang.NullPointerException();",
          "14177:       }",
          "14178:       int mutable_bitField0_ = 0;",
          "14179:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "14180:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "14181:       try {",
          "14182:         boolean done = false;",
          "14183:         while (!done) {",
          "14184:           int tag = input.readTag();",
          "14185:           switch (tag) {",
          "14186:             case 0:",
          "14187:               done = true;",
          "14188:               break;",
          "14189:             case 10: {",
          "14190:               com.google.protobuf.ByteString bs = input.readBytes();",
          "14191:               bitField0_ |= 0x00000001;",
          "14192:               key_ = bs;",
          "14193:               break;",
          "14194:             }",
          "14195:             case 18: {",
          "14196:               com.google.protobuf.ByteString bs = input.readBytes();",
          "14197:               bitField0_ |= 0x00000002;",
          "14198:               value_ = bs;",
          "14199:               break;",
          "14200:             }",
          "14201:             default: {",
          "14202:               if (!parseUnknownField(",
          "14203:                   input, unknownFields, extensionRegistry, tag)) {",
          "14204:                 done = true;",
          "14205:               }",
          "14206:               break;",
          "14207:             }",
          "14208:           }",
          "14209:         }",
          "14210:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "14211:         throw e.setUnfinishedMessage(this);",
          "14212:       } catch (java.io.IOException e) {",
          "14213:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "14214:             e).setUnfinishedMessage(this);",
          "14215:       } finally {",
          "14216:         this.unknownFields = unknownFields.build();",
          "14217:         makeExtensionsImmutable();",
          "14218:       }",
          "14219:     }",
          "14220:     public static final com.google.protobuf.Descriptors.Descriptor",
          "14221:         getDescriptor() {",
          "14222:       return org.mlflow.api.proto.Service.internal_static_mlflow_InputTag_descriptor;",
          "14223:     }",
          "14225:     @java.lang.Override",
          "14226:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "14227:         internalGetFieldAccessorTable() {",
          "14228:       return org.mlflow.api.proto.Service.internal_static_mlflow_InputTag_fieldAccessorTable",
          "14229:           .ensureFieldAccessorsInitialized(",
          "14230:               org.mlflow.api.proto.Service.InputTag.class, org.mlflow.api.proto.Service.InputTag.Builder.class);",
          "14231:     }",
          "14233:     private int bitField0_;",
          "14234:     public static final int KEY_FIELD_NUMBER = 1;",
          "14235:     private volatile java.lang.Object key_;",
          "14244:     @java.lang.Override",
          "14245:     public boolean hasKey() {",
          "14246:       return ((bitField0_ & 0x00000001) != 0);",
          "14247:     }",
          "14256:     @java.lang.Override",
          "14257:     public java.lang.String getKey() {",
          "14258:       java.lang.Object ref = key_;",
          "14259:       if (ref instanceof java.lang.String) {",
          "14260:         return (java.lang.String) ref;",
          "14261:       } else {",
          "14262:         com.google.protobuf.ByteString bs =",
          "14263:             (com.google.protobuf.ByteString) ref;",
          "14264:         java.lang.String s = bs.toStringUtf8();",
          "14265:         if (bs.isValidUtf8()) {",
          "14266:           key_ = s;",
          "14267:         }",
          "14268:         return s;",
          "14269:       }",
          "14270:     }",
          "14279:     @java.lang.Override",
          "14280:     public com.google.protobuf.ByteString",
          "14281:         getKeyBytes() {",
          "14282:       java.lang.Object ref = key_;",
          "14283:       if (ref instanceof java.lang.String) {",
          "14284:         com.google.protobuf.ByteString b =",
          "14285:             com.google.protobuf.ByteString.copyFromUtf8(",
          "14286:                 (java.lang.String) ref);",
          "14287:         key_ = b;",
          "14288:         return b;",
          "14289:       } else {",
          "14290:         return (com.google.protobuf.ByteString) ref;",
          "14291:       }",
          "14292:     }",
          "14294:     public static final int VALUE_FIELD_NUMBER = 2;",
          "14295:     private volatile java.lang.Object value_;",
          "14304:     @java.lang.Override",
          "14305:     public boolean hasValue() {",
          "14306:       return ((bitField0_ & 0x00000002) != 0);",
          "14307:     }",
          "14316:     @java.lang.Override",
          "14317:     public java.lang.String getValue() {",
          "14318:       java.lang.Object ref = value_;",
          "14319:       if (ref instanceof java.lang.String) {",
          "14320:         return (java.lang.String) ref;",
          "14321:       } else {",
          "14322:         com.google.protobuf.ByteString bs =",
          "14323:             (com.google.protobuf.ByteString) ref;",
          "14324:         java.lang.String s = bs.toStringUtf8();",
          "14325:         if (bs.isValidUtf8()) {",
          "14326:           value_ = s;",
          "14327:         }",
          "14328:         return s;",
          "14329:       }",
          "14330:     }",
          "14339:     @java.lang.Override",
          "14340:     public com.google.protobuf.ByteString",
          "14341:         getValueBytes() {",
          "14342:       java.lang.Object ref = value_;",
          "14343:       if (ref instanceof java.lang.String) {",
          "14344:         com.google.protobuf.ByteString b =",
          "14345:             com.google.protobuf.ByteString.copyFromUtf8(",
          "14346:                 (java.lang.String) ref);",
          "14347:         value_ = b;",
          "14348:         return b;",
          "14349:       } else {",
          "14350:         return (com.google.protobuf.ByteString) ref;",
          "14351:       }",
          "14352:     }",
          "14354:     private byte memoizedIsInitialized = -1;",
          "14355:     @java.lang.Override",
          "14356:     public final boolean isInitialized() {",
          "14357:       byte isInitialized = memoizedIsInitialized;",
          "14358:       if (isInitialized == 1) return true;",
          "14359:       if (isInitialized == 0) return false;",
          "14361:       memoizedIsInitialized = 1;",
          "14362:       return true;",
          "14363:     }",
          "14365:     @java.lang.Override",
          "14366:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "14367:                         throws java.io.IOException {",
          "14368:       if (((bitField0_ & 0x00000001) != 0)) {",
          "14369:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);",
          "14370:       }",
          "14371:       if (((bitField0_ & 0x00000002) != 0)) {",
          "14372:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);",
          "14373:       }",
          "14374:       unknownFields.writeTo(output);",
          "14375:     }",
          "14377:     @java.lang.Override",
          "14378:     public int getSerializedSize() {",
          "14379:       int size = memoizedSize;",
          "14380:       if (size != -1) return size;",
          "14382:       size = 0;",
          "14383:       if (((bitField0_ & 0x00000001) != 0)) {",
          "14384:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);",
          "14385:       }",
          "14386:       if (((bitField0_ & 0x00000002) != 0)) {",
          "14387:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);",
          "14388:       }",
          "14389:       size += unknownFields.getSerializedSize();",
          "14390:       memoizedSize = size;",
          "14391:       return size;",
          "14392:     }",
          "14394:     @java.lang.Override",
          "14395:     public boolean equals(final java.lang.Object obj) {",
          "14396:       if (obj == this) {",
          "14397:        return true;",
          "14398:       }",
          "14399:       if (!(obj instanceof org.mlflow.api.proto.Service.InputTag)) {",
          "14400:         return super.equals(obj);",
          "14401:       }",
          "14402:       org.mlflow.api.proto.Service.InputTag other = (org.mlflow.api.proto.Service.InputTag) obj;",
          "14404:       if (hasKey() != other.hasKey()) return false;",
          "14405:       if (hasKey()) {",
          "14406:         if (!getKey()",
          "14407:             .equals(other.getKey())) return false;",
          "14408:       }",
          "14409:       if (hasValue() != other.hasValue()) return false;",
          "14410:       if (hasValue()) {",
          "14411:         if (!getValue()",
          "14412:             .equals(other.getValue())) return false;",
          "14413:       }",
          "14414:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "14415:       return true;",
          "14416:     }",
          "14418:     @java.lang.Override",
          "14419:     public int hashCode() {",
          "14420:       if (memoizedHashCode != 0) {",
          "14421:         return memoizedHashCode;",
          "14422:       }",
          "14423:       int hash = 41;",
          "14424:       hash = (19 * hash) + getDescriptor().hashCode();",
          "14425:       if (hasKey()) {",
          "14426:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "14427:         hash = (53 * hash) + getKey().hashCode();",
          "14428:       }",
          "14429:       if (hasValue()) {",
          "14430:         hash = (37 * hash) + VALUE_FIELD_NUMBER;",
          "14431:         hash = (53 * hash) + getValue().hashCode();",
          "14432:       }",
          "14433:       hash = (29 * hash) + unknownFields.hashCode();",
          "14434:       memoizedHashCode = hash;",
          "14435:       return hash;",
          "14436:     }",
          "14438:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14439:         java.nio.ByteBuffer data)",
          "14440:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "14441:       return PARSER.parseFrom(data);",
          "14442:     }",
          "14443:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14444:         java.nio.ByteBuffer data,",
          "14445:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14446:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "14447:       return PARSER.parseFrom(data, extensionRegistry);",
          "14448:     }",
          "14449:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14450:         com.google.protobuf.ByteString data)",
          "14451:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "14452:       return PARSER.parseFrom(data);",
          "14453:     }",
          "14454:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14455:         com.google.protobuf.ByteString data,",
          "14456:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14457:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "14458:       return PARSER.parseFrom(data, extensionRegistry);",
          "14459:     }",
          "14460:     public static org.mlflow.api.proto.Service.InputTag parseFrom(byte[] data)",
          "14461:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "14462:       return PARSER.parseFrom(data);",
          "14463:     }",
          "14464:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14465:         byte[] data,",
          "14466:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14467:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "14468:       return PARSER.parseFrom(data, extensionRegistry);",
          "14469:     }",
          "14470:     public static org.mlflow.api.proto.Service.InputTag parseFrom(java.io.InputStream input)",
          "14471:         throws java.io.IOException {",
          "14472:       return com.google.protobuf.GeneratedMessageV3",
          "14473:           .parseWithIOException(PARSER, input);",
          "14474:     }",
          "14475:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14476:         java.io.InputStream input,",
          "14477:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14478:         throws java.io.IOException {",
          "14479:       return com.google.protobuf.GeneratedMessageV3",
          "14480:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "14481:     }",
          "14482:     public static org.mlflow.api.proto.Service.InputTag parseDelimitedFrom(java.io.InputStream input)",
          "14483:         throws java.io.IOException {",
          "14484:       return com.google.protobuf.GeneratedMessageV3",
          "14485:           .parseDelimitedWithIOException(PARSER, input);",
          "14486:     }",
          "14487:     public static org.mlflow.api.proto.Service.InputTag parseDelimitedFrom(",
          "14488:         java.io.InputStream input,",
          "14489:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14490:         throws java.io.IOException {",
          "14491:       return com.google.protobuf.GeneratedMessageV3",
          "14492:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "14493:     }",
          "14494:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14495:         com.google.protobuf.CodedInputStream input)",
          "14496:         throws java.io.IOException {",
          "14497:       return com.google.protobuf.GeneratedMessageV3",
          "14498:           .parseWithIOException(PARSER, input);",
          "14499:     }",
          "14500:     public static org.mlflow.api.proto.Service.InputTag parseFrom(",
          "14501:         com.google.protobuf.CodedInputStream input,",
          "14502:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14503:         throws java.io.IOException {",
          "14504:       return com.google.protobuf.GeneratedMessageV3",
          "14505:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "14506:     }",
          "14508:     @java.lang.Override",
          "14509:     public Builder newBuilderForType() { return newBuilder(); }",
          "14510:     public static Builder newBuilder() {",
          "14511:       return DEFAULT_INSTANCE.toBuilder();",
          "14512:     }",
          "14513:     public static Builder newBuilder(org.mlflow.api.proto.Service.InputTag prototype) {",
          "14514:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "14515:     }",
          "14516:     @java.lang.Override",
          "14517:     public Builder toBuilder() {",
          "14518:       return this == DEFAULT_INSTANCE",
          "14519:           ? new Builder() : new Builder().mergeFrom(this);",
          "14520:     }",
          "14522:     @java.lang.Override",
          "14523:     protected Builder newBuilderForType(",
          "14524:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "14525:       Builder builder = new Builder(parent);",
          "14526:       return builder;",
          "14527:     }",
          "14537:     public static final class Builder extends",
          "14538:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "14540:         org.mlflow.api.proto.Service.InputTagOrBuilder {",
          "14541:       public static final com.google.protobuf.Descriptors.Descriptor",
          "14542:           getDescriptor() {",
          "14543:         return org.mlflow.api.proto.Service.internal_static_mlflow_InputTag_descriptor;",
          "14544:       }",
          "14546:       @java.lang.Override",
          "14547:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "14548:           internalGetFieldAccessorTable() {",
          "14549:         return org.mlflow.api.proto.Service.internal_static_mlflow_InputTag_fieldAccessorTable",
          "14550:             .ensureFieldAccessorsInitialized(",
          "14551:                 org.mlflow.api.proto.Service.InputTag.class, org.mlflow.api.proto.Service.InputTag.Builder.class);",
          "14552:       }",
          "14555:       private Builder() {",
          "14556:         maybeForceBuilderInitialization();",
          "14557:       }",
          "14559:       private Builder(",
          "14560:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "14561:         super(parent);",
          "14562:         maybeForceBuilderInitialization();",
          "14563:       }",
          "14564:       private void maybeForceBuilderInitialization() {",
          "14565:         if (com.google.protobuf.GeneratedMessageV3",
          "14566:                 .alwaysUseFieldBuilders) {",
          "14567:         }",
          "14568:       }",
          "14569:       @java.lang.Override",
          "14570:       public Builder clear() {",
          "14571:         super.clear();",
          "14572:         key_ = \"\";",
          "14573:         bitField0_ = (bitField0_ & ~0x00000001);",
          "14574:         value_ = \"\";",
          "14575:         bitField0_ = (bitField0_ & ~0x00000002);",
          "14576:         return this;",
          "14577:       }",
          "14579:       @java.lang.Override",
          "14580:       public com.google.protobuf.Descriptors.Descriptor",
          "14581:           getDescriptorForType() {",
          "14582:         return org.mlflow.api.proto.Service.internal_static_mlflow_InputTag_descriptor;",
          "14583:       }",
          "14585:       @java.lang.Override",
          "14586:       public org.mlflow.api.proto.Service.InputTag getDefaultInstanceForType() {",
          "14587:         return org.mlflow.api.proto.Service.InputTag.getDefaultInstance();",
          "14588:       }",
          "14590:       @java.lang.Override",
          "14591:       public org.mlflow.api.proto.Service.InputTag build() {",
          "14592:         org.mlflow.api.proto.Service.InputTag result = buildPartial();",
          "14593:         if (!result.isInitialized()) {",
          "14594:           throw newUninitializedMessageException(result);",
          "14595:         }",
          "14596:         return result;",
          "14597:       }",
          "14599:       @java.lang.Override",
          "14600:       public org.mlflow.api.proto.Service.InputTag buildPartial() {",
          "14601:         org.mlflow.api.proto.Service.InputTag result = new org.mlflow.api.proto.Service.InputTag(this);",
          "14602:         int from_bitField0_ = bitField0_;",
          "14603:         int to_bitField0_ = 0;",
          "14604:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "14605:           to_bitField0_ |= 0x00000001;",
          "14606:         }",
          "14607:         result.key_ = key_;",
          "14608:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "14609:           to_bitField0_ |= 0x00000002;",
          "14610:         }",
          "14611:         result.value_ = value_;",
          "14612:         result.bitField0_ = to_bitField0_;",
          "14613:         onBuilt();",
          "14614:         return result;",
          "14615:       }",
          "14617:       @java.lang.Override",
          "14618:       public Builder clone() {",
          "14619:         return super.clone();",
          "14620:       }",
          "14621:       @java.lang.Override",
          "14622:       public Builder setField(",
          "14623:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "14624:           java.lang.Object value) {",
          "14625:         return super.setField(field, value);",
          "14626:       }",
          "14627:       @java.lang.Override",
          "14628:       public Builder clearField(",
          "14629:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "14630:         return super.clearField(field);",
          "14631:       }",
          "14632:       @java.lang.Override",
          "14633:       public Builder clearOneof(",
          "14634:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "14635:         return super.clearOneof(oneof);",
          "14636:       }",
          "14637:       @java.lang.Override",
          "14638:       public Builder setRepeatedField(",
          "14639:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "14640:           int index, java.lang.Object value) {",
          "14641:         return super.setRepeatedField(field, index, value);",
          "14642:       }",
          "14643:       @java.lang.Override",
          "14644:       public Builder addRepeatedField(",
          "14645:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "14646:           java.lang.Object value) {",
          "14647:         return super.addRepeatedField(field, value);",
          "14648:       }",
          "14649:       @java.lang.Override",
          "14650:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "14651:         if (other instanceof org.mlflow.api.proto.Service.InputTag) {",
          "14652:           return mergeFrom((org.mlflow.api.proto.Service.InputTag)other);",
          "14653:         } else {",
          "14654:           super.mergeFrom(other);",
          "14655:           return this;",
          "14656:         }",
          "14657:       }",
          "14659:       public Builder mergeFrom(org.mlflow.api.proto.Service.InputTag other) {",
          "14660:         if (other == org.mlflow.api.proto.Service.InputTag.getDefaultInstance()) return this;",
          "14661:         if (other.hasKey()) {",
          "14662:           bitField0_ |= 0x00000001;",
          "14663:           key_ = other.key_;",
          "14664:           onChanged();",
          "14665:         }",
          "14666:         if (other.hasValue()) {",
          "14667:           bitField0_ |= 0x00000002;",
          "14668:           value_ = other.value_;",
          "14669:           onChanged();",
          "14670:         }",
          "14671:         this.mergeUnknownFields(other.unknownFields);",
          "14672:         onChanged();",
          "14673:         return this;",
          "14674:       }",
          "14676:       @java.lang.Override",
          "14677:       public final boolean isInitialized() {",
          "14678:         return true;",
          "14679:       }",
          "14681:       @java.lang.Override",
          "14682:       public Builder mergeFrom(",
          "14683:           com.google.protobuf.CodedInputStream input,",
          "14684:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14685:           throws java.io.IOException {",
          "14686:         org.mlflow.api.proto.Service.InputTag parsedMessage = null;",
          "14687:         try {",
          "14688:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "14689:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "14690:           parsedMessage = (org.mlflow.api.proto.Service.InputTag) e.getUnfinishedMessage();",
          "14691:           throw e.unwrapIOException();",
          "14692:         } finally {",
          "14693:           if (parsedMessage != null) {",
          "14694:             mergeFrom(parsedMessage);",
          "14695:           }",
          "14696:         }",
          "14697:         return this;",
          "14698:       }",
          "14699:       private int bitField0_;",
          "14701:       private java.lang.Object key_ = \"\";",
          "14710:       public boolean hasKey() {",
          "14711:         return ((bitField0_ & 0x00000001) != 0);",
          "14712:       }",
          "14721:       public java.lang.String getKey() {",
          "14722:         java.lang.Object ref = key_;",
          "14723:         if (!(ref instanceof java.lang.String)) {",
          "14724:           com.google.protobuf.ByteString bs =",
          "14725:               (com.google.protobuf.ByteString) ref;",
          "14726:           java.lang.String s = bs.toStringUtf8();",
          "14727:           if (bs.isValidUtf8()) {",
          "14728:             key_ = s;",
          "14729:           }",
          "14730:           return s;",
          "14731:         } else {",
          "14732:           return (java.lang.String) ref;",
          "14733:         }",
          "14734:       }",
          "14743:       public com.google.protobuf.ByteString",
          "14744:           getKeyBytes() {",
          "14745:         java.lang.Object ref = key_;",
          "14746:         if (ref instanceof String) {",
          "14747:           com.google.protobuf.ByteString b =",
          "14748:               com.google.protobuf.ByteString.copyFromUtf8(",
          "14749:                   (java.lang.String) ref);",
          "14750:           key_ = b;",
          "14751:           return b;",
          "14752:         } else {",
          "14753:           return (com.google.protobuf.ByteString) ref;",
          "14754:         }",
          "14755:       }",
          "14765:       public Builder setKey(",
          "14766:           java.lang.String value) {",
          "14767:         if (value == null) {",
          "14768:     throw new NullPointerException();",
          "14769:   }",
          "14770:   bitField0_ |= 0x00000001;",
          "14771:         key_ = value;",
          "14772:         onChanged();",
          "14773:         return this;",
          "14774:       }",
          "14783:       public Builder clearKey() {",
          "14784:         bitField0_ = (bitField0_ & ~0x00000001);",
          "14785:         key_ = getDefaultInstance().getKey();",
          "14786:         onChanged();",
          "14787:         return this;",
          "14788:       }",
          "14798:       public Builder setKeyBytes(",
          "14799:           com.google.protobuf.ByteString value) {",
          "14800:         if (value == null) {",
          "14801:     throw new NullPointerException();",
          "14802:   }",
          "14803:   bitField0_ |= 0x00000001;",
          "14804:         key_ = value;",
          "14805:         onChanged();",
          "14806:         return this;",
          "14807:       }",
          "14809:       private java.lang.Object value_ = \"\";",
          "14818:       public boolean hasValue() {",
          "14819:         return ((bitField0_ & 0x00000002) != 0);",
          "14820:       }",
          "14829:       public java.lang.String getValue() {",
          "14830:         java.lang.Object ref = value_;",
          "14831:         if (!(ref instanceof java.lang.String)) {",
          "14832:           com.google.protobuf.ByteString bs =",
          "14833:               (com.google.protobuf.ByteString) ref;",
          "14834:           java.lang.String s = bs.toStringUtf8();",
          "14835:           if (bs.isValidUtf8()) {",
          "14836:             value_ = s;",
          "14837:           }",
          "14838:           return s;",
          "14839:         } else {",
          "14840:           return (java.lang.String) ref;",
          "14841:         }",
          "14842:       }",
          "14851:       public com.google.protobuf.ByteString",
          "14852:           getValueBytes() {",
          "14853:         java.lang.Object ref = value_;",
          "14854:         if (ref instanceof String) {",
          "14855:           com.google.protobuf.ByteString b =",
          "14856:               com.google.protobuf.ByteString.copyFromUtf8(",
          "14857:                   (java.lang.String) ref);",
          "14858:           value_ = b;",
          "14859:           return b;",
          "14860:         } else {",
          "14861:           return (com.google.protobuf.ByteString) ref;",
          "14862:         }",
          "14863:       }",
          "14873:       public Builder setValue(",
          "14874:           java.lang.String value) {",
          "14875:         if (value == null) {",
          "14876:     throw new NullPointerException();",
          "14877:   }",
          "14878:   bitField0_ |= 0x00000002;",
          "14879:         value_ = value;",
          "14880:         onChanged();",
          "14881:         return this;",
          "14882:       }",
          "14891:       public Builder clearValue() {",
          "14892:         bitField0_ = (bitField0_ & ~0x00000002);",
          "14893:         value_ = getDefaultInstance().getValue();",
          "14894:         onChanged();",
          "14895:         return this;",
          "14896:       }",
          "14906:       public Builder setValueBytes(",
          "14907:           com.google.protobuf.ByteString value) {",
          "14908:         if (value == null) {",
          "14909:     throw new NullPointerException();",
          "14910:   }",
          "14911:   bitField0_ |= 0x00000002;",
          "14912:         value_ = value;",
          "14913:         onChanged();",
          "14914:         return this;",
          "14915:       }",
          "14916:       @java.lang.Override",
          "14917:       public final Builder setUnknownFields(",
          "14918:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "14919:         return super.setUnknownFields(unknownFields);",
          "14920:       }",
          "14922:       @java.lang.Override",
          "14923:       public final Builder mergeUnknownFields(",
          "14924:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "14925:         return super.mergeUnknownFields(unknownFields);",
          "14926:       }",
          "14930:     }",
          "14933:     private static final org.mlflow.api.proto.Service.InputTag DEFAULT_INSTANCE;",
          "14934:     static {",
          "14935:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.InputTag();",
          "14936:     }",
          "14938:     public static org.mlflow.api.proto.Service.InputTag getDefaultInstance() {",
          "14939:       return DEFAULT_INSTANCE;",
          "14940:     }",
          "14942:     @java.lang.Deprecated public static final com.google.protobuf.Parser<InputTag>",
          "14943:         PARSER = new com.google.protobuf.AbstractParser<InputTag>() {",
          "14944:       @java.lang.Override",
          "14945:       public InputTag parsePartialFrom(",
          "14946:           com.google.protobuf.CodedInputStream input,",
          "14947:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14948:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14949:         return new InputTag(input, extensionRegistry);",
          "14950:       }",
          "14951:     };",
          "14953:     public static com.google.protobuf.Parser<InputTag> parser() {",
          "14954:       return PARSER;",
          "14955:     }",
          "14957:     @java.lang.Override",
          "14958:     public com.google.protobuf.Parser<InputTag> getParserForType() {",
          "14959:       return PARSER;",
          "14960:     }",
          "14962:     @java.lang.Override",
          "14963:     public org.mlflow.api.proto.Service.InputTag getDefaultInstanceForType() {",
          "14964:       return DEFAULT_INSTANCE;",
          "14965:     }",
          "14967:   }",
          "14969:   public interface DatasetOrBuilder extends",
          "14971:       com.google.protobuf.MessageOrBuilder {",
          "14981:     boolean hasName();",
          "14990:     java.lang.String getName();",
          "14999:     com.google.protobuf.ByteString",
          "15000:         getNameBytes();",
          "15011:     boolean hasDigest();",
          "15021:     java.lang.String getDigest();",
          "15031:     com.google.protobuf.ByteString",
          "15032:         getDigestBytes();",
          "15043:     boolean hasSourceType();",
          "15053:     java.lang.String getSourceType();",
          "15063:     com.google.protobuf.ByteString",
          "15064:         getSourceTypeBytes();",
          "15074:     boolean hasSource();",
          "15083:     java.lang.String getSource();",
          "15092:     com.google.protobuf.ByteString",
          "15093:         getSourceBytes();",
          "15104:     boolean hasSchema();",
          "15114:     java.lang.String getSchema();",
          "15124:     com.google.protobuf.ByteString",
          "15125:         getSchemaBytes();",
          "15137:     boolean hasProfile();",
          "15148:     java.lang.String getProfile();",
          "15159:     com.google.protobuf.ByteString",
          "15160:         getProfileBytes();",
          "15161:   }",
          "15172:   public static final class Dataset extends",
          "15173:       com.google.protobuf.GeneratedMessageV3 implements",
          "15175:       DatasetOrBuilder {",
          "15176:   private static final long serialVersionUID = 0L;",
          "15178:     private Dataset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "15179:       super(builder);",
          "15180:     }",
          "15181:     private Dataset() {",
          "15182:       name_ = \"\";",
          "15183:       digest_ = \"\";",
          "15184:       sourceType_ = \"\";",
          "15185:       source_ = \"\";",
          "15186:       schema_ = \"\";",
          "15187:       profile_ = \"\";",
          "15188:     }",
          "15190:     @java.lang.Override",
          "15191:     @SuppressWarnings({\"unused\"})",
          "15192:     protected java.lang.Object newInstance(",
          "15193:         UnusedPrivateParameter unused) {",
          "15194:       return new Dataset();",
          "15195:     }",
          "15197:     @java.lang.Override",
          "15198:     public final com.google.protobuf.UnknownFieldSet",
          "15199:     getUnknownFields() {",
          "15200:       return this.unknownFields;",
          "15201:     }",
          "15202:     private Dataset(",
          "15203:         com.google.protobuf.CodedInputStream input,",
          "15204:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15205:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15206:       this();",
          "15207:       if (extensionRegistry == null) {",
          "15208:         throw new java.lang.NullPointerException();",
          "15209:       }",
          "15210:       int mutable_bitField0_ = 0;",
          "15211:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "15212:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "15213:       try {",
          "15214:         boolean done = false;",
          "15215:         while (!done) {",
          "15216:           int tag = input.readTag();",
          "15217:           switch (tag) {",
          "15218:             case 0:",
          "15219:               done = true;",
          "15220:               break;",
          "15221:             case 10: {",
          "15222:               com.google.protobuf.ByteString bs = input.readBytes();",
          "15223:               bitField0_ |= 0x00000001;",
          "15224:               name_ = bs;",
          "15225:               break;",
          "15226:             }",
          "15227:             case 18: {",
          "15228:               com.google.protobuf.ByteString bs = input.readBytes();",
          "15229:               bitField0_ |= 0x00000002;",
          "15230:               digest_ = bs;",
          "15231:               break;",
          "15232:             }",
          "15233:             case 26: {",
          "15234:               com.google.protobuf.ByteString bs = input.readBytes();",
          "15235:               bitField0_ |= 0x00000004;",
          "15236:               sourceType_ = bs;",
          "15237:               break;",
          "15238:             }",
          "15239:             case 34: {",
          "15240:               com.google.protobuf.ByteString bs = input.readBytes();",
          "15241:               bitField0_ |= 0x00000008;",
          "15242:               source_ = bs;",
          "15243:               break;",
          "15244:             }",
          "15245:             case 42: {",
          "15246:               com.google.protobuf.ByteString bs = input.readBytes();",
          "15247:               bitField0_ |= 0x00000010;",
          "15248:               schema_ = bs;",
          "15249:               break;",
          "15250:             }",
          "15251:             case 50: {",
          "15252:               com.google.protobuf.ByteString bs = input.readBytes();",
          "15253:               bitField0_ |= 0x00000020;",
          "15254:               profile_ = bs;",
          "15255:               break;",
          "15256:             }",
          "15257:             default: {",
          "15258:               if (!parseUnknownField(",
          "15259:                   input, unknownFields, extensionRegistry, tag)) {",
          "15260:                 done = true;",
          "15261:               }",
          "15262:               break;",
          "15263:             }",
          "15264:           }",
          "15265:         }",
          "15266:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "15267:         throw e.setUnfinishedMessage(this);",
          "15268:       } catch (java.io.IOException e) {",
          "15269:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "15270:             e).setUnfinishedMessage(this);",
          "15271:       } finally {",
          "15272:         this.unknownFields = unknownFields.build();",
          "15273:         makeExtensionsImmutable();",
          "15274:       }",
          "15275:     }",
          "15276:     public static final com.google.protobuf.Descriptors.Descriptor",
          "15277:         getDescriptor() {",
          "15278:       return org.mlflow.api.proto.Service.internal_static_mlflow_Dataset_descriptor;",
          "15279:     }",
          "15281:     @java.lang.Override",
          "15282:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "15283:         internalGetFieldAccessorTable() {",
          "15284:       return org.mlflow.api.proto.Service.internal_static_mlflow_Dataset_fieldAccessorTable",
          "15285:           .ensureFieldAccessorsInitialized(",
          "15286:               org.mlflow.api.proto.Service.Dataset.class, org.mlflow.api.proto.Service.Dataset.Builder.class);",
          "15287:     }",
          "15289:     private int bitField0_;",
          "15290:     public static final int NAME_FIELD_NUMBER = 1;",
          "15291:     private volatile java.lang.Object name_;",
          "15300:     @java.lang.Override",
          "15301:     public boolean hasName() {",
          "15302:       return ((bitField0_ & 0x00000001) != 0);",
          "15303:     }",
          "15312:     @java.lang.Override",
          "15313:     public java.lang.String getName() {",
          "15314:       java.lang.Object ref = name_;",
          "15315:       if (ref instanceof java.lang.String) {",
          "15316:         return (java.lang.String) ref;",
          "15317:       } else {",
          "15318:         com.google.protobuf.ByteString bs =",
          "15319:             (com.google.protobuf.ByteString) ref;",
          "15320:         java.lang.String s = bs.toStringUtf8();",
          "15321:         if (bs.isValidUtf8()) {",
          "15322:           name_ = s;",
          "15323:         }",
          "15324:         return s;",
          "15325:       }",
          "15326:     }",
          "15335:     @java.lang.Override",
          "15336:     public com.google.protobuf.ByteString",
          "15337:         getNameBytes() {",
          "15338:       java.lang.Object ref = name_;",
          "15339:       if (ref instanceof java.lang.String) {",
          "15340:         com.google.protobuf.ByteString b =",
          "15341:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15342:                 (java.lang.String) ref);",
          "15343:         name_ = b;",
          "15344:         return b;",
          "15345:       } else {",
          "15346:         return (com.google.protobuf.ByteString) ref;",
          "15347:       }",
          "15348:     }",
          "15350:     public static final int DIGEST_FIELD_NUMBER = 2;",
          "15351:     private volatile java.lang.Object digest_;",
          "15361:     @java.lang.Override",
          "15362:     public boolean hasDigest() {",
          "15363:       return ((bitField0_ & 0x00000002) != 0);",
          "15364:     }",
          "15374:     @java.lang.Override",
          "15375:     public java.lang.String getDigest() {",
          "15376:       java.lang.Object ref = digest_;",
          "15377:       if (ref instanceof java.lang.String) {",
          "15378:         return (java.lang.String) ref;",
          "15379:       } else {",
          "15380:         com.google.protobuf.ByteString bs =",
          "15381:             (com.google.protobuf.ByteString) ref;",
          "15382:         java.lang.String s = bs.toStringUtf8();",
          "15383:         if (bs.isValidUtf8()) {",
          "15384:           digest_ = s;",
          "15385:         }",
          "15386:         return s;",
          "15387:       }",
          "15388:     }",
          "15398:     @java.lang.Override",
          "15399:     public com.google.protobuf.ByteString",
          "15400:         getDigestBytes() {",
          "15401:       java.lang.Object ref = digest_;",
          "15402:       if (ref instanceof java.lang.String) {",
          "15403:         com.google.protobuf.ByteString b =",
          "15404:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15405:                 (java.lang.String) ref);",
          "15406:         digest_ = b;",
          "15407:         return b;",
          "15408:       } else {",
          "15409:         return (com.google.protobuf.ByteString) ref;",
          "15410:       }",
          "15411:     }",
          "15413:     public static final int SOURCE_TYPE_FIELD_NUMBER = 3;",
          "15414:     private volatile java.lang.Object sourceType_;",
          "15424:     @java.lang.Override",
          "15425:     public boolean hasSourceType() {",
          "15426:       return ((bitField0_ & 0x00000004) != 0);",
          "15427:     }",
          "15437:     @java.lang.Override",
          "15438:     public java.lang.String getSourceType() {",
          "15439:       java.lang.Object ref = sourceType_;",
          "15440:       if (ref instanceof java.lang.String) {",
          "15441:         return (java.lang.String) ref;",
          "15442:       } else {",
          "15443:         com.google.protobuf.ByteString bs =",
          "15444:             (com.google.protobuf.ByteString) ref;",
          "15445:         java.lang.String s = bs.toStringUtf8();",
          "15446:         if (bs.isValidUtf8()) {",
          "15447:           sourceType_ = s;",
          "15448:         }",
          "15449:         return s;",
          "15450:       }",
          "15451:     }",
          "15461:     @java.lang.Override",
          "15462:     public com.google.protobuf.ByteString",
          "15463:         getSourceTypeBytes() {",
          "15464:       java.lang.Object ref = sourceType_;",
          "15465:       if (ref instanceof java.lang.String) {",
          "15466:         com.google.protobuf.ByteString b =",
          "15467:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15468:                 (java.lang.String) ref);",
          "15469:         sourceType_ = b;",
          "15470:         return b;",
          "15471:       } else {",
          "15472:         return (com.google.protobuf.ByteString) ref;",
          "15473:       }",
          "15474:     }",
          "15476:     public static final int SOURCE_FIELD_NUMBER = 4;",
          "15477:     private volatile java.lang.Object source_;",
          "15486:     @java.lang.Override",
          "15487:     public boolean hasSource() {",
          "15488:       return ((bitField0_ & 0x00000008) != 0);",
          "15489:     }",
          "15498:     @java.lang.Override",
          "15499:     public java.lang.String getSource() {",
          "15500:       java.lang.Object ref = source_;",
          "15501:       if (ref instanceof java.lang.String) {",
          "15502:         return (java.lang.String) ref;",
          "15503:       } else {",
          "15504:         com.google.protobuf.ByteString bs =",
          "15505:             (com.google.protobuf.ByteString) ref;",
          "15506:         java.lang.String s = bs.toStringUtf8();",
          "15507:         if (bs.isValidUtf8()) {",
          "15508:           source_ = s;",
          "15509:         }",
          "15510:         return s;",
          "15511:       }",
          "15512:     }",
          "15521:     @java.lang.Override",
          "15522:     public com.google.protobuf.ByteString",
          "15523:         getSourceBytes() {",
          "15524:       java.lang.Object ref = source_;",
          "15525:       if (ref instanceof java.lang.String) {",
          "15526:         com.google.protobuf.ByteString b =",
          "15527:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15528:                 (java.lang.String) ref);",
          "15529:         source_ = b;",
          "15530:         return b;",
          "15531:       } else {",
          "15532:         return (com.google.protobuf.ByteString) ref;",
          "15533:       }",
          "15534:     }",
          "15536:     public static final int SCHEMA_FIELD_NUMBER = 5;",
          "15537:     private volatile java.lang.Object schema_;",
          "15547:     @java.lang.Override",
          "15548:     public boolean hasSchema() {",
          "15549:       return ((bitField0_ & 0x00000010) != 0);",
          "15550:     }",
          "15560:     @java.lang.Override",
          "15561:     public java.lang.String getSchema() {",
          "15562:       java.lang.Object ref = schema_;",
          "15563:       if (ref instanceof java.lang.String) {",
          "15564:         return (java.lang.String) ref;",
          "15565:       } else {",
          "15566:         com.google.protobuf.ByteString bs =",
          "15567:             (com.google.protobuf.ByteString) ref;",
          "15568:         java.lang.String s = bs.toStringUtf8();",
          "15569:         if (bs.isValidUtf8()) {",
          "15570:           schema_ = s;",
          "15571:         }",
          "15572:         return s;",
          "15573:       }",
          "15574:     }",
          "15584:     @java.lang.Override",
          "15585:     public com.google.protobuf.ByteString",
          "15586:         getSchemaBytes() {",
          "15587:       java.lang.Object ref = schema_;",
          "15588:       if (ref instanceof java.lang.String) {",
          "15589:         com.google.protobuf.ByteString b =",
          "15590:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15591:                 (java.lang.String) ref);",
          "15592:         schema_ = b;",
          "15593:         return b;",
          "15594:       } else {",
          "15595:         return (com.google.protobuf.ByteString) ref;",
          "15596:       }",
          "15597:     }",
          "15599:     public static final int PROFILE_FIELD_NUMBER = 6;",
          "15600:     private volatile java.lang.Object profile_;",
          "15611:     @java.lang.Override",
          "15612:     public boolean hasProfile() {",
          "15613:       return ((bitField0_ & 0x00000020) != 0);",
          "15614:     }",
          "15625:     @java.lang.Override",
          "15626:     public java.lang.String getProfile() {",
          "15627:       java.lang.Object ref = profile_;",
          "15628:       if (ref instanceof java.lang.String) {",
          "15629:         return (java.lang.String) ref;",
          "15630:       } else {",
          "15631:         com.google.protobuf.ByteString bs =",
          "15632:             (com.google.protobuf.ByteString) ref;",
          "15633:         java.lang.String s = bs.toStringUtf8();",
          "15634:         if (bs.isValidUtf8()) {",
          "15635:           profile_ = s;",
          "15636:         }",
          "15637:         return s;",
          "15638:       }",
          "15639:     }",
          "15650:     @java.lang.Override",
          "15651:     public com.google.protobuf.ByteString",
          "15652:         getProfileBytes() {",
          "15653:       java.lang.Object ref = profile_;",
          "15654:       if (ref instanceof java.lang.String) {",
          "15655:         com.google.protobuf.ByteString b =",
          "15656:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15657:                 (java.lang.String) ref);",
          "15658:         profile_ = b;",
          "15659:         return b;",
          "15660:       } else {",
          "15661:         return (com.google.protobuf.ByteString) ref;",
          "15662:       }",
          "15663:     }",
          "15665:     private byte memoizedIsInitialized = -1;",
          "15666:     @java.lang.Override",
          "15667:     public final boolean isInitialized() {",
          "15668:       byte isInitialized = memoizedIsInitialized;",
          "15669:       if (isInitialized == 1) return true;",
          "15670:       if (isInitialized == 0) return false;",
          "15672:       memoizedIsInitialized = 1;",
          "15673:       return true;",
          "15674:     }",
          "15676:     @java.lang.Override",
          "15677:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "15678:                         throws java.io.IOException {",
          "15679:       if (((bitField0_ & 0x00000001) != 0)) {",
          "15680:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);",
          "15681:       }",
          "15682:       if (((bitField0_ & 0x00000002) != 0)) {",
          "15683:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, digest_);",
          "15684:       }",
          "15685:       if (((bitField0_ & 0x00000004) != 0)) {",
          "15686:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sourceType_);",
          "15687:       }",
          "15688:       if (((bitField0_ & 0x00000008) != 0)) {",
          "15689:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, source_);",
          "15690:       }",
          "15691:       if (((bitField0_ & 0x00000010) != 0)) {",
          "15692:         com.google.protobuf.GeneratedMessageV3.writeString(output, 5, schema_);",
          "15693:       }",
          "15694:       if (((bitField0_ & 0x00000020) != 0)) {",
          "15695:         com.google.protobuf.GeneratedMessageV3.writeString(output, 6, profile_);",
          "15696:       }",
          "15697:       unknownFields.writeTo(output);",
          "15698:     }",
          "15700:     @java.lang.Override",
          "15701:     public int getSerializedSize() {",
          "15702:       int size = memoizedSize;",
          "15703:       if (size != -1) return size;",
          "15705:       size = 0;",
          "15706:       if (((bitField0_ & 0x00000001) != 0)) {",
          "15707:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);",
          "15708:       }",
          "15709:       if (((bitField0_ & 0x00000002) != 0)) {",
          "15710:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, digest_);",
          "15711:       }",
          "15712:       if (((bitField0_ & 0x00000004) != 0)) {",
          "15713:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sourceType_);",
          "15714:       }",
          "15715:       if (((bitField0_ & 0x00000008) != 0)) {",
          "15716:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, source_);",
          "15717:       }",
          "15718:       if (((bitField0_ & 0x00000010) != 0)) {",
          "15719:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, schema_);",
          "15720:       }",
          "15721:       if (((bitField0_ & 0x00000020) != 0)) {",
          "15722:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, profile_);",
          "15723:       }",
          "15724:       size += unknownFields.getSerializedSize();",
          "15725:       memoizedSize = size;",
          "15726:       return size;",
          "15727:     }",
          "15729:     @java.lang.Override",
          "15730:     public boolean equals(final java.lang.Object obj) {",
          "15731:       if (obj == this) {",
          "15732:        return true;",
          "15733:       }",
          "15734:       if (!(obj instanceof org.mlflow.api.proto.Service.Dataset)) {",
          "15735:         return super.equals(obj);",
          "15736:       }",
          "15737:       org.mlflow.api.proto.Service.Dataset other = (org.mlflow.api.proto.Service.Dataset) obj;",
          "15739:       if (hasName() != other.hasName()) return false;",
          "15740:       if (hasName()) {",
          "15741:         if (!getName()",
          "15742:             .equals(other.getName())) return false;",
          "15743:       }",
          "15744:       if (hasDigest() != other.hasDigest()) return false;",
          "15745:       if (hasDigest()) {",
          "15746:         if (!getDigest()",
          "15747:             .equals(other.getDigest())) return false;",
          "15748:       }",
          "15749:       if (hasSourceType() != other.hasSourceType()) return false;",
          "15750:       if (hasSourceType()) {",
          "15751:         if (!getSourceType()",
          "15752:             .equals(other.getSourceType())) return false;",
          "15753:       }",
          "15754:       if (hasSource() != other.hasSource()) return false;",
          "15755:       if (hasSource()) {",
          "15756:         if (!getSource()",
          "15757:             .equals(other.getSource())) return false;",
          "15758:       }",
          "15759:       if (hasSchema() != other.hasSchema()) return false;",
          "15760:       if (hasSchema()) {",
          "15761:         if (!getSchema()",
          "15762:             .equals(other.getSchema())) return false;",
          "15763:       }",
          "15764:       if (hasProfile() != other.hasProfile()) return false;",
          "15765:       if (hasProfile()) {",
          "15766:         if (!getProfile()",
          "15767:             .equals(other.getProfile())) return false;",
          "15768:       }",
          "15769:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "15770:       return true;",
          "15771:     }",
          "15773:     @java.lang.Override",
          "15774:     public int hashCode() {",
          "15775:       if (memoizedHashCode != 0) {",
          "15776:         return memoizedHashCode;",
          "15777:       }",
          "15778:       int hash = 41;",
          "15779:       hash = (19 * hash) + getDescriptor().hashCode();",
          "15780:       if (hasName()) {",
          "15781:         hash = (37 * hash) + NAME_FIELD_NUMBER;",
          "15782:         hash = (53 * hash) + getName().hashCode();",
          "15783:       }",
          "15784:       if (hasDigest()) {",
          "15785:         hash = (37 * hash) + DIGEST_FIELD_NUMBER;",
          "15786:         hash = (53 * hash) + getDigest().hashCode();",
          "15787:       }",
          "15788:       if (hasSourceType()) {",
          "15789:         hash = (37 * hash) + SOURCE_TYPE_FIELD_NUMBER;",
          "15790:         hash = (53 * hash) + getSourceType().hashCode();",
          "15791:       }",
          "15792:       if (hasSource()) {",
          "15793:         hash = (37 * hash) + SOURCE_FIELD_NUMBER;",
          "15794:         hash = (53 * hash) + getSource().hashCode();",
          "15795:       }",
          "15796:       if (hasSchema()) {",
          "15797:         hash = (37 * hash) + SCHEMA_FIELD_NUMBER;",
          "15798:         hash = (53 * hash) + getSchema().hashCode();",
          "15799:       }",
          "15800:       if (hasProfile()) {",
          "15801:         hash = (37 * hash) + PROFILE_FIELD_NUMBER;",
          "15802:         hash = (53 * hash) + getProfile().hashCode();",
          "15803:       }",
          "15804:       hash = (29 * hash) + unknownFields.hashCode();",
          "15805:       memoizedHashCode = hash;",
          "15806:       return hash;",
          "15807:     }",
          "15809:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15810:         java.nio.ByteBuffer data)",
          "15811:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15812:       return PARSER.parseFrom(data);",
          "15813:     }",
          "15814:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15815:         java.nio.ByteBuffer data,",
          "15816:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15817:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15818:       return PARSER.parseFrom(data, extensionRegistry);",
          "15819:     }",
          "15820:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15821:         com.google.protobuf.ByteString data)",
          "15822:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15823:       return PARSER.parseFrom(data);",
          "15824:     }",
          "15825:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15826:         com.google.protobuf.ByteString data,",
          "15827:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15828:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15829:       return PARSER.parseFrom(data, extensionRegistry);",
          "15830:     }",
          "15831:     public static org.mlflow.api.proto.Service.Dataset parseFrom(byte[] data)",
          "15832:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15833:       return PARSER.parseFrom(data);",
          "15834:     }",
          "15835:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15836:         byte[] data,",
          "15837:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15838:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15839:       return PARSER.parseFrom(data, extensionRegistry);",
          "15840:     }",
          "15841:     public static org.mlflow.api.proto.Service.Dataset parseFrom(java.io.InputStream input)",
          "15842:         throws java.io.IOException {",
          "15843:       return com.google.protobuf.GeneratedMessageV3",
          "15844:           .parseWithIOException(PARSER, input);",
          "15845:     }",
          "15846:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15847:         java.io.InputStream input,",
          "15848:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15849:         throws java.io.IOException {",
          "15850:       return com.google.protobuf.GeneratedMessageV3",
          "15851:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "15852:     }",
          "15853:     public static org.mlflow.api.proto.Service.Dataset parseDelimitedFrom(java.io.InputStream input)",
          "15854:         throws java.io.IOException {",
          "15855:       return com.google.protobuf.GeneratedMessageV3",
          "15856:           .parseDelimitedWithIOException(PARSER, input);",
          "15857:     }",
          "15858:     public static org.mlflow.api.proto.Service.Dataset parseDelimitedFrom(",
          "15859:         java.io.InputStream input,",
          "15860:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15861:         throws java.io.IOException {",
          "15862:       return com.google.protobuf.GeneratedMessageV3",
          "15863:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "15864:     }",
          "15865:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15866:         com.google.protobuf.CodedInputStream input)",
          "15867:         throws java.io.IOException {",
          "15868:       return com.google.protobuf.GeneratedMessageV3",
          "15869:           .parseWithIOException(PARSER, input);",
          "15870:     }",
          "15871:     public static org.mlflow.api.proto.Service.Dataset parseFrom(",
          "15872:         com.google.protobuf.CodedInputStream input,",
          "15873:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15874:         throws java.io.IOException {",
          "15875:       return com.google.protobuf.GeneratedMessageV3",
          "15876:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "15877:     }",
          "15879:     @java.lang.Override",
          "15880:     public Builder newBuilderForType() { return newBuilder(); }",
          "15881:     public static Builder newBuilder() {",
          "15882:       return DEFAULT_INSTANCE.toBuilder();",
          "15883:     }",
          "15884:     public static Builder newBuilder(org.mlflow.api.proto.Service.Dataset prototype) {",
          "15885:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "15886:     }",
          "15887:     @java.lang.Override",
          "15888:     public Builder toBuilder() {",
          "15889:       return this == DEFAULT_INSTANCE",
          "15890:           ? new Builder() : new Builder().mergeFrom(this);",
          "15891:     }",
          "15893:     @java.lang.Override",
          "15894:     protected Builder newBuilderForType(",
          "15895:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "15896:       Builder builder = new Builder(parent);",
          "15897:       return builder;",
          "15898:     }",
          "15909:     public static final class Builder extends",
          "15910:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "15912:         org.mlflow.api.proto.Service.DatasetOrBuilder {",
          "15913:       public static final com.google.protobuf.Descriptors.Descriptor",
          "15914:           getDescriptor() {",
          "15915:         return org.mlflow.api.proto.Service.internal_static_mlflow_Dataset_descriptor;",
          "15916:       }",
          "15918:       @java.lang.Override",
          "15919:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "15920:           internalGetFieldAccessorTable() {",
          "15921:         return org.mlflow.api.proto.Service.internal_static_mlflow_Dataset_fieldAccessorTable",
          "15922:             .ensureFieldAccessorsInitialized(",
          "15923:                 org.mlflow.api.proto.Service.Dataset.class, org.mlflow.api.proto.Service.Dataset.Builder.class);",
          "15924:       }",
          "15927:       private Builder() {",
          "15928:         maybeForceBuilderInitialization();",
          "15929:       }",
          "15931:       private Builder(",
          "15932:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "15933:         super(parent);",
          "15934:         maybeForceBuilderInitialization();",
          "15935:       }",
          "15936:       private void maybeForceBuilderInitialization() {",
          "15937:         if (com.google.protobuf.GeneratedMessageV3",
          "15938:                 .alwaysUseFieldBuilders) {",
          "15939:         }",
          "15940:       }",
          "15941:       @java.lang.Override",
          "15942:       public Builder clear() {",
          "15943:         super.clear();",
          "15944:         name_ = \"\";",
          "15945:         bitField0_ = (bitField0_ & ~0x00000001);",
          "15946:         digest_ = \"\";",
          "15947:         bitField0_ = (bitField0_ & ~0x00000002);",
          "15948:         sourceType_ = \"\";",
          "15949:         bitField0_ = (bitField0_ & ~0x00000004);",
          "15950:         source_ = \"\";",
          "15951:         bitField0_ = (bitField0_ & ~0x00000008);",
          "15952:         schema_ = \"\";",
          "15953:         bitField0_ = (bitField0_ & ~0x00000010);",
          "15954:         profile_ = \"\";",
          "15955:         bitField0_ = (bitField0_ & ~0x00000020);",
          "15956:         return this;",
          "15957:       }",
          "15959:       @java.lang.Override",
          "15960:       public com.google.protobuf.Descriptors.Descriptor",
          "15961:           getDescriptorForType() {",
          "15962:         return org.mlflow.api.proto.Service.internal_static_mlflow_Dataset_descriptor;",
          "15963:       }",
          "15965:       @java.lang.Override",
          "15966:       public org.mlflow.api.proto.Service.Dataset getDefaultInstanceForType() {",
          "15967:         return org.mlflow.api.proto.Service.Dataset.getDefaultInstance();",
          "15968:       }",
          "15970:       @java.lang.Override",
          "15971:       public org.mlflow.api.proto.Service.Dataset build() {",
          "15972:         org.mlflow.api.proto.Service.Dataset result = buildPartial();",
          "15973:         if (!result.isInitialized()) {",
          "15974:           throw newUninitializedMessageException(result);",
          "15975:         }",
          "15976:         return result;",
          "15977:       }",
          "15979:       @java.lang.Override",
          "15980:       public org.mlflow.api.proto.Service.Dataset buildPartial() {",
          "15981:         org.mlflow.api.proto.Service.Dataset result = new org.mlflow.api.proto.Service.Dataset(this);",
          "15982:         int from_bitField0_ = bitField0_;",
          "15983:         int to_bitField0_ = 0;",
          "15984:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "15985:           to_bitField0_ |= 0x00000001;",
          "15986:         }",
          "15987:         result.name_ = name_;",
          "15988:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "15989:           to_bitField0_ |= 0x00000002;",
          "15990:         }",
          "15991:         result.digest_ = digest_;",
          "15992:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "15993:           to_bitField0_ |= 0x00000004;",
          "15994:         }",
          "15995:         result.sourceType_ = sourceType_;",
          "15996:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "15997:           to_bitField0_ |= 0x00000008;",
          "15998:         }",
          "15999:         result.source_ = source_;",
          "16000:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "16001:           to_bitField0_ |= 0x00000010;",
          "16002:         }",
          "16003:         result.schema_ = schema_;",
          "16004:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "16005:           to_bitField0_ |= 0x00000020;",
          "16006:         }",
          "16007:         result.profile_ = profile_;",
          "16008:         result.bitField0_ = to_bitField0_;",
          "16009:         onBuilt();",
          "16010:         return result;",
          "16011:       }",
          "16013:       @java.lang.Override",
          "16014:       public Builder clone() {",
          "16015:         return super.clone();",
          "16016:       }",
          "16017:       @java.lang.Override",
          "16018:       public Builder setField(",
          "16019:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "16020:           java.lang.Object value) {",
          "16021:         return super.setField(field, value);",
          "16022:       }",
          "16023:       @java.lang.Override",
          "16024:       public Builder clearField(",
          "16025:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "16026:         return super.clearField(field);",
          "16027:       }",
          "16028:       @java.lang.Override",
          "16029:       public Builder clearOneof(",
          "16030:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "16031:         return super.clearOneof(oneof);",
          "16032:       }",
          "16033:       @java.lang.Override",
          "16034:       public Builder setRepeatedField(",
          "16035:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "16036:           int index, java.lang.Object value) {",
          "16037:         return super.setRepeatedField(field, index, value);",
          "16038:       }",
          "16039:       @java.lang.Override",
          "16040:       public Builder addRepeatedField(",
          "16041:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "16042:           java.lang.Object value) {",
          "16043:         return super.addRepeatedField(field, value);",
          "16044:       }",
          "16045:       @java.lang.Override",
          "16046:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "16047:         if (other instanceof org.mlflow.api.proto.Service.Dataset) {",
          "16048:           return mergeFrom((org.mlflow.api.proto.Service.Dataset)other);",
          "16049:         } else {",
          "16050:           super.mergeFrom(other);",
          "16051:           return this;",
          "16052:         }",
          "16053:       }",
          "16055:       public Builder mergeFrom(org.mlflow.api.proto.Service.Dataset other) {",
          "16056:         if (other == org.mlflow.api.proto.Service.Dataset.getDefaultInstance()) return this;",
          "16057:         if (other.hasName()) {",
          "16058:           bitField0_ |= 0x00000001;",
          "16059:           name_ = other.name_;",
          "16060:           onChanged();",
          "16061:         }",
          "16062:         if (other.hasDigest()) {",
          "16063:           bitField0_ |= 0x00000002;",
          "16064:           digest_ = other.digest_;",
          "16065:           onChanged();",
          "16066:         }",
          "16067:         if (other.hasSourceType()) {",
          "16068:           bitField0_ |= 0x00000004;",
          "16069:           sourceType_ = other.sourceType_;",
          "16070:           onChanged();",
          "16071:         }",
          "16072:         if (other.hasSource()) {",
          "16073:           bitField0_ |= 0x00000008;",
          "16074:           source_ = other.source_;",
          "16075:           onChanged();",
          "16076:         }",
          "16077:         if (other.hasSchema()) {",
          "16078:           bitField0_ |= 0x00000010;",
          "16079:           schema_ = other.schema_;",
          "16080:           onChanged();",
          "16081:         }",
          "16082:         if (other.hasProfile()) {",
          "16083:           bitField0_ |= 0x00000020;",
          "16084:           profile_ = other.profile_;",
          "16085:           onChanged();",
          "16086:         }",
          "16087:         this.mergeUnknownFields(other.unknownFields);",
          "16088:         onChanged();",
          "16089:         return this;",
          "16090:       }",
          "16092:       @java.lang.Override",
          "16093:       public final boolean isInitialized() {",
          "16094:         return true;",
          "16095:       }",
          "16097:       @java.lang.Override",
          "16098:       public Builder mergeFrom(",
          "16099:           com.google.protobuf.CodedInputStream input,",
          "16100:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16101:           throws java.io.IOException {",
          "16102:         org.mlflow.api.proto.Service.Dataset parsedMessage = null;",
          "16103:         try {",
          "16104:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "16105:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "16106:           parsedMessage = (org.mlflow.api.proto.Service.Dataset) e.getUnfinishedMessage();",
          "16107:           throw e.unwrapIOException();",
          "16108:         } finally {",
          "16109:           if (parsedMessage != null) {",
          "16110:             mergeFrom(parsedMessage);",
          "16111:           }",
          "16112:         }",
          "16113:         return this;",
          "16114:       }",
          "16115:       private int bitField0_;",
          "16117:       private java.lang.Object name_ = \"\";",
          "16126:       public boolean hasName() {",
          "16127:         return ((bitField0_ & 0x00000001) != 0);",
          "16128:       }",
          "16137:       public java.lang.String getName() {",
          "16138:         java.lang.Object ref = name_;",
          "16139:         if (!(ref instanceof java.lang.String)) {",
          "16140:           com.google.protobuf.ByteString bs =",
          "16141:               (com.google.protobuf.ByteString) ref;",
          "16142:           java.lang.String s = bs.toStringUtf8();",
          "16143:           if (bs.isValidUtf8()) {",
          "16144:             name_ = s;",
          "16145:           }",
          "16146:           return s;",
          "16147:         } else {",
          "16148:           return (java.lang.String) ref;",
          "16149:         }",
          "16150:       }",
          "16159:       public com.google.protobuf.ByteString",
          "16160:           getNameBytes() {",
          "16161:         java.lang.Object ref = name_;",
          "16162:         if (ref instanceof String) {",
          "16163:           com.google.protobuf.ByteString b =",
          "16164:               com.google.protobuf.ByteString.copyFromUtf8(",
          "16165:                   (java.lang.String) ref);",
          "16166:           name_ = b;",
          "16167:           return b;",
          "16168:         } else {",
          "16169:           return (com.google.protobuf.ByteString) ref;",
          "16170:         }",
          "16171:       }",
          "16181:       public Builder setName(",
          "16182:           java.lang.String value) {",
          "16183:         if (value == null) {",
          "16184:     throw new NullPointerException();",
          "16185:   }",
          "16186:   bitField0_ |= 0x00000001;",
          "16187:         name_ = value;",
          "16188:         onChanged();",
          "16189:         return this;",
          "16190:       }",
          "16199:       public Builder clearName() {",
          "16200:         bitField0_ = (bitField0_ & ~0x00000001);",
          "16201:         name_ = getDefaultInstance().getName();",
          "16202:         onChanged();",
          "16203:         return this;",
          "16204:       }",
          "16214:       public Builder setNameBytes(",
          "16219:   bitField0_ |= 0x00000001;",
          "16220:         name_ = value;",
          "16225:       private java.lang.Object digest_ = \"\";",
          "16235:       public boolean hasDigest() {",
          "16236:         return ((bitField0_ & 0x00000002) != 0);",
          "16247:       public java.lang.String getDigest() {",
          "16248:         java.lang.Object ref = digest_;",
          "16254:             digest_ = s;",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "8938:       }",
          "8947:       public com.google.protobuf.ByteString",
          "8950:         if (ref instanceof String) {",
          "8951:           com.google.protobuf.ByteString b =",
          "8952:               com.google.protobuf.ByteString.copyFromUtf8(",
          "8953:                   (java.lang.String) ref);",
          "8955:           return b;",
          "8956:         } else {",
          "8957:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "8948:           getExperimentIdBytes() {",
          "8949:         java.lang.Object ref = experimentId_;",
          "8954:           experimentId_ = b;",
          "",
          "[Added Lines]",
          "16271:           getDigestBytes() {",
          "16272:         java.lang.Object ref = digest_;",
          "16277:           digest_ = b;",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "8959:       }",
          "8970:           java.lang.String value) {",
          "8971:         if (value == null) {",
          "8972:     throw new NullPointerException();",
          "8973:   }",
          "8976:         onChanged();",
          "8977:         return this;",
          "8978:       }",
          "8990:         onChanged();",
          "8991:         return this;",
          "8992:       }",
          "9003:           com.google.protobuf.ByteString value) {",
          "9004:         if (value == null) {",
          "9005:     throw new NullPointerException();",
          "9006:   }",
          "9009:         onChanged();",
          "9010:         return this;",
          "9011:       }",
          "9026:       }",
          "9039:         if (!(ref instanceof java.lang.String)) {",
          "9040:           com.google.protobuf.ByteString bs =",
          "9041:               (com.google.protobuf.ByteString) ref;",
          "9042:           java.lang.String s = bs.toStringUtf8();",
          "9043:           if (bs.isValidUtf8()) {",
          "9045:           }",
          "9046:           return s;",
          "9047:         } else {",
          "",
          "[Removed Lines]",
          "8969:       public Builder setExperimentId(",
          "8974:   bitField0_ |= 0x00000008;",
          "8975:         experimentId_ = value;",
          "8987:       public Builder clearExperimentId() {",
          "8988:         bitField0_ = (bitField0_ & ~0x00000008);",
          "8989:         experimentId_ = getDefaultInstance().getExperimentId();",
          "9002:       public Builder setExperimentIdBytes(",
          "9007:   bitField0_ |= 0x00000008;",
          "9008:         experimentId_ = value;",
          "9013:       private java.lang.Object userId_ = \"\";",
          "9024:       public boolean hasUserId() {",
          "9025:         return ((bitField0_ & 0x00000010) != 0);",
          "9037:       public java.lang.String getUserId() {",
          "9038:         java.lang.Object ref = userId_;",
          "9044:             userId_ = s;",
          "",
          "[Added Lines]",
          "16293:       public Builder setDigest(",
          "16298:   bitField0_ |= 0x00000002;",
          "16299:         digest_ = value;",
          "16312:       public Builder clearDigest() {",
          "16313:         bitField0_ = (bitField0_ & ~0x00000002);",
          "16314:         digest_ = getDefaultInstance().getDigest();",
          "16328:       public Builder setDigestBytes(",
          "16333:   bitField0_ |= 0x00000002;",
          "16334:         digest_ = value;",
          "16339:       private java.lang.Object sourceType_ = \"\";",
          "16349:       public boolean hasSourceType() {",
          "16350:         return ((bitField0_ & 0x00000004) != 0);",
          "16361:       public java.lang.String getSourceType() {",
          "16362:         java.lang.Object ref = sourceType_;",
          "16368:             sourceType_ = s;",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "9050:       }",
          "9061:       public com.google.protobuf.ByteString",
          "9064:         if (ref instanceof String) {",
          "9065:           com.google.protobuf.ByteString b =",
          "9066:               com.google.protobuf.ByteString.copyFromUtf8(",
          "9067:                   (java.lang.String) ref);",
          "9069:           return b;",
          "9070:         } else {",
          "9071:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "9062:           getUserIdBytes() {",
          "9063:         java.lang.Object ref = userId_;",
          "9068:           userId_ = b;",
          "",
          "[Added Lines]",
          "16385:           getSourceTypeBytes() {",
          "16386:         java.lang.Object ref = sourceType_;",
          "16391:           sourceType_ = b;",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "9073:       }",
          "9086:           java.lang.String value) {",
          "9087:         if (value == null) {",
          "9088:     throw new NullPointerException();",
          "9089:   }",
          "9092:         onChanged();",
          "9093:         return this;",
          "9094:       }",
          "9108:         onChanged();",
          "9109:         return this;",
          "9110:       }",
          "9123:           com.google.protobuf.ByteString value) {",
          "9124:         if (value == null) {",
          "9125:     throw new NullPointerException();",
          "9126:   }",
          "9129:         onChanged();",
          "9130:         return this;",
          "9131:       }",
          "9144:       }",
          "9158:       }",
          "9171:         }",
          "9176:       }",
          "9188:         onChanged();",
          "9189:         return this;",
          "9190:       }",
          "9204:       }",
          "9216:       }",
          "9231:       }",
          "9245:       }",
          "9259:       }",
          "9271:       }",
          "9284:         onChanged();",
          "9285:         return this;",
          "9286:       }",
          "9298:         onChanged();",
          "9299:         return this;",
          "9300:       }",
          "9316:       }",
          "9330:         if (!(ref instanceof java.lang.String)) {",
          "9331:           com.google.protobuf.ByteString bs =",
          "9332:               (com.google.protobuf.ByteString) ref;",
          "9333:           java.lang.String s = bs.toStringUtf8();",
          "9334:           if (bs.isValidUtf8()) {",
          "9336:           }",
          "9337:           return s;",
          "9338:         } else {",
          "",
          "[Removed Lines]",
          "9085:       public Builder setUserId(",
          "9090:   bitField0_ |= 0x00000010;",
          "9091:         userId_ = value;",
          "9105:       public Builder clearUserId() {",
          "9106:         bitField0_ = (bitField0_ & ~0x00000010);",
          "9107:         userId_ = getDefaultInstance().getUserId();",
          "9122:       public Builder setUserIdBytes(",
          "9127:   bitField0_ |= 0x00000010;",
          "9128:         userId_ = value;",
          "9133:       private int status_ = 1;",
          "9142:       @java.lang.Override public boolean hasStatus() {",
          "9143:         return ((bitField0_ & 0x00000020) != 0);",
          "9153:       @java.lang.Override",
          "9154:       public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "9155:         @SuppressWarnings(\"deprecation\")",
          "9156:         org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "9157:         return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "9168:       public Builder setStatus(org.mlflow.api.proto.Service.RunStatus value) {",
          "9169:         if (value == null) {",
          "9170:           throw new NullPointerException();",
          "9172:         bitField0_ |= 0x00000020;",
          "9173:         status_ = value.getNumber();",
          "9174:         onChanged();",
          "9175:         return this;",
          "9185:       public Builder clearStatus() {",
          "9186:         bitField0_ = (bitField0_ & ~0x00000020);",
          "9187:         status_ = 1;",
          "9192:       private long startTime_ ;",
          "9201:       @java.lang.Override",
          "9202:       public boolean hasStartTime() {",
          "9203:         return ((bitField0_ & 0x00000040) != 0);",
          "9213:       @java.lang.Override",
          "9214:       public long getStartTime() {",
          "9215:         return startTime_;",
          "9226:       public Builder setStartTime(long value) {",
          "9227:         bitField0_ |= 0x00000040;",
          "9228:         startTime_ = value;",
          "9229:         onChanged();",
          "9230:         return this;",
          "9240:       public Builder clearStartTime() {",
          "9241:         bitField0_ = (bitField0_ & ~0x00000040);",
          "9242:         startTime_ = 0L;",
          "9243:         onChanged();",
          "9244:         return this;",
          "9247:       private long endTime_ ;",
          "9256:       @java.lang.Override",
          "9257:       public boolean hasEndTime() {",
          "9258:         return ((bitField0_ & 0x00000080) != 0);",
          "9268:       @java.lang.Override",
          "9269:       public long getEndTime() {",
          "9270:         return endTime_;",
          "9281:       public Builder setEndTime(long value) {",
          "9282:         bitField0_ |= 0x00000080;",
          "9283:         endTime_ = value;",
          "9295:       public Builder clearEndTime() {",
          "9296:         bitField0_ = (bitField0_ & ~0x00000080);",
          "9297:         endTime_ = 0L;",
          "9302:       private java.lang.Object artifactUri_ = \"\";",
          "9314:       public boolean hasArtifactUri() {",
          "9315:         return ((bitField0_ & 0x00000100) != 0);",
          "9328:       public java.lang.String getArtifactUri() {",
          "9329:         java.lang.Object ref = artifactUri_;",
          "9335:             artifactUri_ = s;",
          "",
          "[Added Lines]",
          "16407:       public Builder setSourceType(",
          "16412:   bitField0_ |= 0x00000004;",
          "16413:         sourceType_ = value;",
          "16426:       public Builder clearSourceType() {",
          "16427:         bitField0_ = (bitField0_ & ~0x00000004);",
          "16428:         sourceType_ = getDefaultInstance().getSourceType();",
          "16442:       public Builder setSourceTypeBytes(",
          "16447:   bitField0_ |= 0x00000004;",
          "16448:         sourceType_ = value;",
          "16453:       private java.lang.Object source_ = \"\";",
          "16462:       public boolean hasSource() {",
          "16463:         return ((bitField0_ & 0x00000008) != 0);",
          "16473:       public java.lang.String getSource() {",
          "16474:         java.lang.Object ref = source_;",
          "16475:         if (!(ref instanceof java.lang.String)) {",
          "16476:           com.google.protobuf.ByteString bs =",
          "16477:               (com.google.protobuf.ByteString) ref;",
          "16478:           java.lang.String s = bs.toStringUtf8();",
          "16479:           if (bs.isValidUtf8()) {",
          "16480:             source_ = s;",
          "16481:           }",
          "16482:           return s;",
          "16483:         } else {",
          "16484:           return (java.lang.String) ref;",
          "16485:         }",
          "16495:       public com.google.protobuf.ByteString",
          "16496:           getSourceBytes() {",
          "16497:         java.lang.Object ref = source_;",
          "16498:         if (ref instanceof String) {",
          "16499:           com.google.protobuf.ByteString b =",
          "16500:               com.google.protobuf.ByteString.copyFromUtf8(",
          "16501:                   (java.lang.String) ref);",
          "16502:           source_ = b;",
          "16503:           return b;",
          "16504:         } else {",
          "16505:           return (com.google.protobuf.ByteString) ref;",
          "16517:       public Builder setSource(",
          "16518:           java.lang.String value) {",
          "16519:         if (value == null) {",
          "16520:     throw new NullPointerException();",
          "16521:   }",
          "16522:   bitField0_ |= 0x00000008;",
          "16523:         source_ = value;",
          "16535:       public Builder clearSource() {",
          "16536:         bitField0_ = (bitField0_ & ~0x00000008);",
          "16537:         source_ = getDefaultInstance().getSource();",
          "16538:         onChanged();",
          "16539:         return this;",
          "16550:       public Builder setSourceBytes(",
          "16551:           com.google.protobuf.ByteString value) {",
          "16552:         if (value == null) {",
          "16553:     throw new NullPointerException();",
          "16554:   }",
          "16555:   bitField0_ |= 0x00000008;",
          "16556:         source_ = value;",
          "16557:         onChanged();",
          "16558:         return this;",
          "16561:       private java.lang.Object schema_ = \"\";",
          "16571:       public boolean hasSchema() {",
          "16572:         return ((bitField0_ & 0x00000010) != 0);",
          "16583:       public java.lang.String getSchema() {",
          "16584:         java.lang.Object ref = schema_;",
          "16585:         if (!(ref instanceof java.lang.String)) {",
          "16586:           com.google.protobuf.ByteString bs =",
          "16587:               (com.google.protobuf.ByteString) ref;",
          "16588:           java.lang.String s = bs.toStringUtf8();",
          "16589:           if (bs.isValidUtf8()) {",
          "16590:             schema_ = s;",
          "16591:           }",
          "16592:           return s;",
          "16593:         } else {",
          "16594:           return (java.lang.String) ref;",
          "16595:         }",
          "16606:       public com.google.protobuf.ByteString",
          "16607:           getSchemaBytes() {",
          "16608:         java.lang.Object ref = schema_;",
          "16609:         if (ref instanceof String) {",
          "16610:           com.google.protobuf.ByteString b =",
          "16611:               com.google.protobuf.ByteString.copyFromUtf8(",
          "16612:                   (java.lang.String) ref);",
          "16613:           schema_ = b;",
          "16614:           return b;",
          "16615:         } else {",
          "16616:           return (com.google.protobuf.ByteString) ref;",
          "16617:         }",
          "16629:       public Builder setSchema(",
          "16630:           java.lang.String value) {",
          "16631:         if (value == null) {",
          "16632:     throw new NullPointerException();",
          "16633:   }",
          "16634:   bitField0_ |= 0x00000010;",
          "16635:         schema_ = value;",
          "16636:         onChanged();",
          "16637:         return this;",
          "16648:       public Builder clearSchema() {",
          "16649:         bitField0_ = (bitField0_ & ~0x00000010);",
          "16650:         schema_ = getDefaultInstance().getSchema();",
          "16664:       public Builder setSchemaBytes(",
          "16665:           com.google.protobuf.ByteString value) {",
          "16666:         if (value == null) {",
          "16667:     throw new NullPointerException();",
          "16668:   }",
          "16669:   bitField0_ |= 0x00000010;",
          "16670:         schema_ = value;",
          "16675:       private java.lang.Object profile_ = \"\";",
          "16686:       public boolean hasProfile() {",
          "16687:         return ((bitField0_ & 0x00000020) != 0);",
          "16699:       public java.lang.String getProfile() {",
          "16700:         java.lang.Object ref = profile_;",
          "16706:             profile_ = s;",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "9341:       }",
          "9353:       public com.google.protobuf.ByteString",
          "9356:         if (ref instanceof String) {",
          "9357:           com.google.protobuf.ByteString b =",
          "9358:               com.google.protobuf.ByteString.copyFromUtf8(",
          "9359:                   (java.lang.String) ref);",
          "9361:           return b;",
          "9362:         } else {",
          "9363:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "9354:           getArtifactUriBytes() {",
          "9355:         java.lang.Object ref = artifactUri_;",
          "9360:           artifactUri_ = b;",
          "",
          "[Added Lines]",
          "16724:           getProfileBytes() {",
          "16725:         java.lang.Object ref = profile_;",
          "16730:           profile_ = b;",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "9365:       }",
          "9379:           java.lang.String value) {",
          "9380:         if (value == null) {",
          "9381:     throw new NullPointerException();",
          "9382:   }",
          "9385:         onChanged();",
          "9386:         return this;",
          "9387:       }",
          "9402:         onChanged();",
          "9403:         return this;",
          "9404:       }",
          "9418:           com.google.protobuf.ByteString value) {",
          "9419:         if (value == null) {",
          "9420:     throw new NullPointerException();",
          "9421:   }",
          "9424:         onChanged();",
          "9425:         return this;",
          "9426:       }",
          "9439:       }",
          "9452:               (com.google.protobuf.ByteString) ref;",
          "9453:           java.lang.String s = bs.toStringUtf8();",
          "9454:           if (bs.isValidUtf8()) {",
          "9456:           }",
          "9457:           return s;",
          "9460:         }",
          "9461:       }",
          "9470:       public com.google.protobuf.ByteString",
          "9474:           com.google.protobuf.ByteString b =",
          "9475:               com.google.protobuf.ByteString.copyFromUtf8(",
          "9476:                   (java.lang.String) ref);",
          "9478:           return b;",
          "9479:         } else {",
          "9480:           return (com.google.protobuf.ByteString) ref;",
          "9481:         }",
          "9482:       }",
          "9535:       @java.lang.Override",
          "9539:       }",
          "9541:       @java.lang.Override",
          "9545:       }",
          "9563:       @java.lang.Override",
          "9566:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9567:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "9569:       }",
          "9890:             }",
          "9897:             }",
          "9898:           }",
          "9899:         }",
          "9908:         }",
          "9960:         }",
          "9962:       }",
          "9984:       }",
          "10020:         }",
          "10022:       }",
          "10044:       }",
          "10045:     }",
          "10057:     @java.lang.Override",
          "10060:     }",
          "10069:     @java.lang.Override",
          "10072:       if (ref instanceof java.lang.String) {",
          "10073:         return (java.lang.String) ref;",
          "10074:       } else {",
          "",
          "[Removed Lines]",
          "9378:       public Builder setArtifactUri(",
          "9383:   bitField0_ |= 0x00000100;",
          "9384:         artifactUri_ = value;",
          "9399:       public Builder clearArtifactUri() {",
          "9400:         bitField0_ = (bitField0_ & ~0x00000100);",
          "9401:         artifactUri_ = getDefaultInstance().getArtifactUri();",
          "9417:       public Builder setArtifactUriBytes(",
          "9422:   bitField0_ |= 0x00000100;",
          "9423:         artifactUri_ = value;",
          "9428:       private java.lang.Object lifecycleStage_ = \"\";",
          "9437:       public boolean hasLifecycleStage() {",
          "9438:         return ((bitField0_ & 0x00000200) != 0);",
          "9448:       public java.lang.String getLifecycleStage() {",
          "9449:         java.lang.Object ref = lifecycleStage_;",
          "9450:         if (!(ref instanceof java.lang.String)) {",
          "9451:           com.google.protobuf.ByteString bs =",
          "9455:             lifecycleStage_ = s;",
          "9458:         } else {",
          "9459:           return (java.lang.String) ref;",
          "9471:           getLifecycleStageBytes() {",
          "9472:         java.lang.Object ref = lifecycleStage_;",
          "9473:         if (ref instanceof String) {",
          "9477:           lifecycleStage_ = b;",
          "9492:       public Builder setLifecycleStage(",
          "9493:           java.lang.String value) {",
          "9494:         if (value == null) {",
          "9495:     throw new NullPointerException();",
          "9496:   }",
          "9497:   bitField0_ |= 0x00000200;",
          "9498:         lifecycleStage_ = value;",
          "9499:         onChanged();",
          "9500:         return this;",
          "9501:       }",
          "9510:       public Builder clearLifecycleStage() {",
          "9511:         bitField0_ = (bitField0_ & ~0x00000200);",
          "9512:         lifecycleStage_ = getDefaultInstance().getLifecycleStage();",
          "9513:         onChanged();",
          "9514:         return this;",
          "9515:       }",
          "9525:       public Builder setLifecycleStageBytes(",
          "9526:           com.google.protobuf.ByteString value) {",
          "9527:         if (value == null) {",
          "9528:     throw new NullPointerException();",
          "9529:   }",
          "9530:   bitField0_ |= 0x00000200;",
          "9531:         lifecycleStage_ = value;",
          "9532:         onChanged();",
          "9533:         return this;",
          "9534:       }",
          "9536:       public final Builder setUnknownFields(",
          "9537:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "9538:         return super.setUnknownFields(unknownFields);",
          "9542:       public final Builder mergeUnknownFields(",
          "9543:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "9544:         return super.mergeUnknownFields(unknownFields);",
          "9549:     }",
          "9552:     private static final org.mlflow.api.proto.Service.RunInfo DEFAULT_INSTANCE;",
          "9553:     static {",
          "9554:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RunInfo();",
          "9555:     }",
          "9557:     public static org.mlflow.api.proto.Service.RunInfo getDefaultInstance() {",
          "9558:       return DEFAULT_INSTANCE;",
          "9559:     }",
          "9561:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RunInfo>",
          "9562:         PARSER = new com.google.protobuf.AbstractParser<RunInfo>() {",
          "9564:       public RunInfo parsePartialFrom(",
          "9565:           com.google.protobuf.CodedInputStream input,",
          "9568:         return new RunInfo(input, extensionRegistry);",
          "9570:     };",
          "9572:     public static com.google.protobuf.Parser<RunInfo> parser() {",
          "9573:       return PARSER;",
          "9574:     }",
          "9576:     @java.lang.Override",
          "9577:     public com.google.protobuf.Parser<RunInfo> getParserForType() {",
          "9578:       return PARSER;",
          "9579:     }",
          "9581:     @java.lang.Override",
          "9582:     public org.mlflow.api.proto.Service.RunInfo getDefaultInstanceForType() {",
          "9583:       return DEFAULT_INSTANCE;",
          "9584:     }",
          "9586:   }",
          "9588:   public interface ExperimentOrBuilder extends",
          "9590:       com.google.protobuf.MessageOrBuilder {",
          "9600:     boolean hasExperimentId();",
          "9609:     java.lang.String getExperimentId();",
          "9618:     com.google.protobuf.ByteString",
          "9619:         getExperimentIdBytes();",
          "9629:     boolean hasName();",
          "9638:     java.lang.String getName();",
          "9647:     com.google.protobuf.ByteString",
          "9648:         getNameBytes();",
          "9658:     boolean hasArtifactLocation();",
          "9667:     java.lang.String getArtifactLocation();",
          "9676:     com.google.protobuf.ByteString",
          "9677:         getArtifactLocationBytes();",
          "9688:     boolean hasLifecycleStage();",
          "9698:     java.lang.String getLifecycleStage();",
          "9708:     com.google.protobuf.ByteString",
          "9709:         getLifecycleStageBytes();",
          "9719:     boolean hasLastUpdateTime();",
          "9728:     long getLastUpdateTime();",
          "9738:     boolean hasCreationTime();",
          "9747:     long getCreationTime();",
          "9756:     java.util.List<org.mlflow.api.proto.Service.ExperimentTag>",
          "9757:         getTagsList();",
          "9765:     org.mlflow.api.proto.Service.ExperimentTag getTags(int index);",
          "9773:     int getTagsCount();",
          "9781:     java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "9782:         getTagsOrBuilderList();",
          "9790:     org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "9791:         int index);",
          "9792:   }",
          "9800:   public static final class Experiment extends",
          "9801:       com.google.protobuf.GeneratedMessageV3 implements",
          "9803:       ExperimentOrBuilder {",
          "9804:   private static final long serialVersionUID = 0L;",
          "9806:     private Experiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "9807:       super(builder);",
          "9808:     }",
          "9809:     private Experiment() {",
          "9810:       experimentId_ = \"\";",
          "9811:       name_ = \"\";",
          "9812:       artifactLocation_ = \"\";",
          "9813:       lifecycleStage_ = \"\";",
          "9814:       tags_ = java.util.Collections.emptyList();",
          "9815:     }",
          "9817:     @java.lang.Override",
          "9818:     @SuppressWarnings({\"unused\"})",
          "9819:     protected java.lang.Object newInstance(",
          "9820:         UnusedPrivateParameter unused) {",
          "9821:       return new Experiment();",
          "9822:     }",
          "9824:     @java.lang.Override",
          "9825:     public final com.google.protobuf.UnknownFieldSet",
          "9826:     getUnknownFields() {",
          "9827:       return this.unknownFields;",
          "9828:     }",
          "9829:     private Experiment(",
          "9830:         com.google.protobuf.CodedInputStream input,",
          "9831:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "9832:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "9833:       this();",
          "9834:       if (extensionRegistry == null) {",
          "9835:         throw new java.lang.NullPointerException();",
          "9836:       }",
          "9837:       int mutable_bitField0_ = 0;",
          "9838:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "9839:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "9840:       try {",
          "9841:         boolean done = false;",
          "9842:         while (!done) {",
          "9843:           int tag = input.readTag();",
          "9844:           switch (tag) {",
          "9845:             case 0:",
          "9846:               done = true;",
          "9847:               break;",
          "9848:             case 10: {",
          "9849:               com.google.protobuf.ByteString bs = input.readBytes();",
          "9850:               bitField0_ |= 0x00000001;",
          "9851:               experimentId_ = bs;",
          "9852:               break;",
          "9853:             }",
          "9854:             case 18: {",
          "9855:               com.google.protobuf.ByteString bs = input.readBytes();",
          "9856:               bitField0_ |= 0x00000002;",
          "9857:               name_ = bs;",
          "9858:               break;",
          "9859:             }",
          "9860:             case 26: {",
          "9861:               com.google.protobuf.ByteString bs = input.readBytes();",
          "9862:               bitField0_ |= 0x00000004;",
          "9863:               artifactLocation_ = bs;",
          "9864:               break;",
          "9865:             }",
          "9866:             case 34: {",
          "9867:               com.google.protobuf.ByteString bs = input.readBytes();",
          "9868:               bitField0_ |= 0x00000008;",
          "9869:               lifecycleStage_ = bs;",
          "9870:               break;",
          "9871:             }",
          "9872:             case 40: {",
          "9873:               bitField0_ |= 0x00000010;",
          "9874:               lastUpdateTime_ = input.readInt64();",
          "9875:               break;",
          "9876:             }",
          "9877:             case 48: {",
          "9878:               bitField0_ |= 0x00000020;",
          "9879:               creationTime_ = input.readInt64();",
          "9880:               break;",
          "9881:             }",
          "9882:             case 58: {",
          "9883:               if (!((mutable_bitField0_ & 0x00000040) != 0)) {",
          "9884:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.ExperimentTag>();",
          "9885:                 mutable_bitField0_ |= 0x00000040;",
          "9886:               }",
          "9887:               tags_.add(",
          "9888:                   input.readMessage(org.mlflow.api.proto.Service.ExperimentTag.PARSER, extensionRegistry));",
          "9889:               break;",
          "9891:             default: {",
          "9892:               if (!parseUnknownField(",
          "9893:                   input, unknownFields, extensionRegistry, tag)) {",
          "9894:                 done = true;",
          "9895:               }",
          "9896:               break;",
          "9900:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "9901:         throw e.setUnfinishedMessage(this);",
          "9902:       } catch (java.io.IOException e) {",
          "9903:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "9904:             e).setUnfinishedMessage(this);",
          "9905:       } finally {",
          "9906:         if (((mutable_bitField0_ & 0x00000040) != 0)) {",
          "9907:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "9909:         this.unknownFields = unknownFields.build();",
          "9910:         makeExtensionsImmutable();",
          "9911:       }",
          "9912:     }",
          "9913:     public static final com.google.protobuf.Descriptors.Descriptor",
          "9914:         getDescriptor() {",
          "9915:       return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_descriptor;",
          "9916:     }",
          "9918:     @java.lang.Override",
          "9919:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "9920:         internalGetFieldAccessorTable() {",
          "9921:       return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_fieldAccessorTable",
          "9922:           .ensureFieldAccessorsInitialized(",
          "9923:               org.mlflow.api.proto.Service.Experiment.class, org.mlflow.api.proto.Service.Experiment.Builder.class);",
          "9924:     }",
          "9926:     private int bitField0_;",
          "9927:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "9928:     private volatile java.lang.Object experimentId_;",
          "9937:     @java.lang.Override",
          "9938:     public boolean hasExperimentId() {",
          "9939:       return ((bitField0_ & 0x00000001) != 0);",
          "9940:     }",
          "9949:     @java.lang.Override",
          "9950:     public java.lang.String getExperimentId() {",
          "9951:       java.lang.Object ref = experimentId_;",
          "9952:       if (ref instanceof java.lang.String) {",
          "9953:         return (java.lang.String) ref;",
          "9954:       } else {",
          "9955:         com.google.protobuf.ByteString bs =",
          "9956:             (com.google.protobuf.ByteString) ref;",
          "9957:         java.lang.String s = bs.toStringUtf8();",
          "9958:         if (bs.isValidUtf8()) {",
          "9959:           experimentId_ = s;",
          "9961:         return s;",
          "9963:     }",
          "9972:     @java.lang.Override",
          "9973:     public com.google.protobuf.ByteString",
          "9974:         getExperimentIdBytes() {",
          "9975:       java.lang.Object ref = experimentId_;",
          "9976:       if (ref instanceof java.lang.String) {",
          "9977:         com.google.protobuf.ByteString b =",
          "9978:             com.google.protobuf.ByteString.copyFromUtf8(",
          "9979:                 (java.lang.String) ref);",
          "9980:         experimentId_ = b;",
          "9981:         return b;",
          "9982:       } else {",
          "9983:         return (com.google.protobuf.ByteString) ref;",
          "9985:     }",
          "9987:     public static final int NAME_FIELD_NUMBER = 2;",
          "9988:     private volatile java.lang.Object name_;",
          "9997:     @java.lang.Override",
          "9998:     public boolean hasName() {",
          "9999:       return ((bitField0_ & 0x00000002) != 0);",
          "10000:     }",
          "10009:     @java.lang.Override",
          "10010:     public java.lang.String getName() {",
          "10011:       java.lang.Object ref = name_;",
          "10012:       if (ref instanceof java.lang.String) {",
          "10013:         return (java.lang.String) ref;",
          "10014:       } else {",
          "10015:         com.google.protobuf.ByteString bs =",
          "10016:             (com.google.protobuf.ByteString) ref;",
          "10017:         java.lang.String s = bs.toStringUtf8();",
          "10018:         if (bs.isValidUtf8()) {",
          "10019:           name_ = s;",
          "10021:         return s;",
          "10023:     }",
          "10032:     @java.lang.Override",
          "10033:     public com.google.protobuf.ByteString",
          "10034:         getNameBytes() {",
          "10035:       java.lang.Object ref = name_;",
          "10036:       if (ref instanceof java.lang.String) {",
          "10037:         com.google.protobuf.ByteString b =",
          "10038:             com.google.protobuf.ByteString.copyFromUtf8(",
          "10039:                 (java.lang.String) ref);",
          "10040:         name_ = b;",
          "10041:         return b;",
          "10042:       } else {",
          "10043:         return (com.google.protobuf.ByteString) ref;",
          "10047:     public static final int ARTIFACT_LOCATION_FIELD_NUMBER = 3;",
          "10048:     private volatile java.lang.Object artifactLocation_;",
          "10058:     public boolean hasArtifactLocation() {",
          "10059:       return ((bitField0_ & 0x00000004) != 0);",
          "10070:     public java.lang.String getArtifactLocation() {",
          "10071:       java.lang.Object ref = artifactLocation_;",
          "",
          "[Added Lines]",
          "16747:       public Builder setProfile(",
          "16752:   bitField0_ |= 0x00000020;",
          "16753:         profile_ = value;",
          "16767:       public Builder clearProfile() {",
          "16768:         bitField0_ = (bitField0_ & ~0x00000020);",
          "16769:         profile_ = getDefaultInstance().getProfile();",
          "16784:       public Builder setProfileBytes(",
          "16789:   bitField0_ |= 0x00000020;",
          "16790:         profile_ = value;",
          "16794:       @java.lang.Override",
          "16795:       public final Builder setUnknownFields(",
          "16796:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "16797:         return super.setUnknownFields(unknownFields);",
          "16798:       }",
          "16800:       @java.lang.Override",
          "16801:       public final Builder mergeUnknownFields(",
          "16802:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "16803:         return super.mergeUnknownFields(unknownFields);",
          "16804:       }",
          "16808:     }",
          "16811:     private static final org.mlflow.api.proto.Service.Dataset DEFAULT_INSTANCE;",
          "16812:     static {",
          "16813:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.Dataset();",
          "16814:     }",
          "16816:     public static org.mlflow.api.proto.Service.Dataset getDefaultInstance() {",
          "16817:       return DEFAULT_INSTANCE;",
          "16818:     }",
          "16820:     @java.lang.Deprecated public static final com.google.protobuf.Parser<Dataset>",
          "16821:         PARSER = new com.google.protobuf.AbstractParser<Dataset>() {",
          "16822:       @java.lang.Override",
          "16823:       public Dataset parsePartialFrom(",
          "16824:           com.google.protobuf.CodedInputStream input,",
          "16825:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16826:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16827:         return new Dataset(input, extensionRegistry);",
          "16828:       }",
          "16829:     };",
          "16831:     public static com.google.protobuf.Parser<Dataset> parser() {",
          "16832:       return PARSER;",
          "16833:     }",
          "16835:     @java.lang.Override",
          "16836:     public com.google.protobuf.Parser<Dataset> getParserForType() {",
          "16837:       return PARSER;",
          "16838:     }",
          "16840:     @java.lang.Override",
          "16841:     public org.mlflow.api.proto.Service.Dataset getDefaultInstanceForType() {",
          "16842:       return DEFAULT_INSTANCE;",
          "16843:     }",
          "16845:   }",
          "16847:   public interface CreateExperimentOrBuilder extends",
          "16849:       com.google.protobuf.MessageOrBuilder {",
          "16859:     boolean hasName();",
          "16868:     java.lang.String getName();",
          "16877:     com.google.protobuf.ByteString",
          "16878:         getNameBytes();",
          "16889:     boolean hasArtifactLocation();",
          "16899:     java.lang.String getArtifactLocation();",
          "16909:     com.google.protobuf.ByteString",
          "16910:         getArtifactLocationBytes();",
          "16922:     java.util.List<org.mlflow.api.proto.Service.ExperimentTag>",
          "16923:         getTagsList();",
          "16934:     org.mlflow.api.proto.Service.ExperimentTag getTags(int index);",
          "16945:     int getTagsCount();",
          "16956:     java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "16957:         getTagsOrBuilderList();",
          "16968:     org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "16969:         int index);",
          "16970:   }",
          "16974:   public static final class CreateExperiment extends",
          "16975:       com.google.protobuf.GeneratedMessageV3 implements",
          "16977:       CreateExperimentOrBuilder {",
          "16978:   private static final long serialVersionUID = 0L;",
          "16980:     private CreateExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "16981:       super(builder);",
          "16982:     }",
          "16983:     private CreateExperiment() {",
          "16984:       name_ = \"\";",
          "16985:       artifactLocation_ = \"\";",
          "16986:       tags_ = java.util.Collections.emptyList();",
          "16987:     }",
          "16989:     @java.lang.Override",
          "16990:     @SuppressWarnings({\"unused\"})",
          "16991:     protected java.lang.Object newInstance(",
          "16992:         UnusedPrivateParameter unused) {",
          "16993:       return new CreateExperiment();",
          "16994:     }",
          "16996:     @java.lang.Override",
          "16997:     public final com.google.protobuf.UnknownFieldSet",
          "16998:     getUnknownFields() {",
          "16999:       return this.unknownFields;",
          "17000:     }",
          "17001:     private CreateExperiment(",
          "17002:         com.google.protobuf.CodedInputStream input,",
          "17003:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17004:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "17005:       this();",
          "17006:       if (extensionRegistry == null) {",
          "17007:         throw new java.lang.NullPointerException();",
          "17008:       }",
          "17009:       int mutable_bitField0_ = 0;",
          "17010:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "17011:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "17012:       try {",
          "17013:         boolean done = false;",
          "17014:         while (!done) {",
          "17015:           int tag = input.readTag();",
          "17016:           switch (tag) {",
          "17017:             case 0:",
          "17018:               done = true;",
          "17019:               break;",
          "17020:             case 10: {",
          "17021:               com.google.protobuf.ByteString bs = input.readBytes();",
          "17022:               bitField0_ |= 0x00000001;",
          "17023:               name_ = bs;",
          "17024:               break;",
          "17025:             }",
          "17026:             case 18: {",
          "17027:               com.google.protobuf.ByteString bs = input.readBytes();",
          "17028:               bitField0_ |= 0x00000002;",
          "17029:               artifactLocation_ = bs;",
          "17030:               break;",
          "17031:             }",
          "17032:             case 26: {",
          "17033:               if (!((mutable_bitField0_ & 0x00000004) != 0)) {",
          "17034:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.ExperimentTag>();",
          "17035:                 mutable_bitField0_ |= 0x00000004;",
          "17036:               }",
          "17037:               tags_.add(",
          "17038:                   input.readMessage(org.mlflow.api.proto.Service.ExperimentTag.PARSER, extensionRegistry));",
          "17039:               break;",
          "17040:             }",
          "17041:             default: {",
          "17042:               if (!parseUnknownField(",
          "17043:                   input, unknownFields, extensionRegistry, tag)) {",
          "17044:                 done = true;",
          "17045:               }",
          "17046:               break;",
          "17047:             }",
          "17048:           }",
          "17049:         }",
          "17050:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "17051:         throw e.setUnfinishedMessage(this);",
          "17052:       } catch (java.io.IOException e) {",
          "17053:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "17054:             e).setUnfinishedMessage(this);",
          "17055:       } finally {",
          "17056:         if (((mutable_bitField0_ & 0x00000004) != 0)) {",
          "17057:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "17058:         }",
          "17059:         this.unknownFields = unknownFields.build();",
          "17060:         makeExtensionsImmutable();",
          "17061:       }",
          "17062:     }",
          "17063:     public static final com.google.protobuf.Descriptors.Descriptor",
          "17064:         getDescriptor() {",
          "17065:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_descriptor;",
          "17066:     }",
          "17068:     @java.lang.Override",
          "17069:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "17070:         internalGetFieldAccessorTable() {",
          "17071:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_fieldAccessorTable",
          "17072:           .ensureFieldAccessorsInitialized(",
          "17073:               org.mlflow.api.proto.Service.CreateExperiment.class, org.mlflow.api.proto.Service.CreateExperiment.Builder.class);",
          "17074:     }",
          "17076:     public interface ResponseOrBuilder extends",
          "17078:         com.google.protobuf.MessageOrBuilder {",
          "17088:       boolean hasExperimentId();",
          "17097:       java.lang.String getExperimentId();",
          "17106:       com.google.protobuf.ByteString",
          "17107:           getExperimentIdBytes();",
          "17108:     }",
          "17112:     public static final class Response extends",
          "17113:         com.google.protobuf.GeneratedMessageV3 implements",
          "17115:         ResponseOrBuilder {",
          "17116:     private static final long serialVersionUID = 0L;",
          "17118:       private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "17119:         super(builder);",
          "17120:       }",
          "17121:       private Response() {",
          "17122:         experimentId_ = \"\";",
          "17123:       }",
          "17125:       @java.lang.Override",
          "17126:       @SuppressWarnings({\"unused\"})",
          "17127:       protected java.lang.Object newInstance(",
          "17128:           UnusedPrivateParameter unused) {",
          "17129:         return new Response();",
          "17130:       }",
          "17132:       @java.lang.Override",
          "17133:       public final com.google.protobuf.UnknownFieldSet",
          "17134:       getUnknownFields() {",
          "17135:         return this.unknownFields;",
          "17136:       }",
          "17137:       private Response(",
          "17138:           com.google.protobuf.CodedInputStream input,",
          "17139:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17140:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "17141:         this();",
          "17142:         if (extensionRegistry == null) {",
          "17143:           throw new java.lang.NullPointerException();",
          "17144:         }",
          "17145:         int mutable_bitField0_ = 0;",
          "17146:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "17147:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "17148:         try {",
          "17149:           boolean done = false;",
          "17150:           while (!done) {",
          "17151:             int tag = input.readTag();",
          "17152:             switch (tag) {",
          "17153:               case 0:",
          "17154:                 done = true;",
          "17155:                 break;",
          "17156:               case 10: {",
          "17157:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "17158:                 bitField0_ |= 0x00000001;",
          "17159:                 experimentId_ = bs;",
          "17160:                 break;",
          "17161:               }",
          "17162:               default: {",
          "17163:                 if (!parseUnknownField(",
          "17164:                     input, unknownFields, extensionRegistry, tag)) {",
          "17165:                   done = true;",
          "17166:                 }",
          "17167:                 break;",
          "17168:               }",
          "17169:             }",
          "17170:           }",
          "17171:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "17172:           throw e.setUnfinishedMessage(this);",
          "17173:         } catch (java.io.IOException e) {",
          "17174:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "17175:               e).setUnfinishedMessage(this);",
          "17176:         } finally {",
          "17177:           this.unknownFields = unknownFields.build();",
          "17178:           makeExtensionsImmutable();",
          "17179:         }",
          "17180:       }",
          "17181:       public static final com.google.protobuf.Descriptors.Descriptor",
          "17182:           getDescriptor() {",
          "17183:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_descriptor;",
          "17184:       }",
          "17186:       @java.lang.Override",
          "17187:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "17188:           internalGetFieldAccessorTable() {",
          "17189:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_fieldAccessorTable",
          "17190:             .ensureFieldAccessorsInitialized(",
          "17191:                 org.mlflow.api.proto.Service.CreateExperiment.Response.class, org.mlflow.api.proto.Service.CreateExperiment.Response.Builder.class);",
          "17192:       }",
          "17194:       private int bitField0_;",
          "17195:       public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "17196:       private volatile java.lang.Object experimentId_;",
          "17205:       @java.lang.Override",
          "17206:       public boolean hasExperimentId() {",
          "17207:         return ((bitField0_ & 0x00000001) != 0);",
          "17217:       @java.lang.Override",
          "17218:       public java.lang.String getExperimentId() {",
          "17219:         java.lang.Object ref = experimentId_;",
          "17220:         if (ref instanceof java.lang.String) {",
          "17221:           return (java.lang.String) ref;",
          "17222:         } else {",
          "17223:           com.google.protobuf.ByteString bs =",
          "17227:             experimentId_ = s;",
          "17240:       @java.lang.Override",
          "17242:           getExperimentIdBytes() {",
          "17243:         java.lang.Object ref = experimentId_;",
          "17244:         if (ref instanceof java.lang.String) {",
          "17248:           experimentId_ = b;",
          "17255:       private byte memoizedIsInitialized = -1;",
          "17257:       public final boolean isInitialized() {",
          "17258:         byte isInitialized = memoizedIsInitialized;",
          "17259:         if (isInitialized == 1) return true;",
          "17260:         if (isInitialized == 0) return false;",
          "17262:         memoizedIsInitialized = 1;",
          "17263:         return true;",
          "17267:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "17268:                           throws java.io.IOException {",
          "17269:         if (((bitField0_ & 0x00000001) != 0)) {",
          "17270:           com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "17271:         }",
          "17272:         unknownFields.writeTo(output);",
          "17275:       @java.lang.Override",
          "17276:       public int getSerializedSize() {",
          "17277:         int size = memoizedSize;",
          "17278:         if (size != -1) return size;",
          "17280:         size = 0;",
          "17281:         if (((bitField0_ & 0x00000001) != 0)) {",
          "17282:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "17283:         }",
          "17284:         size += unknownFields.getSerializedSize();",
          "17285:         memoizedSize = size;",
          "17286:         return size;",
          "17287:       }",
          "17289:       @java.lang.Override",
          "17290:       public boolean equals(final java.lang.Object obj) {",
          "17291:         if (obj == this) {",
          "17292:          return true;",
          "17293:         }",
          "17294:         if (!(obj instanceof org.mlflow.api.proto.Service.CreateExperiment.Response)) {",
          "17295:           return super.equals(obj);",
          "17296:         }",
          "17297:         org.mlflow.api.proto.Service.CreateExperiment.Response other = (org.mlflow.api.proto.Service.CreateExperiment.Response) obj;",
          "17299:         if (hasExperimentId() != other.hasExperimentId()) return false;",
          "17300:         if (hasExperimentId()) {",
          "17301:           if (!getExperimentId()",
          "17302:               .equals(other.getExperimentId())) return false;",
          "17303:         }",
          "17304:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "17305:         return true;",
          "17306:       }",
          "17309:       public int hashCode() {",
          "17310:         if (memoizedHashCode != 0) {",
          "17311:           return memoizedHashCode;",
          "17312:         }",
          "17313:         int hash = 41;",
          "17314:         hash = (19 * hash) + getDescriptor().hashCode();",
          "17315:         if (hasExperimentId()) {",
          "17316:           hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "17317:           hash = (53 * hash) + getExperimentId().hashCode();",
          "17318:         }",
          "17319:         hash = (29 * hash) + unknownFields.hashCode();",
          "17320:         memoizedHashCode = hash;",
          "17321:         return hash;",
          "17322:       }",
          "17324:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17325:           java.nio.ByteBuffer data)",
          "17326:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "17327:         return PARSER.parseFrom(data);",
          "17328:       }",
          "17329:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17330:           java.nio.ByteBuffer data,",
          "17333:         return PARSER.parseFrom(data, extensionRegistry);",
          "17334:       }",
          "17335:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17336:           com.google.protobuf.ByteString data)",
          "17337:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "17338:         return PARSER.parseFrom(data);",
          "17339:       }",
          "17340:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17341:           com.google.protobuf.ByteString data,",
          "17342:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17343:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "17344:         return PARSER.parseFrom(data, extensionRegistry);",
          "17345:       }",
          "17346:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(byte[] data)",
          "17347:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "17348:         return PARSER.parseFrom(data);",
          "17349:       }",
          "17350:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17351:           byte[] data,",
          "17352:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17353:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "17354:         return PARSER.parseFrom(data, extensionRegistry);",
          "17355:       }",
          "17356:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(java.io.InputStream input)",
          "17357:           throws java.io.IOException {",
          "17358:         return com.google.protobuf.GeneratedMessageV3",
          "17359:             .parseWithIOException(PARSER, input);",
          "17360:       }",
          "17361:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17362:           java.io.InputStream input,",
          "17363:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17364:           throws java.io.IOException {",
          "17365:         return com.google.protobuf.GeneratedMessageV3",
          "17366:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "17367:       }",
          "17368:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "17369:           throws java.io.IOException {",
          "17370:         return com.google.protobuf.GeneratedMessageV3",
          "17371:             .parseDelimitedWithIOException(PARSER, input);",
          "17372:       }",
          "17373:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseDelimitedFrom(",
          "17374:           java.io.InputStream input,",
          "17375:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17376:           throws java.io.IOException {",
          "17377:         return com.google.protobuf.GeneratedMessageV3",
          "17378:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "17379:       }",
          "17380:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17381:           com.google.protobuf.CodedInputStream input)",
          "17382:           throws java.io.IOException {",
          "17383:         return com.google.protobuf.GeneratedMessageV3",
          "17384:             .parseWithIOException(PARSER, input);",
          "17385:       }",
          "17386:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "17387:           com.google.protobuf.CodedInputStream input,",
          "17388:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17389:           throws java.io.IOException {",
          "17390:         return com.google.protobuf.GeneratedMessageV3",
          "17391:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "17394:       @java.lang.Override",
          "17395:       public Builder newBuilderForType() { return newBuilder(); }",
          "17396:       public static Builder newBuilder() {",
          "17397:         return DEFAULT_INSTANCE.toBuilder();",
          "17398:       }",
          "17399:       public static Builder newBuilder(org.mlflow.api.proto.Service.CreateExperiment.Response prototype) {",
          "17400:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "17401:       }",
          "17402:       @java.lang.Override",
          "17403:       public Builder toBuilder() {",
          "17404:         return this == DEFAULT_INSTANCE",
          "17405:             ? new Builder() : new Builder().mergeFrom(this);",
          "17406:       }",
          "17408:       @java.lang.Override",
          "17409:       protected Builder newBuilderForType(",
          "17410:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "17411:         Builder builder = new Builder(parent);",
          "17412:         return builder;",
          "17413:       }",
          "17417:       public static final class Builder extends",
          "17418:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "17420:           org.mlflow.api.proto.Service.CreateExperiment.ResponseOrBuilder {",
          "17421:         public static final com.google.protobuf.Descriptors.Descriptor",
          "17422:             getDescriptor() {",
          "17423:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_descriptor;",
          "17424:         }",
          "17426:         @java.lang.Override",
          "17427:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "17428:             internalGetFieldAccessorTable() {",
          "17429:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_fieldAccessorTable",
          "17430:               .ensureFieldAccessorsInitialized(",
          "17431:                   org.mlflow.api.proto.Service.CreateExperiment.Response.class, org.mlflow.api.proto.Service.CreateExperiment.Response.Builder.class);",
          "17432:         }",
          "17435:         private Builder() {",
          "17436:           maybeForceBuilderInitialization();",
          "17437:         }",
          "17439:         private Builder(",
          "17440:             com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "17441:           super(parent);",
          "17442:           maybeForceBuilderInitialization();",
          "17443:         }",
          "17444:         private void maybeForceBuilderInitialization() {",
          "17445:           if (com.google.protobuf.GeneratedMessageV3",
          "17446:                   .alwaysUseFieldBuilders) {",
          "17447:           }",
          "17448:         }",
          "17449:         @java.lang.Override",
          "17450:         public Builder clear() {",
          "17451:           super.clear();",
          "17452:           experimentId_ = \"\";",
          "17453:           bitField0_ = (bitField0_ & ~0x00000001);",
          "17454:           return this;",
          "17455:         }",
          "17457:         @java.lang.Override",
          "17458:         public com.google.protobuf.Descriptors.Descriptor",
          "17459:             getDescriptorForType() {",
          "17460:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_descriptor;",
          "17461:         }",
          "17463:         @java.lang.Override",
          "17464:         public org.mlflow.api.proto.Service.CreateExperiment.Response getDefaultInstanceForType() {",
          "17465:           return org.mlflow.api.proto.Service.CreateExperiment.Response.getDefaultInstance();",
          "17466:         }",
          "17468:         @java.lang.Override",
          "17469:         public org.mlflow.api.proto.Service.CreateExperiment.Response build() {",
          "17470:           org.mlflow.api.proto.Service.CreateExperiment.Response result = buildPartial();",
          "17471:           if (!result.isInitialized()) {",
          "17472:             throw newUninitializedMessageException(result);",
          "17473:           }",
          "17474:           return result;",
          "17475:         }",
          "17477:         @java.lang.Override",
          "17478:         public org.mlflow.api.proto.Service.CreateExperiment.Response buildPartial() {",
          "17479:           org.mlflow.api.proto.Service.CreateExperiment.Response result = new org.mlflow.api.proto.Service.CreateExperiment.Response(this);",
          "17480:           int from_bitField0_ = bitField0_;",
          "17481:           int to_bitField0_ = 0;",
          "17482:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "17483:             to_bitField0_ |= 0x00000001;",
          "17484:           }",
          "17485:           result.experimentId_ = experimentId_;",
          "17486:           result.bitField0_ = to_bitField0_;",
          "17487:           onBuilt();",
          "17488:           return result;",
          "17489:         }",
          "17491:         @java.lang.Override",
          "17492:         public Builder clone() {",
          "17493:           return super.clone();",
          "17494:         }",
          "17495:         @java.lang.Override",
          "17496:         public Builder setField(",
          "17497:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "17498:             java.lang.Object value) {",
          "17499:           return super.setField(field, value);",
          "17500:         }",
          "17501:         @java.lang.Override",
          "17502:         public Builder clearField(",
          "17503:             com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "17504:           return super.clearField(field);",
          "17505:         }",
          "17506:         @java.lang.Override",
          "17507:         public Builder clearOneof(",
          "17508:             com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "17509:           return super.clearOneof(oneof);",
          "17510:         }",
          "17511:         @java.lang.Override",
          "17512:         public Builder setRepeatedField(",
          "17513:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "17514:             int index, java.lang.Object value) {",
          "17515:           return super.setRepeatedField(field, index, value);",
          "17516:         }",
          "17517:         @java.lang.Override",
          "17518:         public Builder addRepeatedField(",
          "17519:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "17520:             java.lang.Object value) {",
          "17521:           return super.addRepeatedField(field, value);",
          "17522:         }",
          "17523:         @java.lang.Override",
          "17524:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "17525:           if (other instanceof org.mlflow.api.proto.Service.CreateExperiment.Response) {",
          "17526:             return mergeFrom((org.mlflow.api.proto.Service.CreateExperiment.Response)other);",
          "17527:           } else {",
          "17528:             super.mergeFrom(other);",
          "17529:             return this;",
          "17530:           }",
          "17531:         }",
          "17533:         public Builder mergeFrom(org.mlflow.api.proto.Service.CreateExperiment.Response other) {",
          "17534:           if (other == org.mlflow.api.proto.Service.CreateExperiment.Response.getDefaultInstance()) return this;",
          "17535:           if (other.hasExperimentId()) {",
          "17536:             bitField0_ |= 0x00000001;",
          "17537:             experimentId_ = other.experimentId_;",
          "17538:             onChanged();",
          "17539:           }",
          "17540:           this.mergeUnknownFields(other.unknownFields);",
          "17541:           onChanged();",
          "17542:           return this;",
          "17543:         }",
          "17545:         @java.lang.Override",
          "17546:         public final boolean isInitialized() {",
          "17547:           return true;",
          "17548:         }",
          "17550:         @java.lang.Override",
          "17551:         public Builder mergeFrom(",
          "17552:             com.google.protobuf.CodedInputStream input,",
          "17553:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17554:             throws java.io.IOException {",
          "17555:           org.mlflow.api.proto.Service.CreateExperiment.Response parsedMessage = null;",
          "17556:           try {",
          "17557:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "17558:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "17559:             parsedMessage = (org.mlflow.api.proto.Service.CreateExperiment.Response) e.getUnfinishedMessage();",
          "17560:             throw e.unwrapIOException();",
          "17561:           } finally {",
          "17562:             if (parsedMessage != null) {",
          "17563:               mergeFrom(parsedMessage);",
          "17565:           }",
          "17566:           return this;",
          "17567:         }",
          "17568:         private int bitField0_;",
          "17570:         private java.lang.Object experimentId_ = \"\";",
          "17579:         public boolean hasExperimentId() {",
          "17580:           return ((bitField0_ & 0x00000001) != 0);",
          "17581:         }",
          "17590:         public java.lang.String getExperimentId() {",
          "17591:           java.lang.Object ref = experimentId_;",
          "17592:           if (!(ref instanceof java.lang.String)) {",
          "17593:             com.google.protobuf.ByteString bs =",
          "17594:                 (com.google.protobuf.ByteString) ref;",
          "17595:             java.lang.String s = bs.toStringUtf8();",
          "17596:             if (bs.isValidUtf8()) {",
          "17597:               experimentId_ = s;",
          "17599:             return s;",
          "17600:           } else {",
          "17601:             return (java.lang.String) ref;",
          "17612:         public com.google.protobuf.ByteString",
          "17613:             getExperimentIdBytes() {",
          "17614:           java.lang.Object ref = experimentId_;",
          "17615:           if (ref instanceof String) {",
          "17616:             com.google.protobuf.ByteString b =",
          "17617:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "17618:                     (java.lang.String) ref);",
          "17619:             experimentId_ = b;",
          "17620:             return b;",
          "17621:           } else {",
          "17622:             return (com.google.protobuf.ByteString) ref;",
          "17623:           }",
          "17624:         }",
          "17634:         public Builder setExperimentId(",
          "17635:             java.lang.String value) {",
          "17636:           if (value == null) {",
          "17637:     throw new NullPointerException();",
          "17638:   }",
          "17639:   bitField0_ |= 0x00000001;",
          "17640:           experimentId_ = value;",
          "17641:           onChanged();",
          "17642:           return this;",
          "17643:         }",
          "17652:         public Builder clearExperimentId() {",
          "17653:           bitField0_ = (bitField0_ & ~0x00000001);",
          "17654:           experimentId_ = getDefaultInstance().getExperimentId();",
          "17655:           onChanged();",
          "17656:           return this;",
          "17657:         }",
          "17667:         public Builder setExperimentIdBytes(",
          "17668:             com.google.protobuf.ByteString value) {",
          "17669:           if (value == null) {",
          "17670:     throw new NullPointerException();",
          "17671:   }",
          "17672:   bitField0_ |= 0x00000001;",
          "17673:           experimentId_ = value;",
          "17674:           onChanged();",
          "17675:           return this;",
          "17676:         }",
          "17677:         @java.lang.Override",
          "17678:         public final Builder setUnknownFields(",
          "17679:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "17680:           return super.setUnknownFields(unknownFields);",
          "17683:         @java.lang.Override",
          "17684:         public final Builder mergeUnknownFields(",
          "17685:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "17686:           return super.mergeUnknownFields(unknownFields);",
          "17694:       private static final org.mlflow.api.proto.Service.CreateExperiment.Response DEFAULT_INSTANCE;",
          "17695:       static {",
          "17696:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateExperiment.Response();",
          "17699:       public static org.mlflow.api.proto.Service.CreateExperiment.Response getDefaultInstance() {",
          "17700:         return DEFAULT_INSTANCE;",
          "17701:       }",
          "17703:       @java.lang.Deprecated public static final com.google.protobuf.Parser<Response>",
          "17704:           PARSER = new com.google.protobuf.AbstractParser<Response>() {",
          "17705:         @java.lang.Override",
          "17706:         public Response parsePartialFrom(",
          "17707:             com.google.protobuf.CodedInputStream input,",
          "17708:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17709:             throws com.google.protobuf.InvalidProtocolBufferException {",
          "17710:           return new Response(input, extensionRegistry);",
          "17712:       };",
          "17714:       public static com.google.protobuf.Parser<Response> parser() {",
          "17715:         return PARSER;",
          "17718:       @java.lang.Override",
          "17719:       public com.google.protobuf.Parser<Response> getParserForType() {",
          "17720:         return PARSER;",
          "17721:       }",
          "17723:       @java.lang.Override",
          "17724:       public org.mlflow.api.proto.Service.CreateExperiment.Response getDefaultInstanceForType() {",
          "17725:         return DEFAULT_INSTANCE;",
          "17730:     private int bitField0_;",
          "17731:     public static final int NAME_FIELD_NUMBER = 1;",
          "17732:     private volatile java.lang.Object name_;",
          "17742:     public boolean hasName() {",
          "17743:       return ((bitField0_ & 0x00000001) != 0);",
          "17754:     public java.lang.String getName() {",
          "17755:       java.lang.Object ref = name_;",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "10076:             (com.google.protobuf.ByteString) ref;",
          "10077:         java.lang.String s = bs.toStringUtf8();",
          "10078:         if (bs.isValidUtf8()) {",
          "10080:         }",
          "10081:         return s;",
          "10082:       }",
          "10083:     }",
          "10092:     @java.lang.Override",
          "10093:     public com.google.protobuf.ByteString",
          "10096:       if (ref instanceof java.lang.String) {",
          "10097:         com.google.protobuf.ByteString b =",
          "10098:             com.google.protobuf.ByteString.copyFromUtf8(",
          "10099:                 (java.lang.String) ref);",
          "10101:         return b;",
          "10102:       } else {",
          "10103:         return (com.google.protobuf.ByteString) ref;",
          "10104:       }",
          "10105:     }",
          "10118:     @java.lang.Override",
          "10121:     }",
          "10131:     @java.lang.Override",
          "10134:       if (ref instanceof java.lang.String) {",
          "10135:         return (java.lang.String) ref;",
          "10136:       } else {",
          "",
          "[Removed Lines]",
          "10079:           artifactLocation_ = s;",
          "10094:         getArtifactLocationBytes() {",
          "10095:       java.lang.Object ref = artifactLocation_;",
          "10100:         artifactLocation_ = b;",
          "10107:     public static final int LIFECYCLE_STAGE_FIELD_NUMBER = 4;",
          "10108:     private volatile java.lang.Object lifecycleStage_;",
          "10119:     public boolean hasLifecycleStage() {",
          "10120:       return ((bitField0_ & 0x00000008) != 0);",
          "10132:     public java.lang.String getLifecycleStage() {",
          "10133:       java.lang.Object ref = lifecycleStage_;",
          "",
          "[Added Lines]",
          "17763:           name_ = s;",
          "17778:         getNameBytes() {",
          "17779:       java.lang.Object ref = name_;",
          "17784:         name_ = b;",
          "17791:     public static final int ARTIFACT_LOCATION_FIELD_NUMBER = 2;",
          "17792:     private volatile java.lang.Object artifactLocation_;",
          "17803:     public boolean hasArtifactLocation() {",
          "17804:       return ((bitField0_ & 0x00000002) != 0);",
          "17816:     public java.lang.String getArtifactLocation() {",
          "17817:       java.lang.Object ref = artifactLocation_;",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "10138:             (com.google.protobuf.ByteString) ref;",
          "10139:         java.lang.String s = bs.toStringUtf8();",
          "10140:         if (bs.isValidUtf8()) {",
          "10142:         }",
          "10143:         return s;",
          "10144:       }",
          "10145:     }",
          "10155:     @java.lang.Override",
          "10156:     public com.google.protobuf.ByteString",
          "10159:       if (ref instanceof java.lang.String) {",
          "10160:         com.google.protobuf.ByteString b =",
          "10161:             com.google.protobuf.ByteString.copyFromUtf8(",
          "10162:                 (java.lang.String) ref);",
          "10164:         return b;",
          "10165:       } else {",
          "10166:         return (com.google.protobuf.ByteString) ref;",
          "10167:       }",
          "10168:     }",
          "10225:     private java.util.List<org.mlflow.api.proto.Service.ExperimentTag> tags_;",
          "10233:     @java.lang.Override",
          "10234:     public java.util.List<org.mlflow.api.proto.Service.ExperimentTag> getTagsList() {",
          "",
          "[Removed Lines]",
          "10141:           lifecycleStage_ = s;",
          "10157:         getLifecycleStageBytes() {",
          "10158:       java.lang.Object ref = lifecycleStage_;",
          "10163:         lifecycleStage_ = b;",
          "10170:     public static final int LAST_UPDATE_TIME_FIELD_NUMBER = 5;",
          "10171:     private long lastUpdateTime_;",
          "10180:     @java.lang.Override",
          "10181:     public boolean hasLastUpdateTime() {",
          "10182:       return ((bitField0_ & 0x00000010) != 0);",
          "10183:     }",
          "10192:     @java.lang.Override",
          "10193:     public long getLastUpdateTime() {",
          "10194:       return lastUpdateTime_;",
          "10195:     }",
          "10197:     public static final int CREATION_TIME_FIELD_NUMBER = 6;",
          "10198:     private long creationTime_;",
          "10207:     @java.lang.Override",
          "10208:     public boolean hasCreationTime() {",
          "10209:       return ((bitField0_ & 0x00000020) != 0);",
          "10210:     }",
          "10219:     @java.lang.Override",
          "10220:     public long getCreationTime() {",
          "10221:       return creationTime_;",
          "10222:     }",
          "10224:     public static final int TAGS_FIELD_NUMBER = 7;",
          "",
          "[Added Lines]",
          "17825:           artifactLocation_ = s;",
          "17841:         getArtifactLocationBytes() {",
          "17842:       java.lang.Object ref = artifactLocation_;",
          "17847:         artifactLocation_ = b;",
          "17854:     public static final int TAGS_FIELD_NUMBER = 3;",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "10296:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "10297:                         throws java.io.IOException {",
          "10298:       if (((bitField0_ & 0x00000001) != 0)) {",
          "10300:       }",
          "10301:       if (((bitField0_ & 0x00000002) != 0)) {",
          "10315:       }",
          "10316:       for (int i = 0; i < tags_.size(); i++) {",
          "10318:       }",
          "10319:       unknownFields.writeTo(output);",
          "10320:     }",
          "",
          "[Removed Lines]",
          "10299:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "10302:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);",
          "10303:       }",
          "10304:       if (((bitField0_ & 0x00000004) != 0)) {",
          "10305:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, artifactLocation_);",
          "10306:       }",
          "10307:       if (((bitField0_ & 0x00000008) != 0)) {",
          "10308:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, lifecycleStage_);",
          "10309:       }",
          "10310:       if (((bitField0_ & 0x00000010) != 0)) {",
          "10311:         output.writeInt64(5, lastUpdateTime_);",
          "10312:       }",
          "10313:       if (((bitField0_ & 0x00000020) != 0)) {",
          "10314:         output.writeInt64(6, creationTime_);",
          "10317:         output.writeMessage(7, tags_.get(i));",
          "",
          "[Added Lines]",
          "17944:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);",
          "17947:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, artifactLocation_);",
          "17950:         output.writeMessage(3, tags_.get(i));",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "10327:       size = 0;",
          "10328:       if (((bitField0_ & 0x00000001) != 0)) {",
          "10330:       }",
          "10331:       if (((bitField0_ & 0x00000002) != 0)) {",
          "10347:       }",
          "10348:       for (int i = 0; i < tags_.size(); i++) {",
          "10349:         size += com.google.protobuf.CodedOutputStream",
          "10351:       }",
          "10352:       size += unknownFields.getSerializedSize();",
          "10353:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "10329:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "10332:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);",
          "10333:       }",
          "10334:       if (((bitField0_ & 0x00000004) != 0)) {",
          "10335:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, artifactLocation_);",
          "10336:       }",
          "10337:       if (((bitField0_ & 0x00000008) != 0)) {",
          "10338:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, lifecycleStage_);",
          "10339:       }",
          "10340:       if (((bitField0_ & 0x00000010) != 0)) {",
          "10341:         size += com.google.protobuf.CodedOutputStream",
          "10342:           .computeInt64Size(5, lastUpdateTime_);",
          "10343:       }",
          "10344:       if (((bitField0_ & 0x00000020) != 0)) {",
          "10345:         size += com.google.protobuf.CodedOutputStream",
          "10346:           .computeInt64Size(6, creationTime_);",
          "10350:           .computeMessageSize(7, tags_.get(i));",
          "",
          "[Added Lines]",
          "17962:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);",
          "17965:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, artifactLocation_);",
          "17969:           .computeMessageSize(3, tags_.get(i));",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "10359:       if (obj == this) {",
          "10360:        return true;",
          "10361:       }",
          "10363:         return super.equals(obj);",
          "10364:       }",
          "10372:       if (hasName() != other.hasName()) return false;",
          "10373:       if (hasName()) {",
          "10374:         if (!getName()",
          "",
          "[Removed Lines]",
          "10362:       if (!(obj instanceof org.mlflow.api.proto.Service.Experiment)) {",
          "10365:       org.mlflow.api.proto.Service.Experiment other = (org.mlflow.api.proto.Service.Experiment) obj;",
          "10367:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "10368:       if (hasExperimentId()) {",
          "10369:         if (!getExperimentId()",
          "10370:             .equals(other.getExperimentId())) return false;",
          "10371:       }",
          "",
          "[Added Lines]",
          "17981:       if (!(obj instanceof org.mlflow.api.proto.Service.CreateExperiment)) {",
          "17984:       org.mlflow.api.proto.Service.CreateExperiment other = (org.mlflow.api.proto.Service.CreateExperiment) obj;",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "10379:         if (!getArtifactLocation()",
          "10380:             .equals(other.getArtifactLocation())) return false;",
          "10381:       }",
          "10397:       if (!getTagsList()",
          "10398:           .equals(other.getTagsList())) return false;",
          "10399:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "",
          "[Removed Lines]",
          "10382:       if (hasLifecycleStage() != other.hasLifecycleStage()) return false;",
          "10383:       if (hasLifecycleStage()) {",
          "10384:         if (!getLifecycleStage()",
          "10385:             .equals(other.getLifecycleStage())) return false;",
          "10386:       }",
          "10387:       if (hasLastUpdateTime() != other.hasLastUpdateTime()) return false;",
          "10388:       if (hasLastUpdateTime()) {",
          "10389:         if (getLastUpdateTime()",
          "10390:             != other.getLastUpdateTime()) return false;",
          "10391:       }",
          "10392:       if (hasCreationTime() != other.hasCreationTime()) return false;",
          "10393:       if (hasCreationTime()) {",
          "10394:         if (getCreationTime()",
          "10395:             != other.getCreationTime()) return false;",
          "10396:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "10407:       }",
          "10408:       int hash = 41;",
          "10409:       hash = (19 * hash) + getDescriptor().hashCode();",
          "10414:       if (hasName()) {",
          "10415:         hash = (37 * hash) + NAME_FIELD_NUMBER;",
          "10416:         hash = (53 * hash) + getName().hashCode();",
          "",
          "[Removed Lines]",
          "10410:       if (hasExperimentId()) {",
          "10411:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "10412:         hash = (53 * hash) + getExperimentId().hashCode();",
          "10413:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "10419:         hash = (37 * hash) + ARTIFACT_LOCATION_FIELD_NUMBER;",
          "10420:         hash = (53 * hash) + getArtifactLocation().hashCode();",
          "10421:       }",
          "10436:       if (getTagsCount() > 0) {",
          "10437:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "10438:         hash = (53 * hash) + getTagsList().hashCode();",
          "",
          "[Removed Lines]",
          "10422:       if (hasLifecycleStage()) {",
          "10423:         hash = (37 * hash) + LIFECYCLE_STAGE_FIELD_NUMBER;",
          "10424:         hash = (53 * hash) + getLifecycleStage().hashCode();",
          "10425:       }",
          "10426:       if (hasLastUpdateTime()) {",
          "10427:         hash = (37 * hash) + LAST_UPDATE_TIME_FIELD_NUMBER;",
          "10428:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "10429:             getLastUpdateTime());",
          "10430:       }",
          "10431:       if (hasCreationTime()) {",
          "10432:         hash = (37 * hash) + CREATION_TIME_FIELD_NUMBER;",
          "10433:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "10434:             getCreationTime());",
          "10435:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "10442:       return hash;",
          "10443:     }",
          "10446:         java.nio.ByteBuffer data)",
          "10447:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "10448:       return PARSER.parseFrom(data);",
          "10449:     }",
          "10451:         java.nio.ByteBuffer data,",
          "10452:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10453:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "10454:       return PARSER.parseFrom(data, extensionRegistry);",
          "10455:     }",
          "10457:         com.google.protobuf.ByteString data)",
          "10458:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "10459:       return PARSER.parseFrom(data);",
          "10460:     }",
          "10462:         com.google.protobuf.ByteString data,",
          "10463:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10464:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "10465:       return PARSER.parseFrom(data, extensionRegistry);",
          "10466:     }",
          "10468:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "10469:       return PARSER.parseFrom(data);",
          "10470:     }",
          "10472:         byte[] data,",
          "10473:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10474:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "10475:       return PARSER.parseFrom(data, extensionRegistry);",
          "10476:     }",
          "10478:         throws java.io.IOException {",
          "10479:       return com.google.protobuf.GeneratedMessageV3",
          "10480:           .parseWithIOException(PARSER, input);",
          "10481:     }",
          "10483:         java.io.InputStream input,",
          "10484:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10485:         throws java.io.IOException {",
          "10486:       return com.google.protobuf.GeneratedMessageV3",
          "10487:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "10488:     }",
          "10490:         throws java.io.IOException {",
          "10491:       return com.google.protobuf.GeneratedMessageV3",
          "10492:           .parseDelimitedWithIOException(PARSER, input);",
          "10493:     }",
          "10495:         java.io.InputStream input,",
          "10496:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10497:         throws java.io.IOException {",
          "10498:       return com.google.protobuf.GeneratedMessageV3",
          "10499:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "10500:     }",
          "10502:         com.google.protobuf.CodedInputStream input)",
          "10503:         throws java.io.IOException {",
          "10504:       return com.google.protobuf.GeneratedMessageV3",
          "10505:           .parseWithIOException(PARSER, input);",
          "10506:     }",
          "10508:         com.google.protobuf.CodedInputStream input,",
          "10509:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10510:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "10445:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "10450:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "10456:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "10461:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "10467:     public static org.mlflow.api.proto.Service.Experiment parseFrom(byte[] data)",
          "10471:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "10477:     public static org.mlflow.api.proto.Service.Experiment parseFrom(java.io.InputStream input)",
          "10482:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "10489:     public static org.mlflow.api.proto.Service.Experiment parseDelimitedFrom(java.io.InputStream input)",
          "10494:     public static org.mlflow.api.proto.Service.Experiment parseDelimitedFrom(",
          "10501:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "10507:     public static org.mlflow.api.proto.Service.Experiment parseFrom(",
          "",
          "[Added Lines]",
          "18026:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "18031:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "18037:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "18042:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "18048:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(byte[] data)",
          "18052:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "18058:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(java.io.InputStream input)",
          "18063:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "18070:     public static org.mlflow.api.proto.Service.CreateExperiment parseDelimitedFrom(java.io.InputStream input)",
          "18075:     public static org.mlflow.api.proto.Service.CreateExperiment parseDelimitedFrom(",
          "18082:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "18088:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "10517:     public static Builder newBuilder() {",
          "10518:       return DEFAULT_INSTANCE.toBuilder();",
          "10519:     }",
          "10521:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "10522:     }",
          "10523:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "10520:     public static Builder newBuilder(org.mlflow.api.proto.Service.Experiment prototype) {",
          "",
          "[Added Lines]",
          "18101:     public static Builder newBuilder(org.mlflow.api.proto.Service.CreateExperiment prototype) {",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "10533:       return builder;",
          "10534:     }",
          "10542:     public static final class Builder extends",
          "10543:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "10546:       public static final com.google.protobuf.Descriptors.Descriptor",
          "10547:           getDescriptor() {",
          "10549:       }",
          "10551:       @java.lang.Override",
          "10552:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "10553:           internalGetFieldAccessorTable() {",
          "10555:             .ensureFieldAccessorsInitialized(",
          "10557:       }",
          "10560:       private Builder() {",
          "10561:         maybeForceBuilderInitialization();",
          "10562:       }",
          "",
          "[Removed Lines]",
          "10545:         org.mlflow.api.proto.Service.ExperimentOrBuilder {",
          "10548:         return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_descriptor;",
          "10554:         return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_fieldAccessorTable",
          "10556:                 org.mlflow.api.proto.Service.Experiment.class, org.mlflow.api.proto.Service.Experiment.Builder.class);",
          "",
          "[Added Lines]",
          "18122:         org.mlflow.api.proto.Service.CreateExperimentOrBuilder {",
          "18125:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_descriptor;",
          "18131:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_fieldAccessorTable",
          "18133:                 org.mlflow.api.proto.Service.CreateExperiment.class, org.mlflow.api.proto.Service.CreateExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "10575:       @java.lang.Override",
          "10576:       public Builder clear() {",
          "10577:         super.clear();",
          "10580:         name_ = \"\";",
          "10582:         artifactLocation_ = \"\";",
          "10590:         if (tagsBuilder_ == null) {",
          "10591:           tags_ = java.util.Collections.emptyList();",
          "10593:         } else {",
          "10594:           tagsBuilder_.clear();",
          "10595:         }",
          "",
          "[Removed Lines]",
          "10578:         experimentId_ = \"\";",
          "10579:         bitField0_ = (bitField0_ & ~0x00000001);",
          "10581:         bitField0_ = (bitField0_ & ~0x00000002);",
          "10583:         bitField0_ = (bitField0_ & ~0x00000004);",
          "10584:         lifecycleStage_ = \"\";",
          "10585:         bitField0_ = (bitField0_ & ~0x00000008);",
          "10586:         lastUpdateTime_ = 0L;",
          "10587:         bitField0_ = (bitField0_ & ~0x00000010);",
          "10588:         creationTime_ = 0L;",
          "10589:         bitField0_ = (bitField0_ & ~0x00000020);",
          "10592:           bitField0_ = (bitField0_ & ~0x00000040);",
          "",
          "[Added Lines]",
          "18156:         bitField0_ = (bitField0_ & ~0x00000001);",
          "18158:         bitField0_ = (bitField0_ & ~0x00000002);",
          "18161:           bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "10599:       @java.lang.Override",
          "10600:       public com.google.protobuf.Descriptors.Descriptor",
          "10601:           getDescriptorForType() {",
          "10603:       }",
          "10605:       @java.lang.Override",
          "10608:       }",
          "10610:       @java.lang.Override",
          "10613:         if (!result.isInitialized()) {",
          "10614:           throw newUninitializedMessageException(result);",
          "10615:         }",
          "",
          "[Removed Lines]",
          "10602:         return org.mlflow.api.proto.Service.internal_static_mlflow_Experiment_descriptor;",
          "10606:       public org.mlflow.api.proto.Service.Experiment getDefaultInstanceForType() {",
          "10607:         return org.mlflow.api.proto.Service.Experiment.getDefaultInstance();",
          "10611:       public org.mlflow.api.proto.Service.Experiment build() {",
          "10612:         org.mlflow.api.proto.Service.Experiment result = buildPartial();",
          "",
          "[Added Lines]",
          "18171:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_descriptor;",
          "18175:       public org.mlflow.api.proto.Service.CreateExperiment getDefaultInstanceForType() {",
          "18176:         return org.mlflow.api.proto.Service.CreateExperiment.getDefaultInstance();",
          "18180:       public org.mlflow.api.proto.Service.CreateExperiment build() {",
          "18181:         org.mlflow.api.proto.Service.CreateExperiment result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "10617:       }",
          "10619:       @java.lang.Override",
          "10622:         int from_bitField0_ = bitField0_;",
          "10623:         int to_bitField0_ = 0;",
          "10624:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "10625:           to_bitField0_ |= 0x00000001;",
          "10626:         }",
          "10628:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "10629:           to_bitField0_ |= 0x00000002;",
          "10630:         }",
          "10635:         result.artifactLocation_ = artifactLocation_;",
          "10648:         if (tagsBuilder_ == null) {",
          "10650:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "10652:           }",
          "10653:           result.tags_ = tags_;",
          "10654:         } else {",
          "",
          "[Removed Lines]",
          "10620:       public org.mlflow.api.proto.Service.Experiment buildPartial() {",
          "10621:         org.mlflow.api.proto.Service.Experiment result = new org.mlflow.api.proto.Service.Experiment(this);",
          "10627:         result.experimentId_ = experimentId_;",
          "10631:         result.name_ = name_;",
          "10632:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "10633:           to_bitField0_ |= 0x00000004;",
          "10634:         }",
          "10636:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "10637:           to_bitField0_ |= 0x00000008;",
          "10638:         }",
          "10639:         result.lifecycleStage_ = lifecycleStage_;",
          "10640:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "10641:           result.lastUpdateTime_ = lastUpdateTime_;",
          "10642:           to_bitField0_ |= 0x00000010;",
          "10643:         }",
          "10644:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "10645:           result.creationTime_ = creationTime_;",
          "10646:           to_bitField0_ |= 0x00000020;",
          "10647:         }",
          "10649:           if (((bitField0_ & 0x00000040) != 0)) {",
          "10651:             bitField0_ = (bitField0_ & ~0x00000040);",
          "",
          "[Added Lines]",
          "18189:       public org.mlflow.api.proto.Service.CreateExperiment buildPartial() {",
          "18190:         org.mlflow.api.proto.Service.CreateExperiment result = new org.mlflow.api.proto.Service.CreateExperiment(this);",
          "18196:         result.name_ = name_;",
          "18202:           if (((bitField0_ & 0x00000004) != 0)) {",
          "18204:             bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "10693:       }",
          "10694:       @java.lang.Override",
          "10695:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "10698:         } else {",
          "10699:           super.mergeFrom(other);",
          "10700:           return this;",
          "10701:         }",
          "10702:       }",
          "10711:         if (other.hasName()) {",
          "10713:           name_ = other.name_;",
          "10714:           onChanged();",
          "10715:         }",
          "10716:         if (other.hasArtifactLocation()) {",
          "10718:           artifactLocation_ = other.artifactLocation_;",
          "10719:           onChanged();",
          "10720:         }",
          "10732:         if (tagsBuilder_ == null) {",
          "10733:           if (!other.tags_.isEmpty()) {",
          "10734:             if (tags_.isEmpty()) {",
          "10735:               tags_ = other.tags_;",
          "10737:             } else {",
          "10738:               ensureTagsIsMutable();",
          "10739:               tags_.addAll(other.tags_);",
          "",
          "[Removed Lines]",
          "10696:         if (other instanceof org.mlflow.api.proto.Service.Experiment) {",
          "10697:           return mergeFrom((org.mlflow.api.proto.Service.Experiment)other);",
          "10704:       public Builder mergeFrom(org.mlflow.api.proto.Service.Experiment other) {",
          "10705:         if (other == org.mlflow.api.proto.Service.Experiment.getDefaultInstance()) return this;",
          "10706:         if (other.hasExperimentId()) {",
          "10707:           bitField0_ |= 0x00000001;",
          "10708:           experimentId_ = other.experimentId_;",
          "10709:           onChanged();",
          "10710:         }",
          "10712:           bitField0_ |= 0x00000002;",
          "10717:           bitField0_ |= 0x00000004;",
          "10721:         if (other.hasLifecycleStage()) {",
          "10722:           bitField0_ |= 0x00000008;",
          "10723:           lifecycleStage_ = other.lifecycleStage_;",
          "10724:           onChanged();",
          "10725:         }",
          "10726:         if (other.hasLastUpdateTime()) {",
          "10727:           setLastUpdateTime(other.getLastUpdateTime());",
          "10728:         }",
          "10729:         if (other.hasCreationTime()) {",
          "10730:           setCreationTime(other.getCreationTime());",
          "10731:         }",
          "10736:               bitField0_ = (bitField0_ & ~0x00000040);",
          "",
          "[Added Lines]",
          "18249:         if (other instanceof org.mlflow.api.proto.Service.CreateExperiment) {",
          "18250:           return mergeFrom((org.mlflow.api.proto.Service.CreateExperiment)other);",
          "18257:       public Builder mergeFrom(org.mlflow.api.proto.Service.CreateExperiment other) {",
          "18258:         if (other == org.mlflow.api.proto.Service.CreateExperiment.getDefaultInstance()) return this;",
          "18260:           bitField0_ |= 0x00000001;",
          "18265:           bitField0_ |= 0x00000002;",
          "18273:               bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "10746:               tagsBuilder_.dispose();",
          "10747:               tagsBuilder_ = null;",
          "10748:               tags_ = other.tags_;",
          "10750:               tagsBuilder_ =",
          "10751:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "10752:                    getTagsFieldBuilder() : null;",
          "10753:             } else {",
          "10754:               tagsBuilder_.addAllMessages(other.tags_);",
          "10755:             }",
          "10892:         onChanged();",
          "10893:         return this;",
          "10894:       }",
          "10896:       private java.lang.Object name_ = \"\";",
          "10905:       public boolean hasName() {",
          "10907:       }",
          "10916:       public java.lang.String getName() {",
          "",
          "[Removed Lines]",
          "10749:               bitField0_ = (bitField0_ & ~0x00000040);",
          "10756:           }",
          "10757:         }",
          "10758:         this.mergeUnknownFields(other.unknownFields);",
          "10759:         onChanged();",
          "10760:         return this;",
          "10761:       }",
          "10763:       @java.lang.Override",
          "10764:       public final boolean isInitialized() {",
          "10765:         return true;",
          "10766:       }",
          "10768:       @java.lang.Override",
          "10769:       public Builder mergeFrom(",
          "10770:           com.google.protobuf.CodedInputStream input,",
          "10771:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "10772:           throws java.io.IOException {",
          "10773:         org.mlflow.api.proto.Service.Experiment parsedMessage = null;",
          "10774:         try {",
          "10775:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "10776:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "10777:           parsedMessage = (org.mlflow.api.proto.Service.Experiment) e.getUnfinishedMessage();",
          "10778:           throw e.unwrapIOException();",
          "10779:         } finally {",
          "10780:           if (parsedMessage != null) {",
          "10781:             mergeFrom(parsedMessage);",
          "10782:           }",
          "10783:         }",
          "10784:         return this;",
          "10785:       }",
          "10786:       private int bitField0_;",
          "10788:       private java.lang.Object experimentId_ = \"\";",
          "10797:       public boolean hasExperimentId() {",
          "10798:         return ((bitField0_ & 0x00000001) != 0);",
          "10799:       }",
          "10808:       public java.lang.String getExperimentId() {",
          "10809:         java.lang.Object ref = experimentId_;",
          "10810:         if (!(ref instanceof java.lang.String)) {",
          "10811:           com.google.protobuf.ByteString bs =",
          "10812:               (com.google.protobuf.ByteString) ref;",
          "10813:           java.lang.String s = bs.toStringUtf8();",
          "10814:           if (bs.isValidUtf8()) {",
          "10815:             experimentId_ = s;",
          "10816:           }",
          "10817:           return s;",
          "10818:         } else {",
          "10819:           return (java.lang.String) ref;",
          "10820:         }",
          "10821:       }",
          "10830:       public com.google.protobuf.ByteString",
          "10831:           getExperimentIdBytes() {",
          "10832:         java.lang.Object ref = experimentId_;",
          "10833:         if (ref instanceof String) {",
          "10834:           com.google.protobuf.ByteString b =",
          "10835:               com.google.protobuf.ByteString.copyFromUtf8(",
          "10836:                   (java.lang.String) ref);",
          "10837:           experimentId_ = b;",
          "10838:           return b;",
          "10839:         } else {",
          "10840:           return (com.google.protobuf.ByteString) ref;",
          "10841:         }",
          "10842:       }",
          "10852:       public Builder setExperimentId(",
          "10853:           java.lang.String value) {",
          "10854:         if (value == null) {",
          "10855:     throw new NullPointerException();",
          "10856:   }",
          "10857:   bitField0_ |= 0x00000001;",
          "10858:         experimentId_ = value;",
          "10859:         onChanged();",
          "10860:         return this;",
          "10861:       }",
          "10870:       public Builder clearExperimentId() {",
          "10871:         bitField0_ = (bitField0_ & ~0x00000001);",
          "10872:         experimentId_ = getDefaultInstance().getExperimentId();",
          "10873:         onChanged();",
          "10874:         return this;",
          "10875:       }",
          "10885:       public Builder setExperimentIdBytes(",
          "10886:           com.google.protobuf.ByteString value) {",
          "10887:         if (value == null) {",
          "10888:     throw new NullPointerException();",
          "10889:   }",
          "10890:   bitField0_ |= 0x00000001;",
          "10891:         experimentId_ = value;",
          "10906:         return ((bitField0_ & 0x00000002) != 0);",
          "",
          "[Added Lines]",
          "18286:               bitField0_ = (bitField0_ & ~0x00000004);",
          "18293:           }",
          "18294:         }",
          "18295:         this.mergeUnknownFields(other.unknownFields);",
          "18300:       @java.lang.Override",
          "18301:       public final boolean isInitialized() {",
          "18302:         return true;",
          "18303:       }",
          "18305:       @java.lang.Override",
          "18306:       public Builder mergeFrom(",
          "18307:           com.google.protobuf.CodedInputStream input,",
          "18308:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18309:           throws java.io.IOException {",
          "18310:         org.mlflow.api.proto.Service.CreateExperiment parsedMessage = null;",
          "18311:         try {",
          "18312:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "18313:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "18314:           parsedMessage = (org.mlflow.api.proto.Service.CreateExperiment) e.getUnfinishedMessage();",
          "18315:           throw e.unwrapIOException();",
          "18316:         } finally {",
          "18317:           if (parsedMessage != null) {",
          "18318:             mergeFrom(parsedMessage);",
          "18319:           }",
          "18320:         }",
          "18321:         return this;",
          "18322:       }",
          "18323:       private int bitField0_;",
          "18335:         return ((bitField0_ & 0x00000001) != 0);",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "10962:         if (value == null) {",
          "10963:     throw new NullPointerException();",
          "10964:   }",
          "10966:         name_ = value;",
          "10967:         onChanged();",
          "10968:         return this;",
          "10969:       }",
          "10978:       public Builder clearName() {",
          "10980:         name_ = getDefaultInstance().getName();",
          "10981:         onChanged();",
          "10982:         return this;",
          "10983:       }",
          "",
          "[Removed Lines]",
          "10965:   bitField0_ |= 0x00000002;",
          "10979:         bitField0_ = (bitField0_ & ~0x00000002);",
          "",
          "[Added Lines]",
          "18394:   bitField0_ |= 0x00000001;",
          "18408:         bitField0_ = (bitField0_ & ~0x00000001);",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "10995:         if (value == null) {",
          "10996:     throw new NullPointerException();",
          "10997:   }",
          "10999:         name_ = value;",
          "11000:         onChanged();",
          "11001:         return this;",
          "",
          "[Removed Lines]",
          "10998:   bitField0_ |= 0x00000002;",
          "",
          "[Added Lines]",
          "18427:   bitField0_ |= 0x00000001;",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "11004:       private java.lang.Object artifactLocation_ = \"\";",
          "11013:       public boolean hasArtifactLocation() {",
          "11015:       }",
          "11024:       public java.lang.String getArtifactLocation() {",
          "",
          "[Removed Lines]",
          "11014:         return ((bitField0_ & 0x00000004) != 0);",
          "",
          "[Added Lines]",
          "18444:         return ((bitField0_ & 0x00000002) != 0);",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "11070:         if (value == null) {",
          "11071:     throw new NullPointerException();",
          "11072:   }",
          "11074:         artifactLocation_ = value;",
          "11075:         onChanged();",
          "11076:         return this;",
          "11077:       }",
          "11086:       public Builder clearArtifactLocation() {",
          "11088:         artifactLocation_ = getDefaultInstance().getArtifactLocation();",
          "11089:         onChanged();",
          "11090:         return this;",
          "11091:       }",
          "",
          "[Removed Lines]",
          "11073:   bitField0_ |= 0x00000004;",
          "11087:         bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "[Added Lines]",
          "18506:   bitField0_ |= 0x00000002;",
          "18521:         bitField0_ = (bitField0_ & ~0x00000002);",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "11103:         if (value == null) {",
          "11104:     throw new NullPointerException();",
          "11105:   }",
          "11107:         artifactLocation_ = value;",
          "11108:         onChanged();",
          "11109:         return this;",
          "11110:       }",
          "11336:       private java.util.List<org.mlflow.api.proto.Service.ExperimentTag> tags_ =",
          "11337:         java.util.Collections.emptyList();",
          "11338:       private void ensureTagsIsMutable() {",
          "11340:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.ExperimentTag>(tags_);",
          "11342:          }",
          "11343:       }",
          "",
          "[Removed Lines]",
          "11106:   bitField0_ |= 0x00000004;",
          "11112:       private java.lang.Object lifecycleStage_ = \"\";",
          "11122:       public boolean hasLifecycleStage() {",
          "11123:         return ((bitField0_ & 0x00000008) != 0);",
          "11124:       }",
          "11134:       public java.lang.String getLifecycleStage() {",
          "11135:         java.lang.Object ref = lifecycleStage_;",
          "11136:         if (!(ref instanceof java.lang.String)) {",
          "11137:           com.google.protobuf.ByteString bs =",
          "11138:               (com.google.protobuf.ByteString) ref;",
          "11139:           java.lang.String s = bs.toStringUtf8();",
          "11140:           if (bs.isValidUtf8()) {",
          "11141:             lifecycleStage_ = s;",
          "11142:           }",
          "11143:           return s;",
          "11144:         } else {",
          "11145:           return (java.lang.String) ref;",
          "11146:         }",
          "11147:       }",
          "11157:       public com.google.protobuf.ByteString",
          "11158:           getLifecycleStageBytes() {",
          "11159:         java.lang.Object ref = lifecycleStage_;",
          "11160:         if (ref instanceof String) {",
          "11161:           com.google.protobuf.ByteString b =",
          "11162:               com.google.protobuf.ByteString.copyFromUtf8(",
          "11163:                   (java.lang.String) ref);",
          "11164:           lifecycleStage_ = b;",
          "11165:           return b;",
          "11166:         } else {",
          "11167:           return (com.google.protobuf.ByteString) ref;",
          "11168:         }",
          "11169:       }",
          "11180:       public Builder setLifecycleStage(",
          "11181:           java.lang.String value) {",
          "11182:         if (value == null) {",
          "11183:     throw new NullPointerException();",
          "11184:   }",
          "11185:   bitField0_ |= 0x00000008;",
          "11186:         lifecycleStage_ = value;",
          "11187:         onChanged();",
          "11188:         return this;",
          "11189:       }",
          "11199:       public Builder clearLifecycleStage() {",
          "11200:         bitField0_ = (bitField0_ & ~0x00000008);",
          "11201:         lifecycleStage_ = getDefaultInstance().getLifecycleStage();",
          "11202:         onChanged();",
          "11203:         return this;",
          "11204:       }",
          "11215:       public Builder setLifecycleStageBytes(",
          "11216:           com.google.protobuf.ByteString value) {",
          "11217:         if (value == null) {",
          "11218:     throw new NullPointerException();",
          "11219:   }",
          "11220:   bitField0_ |= 0x00000008;",
          "11221:         lifecycleStage_ = value;",
          "11222:         onChanged();",
          "11223:         return this;",
          "11224:       }",
          "11226:       private long lastUpdateTime_ ;",
          "11235:       @java.lang.Override",
          "11236:       public boolean hasLastUpdateTime() {",
          "11237:         return ((bitField0_ & 0x00000010) != 0);",
          "11238:       }",
          "11247:       @java.lang.Override",
          "11248:       public long getLastUpdateTime() {",
          "11249:         return lastUpdateTime_;",
          "11250:       }",
          "11260:       public Builder setLastUpdateTime(long value) {",
          "11261:         bitField0_ |= 0x00000010;",
          "11262:         lastUpdateTime_ = value;",
          "11263:         onChanged();",
          "11264:         return this;",
          "11265:       }",
          "11274:       public Builder clearLastUpdateTime() {",
          "11275:         bitField0_ = (bitField0_ & ~0x00000010);",
          "11276:         lastUpdateTime_ = 0L;",
          "11277:         onChanged();",
          "11278:         return this;",
          "11279:       }",
          "11281:       private long creationTime_ ;",
          "11290:       @java.lang.Override",
          "11291:       public boolean hasCreationTime() {",
          "11292:         return ((bitField0_ & 0x00000020) != 0);",
          "11293:       }",
          "11302:       @java.lang.Override",
          "11303:       public long getCreationTime() {",
          "11304:         return creationTime_;",
          "11305:       }",
          "11315:       public Builder setCreationTime(long value) {",
          "11316:         bitField0_ |= 0x00000020;",
          "11317:         creationTime_ = value;",
          "11318:         onChanged();",
          "11319:         return this;",
          "11320:       }",
          "11329:       public Builder clearCreationTime() {",
          "11330:         bitField0_ = (bitField0_ & ~0x00000020);",
          "11331:         creationTime_ = 0L;",
          "11332:         onChanged();",
          "11333:         return this;",
          "11334:       }",
          "11339:         if (!((bitField0_ & 0x00000040) != 0)) {",
          "11341:           bitField0_ |= 0x00000040;",
          "",
          "[Added Lines]",
          "18541:   bitField0_ |= 0x00000002;",
          "18550:         if (!((bitField0_ & 0x00000004) != 0)) {",
          "18552:           bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "11524:       }",
          "11532:       public Builder clearTags() {",
          "11533:         if (tagsBuilder_ == null) {",
          "11534:           tags_ = java.util.Collections.emptyList();",
          "11536:           onChanged();",
          "11537:         } else {",
          "11538:           tagsBuilder_.clear();",
          "",
          "[Removed Lines]",
          "11535:           bitField0_ = (bitField0_ & ~0x00000040);",
          "",
          "[Added Lines]",
          "18779:           bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "11637:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "11638:               org.mlflow.api.proto.Service.ExperimentTag, org.mlflow.api.proto.Service.ExperimentTag.Builder, org.mlflow.api.proto.Service.ExperimentTagOrBuilder>(",
          "11639:                   tags_,",
          "11641:                   getParentForChildren(),",
          "11642:                   isClean());",
          "11643:           tags_ = null;",
          "",
          "[Removed Lines]",
          "11640:                   ((bitField0_ & 0x00000040) != 0),",
          "",
          "[Added Lines]",
          "18905:                   ((bitField0_ & 0x00000004) != 0),",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "11657:       }",
          "11661:     }",
          "11665:     static {",
          "11667:     }",
          "11670:       return DEFAULT_INSTANCE;",
          "11671:     }",
          "11675:       @java.lang.Override",
          "11677:           com.google.protobuf.CodedInputStream input,",
          "11678:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11679:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "11681:       }",
          "11682:     };",
          "11685:       return PARSER;",
          "11686:     }",
          "11688:     @java.lang.Override",
          "11690:       return PARSER;",
          "11691:     }",
          "11693:     @java.lang.Override",
          "11695:       return DEFAULT_INSTANCE;",
          "11696:     }",
          "11698:   }",
          "11702:       com.google.protobuf.MessageOrBuilder {",
          "11730:     com.google.protobuf.ByteString",
          "11762:     com.google.protobuf.ByteString",
          "11823:   }",
          "11828:       com.google.protobuf.GeneratedMessageV3 implements",
          "11831:   private static final long serialVersionUID = 0L;",
          "11834:       super(builder);",
          "11835:     }",
          "11840:     }",
          "11842:     @java.lang.Override",
          "11843:     @SuppressWarnings({\"unused\"})",
          "11844:     protected java.lang.Object newInstance(",
          "11845:         UnusedPrivateParameter unused) {",
          "11847:     }",
          "11849:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "11664:     private static final org.mlflow.api.proto.Service.Experiment DEFAULT_INSTANCE;",
          "11666:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.Experiment();",
          "11669:     public static org.mlflow.api.proto.Service.Experiment getDefaultInstance() {",
          "11673:     @java.lang.Deprecated public static final com.google.protobuf.Parser<Experiment>",
          "11674:         PARSER = new com.google.protobuf.AbstractParser<Experiment>() {",
          "11676:       public Experiment parsePartialFrom(",
          "11680:         return new Experiment(input, extensionRegistry);",
          "11684:     public static com.google.protobuf.Parser<Experiment> parser() {",
          "11689:     public com.google.protobuf.Parser<Experiment> getParserForType() {",
          "11694:     public org.mlflow.api.proto.Service.Experiment getDefaultInstanceForType() {",
          "11700:   public interface CreateExperimentOrBuilder extends",
          "11712:     boolean hasName();",
          "11721:     java.lang.String getName();",
          "11731:         getNameBytes();",
          "11742:     boolean hasArtifactLocation();",
          "11752:     java.lang.String getArtifactLocation();",
          "11763:         getArtifactLocationBytes();",
          "11775:     java.util.List<org.mlflow.api.proto.Service.ExperimentTag>",
          "11776:         getTagsList();",
          "11787:     org.mlflow.api.proto.Service.ExperimentTag getTags(int index);",
          "11798:     int getTagsCount();",
          "11809:     java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "11810:         getTagsOrBuilderList();",
          "11821:     org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "11822:         int index);",
          "11827:   public static final class CreateExperiment extends",
          "11830:       CreateExperimentOrBuilder {",
          "11833:     private CreateExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "11836:     private CreateExperiment() {",
          "11837:       name_ = \"\";",
          "11838:       artifactLocation_ = \"\";",
          "11839:       tags_ = java.util.Collections.emptyList();",
          "11846:       return new CreateExperiment();",
          "",
          "[Added Lines]",
          "18929:     private static final org.mlflow.api.proto.Service.CreateExperiment DEFAULT_INSTANCE;",
          "18931:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateExperiment();",
          "18934:     public static org.mlflow.api.proto.Service.CreateExperiment getDefaultInstance() {",
          "18938:     @java.lang.Deprecated public static final com.google.protobuf.Parser<CreateExperiment>",
          "18939:         PARSER = new com.google.protobuf.AbstractParser<CreateExperiment>() {",
          "18941:       public CreateExperiment parsePartialFrom(",
          "18945:         return new CreateExperiment(input, extensionRegistry);",
          "18949:     public static com.google.protobuf.Parser<CreateExperiment> parser() {",
          "18954:     public com.google.protobuf.Parser<CreateExperiment> getParserForType() {",
          "18959:     public org.mlflow.api.proto.Service.CreateExperiment getDefaultInstanceForType() {",
          "18965:   public interface SearchExperimentsOrBuilder extends",
          "18981:     boolean hasMaxResults();",
          "18994:     long getMaxResults();",
          "19004:     boolean hasPageToken();",
          "19013:     java.lang.String getPageToken();",
          "19023:         getPageTokenBytes();",
          "19040:     boolean hasFilter();",
          "19056:     java.lang.String getFilter();",
          "19073:         getFilterBytes();",
          "19085:     java.util.List<java.lang.String>",
          "19086:         getOrderByList();",
          "19097:     int getOrderByCount();",
          "19109:     java.lang.String getOrderBy(int index);",
          "19121:     com.google.protobuf.ByteString",
          "19122:         getOrderByBytes(int index);",
          "19133:     boolean hasViewType();",
          "19143:     org.mlflow.api.proto.Service.ViewType getViewType();",
          "19148:   public static final class SearchExperiments extends",
          "19151:       SearchExperimentsOrBuilder {",
          "19154:     private SearchExperiments(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "19157:     private SearchExperiments() {",
          "19158:       pageToken_ = \"\";",
          "19159:       filter_ = \"\";",
          "19160:       orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "19161:       viewType_ = 1;",
          "19168:       return new SearchExperiments();",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "11851:     getUnknownFields() {",
          "11852:       return this.unknownFields;",
          "11853:     }",
          "11855:         com.google.protobuf.CodedInputStream input,",
          "11856:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "11857:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "11854:     private CreateExperiment(",
          "",
          "[Added Lines]",
          "19176:     private SearchExperiments(",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "11870:             case 0:",
          "11871:               done = true;",
          "11872:               break;",
          "11875:               bitField0_ |= 0x00000001;",
          "11877:               break;",
          "11878:             }",
          "11879:             case 18: {",
          "11880:               com.google.protobuf.ByteString bs = input.readBytes();",
          "11881:               bitField0_ |= 0x00000002;",
          "11883:               break;",
          "11884:             }",
          "11885:             case 26: {",
          "11889:               }",
          "11892:               break;",
          "11893:             }",
          "11894:             default: {",
          "",
          "[Removed Lines]",
          "11873:             case 10: {",
          "11874:               com.google.protobuf.ByteString bs = input.readBytes();",
          "11876:               name_ = bs;",
          "11882:               artifactLocation_ = bs;",
          "11886:               if (!((mutable_bitField0_ & 0x00000004) != 0)) {",
          "11887:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.ExperimentTag>();",
          "11888:                 mutable_bitField0_ |= 0x00000004;",
          "11890:               tags_.add(",
          "11891:                   input.readMessage(org.mlflow.api.proto.Service.ExperimentTag.PARSER, extensionRegistry));",
          "",
          "[Added Lines]",
          "19195:             case 8: {",
          "19197:               maxResults_ = input.readInt64();",
          "19203:               pageToken_ = bs;",
          "19207:               com.google.protobuf.ByteString bs = input.readBytes();",
          "19208:               bitField0_ |= 0x00000004;",
          "19209:               filter_ = bs;",
          "19210:               break;",
          "19211:             }",
          "19212:             case 34: {",
          "19213:               com.google.protobuf.ByteString bs = input.readBytes();",
          "19214:               if (!((mutable_bitField0_ & 0x00000008) != 0)) {",
          "19215:                 orderBy_ = new com.google.protobuf.LazyStringArrayList();",
          "19216:                 mutable_bitField0_ |= 0x00000008;",
          "19217:               }",
          "19218:               orderBy_.add(bs);",
          "19219:               break;",
          "19220:             }",
          "19221:             case 40: {",
          "19222:               int rawValue = input.readEnum();",
          "19223:                 @SuppressWarnings(\"deprecation\")",
          "19224:               org.mlflow.api.proto.Service.ViewType value = org.mlflow.api.proto.Service.ViewType.valueOf(rawValue);",
          "19225:               if (value == null) {",
          "19226:                 unknownFields.mergeVarintField(5, rawValue);",
          "19227:               } else {",
          "19228:                 bitField0_ |= 0x00000008;",
          "19229:                 viewType_ = rawValue;",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "11906:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "11907:             e).setUnfinishedMessage(this);",
          "11908:       } finally {",
          "11911:         }",
          "11912:         this.unknownFields = unknownFields.build();",
          "11913:         makeExtensionsImmutable();",
          "",
          "[Removed Lines]",
          "11909:         if (((mutable_bitField0_ & 0x00000004) != 0)) {",
          "11910:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "",
          "[Added Lines]",
          "19248:         if (((mutable_bitField0_ & 0x00000008) != 0)) {",
          "19249:           orderBy_ = orderBy_.getUnmodifiableView();",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "11915:     }",
          "11916:     public static final com.google.protobuf.Descriptors.Descriptor",
          "11917:         getDescriptor() {",
          "11919:     }",
          "11921:     @java.lang.Override",
          "11922:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "11923:         internalGetFieldAccessorTable() {",
          "11925:           .ensureFieldAccessorsInitialized(",
          "11927:     }",
          "11929:     public interface ResponseOrBuilder extends",
          "11931:         com.google.protobuf.MessageOrBuilder {",
          "11959:       com.google.protobuf.ByteString",
          "11961:     }",
          "11965:     public static final class Response extends",
          "11966:         com.google.protobuf.GeneratedMessageV3 implements",
          "11968:         ResponseOrBuilder {",
          "11969:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "11918:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_descriptor;",
          "11924:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_fieldAccessorTable",
          "11926:               org.mlflow.api.proto.Service.CreateExperiment.class, org.mlflow.api.proto.Service.CreateExperiment.Builder.class);",
          "11941:       boolean hasExperimentId();",
          "11950:       java.lang.String getExperimentId();",
          "11960:           getExperimentIdBytes();",
          "",
          "[Added Lines]",
          "19257:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_descriptor;",
          "19263:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_fieldAccessorTable",
          "19265:               org.mlflow.api.proto.Service.SearchExperiments.class, org.mlflow.api.proto.Service.SearchExperiments.Builder.class);",
          "19279:       java.util.List<org.mlflow.api.proto.Service.Experiment>",
          "19280:           getExperimentsList();",
          "19288:       org.mlflow.api.proto.Service.Experiment getExperiments(int index);",
          "19296:       int getExperimentsCount();",
          "19304:       java.util.List<? extends org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "19305:           getExperimentsOrBuilderList();",
          "19313:       org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentsOrBuilder(",
          "19314:           int index);",
          "19325:       boolean hasNextPageToken();",
          "19335:       java.lang.String getNextPageToken();",
          "19346:           getNextPageTokenBytes();",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "11972:         super(builder);",
          "11973:       }",
          "11974:       private Response() {",
          "11976:       }",
          "11978:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "11975:         experimentId_ = \"\";",
          "",
          "[Added Lines]",
          "19361:         experiments_ = java.util.Collections.emptyList();",
          "19362:         nextPageToken_ = \"\";",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "12007:                 done = true;",
          "12008:                 break;",
          "12009:               case 10: {",
          "12010:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "12011:                 bitField0_ |= 0x00000001;",
          "12013:                 break;",
          "12014:               }",
          "12015:               default: {",
          "",
          "[Removed Lines]",
          "12012:                 experimentId_ = bs;",
          "",
          "[Added Lines]",
          "19397:                 if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "19398:                   experiments_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Experiment>();",
          "19399:                   mutable_bitField0_ |= 0x00000001;",
          "19400:                 }",
          "19401:                 experiments_.add(",
          "19402:                     input.readMessage(org.mlflow.api.proto.Service.Experiment.PARSER, extensionRegistry));",
          "19403:                 break;",
          "19404:               }",
          "19405:               case 18: {",
          "19408:                 nextPageToken_ = bs;",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "12027:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "12028:               e).setUnfinishedMessage(this);",
          "12029:         } finally {",
          "12030:           this.unknownFields = unknownFields.build();",
          "12031:           makeExtensionsImmutable();",
          "12032:         }",
          "12033:       }",
          "12034:       public static final com.google.protobuf.Descriptors.Descriptor",
          "12035:           getDescriptor() {",
          "12037:       }",
          "12039:       @java.lang.Override",
          "12040:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "12041:           internalGetFieldAccessorTable() {",
          "12043:             .ensureFieldAccessorsInitialized(",
          "12045:       }",
          "12047:       private int bitField0_;",
          "12058:       @java.lang.Override",
          "12060:         return ((bitField0_ & 0x00000001) != 0);",
          "12061:       }",
          "12070:       @java.lang.Override",
          "12073:         if (ref instanceof java.lang.String) {",
          "12074:           return (java.lang.String) ref;",
          "12075:         } else {",
          "",
          "[Removed Lines]",
          "12036:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_descriptor;",
          "12042:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_fieldAccessorTable",
          "12044:                 org.mlflow.api.proto.Service.CreateExperiment.Response.class, org.mlflow.api.proto.Service.CreateExperiment.Response.Builder.class);",
          "12048:       public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "12049:       private volatile java.lang.Object experimentId_;",
          "12059:       public boolean hasExperimentId() {",
          "12071:       public java.lang.String getExperimentId() {",
          "12072:         java.lang.Object ref = experimentId_;",
          "",
          "[Added Lines]",
          "19426:           if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "19427:             experiments_ = java.util.Collections.unmodifiableList(experiments_);",
          "19428:           }",
          "19435:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_descriptor;",
          "19441:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_fieldAccessorTable",
          "19443:                 org.mlflow.api.proto.Service.SearchExperiments.Response.class, org.mlflow.api.proto.Service.SearchExperiments.Response.Builder.class);",
          "19447:       public static final int EXPERIMENTS_FIELD_NUMBER = 1;",
          "19448:       private java.util.List<org.mlflow.api.proto.Service.Experiment> experiments_;",
          "19457:       public java.util.List<org.mlflow.api.proto.Service.Experiment> getExperimentsList() {",
          "19458:         return experiments_;",
          "19459:       }",
          "19467:       @java.lang.Override",
          "19468:       public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "19469:           getExperimentsOrBuilderList() {",
          "19470:         return experiments_;",
          "19471:       }",
          "19479:       @java.lang.Override",
          "19480:       public int getExperimentsCount() {",
          "19481:         return experiments_.size();",
          "19482:       }",
          "19490:       @java.lang.Override",
          "19491:       public org.mlflow.api.proto.Service.Experiment getExperiments(int index) {",
          "19492:         return experiments_.get(index);",
          "19493:       }",
          "19501:       @java.lang.Override",
          "19502:       public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentsOrBuilder(",
          "19503:           int index) {",
          "19504:         return experiments_.get(index);",
          "19505:       }",
          "19507:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;",
          "19508:       private volatile java.lang.Object nextPageToken_;",
          "19518:       @java.lang.Override",
          "19519:       public boolean hasNextPageToken() {",
          "19532:       public java.lang.String getNextPageToken() {",
          "19533:         java.lang.Object ref = nextPageToken_;",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "12077:               (com.google.protobuf.ByteString) ref;",
          "12078:           java.lang.String s = bs.toStringUtf8();",
          "12079:           if (bs.isValidUtf8()) {",
          "12081:           }",
          "12082:           return s;",
          "12083:         }",
          "12084:       }",
          "12093:       @java.lang.Override",
          "12094:       public com.google.protobuf.ByteString",
          "12097:         if (ref instanceof java.lang.String) {",
          "12098:           com.google.protobuf.ByteString b =",
          "12099:               com.google.protobuf.ByteString.copyFromUtf8(",
          "12100:                   (java.lang.String) ref);",
          "12102:           return b;",
          "12103:         } else {",
          "12104:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "12080:             experimentId_ = s;",
          "12095:           getExperimentIdBytes() {",
          "12096:         java.lang.Object ref = experimentId_;",
          "12101:           experimentId_ = b;",
          "",
          "[Added Lines]",
          "19541:             nextPageToken_ = s;",
          "19557:           getNextPageTokenBytes() {",
          "19558:         java.lang.Object ref = nextPageToken_;",
          "19563:           nextPageToken_ = b;",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "12119:       @java.lang.Override",
          "12120:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "12121:                           throws java.io.IOException {",
          "12122:         if (((bitField0_ & 0x00000001) != 0)) {",
          "12124:         }",
          "12125:         unknownFields.writeTo(output);",
          "12126:       }",
          "",
          "[Removed Lines]",
          "12123:           com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "",
          "[Added Lines]",
          "19584:         for (int i = 0; i < experiments_.size(); i++) {",
          "19585:           output.writeMessage(1, experiments_.get(i));",
          "19586:         }",
          "19588:           com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "12131:         if (size != -1) return size;",
          "12133:         size = 0;",
          "12134:         if (((bitField0_ & 0x00000001) != 0)) {",
          "12136:         }",
          "12137:         size += unknownFields.getSerializedSize();",
          "12138:         memoizedSize = size;",
          "",
          "[Removed Lines]",
          "12135:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "",
          "[Added Lines]",
          "19599:         for (int i = 0; i < experiments_.size(); i++) {",
          "19600:           size += com.google.protobuf.CodedOutputStream",
          "19601:             .computeMessageSize(1, experiments_.get(i));",
          "19602:         }",
          "19604:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "12144:         if (obj == this) {",
          "12145:          return true;",
          "12146:         }",
          "12148:           return super.equals(obj);",
          "12149:         }",
          "12156:         }",
          "12157:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "12158:         return true;",
          "",
          "[Removed Lines]",
          "12147:         if (!(obj instanceof org.mlflow.api.proto.Service.CreateExperiment.Response)) {",
          "12150:         org.mlflow.api.proto.Service.CreateExperiment.Response other = (org.mlflow.api.proto.Service.CreateExperiment.Response) obj;",
          "12152:         if (hasExperimentId() != other.hasExperimentId()) return false;",
          "12153:         if (hasExperimentId()) {",
          "12154:           if (!getExperimentId()",
          "12155:               .equals(other.getExperimentId())) return false;",
          "",
          "[Added Lines]",
          "19616:         if (!(obj instanceof org.mlflow.api.proto.Service.SearchExperiments.Response)) {",
          "19619:         org.mlflow.api.proto.Service.SearchExperiments.Response other = (org.mlflow.api.proto.Service.SearchExperiments.Response) obj;",
          "19621:         if (!getExperimentsList()",
          "19622:             .equals(other.getExperimentsList())) return false;",
          "19623:         if (hasNextPageToken() != other.hasNextPageToken()) return false;",
          "19624:         if (hasNextPageToken()) {",
          "19625:           if (!getNextPageToken()",
          "19626:               .equals(other.getNextPageToken())) return false;",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "12165:         }",
          "12166:         int hash = 41;",
          "12167:         hash = (19 * hash) + getDescriptor().hashCode();",
          "12171:         }",
          "12172:         hash = (29 * hash) + unknownFields.hashCode();",
          "12173:         memoizedHashCode = hash;",
          "12174:         return hash;",
          "12175:       }",
          "12178:           java.nio.ByteBuffer data)",
          "12179:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "12180:         return PARSER.parseFrom(data);",
          "12181:       }",
          "12183:           java.nio.ByteBuffer data,",
          "12184:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12185:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "12186:         return PARSER.parseFrom(data, extensionRegistry);",
          "12187:       }",
          "12189:           com.google.protobuf.ByteString data)",
          "12190:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "12191:         return PARSER.parseFrom(data);",
          "12192:       }",
          "12194:           com.google.protobuf.ByteString data,",
          "12195:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12196:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "12197:         return PARSER.parseFrom(data, extensionRegistry);",
          "12198:       }",
          "12200:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "12201:         return PARSER.parseFrom(data);",
          "12202:       }",
          "12204:           byte[] data,",
          "12205:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12206:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "12207:         return PARSER.parseFrom(data, extensionRegistry);",
          "12208:       }",
          "12210:           throws java.io.IOException {",
          "12211:         return com.google.protobuf.GeneratedMessageV3",
          "12212:             .parseWithIOException(PARSER, input);",
          "12213:       }",
          "12215:           java.io.InputStream input,",
          "12216:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12217:           throws java.io.IOException {",
          "12218:         return com.google.protobuf.GeneratedMessageV3",
          "12219:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "12220:       }",
          "12222:           throws java.io.IOException {",
          "12223:         return com.google.protobuf.GeneratedMessageV3",
          "12224:             .parseDelimitedWithIOException(PARSER, input);",
          "12225:       }",
          "12227:           java.io.InputStream input,",
          "12228:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12229:           throws java.io.IOException {",
          "12230:         return com.google.protobuf.GeneratedMessageV3",
          "12231:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "12232:       }",
          "12234:           com.google.protobuf.CodedInputStream input)",
          "12235:           throws java.io.IOException {",
          "12236:         return com.google.protobuf.GeneratedMessageV3",
          "12237:             .parseWithIOException(PARSER, input);",
          "12238:       }",
          "12240:           com.google.protobuf.CodedInputStream input,",
          "12241:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12242:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "12168:         if (hasExperimentId()) {",
          "12169:           hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "12170:           hash = (53 * hash) + getExperimentId().hashCode();",
          "12177:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "12182:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "12188:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "12193:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "12199:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(byte[] data)",
          "12203:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "12209:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(java.io.InputStream input)",
          "12214:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "12221:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "12226:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseDelimitedFrom(",
          "12233:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "12239:       public static org.mlflow.api.proto.Service.CreateExperiment.Response parseFrom(",
          "",
          "[Added Lines]",
          "19639:         if (getExperimentsCount() > 0) {",
          "19640:           hash = (37 * hash) + EXPERIMENTS_FIELD_NUMBER;",
          "19641:           hash = (53 * hash) + getExperimentsList().hashCode();",
          "19642:         }",
          "19643:         if (hasNextPageToken()) {",
          "19644:           hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;",
          "19645:           hash = (53 * hash) + getNextPageToken().hashCode();",
          "19652:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "19657:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "19663:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "19668:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "19674:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(byte[] data)",
          "19678:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "19684:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(java.io.InputStream input)",
          "19689:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "19696:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseDelimitedFrom(java.io.InputStream input)",
          "19701:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseDelimitedFrom(",
          "19708:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "19714:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "12249:       public static Builder newBuilder() {",
          "12250:         return DEFAULT_INSTANCE.toBuilder();",
          "12251:       }",
          "12253:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "12254:       }",
          "12255:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "12252:       public static Builder newBuilder(org.mlflow.api.proto.Service.CreateExperiment.Response prototype) {",
          "",
          "[Added Lines]",
          "19727:       public static Builder newBuilder(org.mlflow.api.proto.Service.SearchExperiments.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "12265:         return builder;",
          "12266:       }",
          "12270:       public static final class Builder extends",
          "12271:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "12274:         public static final com.google.protobuf.Descriptors.Descriptor",
          "12275:             getDescriptor() {",
          "12277:         }",
          "12279:         @java.lang.Override",
          "12280:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "12281:             internalGetFieldAccessorTable() {",
          "12283:               .ensureFieldAccessorsInitialized(",
          "12285:         }",
          "12288:         private Builder() {",
          "12289:           maybeForceBuilderInitialization();",
          "12290:         }",
          "",
          "[Removed Lines]",
          "12273:           org.mlflow.api.proto.Service.CreateExperiment.ResponseOrBuilder {",
          "12276:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_descriptor;",
          "12282:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_fieldAccessorTable",
          "12284:                   org.mlflow.api.proto.Service.CreateExperiment.Response.class, org.mlflow.api.proto.Service.CreateExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "19748:           org.mlflow.api.proto.Service.SearchExperiments.ResponseOrBuilder {",
          "19751:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_descriptor;",
          "19757:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_fieldAccessorTable",
          "19759:                   org.mlflow.api.proto.Service.SearchExperiments.Response.class, org.mlflow.api.proto.Service.SearchExperiments.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "12297:         private void maybeForceBuilderInitialization() {",
          "12298:           if (com.google.protobuf.GeneratedMessageV3",
          "12299:                   .alwaysUseFieldBuilders) {",
          "12300:           }",
          "12301:         }",
          "12302:         @java.lang.Override",
          "12303:         public Builder clear() {",
          "12304:           super.clear();",
          "12307:           return this;",
          "12308:         }",
          "12310:         @java.lang.Override",
          "12311:         public com.google.protobuf.Descriptors.Descriptor",
          "12312:             getDescriptorForType() {",
          "12314:         }",
          "12316:         @java.lang.Override",
          "12319:         }",
          "12321:         @java.lang.Override",
          "12324:           if (!result.isInitialized()) {",
          "12325:             throw newUninitializedMessageException(result);",
          "12326:           }",
          "",
          "[Removed Lines]",
          "12305:           experimentId_ = \"\";",
          "12306:           bitField0_ = (bitField0_ & ~0x00000001);",
          "12313:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_Response_descriptor;",
          "12317:         public org.mlflow.api.proto.Service.CreateExperiment.Response getDefaultInstanceForType() {",
          "12318:           return org.mlflow.api.proto.Service.CreateExperiment.Response.getDefaultInstance();",
          "12322:         public org.mlflow.api.proto.Service.CreateExperiment.Response build() {",
          "12323:           org.mlflow.api.proto.Service.CreateExperiment.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "19775:             getExperimentsFieldBuilder();",
          "19781:           if (experimentsBuilder_ == null) {",
          "19782:             experiments_ = java.util.Collections.emptyList();",
          "19783:             bitField0_ = (bitField0_ & ~0x00000001);",
          "19784:           } else {",
          "19785:             experimentsBuilder_.clear();",
          "19786:           }",
          "19787:           nextPageToken_ = \"\";",
          "19788:           bitField0_ = (bitField0_ & ~0x00000002);",
          "19795:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_descriptor;",
          "19799:         public org.mlflow.api.proto.Service.SearchExperiments.Response getDefaultInstanceForType() {",
          "19800:           return org.mlflow.api.proto.Service.SearchExperiments.Response.getDefaultInstance();",
          "19804:         public org.mlflow.api.proto.Service.SearchExperiments.Response build() {",
          "19805:           org.mlflow.api.proto.Service.SearchExperiments.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "12328:         }",
          "12330:         @java.lang.Override",
          "12333:           int from_bitField0_ = bitField0_;",
          "12334:           int to_bitField0_ = 0;",
          "12336:             to_bitField0_ |= 0x00000001;",
          "12337:           }",
          "12339:           result.bitField0_ = to_bitField0_;",
          "12340:           onBuilt();",
          "12341:           return result;",
          "",
          "[Removed Lines]",
          "12331:         public org.mlflow.api.proto.Service.CreateExperiment.Response buildPartial() {",
          "12332:           org.mlflow.api.proto.Service.CreateExperiment.Response result = new org.mlflow.api.proto.Service.CreateExperiment.Response(this);",
          "12335:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "12338:           result.experimentId_ = experimentId_;",
          "",
          "[Added Lines]",
          "19813:         public org.mlflow.api.proto.Service.SearchExperiments.Response buildPartial() {",
          "19814:           org.mlflow.api.proto.Service.SearchExperiments.Response result = new org.mlflow.api.proto.Service.SearchExperiments.Response(this);",
          "19817:           if (experimentsBuilder_ == null) {",
          "19818:             if (((bitField0_ & 0x00000001) != 0)) {",
          "19819:               experiments_ = java.util.Collections.unmodifiableList(experiments_);",
          "19820:               bitField0_ = (bitField0_ & ~0x00000001);",
          "19821:             }",
          "19822:             result.experiments_ = experiments_;",
          "19823:           } else {",
          "19824:             result.experiments_ = experimentsBuilder_.build();",
          "19825:           }",
          "19826:           if (((from_bitField0_ & 0x00000002) != 0)) {",
          "19829:           result.nextPageToken_ = nextPageToken_;",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "12375:         }",
          "12376:         @java.lang.Override",
          "12377:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "12380:           } else {",
          "12381:             super.mergeFrom(other);",
          "12382:             return this;",
          "12383:           }",
          "12384:         }",
          "12391:             onChanged();",
          "12392:           }",
          "12393:           this.mergeUnknownFields(other.unknownFields);",
          "",
          "[Removed Lines]",
          "12378:           if (other instanceof org.mlflow.api.proto.Service.CreateExperiment.Response) {",
          "12379:             return mergeFrom((org.mlflow.api.proto.Service.CreateExperiment.Response)other);",
          "12386:         public Builder mergeFrom(org.mlflow.api.proto.Service.CreateExperiment.Response other) {",
          "12387:           if (other == org.mlflow.api.proto.Service.CreateExperiment.Response.getDefaultInstance()) return this;",
          "12388:           if (other.hasExperimentId()) {",
          "12389:             bitField0_ |= 0x00000001;",
          "12390:             experimentId_ = other.experimentId_;",
          "",
          "[Added Lines]",
          "19869:           if (other instanceof org.mlflow.api.proto.Service.SearchExperiments.Response) {",
          "19870:             return mergeFrom((org.mlflow.api.proto.Service.SearchExperiments.Response)other);",
          "19877:         public Builder mergeFrom(org.mlflow.api.proto.Service.SearchExperiments.Response other) {",
          "19878:           if (other == org.mlflow.api.proto.Service.SearchExperiments.Response.getDefaultInstance()) return this;",
          "19879:           if (experimentsBuilder_ == null) {",
          "19880:             if (!other.experiments_.isEmpty()) {",
          "19881:               if (experiments_.isEmpty()) {",
          "19882:                 experiments_ = other.experiments_;",
          "19883:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "19884:               } else {",
          "19885:                 ensureExperimentsIsMutable();",
          "19886:                 experiments_.addAll(other.experiments_);",
          "19887:               }",
          "19888:               onChanged();",
          "19889:             }",
          "19890:           } else {",
          "19891:             if (!other.experiments_.isEmpty()) {",
          "19892:               if (experimentsBuilder_.isEmpty()) {",
          "19893:                 experimentsBuilder_.dispose();",
          "19894:                 experimentsBuilder_ = null;",
          "19895:                 experiments_ = other.experiments_;",
          "19896:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "19897:                 experimentsBuilder_ =",
          "19898:                   com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "19899:                      getExperimentsFieldBuilder() : null;",
          "19900:               } else {",
          "19901:                 experimentsBuilder_.addAllMessages(other.experiments_);",
          "19902:               }",
          "19903:             }",
          "19904:           }",
          "19905:           if (other.hasNextPageToken()) {",
          "19906:             bitField0_ |= 0x00000002;",
          "19907:             nextPageToken_ = other.nextPageToken_;",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "12405:             com.google.protobuf.CodedInputStream input,",
          "12406:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12407:             throws java.io.IOException {",
          "12409:           try {",
          "12410:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "12411:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "12413:             throw e.unwrapIOException();",
          "12414:           } finally {",
          "12415:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "12408:           org.mlflow.api.proto.Service.CreateExperiment.Response parsedMessage = null;",
          "12412:             parsedMessage = (org.mlflow.api.proto.Service.CreateExperiment.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "19925:           org.mlflow.api.proto.Service.SearchExperiments.Response parsedMessage = null;",
          "19929:             parsedMessage = (org.mlflow.api.proto.Service.SearchExperiments.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "12420:         }",
          "12421:         private int bitField0_;",
          "12434:         }",
          "12445:           if (!(ref instanceof java.lang.String)) {",
          "12446:             com.google.protobuf.ByteString bs =",
          "12447:                 (com.google.protobuf.ByteString) ref;",
          "12448:             java.lang.String s = bs.toStringUtf8();",
          "12449:             if (bs.isValidUtf8()) {",
          "12451:             }",
          "12452:             return s;",
          "12453:           } else {",
          "",
          "[Removed Lines]",
          "12423:         private java.lang.Object experimentId_ = \"\";",
          "12432:         public boolean hasExperimentId() {",
          "12433:           return ((bitField0_ & 0x00000001) != 0);",
          "12443:         public java.lang.String getExperimentId() {",
          "12444:           java.lang.Object ref = experimentId_;",
          "12450:               experimentId_ = s;",
          "",
          "[Added Lines]",
          "19940:         private java.util.List<org.mlflow.api.proto.Service.Experiment> experiments_ =",
          "19941:           java.util.Collections.emptyList();",
          "19942:         private void ensureExperimentsIsMutable() {",
          "19943:           if (!((bitField0_ & 0x00000001) != 0)) {",
          "19944:             experiments_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Experiment>(experiments_);",
          "19945:             bitField0_ |= 0x00000001;",
          "19946:            }",
          "19947:         }",
          "19949:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "19950:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder> experimentsBuilder_;",
          "19959:         public java.util.List<org.mlflow.api.proto.Service.Experiment> getExperimentsList() {",
          "19960:           if (experimentsBuilder_ == null) {",
          "19961:             return java.util.Collections.unmodifiableList(experiments_);",
          "19962:           } else {",
          "19963:             return experimentsBuilder_.getMessageList();",
          "19964:           }",
          "19973:         public int getExperimentsCount() {",
          "19974:           if (experimentsBuilder_ == null) {",
          "19975:             return experiments_.size();",
          "19976:           } else {",
          "19977:             return experimentsBuilder_.getCount();",
          "19978:           }",
          "19979:         }",
          "19987:         public org.mlflow.api.proto.Service.Experiment getExperiments(int index) {",
          "19988:           if (experimentsBuilder_ == null) {",
          "19989:             return experiments_.get(index);",
          "19990:           } else {",
          "19991:             return experimentsBuilder_.getMessage(index);",
          "19992:           }",
          "19993:         }",
          "20001:         public Builder setExperiments(",
          "20002:             int index, org.mlflow.api.proto.Service.Experiment value) {",
          "20003:           if (experimentsBuilder_ == null) {",
          "20004:             if (value == null) {",
          "20005:               throw new NullPointerException();",
          "20006:             }",
          "20007:             ensureExperimentsIsMutable();",
          "20008:             experiments_.set(index, value);",
          "20009:             onChanged();",
          "20010:           } else {",
          "20011:             experimentsBuilder_.setMessage(index, value);",
          "20012:           }",
          "20013:           return this;",
          "20014:         }",
          "20022:         public Builder setExperiments(",
          "20023:             int index, org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "20024:           if (experimentsBuilder_ == null) {",
          "20025:             ensureExperimentsIsMutable();",
          "20026:             experiments_.set(index, builderForValue.build());",
          "20027:             onChanged();",
          "20028:           } else {",
          "20029:             experimentsBuilder_.setMessage(index, builderForValue.build());",
          "20030:           }",
          "20031:           return this;",
          "20032:         }",
          "20040:         public Builder addExperiments(org.mlflow.api.proto.Service.Experiment value) {",
          "20041:           if (experimentsBuilder_ == null) {",
          "20042:             if (value == null) {",
          "20043:               throw new NullPointerException();",
          "20044:             }",
          "20045:             ensureExperimentsIsMutable();",
          "20046:             experiments_.add(value);",
          "20047:             onChanged();",
          "20048:           } else {",
          "20049:             experimentsBuilder_.addMessage(value);",
          "20050:           }",
          "20051:           return this;",
          "20052:         }",
          "20060:         public Builder addExperiments(",
          "20061:             int index, org.mlflow.api.proto.Service.Experiment value) {",
          "20062:           if (experimentsBuilder_ == null) {",
          "20063:             if (value == null) {",
          "20064:               throw new NullPointerException();",
          "20065:             }",
          "20066:             ensureExperimentsIsMutable();",
          "20067:             experiments_.add(index, value);",
          "20068:             onChanged();",
          "20069:           } else {",
          "20070:             experimentsBuilder_.addMessage(index, value);",
          "20071:           }",
          "20072:           return this;",
          "20073:         }",
          "20081:         public Builder addExperiments(",
          "20082:             org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "20083:           if (experimentsBuilder_ == null) {",
          "20084:             ensureExperimentsIsMutable();",
          "20085:             experiments_.add(builderForValue.build());",
          "20086:             onChanged();",
          "20087:           } else {",
          "20088:             experimentsBuilder_.addMessage(builderForValue.build());",
          "20089:           }",
          "20090:           return this;",
          "20091:         }",
          "20099:         public Builder addExperiments(",
          "20100:             int index, org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "20101:           if (experimentsBuilder_ == null) {",
          "20102:             ensureExperimentsIsMutable();",
          "20103:             experiments_.add(index, builderForValue.build());",
          "20104:             onChanged();",
          "20105:           } else {",
          "20106:             experimentsBuilder_.addMessage(index, builderForValue.build());",
          "20107:           }",
          "20108:           return this;",
          "20109:         }",
          "20117:         public Builder addAllExperiments(",
          "20118:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.Experiment> values) {",
          "20119:           if (experimentsBuilder_ == null) {",
          "20120:             ensureExperimentsIsMutable();",
          "20121:             com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "20122:                 values, experiments_);",
          "20123:             onChanged();",
          "20124:           } else {",
          "20125:             experimentsBuilder_.addAllMessages(values);",
          "20126:           }",
          "20127:           return this;",
          "20128:         }",
          "20136:         public Builder clearExperiments() {",
          "20137:           if (experimentsBuilder_ == null) {",
          "20138:             experiments_ = java.util.Collections.emptyList();",
          "20139:             bitField0_ = (bitField0_ & ~0x00000001);",
          "20140:             onChanged();",
          "20141:           } else {",
          "20142:             experimentsBuilder_.clear();",
          "20143:           }",
          "20144:           return this;",
          "20145:         }",
          "20153:         public Builder removeExperiments(int index) {",
          "20154:           if (experimentsBuilder_ == null) {",
          "20155:             ensureExperimentsIsMutable();",
          "20156:             experiments_.remove(index);",
          "20157:             onChanged();",
          "20158:           } else {",
          "20159:             experimentsBuilder_.remove(index);",
          "20160:           }",
          "20161:           return this;",
          "20162:         }",
          "20170:         public org.mlflow.api.proto.Service.Experiment.Builder getExperimentsBuilder(",
          "20171:             int index) {",
          "20172:           return getExperimentsFieldBuilder().getBuilder(index);",
          "20173:         }",
          "20181:         public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentsOrBuilder(",
          "20182:             int index) {",
          "20183:           if (experimentsBuilder_ == null) {",
          "20184:             return experiments_.get(index);  } else {",
          "20185:             return experimentsBuilder_.getMessageOrBuilder(index);",
          "20186:           }",
          "20187:         }",
          "20195:         public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "20196:              getExperimentsOrBuilderList() {",
          "20197:           if (experimentsBuilder_ != null) {",
          "20198:             return experimentsBuilder_.getMessageOrBuilderList();",
          "20199:           } else {",
          "20200:             return java.util.Collections.unmodifiableList(experiments_);",
          "20201:           }",
          "20202:         }",
          "20210:         public org.mlflow.api.proto.Service.Experiment.Builder addExperimentsBuilder() {",
          "20211:           return getExperimentsFieldBuilder().addBuilder(",
          "20212:               org.mlflow.api.proto.Service.Experiment.getDefaultInstance());",
          "20213:         }",
          "20221:         public org.mlflow.api.proto.Service.Experiment.Builder addExperimentsBuilder(",
          "20222:             int index) {",
          "20223:           return getExperimentsFieldBuilder().addBuilder(",
          "20224:               index, org.mlflow.api.proto.Service.Experiment.getDefaultInstance());",
          "20225:         }",
          "20233:         public java.util.List<org.mlflow.api.proto.Service.Experiment.Builder>",
          "20234:              getExperimentsBuilderList() {",
          "20235:           return getExperimentsFieldBuilder().getBuilderList();",
          "20236:         }",
          "20237:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "20238:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "20239:             getExperimentsFieldBuilder() {",
          "20240:           if (experimentsBuilder_ == null) {",
          "20241:             experimentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "20242:                 org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>(",
          "20243:                     experiments_,",
          "20244:                     ((bitField0_ & 0x00000001) != 0),",
          "20245:                     getParentForChildren(),",
          "20246:                     isClean());",
          "20247:             experiments_ = null;",
          "20248:           }",
          "20249:           return experimentsBuilder_;",
          "20250:         }",
          "20252:         private java.lang.Object nextPageToken_ = \"\";",
          "20262:         public boolean hasNextPageToken() {",
          "20263:           return ((bitField0_ & 0x00000002) != 0);",
          "20264:         }",
          "20274:         public java.lang.String getNextPageToken() {",
          "20275:           java.lang.Object ref = nextPageToken_;",
          "20281:               nextPageToken_ = s;",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "12456:         }",
          "12465:         public com.google.protobuf.ByteString",
          "12468:           if (ref instanceof String) {",
          "12469:             com.google.protobuf.ByteString b =",
          "12470:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "12471:                     (java.lang.String) ref);",
          "12473:             return b;",
          "12474:           } else {",
          "12475:             return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "12466:             getExperimentIdBytes() {",
          "12467:           java.lang.Object ref = experimentId_;",
          "12472:             experimentId_ = b;",
          "",
          "[Added Lines]",
          "20298:             getNextPageTokenBytes() {",
          "20299:           java.lang.Object ref = nextPageToken_;",
          "20304:             nextPageToken_ = b;",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "12477:         }",
          "12488:             java.lang.String value) {",
          "12489:           if (value == null) {",
          "12490:     throw new NullPointerException();",
          "12491:   }",
          "12494:           onChanged();",
          "12495:           return this;",
          "12496:         }",
          "12508:           onChanged();",
          "12509:           return this;",
          "12510:         }",
          "12521:             com.google.protobuf.ByteString value) {",
          "12522:           if (value == null) {",
          "12523:     throw new NullPointerException();",
          "12524:   }",
          "12527:           onChanged();",
          "12528:           return this;",
          "12529:         }",
          "",
          "[Removed Lines]",
          "12487:         public Builder setExperimentId(",
          "12492:   bitField0_ |= 0x00000001;",
          "12493:           experimentId_ = value;",
          "12505:         public Builder clearExperimentId() {",
          "12506:           bitField0_ = (bitField0_ & ~0x00000001);",
          "12507:           experimentId_ = getDefaultInstance().getExperimentId();",
          "12520:         public Builder setExperimentIdBytes(",
          "12525:   bitField0_ |= 0x00000001;",
          "12526:           experimentId_ = value;",
          "",
          "[Added Lines]",
          "20320:         public Builder setNextPageToken(",
          "20325:   bitField0_ |= 0x00000002;",
          "20326:           nextPageToken_ = value;",
          "20339:         public Builder clearNextPageToken() {",
          "20340:           bitField0_ = (bitField0_ & ~0x00000002);",
          "20341:           nextPageToken_ = getDefaultInstance().getNextPageToken();",
          "20355:         public Builder setNextPageTokenBytes(",
          "20360:   bitField0_ |= 0x00000002;",
          "20361:           nextPageToken_ = value;",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "12540:         }",
          "12544:       }",
          "12548:       static {",
          "12550:       }",
          "12553:         return DEFAULT_INSTANCE;",
          "12554:       }",
          "",
          "[Removed Lines]",
          "12547:       private static final org.mlflow.api.proto.Service.CreateExperiment.Response DEFAULT_INSTANCE;",
          "12549:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateExperiment.Response();",
          "12552:       public static org.mlflow.api.proto.Service.CreateExperiment.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "20382:       private static final org.mlflow.api.proto.Service.SearchExperiments.Response DEFAULT_INSTANCE;",
          "20384:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchExperiments.Response();",
          "20387:       public static org.mlflow.api.proto.Service.SearchExperiments.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "12574:       }",
          "12576:       @java.lang.Override",
          "12578:         return DEFAULT_INSTANCE;",
          "12579:       }",
          "12581:     }",
          "12583:     private int bitField0_;",
          "12594:     @java.lang.Override",
          "12596:       return ((bitField0_ & 0x00000001) != 0);",
          "12597:     }",
          "12606:     @java.lang.Override",
          "12609:       if (ref instanceof java.lang.String) {",
          "12610:         return (java.lang.String) ref;",
          "12611:       } else {",
          "",
          "[Removed Lines]",
          "12577:       public org.mlflow.api.proto.Service.CreateExperiment.Response getDefaultInstanceForType() {",
          "12584:     public static final int NAME_FIELD_NUMBER = 1;",
          "12585:     private volatile java.lang.Object name_;",
          "12595:     public boolean hasName() {",
          "12607:     public java.lang.String getName() {",
          "12608:       java.lang.Object ref = name_;",
          "",
          "[Added Lines]",
          "20412:       public org.mlflow.api.proto.Service.SearchExperiments.Response getDefaultInstanceForType() {",
          "20419:     public static final int MAX_RESULTS_FIELD_NUMBER = 1;",
          "20420:     private long maxResults_;",
          "20434:     public boolean hasMaxResults() {",
          "20449:     @java.lang.Override",
          "20450:     public long getMaxResults() {",
          "20451:       return maxResults_;",
          "20452:     }",
          "20454:     public static final int PAGE_TOKEN_FIELD_NUMBER = 2;",
          "20455:     private volatile java.lang.Object pageToken_;",
          "20464:     @java.lang.Override",
          "20465:     public boolean hasPageToken() {",
          "20466:       return ((bitField0_ & 0x00000002) != 0);",
          "20467:     }",
          "20477:     public java.lang.String getPageToken() {",
          "20478:       java.lang.Object ref = pageToken_;",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "12613:             (com.google.protobuf.ByteString) ref;",
          "12614:         java.lang.String s = bs.toStringUtf8();",
          "12615:         if (bs.isValidUtf8()) {",
          "12617:         }",
          "12618:         return s;",
          "12619:       }",
          "12620:     }",
          "12629:     @java.lang.Override",
          "12630:     public com.google.protobuf.ByteString",
          "12633:       if (ref instanceof java.lang.String) {",
          "12634:         com.google.protobuf.ByteString b =",
          "12635:             com.google.protobuf.ByteString.copyFromUtf8(",
          "12636:                 (java.lang.String) ref);",
          "12638:         return b;",
          "12639:       } else {",
          "12640:         return (com.google.protobuf.ByteString) ref;",
          "12641:       }",
          "12642:     }",
          "12655:     @java.lang.Override",
          "12658:     }",
          "12668:     @java.lang.Override",
          "12671:       if (ref instanceof java.lang.String) {",
          "12672:         return (java.lang.String) ref;",
          "12673:       } else {",
          "",
          "[Removed Lines]",
          "12616:           name_ = s;",
          "12631:         getNameBytes() {",
          "12632:       java.lang.Object ref = name_;",
          "12637:         name_ = b;",
          "12644:     public static final int ARTIFACT_LOCATION_FIELD_NUMBER = 2;",
          "12645:     private volatile java.lang.Object artifactLocation_;",
          "12656:     public boolean hasArtifactLocation() {",
          "12657:       return ((bitField0_ & 0x00000002) != 0);",
          "12669:     public java.lang.String getArtifactLocation() {",
          "12670:       java.lang.Object ref = artifactLocation_;",
          "",
          "[Added Lines]",
          "20486:           pageToken_ = s;",
          "20501:         getPageTokenBytes() {",
          "20502:       java.lang.Object ref = pageToken_;",
          "20507:         pageToken_ = b;",
          "20514:     public static final int FILTER_FIELD_NUMBER = 3;",
          "20515:     private volatile java.lang.Object filter_;",
          "20532:     public boolean hasFilter() {",
          "20533:       return ((bitField0_ & 0x00000004) != 0);",
          "20551:     public java.lang.String getFilter() {",
          "20552:       java.lang.Object ref = filter_;",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "12675:             (com.google.protobuf.ByteString) ref;",
          "12676:         java.lang.String s = bs.toStringUtf8();",
          "12677:         if (bs.isValidUtf8()) {",
          "12679:         }",
          "12680:         return s;",
          "12681:       }",
          "12682:     }",
          "12692:     @java.lang.Override",
          "12693:     public com.google.protobuf.ByteString",
          "12696:       if (ref instanceof java.lang.String) {",
          "12697:         com.google.protobuf.ByteString b =",
          "12698:             com.google.protobuf.ByteString.copyFromUtf8(",
          "12699:                 (java.lang.String) ref);",
          "12701:         return b;",
          "12702:       } else {",
          "12703:         return (com.google.protobuf.ByteString) ref;",
          "12704:       }",
          "12705:     }",
          "12722:     }",
          "12737:     }",
          "12751:     }",
          "12765:     }",
          "12780:     }",
          "12782:     private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "12678:           artifactLocation_ = s;",
          "12694:         getArtifactLocationBytes() {",
          "12695:       java.lang.Object ref = artifactLocation_;",
          "12700:         artifactLocation_ = b;",
          "12707:     public static final int TAGS_FIELD_NUMBER = 3;",
          "12708:     private java.util.List<org.mlflow.api.proto.Service.ExperimentTag> tags_;",
          "12719:     @java.lang.Override",
          "12720:     public java.util.List<org.mlflow.api.proto.Service.ExperimentTag> getTagsList() {",
          "12721:       return tags_;",
          "12733:     @java.lang.Override",
          "12734:     public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "12735:         getTagsOrBuilderList() {",
          "12736:       return tags_;",
          "12748:     @java.lang.Override",
          "12749:     public int getTagsCount() {",
          "12750:       return tags_.size();",
          "12762:     @java.lang.Override",
          "12763:     public org.mlflow.api.proto.Service.ExperimentTag getTags(int index) {",
          "12764:       return tags_.get(index);",
          "12776:     @java.lang.Override",
          "12777:     public org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "12778:         int index) {",
          "12779:       return tags_.get(index);",
          "",
          "[Added Lines]",
          "20560:           filter_ = s;",
          "20582:         getFilterBytes() {",
          "20583:       java.lang.Object ref = filter_;",
          "20588:         filter_ = b;",
          "20595:     public static final int ORDER_BY_FIELD_NUMBER = 4;",
          "20596:     private com.google.protobuf.LazyStringList orderBy_;",
          "20607:     public com.google.protobuf.ProtocolStringList",
          "20608:         getOrderByList() {",
          "20609:       return orderBy_;",
          "20621:     public int getOrderByCount() {",
          "20622:       return orderBy_.size();",
          "20635:     public java.lang.String getOrderBy(int index) {",
          "20636:       return orderBy_.get(index);",
          "20649:     public com.google.protobuf.ByteString",
          "20650:         getOrderByBytes(int index) {",
          "20651:       return orderBy_.getByteString(index);",
          "20654:     public static final int VIEW_TYPE_FIELD_NUMBER = 5;",
          "20655:     private int viewType_;",
          "20665:     @java.lang.Override public boolean hasViewType() {",
          "20666:       return ((bitField0_ & 0x00000008) != 0);",
          "20667:     }",
          "20677:     @java.lang.Override public org.mlflow.api.proto.Service.ViewType getViewType() {",
          "20678:       @SuppressWarnings(\"deprecation\")",
          "20679:       org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(viewType_);",
          "20680:       return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "12794:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "12795:                         throws java.io.IOException {",
          "12796:       if (((bitField0_ & 0x00000001) != 0)) {",
          "12798:       }",
          "12799:       if (((bitField0_ & 0x00000002) != 0)) {",
          "12801:       }",
          "12804:       }",
          "12805:       unknownFields.writeTo(output);",
          "12806:     }",
          "",
          "[Removed Lines]",
          "12797:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);",
          "12800:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, artifactLocation_);",
          "12802:       for (int i = 0; i < tags_.size(); i++) {",
          "12803:         output.writeMessage(3, tags_.get(i));",
          "",
          "[Added Lines]",
          "20698:         output.writeInt64(1, maxResults_);",
          "20701:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pageToken_);",
          "20703:       if (((bitField0_ & 0x00000004) != 0)) {",
          "20704:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filter_);",
          "20705:       }",
          "20706:       for (int i = 0; i < orderBy_.size(); i++) {",
          "20707:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, orderBy_.getRaw(i));",
          "20708:       }",
          "20709:       if (((bitField0_ & 0x00000008) != 0)) {",
          "20710:         output.writeEnum(5, viewType_);",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "12813:       size = 0;",
          "12814:       if (((bitField0_ & 0x00000001) != 0)) {",
          "12816:       }",
          "12817:       if (((bitField0_ & 0x00000002) != 0)) {",
          "12819:       }",
          "12821:         size += com.google.protobuf.CodedOutputStream",
          "12823:       }",
          "12824:       size += unknownFields.getSerializedSize();",
          "12825:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "12815:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);",
          "12818:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, artifactLocation_);",
          "12820:       for (int i = 0; i < tags_.size(); i++) {",
          "12822:           .computeMessageSize(3, tags_.get(i));",
          "",
          "[Added Lines]",
          "20722:         size += com.google.protobuf.CodedOutputStream",
          "20723:           .computeInt64Size(1, maxResults_);",
          "20726:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pageToken_);",
          "20728:       if (((bitField0_ & 0x00000004) != 0)) {",
          "20729:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filter_);",
          "20730:       }",
          "20731:       {",
          "20732:         int dataSize = 0;",
          "20733:         for (int i = 0; i < orderBy_.size(); i++) {",
          "20734:           dataSize += computeStringSizeNoTag(orderBy_.getRaw(i));",
          "20735:         }",
          "20736:         size += dataSize;",
          "20737:         size += 1 * getOrderByList().size();",
          "20738:       }",
          "20739:       if (((bitField0_ & 0x00000008) != 0)) {",
          "20741:           .computeEnumSize(5, viewType_);",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "12831:       if (obj == this) {",
          "12832:        return true;",
          "12833:       }",
          "12835:         return super.equals(obj);",
          "12836:       }",
          "12843:       }",
          "12848:       }",
          "12851:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "12852:       return true;",
          "12853:     }",
          "",
          "[Removed Lines]",
          "12834:       if (!(obj instanceof org.mlflow.api.proto.Service.CreateExperiment)) {",
          "12837:       org.mlflow.api.proto.Service.CreateExperiment other = (org.mlflow.api.proto.Service.CreateExperiment) obj;",
          "12839:       if (hasName() != other.hasName()) return false;",
          "12840:       if (hasName()) {",
          "12841:         if (!getName()",
          "12842:             .equals(other.getName())) return false;",
          "12844:       if (hasArtifactLocation() != other.hasArtifactLocation()) return false;",
          "12845:       if (hasArtifactLocation()) {",
          "12846:         if (!getArtifactLocation()",
          "12847:             .equals(other.getArtifactLocation())) return false;",
          "12849:       if (!getTagsList()",
          "12850:           .equals(other.getTagsList())) return false;",
          "",
          "[Added Lines]",
          "20753:       if (!(obj instanceof org.mlflow.api.proto.Service.SearchExperiments)) {",
          "20756:       org.mlflow.api.proto.Service.SearchExperiments other = (org.mlflow.api.proto.Service.SearchExperiments) obj;",
          "20758:       if (hasMaxResults() != other.hasMaxResults()) return false;",
          "20759:       if (hasMaxResults()) {",
          "20760:         if (getMaxResults()",
          "20761:             != other.getMaxResults()) return false;",
          "20763:       if (hasPageToken() != other.hasPageToken()) return false;",
          "20764:       if (hasPageToken()) {",
          "20765:         if (!getPageToken()",
          "20766:             .equals(other.getPageToken())) return false;",
          "20767:       }",
          "20768:       if (hasFilter() != other.hasFilter()) return false;",
          "20769:       if (hasFilter()) {",
          "20770:         if (!getFilter()",
          "20771:             .equals(other.getFilter())) return false;",
          "20772:       }",
          "20773:       if (!getOrderByList()",
          "20774:           .equals(other.getOrderByList())) return false;",
          "20775:       if (hasViewType() != other.hasViewType()) return false;",
          "20776:       if (hasViewType()) {",
          "20777:         if (viewType_ != other.viewType_) return false;",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "12859:       }",
          "12860:       int hash = 41;",
          "12861:       hash = (19 * hash) + getDescriptor().hashCode();",
          "12865:       }",
          "12869:       }",
          "12873:       }",
          "12874:       hash = (29 * hash) + unknownFields.hashCode();",
          "12875:       memoizedHashCode = hash;",
          "12876:       return hash;",
          "12877:     }",
          "12880:         java.nio.ByteBuffer data)",
          "12881:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "12882:       return PARSER.parseFrom(data);",
          "12883:     }",
          "12885:         java.nio.ByteBuffer data,",
          "12886:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12887:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "12888:       return PARSER.parseFrom(data, extensionRegistry);",
          "12889:     }",
          "12891:         com.google.protobuf.ByteString data)",
          "12892:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "12893:       return PARSER.parseFrom(data);",
          "12894:     }",
          "12896:         com.google.protobuf.ByteString data,",
          "12897:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12898:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "12899:       return PARSER.parseFrom(data, extensionRegistry);",
          "12900:     }",
          "12902:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "12903:       return PARSER.parseFrom(data);",
          "12904:     }",
          "12906:         byte[] data,",
          "12907:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12908:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "12909:       return PARSER.parseFrom(data, extensionRegistry);",
          "12910:     }",
          "12912:         throws java.io.IOException {",
          "12913:       return com.google.protobuf.GeneratedMessageV3",
          "12914:           .parseWithIOException(PARSER, input);",
          "12915:     }",
          "12917:         java.io.InputStream input,",
          "12918:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12919:         throws java.io.IOException {",
          "12920:       return com.google.protobuf.GeneratedMessageV3",
          "12921:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "12922:     }",
          "12924:         throws java.io.IOException {",
          "12925:       return com.google.protobuf.GeneratedMessageV3",
          "12926:           .parseDelimitedWithIOException(PARSER, input);",
          "12927:     }",
          "12929:         java.io.InputStream input,",
          "12930:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12931:         throws java.io.IOException {",
          "12932:       return com.google.protobuf.GeneratedMessageV3",
          "12933:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "12934:     }",
          "12936:         com.google.protobuf.CodedInputStream input)",
          "12937:         throws java.io.IOException {",
          "12938:       return com.google.protobuf.GeneratedMessageV3",
          "12939:           .parseWithIOException(PARSER, input);",
          "12940:     }",
          "12942:         com.google.protobuf.CodedInputStream input,",
          "12943:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "12944:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "12862:       if (hasName()) {",
          "12863:         hash = (37 * hash) + NAME_FIELD_NUMBER;",
          "12864:         hash = (53 * hash) + getName().hashCode();",
          "12866:       if (hasArtifactLocation()) {",
          "12867:         hash = (37 * hash) + ARTIFACT_LOCATION_FIELD_NUMBER;",
          "12868:         hash = (53 * hash) + getArtifactLocation().hashCode();",
          "12870:       if (getTagsCount() > 0) {",
          "12871:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "12872:         hash = (53 * hash) + getTagsList().hashCode();",
          "12879:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "12884:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "12890:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "12895:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "12901:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(byte[] data)",
          "12905:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "12911:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(java.io.InputStream input)",
          "12916:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "12923:     public static org.mlflow.api.proto.Service.CreateExperiment parseDelimitedFrom(java.io.InputStream input)",
          "12928:     public static org.mlflow.api.proto.Service.CreateExperiment parseDelimitedFrom(",
          "12935:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "12941:     public static org.mlflow.api.proto.Service.CreateExperiment parseFrom(",
          "",
          "[Added Lines]",
          "20790:       if (hasMaxResults()) {",
          "20791:         hash = (37 * hash) + MAX_RESULTS_FIELD_NUMBER;",
          "20792:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "20793:             getMaxResults());",
          "20795:       if (hasPageToken()) {",
          "20796:         hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;",
          "20797:         hash = (53 * hash) + getPageToken().hashCode();",
          "20799:       if (hasFilter()) {",
          "20800:         hash = (37 * hash) + FILTER_FIELD_NUMBER;",
          "20801:         hash = (53 * hash) + getFilter().hashCode();",
          "20802:       }",
          "20803:       if (getOrderByCount() > 0) {",
          "20804:         hash = (37 * hash) + ORDER_BY_FIELD_NUMBER;",
          "20805:         hash = (53 * hash) + getOrderByList().hashCode();",
          "20806:       }",
          "20807:       if (hasViewType()) {",
          "20808:         hash = (37 * hash) + VIEW_TYPE_FIELD_NUMBER;",
          "20809:         hash = (53 * hash) + viewType_;",
          "20816:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "20821:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "20827:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "20832:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "20838:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(byte[] data)",
          "20842:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "20848:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(java.io.InputStream input)",
          "20853:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "20860:     public static org.mlflow.api.proto.Service.SearchExperiments parseDelimitedFrom(java.io.InputStream input)",
          "20865:     public static org.mlflow.api.proto.Service.SearchExperiments parseDelimitedFrom(",
          "20872:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "20878:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "12951:     public static Builder newBuilder() {",
          "12952:       return DEFAULT_INSTANCE.toBuilder();",
          "12953:     }",
          "12955:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "12956:     }",
          "12957:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "12954:     public static Builder newBuilder(org.mlflow.api.proto.Service.CreateExperiment prototype) {",
          "",
          "[Added Lines]",
          "20891:     public static Builder newBuilder(org.mlflow.api.proto.Service.SearchExperiments prototype) {",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "12967:       return builder;",
          "12968:     }",
          "12972:     public static final class Builder extends",
          "12973:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "12976:       public static final com.google.protobuf.Descriptors.Descriptor",
          "12977:           getDescriptor() {",
          "12979:       }",
          "12981:       @java.lang.Override",
          "12982:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "12983:           internalGetFieldAccessorTable() {",
          "12985:             .ensureFieldAccessorsInitialized(",
          "12987:       }",
          "12990:       private Builder() {",
          "12991:         maybeForceBuilderInitialization();",
          "12992:       }",
          "",
          "[Removed Lines]",
          "12975:         org.mlflow.api.proto.Service.CreateExperimentOrBuilder {",
          "12978:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_descriptor;",
          "12984:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_fieldAccessorTable",
          "12986:                 org.mlflow.api.proto.Service.CreateExperiment.class, org.mlflow.api.proto.Service.CreateExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "20912:         org.mlflow.api.proto.Service.SearchExperimentsOrBuilder {",
          "20915:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_descriptor;",
          "20921:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_fieldAccessorTable",
          "20923:                 org.mlflow.api.proto.Service.SearchExperiments.class, org.mlflow.api.proto.Service.SearchExperiments.Builder.class);",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "12999:       private void maybeForceBuilderInitialization() {",
          "13000:         if (com.google.protobuf.GeneratedMessageV3",
          "13001:                 .alwaysUseFieldBuilders) {",
          "13003:         }",
          "13004:       }",
          "13005:       @java.lang.Override",
          "13006:       public Builder clear() {",
          "13007:         super.clear();",
          "13009:         bitField0_ = (bitField0_ & ~0x00000001);",
          "13011:         bitField0_ = (bitField0_ & ~0x00000002);",
          "13018:         return this;",
          "13019:       }",
          "13021:       @java.lang.Override",
          "13022:       public com.google.protobuf.Descriptors.Descriptor",
          "13023:           getDescriptorForType() {",
          "13025:       }",
          "13027:       @java.lang.Override",
          "13030:       }",
          "13032:       @java.lang.Override",
          "13035:         if (!result.isInitialized()) {",
          "13036:           throw newUninitializedMessageException(result);",
          "13037:         }",
          "",
          "[Removed Lines]",
          "13002:           getTagsFieldBuilder();",
          "13008:         name_ = \"\";",
          "13010:         artifactLocation_ = \"\";",
          "13012:         if (tagsBuilder_ == null) {",
          "13013:           tags_ = java.util.Collections.emptyList();",
          "13014:           bitField0_ = (bitField0_ & ~0x00000004);",
          "13015:         } else {",
          "13016:           tagsBuilder_.clear();",
          "13017:         }",
          "13024:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateExperiment_descriptor;",
          "13028:       public org.mlflow.api.proto.Service.CreateExperiment getDefaultInstanceForType() {",
          "13029:         return org.mlflow.api.proto.Service.CreateExperiment.getDefaultInstance();",
          "13033:       public org.mlflow.api.proto.Service.CreateExperiment build() {",
          "13034:         org.mlflow.api.proto.Service.CreateExperiment result = buildPartial();",
          "",
          "[Added Lines]",
          "20944:         maxResults_ = 0L;",
          "20946:         pageToken_ = \"\";",
          "20948:         filter_ = \"\";",
          "20949:         bitField0_ = (bitField0_ & ~0x00000004);",
          "20950:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "20951:         bitField0_ = (bitField0_ & ~0x00000008);",
          "20952:         viewType_ = 1;",
          "20953:         bitField0_ = (bitField0_ & ~0x00000010);",
          "20960:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_descriptor;",
          "20964:       public org.mlflow.api.proto.Service.SearchExperiments getDefaultInstanceForType() {",
          "20965:         return org.mlflow.api.proto.Service.SearchExperiments.getDefaultInstance();",
          "20969:       public org.mlflow.api.proto.Service.SearchExperiments build() {",
          "20970:         org.mlflow.api.proto.Service.SearchExperiments result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "13039:       }",
          "13041:       @java.lang.Override",
          "13044:         int from_bitField0_ = bitField0_;",
          "13045:         int to_bitField0_ = 0;",
          "13046:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "13047:           to_bitField0_ |= 0x00000001;",
          "13048:         }",
          "13050:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "13051:           to_bitField0_ |= 0x00000002;",
          "13052:         }",
          "13062:         }",
          "13063:         result.bitField0_ = to_bitField0_;",
          "13064:         onBuilt();",
          "13065:         return result;",
          "",
          "[Removed Lines]",
          "13042:       public org.mlflow.api.proto.Service.CreateExperiment buildPartial() {",
          "13043:         org.mlflow.api.proto.Service.CreateExperiment result = new org.mlflow.api.proto.Service.CreateExperiment(this);",
          "13049:         result.name_ = name_;",
          "13053:         result.artifactLocation_ = artifactLocation_;",
          "13054:         if (tagsBuilder_ == null) {",
          "13055:           if (((bitField0_ & 0x00000004) != 0)) {",
          "13056:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "13057:             bitField0_ = (bitField0_ & ~0x00000004);",
          "13058:           }",
          "13059:           result.tags_ = tags_;",
          "13060:         } else {",
          "13061:           result.tags_ = tagsBuilder_.build();",
          "",
          "[Added Lines]",
          "20978:       public org.mlflow.api.proto.Service.SearchExperiments buildPartial() {",
          "20979:         org.mlflow.api.proto.Service.SearchExperiments result = new org.mlflow.api.proto.Service.SearchExperiments(this);",
          "20983:           result.maxResults_ = maxResults_;",
          "20989:         result.pageToken_ = pageToken_;",
          "20990:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "20991:           to_bitField0_ |= 0x00000004;",
          "20992:         }",
          "20993:         result.filter_ = filter_;",
          "20994:         if (((bitField0_ & 0x00000008) != 0)) {",
          "20995:           orderBy_ = orderBy_.getUnmodifiableView();",
          "20996:           bitField0_ = (bitField0_ & ~0x00000008);",
          "20998:         result.orderBy_ = orderBy_;",
          "20999:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "21000:           to_bitField0_ |= 0x00000008;",
          "21001:         }",
          "21002:         result.viewType_ = viewType_;",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "13099:       }",
          "13100:       @java.lang.Override",
          "13101:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "13104:         } else {",
          "13105:           super.mergeFrom(other);",
          "13106:           return this;",
          "13107:         }",
          "13108:       }",
          "13116:         }",
          "13118:           bitField0_ |= 0x00000002;",
          "13120:           onChanged();",
          "13121:         }",
          "13146:           }",
          "13147:         }",
          "13148:         this.mergeUnknownFields(other.unknownFields);",
          "13149:         onChanged();",
          "",
          "[Removed Lines]",
          "13102:         if (other instanceof org.mlflow.api.proto.Service.CreateExperiment) {",
          "13103:           return mergeFrom((org.mlflow.api.proto.Service.CreateExperiment)other);",
          "13110:       public Builder mergeFrom(org.mlflow.api.proto.Service.CreateExperiment other) {",
          "13111:         if (other == org.mlflow.api.proto.Service.CreateExperiment.getDefaultInstance()) return this;",
          "13112:         if (other.hasName()) {",
          "13113:           bitField0_ |= 0x00000001;",
          "13114:           name_ = other.name_;",
          "13115:           onChanged();",
          "13117:         if (other.hasArtifactLocation()) {",
          "13119:           artifactLocation_ = other.artifactLocation_;",
          "13122:         if (tagsBuilder_ == null) {",
          "13123:           if (!other.tags_.isEmpty()) {",
          "13124:             if (tags_.isEmpty()) {",
          "13125:               tags_ = other.tags_;",
          "13126:               bitField0_ = (bitField0_ & ~0x00000004);",
          "13127:             } else {",
          "13128:               ensureTagsIsMutable();",
          "13129:               tags_.addAll(other.tags_);",
          "13130:             }",
          "13131:             onChanged();",
          "13132:           }",
          "13133:         } else {",
          "13134:           if (!other.tags_.isEmpty()) {",
          "13135:             if (tagsBuilder_.isEmpty()) {",
          "13136:               tagsBuilder_.dispose();",
          "13137:               tagsBuilder_ = null;",
          "13138:               tags_ = other.tags_;",
          "13139:               bitField0_ = (bitField0_ & ~0x00000004);",
          "13140:               tagsBuilder_ =",
          "13141:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "13142:                    getTagsFieldBuilder() : null;",
          "13143:             } else {",
          "13144:               tagsBuilder_.addAllMessages(other.tags_);",
          "13145:             }",
          "",
          "[Added Lines]",
          "21042:         if (other instanceof org.mlflow.api.proto.Service.SearchExperiments) {",
          "21043:           return mergeFrom((org.mlflow.api.proto.Service.SearchExperiments)other);",
          "21050:       public Builder mergeFrom(org.mlflow.api.proto.Service.SearchExperiments other) {",
          "21051:         if (other == org.mlflow.api.proto.Service.SearchExperiments.getDefaultInstance()) return this;",
          "21052:         if (other.hasMaxResults()) {",
          "21053:           setMaxResults(other.getMaxResults());",
          "21055:         if (other.hasPageToken()) {",
          "21057:           pageToken_ = other.pageToken_;",
          "21060:         if (other.hasFilter()) {",
          "21061:           bitField0_ |= 0x00000004;",
          "21062:           filter_ = other.filter_;",
          "21063:           onChanged();",
          "21064:         }",
          "21065:         if (!other.orderBy_.isEmpty()) {",
          "21066:           if (orderBy_.isEmpty()) {",
          "21067:             orderBy_ = other.orderBy_;",
          "21068:             bitField0_ = (bitField0_ & ~0x00000008);",
          "21069:           } else {",
          "21070:             ensureOrderByIsMutable();",
          "21071:             orderBy_.addAll(other.orderBy_);",
          "21073:           onChanged();",
          "21074:         }",
          "21075:         if (other.hasViewType()) {",
          "21076:           setViewType(other.getViewType());",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "13160:           com.google.protobuf.CodedInputStream input,",
          "13161:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13162:           throws java.io.IOException {",
          "13164:         try {",
          "13165:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "13166:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "13168:           throw e.unwrapIOException();",
          "13169:         } finally {",
          "13170:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "13163:         org.mlflow.api.proto.Service.CreateExperiment parsedMessage = null;",
          "13167:           parsedMessage = (org.mlflow.api.proto.Service.CreateExperiment) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "21093:         org.mlflow.api.proto.Service.SearchExperiments parsedMessage = null;",
          "21097:           parsedMessage = (org.mlflow.api.proto.Service.SearchExperiments) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "13175:       }",
          "13176:       private int bitField0_;",
          "13189:       }",
          "13200:         if (!(ref instanceof java.lang.String)) {",
          "13201:           com.google.protobuf.ByteString bs =",
          "13202:               (com.google.protobuf.ByteString) ref;",
          "13203:           java.lang.String s = bs.toStringUtf8();",
          "13204:           if (bs.isValidUtf8()) {",
          "13206:           }",
          "13207:           return s;",
          "13208:         } else {",
          "",
          "[Removed Lines]",
          "13178:       private java.lang.Object name_ = \"\";",
          "13187:       public boolean hasName() {",
          "13188:         return ((bitField0_ & 0x00000001) != 0);",
          "13198:       public java.lang.String getName() {",
          "13199:         java.lang.Object ref = name_;",
          "13205:             name_ = s;",
          "",
          "[Added Lines]",
          "21108:       private long maxResults_ ;",
          "21121:       @java.lang.Override",
          "21122:       public boolean hasMaxResults() {",
          "21123:         return ((bitField0_ & 0x00000001) != 0);",
          "21124:       }",
          "21137:       @java.lang.Override",
          "21138:       public long getMaxResults() {",
          "21139:         return maxResults_;",
          "21140:       }",
          "21154:       public Builder setMaxResults(long value) {",
          "21155:         bitField0_ |= 0x00000001;",
          "21156:         maxResults_ = value;",
          "21157:         onChanged();",
          "21158:         return this;",
          "21159:       }",
          "21172:       public Builder clearMaxResults() {",
          "21173:         bitField0_ = (bitField0_ & ~0x00000001);",
          "21174:         maxResults_ = 0L;",
          "21175:         onChanged();",
          "21176:         return this;",
          "21177:       }",
          "21179:       private java.lang.Object pageToken_ = \"\";",
          "21188:       public boolean hasPageToken() {",
          "21189:         return ((bitField0_ & 0x00000002) != 0);",
          "21199:       public java.lang.String getPageToken() {",
          "21200:         java.lang.Object ref = pageToken_;",
          "21206:             pageToken_ = s;",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "13211:       }",
          "13220:       public com.google.protobuf.ByteString",
          "13223:         if (ref instanceof String) {",
          "13224:           com.google.protobuf.ByteString b =",
          "13225:               com.google.protobuf.ByteString.copyFromUtf8(",
          "13226:                   (java.lang.String) ref);",
          "13228:           return b;",
          "13229:         } else {",
          "13230:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "13221:           getNameBytes() {",
          "13222:         java.lang.Object ref = name_;",
          "13227:           name_ = b;",
          "",
          "[Added Lines]",
          "21222:           getPageTokenBytes() {",
          "21223:         java.lang.Object ref = pageToken_;",
          "21228:           pageToken_ = b;",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "13232:       }",
          "13243:           java.lang.String value) {",
          "13244:         if (value == null) {",
          "13245:     throw new NullPointerException();",
          "13246:   }",
          "13249:         onChanged();",
          "13250:         return this;",
          "13251:       }",
          "13263:         onChanged();",
          "13264:         return this;",
          "13265:       }",
          "13276:           com.google.protobuf.ByteString value) {",
          "13277:         if (value == null) {",
          "13278:     throw new NullPointerException();",
          "13279:   }",
          "13282:         onChanged();",
          "13283:         return this;",
          "13284:       }",
          "13298:       }",
          "13310:         if (!(ref instanceof java.lang.String)) {",
          "13311:           com.google.protobuf.ByteString bs =",
          "13312:               (com.google.protobuf.ByteString) ref;",
          "13313:           java.lang.String s = bs.toStringUtf8();",
          "13314:           if (bs.isValidUtf8()) {",
          "13316:           }",
          "13317:           return s;",
          "13318:         } else {",
          "",
          "[Removed Lines]",
          "13242:       public Builder setName(",
          "13247:   bitField0_ |= 0x00000001;",
          "13248:         name_ = value;",
          "13260:       public Builder clearName() {",
          "13261:         bitField0_ = (bitField0_ & ~0x00000001);",
          "13262:         name_ = getDefaultInstance().getName();",
          "13275:       public Builder setNameBytes(",
          "13280:   bitField0_ |= 0x00000001;",
          "13281:         name_ = value;",
          "13286:       private java.lang.Object artifactLocation_ = \"\";",
          "13296:       public boolean hasArtifactLocation() {",
          "13297:         return ((bitField0_ & 0x00000002) != 0);",
          "13308:       public java.lang.String getArtifactLocation() {",
          "13309:         java.lang.Object ref = artifactLocation_;",
          "13315:             artifactLocation_ = s;",
          "",
          "[Added Lines]",
          "21243:       public Builder setPageToken(",
          "21248:   bitField0_ |= 0x00000002;",
          "21249:         pageToken_ = value;",
          "21261:       public Builder clearPageToken() {",
          "21262:         bitField0_ = (bitField0_ & ~0x00000002);",
          "21263:         pageToken_ = getDefaultInstance().getPageToken();",
          "21276:       public Builder setPageTokenBytes(",
          "21281:   bitField0_ |= 0x00000002;",
          "21282:         pageToken_ = value;",
          "21287:       private java.lang.Object filter_ = \"\";",
          "21303:       public boolean hasFilter() {",
          "21304:         return ((bitField0_ & 0x00000004) != 0);",
          "21321:       public java.lang.String getFilter() {",
          "21322:         java.lang.Object ref = filter_;",
          "21328:             filter_ = s;",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "13321:       }",
          "13331:       public com.google.protobuf.ByteString",
          "13334:         if (ref instanceof String) {",
          "13335:           com.google.protobuf.ByteString b =",
          "13336:               com.google.protobuf.ByteString.copyFromUtf8(",
          "13337:                   (java.lang.String) ref);",
          "13339:           return b;",
          "13340:         } else {",
          "13341:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "13332:           getArtifactLocationBytes() {",
          "13333:         java.lang.Object ref = artifactLocation_;",
          "13338:           artifactLocation_ = b;",
          "",
          "[Added Lines]",
          "21351:           getFilterBytes() {",
          "21352:         java.lang.Object ref = filter_;",
          "21357:           filter_ = b;",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "13343:       }",
          "13355:           java.lang.String value) {",
          "13356:         if (value == null) {",
          "13357:     throw new NullPointerException();",
          "13358:   }",
          "13361:         onChanged();",
          "13362:         return this;",
          "13363:       }",
          "13376:         onChanged();",
          "13377:         return this;",
          "13378:       }",
          "13390:           com.google.protobuf.ByteString value) {",
          "13391:         if (value == null) {",
          "13392:     throw new NullPointerException();",
          "13393:   }",
          "13396:         onChanged();",
          "13397:         return this;",
          "13398:       }",
          "13406:          }",
          "13407:       }",
          "13507:       }",
          "13530:       }",
          "13554:       }",
          "13575:       }",
          "13595:         return this;",
          "13596:       }",
          "13617:         return this;",
          "13618:       }",
          "13637:         return this;",
          "13638:       }",
          "13657:         return this;",
          "13658:       }",
          "13689:       }",
          "13707:       }",
          "13721:       }",
          "13736:       }",
          "13764:       }",
          "13765:       @java.lang.Override",
          "13766:       public final Builder setUnknownFields(",
          "",
          "[Removed Lines]",
          "13354:       public Builder setArtifactLocation(",
          "13359:   bitField0_ |= 0x00000002;",
          "13360:         artifactLocation_ = value;",
          "13373:       public Builder clearArtifactLocation() {",
          "13374:         bitField0_ = (bitField0_ & ~0x00000002);",
          "13375:         artifactLocation_ = getDefaultInstance().getArtifactLocation();",
          "13389:       public Builder setArtifactLocationBytes(",
          "13394:   bitField0_ |= 0x00000002;",
          "13395:         artifactLocation_ = value;",
          "13400:       private java.util.List<org.mlflow.api.proto.Service.ExperimentTag> tags_ =",
          "13401:         java.util.Collections.emptyList();",
          "13402:       private void ensureTagsIsMutable() {",
          "13403:         if (!((bitField0_ & 0x00000004) != 0)) {",
          "13404:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.ExperimentTag>(tags_);",
          "13405:           bitField0_ |= 0x00000004;",
          "13409:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "13410:           org.mlflow.api.proto.Service.ExperimentTag, org.mlflow.api.proto.Service.ExperimentTag.Builder, org.mlflow.api.proto.Service.ExperimentTagOrBuilder> tagsBuilder_;",
          "13422:       public java.util.List<org.mlflow.api.proto.Service.ExperimentTag> getTagsList() {",
          "13423:         if (tagsBuilder_ == null) {",
          "13424:           return java.util.Collections.unmodifiableList(tags_);",
          "13425:         } else {",
          "13426:           return tagsBuilder_.getMessageList();",
          "13427:         }",
          "13428:       }",
          "13439:       public int getTagsCount() {",
          "13440:         if (tagsBuilder_ == null) {",
          "13441:           return tags_.size();",
          "13442:         } else {",
          "13443:           return tagsBuilder_.getCount();",
          "13444:         }",
          "13445:       }",
          "13456:       public org.mlflow.api.proto.Service.ExperimentTag getTags(int index) {",
          "13457:         if (tagsBuilder_ == null) {",
          "13458:           return tags_.get(index);",
          "13459:         } else {",
          "13460:           return tagsBuilder_.getMessage(index);",
          "13461:         }",
          "13462:       }",
          "13473:       public Builder setTags(",
          "13474:           int index, org.mlflow.api.proto.Service.ExperimentTag value) {",
          "13475:         if (tagsBuilder_ == null) {",
          "13476:           if (value == null) {",
          "13477:             throw new NullPointerException();",
          "13478:           }",
          "13479:           ensureTagsIsMutable();",
          "13480:           tags_.set(index, value);",
          "13481:           onChanged();",
          "13482:         } else {",
          "13483:           tagsBuilder_.setMessage(index, value);",
          "13484:         }",
          "13485:         return this;",
          "13486:       }",
          "13497:       public Builder setTags(",
          "13498:           int index, org.mlflow.api.proto.Service.ExperimentTag.Builder builderForValue) {",
          "13499:         if (tagsBuilder_ == null) {",
          "13500:           ensureTagsIsMutable();",
          "13501:           tags_.set(index, builderForValue.build());",
          "13502:           onChanged();",
          "13503:         } else {",
          "13504:           tagsBuilder_.setMessage(index, builderForValue.build());",
          "13505:         }",
          "13506:         return this;",
          "13518:       public Builder addTags(org.mlflow.api.proto.Service.ExperimentTag value) {",
          "13519:         if (tagsBuilder_ == null) {",
          "13520:           if (value == null) {",
          "13521:             throw new NullPointerException();",
          "13522:           }",
          "13523:           ensureTagsIsMutable();",
          "13524:           tags_.add(value);",
          "13525:           onChanged();",
          "13526:         } else {",
          "13527:           tagsBuilder_.addMessage(value);",
          "13528:         }",
          "13529:         return this;",
          "13541:       public Builder addTags(",
          "13542:           int index, org.mlflow.api.proto.Service.ExperimentTag value) {",
          "13543:         if (tagsBuilder_ == null) {",
          "13544:           if (value == null) {",
          "13545:             throw new NullPointerException();",
          "13546:           }",
          "13547:           ensureTagsIsMutable();",
          "13548:           tags_.add(index, value);",
          "13549:           onChanged();",
          "13550:         } else {",
          "13551:           tagsBuilder_.addMessage(index, value);",
          "13552:         }",
          "13553:         return this;",
          "13565:       public Builder addTags(",
          "13566:           org.mlflow.api.proto.Service.ExperimentTag.Builder builderForValue) {",
          "13567:         if (tagsBuilder_ == null) {",
          "13568:           ensureTagsIsMutable();",
          "13569:           tags_.add(builderForValue.build());",
          "13570:           onChanged();",
          "13571:         } else {",
          "13572:           tagsBuilder_.addMessage(builderForValue.build());",
          "13573:         }",
          "13574:         return this;",
          "13586:       public Builder addTags(",
          "13587:           int index, org.mlflow.api.proto.Service.ExperimentTag.Builder builderForValue) {",
          "13588:         if (tagsBuilder_ == null) {",
          "13589:           ensureTagsIsMutable();",
          "13590:           tags_.add(index, builderForValue.build());",
          "13591:           onChanged();",
          "13592:         } else {",
          "13593:           tagsBuilder_.addMessage(index, builderForValue.build());",
          "13594:         }",
          "13607:       public Builder addAllTags(",
          "13608:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.ExperimentTag> values) {",
          "13609:         if (tagsBuilder_ == null) {",
          "13610:           ensureTagsIsMutable();",
          "13611:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "13612:               values, tags_);",
          "13613:           onChanged();",
          "13614:         } else {",
          "13615:           tagsBuilder_.addAllMessages(values);",
          "13616:         }",
          "13629:       public Builder clearTags() {",
          "13630:         if (tagsBuilder_ == null) {",
          "13631:           tags_ = java.util.Collections.emptyList();",
          "13632:           bitField0_ = (bitField0_ & ~0x00000004);",
          "13633:           onChanged();",
          "13634:         } else {",
          "13635:           tagsBuilder_.clear();",
          "13636:         }",
          "13649:       public Builder removeTags(int index) {",
          "13650:         if (tagsBuilder_ == null) {",
          "13651:           ensureTagsIsMutable();",
          "13652:           tags_.remove(index);",
          "13653:           onChanged();",
          "13654:         } else {",
          "13655:           tagsBuilder_.remove(index);",
          "13656:         }",
          "13669:       public org.mlflow.api.proto.Service.ExperimentTag.Builder getTagsBuilder(",
          "13670:           int index) {",
          "13671:         return getTagsFieldBuilder().getBuilder(index);",
          "13672:       }",
          "13683:       public org.mlflow.api.proto.Service.ExperimentTagOrBuilder getTagsOrBuilder(",
          "13684:           int index) {",
          "13685:         if (tagsBuilder_ == null) {",
          "13686:           return tags_.get(index);  } else {",
          "13687:           return tagsBuilder_.getMessageOrBuilder(index);",
          "13688:         }",
          "13700:       public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "13701:            getTagsOrBuilderList() {",
          "13702:         if (tagsBuilder_ != null) {",
          "13703:           return tagsBuilder_.getMessageOrBuilderList();",
          "13704:         } else {",
          "13705:           return java.util.Collections.unmodifiableList(tags_);",
          "13706:         }",
          "13718:       public org.mlflow.api.proto.Service.ExperimentTag.Builder addTagsBuilder() {",
          "13719:         return getTagsFieldBuilder().addBuilder(",
          "13720:             org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance());",
          "13732:       public org.mlflow.api.proto.Service.ExperimentTag.Builder addTagsBuilder(",
          "13733:           int index) {",
          "13734:         return getTagsFieldBuilder().addBuilder(",
          "13735:             index, org.mlflow.api.proto.Service.ExperimentTag.getDefaultInstance());",
          "13747:       public java.util.List<org.mlflow.api.proto.Service.ExperimentTag.Builder>",
          "13748:            getTagsBuilderList() {",
          "13749:         return getTagsFieldBuilder().getBuilderList();",
          "13750:       }",
          "13751:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "13752:           org.mlflow.api.proto.Service.ExperimentTag, org.mlflow.api.proto.Service.ExperimentTag.Builder, org.mlflow.api.proto.Service.ExperimentTagOrBuilder>",
          "13753:           getTagsFieldBuilder() {",
          "13754:         if (tagsBuilder_ == null) {",
          "13755:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "13756:               org.mlflow.api.proto.Service.ExperimentTag, org.mlflow.api.proto.Service.ExperimentTag.Builder, org.mlflow.api.proto.Service.ExperimentTagOrBuilder>(",
          "13757:                   tags_,",
          "13758:                   ((bitField0_ & 0x00000004) != 0),",
          "13759:                   getParentForChildren(),",
          "13760:                   isClean());",
          "13761:           tags_ = null;",
          "13762:         }",
          "13763:         return tagsBuilder_;",
          "",
          "[Added Lines]",
          "21379:       public Builder setFilter(",
          "21384:   bitField0_ |= 0x00000004;",
          "21385:         filter_ = value;",
          "21404:       public Builder clearFilter() {",
          "21405:         bitField0_ = (bitField0_ & ~0x00000004);",
          "21406:         filter_ = getDefaultInstance().getFilter();",
          "21426:       public Builder setFilterBytes(",
          "21431:   bitField0_ |= 0x00000004;",
          "21432:         filter_ = value;",
          "21437:       private com.google.protobuf.LazyStringList orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "21438:       private void ensureOrderByIsMutable() {",
          "21439:         if (!((bitField0_ & 0x00000008) != 0)) {",
          "21440:           orderBy_ = new com.google.protobuf.LazyStringArrayList(orderBy_);",
          "21441:           bitField0_ |= 0x00000008;",
          "21454:       public com.google.protobuf.ProtocolStringList",
          "21455:           getOrderByList() {",
          "21456:         return orderBy_.getUnmodifiableView();",
          "21468:       public int getOrderByCount() {",
          "21469:         return orderBy_.size();",
          "21482:       public java.lang.String getOrderBy(int index) {",
          "21483:         return orderBy_.get(index);",
          "21496:       public com.google.protobuf.ByteString",
          "21497:           getOrderByBytes(int index) {",
          "21498:         return orderBy_.getByteString(index);",
          "21512:       public Builder setOrderBy(",
          "21513:           int index, java.lang.String value) {",
          "21514:         if (value == null) {",
          "21515:     throw new NullPointerException();",
          "21516:   }",
          "21517:   ensureOrderByIsMutable();",
          "21518:         orderBy_.set(index, value);",
          "21519:         onChanged();",
          "21533:       public Builder addOrderBy(",
          "21534:           java.lang.String value) {",
          "21535:         if (value == null) {",
          "21536:     throw new NullPointerException();",
          "21537:   }",
          "21538:   ensureOrderByIsMutable();",
          "21539:         orderBy_.add(value);",
          "21540:         onChanged();",
          "21554:       public Builder addAllOrderBy(",
          "21555:           java.lang.Iterable<java.lang.String> values) {",
          "21556:         ensureOrderByIsMutable();",
          "21557:         com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "21558:             values, orderBy_);",
          "21559:         onChanged();",
          "21572:       public Builder clearOrderBy() {",
          "21573:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "21574:         bitField0_ = (bitField0_ & ~0x00000008);",
          "21575:         onChanged();",
          "21589:       public Builder addOrderByBytes(",
          "21590:           com.google.protobuf.ByteString value) {",
          "21591:         if (value == null) {",
          "21592:     throw new NullPointerException();",
          "21593:   }",
          "21594:   ensureOrderByIsMutable();",
          "21595:         orderBy_.add(value);",
          "21596:         onChanged();",
          "21597:         return this;",
          "21600:       private int viewType_ = 1;",
          "21610:       @java.lang.Override public boolean hasViewType() {",
          "21611:         return ((bitField0_ & 0x00000010) != 0);",
          "21622:       @java.lang.Override",
          "21623:       public org.mlflow.api.proto.Service.ViewType getViewType() {",
          "21624:         @SuppressWarnings(\"deprecation\")",
          "21625:         org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(viewType_);",
          "21626:         return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "21638:       public Builder setViewType(org.mlflow.api.proto.Service.ViewType value) {",
          "21639:         if (value == null) {",
          "21640:           throw new NullPointerException();",
          "21641:         }",
          "21642:         bitField0_ |= 0x00000010;",
          "21643:         viewType_ = value.getNumber();",
          "21644:         onChanged();",
          "21645:         return this;",
          "21656:       public Builder clearViewType() {",
          "21657:         bitField0_ = (bitField0_ & ~0x00000010);",
          "21658:         viewType_ = 1;",
          "21659:         onChanged();",
          "21660:         return this;",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "13775:       }",
          "13779:     }",
          "13783:     static {",
          "13785:     }",
          "13788:       return DEFAULT_INSTANCE;",
          "13789:     }",
          "13793:       @java.lang.Override",
          "13795:           com.google.protobuf.CodedInputStream input,",
          "13796:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "13797:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "13799:       }",
          "13800:     };",
          "13803:       return PARSER;",
          "13804:     }",
          "13806:     @java.lang.Override",
          "13808:       return PARSER;",
          "13809:     }",
          "13811:     @java.lang.Override",
          "13813:       return DEFAULT_INSTANCE;",
          "13814:     }",
          "13816:   }",
          "13820:       com.google.protobuf.MessageOrBuilder {",
          "13974:     com.google.protobuf.ByteString",
          "13997:   }",
          "14002:       com.google.protobuf.GeneratedMessageV3 implements",
          "14005:   private static final long serialVersionUID = 0L;",
          "14008:       super(builder);",
          "14009:     }",
          "14015:     }",
          "14017:     @java.lang.Override",
          "14018:     @SuppressWarnings({\"unused\"})",
          "14019:     protected java.lang.Object newInstance(",
          "14020:         UnusedPrivateParameter unused) {",
          "14022:     }",
          "14024:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "13782:     private static final org.mlflow.api.proto.Service.CreateExperiment DEFAULT_INSTANCE;",
          "13784:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateExperiment();",
          "13787:     public static org.mlflow.api.proto.Service.CreateExperiment getDefaultInstance() {",
          "13791:     @java.lang.Deprecated public static final com.google.protobuf.Parser<CreateExperiment>",
          "13792:         PARSER = new com.google.protobuf.AbstractParser<CreateExperiment>() {",
          "13794:       public CreateExperiment parsePartialFrom(",
          "13798:         return new CreateExperiment(input, extensionRegistry);",
          "13802:     public static com.google.protobuf.Parser<CreateExperiment> parser() {",
          "13807:     public com.google.protobuf.Parser<CreateExperiment> getParserForType() {",
          "13812:     public org.mlflow.api.proto.Service.CreateExperiment getDefaultInstanceForType() {",
          "13818:   public interface SearchExperimentsOrBuilder extends",
          "13834:     boolean hasMaxResults();",
          "13847:     long getMaxResults();",
          "13857:     boolean hasPageToken();",
          "13866:     java.lang.String getPageToken();",
          "13875:     com.google.protobuf.ByteString",
          "13876:         getPageTokenBytes();",
          "13893:     boolean hasFilter();",
          "13909:     java.lang.String getFilter();",
          "13925:     com.google.protobuf.ByteString",
          "13926:         getFilterBytes();",
          "13938:     java.util.List<java.lang.String>",
          "13939:         getOrderByList();",
          "13950:     int getOrderByCount();",
          "13962:     java.lang.String getOrderBy(int index);",
          "13975:         getOrderByBytes(int index);",
          "13986:     boolean hasViewType();",
          "13996:     org.mlflow.api.proto.Service.ViewType getViewType();",
          "14001:   public static final class SearchExperiments extends",
          "14004:       SearchExperimentsOrBuilder {",
          "14007:     private SearchExperiments(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "14010:     private SearchExperiments() {",
          "14011:       pageToken_ = \"\";",
          "14012:       filter_ = \"\";",
          "14013:       orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "14014:       viewType_ = 1;",
          "14021:       return new SearchExperiments();",
          "",
          "[Added Lines]",
          "21679:     private static final org.mlflow.api.proto.Service.SearchExperiments DEFAULT_INSTANCE;",
          "21681:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchExperiments();",
          "21684:     public static org.mlflow.api.proto.Service.SearchExperiments getDefaultInstance() {",
          "21688:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SearchExperiments>",
          "21689:         PARSER = new com.google.protobuf.AbstractParser<SearchExperiments>() {",
          "21691:       public SearchExperiments parsePartialFrom(",
          "21695:         return new SearchExperiments(input, extensionRegistry);",
          "21699:     public static com.google.protobuf.Parser<SearchExperiments> parser() {",
          "21704:     public com.google.protobuf.Parser<SearchExperiments> getParserForType() {",
          "21709:     public org.mlflow.api.proto.Service.SearchExperiments getDefaultInstanceForType() {",
          "21715:   public interface GetExperimentOrBuilder extends",
          "21727:     boolean hasExperimentId();",
          "21736:     java.lang.String getExperimentId();",
          "21746:         getExperimentIdBytes();",
          "21751:   public static final class GetExperiment extends",
          "21754:       GetExperimentOrBuilder {",
          "21757:     private GetExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "21760:     private GetExperiment() {",
          "21761:       experimentId_ = \"\";",
          "21768:       return new GetExperiment();",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "14026:     getUnknownFields() {",
          "14027:       return this.unknownFields;",
          "14028:     }",
          "14030:         com.google.protobuf.CodedInputStream input,",
          "14031:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14032:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "14029:     private SearchExperiments(",
          "",
          "[Added Lines]",
          "21776:     private GetExperiment(",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "14045:             case 0:",
          "14046:               done = true;",
          "14047:               break;",
          "14066:               com.google.protobuf.ByteString bs = input.readBytes();",
          "14084:               break;",
          "14085:             }",
          "14086:             default: {",
          "",
          "[Removed Lines]",
          "14048:             case 8: {",
          "14049:               bitField0_ |= 0x00000001;",
          "14050:               maxResults_ = input.readInt64();",
          "14051:               break;",
          "14052:             }",
          "14053:             case 18: {",
          "14054:               com.google.protobuf.ByteString bs = input.readBytes();",
          "14055:               bitField0_ |= 0x00000002;",
          "14056:               pageToken_ = bs;",
          "14057:               break;",
          "14058:             }",
          "14059:             case 26: {",
          "14060:               com.google.protobuf.ByteString bs = input.readBytes();",
          "14061:               bitField0_ |= 0x00000004;",
          "14062:               filter_ = bs;",
          "14063:               break;",
          "14064:             }",
          "14065:             case 34: {",
          "14067:               if (!((mutable_bitField0_ & 0x00000008) != 0)) {",
          "14068:                 orderBy_ = new com.google.protobuf.LazyStringArrayList();",
          "14069:                 mutable_bitField0_ |= 0x00000008;",
          "14070:               }",
          "14071:               orderBy_.add(bs);",
          "14072:               break;",
          "14073:             }",
          "14074:             case 40: {",
          "14075:               int rawValue = input.readEnum();",
          "14076:                 @SuppressWarnings(\"deprecation\")",
          "14077:               org.mlflow.api.proto.Service.ViewType value = org.mlflow.api.proto.Service.ViewType.valueOf(rawValue);",
          "14078:               if (value == null) {",
          "14079:                 unknownFields.mergeVarintField(5, rawValue);",
          "14080:               } else {",
          "14081:                 bitField0_ |= 0x00000008;",
          "14082:                 viewType_ = rawValue;",
          "14083:               }",
          "",
          "[Added Lines]",
          "21795:             case 10: {",
          "21797:               bitField0_ |= 0x00000001;",
          "21798:               experimentId_ = bs;",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "14098:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "14099:             e).setUnfinishedMessage(this);",
          "14100:       } finally {",
          "14104:         this.unknownFields = unknownFields.build();",
          "14105:         makeExtensionsImmutable();",
          "14106:       }",
          "14107:     }",
          "14108:     public static final com.google.protobuf.Descriptors.Descriptor",
          "14109:         getDescriptor() {",
          "14111:     }",
          "14113:     @java.lang.Override",
          "14114:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "14115:         internalGetFieldAccessorTable() {",
          "14117:           .ensureFieldAccessorsInitialized(",
          "14119:     }",
          "14121:     public interface ResponseOrBuilder extends",
          "14123:         com.google.protobuf.MessageOrBuilder {",
          "14200:     }",
          "14204:     public static final class Response extends",
          "14205:         com.google.protobuf.GeneratedMessageV3 implements",
          "14207:         ResponseOrBuilder {",
          "14208:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "14101:         if (((mutable_bitField0_ & 0x00000008) != 0)) {",
          "14102:           orderBy_ = orderBy_.getUnmodifiableView();",
          "14103:         }",
          "14110:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_descriptor;",
          "14116:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_fieldAccessorTable",
          "14118:               org.mlflow.api.proto.Service.SearchExperiments.class, org.mlflow.api.proto.Service.SearchExperiments.Builder.class);",
          "14132:       java.util.List<org.mlflow.api.proto.Service.Experiment>",
          "14133:           getExperimentsList();",
          "14141:       org.mlflow.api.proto.Service.Experiment getExperiments(int index);",
          "14149:       int getExperimentsCount();",
          "14157:       java.util.List<? extends org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "14158:           getExperimentsOrBuilderList();",
          "14166:       org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentsOrBuilder(",
          "14167:           int index);",
          "14178:       boolean hasNextPageToken();",
          "14188:       java.lang.String getNextPageToken();",
          "14198:       com.google.protobuf.ByteString",
          "14199:           getNextPageTokenBytes();",
          "",
          "[Added Lines]",
          "21822:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_descriptor;",
          "21828:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_fieldAccessorTable",
          "21830:               org.mlflow.api.proto.Service.GetExperiment.class, org.mlflow.api.proto.Service.GetExperiment.Builder.class);",
          "21845:       boolean hasExperiment();",
          "21854:       org.mlflow.api.proto.Service.Experiment getExperiment();",
          "21862:       org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentOrBuilder();",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "14211:         super(builder);",
          "14212:       }",
          "14213:       private Response() {",
          "14216:       }",
          "14218:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "14214:         experiments_ = java.util.Collections.emptyList();",
          "14215:         nextPageToken_ = \"\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "14247:                 done = true;",
          "14248:                 break;",
          "14249:               case 10: {",
          "14253:                 }",
          "14260:                 bitField0_ |= 0x00000001;",
          "14262:                 break;",
          "14263:               }",
          "14264:               default: {",
          "",
          "[Removed Lines]",
          "14250:                 if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "14251:                   experiments_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Experiment>();",
          "14252:                   mutable_bitField0_ |= 0x00000001;",
          "14254:                 experiments_.add(",
          "14255:                     input.readMessage(org.mlflow.api.proto.Service.Experiment.PARSER, extensionRegistry));",
          "14256:                 break;",
          "14257:               }",
          "14258:               case 18: {",
          "14259:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "14261:                 nextPageToken_ = bs;",
          "",
          "[Added Lines]",
          "21911:                 org.mlflow.api.proto.Service.Experiment.Builder subBuilder = null;",
          "21912:                 if (((bitField0_ & 0x00000001) != 0)) {",
          "21913:                   subBuilder = experiment_.toBuilder();",
          "21914:                 }",
          "21915:                 experiment_ = input.readMessage(org.mlflow.api.proto.Service.Experiment.PARSER, extensionRegistry);",
          "21916:                 if (subBuilder != null) {",
          "21917:                   subBuilder.mergeFrom(experiment_);",
          "21918:                   experiment_ = subBuilder.buildPartial();",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "14276:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "14277:               e).setUnfinishedMessage(this);",
          "14278:         } finally {",
          "14282:           this.unknownFields = unknownFields.build();",
          "14283:           makeExtensionsImmutable();",
          "14335:       }",
          "14346:       }",
          "14354:       @java.lang.Override",
          "14358:       }",
          "14371:       @java.lang.Override",
          "14373:         return ((bitField0_ & 0x00000001) != 0);",
          "14374:       }",
          "14384:       @java.lang.Override",
          "14398:       }",
          "14408:       @java.lang.Override",
          "14421:       }",
          "14423:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "14279:           if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "14280:             experiments_ = java.util.Collections.unmodifiableList(experiments_);",
          "14281:           }",
          "14284:         }",
          "14285:       }",
          "14286:       public static final com.google.protobuf.Descriptors.Descriptor",
          "14287:           getDescriptor() {",
          "14288:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_descriptor;",
          "14289:       }",
          "14291:       @java.lang.Override",
          "14292:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "14293:           internalGetFieldAccessorTable() {",
          "14294:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_fieldAccessorTable",
          "14295:             .ensureFieldAccessorsInitialized(",
          "14296:                 org.mlflow.api.proto.Service.SearchExperiments.Response.class, org.mlflow.api.proto.Service.SearchExperiments.Response.Builder.class);",
          "14297:       }",
          "14299:       private int bitField0_;",
          "14300:       public static final int EXPERIMENTS_FIELD_NUMBER = 1;",
          "14301:       private java.util.List<org.mlflow.api.proto.Service.Experiment> experiments_;",
          "14309:       @java.lang.Override",
          "14310:       public java.util.List<org.mlflow.api.proto.Service.Experiment> getExperimentsList() {",
          "14311:         return experiments_;",
          "14312:       }",
          "14320:       @java.lang.Override",
          "14321:       public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "14322:           getExperimentsOrBuilderList() {",
          "14323:         return experiments_;",
          "14324:       }",
          "14332:       @java.lang.Override",
          "14333:       public int getExperimentsCount() {",
          "14334:         return experiments_.size();",
          "14343:       @java.lang.Override",
          "14344:       public org.mlflow.api.proto.Service.Experiment getExperiments(int index) {",
          "14345:         return experiments_.get(index);",
          "14355:       public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentsOrBuilder(",
          "14356:           int index) {",
          "14357:         return experiments_.get(index);",
          "14360:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;",
          "14361:       private volatile java.lang.Object nextPageToken_;",
          "14372:       public boolean hasNextPageToken() {",
          "14385:       public java.lang.String getNextPageToken() {",
          "14386:         java.lang.Object ref = nextPageToken_;",
          "14387:         if (ref instanceof java.lang.String) {",
          "14388:           return (java.lang.String) ref;",
          "14389:         } else {",
          "14390:           com.google.protobuf.ByteString bs =",
          "14391:               (com.google.protobuf.ByteString) ref;",
          "14392:           java.lang.String s = bs.toStringUtf8();",
          "14393:           if (bs.isValidUtf8()) {",
          "14394:             nextPageToken_ = s;",
          "14395:           }",
          "14396:           return s;",
          "14397:         }",
          "14409:       public com.google.protobuf.ByteString",
          "14410:           getNextPageTokenBytes() {",
          "14411:         java.lang.Object ref = nextPageToken_;",
          "14412:         if (ref instanceof java.lang.String) {",
          "14413:           com.google.protobuf.ByteString b =",
          "14414:               com.google.protobuf.ByteString.copyFromUtf8(",
          "14415:                   (java.lang.String) ref);",
          "14416:           nextPageToken_ = b;",
          "14417:           return b;",
          "14418:         } else {",
          "14419:           return (com.google.protobuf.ByteString) ref;",
          "14420:         }",
          "",
          "[Added Lines]",
          "21940:         }",
          "21942:       public static final com.google.protobuf.Descriptors.Descriptor",
          "21943:           getDescriptor() {",
          "21944:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_descriptor;",
          "21948:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "21949:           internalGetFieldAccessorTable() {",
          "21950:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_fieldAccessorTable",
          "21951:             .ensureFieldAccessorsInitialized(",
          "21952:                 org.mlflow.api.proto.Service.GetExperiment.Response.class, org.mlflow.api.proto.Service.GetExperiment.Response.Builder.class);",
          "21955:       private int bitField0_;",
          "21956:       public static final int EXPERIMENT_FIELD_NUMBER = 1;",
          "21957:       private org.mlflow.api.proto.Service.Experiment experiment_;",
          "21967:       public boolean hasExperiment() {",
          "21979:       public org.mlflow.api.proto.Service.Experiment getExperiment() {",
          "21980:         return experiment_ == null ? org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "21990:       public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentOrBuilder() {",
          "21991:         return experiment_ == null ? org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "14434:       @java.lang.Override",
          "14435:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "14436:                           throws java.io.IOException {",
          "14440:         if (((bitField0_ & 0x00000001) != 0)) {",
          "14442:         }",
          "14443:         unknownFields.writeTo(output);",
          "14444:       }",
          "",
          "[Removed Lines]",
          "14437:         for (int i = 0; i < experiments_.size(); i++) {",
          "14438:           output.writeMessage(1, experiments_.get(i));",
          "14439:         }",
          "14441:           com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);",
          "",
          "[Added Lines]",
          "22009:           output.writeMessage(1, getExperiment());",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "14449:         if (size != -1) return size;",
          "14451:         size = 0;",
          "14456:         if (((bitField0_ & 0x00000001) != 0)) {",
          "14458:         }",
          "14459:         size += unknownFields.getSerializedSize();",
          "14460:         memoizedSize = size;",
          "",
          "[Removed Lines]",
          "14452:         for (int i = 0; i < experiments_.size(); i++) {",
          "14453:           size += com.google.protobuf.CodedOutputStream",
          "14454:             .computeMessageSize(1, experiments_.get(i));",
          "14455:         }",
          "14457:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);",
          "",
          "[Added Lines]",
          "22021:           size += com.google.protobuf.CodedOutputStream",
          "22022:             .computeMessageSize(1, getExperiment());",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "14466:         if (obj == this) {",
          "14467:          return true;",
          "14468:         }",
          "14470:           return super.equals(obj);",
          "14471:         }",
          "14480:         }",
          "14481:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "14482:         return true;",
          "",
          "[Removed Lines]",
          "14469:         if (!(obj instanceof org.mlflow.api.proto.Service.SearchExperiments.Response)) {",
          "14472:         org.mlflow.api.proto.Service.SearchExperiments.Response other = (org.mlflow.api.proto.Service.SearchExperiments.Response) obj;",
          "14474:         if (!getExperimentsList()",
          "14475:             .equals(other.getExperimentsList())) return false;",
          "14476:         if (hasNextPageToken() != other.hasNextPageToken()) return false;",
          "14477:         if (hasNextPageToken()) {",
          "14478:           if (!getNextPageToken()",
          "14479:               .equals(other.getNextPageToken())) return false;",
          "",
          "[Added Lines]",
          "22034:         if (!(obj instanceof org.mlflow.api.proto.Service.GetExperiment.Response)) {",
          "22037:         org.mlflow.api.proto.Service.GetExperiment.Response other = (org.mlflow.api.proto.Service.GetExperiment.Response) obj;",
          "22039:         if (hasExperiment() != other.hasExperiment()) return false;",
          "22040:         if (hasExperiment()) {",
          "22041:           if (!getExperiment()",
          "22042:               .equals(other.getExperiment())) return false;",
          "",
          "---------------",
          "--- Hunk 142 ---",
          "[Context before]",
          "14489:         }",
          "14490:         int hash = 41;",
          "14491:         hash = (19 * hash) + getDescriptor().hashCode();",
          "14499:         }",
          "14500:         hash = (29 * hash) + unknownFields.hashCode();",
          "14501:         memoizedHashCode = hash;",
          "14502:         return hash;",
          "14503:       }",
          "14506:           java.nio.ByteBuffer data)",
          "14507:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14508:         return PARSER.parseFrom(data);",
          "14509:       }",
          "14511:           java.nio.ByteBuffer data,",
          "14512:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14513:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14514:         return PARSER.parseFrom(data, extensionRegistry);",
          "14515:       }",
          "14517:           com.google.protobuf.ByteString data)",
          "14518:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14519:         return PARSER.parseFrom(data);",
          "14520:       }",
          "14522:           com.google.protobuf.ByteString data,",
          "14523:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14524:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14525:         return PARSER.parseFrom(data, extensionRegistry);",
          "14526:       }",
          "14528:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14529:         return PARSER.parseFrom(data);",
          "14530:       }",
          "14532:           byte[] data,",
          "14533:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14534:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "14535:         return PARSER.parseFrom(data, extensionRegistry);",
          "14536:       }",
          "14538:           throws java.io.IOException {",
          "14539:         return com.google.protobuf.GeneratedMessageV3",
          "14540:             .parseWithIOException(PARSER, input);",
          "14541:       }",
          "14543:           java.io.InputStream input,",
          "14544:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14545:           throws java.io.IOException {",
          "14546:         return com.google.protobuf.GeneratedMessageV3",
          "14547:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "14548:       }",
          "14550:           throws java.io.IOException {",
          "14551:         return com.google.protobuf.GeneratedMessageV3",
          "14552:             .parseDelimitedWithIOException(PARSER, input);",
          "14553:       }",
          "14555:           java.io.InputStream input,",
          "14556:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14557:           throws java.io.IOException {",
          "14558:         return com.google.protobuf.GeneratedMessageV3",
          "14559:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "14560:       }",
          "14562:           com.google.protobuf.CodedInputStream input)",
          "14563:           throws java.io.IOException {",
          "14564:         return com.google.protobuf.GeneratedMessageV3",
          "14565:             .parseWithIOException(PARSER, input);",
          "14566:       }",
          "14568:           com.google.protobuf.CodedInputStream input,",
          "14569:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14570:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "14492:         if (getExperimentsCount() > 0) {",
          "14493:           hash = (37 * hash) + EXPERIMENTS_FIELD_NUMBER;",
          "14494:           hash = (53 * hash) + getExperimentsList().hashCode();",
          "14495:         }",
          "14496:         if (hasNextPageToken()) {",
          "14497:           hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;",
          "14498:           hash = (53 * hash) + getNextPageToken().hashCode();",
          "14505:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "14510:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "14516:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "14521:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "14527:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(byte[] data)",
          "14531:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "14537:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(java.io.InputStream input)",
          "14542:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "14549:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseDelimitedFrom(java.io.InputStream input)",
          "14554:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseDelimitedFrom(",
          "14561:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "14567:       public static org.mlflow.api.proto.Service.SearchExperiments.Response parseFrom(",
          "",
          "[Added Lines]",
          "22055:         if (hasExperiment()) {",
          "22056:           hash = (37 * hash) + EXPERIMENT_FIELD_NUMBER;",
          "22057:           hash = (53 * hash) + getExperiment().hashCode();",
          "22064:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "22069:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "22075:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "22080:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "22086:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(byte[] data)",
          "22090:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "22096:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(java.io.InputStream input)",
          "22101:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "22108:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "22113:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseDelimitedFrom(",
          "22120:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "22126:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 143 ---",
          "[Context before]",
          "14577:       public static Builder newBuilder() {",
          "14578:         return DEFAULT_INSTANCE.toBuilder();",
          "14579:       }",
          "14581:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "14582:       }",
          "14583:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "14580:       public static Builder newBuilder(org.mlflow.api.proto.Service.SearchExperiments.Response prototype) {",
          "",
          "[Added Lines]",
          "22139:       public static Builder newBuilder(org.mlflow.api.proto.Service.GetExperiment.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 144 ---",
          "[Context before]",
          "14593:         return builder;",
          "14594:       }",
          "14598:       public static final class Builder extends",
          "14599:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "14602:         public static final com.google.protobuf.Descriptors.Descriptor",
          "14603:             getDescriptor() {",
          "14605:         }",
          "14607:         @java.lang.Override",
          "14608:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "14609:             internalGetFieldAccessorTable() {",
          "14611:               .ensureFieldAccessorsInitialized(",
          "14613:         }",
          "14616:         private Builder() {",
          "14617:           maybeForceBuilderInitialization();",
          "14618:         }",
          "",
          "[Removed Lines]",
          "14601:           org.mlflow.api.proto.Service.SearchExperiments.ResponseOrBuilder {",
          "14604:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_descriptor;",
          "14610:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_fieldAccessorTable",
          "14612:                   org.mlflow.api.proto.Service.SearchExperiments.Response.class, org.mlflow.api.proto.Service.SearchExperiments.Response.Builder.class);",
          "",
          "[Added Lines]",
          "22160:           org.mlflow.api.proto.Service.GetExperiment.ResponseOrBuilder {",
          "22163:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_descriptor;",
          "22169:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_fieldAccessorTable",
          "22171:                   org.mlflow.api.proto.Service.GetExperiment.Response.class, org.mlflow.api.proto.Service.GetExperiment.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 145 ---",
          "[Context before]",
          "14625:         private void maybeForceBuilderInitialization() {",
          "14626:           if (com.google.protobuf.GeneratedMessageV3",
          "14627:                   .alwaysUseFieldBuilders) {",
          "14629:           }",
          "14630:         }",
          "14631:         @java.lang.Override",
          "14632:         public Builder clear() {",
          "14633:           super.clear();",
          "14637:           } else {",
          "14639:           }",
          "14642:           return this;",
          "14643:         }",
          "14645:         @java.lang.Override",
          "14646:         public com.google.protobuf.Descriptors.Descriptor",
          "14647:             getDescriptorForType() {",
          "14649:         }",
          "14651:         @java.lang.Override",
          "14654:         }",
          "14656:         @java.lang.Override",
          "14659:           if (!result.isInitialized()) {",
          "14660:             throw newUninitializedMessageException(result);",
          "14661:           }",
          "",
          "[Removed Lines]",
          "14628:             getExperimentsFieldBuilder();",
          "14634:           if (experimentsBuilder_ == null) {",
          "14635:             experiments_ = java.util.Collections.emptyList();",
          "14636:             bitField0_ = (bitField0_ & ~0x00000001);",
          "14638:             experimentsBuilder_.clear();",
          "14640:           nextPageToken_ = \"\";",
          "14641:           bitField0_ = (bitField0_ & ~0x00000002);",
          "14648:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_Response_descriptor;",
          "14652:         public org.mlflow.api.proto.Service.SearchExperiments.Response getDefaultInstanceForType() {",
          "14653:           return org.mlflow.api.proto.Service.SearchExperiments.Response.getDefaultInstance();",
          "14657:         public org.mlflow.api.proto.Service.SearchExperiments.Response build() {",
          "14658:           org.mlflow.api.proto.Service.SearchExperiments.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "22187:             getExperimentFieldBuilder();",
          "22193:           if (experimentBuilder_ == null) {",
          "22194:             experiment_ = null;",
          "22196:             experimentBuilder_.clear();",
          "22198:           bitField0_ = (bitField0_ & ~0x00000001);",
          "22205:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_descriptor;",
          "22209:         public org.mlflow.api.proto.Service.GetExperiment.Response getDefaultInstanceForType() {",
          "22210:           return org.mlflow.api.proto.Service.GetExperiment.Response.getDefaultInstance();",
          "22214:         public org.mlflow.api.proto.Service.GetExperiment.Response build() {",
          "22215:           org.mlflow.api.proto.Service.GetExperiment.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 146 ---",
          "[Context before]",
          "14663:         }",
          "14665:         @java.lang.Override",
          "14668:           int from_bitField0_ = bitField0_;",
          "14669:           int to_bitField0_ = 0;",
          "14674:             }",
          "14680:             to_bitField0_ |= 0x00000001;",
          "14681:           }",
          "14683:           result.bitField0_ = to_bitField0_;",
          "14684:           onBuilt();",
          "14685:           return result;",
          "",
          "[Removed Lines]",
          "14666:         public org.mlflow.api.proto.Service.SearchExperiments.Response buildPartial() {",
          "14667:           org.mlflow.api.proto.Service.SearchExperiments.Response result = new org.mlflow.api.proto.Service.SearchExperiments.Response(this);",
          "14670:           if (experimentsBuilder_ == null) {",
          "14671:             if (((bitField0_ & 0x00000001) != 0)) {",
          "14672:               experiments_ = java.util.Collections.unmodifiableList(experiments_);",
          "14673:               bitField0_ = (bitField0_ & ~0x00000001);",
          "14675:             result.experiments_ = experiments_;",
          "14676:           } else {",
          "14677:             result.experiments_ = experimentsBuilder_.build();",
          "14678:           }",
          "14679:           if (((from_bitField0_ & 0x00000002) != 0)) {",
          "14682:           result.nextPageToken_ = nextPageToken_;",
          "",
          "[Added Lines]",
          "22223:         public org.mlflow.api.proto.Service.GetExperiment.Response buildPartial() {",
          "22224:           org.mlflow.api.proto.Service.GetExperiment.Response result = new org.mlflow.api.proto.Service.GetExperiment.Response(this);",
          "22227:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "22228:             if (experimentBuilder_ == null) {",
          "22229:               result.experiment_ = experiment_;",
          "22230:             } else {",
          "22231:               result.experiment_ = experimentBuilder_.build();",
          "",
          "---------------",
          "--- Hunk 147 ---",
          "[Context before]",
          "14719:         }",
          "14720:         @java.lang.Override",
          "14721:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "14724:           } else {",
          "14725:             super.mergeFrom(other);",
          "14726:             return this;",
          "14727:           }",
          "14728:         }",
          "14762:           }",
          "14763:           this.mergeUnknownFields(other.unknownFields);",
          "14764:           onChanged();",
          "",
          "[Removed Lines]",
          "14722:           if (other instanceof org.mlflow.api.proto.Service.SearchExperiments.Response) {",
          "14723:             return mergeFrom((org.mlflow.api.proto.Service.SearchExperiments.Response)other);",
          "14730:         public Builder mergeFrom(org.mlflow.api.proto.Service.SearchExperiments.Response other) {",
          "14731:           if (other == org.mlflow.api.proto.Service.SearchExperiments.Response.getDefaultInstance()) return this;",
          "14732:           if (experimentsBuilder_ == null) {",
          "14733:             if (!other.experiments_.isEmpty()) {",
          "14734:               if (experiments_.isEmpty()) {",
          "14735:                 experiments_ = other.experiments_;",
          "14736:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "14737:               } else {",
          "14738:                 ensureExperimentsIsMutable();",
          "14739:                 experiments_.addAll(other.experiments_);",
          "14740:               }",
          "14741:               onChanged();",
          "14742:             }",
          "14743:           } else {",
          "14744:             if (!other.experiments_.isEmpty()) {",
          "14745:               if (experimentsBuilder_.isEmpty()) {",
          "14746:                 experimentsBuilder_.dispose();",
          "14747:                 experimentsBuilder_ = null;",
          "14748:                 experiments_ = other.experiments_;",
          "14749:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "14750:                 experimentsBuilder_ =",
          "14751:                   com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "14752:                      getExperimentsFieldBuilder() : null;",
          "14753:               } else {",
          "14754:                 experimentsBuilder_.addAllMessages(other.experiments_);",
          "14755:               }",
          "14756:             }",
          "14757:           }",
          "14758:           if (other.hasNextPageToken()) {",
          "14759:             bitField0_ |= 0x00000002;",
          "14760:             nextPageToken_ = other.nextPageToken_;",
          "14761:             onChanged();",
          "",
          "[Added Lines]",
          "22274:           if (other instanceof org.mlflow.api.proto.Service.GetExperiment.Response) {",
          "22275:             return mergeFrom((org.mlflow.api.proto.Service.GetExperiment.Response)other);",
          "22282:         public Builder mergeFrom(org.mlflow.api.proto.Service.GetExperiment.Response other) {",
          "22283:           if (other == org.mlflow.api.proto.Service.GetExperiment.Response.getDefaultInstance()) return this;",
          "22284:           if (other.hasExperiment()) {",
          "22285:             mergeExperiment(other.getExperiment());",
          "",
          "---------------",
          "--- Hunk 148 ---",
          "[Context before]",
          "14775:             com.google.protobuf.CodedInputStream input,",
          "14776:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "14777:             throws java.io.IOException {",
          "14779:           try {",
          "14780:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "14781:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "14783:             throw e.unwrapIOException();",
          "14784:           } finally {",
          "14785:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "14778:           org.mlflow.api.proto.Service.SearchExperiments.Response parsedMessage = null;",
          "14782:             parsedMessage = (org.mlflow.api.proto.Service.SearchExperiments.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "22302:           org.mlflow.api.proto.Service.GetExperiment.Response parsedMessage = null;",
          "22306:             parsedMessage = (org.mlflow.api.proto.Service.GetExperiment.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 149 ---",
          "[Context before]",
          "14788:           }",
          "14789:           return this;",
          "14790:         }",
          "15066:         }",
          "15078:         }",
          "15101:           }",
          "15103:         }",
          "15117:         }",
          "15135:             }",
          "15137:           } else {",
          "15139:           }",
          "15140:         }",
          "15159:           } else {",
          "15161:           }",
          "15162:         }",
          "15180:           onChanged();",
          "15182:         }",
          "15197:         }",
          "15217:         }",
          "15218:         @java.lang.Override",
          "15219:         public final Builder setUnknownFields(",
          "",
          "[Removed Lines]",
          "14791:         private int bitField0_;",
          "14793:         private java.util.List<org.mlflow.api.proto.Service.Experiment> experiments_ =",
          "14794:           java.util.Collections.emptyList();",
          "14795:         private void ensureExperimentsIsMutable() {",
          "14796:           if (!((bitField0_ & 0x00000001) != 0)) {",
          "14797:             experiments_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Experiment>(experiments_);",
          "14798:             bitField0_ |= 0x00000001;",
          "14799:            }",
          "14800:         }",
          "14802:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "14803:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder> experimentsBuilder_;",
          "14812:         public java.util.List<org.mlflow.api.proto.Service.Experiment> getExperimentsList() {",
          "14813:           if (experimentsBuilder_ == null) {",
          "14814:             return java.util.Collections.unmodifiableList(experiments_);",
          "14815:           } else {",
          "14816:             return experimentsBuilder_.getMessageList();",
          "14817:           }",
          "14818:         }",
          "14826:         public int getExperimentsCount() {",
          "14827:           if (experimentsBuilder_ == null) {",
          "14828:             return experiments_.size();",
          "14829:           } else {",
          "14830:             return experimentsBuilder_.getCount();",
          "14831:           }",
          "14832:         }",
          "14840:         public org.mlflow.api.proto.Service.Experiment getExperiments(int index) {",
          "14841:           if (experimentsBuilder_ == null) {",
          "14842:             return experiments_.get(index);",
          "14843:           } else {",
          "14844:             return experimentsBuilder_.getMessage(index);",
          "14845:           }",
          "14846:         }",
          "14854:         public Builder setExperiments(",
          "14855:             int index, org.mlflow.api.proto.Service.Experiment value) {",
          "14856:           if (experimentsBuilder_ == null) {",
          "14857:             if (value == null) {",
          "14858:               throw new NullPointerException();",
          "14859:             }",
          "14860:             ensureExperimentsIsMutable();",
          "14861:             experiments_.set(index, value);",
          "14862:             onChanged();",
          "14863:           } else {",
          "14864:             experimentsBuilder_.setMessage(index, value);",
          "14865:           }",
          "14866:           return this;",
          "14867:         }",
          "14875:         public Builder setExperiments(",
          "14876:             int index, org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "14877:           if (experimentsBuilder_ == null) {",
          "14878:             ensureExperimentsIsMutable();",
          "14879:             experiments_.set(index, builderForValue.build());",
          "14880:             onChanged();",
          "14881:           } else {",
          "14882:             experimentsBuilder_.setMessage(index, builderForValue.build());",
          "14883:           }",
          "14884:           return this;",
          "14885:         }",
          "14893:         public Builder addExperiments(org.mlflow.api.proto.Service.Experiment value) {",
          "14894:           if (experimentsBuilder_ == null) {",
          "14895:             if (value == null) {",
          "14896:               throw new NullPointerException();",
          "14897:             }",
          "14898:             ensureExperimentsIsMutable();",
          "14899:             experiments_.add(value);",
          "14900:             onChanged();",
          "14901:           } else {",
          "14902:             experimentsBuilder_.addMessage(value);",
          "14903:           }",
          "14904:           return this;",
          "14905:         }",
          "14913:         public Builder addExperiments(",
          "14914:             int index, org.mlflow.api.proto.Service.Experiment value) {",
          "14915:           if (experimentsBuilder_ == null) {",
          "14916:             if (value == null) {",
          "14917:               throw new NullPointerException();",
          "14918:             }",
          "14919:             ensureExperimentsIsMutable();",
          "14920:             experiments_.add(index, value);",
          "14921:             onChanged();",
          "14922:           } else {",
          "14923:             experimentsBuilder_.addMessage(index, value);",
          "14924:           }",
          "14925:           return this;",
          "14926:         }",
          "14934:         public Builder addExperiments(",
          "14935:             org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "14936:           if (experimentsBuilder_ == null) {",
          "14937:             ensureExperimentsIsMutable();",
          "14938:             experiments_.add(builderForValue.build());",
          "14939:             onChanged();",
          "14940:           } else {",
          "14941:             experimentsBuilder_.addMessage(builderForValue.build());",
          "14942:           }",
          "14943:           return this;",
          "14944:         }",
          "14952:         public Builder addExperiments(",
          "14953:             int index, org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "14954:           if (experimentsBuilder_ == null) {",
          "14955:             ensureExperimentsIsMutable();",
          "14956:             experiments_.add(index, builderForValue.build());",
          "14957:             onChanged();",
          "14958:           } else {",
          "14959:             experimentsBuilder_.addMessage(index, builderForValue.build());",
          "14960:           }",
          "14961:           return this;",
          "14962:         }",
          "14970:         public Builder addAllExperiments(",
          "14971:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.Experiment> values) {",
          "14972:           if (experimentsBuilder_ == null) {",
          "14973:             ensureExperimentsIsMutable();",
          "14974:             com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "14975:                 values, experiments_);",
          "14976:             onChanged();",
          "14977:           } else {",
          "14978:             experimentsBuilder_.addAllMessages(values);",
          "14979:           }",
          "14980:           return this;",
          "14981:         }",
          "14989:         public Builder clearExperiments() {",
          "14990:           if (experimentsBuilder_ == null) {",
          "14991:             experiments_ = java.util.Collections.emptyList();",
          "14992:             bitField0_ = (bitField0_ & ~0x00000001);",
          "14993:             onChanged();",
          "14994:           } else {",
          "14995:             experimentsBuilder_.clear();",
          "14996:           }",
          "14997:           return this;",
          "14998:         }",
          "15006:         public Builder removeExperiments(int index) {",
          "15007:           if (experimentsBuilder_ == null) {",
          "15008:             ensureExperimentsIsMutable();",
          "15009:             experiments_.remove(index);",
          "15010:             onChanged();",
          "15011:           } else {",
          "15012:             experimentsBuilder_.remove(index);",
          "15013:           }",
          "15014:           return this;",
          "15015:         }",
          "15023:         public org.mlflow.api.proto.Service.Experiment.Builder getExperimentsBuilder(",
          "15024:             int index) {",
          "15025:           return getExperimentsFieldBuilder().getBuilder(index);",
          "15026:         }",
          "15034:         public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentsOrBuilder(",
          "15035:             int index) {",
          "15036:           if (experimentsBuilder_ == null) {",
          "15037:             return experiments_.get(index);  } else {",
          "15038:             return experimentsBuilder_.getMessageOrBuilder(index);",
          "15039:           }",
          "15040:         }",
          "15048:         public java.util.List<? extends org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "15049:              getExperimentsOrBuilderList() {",
          "15050:           if (experimentsBuilder_ != null) {",
          "15051:             return experimentsBuilder_.getMessageOrBuilderList();",
          "15052:           } else {",
          "15053:             return java.util.Collections.unmodifiableList(experiments_);",
          "15054:           }",
          "15055:         }",
          "15063:         public org.mlflow.api.proto.Service.Experiment.Builder addExperimentsBuilder() {",
          "15064:           return getExperimentsFieldBuilder().addBuilder(",
          "15065:               org.mlflow.api.proto.Service.Experiment.getDefaultInstance());",
          "15074:         public org.mlflow.api.proto.Service.Experiment.Builder addExperimentsBuilder(",
          "15075:             int index) {",
          "15076:           return getExperimentsFieldBuilder().addBuilder(",
          "15077:               index, org.mlflow.api.proto.Service.Experiment.getDefaultInstance());",
          "15086:         public java.util.List<org.mlflow.api.proto.Service.Experiment.Builder>",
          "15087:              getExperimentsBuilderList() {",
          "15088:           return getExperimentsFieldBuilder().getBuilderList();",
          "15089:         }",
          "15090:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "15091:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "15092:             getExperimentsFieldBuilder() {",
          "15093:           if (experimentsBuilder_ == null) {",
          "15094:             experimentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "15095:                 org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>(",
          "15096:                     experiments_,",
          "15097:                     ((bitField0_ & 0x00000001) != 0),",
          "15098:                     getParentForChildren(),",
          "15099:                     isClean());",
          "15100:             experiments_ = null;",
          "15102:           return experimentsBuilder_;",
          "15105:         private java.lang.Object nextPageToken_ = \"\";",
          "15115:         public boolean hasNextPageToken() {",
          "15116:           return ((bitField0_ & 0x00000002) != 0);",
          "15127:         public java.lang.String getNextPageToken() {",
          "15128:           java.lang.Object ref = nextPageToken_;",
          "15129:           if (!(ref instanceof java.lang.String)) {",
          "15130:             com.google.protobuf.ByteString bs =",
          "15131:                 (com.google.protobuf.ByteString) ref;",
          "15132:             java.lang.String s = bs.toStringUtf8();",
          "15133:             if (bs.isValidUtf8()) {",
          "15134:               nextPageToken_ = s;",
          "15136:             return s;",
          "15138:             return (java.lang.String) ref;",
          "15150:         public com.google.protobuf.ByteString",
          "15151:             getNextPageTokenBytes() {",
          "15152:           java.lang.Object ref = nextPageToken_;",
          "15153:           if (ref instanceof String) {",
          "15154:             com.google.protobuf.ByteString b =",
          "15155:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "15156:                     (java.lang.String) ref);",
          "15157:             nextPageToken_ = b;",
          "15158:             return b;",
          "15160:             return (com.google.protobuf.ByteString) ref;",
          "15173:         public Builder setNextPageToken(",
          "15174:             java.lang.String value) {",
          "15175:           if (value == null) {",
          "15176:     throw new NullPointerException();",
          "15177:   }",
          "15178:   bitField0_ |= 0x00000002;",
          "15179:           nextPageToken_ = value;",
          "15181:           return this;",
          "15192:         public Builder clearNextPageToken() {",
          "15193:           bitField0_ = (bitField0_ & ~0x00000002);",
          "15194:           nextPageToken_ = getDefaultInstance().getNextPageToken();",
          "15195:           onChanged();",
          "15196:           return this;",
          "15208:         public Builder setNextPageTokenBytes(",
          "15209:             com.google.protobuf.ByteString value) {",
          "15210:           if (value == null) {",
          "15211:     throw new NullPointerException();",
          "15212:   }",
          "15213:   bitField0_ |= 0x00000002;",
          "15214:           nextPageToken_ = value;",
          "15215:           onChanged();",
          "15216:           return this;",
          "",
          "[Added Lines]",
          "22315:         private int bitField0_;",
          "22317:         private org.mlflow.api.proto.Service.Experiment experiment_;",
          "22318:         private com.google.protobuf.SingleFieldBuilderV3<",
          "22319:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder> experimentBuilder_;",
          "22328:         public boolean hasExperiment() {",
          "22329:           return ((bitField0_ & 0x00000001) != 0);",
          "22339:         public org.mlflow.api.proto.Service.Experiment getExperiment() {",
          "22340:           if (experimentBuilder_ == null) {",
          "22341:             return experiment_ == null ? org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "22342:           } else {",
          "22343:             return experimentBuilder_.getMessage();",
          "22344:           }",
          "22353:         public Builder setExperiment(org.mlflow.api.proto.Service.Experiment value) {",
          "22354:           if (experimentBuilder_ == null) {",
          "22355:             if (value == null) {",
          "22356:               throw new NullPointerException();",
          "22357:             }",
          "22358:             experiment_ = value;",
          "22359:             onChanged();",
          "22360:           } else {",
          "22361:             experimentBuilder_.setMessage(value);",
          "22363:           bitField0_ |= 0x00000001;",
          "22364:           return this;",
          "22373:         public Builder setExperiment(",
          "22374:             org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "22375:           if (experimentBuilder_ == null) {",
          "22376:             experiment_ = builderForValue.build();",
          "22377:             onChanged();",
          "22378:           } else {",
          "22379:             experimentBuilder_.setMessage(builderForValue.build());",
          "22380:           }",
          "22381:           bitField0_ |= 0x00000001;",
          "22382:           return this;",
          "22391:         public Builder mergeExperiment(org.mlflow.api.proto.Service.Experiment value) {",
          "22392:           if (experimentBuilder_ == null) {",
          "22393:             if (((bitField0_ & 0x00000001) != 0) &&",
          "22394:                 experiment_ != null &&",
          "22395:                 experiment_ != org.mlflow.api.proto.Service.Experiment.getDefaultInstance()) {",
          "22396:               experiment_ =",
          "22397:                 org.mlflow.api.proto.Service.Experiment.newBuilder(experiment_).mergeFrom(value).buildPartial();",
          "22398:             } else {",
          "22399:               experiment_ = value;",
          "22401:             onChanged();",
          "22403:             experimentBuilder_.mergeFrom(value);",
          "22405:           bitField0_ |= 0x00000001;",
          "22406:           return this;",
          "22415:         public Builder clearExperiment() {",
          "22416:           if (experimentBuilder_ == null) {",
          "22417:             experiment_ = null;",
          "22418:             onChanged();",
          "22420:             experimentBuilder_.clear();",
          "22422:           bitField0_ = (bitField0_ & ~0x00000001);",
          "22423:           return this;",
          "22432:         public org.mlflow.api.proto.Service.Experiment.Builder getExperimentBuilder() {",
          "22433:           bitField0_ |= 0x00000001;",
          "22435:           return getExperimentFieldBuilder().getBuilder();",
          "22444:         public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentOrBuilder() {",
          "22445:           if (experimentBuilder_ != null) {",
          "22446:             return experimentBuilder_.getMessageOrBuilder();",
          "22447:           } else {",
          "22448:             return experiment_ == null ?",
          "22449:                 org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "22450:           }",
          "22459:         private com.google.protobuf.SingleFieldBuilderV3<",
          "22460:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "22461:             getExperimentFieldBuilder() {",
          "22462:           if (experimentBuilder_ == null) {",
          "22463:             experimentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "22464:                 org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>(",
          "22465:                     getExperiment(),",
          "22466:                     getParentForChildren(),",
          "22467:                     isClean());",
          "22468:             experiment_ = null;",
          "22469:           }",
          "22470:           return experimentBuilder_;",
          "",
          "---------------",
          "--- Hunk 150 ---",
          "[Context before]",
          "15228:         }",
          "15232:       }",
          "15236:       static {",
          "15238:       }",
          "15241:         return DEFAULT_INSTANCE;",
          "15242:       }",
          "",
          "[Removed Lines]",
          "15235:       private static final org.mlflow.api.proto.Service.SearchExperiments.Response DEFAULT_INSTANCE;",
          "15237:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchExperiments.Response();",
          "15240:       public static org.mlflow.api.proto.Service.SearchExperiments.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "22489:       private static final org.mlflow.api.proto.Service.GetExperiment.Response DEFAULT_INSTANCE;",
          "22491:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetExperiment.Response();",
          "22494:       public static org.mlflow.api.proto.Service.GetExperiment.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 151 ---",
          "[Context before]",
          "15262:       }",
          "15264:       @java.lang.Override",
          "15266:         return DEFAULT_INSTANCE;",
          "15267:       }",
          "15269:     }",
          "15271:     private int bitField0_;",
          "15286:     @java.lang.Override",
          "15288:       return ((bitField0_ & 0x00000001) != 0);",
          "15289:     }",
          "15403:     @java.lang.Override",
          "15406:       if (ref instanceof java.lang.String) {",
          "15407:         return (java.lang.String) ref;",
          "15408:       } else {",
          "",
          "[Removed Lines]",
          "15265:       public org.mlflow.api.proto.Service.SearchExperiments.Response getDefaultInstanceForType() {",
          "15272:     public static final int MAX_RESULTS_FIELD_NUMBER = 1;",
          "15273:     private long maxResults_;",
          "15287:     public boolean hasMaxResults() {",
          "15302:     @java.lang.Override",
          "15303:     public long getMaxResults() {",
          "15304:       return maxResults_;",
          "15305:     }",
          "15307:     public static final int PAGE_TOKEN_FIELD_NUMBER = 2;",
          "15308:     private volatile java.lang.Object pageToken_;",
          "15317:     @java.lang.Override",
          "15318:     public boolean hasPageToken() {",
          "15319:       return ((bitField0_ & 0x00000002) != 0);",
          "15320:     }",
          "15329:     @java.lang.Override",
          "15330:     public java.lang.String getPageToken() {",
          "15331:       java.lang.Object ref = pageToken_;",
          "15332:       if (ref instanceof java.lang.String) {",
          "15333:         return (java.lang.String) ref;",
          "15334:       } else {",
          "15335:         com.google.protobuf.ByteString bs =",
          "15336:             (com.google.protobuf.ByteString) ref;",
          "15337:         java.lang.String s = bs.toStringUtf8();",
          "15338:         if (bs.isValidUtf8()) {",
          "15339:           pageToken_ = s;",
          "15340:         }",
          "15341:         return s;",
          "15342:       }",
          "15343:     }",
          "15352:     @java.lang.Override",
          "15353:     public com.google.protobuf.ByteString",
          "15354:         getPageTokenBytes() {",
          "15355:       java.lang.Object ref = pageToken_;",
          "15356:       if (ref instanceof java.lang.String) {",
          "15357:         com.google.protobuf.ByteString b =",
          "15358:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15359:                 (java.lang.String) ref);",
          "15360:         pageToken_ = b;",
          "15361:         return b;",
          "15362:       } else {",
          "15363:         return (com.google.protobuf.ByteString) ref;",
          "15364:       }",
          "15365:     }",
          "15367:     public static final int FILTER_FIELD_NUMBER = 3;",
          "15368:     private volatile java.lang.Object filter_;",
          "15384:     @java.lang.Override",
          "15385:     public boolean hasFilter() {",
          "15386:       return ((bitField0_ & 0x00000004) != 0);",
          "15387:     }",
          "15404:     public java.lang.String getFilter() {",
          "15405:       java.lang.Object ref = filter_;",
          "",
          "[Added Lines]",
          "22519:       public org.mlflow.api.proto.Service.GetExperiment.Response getDefaultInstanceForType() {",
          "22526:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "22527:     private volatile java.lang.Object experimentId_;",
          "22537:     public boolean hasExperimentId() {",
          "22549:     public java.lang.String getExperimentId() {",
          "22550:       java.lang.Object ref = experimentId_;",
          "",
          "---------------",
          "--- Hunk 152 ---",
          "[Context before]",
          "15410:             (com.google.protobuf.ByteString) ref;",
          "15411:         java.lang.String s = bs.toStringUtf8();",
          "15412:         if (bs.isValidUtf8()) {",
          "15414:         }",
          "15415:         return s;",
          "15416:       }",
          "15417:     }",
          "15433:     @java.lang.Override",
          "15434:     public com.google.protobuf.ByteString",
          "15437:       if (ref instanceof java.lang.String) {",
          "15438:         com.google.protobuf.ByteString b =",
          "15439:             com.google.protobuf.ByteString.copyFromUtf8(",
          "15440:                 (java.lang.String) ref);",
          "15442:         return b;",
          "15443:       } else {",
          "15444:         return (com.google.protobuf.ByteString) ref;",
          "15445:       }",
          "15446:     }",
          "15536:     private byte memoizedIsInitialized = -1;",
          "15537:     @java.lang.Override",
          "15538:     public final boolean isInitialized() {",
          "",
          "[Removed Lines]",
          "15413:           filter_ = s;",
          "15435:         getFilterBytes() {",
          "15436:       java.lang.Object ref = filter_;",
          "15441:         filter_ = b;",
          "15448:     public static final int ORDER_BY_FIELD_NUMBER = 4;",
          "15449:     private com.google.protobuf.LazyStringList orderBy_;",
          "15460:     public com.google.protobuf.ProtocolStringList",
          "15461:         getOrderByList() {",
          "15462:       return orderBy_;",
          "15463:     }",
          "15474:     public int getOrderByCount() {",
          "15475:       return orderBy_.size();",
          "15476:     }",
          "15488:     public java.lang.String getOrderBy(int index) {",
          "15489:       return orderBy_.get(index);",
          "15490:     }",
          "15502:     public com.google.protobuf.ByteString",
          "15503:         getOrderByBytes(int index) {",
          "15504:       return orderBy_.getByteString(index);",
          "15505:     }",
          "15507:     public static final int VIEW_TYPE_FIELD_NUMBER = 5;",
          "15508:     private int viewType_;",
          "15518:     @java.lang.Override public boolean hasViewType() {",
          "15519:       return ((bitField0_ & 0x00000008) != 0);",
          "15520:     }",
          "15530:     @java.lang.Override public org.mlflow.api.proto.Service.ViewType getViewType() {",
          "15531:       @SuppressWarnings(\"deprecation\")",
          "15532:       org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(viewType_);",
          "15533:       return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "15534:     }",
          "",
          "[Added Lines]",
          "22558:           experimentId_ = s;",
          "22573:         getExperimentIdBytes() {",
          "22574:       java.lang.Object ref = experimentId_;",
          "22579:         experimentId_ = b;",
          "",
          "---------------",
          "--- Hunk 153 ---",
          "[Context before]",
          "15548:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "15549:                         throws java.io.IOException {",
          "15550:       if (((bitField0_ & 0x00000001) != 0)) {",
          "15564:       }",
          "15565:       unknownFields.writeTo(output);",
          "15566:     }",
          "",
          "[Removed Lines]",
          "15551:         output.writeInt64(1, maxResults_);",
          "15552:       }",
          "15553:       if (((bitField0_ & 0x00000002) != 0)) {",
          "15554:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pageToken_);",
          "15555:       }",
          "15556:       if (((bitField0_ & 0x00000004) != 0)) {",
          "15557:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filter_);",
          "15558:       }",
          "15559:       for (int i = 0; i < orderBy_.size(); i++) {",
          "15560:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, orderBy_.getRaw(i));",
          "15561:       }",
          "15562:       if (((bitField0_ & 0x00000008) != 0)) {",
          "15563:         output.writeEnum(5, viewType_);",
          "",
          "[Added Lines]",
          "22601:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "",
          "---------------",
          "--- Hunk 154 ---",
          "[Context before]",
          "15573:       size = 0;",
          "15574:       if (((bitField0_ & 0x00000001) != 0)) {",
          "15595:       }",
          "15596:       size += unknownFields.getSerializedSize();",
          "15597:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "15575:         size += com.google.protobuf.CodedOutputStream",
          "15576:           .computeInt64Size(1, maxResults_);",
          "15577:       }",
          "15578:       if (((bitField0_ & 0x00000002) != 0)) {",
          "15579:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pageToken_);",
          "15580:       }",
          "15581:       if (((bitField0_ & 0x00000004) != 0)) {",
          "15582:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filter_);",
          "15583:       }",
          "15584:       {",
          "15585:         int dataSize = 0;",
          "15586:         for (int i = 0; i < orderBy_.size(); i++) {",
          "15587:           dataSize += computeStringSizeNoTag(orderBy_.getRaw(i));",
          "15588:         }",
          "15589:         size += dataSize;",
          "15590:         size += 1 * getOrderByList().size();",
          "15591:       }",
          "15592:       if (((bitField0_ & 0x00000008) != 0)) {",
          "15593:         size += com.google.protobuf.CodedOutputStream",
          "15594:           .computeEnumSize(5, viewType_);",
          "",
          "[Added Lines]",
          "22613:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "",
          "---------------",
          "--- Hunk 155 ---",
          "[Context before]",
          "15603:       if (obj == this) {",
          "15604:        return true;",
          "15605:       }",
          "15607:         return super.equals(obj);",
          "15608:       }",
          "15631:       }",
          "15632:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "15633:       return true;",
          "",
          "[Removed Lines]",
          "15606:       if (!(obj instanceof org.mlflow.api.proto.Service.SearchExperiments)) {",
          "15609:       org.mlflow.api.proto.Service.SearchExperiments other = (org.mlflow.api.proto.Service.SearchExperiments) obj;",
          "15611:       if (hasMaxResults() != other.hasMaxResults()) return false;",
          "15612:       if (hasMaxResults()) {",
          "15613:         if (getMaxResults()",
          "15614:             != other.getMaxResults()) return false;",
          "15615:       }",
          "15616:       if (hasPageToken() != other.hasPageToken()) return false;",
          "15617:       if (hasPageToken()) {",
          "15618:         if (!getPageToken()",
          "15619:             .equals(other.getPageToken())) return false;",
          "15620:       }",
          "15621:       if (hasFilter() != other.hasFilter()) return false;",
          "15622:       if (hasFilter()) {",
          "15623:         if (!getFilter()",
          "15624:             .equals(other.getFilter())) return false;",
          "15625:       }",
          "15626:       if (!getOrderByList()",
          "15627:           .equals(other.getOrderByList())) return false;",
          "15628:       if (hasViewType() != other.hasViewType()) return false;",
          "15629:       if (hasViewType()) {",
          "15630:         if (viewType_ != other.viewType_) return false;",
          "",
          "[Added Lines]",
          "22625:       if (!(obj instanceof org.mlflow.api.proto.Service.GetExperiment)) {",
          "22628:       org.mlflow.api.proto.Service.GetExperiment other = (org.mlflow.api.proto.Service.GetExperiment) obj;",
          "22630:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "22631:       if (hasExperimentId()) {",
          "22632:         if (!getExperimentId()",
          "22633:             .equals(other.getExperimentId())) return false;",
          "",
          "---------------",
          "--- Hunk 156 ---",
          "[Context before]",
          "15640:       }",
          "15641:       int hash = 41;",
          "15642:       hash = (19 * hash) + getDescriptor().hashCode();",
          "15663:       }",
          "15664:       hash = (29 * hash) + unknownFields.hashCode();",
          "15665:       memoizedHashCode = hash;",
          "15666:       return hash;",
          "15667:     }",
          "15670:         java.nio.ByteBuffer data)",
          "15671:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15672:       return PARSER.parseFrom(data);",
          "15673:     }",
          "15675:         java.nio.ByteBuffer data,",
          "15676:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15677:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15678:       return PARSER.parseFrom(data, extensionRegistry);",
          "15679:     }",
          "15681:         com.google.protobuf.ByteString data)",
          "15682:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15683:       return PARSER.parseFrom(data);",
          "15684:     }",
          "15686:         com.google.protobuf.ByteString data,",
          "15687:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15688:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15689:       return PARSER.parseFrom(data, extensionRegistry);",
          "15690:     }",
          "15692:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15693:       return PARSER.parseFrom(data);",
          "15694:     }",
          "15696:         byte[] data,",
          "15697:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15698:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "15699:       return PARSER.parseFrom(data, extensionRegistry);",
          "15700:     }",
          "15702:         throws java.io.IOException {",
          "15703:       return com.google.protobuf.GeneratedMessageV3",
          "15704:           .parseWithIOException(PARSER, input);",
          "15705:     }",
          "15707:         java.io.InputStream input,",
          "15708:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15709:         throws java.io.IOException {",
          "15710:       return com.google.protobuf.GeneratedMessageV3",
          "15711:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "15712:     }",
          "15714:         throws java.io.IOException {",
          "15715:       return com.google.protobuf.GeneratedMessageV3",
          "15716:           .parseDelimitedWithIOException(PARSER, input);",
          "15717:     }",
          "15719:         java.io.InputStream input,",
          "15720:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15721:         throws java.io.IOException {",
          "15722:       return com.google.protobuf.GeneratedMessageV3",
          "15723:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "15724:     }",
          "15726:         com.google.protobuf.CodedInputStream input)",
          "15727:         throws java.io.IOException {",
          "15728:       return com.google.protobuf.GeneratedMessageV3",
          "15729:           .parseWithIOException(PARSER, input);",
          "15730:     }",
          "15732:         com.google.protobuf.CodedInputStream input,",
          "15733:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15734:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "15643:       if (hasMaxResults()) {",
          "15644:         hash = (37 * hash) + MAX_RESULTS_FIELD_NUMBER;",
          "15645:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "15646:             getMaxResults());",
          "15647:       }",
          "15648:       if (hasPageToken()) {",
          "15649:         hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;",
          "15650:         hash = (53 * hash) + getPageToken().hashCode();",
          "15651:       }",
          "15652:       if (hasFilter()) {",
          "15653:         hash = (37 * hash) + FILTER_FIELD_NUMBER;",
          "15654:         hash = (53 * hash) + getFilter().hashCode();",
          "15655:       }",
          "15656:       if (getOrderByCount() > 0) {",
          "15657:         hash = (37 * hash) + ORDER_BY_FIELD_NUMBER;",
          "15658:         hash = (53 * hash) + getOrderByList().hashCode();",
          "15659:       }",
          "15660:       if (hasViewType()) {",
          "15661:         hash = (37 * hash) + VIEW_TYPE_FIELD_NUMBER;",
          "15662:         hash = (53 * hash) + viewType_;",
          "15669:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "15674:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "15680:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "15685:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "15691:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(byte[] data)",
          "15695:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "15701:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(java.io.InputStream input)",
          "15706:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "15713:     public static org.mlflow.api.proto.Service.SearchExperiments parseDelimitedFrom(java.io.InputStream input)",
          "15718:     public static org.mlflow.api.proto.Service.SearchExperiments parseDelimitedFrom(",
          "15725:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "15731:     public static org.mlflow.api.proto.Service.SearchExperiments parseFrom(",
          "",
          "[Added Lines]",
          "22646:       if (hasExperimentId()) {",
          "22647:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "22648:         hash = (53 * hash) + getExperimentId().hashCode();",
          "22655:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "22660:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "22666:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "22671:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "22677:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(byte[] data)",
          "22681:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "22687:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(java.io.InputStream input)",
          "22692:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "22699:     public static org.mlflow.api.proto.Service.GetExperiment parseDelimitedFrom(java.io.InputStream input)",
          "22704:     public static org.mlflow.api.proto.Service.GetExperiment parseDelimitedFrom(",
          "22711:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "22717:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "",
          "---------------",
          "--- Hunk 157 ---",
          "[Context before]",
          "15741:     public static Builder newBuilder() {",
          "15742:       return DEFAULT_INSTANCE.toBuilder();",
          "15743:     }",
          "15745:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "15746:     }",
          "15747:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "15744:     public static Builder newBuilder(org.mlflow.api.proto.Service.SearchExperiments prototype) {",
          "",
          "[Added Lines]",
          "22730:     public static Builder newBuilder(org.mlflow.api.proto.Service.GetExperiment prototype) {",
          "",
          "---------------",
          "--- Hunk 158 ---",
          "[Context before]",
          "15757:       return builder;",
          "15758:     }",
          "15762:     public static final class Builder extends",
          "15763:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "15766:       public static final com.google.protobuf.Descriptors.Descriptor",
          "15767:           getDescriptor() {",
          "15769:       }",
          "15771:       @java.lang.Override",
          "15772:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "15773:           internalGetFieldAccessorTable() {",
          "15775:             .ensureFieldAccessorsInitialized(",
          "15777:       }",
          "15780:       private Builder() {",
          "15781:         maybeForceBuilderInitialization();",
          "15782:       }",
          "",
          "[Removed Lines]",
          "15765:         org.mlflow.api.proto.Service.SearchExperimentsOrBuilder {",
          "15768:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_descriptor;",
          "15774:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_fieldAccessorTable",
          "15776:                 org.mlflow.api.proto.Service.SearchExperiments.class, org.mlflow.api.proto.Service.SearchExperiments.Builder.class);",
          "",
          "[Added Lines]",
          "22751:         org.mlflow.api.proto.Service.GetExperimentOrBuilder {",
          "22754:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_descriptor;",
          "22760:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_fieldAccessorTable",
          "22762:                 org.mlflow.api.proto.Service.GetExperiment.class, org.mlflow.api.proto.Service.GetExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 159 ---",
          "[Context before]",
          "15794:       @java.lang.Override",
          "15795:       public Builder clear() {",
          "15796:         super.clear();",
          "15798:         bitField0_ = (bitField0_ & ~0x00000001);",
          "15807:         return this;",
          "15808:       }",
          "15810:       @java.lang.Override",
          "15811:       public com.google.protobuf.Descriptors.Descriptor",
          "15812:           getDescriptorForType() {",
          "15814:       }",
          "15816:       @java.lang.Override",
          "15819:       }",
          "15821:       @java.lang.Override",
          "15824:         if (!result.isInitialized()) {",
          "15825:           throw newUninitializedMessageException(result);",
          "15826:         }",
          "",
          "[Removed Lines]",
          "15797:         maxResults_ = 0L;",
          "15799:         pageToken_ = \"\";",
          "15800:         bitField0_ = (bitField0_ & ~0x00000002);",
          "15801:         filter_ = \"\";",
          "15802:         bitField0_ = (bitField0_ & ~0x00000004);",
          "15803:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "15804:         bitField0_ = (bitField0_ & ~0x00000008);",
          "15805:         viewType_ = 1;",
          "15806:         bitField0_ = (bitField0_ & ~0x00000010);",
          "15813:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchExperiments_descriptor;",
          "15817:       public org.mlflow.api.proto.Service.SearchExperiments getDefaultInstanceForType() {",
          "15818:         return org.mlflow.api.proto.Service.SearchExperiments.getDefaultInstance();",
          "15822:       public org.mlflow.api.proto.Service.SearchExperiments build() {",
          "15823:         org.mlflow.api.proto.Service.SearchExperiments result = buildPartial();",
          "",
          "[Added Lines]",
          "22783:         experimentId_ = \"\";",
          "22791:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_descriptor;",
          "22795:       public org.mlflow.api.proto.Service.GetExperiment getDefaultInstanceForType() {",
          "22796:         return org.mlflow.api.proto.Service.GetExperiment.getDefaultInstance();",
          "22800:       public org.mlflow.api.proto.Service.GetExperiment build() {",
          "22801:         org.mlflow.api.proto.Service.GetExperiment result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 160 ---",
          "[Context before]",
          "15828:       }",
          "15830:       @java.lang.Override",
          "15833:         int from_bitField0_ = bitField0_;",
          "15834:         int to_bitField0_ = 0;",
          "15835:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "15837:           to_bitField0_ |= 0x00000001;",
          "15838:         }",
          "15856:         result.bitField0_ = to_bitField0_;",
          "15857:         onBuilt();",
          "15858:         return result;",
          "",
          "[Removed Lines]",
          "15831:       public org.mlflow.api.proto.Service.SearchExperiments buildPartial() {",
          "15832:         org.mlflow.api.proto.Service.SearchExperiments result = new org.mlflow.api.proto.Service.SearchExperiments(this);",
          "15836:           result.maxResults_ = maxResults_;",
          "15839:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "15840:           to_bitField0_ |= 0x00000002;",
          "15841:         }",
          "15842:         result.pageToken_ = pageToken_;",
          "15843:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "15844:           to_bitField0_ |= 0x00000004;",
          "15845:         }",
          "15846:         result.filter_ = filter_;",
          "15847:         if (((bitField0_ & 0x00000008) != 0)) {",
          "15848:           orderBy_ = orderBy_.getUnmodifiableView();",
          "15849:           bitField0_ = (bitField0_ & ~0x00000008);",
          "15850:         }",
          "15851:         result.orderBy_ = orderBy_;",
          "15852:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "15853:           to_bitField0_ |= 0x00000008;",
          "15854:         }",
          "15855:         result.viewType_ = viewType_;",
          "",
          "[Added Lines]",
          "22809:       public org.mlflow.api.proto.Service.GetExperiment buildPartial() {",
          "22810:         org.mlflow.api.proto.Service.GetExperiment result = new org.mlflow.api.proto.Service.GetExperiment(this);",
          "22816:         result.experimentId_ = experimentId_;",
          "",
          "---------------",
          "--- Hunk 161 ---",
          "[Context before]",
          "15877:       public Builder clearOneof(",
          "15878:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "15879:         return super.clearOneof(oneof);",
          "16286:         onChanged();",
          "16287:         return this;",
          "16288:       }",
          "16296:       }",
          "16310:       }",
          "16323:       }",
          "16337:       }",
          "16349:       public com.google.protobuf.ByteString",
          "16374:       }",
          "16387:           java.lang.String value) {",
          "16388:         if (value == null) {",
          "16389:     throw new NullPointerException();",
          "16390:   }",
          "16412:         onChanged();",
          "16413:         return this;",
          "16414:       }",
          "16428:         onChanged();",
          "16429:         return this;",
          "16430:       }",
          "16443:           com.google.protobuf.ByteString value) {",
          "16444:         if (value == null) {",
          "16445:     throw new NullPointerException();",
          "16446:   }",
          "16512:         onChanged();",
          "16513:         return this;",
          "16514:       }",
          "",
          "[Removed Lines]",
          "15880:       }",
          "15881:       @java.lang.Override",
          "15882:       public Builder setRepeatedField(",
          "15883:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "15884:           int index, java.lang.Object value) {",
          "15885:         return super.setRepeatedField(field, index, value);",
          "15886:       }",
          "15887:       @java.lang.Override",
          "15888:       public Builder addRepeatedField(",
          "15889:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "15890:           java.lang.Object value) {",
          "15891:         return super.addRepeatedField(field, value);",
          "15892:       }",
          "15893:       @java.lang.Override",
          "15894:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "15895:         if (other instanceof org.mlflow.api.proto.Service.SearchExperiments) {",
          "15896:           return mergeFrom((org.mlflow.api.proto.Service.SearchExperiments)other);",
          "15897:         } else {",
          "15898:           super.mergeFrom(other);",
          "15899:           return this;",
          "15900:         }",
          "15901:       }",
          "15903:       public Builder mergeFrom(org.mlflow.api.proto.Service.SearchExperiments other) {",
          "15904:         if (other == org.mlflow.api.proto.Service.SearchExperiments.getDefaultInstance()) return this;",
          "15905:         if (other.hasMaxResults()) {",
          "15906:           setMaxResults(other.getMaxResults());",
          "15907:         }",
          "15908:         if (other.hasPageToken()) {",
          "15909:           bitField0_ |= 0x00000002;",
          "15910:           pageToken_ = other.pageToken_;",
          "15911:           onChanged();",
          "15912:         }",
          "15913:         if (other.hasFilter()) {",
          "15914:           bitField0_ |= 0x00000004;",
          "15915:           filter_ = other.filter_;",
          "15916:           onChanged();",
          "15917:         }",
          "15918:         if (!other.orderBy_.isEmpty()) {",
          "15919:           if (orderBy_.isEmpty()) {",
          "15920:             orderBy_ = other.orderBy_;",
          "15921:             bitField0_ = (bitField0_ & ~0x00000008);",
          "15922:           } else {",
          "15923:             ensureOrderByIsMutable();",
          "15924:             orderBy_.addAll(other.orderBy_);",
          "15925:           }",
          "15926:           onChanged();",
          "15927:         }",
          "15928:         if (other.hasViewType()) {",
          "15929:           setViewType(other.getViewType());",
          "15930:         }",
          "15931:         this.mergeUnknownFields(other.unknownFields);",
          "15932:         onChanged();",
          "15933:         return this;",
          "15934:       }",
          "15936:       @java.lang.Override",
          "15937:       public final boolean isInitialized() {",
          "15938:         return true;",
          "15939:       }",
          "15941:       @java.lang.Override",
          "15942:       public Builder mergeFrom(",
          "15943:           com.google.protobuf.CodedInputStream input,",
          "15944:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "15945:           throws java.io.IOException {",
          "15946:         org.mlflow.api.proto.Service.SearchExperiments parsedMessage = null;",
          "15947:         try {",
          "15948:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "15949:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "15950:           parsedMessage = (org.mlflow.api.proto.Service.SearchExperiments) e.getUnfinishedMessage();",
          "15951:           throw e.unwrapIOException();",
          "15952:         } finally {",
          "15953:           if (parsedMessage != null) {",
          "15954:             mergeFrom(parsedMessage);",
          "15955:           }",
          "15956:         }",
          "15957:         return this;",
          "15958:       }",
          "15959:       private int bitField0_;",
          "15961:       private long maxResults_ ;",
          "15974:       @java.lang.Override",
          "15975:       public boolean hasMaxResults() {",
          "15976:         return ((bitField0_ & 0x00000001) != 0);",
          "15977:       }",
          "15990:       @java.lang.Override",
          "15991:       public long getMaxResults() {",
          "15992:         return maxResults_;",
          "15993:       }",
          "16007:       public Builder setMaxResults(long value) {",
          "16008:         bitField0_ |= 0x00000001;",
          "16009:         maxResults_ = value;",
          "16010:         onChanged();",
          "16011:         return this;",
          "16012:       }",
          "16025:       public Builder clearMaxResults() {",
          "16026:         bitField0_ = (bitField0_ & ~0x00000001);",
          "16027:         maxResults_ = 0L;",
          "16028:         onChanged();",
          "16029:         return this;",
          "16030:       }",
          "16032:       private java.lang.Object pageToken_ = \"\";",
          "16041:       public boolean hasPageToken() {",
          "16042:         return ((bitField0_ & 0x00000002) != 0);",
          "16043:       }",
          "16052:       public java.lang.String getPageToken() {",
          "16053:         java.lang.Object ref = pageToken_;",
          "16054:         if (!(ref instanceof java.lang.String)) {",
          "16055:           com.google.protobuf.ByteString bs =",
          "16056:               (com.google.protobuf.ByteString) ref;",
          "16057:           java.lang.String s = bs.toStringUtf8();",
          "16058:           if (bs.isValidUtf8()) {",
          "16059:             pageToken_ = s;",
          "16060:           }",
          "16061:           return s;",
          "16062:         } else {",
          "16063:           return (java.lang.String) ref;",
          "16064:         }",
          "16065:       }",
          "16074:       public com.google.protobuf.ByteString",
          "16075:           getPageTokenBytes() {",
          "16076:         java.lang.Object ref = pageToken_;",
          "16077:         if (ref instanceof String) {",
          "16078:           com.google.protobuf.ByteString b =",
          "16079:               com.google.protobuf.ByteString.copyFromUtf8(",
          "16080:                   (java.lang.String) ref);",
          "16081:           pageToken_ = b;",
          "16082:           return b;",
          "16083:         } else {",
          "16084:           return (com.google.protobuf.ByteString) ref;",
          "16085:         }",
          "16086:       }",
          "16096:       public Builder setPageToken(",
          "16097:           java.lang.String value) {",
          "16098:         if (value == null) {",
          "16099:     throw new NullPointerException();",
          "16100:   }",
          "16101:   bitField0_ |= 0x00000002;",
          "16102:         pageToken_ = value;",
          "16103:         onChanged();",
          "16104:         return this;",
          "16105:       }",
          "16114:       public Builder clearPageToken() {",
          "16115:         bitField0_ = (bitField0_ & ~0x00000002);",
          "16116:         pageToken_ = getDefaultInstance().getPageToken();",
          "16117:         onChanged();",
          "16118:         return this;",
          "16119:       }",
          "16129:       public Builder setPageTokenBytes(",
          "16130:           com.google.protobuf.ByteString value) {",
          "16131:         if (value == null) {",
          "16132:     throw new NullPointerException();",
          "16133:   }",
          "16134:   bitField0_ |= 0x00000002;",
          "16135:         pageToken_ = value;",
          "16136:         onChanged();",
          "16137:         return this;",
          "16138:       }",
          "16140:       private java.lang.Object filter_ = \"\";",
          "16156:       public boolean hasFilter() {",
          "16157:         return ((bitField0_ & 0x00000004) != 0);",
          "16158:       }",
          "16174:       public java.lang.String getFilter() {",
          "16175:         java.lang.Object ref = filter_;",
          "16176:         if (!(ref instanceof java.lang.String)) {",
          "16177:           com.google.protobuf.ByteString bs =",
          "16178:               (com.google.protobuf.ByteString) ref;",
          "16179:           java.lang.String s = bs.toStringUtf8();",
          "16180:           if (bs.isValidUtf8()) {",
          "16181:             filter_ = s;",
          "16182:           }",
          "16183:           return s;",
          "16184:         } else {",
          "16185:           return (java.lang.String) ref;",
          "16186:         }",
          "16187:       }",
          "16203:       public com.google.protobuf.ByteString",
          "16204:           getFilterBytes() {",
          "16205:         java.lang.Object ref = filter_;",
          "16206:         if (ref instanceof String) {",
          "16207:           com.google.protobuf.ByteString b =",
          "16208:               com.google.protobuf.ByteString.copyFromUtf8(",
          "16209:                   (java.lang.String) ref);",
          "16210:           filter_ = b;",
          "16211:           return b;",
          "16212:         } else {",
          "16213:           return (com.google.protobuf.ByteString) ref;",
          "16214:         }",
          "16215:       }",
          "16232:       public Builder setFilter(",
          "16233:           java.lang.String value) {",
          "16234:         if (value == null) {",
          "16235:     throw new NullPointerException();",
          "16236:   }",
          "16237:   bitField0_ |= 0x00000004;",
          "16238:         filter_ = value;",
          "16239:         onChanged();",
          "16240:         return this;",
          "16241:       }",
          "16257:       public Builder clearFilter() {",
          "16258:         bitField0_ = (bitField0_ & ~0x00000004);",
          "16259:         filter_ = getDefaultInstance().getFilter();",
          "16260:         onChanged();",
          "16261:         return this;",
          "16262:       }",
          "16279:       public Builder setFilterBytes(",
          "16280:           com.google.protobuf.ByteString value) {",
          "16281:         if (value == null) {",
          "16282:     throw new NullPointerException();",
          "16283:   }",
          "16284:   bitField0_ |= 0x00000004;",
          "16285:         filter_ = value;",
          "16290:       private com.google.protobuf.LazyStringList orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "16291:       private void ensureOrderByIsMutable() {",
          "16292:         if (!((bitField0_ & 0x00000008) != 0)) {",
          "16293:           orderBy_ = new com.google.protobuf.LazyStringArrayList(orderBy_);",
          "16294:           bitField0_ |= 0x00000008;",
          "16295:          }",
          "16307:       public com.google.protobuf.ProtocolStringList",
          "16308:           getOrderByList() {",
          "16309:         return orderBy_.getUnmodifiableView();",
          "16321:       public int getOrderByCount() {",
          "16322:         return orderBy_.size();",
          "16335:       public java.lang.String getOrderBy(int index) {",
          "16336:         return orderBy_.get(index);",
          "16350:           getOrderByBytes(int index) {",
          "16351:         return orderBy_.getByteString(index);",
          "16352:       }",
          "16365:       public Builder setOrderBy(",
          "16366:           int index, java.lang.String value) {",
          "16367:         if (value == null) {",
          "16368:     throw new NullPointerException();",
          "16369:   }",
          "16370:   ensureOrderByIsMutable();",
          "16371:         orderBy_.set(index, value);",
          "16372:         onChanged();",
          "16373:         return this;",
          "16386:       public Builder addOrderBy(",
          "16391:   ensureOrderByIsMutable();",
          "16392:         orderBy_.add(value);",
          "16393:         onChanged();",
          "16394:         return this;",
          "16395:       }",
          "16407:       public Builder addAllOrderBy(",
          "16408:           java.lang.Iterable<java.lang.String> values) {",
          "16409:         ensureOrderByIsMutable();",
          "16410:         com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "16411:             values, orderBy_);",
          "16425:       public Builder clearOrderBy() {",
          "16426:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "16427:         bitField0_ = (bitField0_ & ~0x00000008);",
          "16442:       public Builder addOrderByBytes(",
          "16447:   ensureOrderByIsMutable();",
          "16448:         orderBy_.add(value);",
          "16449:         onChanged();",
          "16450:         return this;",
          "16451:       }",
          "16453:       private int viewType_ = 1;",
          "16463:       @java.lang.Override public boolean hasViewType() {",
          "16464:         return ((bitField0_ & 0x00000010) != 0);",
          "16465:       }",
          "16475:       @java.lang.Override",
          "16476:       public org.mlflow.api.proto.Service.ViewType getViewType() {",
          "16477:         @SuppressWarnings(\"deprecation\")",
          "16478:         org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(viewType_);",
          "16479:         return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "16480:       }",
          "16491:       public Builder setViewType(org.mlflow.api.proto.Service.ViewType value) {",
          "16492:         if (value == null) {",
          "16493:           throw new NullPointerException();",
          "16494:         }",
          "16495:         bitField0_ |= 0x00000010;",
          "16496:         viewType_ = value.getNumber();",
          "16497:         onChanged();",
          "16498:         return this;",
          "16499:       }",
          "16509:       public Builder clearViewType() {",
          "16510:         bitField0_ = (bitField0_ & ~0x00000010);",
          "16511:         viewType_ = 1;",
          "",
          "[Added Lines]",
          "22841:       }",
          "22842:       @java.lang.Override",
          "22843:       public Builder setRepeatedField(",
          "22844:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "22845:           int index, java.lang.Object value) {",
          "22846:         return super.setRepeatedField(field, index, value);",
          "22847:       }",
          "22848:       @java.lang.Override",
          "22849:       public Builder addRepeatedField(",
          "22850:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "22851:           java.lang.Object value) {",
          "22852:         return super.addRepeatedField(field, value);",
          "22853:       }",
          "22854:       @java.lang.Override",
          "22855:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "22856:         if (other instanceof org.mlflow.api.proto.Service.GetExperiment) {",
          "22857:           return mergeFrom((org.mlflow.api.proto.Service.GetExperiment)other);",
          "22858:         } else {",
          "22859:           super.mergeFrom(other);",
          "22860:           return this;",
          "22861:         }",
          "22862:       }",
          "22864:       public Builder mergeFrom(org.mlflow.api.proto.Service.GetExperiment other) {",
          "22865:         if (other == org.mlflow.api.proto.Service.GetExperiment.getDefaultInstance()) return this;",
          "22866:         if (other.hasExperimentId()) {",
          "22867:           bitField0_ |= 0x00000001;",
          "22868:           experimentId_ = other.experimentId_;",
          "22869:           onChanged();",
          "22870:         }",
          "22871:         this.mergeUnknownFields(other.unknownFields);",
          "22876:       @java.lang.Override",
          "22877:       public final boolean isInitialized() {",
          "22878:         return true;",
          "22881:       @java.lang.Override",
          "22882:       public Builder mergeFrom(",
          "22883:           com.google.protobuf.CodedInputStream input,",
          "22884:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22885:           throws java.io.IOException {",
          "22886:         org.mlflow.api.proto.Service.GetExperiment parsedMessage = null;",
          "22887:         try {",
          "22888:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "22889:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "22890:           parsedMessage = (org.mlflow.api.proto.Service.GetExperiment) e.getUnfinishedMessage();",
          "22891:           throw e.unwrapIOException();",
          "22892:         } finally {",
          "22893:           if (parsedMessage != null) {",
          "22894:             mergeFrom(parsedMessage);",
          "22895:           }",
          "22896:         }",
          "22897:         return this;",
          "22899:       private int bitField0_;",
          "22901:       private java.lang.Object experimentId_ = \"\";",
          "22910:       public boolean hasExperimentId() {",
          "22911:         return ((bitField0_ & 0x00000001) != 0);",
          "22921:       public java.lang.String getExperimentId() {",
          "22922:         java.lang.Object ref = experimentId_;",
          "22923:         if (!(ref instanceof java.lang.String)) {",
          "22924:           com.google.protobuf.ByteString bs =",
          "22925:               (com.google.protobuf.ByteString) ref;",
          "22926:           java.lang.String s = bs.toStringUtf8();",
          "22927:           if (bs.isValidUtf8()) {",
          "22928:             experimentId_ = s;",
          "22929:           }",
          "22930:           return s;",
          "22931:         } else {",
          "22932:           return (java.lang.String) ref;",
          "22933:         }",
          "22944:           getExperimentIdBytes() {",
          "22945:         java.lang.Object ref = experimentId_;",
          "22946:         if (ref instanceof String) {",
          "22947:           com.google.protobuf.ByteString b =",
          "22948:               com.google.protobuf.ByteString.copyFromUtf8(",
          "22949:                   (java.lang.String) ref);",
          "22950:           experimentId_ = b;",
          "22951:           return b;",
          "22952:         } else {",
          "22953:           return (com.google.protobuf.ByteString) ref;",
          "22954:         }",
          "22965:       public Builder setExperimentId(",
          "22970:   bitField0_ |= 0x00000001;",
          "22971:         experimentId_ = value;",
          "22983:       public Builder clearExperimentId() {",
          "22984:         bitField0_ = (bitField0_ & ~0x00000001);",
          "22985:         experimentId_ = getDefaultInstance().getExperimentId();",
          "22998:       public Builder setExperimentIdBytes(",
          "23003:   bitField0_ |= 0x00000001;",
          "23004:         experimentId_ = value;",
          "",
          "---------------",
          "--- Hunk 162 ---",
          "[Context before]",
          "16525:       }",
          "16529:     }",
          "16533:     static {",
          "16535:     }",
          "16538:       return DEFAULT_INSTANCE;",
          "16539:     }",
          "16543:       @java.lang.Override",
          "16545:           com.google.protobuf.CodedInputStream input,",
          "16546:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16547:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16549:       }",
          "16550:     };",
          "16553:       return PARSER;",
          "16554:     }",
          "16556:     @java.lang.Override",
          "16558:       return PARSER;",
          "16559:     }",
          "16561:     @java.lang.Override",
          "16563:       return DEFAULT_INSTANCE;",
          "16564:     }",
          "16566:   }",
          "16570:       com.google.protobuf.MessageOrBuilder {",
          "",
          "[Removed Lines]",
          "16532:     private static final org.mlflow.api.proto.Service.SearchExperiments DEFAULT_INSTANCE;",
          "16534:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchExperiments();",
          "16537:     public static org.mlflow.api.proto.Service.SearchExperiments getDefaultInstance() {",
          "16541:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SearchExperiments>",
          "16542:         PARSER = new com.google.protobuf.AbstractParser<SearchExperiments>() {",
          "16544:       public SearchExperiments parsePartialFrom(",
          "16548:         return new SearchExperiments(input, extensionRegistry);",
          "16552:     public static com.google.protobuf.Parser<SearchExperiments> parser() {",
          "16557:     public com.google.protobuf.Parser<SearchExperiments> getParserForType() {",
          "16562:     public org.mlflow.api.proto.Service.SearchExperiments getDefaultInstanceForType() {",
          "16568:   public interface GetExperimentOrBuilder extends",
          "",
          "[Added Lines]",
          "23025:     private static final org.mlflow.api.proto.Service.GetExperiment DEFAULT_INSTANCE;",
          "23027:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetExperiment();",
          "23030:     public static org.mlflow.api.proto.Service.GetExperiment getDefaultInstance() {",
          "23034:     @java.lang.Deprecated public static final com.google.protobuf.Parser<GetExperiment>",
          "23035:         PARSER = new com.google.protobuf.AbstractParser<GetExperiment>() {",
          "23037:       public GetExperiment parsePartialFrom(",
          "23041:         return new GetExperiment(input, extensionRegistry);",
          "23045:     public static com.google.protobuf.Parser<GetExperiment> parser() {",
          "23050:     public com.google.protobuf.Parser<GetExperiment> getParserForType() {",
          "23055:     public org.mlflow.api.proto.Service.GetExperiment getDefaultInstanceForType() {",
          "23061:   public interface DeleteExperimentOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 163 ---",
          "[Context before]",
          "16599:         getExperimentIdBytes();",
          "16600:   }",
          "16605:       com.google.protobuf.GeneratedMessageV3 implements",
          "16608:   private static final long serialVersionUID = 0L;",
          "16611:       super(builder);",
          "16612:     }",
          "16614:       experimentId_ = \"\";",
          "16615:     }",
          "",
          "[Removed Lines]",
          "16604:   public static final class GetExperiment extends",
          "16607:       GetExperimentOrBuilder {",
          "16610:     private GetExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "16613:     private GetExperiment() {",
          "",
          "[Added Lines]",
          "23097:   public static final class DeleteExperiment extends",
          "23100:       DeleteExperimentOrBuilder {",
          "23103:     private DeleteExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "23106:     private DeleteExperiment() {",
          "",
          "---------------",
          "--- Hunk 164 ---",
          "[Context before]",
          "16618:     @SuppressWarnings({\"unused\"})",
          "16619:     protected java.lang.Object newInstance(",
          "16620:         UnusedPrivateParameter unused) {",
          "16622:     }",
          "16624:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "16621:       return new GetExperiment();",
          "",
          "[Added Lines]",
          "23114:       return new DeleteExperiment();",
          "",
          "---------------",
          "--- Hunk 165 ---",
          "[Context before]",
          "16626:     getUnknownFields() {",
          "16627:       return this.unknownFields;",
          "16628:     }",
          "16630:         com.google.protobuf.CodedInputStream input,",
          "16631:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16632:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "16629:     private GetExperiment(",
          "",
          "[Added Lines]",
          "23122:     private DeleteExperiment(",
          "",
          "---------------",
          "--- Hunk 166 ---",
          "[Context before]",
          "16672:     }",
          "16673:     public static final com.google.protobuf.Descriptors.Descriptor",
          "16674:         getDescriptor() {",
          "16676:     }",
          "16678:     @java.lang.Override",
          "16679:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "16680:         internalGetFieldAccessorTable() {",
          "16682:           .ensureFieldAccessorsInitialized(",
          "16684:     }",
          "16686:     public interface ResponseOrBuilder extends",
          "16688:         com.google.protobuf.MessageOrBuilder {",
          "16716:     }",
          "16720:     public static final class Response extends",
          "16721:         com.google.protobuf.GeneratedMessageV3 implements",
          "16723:         ResponseOrBuilder {",
          "16724:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "16675:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_descriptor;",
          "16681:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_fieldAccessorTable",
          "16683:               org.mlflow.api.proto.Service.GetExperiment.class, org.mlflow.api.proto.Service.GetExperiment.Builder.class);",
          "16698:       boolean hasExperiment();",
          "16707:       org.mlflow.api.proto.Service.Experiment getExperiment();",
          "16715:       org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentOrBuilder();",
          "",
          "[Added Lines]",
          "23168:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_descriptor;",
          "23174:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_fieldAccessorTable",
          "23176:               org.mlflow.api.proto.Service.DeleteExperiment.class, org.mlflow.api.proto.Service.DeleteExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 167 ---",
          "[Context before]",
          "16749:         if (extensionRegistry == null) {",
          "16750:           throw new java.lang.NullPointerException();",
          "16751:         }",
          "16753:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "16754:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "16755:         try {",
          "",
          "[Removed Lines]",
          "16752:         int mutable_bitField0_ = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 168 ---",
          "[Context before]",
          "16760:               case 0:",
          "16761:                 done = true;",
          "16762:                 break;",
          "16776:               default: {",
          "16777:                 if (!parseUnknownField(",
          "16778:                     input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "16763:               case 10: {",
          "16764:                 org.mlflow.api.proto.Service.Experiment.Builder subBuilder = null;",
          "16765:                 if (((bitField0_ & 0x00000001) != 0)) {",
          "16766:                   subBuilder = experiment_.toBuilder();",
          "16767:                 }",
          "16768:                 experiment_ = input.readMessage(org.mlflow.api.proto.Service.Experiment.PARSER, extensionRegistry);",
          "16769:                 if (subBuilder != null) {",
          "16770:                   subBuilder.mergeFrom(experiment_);",
          "16771:                   experiment_ = subBuilder.buildPartial();",
          "16772:                 }",
          "16773:                 bitField0_ |= 0x00000001;",
          "16774:                 break;",
          "16775:               }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 169 ---",
          "[Context before]",
          "16794:       }",
          "16795:       public static final com.google.protobuf.Descriptors.Descriptor",
          "16796:           getDescriptor() {",
          "16798:       }",
          "16800:       @java.lang.Override",
          "16801:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "16802:           internalGetFieldAccessorTable() {",
          "16804:             .ensureFieldAccessorsInitialized(",
          "16845:       }",
          "16847:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "16797:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_descriptor;",
          "16803:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_fieldAccessorTable",
          "16805:                 org.mlflow.api.proto.Service.GetExperiment.Response.class, org.mlflow.api.proto.Service.GetExperiment.Response.Builder.class);",
          "16806:       }",
          "16808:       private int bitField0_;",
          "16809:       public static final int EXPERIMENT_FIELD_NUMBER = 1;",
          "16810:       private org.mlflow.api.proto.Service.Experiment experiment_;",
          "16819:       @java.lang.Override",
          "16820:       public boolean hasExperiment() {",
          "16821:         return ((bitField0_ & 0x00000001) != 0);",
          "16822:       }",
          "16831:       @java.lang.Override",
          "16832:       public org.mlflow.api.proto.Service.Experiment getExperiment() {",
          "16833:         return experiment_ == null ? org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "16834:       }",
          "16842:       @java.lang.Override",
          "16843:       public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentOrBuilder() {",
          "16844:         return experiment_ == null ? org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "",
          "[Added Lines]",
          "23249:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_descriptor;",
          "23255:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_fieldAccessorTable",
          "23257:                 org.mlflow.api.proto.Service.DeleteExperiment.Response.class, org.mlflow.api.proto.Service.DeleteExperiment.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 170 ---",
          "[Context before]",
          "16858:       @java.lang.Override",
          "16859:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "16860:                           throws java.io.IOException {",
          "16864:         unknownFields.writeTo(output);",
          "16865:       }",
          "",
          "[Removed Lines]",
          "16861:         if (((bitField0_ & 0x00000001) != 0)) {",
          "16862:           output.writeMessage(1, getExperiment());",
          "16863:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 171 ---",
          "[Context before]",
          "16870:         if (size != -1) return size;",
          "16872:         size = 0;",
          "16877:         size += unknownFields.getSerializedSize();",
          "16878:         memoizedSize = size;",
          "16879:         return size;",
          "",
          "[Removed Lines]",
          "16873:         if (((bitField0_ & 0x00000001) != 0)) {",
          "16874:           size += com.google.protobuf.CodedOutputStream",
          "16875:             .computeMessageSize(1, getExperiment());",
          "16876:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 172 ---",
          "[Context before]",
          "16884:         if (obj == this) {",
          "16885:          return true;",
          "16886:         }",
          "16888:           return super.equals(obj);",
          "16889:         }",
          "16897:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "16898:         return true;",
          "16899:       }",
          "",
          "[Removed Lines]",
          "16887:         if (!(obj instanceof org.mlflow.api.proto.Service.GetExperiment.Response)) {",
          "16890:         org.mlflow.api.proto.Service.GetExperiment.Response other = (org.mlflow.api.proto.Service.GetExperiment.Response) obj;",
          "16892:         if (hasExperiment() != other.hasExperiment()) return false;",
          "16893:         if (hasExperiment()) {",
          "16894:           if (!getExperiment()",
          "16895:               .equals(other.getExperiment())) return false;",
          "16896:         }",
          "",
          "[Added Lines]",
          "23293:         if (!(obj instanceof org.mlflow.api.proto.Service.DeleteExperiment.Response)) {",
          "23296:         org.mlflow.api.proto.Service.DeleteExperiment.Response other = (org.mlflow.api.proto.Service.DeleteExperiment.Response) obj;",
          "",
          "---------------",
          "--- Hunk 173 ---",
          "[Context before]",
          "16905:         }",
          "16906:         int hash = 41;",
          "16907:         hash = (19 * hash) + getDescriptor().hashCode();",
          "16912:         hash = (29 * hash) + unknownFields.hashCode();",
          "16913:         memoizedHashCode = hash;",
          "16914:         return hash;",
          "16915:       }",
          "16918:           java.nio.ByteBuffer data)",
          "16919:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16920:         return PARSER.parseFrom(data);",
          "16921:       }",
          "16923:           java.nio.ByteBuffer data,",
          "16924:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16925:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16926:         return PARSER.parseFrom(data, extensionRegistry);",
          "16927:       }",
          "16929:           com.google.protobuf.ByteString data)",
          "16930:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16931:         return PARSER.parseFrom(data);",
          "16932:       }",
          "16934:           com.google.protobuf.ByteString data,",
          "16935:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16936:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16937:         return PARSER.parseFrom(data, extensionRegistry);",
          "16938:       }",
          "16940:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16941:         return PARSER.parseFrom(data);",
          "16942:       }",
          "16944:           byte[] data,",
          "16945:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16946:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "16947:         return PARSER.parseFrom(data, extensionRegistry);",
          "16948:       }",
          "16950:           throws java.io.IOException {",
          "16951:         return com.google.protobuf.GeneratedMessageV3",
          "16952:             .parseWithIOException(PARSER, input);",
          "16953:       }",
          "16955:           java.io.InputStream input,",
          "16956:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16957:           throws java.io.IOException {",
          "16958:         return com.google.protobuf.GeneratedMessageV3",
          "16959:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "16960:       }",
          "16962:           throws java.io.IOException {",
          "16963:         return com.google.protobuf.GeneratedMessageV3",
          "16964:             .parseDelimitedWithIOException(PARSER, input);",
          "16965:       }",
          "16967:           java.io.InputStream input,",
          "16968:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16969:           throws java.io.IOException {",
          "16970:         return com.google.protobuf.GeneratedMessageV3",
          "16971:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "16972:       }",
          "16974:           com.google.protobuf.CodedInputStream input)",
          "16975:           throws java.io.IOException {",
          "16976:         return com.google.protobuf.GeneratedMessageV3",
          "16977:             .parseWithIOException(PARSER, input);",
          "16978:       }",
          "16980:           com.google.protobuf.CodedInputStream input,",
          "16981:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "16982:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "16908:         if (hasExperiment()) {",
          "16909:           hash = (37 * hash) + EXPERIMENT_FIELD_NUMBER;",
          "16910:           hash = (53 * hash) + getExperiment().hashCode();",
          "16911:         }",
          "16917:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "16922:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "16928:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "16933:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "16939:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(byte[] data)",
          "16943:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "16949:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(java.io.InputStream input)",
          "16954:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "16961:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "16966:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseDelimitedFrom(",
          "16973:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "16979:       public static org.mlflow.api.proto.Service.GetExperiment.Response parseFrom(",
          "",
          "[Added Lines]",
          "23314:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "23319:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "23325:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "23330:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "23336:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(byte[] data)",
          "23340:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "23346:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(java.io.InputStream input)",
          "23351:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "23358:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "23363:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseDelimitedFrom(",
          "23370:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "23376:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 174 ---",
          "[Context before]",
          "16989:       public static Builder newBuilder() {",
          "16990:         return DEFAULT_INSTANCE.toBuilder();",
          "16991:       }",
          "16993:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "16994:       }",
          "16995:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "16992:       public static Builder newBuilder(org.mlflow.api.proto.Service.GetExperiment.Response prototype) {",
          "",
          "[Added Lines]",
          "23389:       public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteExperiment.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 175 ---",
          "[Context before]",
          "17005:         return builder;",
          "17006:       }",
          "17010:       public static final class Builder extends",
          "17011:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "17014:         public static final com.google.protobuf.Descriptors.Descriptor",
          "17015:             getDescriptor() {",
          "17017:         }",
          "17019:         @java.lang.Override",
          "17020:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "17021:             internalGetFieldAccessorTable() {",
          "17023:               .ensureFieldAccessorsInitialized(",
          "17025:         }",
          "17028:         private Builder() {",
          "17029:           maybeForceBuilderInitialization();",
          "17030:         }",
          "",
          "[Removed Lines]",
          "17013:           org.mlflow.api.proto.Service.GetExperiment.ResponseOrBuilder {",
          "17016:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_descriptor;",
          "17022:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_fieldAccessorTable",
          "17024:                   org.mlflow.api.proto.Service.GetExperiment.Response.class, org.mlflow.api.proto.Service.GetExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "23410:           org.mlflow.api.proto.Service.DeleteExperiment.ResponseOrBuilder {",
          "23413:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_descriptor;",
          "23419:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_fieldAccessorTable",
          "23421:                   org.mlflow.api.proto.Service.DeleteExperiment.Response.class, org.mlflow.api.proto.Service.DeleteExperiment.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 176 ---",
          "[Context before]",
          "17037:         private void maybeForceBuilderInitialization() {",
          "17038:           if (com.google.protobuf.GeneratedMessageV3",
          "17039:                   .alwaysUseFieldBuilders) {",
          "17041:           }",
          "17042:         }",
          "17043:         @java.lang.Override",
          "17044:         public Builder clear() {",
          "17045:           super.clear();",
          "17052:           return this;",
          "17053:         }",
          "17055:         @java.lang.Override",
          "17056:         public com.google.protobuf.Descriptors.Descriptor",
          "17057:             getDescriptorForType() {",
          "17059:         }",
          "17061:         @java.lang.Override",
          "17064:         }",
          "17066:         @java.lang.Override",
          "17069:           if (!result.isInitialized()) {",
          "17070:             throw newUninitializedMessageException(result);",
          "17071:           }",
          "",
          "[Removed Lines]",
          "17040:             getExperimentFieldBuilder();",
          "17046:           if (experimentBuilder_ == null) {",
          "17047:             experiment_ = null;",
          "17048:           } else {",
          "17049:             experimentBuilder_.clear();",
          "17050:           }",
          "17051:           bitField0_ = (bitField0_ & ~0x00000001);",
          "17058:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_Response_descriptor;",
          "17062:         public org.mlflow.api.proto.Service.GetExperiment.Response getDefaultInstanceForType() {",
          "17063:           return org.mlflow.api.proto.Service.GetExperiment.Response.getDefaultInstance();",
          "17067:         public org.mlflow.api.proto.Service.GetExperiment.Response build() {",
          "17068:           org.mlflow.api.proto.Service.GetExperiment.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "23448:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_descriptor;",
          "23452:         public org.mlflow.api.proto.Service.DeleteExperiment.Response getDefaultInstanceForType() {",
          "23453:           return org.mlflow.api.proto.Service.DeleteExperiment.Response.getDefaultInstance();",
          "23457:         public org.mlflow.api.proto.Service.DeleteExperiment.Response build() {",
          "23458:           org.mlflow.api.proto.Service.DeleteExperiment.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 177 ---",
          "[Context before]",
          "17073:         }",
          "17075:         @java.lang.Override",
          "17089:           onBuilt();",
          "17090:           return result;",
          "17091:         }",
          "",
          "[Removed Lines]",
          "17076:         public org.mlflow.api.proto.Service.GetExperiment.Response buildPartial() {",
          "17077:           org.mlflow.api.proto.Service.GetExperiment.Response result = new org.mlflow.api.proto.Service.GetExperiment.Response(this);",
          "17078:           int from_bitField0_ = bitField0_;",
          "17079:           int to_bitField0_ = 0;",
          "17080:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "17081:             if (experimentBuilder_ == null) {",
          "17082:               result.experiment_ = experiment_;",
          "17083:             } else {",
          "17084:               result.experiment_ = experimentBuilder_.build();",
          "17085:             }",
          "17086:             to_bitField0_ |= 0x00000001;",
          "17087:           }",
          "17088:           result.bitField0_ = to_bitField0_;",
          "",
          "[Added Lines]",
          "23466:         public org.mlflow.api.proto.Service.DeleteExperiment.Response buildPartial() {",
          "23467:           org.mlflow.api.proto.Service.DeleteExperiment.Response result = new org.mlflow.api.proto.Service.DeleteExperiment.Response(this);",
          "",
          "---------------",
          "--- Hunk 178 ---",
          "[Context before]",
          "17124:         }",
          "17125:         @java.lang.Override",
          "17126:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "17129:           } else {",
          "17130:             super.mergeFrom(other);",
          "17131:             return this;",
          "17132:           }",
          "17133:         }",
          "17140:           this.mergeUnknownFields(other.unknownFields);",
          "17141:           onChanged();",
          "17142:           return this;",
          "",
          "[Removed Lines]",
          "17127:           if (other instanceof org.mlflow.api.proto.Service.GetExperiment.Response) {",
          "17128:             return mergeFrom((org.mlflow.api.proto.Service.GetExperiment.Response)other);",
          "17135:         public Builder mergeFrom(org.mlflow.api.proto.Service.GetExperiment.Response other) {",
          "17136:           if (other == org.mlflow.api.proto.Service.GetExperiment.Response.getDefaultInstance()) return this;",
          "17137:           if (other.hasExperiment()) {",
          "17138:             mergeExperiment(other.getExperiment());",
          "17139:           }",
          "",
          "[Added Lines]",
          "23506:           if (other instanceof org.mlflow.api.proto.Service.DeleteExperiment.Response) {",
          "23507:             return mergeFrom((org.mlflow.api.proto.Service.DeleteExperiment.Response)other);",
          "23514:         public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteExperiment.Response other) {",
          "23515:           if (other == org.mlflow.api.proto.Service.DeleteExperiment.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 179 ---",
          "[Context before]",
          "17152:             com.google.protobuf.CodedInputStream input,",
          "17153:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17154:             throws java.io.IOException {",
          "17156:           try {",
          "17157:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "17158:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "17160:             throw e.unwrapIOException();",
          "17161:           } finally {",
          "17162:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "17155:           org.mlflow.api.proto.Service.GetExperiment.Response parsedMessage = null;",
          "17159:             parsedMessage = (org.mlflow.api.proto.Service.GetExperiment.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "23531:           org.mlflow.api.proto.Service.DeleteExperiment.Response parsedMessage = null;",
          "23535:             parsedMessage = (org.mlflow.api.proto.Service.DeleteExperiment.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 180 ---",
          "[Context before]",
          "17165:           }",
          "17166:           return this;",
          "17167:         }",
          "17325:         @java.lang.Override",
          "17326:         public final Builder setUnknownFields(",
          "17327:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "17168:         private int bitField0_;",
          "17170:         private org.mlflow.api.proto.Service.Experiment experiment_;",
          "17171:         private com.google.protobuf.SingleFieldBuilderV3<",
          "17172:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder> experimentBuilder_;",
          "17181:         public boolean hasExperiment() {",
          "17182:           return ((bitField0_ & 0x00000001) != 0);",
          "17183:         }",
          "17192:         public org.mlflow.api.proto.Service.Experiment getExperiment() {",
          "17193:           if (experimentBuilder_ == null) {",
          "17194:             return experiment_ == null ? org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "17195:           } else {",
          "17196:             return experimentBuilder_.getMessage();",
          "17197:           }",
          "17198:         }",
          "17206:         public Builder setExperiment(org.mlflow.api.proto.Service.Experiment value) {",
          "17207:           if (experimentBuilder_ == null) {",
          "17208:             if (value == null) {",
          "17209:               throw new NullPointerException();",
          "17210:             }",
          "17211:             experiment_ = value;",
          "17212:             onChanged();",
          "17213:           } else {",
          "17214:             experimentBuilder_.setMessage(value);",
          "17215:           }",
          "17216:           bitField0_ |= 0x00000001;",
          "17217:           return this;",
          "17218:         }",
          "17226:         public Builder setExperiment(",
          "17227:             org.mlflow.api.proto.Service.Experiment.Builder builderForValue) {",
          "17228:           if (experimentBuilder_ == null) {",
          "17229:             experiment_ = builderForValue.build();",
          "17230:             onChanged();",
          "17231:           } else {",
          "17232:             experimentBuilder_.setMessage(builderForValue.build());",
          "17233:           }",
          "17234:           bitField0_ |= 0x00000001;",
          "17235:           return this;",
          "17236:         }",
          "17244:         public Builder mergeExperiment(org.mlflow.api.proto.Service.Experiment value) {",
          "17245:           if (experimentBuilder_ == null) {",
          "17246:             if (((bitField0_ & 0x00000001) != 0) &&",
          "17247:                 experiment_ != null &&",
          "17248:                 experiment_ != org.mlflow.api.proto.Service.Experiment.getDefaultInstance()) {",
          "17249:               experiment_ =",
          "17250:                 org.mlflow.api.proto.Service.Experiment.newBuilder(experiment_).mergeFrom(value).buildPartial();",
          "17251:             } else {",
          "17252:               experiment_ = value;",
          "17253:             }",
          "17254:             onChanged();",
          "17255:           } else {",
          "17256:             experimentBuilder_.mergeFrom(value);",
          "17257:           }",
          "17258:           bitField0_ |= 0x00000001;",
          "17259:           return this;",
          "17260:         }",
          "17268:         public Builder clearExperiment() {",
          "17269:           if (experimentBuilder_ == null) {",
          "17270:             experiment_ = null;",
          "17271:             onChanged();",
          "17272:           } else {",
          "17273:             experimentBuilder_.clear();",
          "17274:           }",
          "17275:           bitField0_ = (bitField0_ & ~0x00000001);",
          "17276:           return this;",
          "17277:         }",
          "17285:         public org.mlflow.api.proto.Service.Experiment.Builder getExperimentBuilder() {",
          "17286:           bitField0_ |= 0x00000001;",
          "17287:           onChanged();",
          "17288:           return getExperimentFieldBuilder().getBuilder();",
          "17289:         }",
          "17297:         public org.mlflow.api.proto.Service.ExperimentOrBuilder getExperimentOrBuilder() {",
          "17298:           if (experimentBuilder_ != null) {",
          "17299:             return experimentBuilder_.getMessageOrBuilder();",
          "17300:           } else {",
          "17301:             return experiment_ == null ?",
          "17302:                 org.mlflow.api.proto.Service.Experiment.getDefaultInstance() : experiment_;",
          "17303:           }",
          "17304:         }",
          "17312:         private com.google.protobuf.SingleFieldBuilderV3<",
          "17313:             org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>",
          "17314:             getExperimentFieldBuilder() {",
          "17315:           if (experimentBuilder_ == null) {",
          "17316:             experimentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "17317:                 org.mlflow.api.proto.Service.Experiment, org.mlflow.api.proto.Service.Experiment.Builder, org.mlflow.api.proto.Service.ExperimentOrBuilder>(",
          "17318:                     getExperiment(),",
          "17319:                     getParentForChildren(),",
          "17320:                     isClean());",
          "17321:             experiment_ = null;",
          "17322:           }",
          "17323:           return experimentBuilder_;",
          "17324:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 181 ---",
          "[Context before]",
          "17335:         }",
          "17339:       }",
          "17343:       static {",
          "17345:       }",
          "17348:         return DEFAULT_INSTANCE;",
          "17349:       }",
          "",
          "[Removed Lines]",
          "17342:       private static final org.mlflow.api.proto.Service.GetExperiment.Response DEFAULT_INSTANCE;",
          "17344:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetExperiment.Response();",
          "17347:       public static org.mlflow.api.proto.Service.GetExperiment.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "23561:       private static final org.mlflow.api.proto.Service.DeleteExperiment.Response DEFAULT_INSTANCE;",
          "23563:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteExperiment.Response();",
          "23566:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 182 ---",
          "[Context before]",
          "17369:       }",
          "17371:       @java.lang.Override",
          "17373:         return DEFAULT_INSTANCE;",
          "17374:       }",
          "",
          "[Removed Lines]",
          "17372:       public org.mlflow.api.proto.Service.GetExperiment.Response getDefaultInstanceForType() {",
          "",
          "[Added Lines]",
          "23591:       public org.mlflow.api.proto.Service.DeleteExperiment.Response getDefaultInstanceForType() {",
          "",
          "---------------",
          "--- Hunk 183 ---",
          "[Context before]",
          "17475:       if (obj == this) {",
          "17476:        return true;",
          "17477:       }",
          "17479:         return super.equals(obj);",
          "17480:       }",
          "17483:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "17484:       if (hasExperimentId()) {",
          "",
          "[Removed Lines]",
          "17478:       if (!(obj instanceof org.mlflow.api.proto.Service.GetExperiment)) {",
          "17481:       org.mlflow.api.proto.Service.GetExperiment other = (org.mlflow.api.proto.Service.GetExperiment) obj;",
          "",
          "[Added Lines]",
          "23697:       if (!(obj instanceof org.mlflow.api.proto.Service.DeleteExperiment)) {",
          "23700:       org.mlflow.api.proto.Service.DeleteExperiment other = (org.mlflow.api.proto.Service.DeleteExperiment) obj;",
          "",
          "---------------",
          "--- Hunk 184 ---",
          "[Context before]",
          "17505:       return hash;",
          "17506:     }",
          "17509:         java.nio.ByteBuffer data)",
          "17510:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "17511:       return PARSER.parseFrom(data);",
          "17512:     }",
          "17514:         java.nio.ByteBuffer data,",
          "17515:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17516:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "17517:       return PARSER.parseFrom(data, extensionRegistry);",
          "17518:     }",
          "17520:         com.google.protobuf.ByteString data)",
          "17521:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "17522:       return PARSER.parseFrom(data);",
          "17523:     }",
          "17525:         com.google.protobuf.ByteString data,",
          "17526:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17527:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "17528:       return PARSER.parseFrom(data, extensionRegistry);",
          "17529:     }",
          "17531:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "17532:       return PARSER.parseFrom(data);",
          "17533:     }",
          "17535:         byte[] data,",
          "17536:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17537:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "17538:       return PARSER.parseFrom(data, extensionRegistry);",
          "17539:     }",
          "17541:         throws java.io.IOException {",
          "17542:       return com.google.protobuf.GeneratedMessageV3",
          "17543:           .parseWithIOException(PARSER, input);",
          "17544:     }",
          "17546:         java.io.InputStream input,",
          "17547:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17548:         throws java.io.IOException {",
          "17549:       return com.google.protobuf.GeneratedMessageV3",
          "17550:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "17551:     }",
          "17553:         throws java.io.IOException {",
          "17554:       return com.google.protobuf.GeneratedMessageV3",
          "17555:           .parseDelimitedWithIOException(PARSER, input);",
          "17556:     }",
          "17558:         java.io.InputStream input,",
          "17559:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17560:         throws java.io.IOException {",
          "17561:       return com.google.protobuf.GeneratedMessageV3",
          "17562:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "17563:     }",
          "17565:         com.google.protobuf.CodedInputStream input)",
          "17566:         throws java.io.IOException {",
          "17567:       return com.google.protobuf.GeneratedMessageV3",
          "17568:           .parseWithIOException(PARSER, input);",
          "17569:     }",
          "17571:         com.google.protobuf.CodedInputStream input,",
          "17572:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17573:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "17508:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "17513:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "17519:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "17524:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "17530:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(byte[] data)",
          "17534:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "17540:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(java.io.InputStream input)",
          "17545:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "17552:     public static org.mlflow.api.proto.Service.GetExperiment parseDelimitedFrom(java.io.InputStream input)",
          "17557:     public static org.mlflow.api.proto.Service.GetExperiment parseDelimitedFrom(",
          "17564:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "17570:     public static org.mlflow.api.proto.Service.GetExperiment parseFrom(",
          "",
          "[Added Lines]",
          "23727:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "23732:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "23738:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "23743:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "23749:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(byte[] data)",
          "23753:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "23759:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(java.io.InputStream input)",
          "23764:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "23771:     public static org.mlflow.api.proto.Service.DeleteExperiment parseDelimitedFrom(java.io.InputStream input)",
          "23776:     public static org.mlflow.api.proto.Service.DeleteExperiment parseDelimitedFrom(",
          "23783:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "23789:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "",
          "---------------",
          "--- Hunk 185 ---",
          "[Context before]",
          "17580:     public static Builder newBuilder() {",
          "17581:       return DEFAULT_INSTANCE.toBuilder();",
          "17582:     }",
          "17584:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "17585:     }",
          "17586:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "17583:     public static Builder newBuilder(org.mlflow.api.proto.Service.GetExperiment prototype) {",
          "",
          "[Added Lines]",
          "23802:     public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteExperiment prototype) {",
          "",
          "---------------",
          "--- Hunk 186 ---",
          "[Context before]",
          "17596:       return builder;",
          "17597:     }",
          "17601:     public static final class Builder extends",
          "17602:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "17605:       public static final com.google.protobuf.Descriptors.Descriptor",
          "17606:           getDescriptor() {",
          "17608:       }",
          "17610:       @java.lang.Override",
          "17611:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "17612:           internalGetFieldAccessorTable() {",
          "17614:             .ensureFieldAccessorsInitialized(",
          "17616:       }",
          "17619:       private Builder() {",
          "17620:         maybeForceBuilderInitialization();",
          "17621:       }",
          "",
          "[Removed Lines]",
          "17604:         org.mlflow.api.proto.Service.GetExperimentOrBuilder {",
          "17607:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_descriptor;",
          "17613:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_fieldAccessorTable",
          "17615:                 org.mlflow.api.proto.Service.GetExperiment.class, org.mlflow.api.proto.Service.GetExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "23823:         org.mlflow.api.proto.Service.DeleteExperimentOrBuilder {",
          "23826:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_descriptor;",
          "23832:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_fieldAccessorTable",
          "23834:                 org.mlflow.api.proto.Service.DeleteExperiment.class, org.mlflow.api.proto.Service.DeleteExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 187 ---",
          "[Context before]",
          "17641:       @java.lang.Override",
          "17642:       public com.google.protobuf.Descriptors.Descriptor",
          "17643:           getDescriptorForType() {",
          "17645:       }",
          "17647:       @java.lang.Override",
          "17650:       }",
          "17652:       @java.lang.Override",
          "17655:         if (!result.isInitialized()) {",
          "17656:           throw newUninitializedMessageException(result);",
          "17657:         }",
          "",
          "[Removed Lines]",
          "17644:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetExperiment_descriptor;",
          "17648:       public org.mlflow.api.proto.Service.GetExperiment getDefaultInstanceForType() {",
          "17649:         return org.mlflow.api.proto.Service.GetExperiment.getDefaultInstance();",
          "17653:       public org.mlflow.api.proto.Service.GetExperiment build() {",
          "17654:         org.mlflow.api.proto.Service.GetExperiment result = buildPartial();",
          "",
          "[Added Lines]",
          "23863:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_descriptor;",
          "23867:       public org.mlflow.api.proto.Service.DeleteExperiment getDefaultInstanceForType() {",
          "23868:         return org.mlflow.api.proto.Service.DeleteExperiment.getDefaultInstance();",
          "23872:       public org.mlflow.api.proto.Service.DeleteExperiment build() {",
          "23873:         org.mlflow.api.proto.Service.DeleteExperiment result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 188 ---",
          "[Context before]",
          "17659:       }",
          "17661:       @java.lang.Override",
          "17664:         int from_bitField0_ = bitField0_;",
          "17665:         int to_bitField0_ = 0;",
          "17666:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "17662:       public org.mlflow.api.proto.Service.GetExperiment buildPartial() {",
          "17663:         org.mlflow.api.proto.Service.GetExperiment result = new org.mlflow.api.proto.Service.GetExperiment(this);",
          "",
          "[Added Lines]",
          "23881:       public org.mlflow.api.proto.Service.DeleteExperiment buildPartial() {",
          "23882:         org.mlflow.api.proto.Service.DeleteExperiment result = new org.mlflow.api.proto.Service.DeleteExperiment(this);",
          "",
          "---------------",
          "--- Hunk 189 ---",
          "[Context before]",
          "17706:       }",
          "17707:       @java.lang.Override",
          "17708:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "17711:         } else {",
          "17712:           super.mergeFrom(other);",
          "17713:           return this;",
          "17714:         }",
          "17715:       }",
          "17719:         if (other.hasExperimentId()) {",
          "17720:           bitField0_ |= 0x00000001;",
          "17721:           experimentId_ = other.experimentId_;",
          "",
          "[Removed Lines]",
          "17709:         if (other instanceof org.mlflow.api.proto.Service.GetExperiment) {",
          "17710:           return mergeFrom((org.mlflow.api.proto.Service.GetExperiment)other);",
          "17717:       public Builder mergeFrom(org.mlflow.api.proto.Service.GetExperiment other) {",
          "17718:         if (other == org.mlflow.api.proto.Service.GetExperiment.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "23928:         if (other instanceof org.mlflow.api.proto.Service.DeleteExperiment) {",
          "23929:           return mergeFrom((org.mlflow.api.proto.Service.DeleteExperiment)other);",
          "23936:       public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteExperiment other) {",
          "23937:         if (other == org.mlflow.api.proto.Service.DeleteExperiment.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 190 ---",
          "[Context before]",
          "17736:           com.google.protobuf.CodedInputStream input,",
          "17737:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17738:           throws java.io.IOException {",
          "17740:         try {",
          "17741:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "17742:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "17744:           throw e.unwrapIOException();",
          "17745:         } finally {",
          "17746:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "17739:         org.mlflow.api.proto.Service.GetExperiment parsedMessage = null;",
          "17743:           parsedMessage = (org.mlflow.api.proto.Service.GetExperiment) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "23958:         org.mlflow.api.proto.Service.DeleteExperiment parsedMessage = null;",
          "23962:           parsedMessage = (org.mlflow.api.proto.Service.DeleteExperiment) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 191 ---",
          "[Context before]",
          "17871:       }",
          "17875:     }",
          "17879:     static {",
          "17881:     }",
          "17884:       return DEFAULT_INSTANCE;",
          "17885:     }",
          "17889:       @java.lang.Override",
          "17891:           com.google.protobuf.CodedInputStream input,",
          "17892:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17893:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "17895:       }",
          "17896:     };",
          "17899:       return PARSER;",
          "17900:     }",
          "17902:     @java.lang.Override",
          "17904:       return PARSER;",
          "17905:     }",
          "17907:     @java.lang.Override",
          "17909:       return DEFAULT_INSTANCE;",
          "17910:     }",
          "17912:   }",
          "17916:       com.google.protobuf.MessageOrBuilder {",
          "",
          "[Removed Lines]",
          "17878:     private static final org.mlflow.api.proto.Service.GetExperiment DEFAULT_INSTANCE;",
          "17880:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetExperiment();",
          "17883:     public static org.mlflow.api.proto.Service.GetExperiment getDefaultInstance() {",
          "17887:     @java.lang.Deprecated public static final com.google.protobuf.Parser<GetExperiment>",
          "17888:         PARSER = new com.google.protobuf.AbstractParser<GetExperiment>() {",
          "17890:       public GetExperiment parsePartialFrom(",
          "17894:         return new GetExperiment(input, extensionRegistry);",
          "17898:     public static com.google.protobuf.Parser<GetExperiment> parser() {",
          "17903:     public com.google.protobuf.Parser<GetExperiment> getParserForType() {",
          "17908:     public org.mlflow.api.proto.Service.GetExperiment getDefaultInstanceForType() {",
          "17914:   public interface DeleteExperimentOrBuilder extends",
          "",
          "[Added Lines]",
          "24097:     private static final org.mlflow.api.proto.Service.DeleteExperiment DEFAULT_INSTANCE;",
          "24099:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteExperiment();",
          "24102:     public static org.mlflow.api.proto.Service.DeleteExperiment getDefaultInstance() {",
          "24106:     @java.lang.Deprecated public static final com.google.protobuf.Parser<DeleteExperiment>",
          "24107:         PARSER = new com.google.protobuf.AbstractParser<DeleteExperiment>() {",
          "24109:       public DeleteExperiment parsePartialFrom(",
          "24113:         return new DeleteExperiment(input, extensionRegistry);",
          "24117:     public static com.google.protobuf.Parser<DeleteExperiment> parser() {",
          "24122:     public com.google.protobuf.Parser<DeleteExperiment> getParserForType() {",
          "24127:     public org.mlflow.api.proto.Service.DeleteExperiment getDefaultInstanceForType() {",
          "24133:   public interface RestoreExperimentOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 192 ---",
          "[Context before]",
          "17945:         getExperimentIdBytes();",
          "17946:   }",
          "17951:       com.google.protobuf.GeneratedMessageV3 implements",
          "17954:   private static final long serialVersionUID = 0L;",
          "17957:       super(builder);",
          "17958:     }",
          "17960:       experimentId_ = \"\";",
          "17961:     }",
          "",
          "[Removed Lines]",
          "17950:   public static final class DeleteExperiment extends",
          "17953:       DeleteExperimentOrBuilder {",
          "17956:     private DeleteExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "17959:     private DeleteExperiment() {",
          "",
          "[Added Lines]",
          "24169:   public static final class RestoreExperiment extends",
          "24172:       RestoreExperimentOrBuilder {",
          "24175:     private RestoreExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "24178:     private RestoreExperiment() {",
          "",
          "---------------",
          "--- Hunk 193 ---",
          "[Context before]",
          "17964:     @SuppressWarnings({\"unused\"})",
          "17965:     protected java.lang.Object newInstance(",
          "17966:         UnusedPrivateParameter unused) {",
          "17968:     }",
          "17970:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "17967:       return new DeleteExperiment();",
          "",
          "[Added Lines]",
          "24186:       return new RestoreExperiment();",
          "",
          "---------------",
          "--- Hunk 194 ---",
          "[Context before]",
          "17972:     getUnknownFields() {",
          "17973:       return this.unknownFields;",
          "17974:     }",
          "17976:         com.google.protobuf.CodedInputStream input,",
          "17977:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "17978:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "17975:     private DeleteExperiment(",
          "",
          "[Added Lines]",
          "24194:     private RestoreExperiment(",
          "",
          "---------------",
          "--- Hunk 195 ---",
          "[Context before]",
          "18018:     }",
          "18019:     public static final com.google.protobuf.Descriptors.Descriptor",
          "18020:         getDescriptor() {",
          "18022:     }",
          "18024:     @java.lang.Override",
          "18025:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "18026:         internalGetFieldAccessorTable() {",
          "18028:           .ensureFieldAccessorsInitialized(",
          "18030:     }",
          "18032:     public interface ResponseOrBuilder extends",
          "18034:         com.google.protobuf.MessageOrBuilder {",
          "18035:     }",
          "18039:     public static final class Response extends",
          "18040:         com.google.protobuf.GeneratedMessageV3 implements",
          "18042:         ResponseOrBuilder {",
          "18043:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "18021:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_descriptor;",
          "18027:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_fieldAccessorTable",
          "18029:               org.mlflow.api.proto.Service.DeleteExperiment.class, org.mlflow.api.proto.Service.DeleteExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "24240:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_descriptor;",
          "24246:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_fieldAccessorTable",
          "24248:               org.mlflow.api.proto.Service.RestoreExperiment.class, org.mlflow.api.proto.Service.RestoreExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 196 ---",
          "[Context before]",
          "18099:       }",
          "18100:       public static final com.google.protobuf.Descriptors.Descriptor",
          "18101:           getDescriptor() {",
          "18103:       }",
          "18105:       @java.lang.Override",
          "18106:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "18107:           internalGetFieldAccessorTable() {",
          "18109:             .ensureFieldAccessorsInitialized(",
          "18111:       }",
          "18113:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "18102:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_descriptor;",
          "18108:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_fieldAccessorTable",
          "18110:                 org.mlflow.api.proto.Service.DeleteExperiment.Response.class, org.mlflow.api.proto.Service.DeleteExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "24321:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_descriptor;",
          "24327:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_fieldAccessorTable",
          "24329:                 org.mlflow.api.proto.Service.RestoreExperiment.Response.class, org.mlflow.api.proto.Service.RestoreExperiment.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 197 ---",
          "[Context before]",
          "18143:         if (obj == this) {",
          "18144:          return true;",
          "18145:         }",
          "18147:           return super.equals(obj);",
          "18148:         }",
          "18151:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "18152:         return true;",
          "",
          "[Removed Lines]",
          "18146:         if (!(obj instanceof org.mlflow.api.proto.Service.DeleteExperiment.Response)) {",
          "18149:         org.mlflow.api.proto.Service.DeleteExperiment.Response other = (org.mlflow.api.proto.Service.DeleteExperiment.Response) obj;",
          "",
          "[Added Lines]",
          "24365:         if (!(obj instanceof org.mlflow.api.proto.Service.RestoreExperiment.Response)) {",
          "24368:         org.mlflow.api.proto.Service.RestoreExperiment.Response other = (org.mlflow.api.proto.Service.RestoreExperiment.Response) obj;",
          "",
          "---------------",
          "--- Hunk 198 ---",
          "[Context before]",
          "18164:         return hash;",
          "18165:       }",
          "18168:           java.nio.ByteBuffer data)",
          "18169:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "18170:         return PARSER.parseFrom(data);",
          "18171:       }",
          "18173:           java.nio.ByteBuffer data,",
          "18174:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18175:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "18176:         return PARSER.parseFrom(data, extensionRegistry);",
          "18177:       }",
          "18179:           com.google.protobuf.ByteString data)",
          "18180:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "18181:         return PARSER.parseFrom(data);",
          "18182:       }",
          "18184:           com.google.protobuf.ByteString data,",
          "18185:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18186:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "18187:         return PARSER.parseFrom(data, extensionRegistry);",
          "18188:       }",
          "18190:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "18191:         return PARSER.parseFrom(data);",
          "18192:       }",
          "18194:           byte[] data,",
          "18195:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18196:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "18197:         return PARSER.parseFrom(data, extensionRegistry);",
          "18198:       }",
          "18200:           throws java.io.IOException {",
          "18201:         return com.google.protobuf.GeneratedMessageV3",
          "18202:             .parseWithIOException(PARSER, input);",
          "18203:       }",
          "18205:           java.io.InputStream input,",
          "18206:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18207:           throws java.io.IOException {",
          "18208:         return com.google.protobuf.GeneratedMessageV3",
          "18209:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "18210:       }",
          "18212:           throws java.io.IOException {",
          "18213:         return com.google.protobuf.GeneratedMessageV3",
          "18214:             .parseDelimitedWithIOException(PARSER, input);",
          "18215:       }",
          "18217:           java.io.InputStream input,",
          "18218:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18219:           throws java.io.IOException {",
          "18220:         return com.google.protobuf.GeneratedMessageV3",
          "18221:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "18222:       }",
          "18224:           com.google.protobuf.CodedInputStream input)",
          "18225:           throws java.io.IOException {",
          "18226:         return com.google.protobuf.GeneratedMessageV3",
          "18227:             .parseWithIOException(PARSER, input);",
          "18228:       }",
          "18230:           com.google.protobuf.CodedInputStream input,",
          "18231:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18232:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "18167:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "18172:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "18178:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "18183:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "18189:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(byte[] data)",
          "18193:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "18199:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(java.io.InputStream input)",
          "18204:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "18211:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "18216:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseDelimitedFrom(",
          "18223:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "18229:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response parseFrom(",
          "",
          "[Added Lines]",
          "24386:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "24391:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "24397:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "24402:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "24408:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(byte[] data)",
          "24412:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "24418:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(java.io.InputStream input)",
          "24423:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "24430:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "24435:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseDelimitedFrom(",
          "24442:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "24448:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 199 ---",
          "[Context before]",
          "18239:       public static Builder newBuilder() {",
          "18240:         return DEFAULT_INSTANCE.toBuilder();",
          "18241:       }",
          "18243:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "18244:       }",
          "18245:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "18242:       public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteExperiment.Response prototype) {",
          "",
          "[Added Lines]",
          "24461:       public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreExperiment.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 200 ---",
          "[Context before]",
          "18255:         return builder;",
          "18256:       }",
          "18260:       public static final class Builder extends",
          "18261:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "18264:         public static final com.google.protobuf.Descriptors.Descriptor",
          "18265:             getDescriptor() {",
          "18267:         }",
          "18269:         @java.lang.Override",
          "18270:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "18271:             internalGetFieldAccessorTable() {",
          "18273:               .ensureFieldAccessorsInitialized(",
          "18275:         }",
          "18278:         private Builder() {",
          "18279:           maybeForceBuilderInitialization();",
          "18280:         }",
          "",
          "[Removed Lines]",
          "18263:           org.mlflow.api.proto.Service.DeleteExperiment.ResponseOrBuilder {",
          "18266:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_descriptor;",
          "18272:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_fieldAccessorTable",
          "18274:                   org.mlflow.api.proto.Service.DeleteExperiment.Response.class, org.mlflow.api.proto.Service.DeleteExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "24482:           org.mlflow.api.proto.Service.RestoreExperiment.ResponseOrBuilder {",
          "24485:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_descriptor;",
          "24491:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_fieldAccessorTable",
          "24493:                   org.mlflow.api.proto.Service.RestoreExperiment.Response.class, org.mlflow.api.proto.Service.RestoreExperiment.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 201 ---",
          "[Context before]",
          "18298:         @java.lang.Override",
          "18299:         public com.google.protobuf.Descriptors.Descriptor",
          "18300:             getDescriptorForType() {",
          "18302:         }",
          "18304:         @java.lang.Override",
          "18307:         }",
          "18309:         @java.lang.Override",
          "18312:           if (!result.isInitialized()) {",
          "18313:             throw newUninitializedMessageException(result);",
          "18314:           }",
          "",
          "[Removed Lines]",
          "18301:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_Response_descriptor;",
          "18305:         public org.mlflow.api.proto.Service.DeleteExperiment.Response getDefaultInstanceForType() {",
          "18306:           return org.mlflow.api.proto.Service.DeleteExperiment.Response.getDefaultInstance();",
          "18310:         public org.mlflow.api.proto.Service.DeleteExperiment.Response build() {",
          "18311:           org.mlflow.api.proto.Service.DeleteExperiment.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "24520:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_descriptor;",
          "24524:         public org.mlflow.api.proto.Service.RestoreExperiment.Response getDefaultInstanceForType() {",
          "24525:           return org.mlflow.api.proto.Service.RestoreExperiment.Response.getDefaultInstance();",
          "24529:         public org.mlflow.api.proto.Service.RestoreExperiment.Response build() {",
          "24530:           org.mlflow.api.proto.Service.RestoreExperiment.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 202 ---",
          "[Context before]",
          "18316:         }",
          "18318:         @java.lang.Override",
          "18321:           onBuilt();",
          "18322:           return result;",
          "18323:         }",
          "",
          "[Removed Lines]",
          "18319:         public org.mlflow.api.proto.Service.DeleteExperiment.Response buildPartial() {",
          "18320:           org.mlflow.api.proto.Service.DeleteExperiment.Response result = new org.mlflow.api.proto.Service.DeleteExperiment.Response(this);",
          "",
          "[Added Lines]",
          "24538:         public org.mlflow.api.proto.Service.RestoreExperiment.Response buildPartial() {",
          "24539:           org.mlflow.api.proto.Service.RestoreExperiment.Response result = new org.mlflow.api.proto.Service.RestoreExperiment.Response(this);",
          "",
          "---------------",
          "--- Hunk 203 ---",
          "[Context before]",
          "18356:         }",
          "18357:         @java.lang.Override",
          "18358:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "18361:           } else {",
          "18362:             super.mergeFrom(other);",
          "18363:             return this;",
          "18364:           }",
          "18365:         }",
          "18369:           this.mergeUnknownFields(other.unknownFields);",
          "18370:           onChanged();",
          "18371:           return this;",
          "",
          "[Removed Lines]",
          "18359:           if (other instanceof org.mlflow.api.proto.Service.DeleteExperiment.Response) {",
          "18360:             return mergeFrom((org.mlflow.api.proto.Service.DeleteExperiment.Response)other);",
          "18367:         public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteExperiment.Response other) {",
          "18368:           if (other == org.mlflow.api.proto.Service.DeleteExperiment.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "24578:           if (other instanceof org.mlflow.api.proto.Service.RestoreExperiment.Response) {",
          "24579:             return mergeFrom((org.mlflow.api.proto.Service.RestoreExperiment.Response)other);",
          "24586:         public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreExperiment.Response other) {",
          "24587:           if (other == org.mlflow.api.proto.Service.RestoreExperiment.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 204 ---",
          "[Context before]",
          "18381:             com.google.protobuf.CodedInputStream input,",
          "18382:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18383:             throws java.io.IOException {",
          "18385:           try {",
          "18386:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "18387:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "18389:             throw e.unwrapIOException();",
          "18390:           } finally {",
          "18391:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "18384:           org.mlflow.api.proto.Service.DeleteExperiment.Response parsedMessage = null;",
          "18388:             parsedMessage = (org.mlflow.api.proto.Service.DeleteExperiment.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "24603:           org.mlflow.api.proto.Service.RestoreExperiment.Response parsedMessage = null;",
          "24607:             parsedMessage = (org.mlflow.api.proto.Service.RestoreExperiment.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 205 ---",
          "[Context before]",
          "18407:         }",
          "18411:       }",
          "18415:       static {",
          "18417:       }",
          "18420:         return DEFAULT_INSTANCE;",
          "18421:       }",
          "",
          "[Removed Lines]",
          "18414:       private static final org.mlflow.api.proto.Service.DeleteExperiment.Response DEFAULT_INSTANCE;",
          "18416:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteExperiment.Response();",
          "18419:       public static org.mlflow.api.proto.Service.DeleteExperiment.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "24633:       private static final org.mlflow.api.proto.Service.RestoreExperiment.Response DEFAULT_INSTANCE;",
          "24635:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreExperiment.Response();",
          "24638:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 206 ---",
          "[Context before]",
          "18441:       }",
          "18443:       @java.lang.Override",
          "18445:         return DEFAULT_INSTANCE;",
          "18446:       }",
          "",
          "[Removed Lines]",
          "18444:       public org.mlflow.api.proto.Service.DeleteExperiment.Response getDefaultInstanceForType() {",
          "",
          "[Added Lines]",
          "24663:       public org.mlflow.api.proto.Service.RestoreExperiment.Response getDefaultInstanceForType() {",
          "",
          "---------------",
          "--- Hunk 207 ---",
          "[Context before]",
          "18547:       if (obj == this) {",
          "18548:        return true;",
          "18549:       }",
          "18551:         return super.equals(obj);",
          "18552:       }",
          "18555:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "18556:       if (hasExperimentId()) {",
          "",
          "[Removed Lines]",
          "18550:       if (!(obj instanceof org.mlflow.api.proto.Service.DeleteExperiment)) {",
          "18553:       org.mlflow.api.proto.Service.DeleteExperiment other = (org.mlflow.api.proto.Service.DeleteExperiment) obj;",
          "",
          "[Added Lines]",
          "24769:       if (!(obj instanceof org.mlflow.api.proto.Service.RestoreExperiment)) {",
          "24772:       org.mlflow.api.proto.Service.RestoreExperiment other = (org.mlflow.api.proto.Service.RestoreExperiment) obj;",
          "",
          "---------------",
          "--- Hunk 208 ---",
          "[Context before]",
          "18577:       return hash;",
          "18578:     }",
          "18581:         java.nio.ByteBuffer data)",
          "18582:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "18583:       return PARSER.parseFrom(data);",
          "18584:     }",
          "18586:         java.nio.ByteBuffer data,",
          "18587:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18588:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "18589:       return PARSER.parseFrom(data, extensionRegistry);",
          "18590:     }",
          "18592:         com.google.protobuf.ByteString data)",
          "18593:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "18594:       return PARSER.parseFrom(data);",
          "18595:     }",
          "18597:         com.google.protobuf.ByteString data,",
          "18598:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18599:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "18600:       return PARSER.parseFrom(data, extensionRegistry);",
          "18601:     }",
          "18603:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "18604:       return PARSER.parseFrom(data);",
          "18605:     }",
          "18607:         byte[] data,",
          "18608:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18609:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "18610:       return PARSER.parseFrom(data, extensionRegistry);",
          "18611:     }",
          "18613:         throws java.io.IOException {",
          "18614:       return com.google.protobuf.GeneratedMessageV3",
          "18615:           .parseWithIOException(PARSER, input);",
          "18616:     }",
          "18618:         java.io.InputStream input,",
          "18619:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18620:         throws java.io.IOException {",
          "18621:       return com.google.protobuf.GeneratedMessageV3",
          "18622:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "18623:     }",
          "18625:         throws java.io.IOException {",
          "18626:       return com.google.protobuf.GeneratedMessageV3",
          "18627:           .parseDelimitedWithIOException(PARSER, input);",
          "18628:     }",
          "18630:         java.io.InputStream input,",
          "18631:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18632:         throws java.io.IOException {",
          "18633:       return com.google.protobuf.GeneratedMessageV3",
          "18634:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "18635:     }",
          "18637:         com.google.protobuf.CodedInputStream input)",
          "18638:         throws java.io.IOException {",
          "18639:       return com.google.protobuf.GeneratedMessageV3",
          "18640:           .parseWithIOException(PARSER, input);",
          "18641:     }",
          "18643:         com.google.protobuf.CodedInputStream input,",
          "18644:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18645:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "18580:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "18585:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "18591:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "18596:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "18602:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(byte[] data)",
          "18606:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "18612:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(java.io.InputStream input)",
          "18617:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "18624:     public static org.mlflow.api.proto.Service.DeleteExperiment parseDelimitedFrom(java.io.InputStream input)",
          "18629:     public static org.mlflow.api.proto.Service.DeleteExperiment parseDelimitedFrom(",
          "18636:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "18642:     public static org.mlflow.api.proto.Service.DeleteExperiment parseFrom(",
          "",
          "[Added Lines]",
          "24799:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "24804:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "24810:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "24815:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "24821:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(byte[] data)",
          "24825:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "24831:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(java.io.InputStream input)",
          "24836:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "24843:     public static org.mlflow.api.proto.Service.RestoreExperiment parseDelimitedFrom(java.io.InputStream input)",
          "24848:     public static org.mlflow.api.proto.Service.RestoreExperiment parseDelimitedFrom(",
          "24855:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "24861:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "",
          "---------------",
          "--- Hunk 209 ---",
          "[Context before]",
          "18652:     public static Builder newBuilder() {",
          "18653:       return DEFAULT_INSTANCE.toBuilder();",
          "18654:     }",
          "18656:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "18657:     }",
          "18658:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "18655:     public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteExperiment prototype) {",
          "",
          "[Added Lines]",
          "24874:     public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreExperiment prototype) {",
          "",
          "---------------",
          "--- Hunk 210 ---",
          "[Context before]",
          "18668:       return builder;",
          "18669:     }",
          "18673:     public static final class Builder extends",
          "18674:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "18677:       public static final com.google.protobuf.Descriptors.Descriptor",
          "18678:           getDescriptor() {",
          "18680:       }",
          "18682:       @java.lang.Override",
          "18683:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "18684:           internalGetFieldAccessorTable() {",
          "18686:             .ensureFieldAccessorsInitialized(",
          "18688:       }",
          "18691:       private Builder() {",
          "18692:         maybeForceBuilderInitialization();",
          "18693:       }",
          "",
          "[Removed Lines]",
          "18676:         org.mlflow.api.proto.Service.DeleteExperimentOrBuilder {",
          "18679:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_descriptor;",
          "18685:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_fieldAccessorTable",
          "18687:                 org.mlflow.api.proto.Service.DeleteExperiment.class, org.mlflow.api.proto.Service.DeleteExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "24895:         org.mlflow.api.proto.Service.RestoreExperimentOrBuilder {",
          "24898:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_descriptor;",
          "24904:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_fieldAccessorTable",
          "24906:                 org.mlflow.api.proto.Service.RestoreExperiment.class, org.mlflow.api.proto.Service.RestoreExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 211 ---",
          "[Context before]",
          "18713:       @java.lang.Override",
          "18714:       public com.google.protobuf.Descriptors.Descriptor",
          "18715:           getDescriptorForType() {",
          "18717:       }",
          "18719:       @java.lang.Override",
          "18722:       }",
          "18724:       @java.lang.Override",
          "18727:         if (!result.isInitialized()) {",
          "18728:           throw newUninitializedMessageException(result);",
          "18729:         }",
          "",
          "[Removed Lines]",
          "18716:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteExperiment_descriptor;",
          "18720:       public org.mlflow.api.proto.Service.DeleteExperiment getDefaultInstanceForType() {",
          "18721:         return org.mlflow.api.proto.Service.DeleteExperiment.getDefaultInstance();",
          "18725:       public org.mlflow.api.proto.Service.DeleteExperiment build() {",
          "18726:         org.mlflow.api.proto.Service.DeleteExperiment result = buildPartial();",
          "",
          "[Added Lines]",
          "24935:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_descriptor;",
          "24939:       public org.mlflow.api.proto.Service.RestoreExperiment getDefaultInstanceForType() {",
          "24940:         return org.mlflow.api.proto.Service.RestoreExperiment.getDefaultInstance();",
          "24944:       public org.mlflow.api.proto.Service.RestoreExperiment build() {",
          "24945:         org.mlflow.api.proto.Service.RestoreExperiment result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 212 ---",
          "[Context before]",
          "18731:       }",
          "18733:       @java.lang.Override",
          "18736:         int from_bitField0_ = bitField0_;",
          "18737:         int to_bitField0_ = 0;",
          "18738:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "18734:       public org.mlflow.api.proto.Service.DeleteExperiment buildPartial() {",
          "18735:         org.mlflow.api.proto.Service.DeleteExperiment result = new org.mlflow.api.proto.Service.DeleteExperiment(this);",
          "",
          "[Added Lines]",
          "24953:       public org.mlflow.api.proto.Service.RestoreExperiment buildPartial() {",
          "24954:         org.mlflow.api.proto.Service.RestoreExperiment result = new org.mlflow.api.proto.Service.RestoreExperiment(this);",
          "",
          "---------------",
          "--- Hunk 213 ---",
          "[Context before]",
          "18778:       }",
          "18779:       @java.lang.Override",
          "18780:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "18783:         } else {",
          "18784:           super.mergeFrom(other);",
          "18785:           return this;",
          "18786:         }",
          "18787:       }",
          "18791:         if (other.hasExperimentId()) {",
          "18792:           bitField0_ |= 0x00000001;",
          "18793:           experimentId_ = other.experimentId_;",
          "",
          "[Removed Lines]",
          "18781:         if (other instanceof org.mlflow.api.proto.Service.DeleteExperiment) {",
          "18782:           return mergeFrom((org.mlflow.api.proto.Service.DeleteExperiment)other);",
          "18789:       public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteExperiment other) {",
          "18790:         if (other == org.mlflow.api.proto.Service.DeleteExperiment.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "25000:         if (other instanceof org.mlflow.api.proto.Service.RestoreExperiment) {",
          "25001:           return mergeFrom((org.mlflow.api.proto.Service.RestoreExperiment)other);",
          "25008:       public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreExperiment other) {",
          "25009:         if (other == org.mlflow.api.proto.Service.RestoreExperiment.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 214 ---",
          "[Context before]",
          "18808:           com.google.protobuf.CodedInputStream input,",
          "18809:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18810:           throws java.io.IOException {",
          "18812:         try {",
          "18813:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "18814:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "18816:           throw e.unwrapIOException();",
          "18817:         } finally {",
          "18818:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "18811:         org.mlflow.api.proto.Service.DeleteExperiment parsedMessage = null;",
          "18815:           parsedMessage = (org.mlflow.api.proto.Service.DeleteExperiment) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "25030:         org.mlflow.api.proto.Service.RestoreExperiment parsedMessage = null;",
          "25034:           parsedMessage = (org.mlflow.api.proto.Service.RestoreExperiment) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 215 ---",
          "[Context before]",
          "18943:       }",
          "18947:     }",
          "18951:     static {",
          "18953:     }",
          "18956:       return DEFAULT_INSTANCE;",
          "18957:     }",
          "18961:       @java.lang.Override",
          "18963:           com.google.protobuf.CodedInputStream input,",
          "18964:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "18965:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "18967:       }",
          "18968:     };",
          "18971:       return PARSER;",
          "18972:     }",
          "18974:     @java.lang.Override",
          "18976:       return PARSER;",
          "18977:     }",
          "18979:     @java.lang.Override",
          "18981:       return DEFAULT_INSTANCE;",
          "18982:     }",
          "18984:   }",
          "18988:       com.google.protobuf.MessageOrBuilder {",
          "",
          "[Removed Lines]",
          "18950:     private static final org.mlflow.api.proto.Service.DeleteExperiment DEFAULT_INSTANCE;",
          "18952:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteExperiment();",
          "18955:     public static org.mlflow.api.proto.Service.DeleteExperiment getDefaultInstance() {",
          "18959:     @java.lang.Deprecated public static final com.google.protobuf.Parser<DeleteExperiment>",
          "18960:         PARSER = new com.google.protobuf.AbstractParser<DeleteExperiment>() {",
          "18962:       public DeleteExperiment parsePartialFrom(",
          "18966:         return new DeleteExperiment(input, extensionRegistry);",
          "18970:     public static com.google.protobuf.Parser<DeleteExperiment> parser() {",
          "18975:     public com.google.protobuf.Parser<DeleteExperiment> getParserForType() {",
          "18980:     public org.mlflow.api.proto.Service.DeleteExperiment getDefaultInstanceForType() {",
          "18986:   public interface RestoreExperimentOrBuilder extends",
          "",
          "[Added Lines]",
          "25169:     private static final org.mlflow.api.proto.Service.RestoreExperiment DEFAULT_INSTANCE;",
          "25171:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreExperiment();",
          "25174:     public static org.mlflow.api.proto.Service.RestoreExperiment getDefaultInstance() {",
          "25178:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RestoreExperiment>",
          "25179:         PARSER = new com.google.protobuf.AbstractParser<RestoreExperiment>() {",
          "25181:       public RestoreExperiment parsePartialFrom(",
          "25185:         return new RestoreExperiment(input, extensionRegistry);",
          "25189:     public static com.google.protobuf.Parser<RestoreExperiment> parser() {",
          "25194:     public com.google.protobuf.Parser<RestoreExperiment> getParserForType() {",
          "25199:     public org.mlflow.api.proto.Service.RestoreExperiment getDefaultInstanceForType() {",
          "25205:   public interface UpdateExperimentOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 216 ---",
          "[Context before]",
          "19016:     com.google.protobuf.ByteString",
          "19017:         getExperimentIdBytes();",
          "19018:   }",
          "19023:       com.google.protobuf.GeneratedMessageV3 implements",
          "19026:   private static final long serialVersionUID = 0L;",
          "19029:       super(builder);",
          "19030:     }",
          "19032:       experimentId_ = \"\";",
          "19033:     }",
          "19035:     @java.lang.Override",
          "19036:     @SuppressWarnings({\"unused\"})",
          "19037:     protected java.lang.Object newInstance(",
          "19038:         UnusedPrivateParameter unused) {",
          "19040:     }",
          "19042:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "19022:   public static final class RestoreExperiment extends",
          "19025:       RestoreExperimentOrBuilder {",
          "19028:     private RestoreExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "19031:     private RestoreExperiment() {",
          "19039:       return new RestoreExperiment();",
          "",
          "[Added Lines]",
          "25246:     boolean hasNewName();",
          "25255:     java.lang.String getNewName();",
          "25264:     com.google.protobuf.ByteString",
          "25265:         getNewNameBytes();",
          "25270:   public static final class UpdateExperiment extends",
          "25273:       UpdateExperimentOrBuilder {",
          "25276:     private UpdateExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "25279:     private UpdateExperiment() {",
          "25281:       newName_ = \"\";",
          "25288:       return new UpdateExperiment();",
          "",
          "---------------",
          "--- Hunk 217 ---",
          "[Context before]",
          "19044:     getUnknownFields() {",
          "19045:       return this.unknownFields;",
          "19046:     }",
          "19048:         com.google.protobuf.CodedInputStream input,",
          "19049:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19050:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "19047:     private RestoreExperiment(",
          "",
          "[Added Lines]",
          "25296:     private UpdateExperiment(",
          "",
          "---------------",
          "--- Hunk 218 ---",
          "[Context before]",
          "19069:               experimentId_ = bs;",
          "19070:               break;",
          "19071:             }",
          "19072:             default: {",
          "19073:               if (!parseUnknownField(",
          "19074:                   input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25321:             case 18: {",
          "25322:               com.google.protobuf.ByteString bs = input.readBytes();",
          "25323:               bitField0_ |= 0x00000002;",
          "25324:               newName_ = bs;",
          "25325:               break;",
          "25326:             }",
          "",
          "---------------",
          "--- Hunk 219 ---",
          "[Context before]",
          "19090:     }",
          "19091:     public static final com.google.protobuf.Descriptors.Descriptor",
          "19092:         getDescriptor() {",
          "19094:     }",
          "19096:     @java.lang.Override",
          "19097:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "19098:         internalGetFieldAccessorTable() {",
          "19100:           .ensureFieldAccessorsInitialized(",
          "19102:     }",
          "19104:     public interface ResponseOrBuilder extends",
          "19106:         com.google.protobuf.MessageOrBuilder {",
          "19107:     }",
          "19111:     public static final class Response extends",
          "19112:         com.google.protobuf.GeneratedMessageV3 implements",
          "19114:         ResponseOrBuilder {",
          "19115:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "19093:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_descriptor;",
          "19099:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_fieldAccessorTable",
          "19101:               org.mlflow.api.proto.Service.RestoreExperiment.class, org.mlflow.api.proto.Service.RestoreExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "25348:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_descriptor;",
          "25354:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_fieldAccessorTable",
          "25356:               org.mlflow.api.proto.Service.UpdateExperiment.class, org.mlflow.api.proto.Service.UpdateExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 220 ---",
          "[Context before]",
          "19171:       }",
          "19172:       public static final com.google.protobuf.Descriptors.Descriptor",
          "19173:           getDescriptor() {",
          "19175:       }",
          "19177:       @java.lang.Override",
          "19178:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "19179:           internalGetFieldAccessorTable() {",
          "19181:             .ensureFieldAccessorsInitialized(",
          "19183:       }",
          "19185:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "19174:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_descriptor;",
          "19180:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_fieldAccessorTable",
          "19182:                 org.mlflow.api.proto.Service.RestoreExperiment.Response.class, org.mlflow.api.proto.Service.RestoreExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "25429:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_descriptor;",
          "25435:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_fieldAccessorTable",
          "25437:                 org.mlflow.api.proto.Service.UpdateExperiment.Response.class, org.mlflow.api.proto.Service.UpdateExperiment.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 221 ---",
          "[Context before]",
          "19215:         if (obj == this) {",
          "19216:          return true;",
          "19217:         }",
          "19219:           return super.equals(obj);",
          "19220:         }",
          "19223:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "19224:         return true;",
          "",
          "[Removed Lines]",
          "19218:         if (!(obj instanceof org.mlflow.api.proto.Service.RestoreExperiment.Response)) {",
          "19221:         org.mlflow.api.proto.Service.RestoreExperiment.Response other = (org.mlflow.api.proto.Service.RestoreExperiment.Response) obj;",
          "",
          "[Added Lines]",
          "25473:         if (!(obj instanceof org.mlflow.api.proto.Service.UpdateExperiment.Response)) {",
          "25476:         org.mlflow.api.proto.Service.UpdateExperiment.Response other = (org.mlflow.api.proto.Service.UpdateExperiment.Response) obj;",
          "",
          "---------------",
          "--- Hunk 222 ---",
          "[Context before]",
          "19236:         return hash;",
          "19237:       }",
          "19240:           java.nio.ByteBuffer data)",
          "19241:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "19242:         return PARSER.parseFrom(data);",
          "19243:       }",
          "19245:           java.nio.ByteBuffer data,",
          "19246:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19247:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "19248:         return PARSER.parseFrom(data, extensionRegistry);",
          "19249:       }",
          "19251:           com.google.protobuf.ByteString data)",
          "19252:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "19253:         return PARSER.parseFrom(data);",
          "19254:       }",
          "19256:           com.google.protobuf.ByteString data,",
          "19257:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19258:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "19259:         return PARSER.parseFrom(data, extensionRegistry);",
          "19260:       }",
          "19262:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "19263:         return PARSER.parseFrom(data);",
          "19264:       }",
          "19266:           byte[] data,",
          "19267:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19268:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "19269:         return PARSER.parseFrom(data, extensionRegistry);",
          "19270:       }",
          "19272:           throws java.io.IOException {",
          "19273:         return com.google.protobuf.GeneratedMessageV3",
          "19274:             .parseWithIOException(PARSER, input);",
          "19275:       }",
          "19277:           java.io.InputStream input,",
          "19278:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19279:           throws java.io.IOException {",
          "19280:         return com.google.protobuf.GeneratedMessageV3",
          "19281:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "19282:       }",
          "19284:           throws java.io.IOException {",
          "19285:         return com.google.protobuf.GeneratedMessageV3",
          "19286:             .parseDelimitedWithIOException(PARSER, input);",
          "19287:       }",
          "19289:           java.io.InputStream input,",
          "19290:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19291:           throws java.io.IOException {",
          "19292:         return com.google.protobuf.GeneratedMessageV3",
          "19293:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "19294:       }",
          "19296:           com.google.protobuf.CodedInputStream input)",
          "19297:           throws java.io.IOException {",
          "19298:         return com.google.protobuf.GeneratedMessageV3",
          "19299:             .parseWithIOException(PARSER, input);",
          "19300:       }",
          "19302:           com.google.protobuf.CodedInputStream input,",
          "19303:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19304:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "19239:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "19244:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "19250:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "19255:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "19261:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(byte[] data)",
          "19265:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "19271:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(java.io.InputStream input)",
          "19276:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "19283:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "19288:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseDelimitedFrom(",
          "19295:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "19301:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response parseFrom(",
          "",
          "[Added Lines]",
          "25494:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "25499:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "25505:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "25510:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "25516:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(byte[] data)",
          "25520:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "25526:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(java.io.InputStream input)",
          "25531:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "25538:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "25543:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseDelimitedFrom(",
          "25550:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "25556:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 223 ---",
          "[Context before]",
          "19311:       public static Builder newBuilder() {",
          "19312:         return DEFAULT_INSTANCE.toBuilder();",
          "19313:       }",
          "19315:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "19316:       }",
          "19317:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "19314:       public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreExperiment.Response prototype) {",
          "",
          "[Added Lines]",
          "25569:       public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateExperiment.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 224 ---",
          "[Context before]",
          "19327:         return builder;",
          "19328:       }",
          "19332:       public static final class Builder extends",
          "19333:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "19336:         public static final com.google.protobuf.Descriptors.Descriptor",
          "19337:             getDescriptor() {",
          "19339:         }",
          "19341:         @java.lang.Override",
          "19342:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "19343:             internalGetFieldAccessorTable() {",
          "19345:               .ensureFieldAccessorsInitialized(",
          "19347:         }",
          "19350:         private Builder() {",
          "19351:           maybeForceBuilderInitialization();",
          "19352:         }",
          "",
          "[Removed Lines]",
          "19335:           org.mlflow.api.proto.Service.RestoreExperiment.ResponseOrBuilder {",
          "19338:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_descriptor;",
          "19344:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_fieldAccessorTable",
          "19346:                   org.mlflow.api.proto.Service.RestoreExperiment.Response.class, org.mlflow.api.proto.Service.RestoreExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "25590:           org.mlflow.api.proto.Service.UpdateExperiment.ResponseOrBuilder {",
          "25593:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_descriptor;",
          "25599:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_fieldAccessorTable",
          "25601:                   org.mlflow.api.proto.Service.UpdateExperiment.Response.class, org.mlflow.api.proto.Service.UpdateExperiment.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 225 ---",
          "[Context before]",
          "19370:         @java.lang.Override",
          "19371:         public com.google.protobuf.Descriptors.Descriptor",
          "19372:             getDescriptorForType() {",
          "19374:         }",
          "19376:         @java.lang.Override",
          "19379:         }",
          "19381:         @java.lang.Override",
          "19384:           if (!result.isInitialized()) {",
          "19385:             throw newUninitializedMessageException(result);",
          "19386:           }",
          "",
          "[Removed Lines]",
          "19373:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_Response_descriptor;",
          "19377:         public org.mlflow.api.proto.Service.RestoreExperiment.Response getDefaultInstanceForType() {",
          "19378:           return org.mlflow.api.proto.Service.RestoreExperiment.Response.getDefaultInstance();",
          "19382:         public org.mlflow.api.proto.Service.RestoreExperiment.Response build() {",
          "19383:           org.mlflow.api.proto.Service.RestoreExperiment.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "25628:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_descriptor;",
          "25632:         public org.mlflow.api.proto.Service.UpdateExperiment.Response getDefaultInstanceForType() {",
          "25633:           return org.mlflow.api.proto.Service.UpdateExperiment.Response.getDefaultInstance();",
          "25637:         public org.mlflow.api.proto.Service.UpdateExperiment.Response build() {",
          "25638:           org.mlflow.api.proto.Service.UpdateExperiment.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 226 ---",
          "[Context before]",
          "19388:         }",
          "19390:         @java.lang.Override",
          "19393:           onBuilt();",
          "19394:           return result;",
          "19395:         }",
          "",
          "[Removed Lines]",
          "19391:         public org.mlflow.api.proto.Service.RestoreExperiment.Response buildPartial() {",
          "19392:           org.mlflow.api.proto.Service.RestoreExperiment.Response result = new org.mlflow.api.proto.Service.RestoreExperiment.Response(this);",
          "",
          "[Added Lines]",
          "25646:         public org.mlflow.api.proto.Service.UpdateExperiment.Response buildPartial() {",
          "25647:           org.mlflow.api.proto.Service.UpdateExperiment.Response result = new org.mlflow.api.proto.Service.UpdateExperiment.Response(this);",
          "",
          "---------------",
          "--- Hunk 227 ---",
          "[Context before]",
          "19428:         }",
          "19429:         @java.lang.Override",
          "19430:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "19433:           } else {",
          "19434:             super.mergeFrom(other);",
          "19435:             return this;",
          "19436:           }",
          "19437:         }",
          "19441:           this.mergeUnknownFields(other.unknownFields);",
          "19442:           onChanged();",
          "19443:           return this;",
          "",
          "[Removed Lines]",
          "19431:           if (other instanceof org.mlflow.api.proto.Service.RestoreExperiment.Response) {",
          "19432:             return mergeFrom((org.mlflow.api.proto.Service.RestoreExperiment.Response)other);",
          "19439:         public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreExperiment.Response other) {",
          "19440:           if (other == org.mlflow.api.proto.Service.RestoreExperiment.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "25686:           if (other instanceof org.mlflow.api.proto.Service.UpdateExperiment.Response) {",
          "25687:             return mergeFrom((org.mlflow.api.proto.Service.UpdateExperiment.Response)other);",
          "25694:         public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateExperiment.Response other) {",
          "25695:           if (other == org.mlflow.api.proto.Service.UpdateExperiment.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 228 ---",
          "[Context before]",
          "19453:             com.google.protobuf.CodedInputStream input,",
          "19454:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19455:             throws java.io.IOException {",
          "19457:           try {",
          "19458:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "19459:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "19461:             throw e.unwrapIOException();",
          "19462:           } finally {",
          "19463:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "19456:           org.mlflow.api.proto.Service.RestoreExperiment.Response parsedMessage = null;",
          "19460:             parsedMessage = (org.mlflow.api.proto.Service.RestoreExperiment.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "25711:           org.mlflow.api.proto.Service.UpdateExperiment.Response parsedMessage = null;",
          "25715:             parsedMessage = (org.mlflow.api.proto.Service.UpdateExperiment.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 229 ---",
          "[Context before]",
          "19479:         }",
          "19483:       }",
          "19487:       static {",
          "19489:       }",
          "19492:         return DEFAULT_INSTANCE;",
          "19493:       }",
          "",
          "[Removed Lines]",
          "19486:       private static final org.mlflow.api.proto.Service.RestoreExperiment.Response DEFAULT_INSTANCE;",
          "19488:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreExperiment.Response();",
          "19491:       public static org.mlflow.api.proto.Service.RestoreExperiment.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "25741:       private static final org.mlflow.api.proto.Service.UpdateExperiment.Response DEFAULT_INSTANCE;",
          "25743:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateExperiment.Response();",
          "25746:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 230 ---",
          "[Context before]",
          "19513:       }",
          "19515:       @java.lang.Override",
          "19517:         return DEFAULT_INSTANCE;",
          "19518:       }",
          "",
          "[Removed Lines]",
          "19516:       public org.mlflow.api.proto.Service.RestoreExperiment.Response getDefaultInstanceForType() {",
          "",
          "[Added Lines]",
          "25771:       public org.mlflow.api.proto.Service.UpdateExperiment.Response getDefaultInstanceForType() {",
          "",
          "---------------",
          "--- Hunk 231 ---",
          "[Context before]",
          "19580:       }",
          "19581:     }",
          "19583:     private byte memoizedIsInitialized = -1;",
          "19584:     @java.lang.Override",
          "19585:     public final boolean isInitialized() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25838:     public static final int NEW_NAME_FIELD_NUMBER = 2;",
          "25839:     private volatile java.lang.Object newName_;",
          "25848:     @java.lang.Override",
          "25849:     public boolean hasNewName() {",
          "25850:       return ((bitField0_ & 0x00000002) != 0);",
          "25851:     }",
          "25860:     @java.lang.Override",
          "25861:     public java.lang.String getNewName() {",
          "25862:       java.lang.Object ref = newName_;",
          "25863:       if (ref instanceof java.lang.String) {",
          "25864:         return (java.lang.String) ref;",
          "25865:       } else {",
          "25866:         com.google.protobuf.ByteString bs =",
          "25867:             (com.google.protobuf.ByteString) ref;",
          "25868:         java.lang.String s = bs.toStringUtf8();",
          "25869:         if (bs.isValidUtf8()) {",
          "25870:           newName_ = s;",
          "25871:         }",
          "25872:         return s;",
          "25873:       }",
          "25874:     }",
          "25883:     @java.lang.Override",
          "25884:     public com.google.protobuf.ByteString",
          "25885:         getNewNameBytes() {",
          "25886:       java.lang.Object ref = newName_;",
          "25887:       if (ref instanceof java.lang.String) {",
          "25888:         com.google.protobuf.ByteString b =",
          "25889:             com.google.protobuf.ByteString.copyFromUtf8(",
          "25890:                 (java.lang.String) ref);",
          "25891:         newName_ = b;",
          "25892:         return b;",
          "25893:       } else {",
          "25894:         return (com.google.protobuf.ByteString) ref;",
          "25895:       }",
          "25896:     }",
          "",
          "---------------",
          "--- Hunk 232 ---",
          "[Context before]",
          "19597:       if (((bitField0_ & 0x00000001) != 0)) {",
          "19598:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "19599:       }",
          "19600:       unknownFields.writeTo(output);",
          "19601:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25915:       if (((bitField0_ & 0x00000002) != 0)) {",
          "25916:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, newName_);",
          "25917:       }",
          "",
          "---------------",
          "--- Hunk 233 ---",
          "[Context before]",
          "19609:       if (((bitField0_ & 0x00000001) != 0)) {",
          "19610:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "19611:       }",
          "19612:       size += unknownFields.getSerializedSize();",
          "19613:       memoizedSize = size;",
          "19614:       return size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25930:       if (((bitField0_ & 0x00000002) != 0)) {",
          "25931:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, newName_);",
          "25932:       }",
          "",
          "---------------",
          "--- Hunk 234 ---",
          "[Context before]",
          "19619:       if (obj == this) {",
          "19620:        return true;",
          "19621:       }",
          "19623:         return super.equals(obj);",
          "19624:       }",
          "19627:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "19628:       if (hasExperimentId()) {",
          "19629:         if (!getExperimentId()",
          "19630:             .equals(other.getExperimentId())) return false;",
          "19631:       }",
          "19632:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "19633:       return true;",
          "19634:     }",
          "",
          "[Removed Lines]",
          "19622:       if (!(obj instanceof org.mlflow.api.proto.Service.RestoreExperiment)) {",
          "19625:       org.mlflow.api.proto.Service.RestoreExperiment other = (org.mlflow.api.proto.Service.RestoreExperiment) obj;",
          "",
          "[Added Lines]",
          "25943:       if (!(obj instanceof org.mlflow.api.proto.Service.UpdateExperiment)) {",
          "25946:       org.mlflow.api.proto.Service.UpdateExperiment other = (org.mlflow.api.proto.Service.UpdateExperiment) obj;",
          "25953:       if (hasNewName() != other.hasNewName()) return false;",
          "25954:       if (hasNewName()) {",
          "25955:         if (!getNewName()",
          "25956:             .equals(other.getNewName())) return false;",
          "25957:       }",
          "",
          "---------------",
          "--- Hunk 235 ---",
          "[Context before]",
          "19644:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "19645:         hash = (53 * hash) + getExperimentId().hashCode();",
          "19646:       }",
          "19647:       hash = (29 * hash) + unknownFields.hashCode();",
          "19648:       memoizedHashCode = hash;",
          "19649:       return hash;",
          "19650:     }",
          "19653:         java.nio.ByteBuffer data)",
          "19654:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "19655:       return PARSER.parseFrom(data);",
          "19656:     }",
          "19658:         java.nio.ByteBuffer data,",
          "19659:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19660:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "19661:       return PARSER.parseFrom(data, extensionRegistry);",
          "19662:     }",
          "19664:         com.google.protobuf.ByteString data)",
          "19665:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "19666:       return PARSER.parseFrom(data);",
          "19667:     }",
          "19669:         com.google.protobuf.ByteString data,",
          "19670:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19671:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "19672:       return PARSER.parseFrom(data, extensionRegistry);",
          "19673:     }",
          "19675:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "19676:       return PARSER.parseFrom(data);",
          "19677:     }",
          "19679:         byte[] data,",
          "19680:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19681:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "19682:       return PARSER.parseFrom(data, extensionRegistry);",
          "19683:     }",
          "19685:         throws java.io.IOException {",
          "19686:       return com.google.protobuf.GeneratedMessageV3",
          "19687:           .parseWithIOException(PARSER, input);",
          "19688:     }",
          "19690:         java.io.InputStream input,",
          "19691:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19692:         throws java.io.IOException {",
          "19693:       return com.google.protobuf.GeneratedMessageV3",
          "19694:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "19695:     }",
          "19697:         throws java.io.IOException {",
          "19698:       return com.google.protobuf.GeneratedMessageV3",
          "19699:           .parseDelimitedWithIOException(PARSER, input);",
          "19700:     }",
          "19702:         java.io.InputStream input,",
          "19703:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19704:         throws java.io.IOException {",
          "19705:       return com.google.protobuf.GeneratedMessageV3",
          "19706:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "19707:     }",
          "19709:         com.google.protobuf.CodedInputStream input)",
          "19710:         throws java.io.IOException {",
          "19711:       return com.google.protobuf.GeneratedMessageV3",
          "19712:           .parseWithIOException(PARSER, input);",
          "19713:     }",
          "19715:         com.google.protobuf.CodedInputStream input,",
          "19716:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19717:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "19652:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "19657:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "19663:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "19668:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "19674:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(byte[] data)",
          "19678:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "19684:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(java.io.InputStream input)",
          "19689:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "19696:     public static org.mlflow.api.proto.Service.RestoreExperiment parseDelimitedFrom(java.io.InputStream input)",
          "19701:     public static org.mlflow.api.proto.Service.RestoreExperiment parseDelimitedFrom(",
          "19708:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "19714:     public static org.mlflow.api.proto.Service.RestoreExperiment parseFrom(",
          "",
          "[Added Lines]",
          "25973:       if (hasNewName()) {",
          "25974:         hash = (37 * hash) + NEW_NAME_FIELD_NUMBER;",
          "25975:         hash = (53 * hash) + getNewName().hashCode();",
          "25976:       }",
          "25982:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "25987:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "25993:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "25998:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "26004:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(byte[] data)",
          "26008:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "26014:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(java.io.InputStream input)",
          "26019:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "26026:     public static org.mlflow.api.proto.Service.UpdateExperiment parseDelimitedFrom(java.io.InputStream input)",
          "26031:     public static org.mlflow.api.proto.Service.UpdateExperiment parseDelimitedFrom(",
          "26038:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "26044:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "",
          "---------------",
          "--- Hunk 236 ---",
          "[Context before]",
          "19724:     public static Builder newBuilder() {",
          "19725:       return DEFAULT_INSTANCE.toBuilder();",
          "19726:     }",
          "19728:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "19729:     }",
          "19730:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "19727:     public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreExperiment prototype) {",
          "",
          "[Added Lines]",
          "26057:     public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateExperiment prototype) {",
          "",
          "---------------",
          "--- Hunk 237 ---",
          "[Context before]",
          "19740:       return builder;",
          "19741:     }",
          "19745:     public static final class Builder extends",
          "19746:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "19749:       public static final com.google.protobuf.Descriptors.Descriptor",
          "19750:           getDescriptor() {",
          "19752:       }",
          "19754:       @java.lang.Override",
          "19755:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "19756:           internalGetFieldAccessorTable() {",
          "19758:             .ensureFieldAccessorsInitialized(",
          "19760:       }",
          "19763:       private Builder() {",
          "19764:         maybeForceBuilderInitialization();",
          "19765:       }",
          "",
          "[Removed Lines]",
          "19748:         org.mlflow.api.proto.Service.RestoreExperimentOrBuilder {",
          "19751:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_descriptor;",
          "19757:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_fieldAccessorTable",
          "19759:                 org.mlflow.api.proto.Service.RestoreExperiment.class, org.mlflow.api.proto.Service.RestoreExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "26078:         org.mlflow.api.proto.Service.UpdateExperimentOrBuilder {",
          "26081:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_descriptor;",
          "26087:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_fieldAccessorTable",
          "26089:                 org.mlflow.api.proto.Service.UpdateExperiment.class, org.mlflow.api.proto.Service.UpdateExperiment.Builder.class);",
          "",
          "---------------",
          "--- Hunk 238 ---",
          "[Context before]",
          "19779:         super.clear();",
          "19780:         experimentId_ = \"\";",
          "19781:         bitField0_ = (bitField0_ & ~0x00000001);",
          "19782:         return this;",
          "19783:       }",
          "19785:       @java.lang.Override",
          "19786:       public com.google.protobuf.Descriptors.Descriptor",
          "19787:           getDescriptorForType() {",
          "19789:       }",
          "19791:       @java.lang.Override",
          "19794:       }",
          "19796:       @java.lang.Override",
          "19799:         if (!result.isInitialized()) {",
          "19800:           throw newUninitializedMessageException(result);",
          "19801:         }",
          "",
          "[Removed Lines]",
          "19788:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreExperiment_descriptor;",
          "19792:       public org.mlflow.api.proto.Service.RestoreExperiment getDefaultInstanceForType() {",
          "19793:         return org.mlflow.api.proto.Service.RestoreExperiment.getDefaultInstance();",
          "19797:       public org.mlflow.api.proto.Service.RestoreExperiment build() {",
          "19798:         org.mlflow.api.proto.Service.RestoreExperiment result = buildPartial();",
          "",
          "[Added Lines]",
          "26112:         newName_ = \"\";",
          "26113:         bitField0_ = (bitField0_ & ~0x00000002);",
          "26120:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_descriptor;",
          "26124:       public org.mlflow.api.proto.Service.UpdateExperiment getDefaultInstanceForType() {",
          "26125:         return org.mlflow.api.proto.Service.UpdateExperiment.getDefaultInstance();",
          "26129:       public org.mlflow.api.proto.Service.UpdateExperiment build() {",
          "26130:         org.mlflow.api.proto.Service.UpdateExperiment result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 239 ---",
          "[Context before]",
          "19803:       }",
          "19805:       @java.lang.Override",
          "19808:         int from_bitField0_ = bitField0_;",
          "19809:         int to_bitField0_ = 0;",
          "19810:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "19811:           to_bitField0_ |= 0x00000001;",
          "19812:         }",
          "19813:         result.experimentId_ = experimentId_;",
          "19814:         result.bitField0_ = to_bitField0_;",
          "19815:         onBuilt();",
          "19816:         return result;",
          "",
          "[Removed Lines]",
          "19806:       public org.mlflow.api.proto.Service.RestoreExperiment buildPartial() {",
          "19807:         org.mlflow.api.proto.Service.RestoreExperiment result = new org.mlflow.api.proto.Service.RestoreExperiment(this);",
          "",
          "[Added Lines]",
          "26138:       public org.mlflow.api.proto.Service.UpdateExperiment buildPartial() {",
          "26139:         org.mlflow.api.proto.Service.UpdateExperiment result = new org.mlflow.api.proto.Service.UpdateExperiment(this);",
          "26146:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "26147:           to_bitField0_ |= 0x00000002;",
          "26148:         }",
          "26149:         result.newName_ = newName_;",
          "",
          "---------------",
          "--- Hunk 240 ---",
          "[Context before]",
          "19850:       }",
          "19851:       @java.lang.Override",
          "19852:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "19855:         } else {",
          "19856:           super.mergeFrom(other);",
          "19857:           return this;",
          "19858:         }",
          "19859:       }",
          "19863:         if (other.hasExperimentId()) {",
          "19864:           bitField0_ |= 0x00000001;",
          "19865:           experimentId_ = other.experimentId_;",
          "19866:           onChanged();",
          "19867:         }",
          "19868:         this.mergeUnknownFields(other.unknownFields);",
          "19869:         onChanged();",
          "19870:         return this;",
          "",
          "[Removed Lines]",
          "19853:         if (other instanceof org.mlflow.api.proto.Service.RestoreExperiment) {",
          "19854:           return mergeFrom((org.mlflow.api.proto.Service.RestoreExperiment)other);",
          "19861:       public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreExperiment other) {",
          "19862:         if (other == org.mlflow.api.proto.Service.RestoreExperiment.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "26189:         if (other instanceof org.mlflow.api.proto.Service.UpdateExperiment) {",
          "26190:           return mergeFrom((org.mlflow.api.proto.Service.UpdateExperiment)other);",
          "26197:       public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateExperiment other) {",
          "26198:         if (other == org.mlflow.api.proto.Service.UpdateExperiment.getDefaultInstance()) return this;",
          "26204:         if (other.hasNewName()) {",
          "26205:           bitField0_ |= 0x00000002;",
          "26206:           newName_ = other.newName_;",
          "26207:           onChanged();",
          "26208:         }",
          "",
          "---------------",
          "--- Hunk 241 ---",
          "[Context before]",
          "19880:           com.google.protobuf.CodedInputStream input,",
          "19881:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "19882:           throws java.io.IOException {",
          "19884:         try {",
          "19885:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "19886:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "19888:           throw e.unwrapIOException();",
          "19889:         } finally {",
          "19890:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "19883:         org.mlflow.api.proto.Service.RestoreExperiment parsedMessage = null;",
          "19887:           parsedMessage = (org.mlflow.api.proto.Service.RestoreExperiment) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "26224:         org.mlflow.api.proto.Service.UpdateExperiment parsedMessage = null;",
          "26228:           parsedMessage = (org.mlflow.api.proto.Service.UpdateExperiment) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 242 ---",
          "[Context before]",
          "20002:         onChanged();",
          "20003:         return this;",
          "20004:       }",
          "20005:       @java.lang.Override",
          "20006:       public final Builder setUnknownFields(",
          "20007:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26347:       private java.lang.Object newName_ = \"\";",
          "26356:       public boolean hasNewName() {",
          "26357:         return ((bitField0_ & 0x00000002) != 0);",
          "26358:       }",
          "26367:       public java.lang.String getNewName() {",
          "26368:         java.lang.Object ref = newName_;",
          "26369:         if (!(ref instanceof java.lang.String)) {",
          "26370:           com.google.protobuf.ByteString bs =",
          "26371:               (com.google.protobuf.ByteString) ref;",
          "26372:           java.lang.String s = bs.toStringUtf8();",
          "26373:           if (bs.isValidUtf8()) {",
          "26374:             newName_ = s;",
          "26375:           }",
          "26376:           return s;",
          "26377:         } else {",
          "26378:           return (java.lang.String) ref;",
          "26379:         }",
          "26380:       }",
          "26389:       public com.google.protobuf.ByteString",
          "26390:           getNewNameBytes() {",
          "26391:         java.lang.Object ref = newName_;",
          "26392:         if (ref instanceof String) {",
          "26393:           com.google.protobuf.ByteString b =",
          "26394:               com.google.protobuf.ByteString.copyFromUtf8(",
          "26395:                   (java.lang.String) ref);",
          "26396:           newName_ = b;",
          "26397:           return b;",
          "26398:         } else {",
          "26399:           return (com.google.protobuf.ByteString) ref;",
          "26400:         }",
          "26401:       }",
          "26411:       public Builder setNewName(",
          "26412:           java.lang.String value) {",
          "26413:         if (value == null) {",
          "26414:     throw new NullPointerException();",
          "26415:   }",
          "26416:   bitField0_ |= 0x00000002;",
          "26417:         newName_ = value;",
          "26418:         onChanged();",
          "26419:         return this;",
          "26420:       }",
          "26429:       public Builder clearNewName() {",
          "26430:         bitField0_ = (bitField0_ & ~0x00000002);",
          "26431:         newName_ = getDefaultInstance().getNewName();",
          "26432:         onChanged();",
          "26433:         return this;",
          "26434:       }",
          "26444:       public Builder setNewNameBytes(",
          "26445:           com.google.protobuf.ByteString value) {",
          "26446:         if (value == null) {",
          "26447:     throw new NullPointerException();",
          "26448:   }",
          "26449:   bitField0_ |= 0x00000002;",
          "26450:         newName_ = value;",
          "26451:         onChanged();",
          "26452:         return this;",
          "26453:       }",
          "",
          "---------------",
          "--- Hunk 243 ---",
          "[Context before]",
          "20015:       }",
          "20019:     }",
          "20023:     static {",
          "20025:     }",
          "20028:       return DEFAULT_INSTANCE;",
          "20029:     }",
          "20033:       @java.lang.Override",
          "20035:           com.google.protobuf.CodedInputStream input,",
          "20036:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20037:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "20039:       }",
          "20040:     };",
          "20043:       return PARSER;",
          "20044:     }",
          "20046:     @java.lang.Override",
          "20048:       return PARSER;",
          "20049:     }",
          "20051:     @java.lang.Override",
          "20053:       return DEFAULT_INSTANCE;",
          "20054:     }",
          "20056:   }",
          "20060:       com.google.protobuf.MessageOrBuilder {",
          "",
          "[Removed Lines]",
          "20022:     private static final org.mlflow.api.proto.Service.RestoreExperiment DEFAULT_INSTANCE;",
          "20024:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreExperiment();",
          "20027:     public static org.mlflow.api.proto.Service.RestoreExperiment getDefaultInstance() {",
          "20031:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RestoreExperiment>",
          "20032:         PARSER = new com.google.protobuf.AbstractParser<RestoreExperiment>() {",
          "20034:       public RestoreExperiment parsePartialFrom(",
          "20038:         return new RestoreExperiment(input, extensionRegistry);",
          "20042:     public static com.google.protobuf.Parser<RestoreExperiment> parser() {",
          "20047:     public com.google.protobuf.Parser<RestoreExperiment> getParserForType() {",
          "20052:     public org.mlflow.api.proto.Service.RestoreExperiment getDefaultInstanceForType() {",
          "20058:   public interface UpdateExperimentOrBuilder extends",
          "",
          "[Added Lines]",
          "26471:     private static final org.mlflow.api.proto.Service.UpdateExperiment DEFAULT_INSTANCE;",
          "26473:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateExperiment();",
          "26476:     public static org.mlflow.api.proto.Service.UpdateExperiment getDefaultInstance() {",
          "26480:     @java.lang.Deprecated public static final com.google.protobuf.Parser<UpdateExperiment>",
          "26481:         PARSER = new com.google.protobuf.AbstractParser<UpdateExperiment>() {",
          "26483:       public UpdateExperiment parsePartialFrom(",
          "26487:         return new UpdateExperiment(input, extensionRegistry);",
          "26491:     public static com.google.protobuf.Parser<UpdateExperiment> parser() {",
          "26496:     public com.google.protobuf.Parser<UpdateExperiment> getParserForType() {",
          "26501:     public org.mlflow.api.proto.Service.UpdateExperiment getDefaultInstanceForType() {",
          "26507:   public interface CreateRunOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 244 ---",
          "[Context before]",
          "20119:   }",
          "20124:       com.google.protobuf.GeneratedMessageV3 implements",
          "20127:   private static final long serialVersionUID = 0L;",
          "20130:       super(builder);",
          "20131:     }",
          "20133:       experimentId_ = \"\";",
          "20135:     }",
          "20137:     @java.lang.Override",
          "20138:     @SuppressWarnings({\"unused\"})",
          "20139:     protected java.lang.Object newInstance(",
          "20140:         UnusedPrivateParameter unused) {",
          "20142:     }",
          "20144:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "20088:     com.google.protobuf.ByteString",
          "20089:         getExperimentIdBytes();",
          "20099:     boolean hasNewName();",
          "20108:     java.lang.String getNewName();",
          "20117:     com.google.protobuf.ByteString",
          "20118:         getNewNameBytes();",
          "20123:   public static final class UpdateExperiment extends",
          "20126:       UpdateExperimentOrBuilder {",
          "20129:     private UpdateExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "20132:     private UpdateExperiment() {",
          "20134:       newName_ = \"\";",
          "20141:       return new UpdateExperiment();",
          "",
          "[Added Lines]",
          "26537:     com.google.protobuf.ByteString",
          "26538:         getExperimentIdBytes();",
          "26550:     boolean hasUserId();",
          "26561:     java.lang.String getUserId();",
          "26572:     com.google.protobuf.ByteString",
          "26573:         getUserIdBytes();",
          "26583:     boolean hasRunName();",
          "26592:     java.lang.String getRunName();",
          "26601:     com.google.protobuf.ByteString",
          "26602:         getRunNameBytes();",
          "26612:     boolean hasStartTime();",
          "26621:     long getStartTime();",
          "26630:     java.util.List<org.mlflow.api.proto.Service.RunTag>",
          "26631:         getTagsList();",
          "26639:     org.mlflow.api.proto.Service.RunTag getTags(int index);",
          "26647:     int getTagsCount();",
          "26655:     java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "26656:         getTagsOrBuilderList();",
          "26664:     org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "26665:         int index);",
          "26670:   public static final class CreateRun extends",
          "26673:       CreateRunOrBuilder {",
          "26676:     private CreateRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "26679:     private CreateRun() {",
          "26681:       userId_ = \"\";",
          "26682:       runName_ = \"\";",
          "26683:       tags_ = java.util.Collections.emptyList();",
          "26690:       return new CreateRun();",
          "",
          "---------------",
          "--- Hunk 245 ---",
          "[Context before]",
          "20146:     getUnknownFields() {",
          "20147:       return this.unknownFields;",
          "20148:     }",
          "20150:         com.google.protobuf.CodedInputStream input,",
          "20151:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20152:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "20149:     private UpdateExperiment(",
          "",
          "[Added Lines]",
          "26698:     private CreateRun(",
          "",
          "---------------",
          "--- Hunk 246 ---",
          "[Context before]",
          "20174:             case 18: {",
          "20175:               com.google.protobuf.ByteString bs = input.readBytes();",
          "20176:               bitField0_ |= 0x00000002;",
          "20178:               break;",
          "20179:             }",
          "20180:             default: {",
          "",
          "[Removed Lines]",
          "20177:               newName_ = bs;",
          "",
          "[Added Lines]",
          "26726:               userId_ = bs;",
          "26727:               break;",
          "26728:             }",
          "26729:             case 26: {",
          "26730:               com.google.protobuf.ByteString bs = input.readBytes();",
          "26731:               bitField0_ |= 0x00000004;",
          "26732:               runName_ = bs;",
          "26733:               break;",
          "26734:             }",
          "26735:             case 56: {",
          "26736:               bitField0_ |= 0x00000008;",
          "26737:               startTime_ = input.readInt64();",
          "26738:               break;",
          "26739:             }",
          "26740:             case 74: {",
          "26741:               if (!((mutable_bitField0_ & 0x00000010) != 0)) {",
          "26742:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>();",
          "26743:                 mutable_bitField0_ |= 0x00000010;",
          "26744:               }",
          "26745:               tags_.add(",
          "26746:                   input.readMessage(org.mlflow.api.proto.Service.RunTag.PARSER, extensionRegistry));",
          "",
          "---------------",
          "--- Hunk 247 ---",
          "[Context before]",
          "20192:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "20193:             e).setUnfinishedMessage(this);",
          "20194:       } finally {",
          "20195:         this.unknownFields = unknownFields.build();",
          "20196:         makeExtensionsImmutable();",
          "20197:       }",
          "20198:     }",
          "20199:     public static final com.google.protobuf.Descriptors.Descriptor",
          "20200:         getDescriptor() {",
          "20202:     }",
          "20204:     @java.lang.Override",
          "20205:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "20206:         internalGetFieldAccessorTable() {",
          "20208:           .ensureFieldAccessorsInitialized(",
          "20210:     }",
          "20212:     public interface ResponseOrBuilder extends",
          "20214:         com.google.protobuf.MessageOrBuilder {",
          "20215:     }",
          "20219:     public static final class Response extends",
          "20220:         com.google.protobuf.GeneratedMessageV3 implements",
          "20222:         ResponseOrBuilder {",
          "20223:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "20201:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_descriptor;",
          "20207:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_fieldAccessorTable",
          "20209:               org.mlflow.api.proto.Service.UpdateExperiment.class, org.mlflow.api.proto.Service.UpdateExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "26764:         if (((mutable_bitField0_ & 0x00000010) != 0)) {",
          "26765:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "26766:         }",
          "26773:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_descriptor;",
          "26779:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_fieldAccessorTable",
          "26781:               org.mlflow.api.proto.Service.CreateRun.class, org.mlflow.api.proto.Service.CreateRun.Builder.class);",
          "26796:       boolean hasRun();",
          "26805:       org.mlflow.api.proto.Service.Run getRun();",
          "26813:       org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder();",
          "",
          "---------------",
          "--- Hunk 248 ---",
          "[Context before]",
          "20248:         if (extensionRegistry == null) {",
          "20249:           throw new java.lang.NullPointerException();",
          "20250:         }",
          "20251:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "20252:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "20253:         try {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26850:         int mutable_bitField0_ = 0;",
          "",
          "---------------",
          "--- Hunk 249 ---",
          "[Context before]",
          "20258:               case 0:",
          "20259:                 done = true;",
          "20260:                 break;",
          "20261:               default: {",
          "20262:                 if (!parseUnknownField(",
          "20263:                     input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26861:               case 10: {",
          "26862:                 org.mlflow.api.proto.Service.Run.Builder subBuilder = null;",
          "26863:                 if (((bitField0_ & 0x00000001) != 0)) {",
          "26864:                   subBuilder = run_.toBuilder();",
          "26865:                 }",
          "26866:                 run_ = input.readMessage(org.mlflow.api.proto.Service.Run.PARSER, extensionRegistry);",
          "26867:                 if (subBuilder != null) {",
          "26868:                   subBuilder.mergeFrom(run_);",
          "26869:                   run_ = subBuilder.buildPartial();",
          "26870:                 }",
          "26871:                 bitField0_ |= 0x00000001;",
          "26872:                 break;",
          "26873:               }",
          "",
          "---------------",
          "--- Hunk 250 ---",
          "[Context before]",
          "20279:       }",
          "20280:       public static final com.google.protobuf.Descriptors.Descriptor",
          "20281:           getDescriptor() {",
          "20283:       }",
          "20285:       @java.lang.Override",
          "20286:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "20287:           internalGetFieldAccessorTable() {",
          "20289:             .ensureFieldAccessorsInitialized(",
          "20291:       }",
          "20293:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "20282:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_descriptor;",
          "20288:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_fieldAccessorTable",
          "20290:                 org.mlflow.api.proto.Service.UpdateExperiment.Response.class, org.mlflow.api.proto.Service.UpdateExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "26895:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_descriptor;",
          "26901:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_fieldAccessorTable",
          "26903:                 org.mlflow.api.proto.Service.CreateRun.Response.class, org.mlflow.api.proto.Service.CreateRun.Response.Builder.class);",
          "26904:       }",
          "26906:       private int bitField0_;",
          "26907:       public static final int RUN_FIELD_NUMBER = 1;",
          "26908:       private org.mlflow.api.proto.Service.Run run_;",
          "26917:       @java.lang.Override",
          "26918:       public boolean hasRun() {",
          "26919:         return ((bitField0_ & 0x00000001) != 0);",
          "26920:       }",
          "26929:       @java.lang.Override",
          "26930:       public org.mlflow.api.proto.Service.Run getRun() {",
          "26931:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "26932:       }",
          "26940:       @java.lang.Override",
          "26941:       public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "26942:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "",
          "---------------",
          "--- Hunk 251 ---",
          "[Context before]",
          "20304:       @java.lang.Override",
          "20305:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "20306:                           throws java.io.IOException {",
          "20307:         unknownFields.writeTo(output);",
          "20308:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26959:         if (((bitField0_ & 0x00000001) != 0)) {",
          "26960:           output.writeMessage(1, getRun());",
          "26961:         }",
          "",
          "---------------",
          "--- Hunk 252 ---",
          "[Context before]",
          "20313:         if (size != -1) return size;",
          "20315:         size = 0;",
          "20316:         size += unknownFields.getSerializedSize();",
          "20317:         memoizedSize = size;",
          "20318:         return size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26971:         if (((bitField0_ & 0x00000001) != 0)) {",
          "26972:           size += com.google.protobuf.CodedOutputStream",
          "26973:             .computeMessageSize(1, getRun());",
          "26974:         }",
          "",
          "---------------",
          "--- Hunk 253 ---",
          "[Context before]",
          "20323:         if (obj == this) {",
          "20324:          return true;",
          "20325:         }",
          "20327:           return super.equals(obj);",
          "20328:         }",
          "20331:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "20332:         return true;",
          "20333:       }",
          "",
          "[Removed Lines]",
          "20326:         if (!(obj instanceof org.mlflow.api.proto.Service.UpdateExperiment.Response)) {",
          "20329:         org.mlflow.api.proto.Service.UpdateExperiment.Response other = (org.mlflow.api.proto.Service.UpdateExperiment.Response) obj;",
          "",
          "[Added Lines]",
          "26985:         if (!(obj instanceof org.mlflow.api.proto.Service.CreateRun.Response)) {",
          "26988:         org.mlflow.api.proto.Service.CreateRun.Response other = (org.mlflow.api.proto.Service.CreateRun.Response) obj;",
          "26990:         if (hasRun() != other.hasRun()) return false;",
          "26991:         if (hasRun()) {",
          "26992:           if (!getRun()",
          "26993:               .equals(other.getRun())) return false;",
          "26994:         }",
          "",
          "---------------",
          "--- Hunk 254 ---",
          "[Context before]",
          "20339:         }",
          "20340:         int hash = 41;",
          "20341:         hash = (19 * hash) + getDescriptor().hashCode();",
          "20342:         hash = (29 * hash) + unknownFields.hashCode();",
          "20343:         memoizedHashCode = hash;",
          "20344:         return hash;",
          "20345:       }",
          "20348:           java.nio.ByteBuffer data)",
          "20349:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "20350:         return PARSER.parseFrom(data);",
          "20351:       }",
          "20353:           java.nio.ByteBuffer data,",
          "20354:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20355:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "20356:         return PARSER.parseFrom(data, extensionRegistry);",
          "20357:       }",
          "20359:           com.google.protobuf.ByteString data)",
          "20360:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "20361:         return PARSER.parseFrom(data);",
          "20362:       }",
          "20364:           com.google.protobuf.ByteString data,",
          "20365:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20366:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "20367:         return PARSER.parseFrom(data, extensionRegistry);",
          "20368:       }",
          "20370:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "20371:         return PARSER.parseFrom(data);",
          "20372:       }",
          "20374:           byte[] data,",
          "20375:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20376:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "20377:         return PARSER.parseFrom(data, extensionRegistry);",
          "20378:       }",
          "20380:           throws java.io.IOException {",
          "20381:         return com.google.protobuf.GeneratedMessageV3",
          "20382:             .parseWithIOException(PARSER, input);",
          "20383:       }",
          "20385:           java.io.InputStream input,",
          "20386:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20387:           throws java.io.IOException {",
          "20388:         return com.google.protobuf.GeneratedMessageV3",
          "20389:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "20390:       }",
          "20392:           throws java.io.IOException {",
          "20393:         return com.google.protobuf.GeneratedMessageV3",
          "20394:             .parseDelimitedWithIOException(PARSER, input);",
          "20395:       }",
          "20397:           java.io.InputStream input,",
          "20398:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20399:           throws java.io.IOException {",
          "20400:         return com.google.protobuf.GeneratedMessageV3",
          "20401:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "20402:       }",
          "20404:           com.google.protobuf.CodedInputStream input)",
          "20405:           throws java.io.IOException {",
          "20406:         return com.google.protobuf.GeneratedMessageV3",
          "20407:             .parseWithIOException(PARSER, input);",
          "20408:       }",
          "20410:           com.google.protobuf.CodedInputStream input,",
          "20411:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20412:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "20347:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "20352:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "20358:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "20363:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "20369:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(byte[] data)",
          "20373:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "20379:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(java.io.InputStream input)",
          "20384:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "20391:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseDelimitedFrom(java.io.InputStream input)",
          "20396:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseDelimitedFrom(",
          "20403:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "20409:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response parseFrom(",
          "",
          "[Added Lines]",
          "27006:         if (hasRun()) {",
          "27007:           hash = (37 * hash) + RUN_FIELD_NUMBER;",
          "27008:           hash = (53 * hash) + getRun().hashCode();",
          "27009:         }",
          "27015:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "27020:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "27026:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "27031:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "27037:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(byte[] data)",
          "27041:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "27047:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(java.io.InputStream input)",
          "27052:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "27059:       public static org.mlflow.api.proto.Service.CreateRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "27064:       public static org.mlflow.api.proto.Service.CreateRun.Response parseDelimitedFrom(",
          "27071:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "27077:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 255 ---",
          "[Context before]",
          "20419:       public static Builder newBuilder() {",
          "20420:         return DEFAULT_INSTANCE.toBuilder();",
          "20421:       }",
          "20423:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "20424:       }",
          "20425:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "20422:       public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateExperiment.Response prototype) {",
          "",
          "[Added Lines]",
          "27090:       public static Builder newBuilder(org.mlflow.api.proto.Service.CreateRun.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 256 ---",
          "[Context before]",
          "20435:         return builder;",
          "20436:       }",
          "20440:       public static final class Builder extends",
          "20441:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "20444:         public static final com.google.protobuf.Descriptors.Descriptor",
          "20445:             getDescriptor() {",
          "20447:         }",
          "20449:         @java.lang.Override",
          "20450:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "20451:             internalGetFieldAccessorTable() {",
          "20453:               .ensureFieldAccessorsInitialized(",
          "20455:         }",
          "20458:         private Builder() {",
          "20459:           maybeForceBuilderInitialization();",
          "20460:         }",
          "",
          "[Removed Lines]",
          "20443:           org.mlflow.api.proto.Service.UpdateExperiment.ResponseOrBuilder {",
          "20446:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_descriptor;",
          "20452:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_fieldAccessorTable",
          "20454:                   org.mlflow.api.proto.Service.UpdateExperiment.Response.class, org.mlflow.api.proto.Service.UpdateExperiment.Response.Builder.class);",
          "",
          "[Added Lines]",
          "27111:           org.mlflow.api.proto.Service.CreateRun.ResponseOrBuilder {",
          "27114:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_descriptor;",
          "27120:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_fieldAccessorTable",
          "27122:                   org.mlflow.api.proto.Service.CreateRun.Response.class, org.mlflow.api.proto.Service.CreateRun.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 257 ---",
          "[Context before]",
          "20467:         private void maybeForceBuilderInitialization() {",
          "20468:           if (com.google.protobuf.GeneratedMessageV3",
          "20469:                   .alwaysUseFieldBuilders) {",
          "20470:           }",
          "20471:         }",
          "20472:         @java.lang.Override",
          "20473:         public Builder clear() {",
          "20474:           super.clear();",
          "20475:           return this;",
          "20476:         }",
          "20478:         @java.lang.Override",
          "20479:         public com.google.protobuf.Descriptors.Descriptor",
          "20480:             getDescriptorForType() {",
          "20482:         }",
          "20484:         @java.lang.Override",
          "20487:         }",
          "20489:         @java.lang.Override",
          "20492:           if (!result.isInitialized()) {",
          "20493:             throw newUninitializedMessageException(result);",
          "20494:           }",
          "",
          "[Removed Lines]",
          "20481:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_Response_descriptor;",
          "20485:         public org.mlflow.api.proto.Service.UpdateExperiment.Response getDefaultInstanceForType() {",
          "20486:           return org.mlflow.api.proto.Service.UpdateExperiment.Response.getDefaultInstance();",
          "20490:         public org.mlflow.api.proto.Service.UpdateExperiment.Response build() {",
          "20491:           org.mlflow.api.proto.Service.UpdateExperiment.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "27138:             getRunFieldBuilder();",
          "27144:           if (runBuilder_ == null) {",
          "27145:             run_ = null;",
          "27146:           } else {",
          "27147:             runBuilder_.clear();",
          "27148:           }",
          "27149:           bitField0_ = (bitField0_ & ~0x00000001);",
          "27156:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_descriptor;",
          "27160:         public org.mlflow.api.proto.Service.CreateRun.Response getDefaultInstanceForType() {",
          "27161:           return org.mlflow.api.proto.Service.CreateRun.Response.getDefaultInstance();",
          "27165:         public org.mlflow.api.proto.Service.CreateRun.Response build() {",
          "27166:           org.mlflow.api.proto.Service.CreateRun.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 258 ---",
          "[Context before]",
          "20496:         }",
          "20498:         @java.lang.Override",
          "20501:           onBuilt();",
          "20502:           return result;",
          "20503:         }",
          "",
          "[Removed Lines]",
          "20499:         public org.mlflow.api.proto.Service.UpdateExperiment.Response buildPartial() {",
          "20500:           org.mlflow.api.proto.Service.UpdateExperiment.Response result = new org.mlflow.api.proto.Service.UpdateExperiment.Response(this);",
          "",
          "[Added Lines]",
          "27174:         public org.mlflow.api.proto.Service.CreateRun.Response buildPartial() {",
          "27175:           org.mlflow.api.proto.Service.CreateRun.Response result = new org.mlflow.api.proto.Service.CreateRun.Response(this);",
          "27176:           int from_bitField0_ = bitField0_;",
          "27177:           int to_bitField0_ = 0;",
          "27178:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "27179:             if (runBuilder_ == null) {",
          "27180:               result.run_ = run_;",
          "27181:             } else {",
          "27182:               result.run_ = runBuilder_.build();",
          "27183:             }",
          "27184:             to_bitField0_ |= 0x00000001;",
          "27185:           }",
          "27186:           result.bitField0_ = to_bitField0_;",
          "",
          "---------------",
          "--- Hunk 259 ---",
          "[Context before]",
          "20536:         }",
          "20537:         @java.lang.Override",
          "20538:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "20541:           } else {",
          "20542:             super.mergeFrom(other);",
          "20543:             return this;",
          "20544:           }",
          "20545:         }",
          "20549:           this.mergeUnknownFields(other.unknownFields);",
          "20550:           onChanged();",
          "20551:           return this;",
          "",
          "[Removed Lines]",
          "20539:           if (other instanceof org.mlflow.api.proto.Service.UpdateExperiment.Response) {",
          "20540:             return mergeFrom((org.mlflow.api.proto.Service.UpdateExperiment.Response)other);",
          "20547:         public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateExperiment.Response other) {",
          "20548:           if (other == org.mlflow.api.proto.Service.UpdateExperiment.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "27225:           if (other instanceof org.mlflow.api.proto.Service.CreateRun.Response) {",
          "27226:             return mergeFrom((org.mlflow.api.proto.Service.CreateRun.Response)other);",
          "27233:         public Builder mergeFrom(org.mlflow.api.proto.Service.CreateRun.Response other) {",
          "27234:           if (other == org.mlflow.api.proto.Service.CreateRun.Response.getDefaultInstance()) return this;",
          "27235:           if (other.hasRun()) {",
          "27236:             mergeRun(other.getRun());",
          "27237:           }",
          "",
          "---------------",
          "--- Hunk 260 ---",
          "[Context before]",
          "20561:             com.google.protobuf.CodedInputStream input,",
          "20562:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20563:             throws java.io.IOException {",
          "20565:           try {",
          "20566:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "20567:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "20569:             throw e.unwrapIOException();",
          "20570:           } finally {",
          "20571:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "20564:           org.mlflow.api.proto.Service.UpdateExperiment.Response parsedMessage = null;",
          "20568:             parsedMessage = (org.mlflow.api.proto.Service.UpdateExperiment.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "27253:           org.mlflow.api.proto.Service.CreateRun.Response parsedMessage = null;",
          "27257:             parsedMessage = (org.mlflow.api.proto.Service.CreateRun.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 261 ---",
          "[Context before]",
          "20574:           }",
          "20575:           return this;",
          "20576:         }",
          "20577:         @java.lang.Override",
          "20578:         public final Builder setUnknownFields(",
          "20579:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27266:         private int bitField0_;",
          "27268:         private org.mlflow.api.proto.Service.Run run_;",
          "27269:         private com.google.protobuf.SingleFieldBuilderV3<",
          "27270:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder> runBuilder_;",
          "27279:         public boolean hasRun() {",
          "27280:           return ((bitField0_ & 0x00000001) != 0);",
          "27281:         }",
          "27290:         public org.mlflow.api.proto.Service.Run getRun() {",
          "27291:           if (runBuilder_ == null) {",
          "27292:             return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "27293:           } else {",
          "27294:             return runBuilder_.getMessage();",
          "27295:           }",
          "27296:         }",
          "27304:         public Builder setRun(org.mlflow.api.proto.Service.Run value) {",
          "27305:           if (runBuilder_ == null) {",
          "27306:             if (value == null) {",
          "27307:               throw new NullPointerException();",
          "27308:             }",
          "27309:             run_ = value;",
          "27310:             onChanged();",
          "27311:           } else {",
          "27312:             runBuilder_.setMessage(value);",
          "27313:           }",
          "27314:           bitField0_ |= 0x00000001;",
          "27315:           return this;",
          "27316:         }",
          "27324:         public Builder setRun(",
          "27325:             org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "27326:           if (runBuilder_ == null) {",
          "27327:             run_ = builderForValue.build();",
          "27328:             onChanged();",
          "27329:           } else {",
          "27330:             runBuilder_.setMessage(builderForValue.build());",
          "27331:           }",
          "27332:           bitField0_ |= 0x00000001;",
          "27333:           return this;",
          "27334:         }",
          "27342:         public Builder mergeRun(org.mlflow.api.proto.Service.Run value) {",
          "27343:           if (runBuilder_ == null) {",
          "27344:             if (((bitField0_ & 0x00000001) != 0) &&",
          "27345:                 run_ != null &&",
          "27346:                 run_ != org.mlflow.api.proto.Service.Run.getDefaultInstance()) {",
          "27347:               run_ =",
          "27348:                 org.mlflow.api.proto.Service.Run.newBuilder(run_).mergeFrom(value).buildPartial();",
          "27349:             } else {",
          "27350:               run_ = value;",
          "27351:             }",
          "27352:             onChanged();",
          "27353:           } else {",
          "27354:             runBuilder_.mergeFrom(value);",
          "27355:           }",
          "27356:           bitField0_ |= 0x00000001;",
          "27357:           return this;",
          "27358:         }",
          "27366:         public Builder clearRun() {",
          "27367:           if (runBuilder_ == null) {",
          "27368:             run_ = null;",
          "27369:             onChanged();",
          "27370:           } else {",
          "27371:             runBuilder_.clear();",
          "27372:           }",
          "27373:           bitField0_ = (bitField0_ & ~0x00000001);",
          "27374:           return this;",
          "27375:         }",
          "27383:         public org.mlflow.api.proto.Service.Run.Builder getRunBuilder() {",
          "27384:           bitField0_ |= 0x00000001;",
          "27385:           onChanged();",
          "27386:           return getRunFieldBuilder().getBuilder();",
          "27387:         }",
          "27395:         public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "27396:           if (runBuilder_ != null) {",
          "27397:             return runBuilder_.getMessageOrBuilder();",
          "27398:           } else {",
          "27399:             return run_ == null ?",
          "27400:                 org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "27401:           }",
          "27402:         }",
          "27410:         private com.google.protobuf.SingleFieldBuilderV3<",
          "27411:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>",
          "27412:             getRunFieldBuilder() {",
          "27413:           if (runBuilder_ == null) {",
          "27414:             runBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "27415:                 org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>(",
          "27416:                     getRun(),",
          "27417:                     getParentForChildren(),",
          "27418:                     isClean());",
          "27419:             run_ = null;",
          "27420:           }",
          "27421:           return runBuilder_;",
          "27422:         }",
          "",
          "---------------",
          "--- Hunk 262 ---",
          "[Context before]",
          "20587:         }",
          "20591:       }",
          "20595:       static {",
          "20597:       }",
          "20600:         return DEFAULT_INSTANCE;",
          "20601:       }",
          "",
          "[Removed Lines]",
          "20594:       private static final org.mlflow.api.proto.Service.UpdateExperiment.Response DEFAULT_INSTANCE;",
          "20596:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateExperiment.Response();",
          "20599:       public static org.mlflow.api.proto.Service.UpdateExperiment.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "27440:       private static final org.mlflow.api.proto.Service.CreateRun.Response DEFAULT_INSTANCE;",
          "27442:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateRun.Response();",
          "27445:       public static org.mlflow.api.proto.Service.CreateRun.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 263 ---",
          "[Context before]",
          "20621:       }",
          "20623:       @java.lang.Override",
          "20625:         return DEFAULT_INSTANCE;",
          "20626:       }",
          "",
          "[Removed Lines]",
          "20624:       public org.mlflow.api.proto.Service.UpdateExperiment.Response getDefaultInstanceForType() {",
          "",
          "[Added Lines]",
          "27470:       public org.mlflow.api.proto.Service.CreateRun.Response getDefaultInstanceForType() {",
          "",
          "---------------",
          "--- Hunk 264 ---",
          "[Context before]",
          "20644:     }",
          "20653:     @java.lang.Override",
          "20656:       if (ref instanceof java.lang.String) {",
          "20657:         return (java.lang.String) ref;",
          "20658:       } else {",
          "",
          "[Removed Lines]",
          "20654:     public java.lang.String getExperimentId() {",
          "20655:       java.lang.Object ref = experimentId_;",
          "",
          "[Added Lines]",
          "27499:     @java.lang.Override",
          "27500:     public java.lang.String getExperimentId() {",
          "27501:       java.lang.Object ref = experimentId_;",
          "27502:       if (ref instanceof java.lang.String) {",
          "27503:         return (java.lang.String) ref;",
          "27504:       } else {",
          "27505:         com.google.protobuf.ByteString bs =",
          "27506:             (com.google.protobuf.ByteString) ref;",
          "27507:         java.lang.String s = bs.toStringUtf8();",
          "27508:         if (bs.isValidUtf8()) {",
          "27509:           experimentId_ = s;",
          "27510:         }",
          "27511:         return s;",
          "27512:       }",
          "27513:     }",
          "27522:     @java.lang.Override",
          "27523:     public com.google.protobuf.ByteString",
          "27524:         getExperimentIdBytes() {",
          "27525:       java.lang.Object ref = experimentId_;",
          "27526:       if (ref instanceof java.lang.String) {",
          "27527:         com.google.protobuf.ByteString b =",
          "27528:             com.google.protobuf.ByteString.copyFromUtf8(",
          "27529:                 (java.lang.String) ref);",
          "27530:         experimentId_ = b;",
          "27531:         return b;",
          "27532:       } else {",
          "27533:         return (com.google.protobuf.ByteString) ref;",
          "27534:       }",
          "27535:     }",
          "27537:     public static final int USER_ID_FIELD_NUMBER = 2;",
          "27538:     private volatile java.lang.Object userId_;",
          "27549:     @java.lang.Override",
          "27550:     public boolean hasUserId() {",
          "27551:       return ((bitField0_ & 0x00000002) != 0);",
          "27552:     }",
          "27564:     public java.lang.String getUserId() {",
          "27565:       java.lang.Object ref = userId_;",
          "",
          "---------------",
          "--- Hunk 265 ---",
          "[Context before]",
          "20660:             (com.google.protobuf.ByteString) ref;",
          "20661:         java.lang.String s = bs.toStringUtf8();",
          "20662:         if (bs.isValidUtf8()) {",
          "20664:         }",
          "20665:         return s;",
          "20666:       }",
          "20667:     }",
          "20676:     @java.lang.Override",
          "20677:     public com.google.protobuf.ByteString",
          "20680:       if (ref instanceof java.lang.String) {",
          "20681:         com.google.protobuf.ByteString b =",
          "20682:             com.google.protobuf.ByteString.copyFromUtf8(",
          "20683:                 (java.lang.String) ref);",
          "20685:         return b;",
          "20686:       } else {",
          "20687:         return (com.google.protobuf.ByteString) ref;",
          "20688:       }",
          "20689:     }",
          "20701:     @java.lang.Override",
          "20704:     }",
          "20713:     @java.lang.Override",
          "20716:       if (ref instanceof java.lang.String) {",
          "20717:         return (java.lang.String) ref;",
          "20718:       } else {",
          "",
          "[Removed Lines]",
          "20663:           experimentId_ = s;",
          "20678:         getExperimentIdBytes() {",
          "20679:       java.lang.Object ref = experimentId_;",
          "20684:         experimentId_ = b;",
          "20691:     public static final int NEW_NAME_FIELD_NUMBER = 2;",
          "20692:     private volatile java.lang.Object newName_;",
          "20702:     public boolean hasNewName() {",
          "20703:       return ((bitField0_ & 0x00000002) != 0);",
          "20714:     public java.lang.String getNewName() {",
          "20715:       java.lang.Object ref = newName_;",
          "",
          "[Added Lines]",
          "27573:           userId_ = s;",
          "27590:         getUserIdBytes() {",
          "27591:       java.lang.Object ref = userId_;",
          "27596:         userId_ = b;",
          "27603:     public static final int RUN_NAME_FIELD_NUMBER = 3;",
          "27604:     private volatile java.lang.Object runName_;",
          "27614:     public boolean hasRunName() {",
          "27615:       return ((bitField0_ & 0x00000004) != 0);",
          "27626:     public java.lang.String getRunName() {",
          "27627:       java.lang.Object ref = runName_;",
          "",
          "---------------",
          "--- Hunk 266 ---",
          "[Context before]",
          "20720:             (com.google.protobuf.ByteString) ref;",
          "20721:         java.lang.String s = bs.toStringUtf8();",
          "20722:         if (bs.isValidUtf8()) {",
          "20724:         }",
          "20725:         return s;",
          "20726:       }",
          "20727:     }",
          "20736:     @java.lang.Override",
          "20737:     public com.google.protobuf.ByteString",
          "20740:       if (ref instanceof java.lang.String) {",
          "20741:         com.google.protobuf.ByteString b =",
          "20742:             com.google.protobuf.ByteString.copyFromUtf8(",
          "20743:                 (java.lang.String) ref);",
          "20745:         return b;",
          "20746:       } else {",
          "20747:         return (com.google.protobuf.ByteString) ref;",
          "20748:       }",
          "20749:     }",
          "20751:     private byte memoizedIsInitialized = -1;",
          "20752:     @java.lang.Override",
          "20753:     public final boolean isInitialized() {",
          "",
          "[Removed Lines]",
          "20723:           newName_ = s;",
          "20738:         getNewNameBytes() {",
          "20739:       java.lang.Object ref = newName_;",
          "20744:         newName_ = b;",
          "",
          "[Added Lines]",
          "27635:           runName_ = s;",
          "27650:         getRunNameBytes() {",
          "27651:       java.lang.Object ref = runName_;",
          "27656:         runName_ = b;",
          "27663:     public static final int START_TIME_FIELD_NUMBER = 7;",
          "27664:     private long startTime_;",
          "27673:     @java.lang.Override",
          "27674:     public boolean hasStartTime() {",
          "27675:       return ((bitField0_ & 0x00000008) != 0);",
          "27676:     }",
          "27685:     @java.lang.Override",
          "27686:     public long getStartTime() {",
          "27687:       return startTime_;",
          "27688:     }",
          "27690:     public static final int TAGS_FIELD_NUMBER = 9;",
          "27691:     private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_;",
          "27699:     @java.lang.Override",
          "27700:     public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "27701:       return tags_;",
          "27702:     }",
          "27710:     @java.lang.Override",
          "27711:     public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "27712:         getTagsOrBuilderList() {",
          "27713:       return tags_;",
          "27714:     }",
          "27722:     @java.lang.Override",
          "27723:     public int getTagsCount() {",
          "27724:       return tags_.size();",
          "27725:     }",
          "27733:     @java.lang.Override",
          "27734:     public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "27735:       return tags_.get(index);",
          "27736:     }",
          "27744:     @java.lang.Override",
          "27745:     public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "27746:         int index) {",
          "27747:       return tags_.get(index);",
          "27748:     }",
          "",
          "---------------",
          "--- Hunk 267 ---",
          "[Context before]",
          "20766:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "20767:       }",
          "20768:       if (((bitField0_ & 0x00000002) != 0)) {",
          "20770:       }",
          "20771:       unknownFields.writeTo(output);",
          "20772:     }",
          "",
          "[Removed Lines]",
          "20769:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, newName_);",
          "",
          "[Added Lines]",
          "27768:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userId_);",
          "27769:       }",
          "27770:       if (((bitField0_ & 0x00000004) != 0)) {",
          "27771:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runName_);",
          "27772:       }",
          "27773:       if (((bitField0_ & 0x00000008) != 0)) {",
          "27774:         output.writeInt64(7, startTime_);",
          "27775:       }",
          "27776:       for (int i = 0; i < tags_.size(); i++) {",
          "27777:         output.writeMessage(9, tags_.get(i));",
          "",
          "---------------",
          "--- Hunk 268 ---",
          "[Context before]",
          "20781:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "20782:       }",
          "20783:       if (((bitField0_ & 0x00000002) != 0)) {",
          "20785:       }",
          "20786:       size += unknownFields.getSerializedSize();",
          "20787:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "20784:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, newName_);",
          "",
          "[Added Lines]",
          "27792:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userId_);",
          "27793:       }",
          "27794:       if (((bitField0_ & 0x00000004) != 0)) {",
          "27795:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runName_);",
          "27796:       }",
          "27797:       if (((bitField0_ & 0x00000008) != 0)) {",
          "27798:         size += com.google.protobuf.CodedOutputStream",
          "27799:           .computeInt64Size(7, startTime_);",
          "27800:       }",
          "27801:       for (int i = 0; i < tags_.size(); i++) {",
          "27802:         size += com.google.protobuf.CodedOutputStream",
          "27803:           .computeMessageSize(9, tags_.get(i));",
          "",
          "---------------",
          "--- Hunk 269 ---",
          "[Context before]",
          "20793:       if (obj == this) {",
          "20794:        return true;",
          "20795:       }",
          "20797:         return super.equals(obj);",
          "20798:       }",
          "20801:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "20802:       if (hasExperimentId()) {",
          "20803:         if (!getExperimentId()",
          "20804:             .equals(other.getExperimentId())) return false;",
          "20805:       }",
          "20810:       }",
          "20811:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "20812:       return true;",
          "20813:     }",
          "",
          "[Removed Lines]",
          "20796:       if (!(obj instanceof org.mlflow.api.proto.Service.UpdateExperiment)) {",
          "20799:       org.mlflow.api.proto.Service.UpdateExperiment other = (org.mlflow.api.proto.Service.UpdateExperiment) obj;",
          "20806:       if (hasNewName() != other.hasNewName()) return false;",
          "20807:       if (hasNewName()) {",
          "20808:         if (!getNewName()",
          "20809:             .equals(other.getNewName())) return false;",
          "",
          "[Added Lines]",
          "27815:       if (!(obj instanceof org.mlflow.api.proto.Service.CreateRun)) {",
          "27818:       org.mlflow.api.proto.Service.CreateRun other = (org.mlflow.api.proto.Service.CreateRun) obj;",
          "27825:       if (hasUserId() != other.hasUserId()) return false;",
          "27826:       if (hasUserId()) {",
          "27827:         if (!getUserId()",
          "27828:             .equals(other.getUserId())) return false;",
          "27829:       }",
          "27830:       if (hasRunName() != other.hasRunName()) return false;",
          "27831:       if (hasRunName()) {",
          "27832:         if (!getRunName()",
          "27833:             .equals(other.getRunName())) return false;",
          "27834:       }",
          "27835:       if (hasStartTime() != other.hasStartTime()) return false;",
          "27836:       if (hasStartTime()) {",
          "27837:         if (getStartTime()",
          "27838:             != other.getStartTime()) return false;",
          "27840:       if (!getTagsList()",
          "27841:           .equals(other.getTagsList())) return false;",
          "",
          "---------------",
          "--- Hunk 270 ---",
          "[Context before]",
          "20823:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "20824:         hash = (53 * hash) + getExperimentId().hashCode();",
          "20825:       }",
          "20829:       }",
          "20830:       hash = (29 * hash) + unknownFields.hashCode();",
          "20831:       memoizedHashCode = hash;",
          "20832:       return hash;",
          "20833:     }",
          "20836:         java.nio.ByteBuffer data)",
          "20837:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "20838:       return PARSER.parseFrom(data);",
          "20839:     }",
          "20841:         java.nio.ByteBuffer data,",
          "20842:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20843:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "20844:       return PARSER.parseFrom(data, extensionRegistry);",
          "20845:     }",
          "20847:         com.google.protobuf.ByteString data)",
          "20848:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "20849:       return PARSER.parseFrom(data);",
          "20850:     }",
          "20852:         com.google.protobuf.ByteString data,",
          "20853:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20854:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "20855:       return PARSER.parseFrom(data, extensionRegistry);",
          "20856:     }",
          "20858:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "20859:       return PARSER.parseFrom(data);",
          "20860:     }",
          "20862:         byte[] data,",
          "20863:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20864:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "20865:       return PARSER.parseFrom(data, extensionRegistry);",
          "20866:     }",
          "20868:         throws java.io.IOException {",
          "20869:       return com.google.protobuf.GeneratedMessageV3",
          "20870:           .parseWithIOException(PARSER, input);",
          "20871:     }",
          "20873:         java.io.InputStream input,",
          "20874:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20875:         throws java.io.IOException {",
          "20876:       return com.google.protobuf.GeneratedMessageV3",
          "20877:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "20878:     }",
          "20880:         throws java.io.IOException {",
          "20881:       return com.google.protobuf.GeneratedMessageV3",
          "20882:           .parseDelimitedWithIOException(PARSER, input);",
          "20883:     }",
          "20885:         java.io.InputStream input,",
          "20886:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20887:         throws java.io.IOException {",
          "20888:       return com.google.protobuf.GeneratedMessageV3",
          "20889:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "20890:     }",
          "20892:         com.google.protobuf.CodedInputStream input)",
          "20893:         throws java.io.IOException {",
          "20894:       return com.google.protobuf.GeneratedMessageV3",
          "20895:           .parseWithIOException(PARSER, input);",
          "20896:     }",
          "20898:         com.google.protobuf.CodedInputStream input,",
          "20899:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "20900:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "20826:       if (hasNewName()) {",
          "20827:         hash = (37 * hash) + NEW_NAME_FIELD_NUMBER;",
          "20828:         hash = (53 * hash) + getNewName().hashCode();",
          "20835:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "20840:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "20846:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "20851:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "20857:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(byte[] data)",
          "20861:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "20867:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(java.io.InputStream input)",
          "20872:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "20879:     public static org.mlflow.api.proto.Service.UpdateExperiment parseDelimitedFrom(java.io.InputStream input)",
          "20884:     public static org.mlflow.api.proto.Service.UpdateExperiment parseDelimitedFrom(",
          "20891:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "20897:     public static org.mlflow.api.proto.Service.UpdateExperiment parseFrom(",
          "",
          "[Added Lines]",
          "27857:       if (hasUserId()) {",
          "27858:         hash = (37 * hash) + USER_ID_FIELD_NUMBER;",
          "27859:         hash = (53 * hash) + getUserId().hashCode();",
          "27860:       }",
          "27861:       if (hasRunName()) {",
          "27862:         hash = (37 * hash) + RUN_NAME_FIELD_NUMBER;",
          "27863:         hash = (53 * hash) + getRunName().hashCode();",
          "27864:       }",
          "27865:       if (hasStartTime()) {",
          "27866:         hash = (37 * hash) + START_TIME_FIELD_NUMBER;",
          "27867:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "27868:             getStartTime());",
          "27869:       }",
          "27870:       if (getTagsCount() > 0) {",
          "27871:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "27872:         hash = (53 * hash) + getTagsList().hashCode();",
          "27879:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "27884:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "27890:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "27895:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "27901:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(byte[] data)",
          "27905:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "27911:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(java.io.InputStream input)",
          "27916:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "27923:     public static org.mlflow.api.proto.Service.CreateRun parseDelimitedFrom(java.io.InputStream input)",
          "27928:     public static org.mlflow.api.proto.Service.CreateRun parseDelimitedFrom(",
          "27935:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "27941:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "",
          "---------------",
          "--- Hunk 271 ---",
          "[Context before]",
          "20907:     public static Builder newBuilder() {",
          "20908:       return DEFAULT_INSTANCE.toBuilder();",
          "20909:     }",
          "20911:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "20912:     }",
          "20913:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "20910:     public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateExperiment prototype) {",
          "",
          "[Added Lines]",
          "27954:     public static Builder newBuilder(org.mlflow.api.proto.Service.CreateRun prototype) {",
          "",
          "---------------",
          "--- Hunk 272 ---",
          "[Context before]",
          "20923:       return builder;",
          "20924:     }",
          "20928:     public static final class Builder extends",
          "20929:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "20932:       public static final com.google.protobuf.Descriptors.Descriptor",
          "20933:           getDescriptor() {",
          "20935:       }",
          "20937:       @java.lang.Override",
          "20938:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "20939:           internalGetFieldAccessorTable() {",
          "20941:             .ensureFieldAccessorsInitialized(",
          "20943:       }",
          "20946:       private Builder() {",
          "20947:         maybeForceBuilderInitialization();",
          "20948:       }",
          "",
          "[Removed Lines]",
          "20931:         org.mlflow.api.proto.Service.UpdateExperimentOrBuilder {",
          "20934:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_descriptor;",
          "20940:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_fieldAccessorTable",
          "20942:                 org.mlflow.api.proto.Service.UpdateExperiment.class, org.mlflow.api.proto.Service.UpdateExperiment.Builder.class);",
          "",
          "[Added Lines]",
          "27975:         org.mlflow.api.proto.Service.CreateRunOrBuilder {",
          "27978:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_descriptor;",
          "27984:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_fieldAccessorTable",
          "27986:                 org.mlflow.api.proto.Service.CreateRun.class, org.mlflow.api.proto.Service.CreateRun.Builder.class);",
          "",
          "---------------",
          "--- Hunk 273 ---",
          "[Context before]",
          "20955:       private void maybeForceBuilderInitialization() {",
          "20956:         if (com.google.protobuf.GeneratedMessageV3",
          "20957:                 .alwaysUseFieldBuilders) {",
          "20958:         }",
          "20959:       }",
          "20960:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28002:           getTagsFieldBuilder();",
          "",
          "---------------",
          "--- Hunk 274 ---",
          "[Context before]",
          "20962:         super.clear();",
          "20963:         experimentId_ = \"\";",
          "20964:         bitField0_ = (bitField0_ & ~0x00000001);",
          "20966:         bitField0_ = (bitField0_ & ~0x00000002);",
          "20967:         return this;",
          "20968:       }",
          "20970:       @java.lang.Override",
          "20971:       public com.google.protobuf.Descriptors.Descriptor",
          "20972:           getDescriptorForType() {",
          "20974:       }",
          "20976:       @java.lang.Override",
          "20979:       }",
          "20981:       @java.lang.Override",
          "20984:         if (!result.isInitialized()) {",
          "20985:           throw newUninitializedMessageException(result);",
          "20986:         }",
          "",
          "[Removed Lines]",
          "20965:         newName_ = \"\";",
          "20973:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateExperiment_descriptor;",
          "20977:       public org.mlflow.api.proto.Service.UpdateExperiment getDefaultInstanceForType() {",
          "20978:         return org.mlflow.api.proto.Service.UpdateExperiment.getDefaultInstance();",
          "20982:       public org.mlflow.api.proto.Service.UpdateExperiment build() {",
          "20983:         org.mlflow.api.proto.Service.UpdateExperiment result = buildPartial();",
          "",
          "[Added Lines]",
          "28010:         userId_ = \"\";",
          "28012:         runName_ = \"\";",
          "28013:         bitField0_ = (bitField0_ & ~0x00000004);",
          "28014:         startTime_ = 0L;",
          "28015:         bitField0_ = (bitField0_ & ~0x00000008);",
          "28016:         if (tagsBuilder_ == null) {",
          "28017:           tags_ = java.util.Collections.emptyList();",
          "28018:           bitField0_ = (bitField0_ & ~0x00000010);",
          "28019:         } else {",
          "28020:           tagsBuilder_.clear();",
          "28021:         }",
          "28028:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_descriptor;",
          "28032:       public org.mlflow.api.proto.Service.CreateRun getDefaultInstanceForType() {",
          "28033:         return org.mlflow.api.proto.Service.CreateRun.getDefaultInstance();",
          "28037:       public org.mlflow.api.proto.Service.CreateRun build() {",
          "28038:         org.mlflow.api.proto.Service.CreateRun result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 275 ---",
          "[Context before]",
          "20988:       }",
          "20990:       @java.lang.Override",
          "20993:         int from_bitField0_ = bitField0_;",
          "20994:         int to_bitField0_ = 0;",
          "20995:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "20991:       public org.mlflow.api.proto.Service.UpdateExperiment buildPartial() {",
          "20992:         org.mlflow.api.proto.Service.UpdateExperiment result = new org.mlflow.api.proto.Service.UpdateExperiment(this);",
          "",
          "[Added Lines]",
          "28046:       public org.mlflow.api.proto.Service.CreateRun buildPartial() {",
          "28047:         org.mlflow.api.proto.Service.CreateRun result = new org.mlflow.api.proto.Service.CreateRun(this);",
          "",
          "---------------",
          "--- Hunk 276 ---",
          "[Context before]",
          "20999:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "21000:           to_bitField0_ |= 0x00000002;",
          "21001:         }",
          "21003:         result.bitField0_ = to_bitField0_;",
          "21004:         onBuilt();",
          "21005:         return result;",
          "",
          "[Removed Lines]",
          "21002:         result.newName_ = newName_;",
          "",
          "[Added Lines]",
          "28057:         result.userId_ = userId_;",
          "28058:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "28059:           to_bitField0_ |= 0x00000004;",
          "28060:         }",
          "28061:         result.runName_ = runName_;",
          "28062:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "28063:           result.startTime_ = startTime_;",
          "28064:           to_bitField0_ |= 0x00000008;",
          "28065:         }",
          "28066:         if (tagsBuilder_ == null) {",
          "28067:           if (((bitField0_ & 0x00000010) != 0)) {",
          "28068:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "28069:             bitField0_ = (bitField0_ & ~0x00000010);",
          "28070:           }",
          "28071:           result.tags_ = tags_;",
          "28072:         } else {",
          "28073:           result.tags_ = tagsBuilder_.build();",
          "28074:         }",
          "",
          "---------------",
          "--- Hunk 277 ---",
          "[Context before]",
          "21037:           java.lang.Object value) {",
          "21038:         return super.addRepeatedField(field, value);",
          "21039:       }",
          "21044:         } else {",
          "21047:         }",
          "21048:       }",
          "21061:         }",
          "21063:         onChanged();",
          "21064:         return this;",
          "21065:       }",
          "21070:       }",
          "21088:         return this;",
          "21089:       }",
          "21103:       }",
          "21114:         if (!(ref instanceof java.lang.String)) {",
          "21115:           com.google.protobuf.ByteString bs =",
          "21116:               (com.google.protobuf.ByteString) ref;",
          "21117:           java.lang.String s = bs.toStringUtf8();",
          "21118:           if (bs.isValidUtf8()) {",
          "21120:           }",
          "21121:           return s;",
          "21122:         } else {",
          "",
          "[Removed Lines]",
          "21040:       @java.lang.Override",
          "21041:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "21042:         if (other instanceof org.mlflow.api.proto.Service.UpdateExperiment) {",
          "21043:           return mergeFrom((org.mlflow.api.proto.Service.UpdateExperiment)other);",
          "21045:           super.mergeFrom(other);",
          "21046:           return this;",
          "21050:       public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateExperiment other) {",
          "21051:         if (other == org.mlflow.api.proto.Service.UpdateExperiment.getDefaultInstance()) return this;",
          "21052:         if (other.hasExperimentId()) {",
          "21053:           bitField0_ |= 0x00000001;",
          "21054:           experimentId_ = other.experimentId_;",
          "21055:           onChanged();",
          "21056:         }",
          "21057:         if (other.hasNewName()) {",
          "21058:           bitField0_ |= 0x00000002;",
          "21059:           newName_ = other.newName_;",
          "21060:           onChanged();",
          "21062:         this.mergeUnknownFields(other.unknownFields);",
          "21067:       @java.lang.Override",
          "21068:       public final boolean isInitialized() {",
          "21069:         return true;",
          "21072:       @java.lang.Override",
          "21073:       public Builder mergeFrom(",
          "21074:           com.google.protobuf.CodedInputStream input,",
          "21075:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21076:           throws java.io.IOException {",
          "21077:         org.mlflow.api.proto.Service.UpdateExperiment parsedMessage = null;",
          "21078:         try {",
          "21079:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "21080:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "21081:           parsedMessage = (org.mlflow.api.proto.Service.UpdateExperiment) e.getUnfinishedMessage();",
          "21082:           throw e.unwrapIOException();",
          "21083:         } finally {",
          "21084:           if (parsedMessage != null) {",
          "21085:             mergeFrom(parsedMessage);",
          "21086:           }",
          "21087:         }",
          "21090:       private int bitField0_;",
          "21092:       private java.lang.Object experimentId_ = \"\";",
          "21101:       public boolean hasExperimentId() {",
          "21102:         return ((bitField0_ & 0x00000001) != 0);",
          "21112:       public java.lang.String getExperimentId() {",
          "21113:         java.lang.Object ref = experimentId_;",
          "21119:             experimentId_ = s;",
          "",
          "[Added Lines]",
          "28112:       @java.lang.Override",
          "28113:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "28114:         if (other instanceof org.mlflow.api.proto.Service.CreateRun) {",
          "28115:           return mergeFrom((org.mlflow.api.proto.Service.CreateRun)other);",
          "28116:         } else {",
          "28117:           super.mergeFrom(other);",
          "28118:           return this;",
          "28119:         }",
          "28120:       }",
          "28122:       public Builder mergeFrom(org.mlflow.api.proto.Service.CreateRun other) {",
          "28123:         if (other == org.mlflow.api.proto.Service.CreateRun.getDefaultInstance()) return this;",
          "28124:         if (other.hasExperimentId()) {",
          "28125:           bitField0_ |= 0x00000001;",
          "28126:           experimentId_ = other.experimentId_;",
          "28127:           onChanged();",
          "28128:         }",
          "28129:         if (other.hasUserId()) {",
          "28130:           bitField0_ |= 0x00000002;",
          "28131:           userId_ = other.userId_;",
          "28132:           onChanged();",
          "28133:         }",
          "28134:         if (other.hasRunName()) {",
          "28135:           bitField0_ |= 0x00000004;",
          "28136:           runName_ = other.runName_;",
          "28137:           onChanged();",
          "28138:         }",
          "28139:         if (other.hasStartTime()) {",
          "28140:           setStartTime(other.getStartTime());",
          "28141:         }",
          "28142:         if (tagsBuilder_ == null) {",
          "28143:           if (!other.tags_.isEmpty()) {",
          "28144:             if (tags_.isEmpty()) {",
          "28145:               tags_ = other.tags_;",
          "28146:               bitField0_ = (bitField0_ & ~0x00000010);",
          "28147:             } else {",
          "28148:               ensureTagsIsMutable();",
          "28149:               tags_.addAll(other.tags_);",
          "28150:             }",
          "28151:             onChanged();",
          "28152:           }",
          "28153:         } else {",
          "28154:           if (!other.tags_.isEmpty()) {",
          "28155:             if (tagsBuilder_.isEmpty()) {",
          "28156:               tagsBuilder_.dispose();",
          "28157:               tagsBuilder_ = null;",
          "28158:               tags_ = other.tags_;",
          "28159:               bitField0_ = (bitField0_ & ~0x00000010);",
          "28160:               tagsBuilder_ =",
          "28161:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "28162:                    getTagsFieldBuilder() : null;",
          "28163:             } else {",
          "28164:               tagsBuilder_.addAllMessages(other.tags_);",
          "28165:             }",
          "28166:           }",
          "28167:         }",
          "28168:         this.mergeUnknownFields(other.unknownFields);",
          "28169:         onChanged();",
          "28170:         return this;",
          "28171:       }",
          "28173:       @java.lang.Override",
          "28174:       public final boolean isInitialized() {",
          "28175:         return true;",
          "28176:       }",
          "28178:       @java.lang.Override",
          "28179:       public Builder mergeFrom(",
          "28180:           com.google.protobuf.CodedInputStream input,",
          "28181:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28182:           throws java.io.IOException {",
          "28183:         org.mlflow.api.proto.Service.CreateRun parsedMessage = null;",
          "28184:         try {",
          "28185:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "28186:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "28187:           parsedMessage = (org.mlflow.api.proto.Service.CreateRun) e.getUnfinishedMessage();",
          "28188:           throw e.unwrapIOException();",
          "28189:         } finally {",
          "28190:           if (parsedMessage != null) {",
          "28191:             mergeFrom(parsedMessage);",
          "28192:           }",
          "28193:         }",
          "28194:         return this;",
          "28195:       }",
          "28196:       private int bitField0_;",
          "28198:       private java.lang.Object experimentId_ = \"\";",
          "28207:       public boolean hasExperimentId() {",
          "28208:         return ((bitField0_ & 0x00000001) != 0);",
          "28209:       }",
          "28218:       public java.lang.String getExperimentId() {",
          "28219:         java.lang.Object ref = experimentId_;",
          "28220:         if (!(ref instanceof java.lang.String)) {",
          "28221:           com.google.protobuf.ByteString bs =",
          "28222:               (com.google.protobuf.ByteString) ref;",
          "28223:           java.lang.String s = bs.toStringUtf8();",
          "28224:           if (bs.isValidUtf8()) {",
          "28225:             experimentId_ = s;",
          "28226:           }",
          "28227:           return s;",
          "28228:         } else {",
          "28229:           return (java.lang.String) ref;",
          "28230:         }",
          "28231:       }",
          "28240:       public com.google.protobuf.ByteString",
          "28241:           getExperimentIdBytes() {",
          "28242:         java.lang.Object ref = experimentId_;",
          "28243:         if (ref instanceof String) {",
          "28244:           com.google.protobuf.ByteString b =",
          "28245:               com.google.protobuf.ByteString.copyFromUtf8(",
          "28246:                   (java.lang.String) ref);",
          "28247:           experimentId_ = b;",
          "28248:           return b;",
          "28249:         } else {",
          "28250:           return (com.google.protobuf.ByteString) ref;",
          "28251:         }",
          "28252:       }",
          "28262:       public Builder setExperimentId(",
          "28263:           java.lang.String value) {",
          "28264:         if (value == null) {",
          "28265:     throw new NullPointerException();",
          "28266:   }",
          "28267:   bitField0_ |= 0x00000001;",
          "28268:         experimentId_ = value;",
          "28269:         onChanged();",
          "28270:         return this;",
          "28271:       }",
          "28280:       public Builder clearExperimentId() {",
          "28281:         bitField0_ = (bitField0_ & ~0x00000001);",
          "28282:         experimentId_ = getDefaultInstance().getExperimentId();",
          "28283:         onChanged();",
          "28284:         return this;",
          "28285:       }",
          "28295:       public Builder setExperimentIdBytes(",
          "28296:           com.google.protobuf.ByteString value) {",
          "28297:         if (value == null) {",
          "28298:     throw new NullPointerException();",
          "28299:   }",
          "28300:   bitField0_ |= 0x00000001;",
          "28301:         experimentId_ = value;",
          "28302:         onChanged();",
          "28303:         return this;",
          "28304:       }",
          "28306:       private java.lang.Object userId_ = \"\";",
          "28317:       public boolean hasUserId() {",
          "28318:         return ((bitField0_ & 0x00000002) != 0);",
          "28319:       }",
          "28330:       public java.lang.String getUserId() {",
          "28331:         java.lang.Object ref = userId_;",
          "28332:         if (!(ref instanceof java.lang.String)) {",
          "28333:           com.google.protobuf.ByteString bs =",
          "28334:               (com.google.protobuf.ByteString) ref;",
          "28335:           java.lang.String s = bs.toStringUtf8();",
          "28336:           if (bs.isValidUtf8()) {",
          "28337:             userId_ = s;",
          "28338:           }",
          "28339:           return s;",
          "28341:           return (java.lang.String) ref;",
          "28354:       public com.google.protobuf.ByteString",
          "28355:           getUserIdBytes() {",
          "28356:         java.lang.Object ref = userId_;",
          "28357:         if (ref instanceof String) {",
          "28358:           com.google.protobuf.ByteString b =",
          "28359:               com.google.protobuf.ByteString.copyFromUtf8(",
          "28360:                   (java.lang.String) ref);",
          "28361:           userId_ = b;",
          "28362:           return b;",
          "28363:         } else {",
          "28364:           return (com.google.protobuf.ByteString) ref;",
          "28366:       }",
          "28378:       public Builder setUserId(",
          "28379:           java.lang.String value) {",
          "28380:         if (value == null) {",
          "28381:     throw new NullPointerException();",
          "28382:   }",
          "28383:   bitField0_ |= 0x00000002;",
          "28384:         userId_ = value;",
          "28398:       public Builder clearUserId() {",
          "28399:         bitField0_ = (bitField0_ & ~0x00000002);",
          "28400:         userId_ = getDefaultInstance().getUserId();",
          "28401:         onChanged();",
          "28402:         return this;",
          "28415:       public Builder setUserIdBytes(",
          "28416:           com.google.protobuf.ByteString value) {",
          "28417:         if (value == null) {",
          "28418:     throw new NullPointerException();",
          "28419:   }",
          "28420:   bitField0_ |= 0x00000002;",
          "28421:         userId_ = value;",
          "28422:         onChanged();",
          "28426:       private java.lang.Object runName_ = \"\";",
          "28435:       public boolean hasRunName() {",
          "28436:         return ((bitField0_ & 0x00000004) != 0);",
          "28446:       public java.lang.String getRunName() {",
          "28447:         java.lang.Object ref = runName_;",
          "28453:             runName_ = s;",
          "",
          "---------------",
          "--- Hunk 278 ---",
          "[Context before]",
          "21125:       }",
          "21134:       public com.google.protobuf.ByteString",
          "21137:         if (ref instanceof String) {",
          "21138:           com.google.protobuf.ByteString b =",
          "21139:               com.google.protobuf.ByteString.copyFromUtf8(",
          "21140:                   (java.lang.String) ref);",
          "21142:           return b;",
          "21143:         } else {",
          "21144:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "21135:           getExperimentIdBytes() {",
          "21136:         java.lang.Object ref = experimentId_;",
          "21141:           experimentId_ = b;",
          "",
          "[Added Lines]",
          "28469:           getRunNameBytes() {",
          "28470:         java.lang.Object ref = runName_;",
          "28475:           runName_ = b;",
          "",
          "---------------",
          "--- Hunk 279 ---",
          "[Context before]",
          "21146:       }",
          "21157:           java.lang.String value) {",
          "21158:         if (value == null) {",
          "21159:     throw new NullPointerException();",
          "21160:   }",
          "21163:         onChanged();",
          "21164:         return this;",
          "21165:       }",
          "21177:         onChanged();",
          "21178:         return this;",
          "21179:       }",
          "21190:           com.google.protobuf.ByteString value) {",
          "21191:         if (value == null) {",
          "21192:     throw new NullPointerException();",
          "21193:   }",
          "21196:         onChanged();",
          "21197:         return this;",
          "21198:       }",
          "21211:       }",
          "21228:           }",
          "21230:         } else {",
          "21232:         }",
          "21233:       }",
          "21251:         } else {",
          "21253:         }",
          "21254:       }",
          "21273:       }",
          "21287:       }",
          "21306:       }",
          "21307:       @java.lang.Override",
          "21308:       public final Builder setUnknownFields(",
          "",
          "[Removed Lines]",
          "21156:       public Builder setExperimentId(",
          "21161:   bitField0_ |= 0x00000001;",
          "21162:         experimentId_ = value;",
          "21174:       public Builder clearExperimentId() {",
          "21175:         bitField0_ = (bitField0_ & ~0x00000001);",
          "21176:         experimentId_ = getDefaultInstance().getExperimentId();",
          "21189:       public Builder setExperimentIdBytes(",
          "21194:   bitField0_ |= 0x00000001;",
          "21195:         experimentId_ = value;",
          "21200:       private java.lang.Object newName_ = \"\";",
          "21209:       public boolean hasNewName() {",
          "21210:         return ((bitField0_ & 0x00000002) != 0);",
          "21220:       public java.lang.String getNewName() {",
          "21221:         java.lang.Object ref = newName_;",
          "21222:         if (!(ref instanceof java.lang.String)) {",
          "21223:           com.google.protobuf.ByteString bs =",
          "21224:               (com.google.protobuf.ByteString) ref;",
          "21225:           java.lang.String s = bs.toStringUtf8();",
          "21226:           if (bs.isValidUtf8()) {",
          "21227:             newName_ = s;",
          "21229:           return s;",
          "21231:           return (java.lang.String) ref;",
          "21242:       public com.google.protobuf.ByteString",
          "21243:           getNewNameBytes() {",
          "21244:         java.lang.Object ref = newName_;",
          "21245:         if (ref instanceof String) {",
          "21246:           com.google.protobuf.ByteString b =",
          "21247:               com.google.protobuf.ByteString.copyFromUtf8(",
          "21248:                   (java.lang.String) ref);",
          "21249:           newName_ = b;",
          "21250:           return b;",
          "21252:           return (com.google.protobuf.ByteString) ref;",
          "21264:       public Builder setNewName(",
          "21265:           java.lang.String value) {",
          "21266:         if (value == null) {",
          "21267:     throw new NullPointerException();",
          "21268:   }",
          "21269:   bitField0_ |= 0x00000002;",
          "21270:         newName_ = value;",
          "21271:         onChanged();",
          "21272:         return this;",
          "21282:       public Builder clearNewName() {",
          "21283:         bitField0_ = (bitField0_ & ~0x00000002);",
          "21284:         newName_ = getDefaultInstance().getNewName();",
          "21285:         onChanged();",
          "21286:         return this;",
          "21297:       public Builder setNewNameBytes(",
          "21298:           com.google.protobuf.ByteString value) {",
          "21299:         if (value == null) {",
          "21300:     throw new NullPointerException();",
          "21301:   }",
          "21302:   bitField0_ |= 0x00000002;",
          "21303:         newName_ = value;",
          "21304:         onChanged();",
          "21305:         return this;",
          "",
          "[Added Lines]",
          "28490:       public Builder setRunName(",
          "28495:   bitField0_ |= 0x00000004;",
          "28496:         runName_ = value;",
          "28508:       public Builder clearRunName() {",
          "28509:         bitField0_ = (bitField0_ & ~0x00000004);",
          "28510:         runName_ = getDefaultInstance().getRunName();",
          "28523:       public Builder setRunNameBytes(",
          "28528:   bitField0_ |= 0x00000004;",
          "28529:         runName_ = value;",
          "28534:       private long startTime_ ;",
          "28543:       @java.lang.Override",
          "28544:       public boolean hasStartTime() {",
          "28545:         return ((bitField0_ & 0x00000008) != 0);",
          "28555:       @java.lang.Override",
          "28556:       public long getStartTime() {",
          "28557:         return startTime_;",
          "28558:       }",
          "28568:       public Builder setStartTime(long value) {",
          "28569:         bitField0_ |= 0x00000008;",
          "28570:         startTime_ = value;",
          "28571:         onChanged();",
          "28572:         return this;",
          "28573:       }",
          "28582:       public Builder clearStartTime() {",
          "28583:         bitField0_ = (bitField0_ & ~0x00000008);",
          "28584:         startTime_ = 0L;",
          "28585:         onChanged();",
          "28586:         return this;",
          "28587:       }",
          "28589:       private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_ =",
          "28590:         java.util.Collections.emptyList();",
          "28591:       private void ensureTagsIsMutable() {",
          "28592:         if (!((bitField0_ & 0x00000010) != 0)) {",
          "28593:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>(tags_);",
          "28594:           bitField0_ |= 0x00000010;",
          "28595:          }",
          "28596:       }",
          "28598:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "28599:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder> tagsBuilder_;",
          "28608:       public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "28609:         if (tagsBuilder_ == null) {",
          "28610:           return java.util.Collections.unmodifiableList(tags_);",
          "28611:         } else {",
          "28612:           return tagsBuilder_.getMessageList();",
          "28613:         }",
          "28614:       }",
          "28622:       public int getTagsCount() {",
          "28623:         if (tagsBuilder_ == null) {",
          "28624:           return tags_.size();",
          "28625:         } else {",
          "28626:           return tagsBuilder_.getCount();",
          "28627:         }",
          "28628:       }",
          "28636:       public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "28637:         if (tagsBuilder_ == null) {",
          "28638:           return tags_.get(index);",
          "28639:         } else {",
          "28640:           return tagsBuilder_.getMessage(index);",
          "28641:         }",
          "28642:       }",
          "28650:       public Builder setTags(",
          "28651:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "28652:         if (tagsBuilder_ == null) {",
          "28653:           if (value == null) {",
          "28654:             throw new NullPointerException();",
          "28656:           ensureTagsIsMutable();",
          "28657:           tags_.set(index, value);",
          "28658:           onChanged();",
          "28660:           tagsBuilder_.setMessage(index, value);",
          "28661:         }",
          "28662:         return this;",
          "28663:       }",
          "28671:       public Builder setTags(",
          "28672:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "28673:         if (tagsBuilder_ == null) {",
          "28674:           ensureTagsIsMutable();",
          "28675:           tags_.set(index, builderForValue.build());",
          "28676:           onChanged();",
          "28677:         } else {",
          "28678:           tagsBuilder_.setMessage(index, builderForValue.build());",
          "28679:         }",
          "28680:         return this;",
          "28681:       }",
          "28689:       public Builder addTags(org.mlflow.api.proto.Service.RunTag value) {",
          "28690:         if (tagsBuilder_ == null) {",
          "28691:           if (value == null) {",
          "28692:             throw new NullPointerException();",
          "28693:           }",
          "28694:           ensureTagsIsMutable();",
          "28695:           tags_.add(value);",
          "28696:           onChanged();",
          "28697:         } else {",
          "28698:           tagsBuilder_.addMessage(value);",
          "28699:         }",
          "28700:         return this;",
          "28701:       }",
          "28709:       public Builder addTags(",
          "28710:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "28711:         if (tagsBuilder_ == null) {",
          "28712:           if (value == null) {",
          "28713:             throw new NullPointerException();",
          "28714:           }",
          "28715:           ensureTagsIsMutable();",
          "28716:           tags_.add(index, value);",
          "28717:           onChanged();",
          "28718:         } else {",
          "28719:           tagsBuilder_.addMessage(index, value);",
          "28720:         }",
          "28721:         return this;",
          "28722:       }",
          "28730:       public Builder addTags(",
          "28731:           org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "28732:         if (tagsBuilder_ == null) {",
          "28733:           ensureTagsIsMutable();",
          "28734:           tags_.add(builderForValue.build());",
          "28735:           onChanged();",
          "28736:         } else {",
          "28737:           tagsBuilder_.addMessage(builderForValue.build());",
          "28738:         }",
          "28739:         return this;",
          "28740:       }",
          "28748:       public Builder addTags(",
          "28749:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "28750:         if (tagsBuilder_ == null) {",
          "28751:           ensureTagsIsMutable();",
          "28752:           tags_.add(index, builderForValue.build());",
          "28753:           onChanged();",
          "28754:         } else {",
          "28755:           tagsBuilder_.addMessage(index, builderForValue.build());",
          "28756:         }",
          "28757:         return this;",
          "28758:       }",
          "28766:       public Builder addAllTags(",
          "28767:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.RunTag> values) {",
          "28768:         if (tagsBuilder_ == null) {",
          "28769:           ensureTagsIsMutable();",
          "28770:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "28771:               values, tags_);",
          "28772:           onChanged();",
          "28773:         } else {",
          "28774:           tagsBuilder_.addAllMessages(values);",
          "28775:         }",
          "28776:         return this;",
          "28777:       }",
          "28785:       public Builder clearTags() {",
          "28786:         if (tagsBuilder_ == null) {",
          "28787:           tags_ = java.util.Collections.emptyList();",
          "28788:           bitField0_ = (bitField0_ & ~0x00000010);",
          "28789:           onChanged();",
          "28790:         } else {",
          "28791:           tagsBuilder_.clear();",
          "28792:         }",
          "28793:         return this;",
          "28794:       }",
          "28802:       public Builder removeTags(int index) {",
          "28803:         if (tagsBuilder_ == null) {",
          "28804:           ensureTagsIsMutable();",
          "28805:           tags_.remove(index);",
          "28806:           onChanged();",
          "28807:         } else {",
          "28808:           tagsBuilder_.remove(index);",
          "28809:         }",
          "28810:         return this;",
          "28811:       }",
          "28819:       public org.mlflow.api.proto.Service.RunTag.Builder getTagsBuilder(",
          "28820:           int index) {",
          "28821:         return getTagsFieldBuilder().getBuilder(index);",
          "28822:       }",
          "28830:       public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "28831:           int index) {",
          "28832:         if (tagsBuilder_ == null) {",
          "28833:           return tags_.get(index);  } else {",
          "28834:           return tagsBuilder_.getMessageOrBuilder(index);",
          "28844:       public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "28845:            getTagsOrBuilderList() {",
          "28846:         if (tagsBuilder_ != null) {",
          "28847:           return tagsBuilder_.getMessageOrBuilderList();",
          "28849:           return java.util.Collections.unmodifiableList(tags_);",
          "28859:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder() {",
          "28860:         return getTagsFieldBuilder().addBuilder(",
          "28861:             org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "28870:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder(",
          "28871:           int index) {",
          "28872:         return getTagsFieldBuilder().addBuilder(",
          "28873:             index, org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "28882:       public java.util.List<org.mlflow.api.proto.Service.RunTag.Builder>",
          "28883:            getTagsBuilderList() {",
          "28884:         return getTagsFieldBuilder().getBuilderList();",
          "28885:       }",
          "28886:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "28887:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "28888:           getTagsFieldBuilder() {",
          "28889:         if (tagsBuilder_ == null) {",
          "28890:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "28891:               org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>(",
          "28892:                   tags_,",
          "28893:                   ((bitField0_ & 0x00000010) != 0),",
          "28894:                   getParentForChildren(),",
          "28895:                   isClean());",
          "28896:           tags_ = null;",
          "28897:         }",
          "28898:         return tagsBuilder_;",
          "",
          "---------------",
          "--- Hunk 280 ---",
          "[Context before]",
          "21317:       }",
          "21321:     }",
          "21325:     static {",
          "21327:     }",
          "21330:       return DEFAULT_INSTANCE;",
          "21331:     }",
          "21335:       @java.lang.Override",
          "21337:           com.google.protobuf.CodedInputStream input,",
          "21338:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21339:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "21341:       }",
          "21342:     };",
          "21345:       return PARSER;",
          "21346:     }",
          "21348:     @java.lang.Override",
          "21350:       return PARSER;",
          "21351:     }",
          "21353:     @java.lang.Override",
          "21355:       return DEFAULT_INSTANCE;",
          "21356:     }",
          "21358:   }",
          "21362:       com.google.protobuf.MessageOrBuilder {",
          "21390:     com.google.protobuf.ByteString",
          "21425:     com.google.protobuf.ByteString",
          "21519:   }",
          "21524:       com.google.protobuf.GeneratedMessageV3 implements",
          "21527:   private static final long serialVersionUID = 0L;",
          "21530:       super(builder);",
          "21531:     }",
          "21535:       runName_ = \"\";",
          "21537:     }",
          "21539:     @java.lang.Override",
          "21540:     @SuppressWarnings({\"unused\"})",
          "21541:     protected java.lang.Object newInstance(",
          "21542:         UnusedPrivateParameter unused) {",
          "21544:     }",
          "21546:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "21324:     private static final org.mlflow.api.proto.Service.UpdateExperiment DEFAULT_INSTANCE;",
          "21326:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateExperiment();",
          "21329:     public static org.mlflow.api.proto.Service.UpdateExperiment getDefaultInstance() {",
          "21333:     @java.lang.Deprecated public static final com.google.protobuf.Parser<UpdateExperiment>",
          "21334:         PARSER = new com.google.protobuf.AbstractParser<UpdateExperiment>() {",
          "21336:       public UpdateExperiment parsePartialFrom(",
          "21340:         return new UpdateExperiment(input, extensionRegistry);",
          "21344:     public static com.google.protobuf.Parser<UpdateExperiment> parser() {",
          "21349:     public com.google.protobuf.Parser<UpdateExperiment> getParserForType() {",
          "21354:     public org.mlflow.api.proto.Service.UpdateExperiment getDefaultInstanceForType() {",
          "21360:   public interface CreateRunOrBuilder extends",
          "21372:     boolean hasExperimentId();",
          "21381:     java.lang.String getExperimentId();",
          "21391:         getExperimentIdBytes();",
          "21403:     boolean hasUserId();",
          "21414:     java.lang.String getUserId();",
          "21426:         getUserIdBytes();",
          "21436:     boolean hasRunName();",
          "21445:     java.lang.String getRunName();",
          "21454:     com.google.protobuf.ByteString",
          "21455:         getRunNameBytes();",
          "21465:     boolean hasStartTime();",
          "21474:     long getStartTime();",
          "21483:     java.util.List<org.mlflow.api.proto.Service.RunTag>",
          "21484:         getTagsList();",
          "21492:     org.mlflow.api.proto.Service.RunTag getTags(int index);",
          "21500:     int getTagsCount();",
          "21508:     java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "21509:         getTagsOrBuilderList();",
          "21517:     org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "21518:         int index);",
          "21523:   public static final class CreateRun extends",
          "21526:       CreateRunOrBuilder {",
          "21529:     private CreateRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "21532:     private CreateRun() {",
          "21533:       experimentId_ = \"\";",
          "21534:       userId_ = \"\";",
          "21536:       tags_ = java.util.Collections.emptyList();",
          "21543:       return new CreateRun();",
          "",
          "[Added Lines]",
          "28917:     private static final org.mlflow.api.proto.Service.CreateRun DEFAULT_INSTANCE;",
          "28919:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateRun();",
          "28922:     public static org.mlflow.api.proto.Service.CreateRun getDefaultInstance() {",
          "28926:     @java.lang.Deprecated public static final com.google.protobuf.Parser<CreateRun>",
          "28927:         PARSER = new com.google.protobuf.AbstractParser<CreateRun>() {",
          "28929:       public CreateRun parsePartialFrom(",
          "28933:         return new CreateRun(input, extensionRegistry);",
          "28937:     public static com.google.protobuf.Parser<CreateRun> parser() {",
          "28942:     public com.google.protobuf.Parser<CreateRun> getParserForType() {",
          "28947:     public org.mlflow.api.proto.Service.CreateRun getDefaultInstanceForType() {",
          "28953:   public interface UpdateRunOrBuilder extends",
          "28965:     boolean hasRunId();",
          "28974:     java.lang.String getRunId();",
          "28984:         getRunIdBytes();",
          "28995:     boolean hasRunUuid();",
          "29005:     java.lang.String getRunUuid();",
          "29016:         getRunUuidBytes();",
          "29026:     boolean hasStatus();",
          "29035:     org.mlflow.api.proto.Service.RunStatus getStatus();",
          "29045:     boolean hasEndTime();",
          "29054:     long getEndTime();",
          "29064:     boolean hasRunName();",
          "29073:     java.lang.String getRunName();",
          "29082:     com.google.protobuf.ByteString",
          "29083:         getRunNameBytes();",
          "29088:   public static final class UpdateRun extends",
          "29091:       UpdateRunOrBuilder {",
          "29094:     private UpdateRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "29097:     private UpdateRun() {",
          "29098:       runId_ = \"\";",
          "29099:       runUuid_ = \"\";",
          "29100:       status_ = 1;",
          "29108:       return new UpdateRun();",
          "",
          "---------------",
          "--- Hunk 281 ---",
          "[Context before]",
          "21548:     getUnknownFields() {",
          "21549:       return this.unknownFields;",
          "21550:     }",
          "21552:         com.google.protobuf.CodedInputStream input,",
          "21553:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21554:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "21551:     private CreateRun(",
          "",
          "[Added Lines]",
          "29116:     private UpdateRun(",
          "",
          "---------------",
          "--- Hunk 282 ---",
          "[Context before]",
          "21568:               done = true;",
          "21569:               break;",
          "21570:             case 10: {",
          "21577:               com.google.protobuf.ByteString bs = input.readBytes();",
          "21578:               bitField0_ |= 0x00000002;",
          "21580:               break;",
          "21581:             }",
          "21586:               break;",
          "21587:             }",
          "21589:               bitField0_ |= 0x00000008;",
          "21591:               break;",
          "21592:             }",
          "21600:               break;",
          "21601:             }",
          "21602:             default: {",
          "",
          "[Removed Lines]",
          "21571:               com.google.protobuf.ByteString bs = input.readBytes();",
          "21572:               bitField0_ |= 0x00000001;",
          "21573:               experimentId_ = bs;",
          "21574:               break;",
          "21575:             }",
          "21576:             case 18: {",
          "21579:               userId_ = bs;",
          "21582:             case 26: {",
          "21583:               com.google.protobuf.ByteString bs = input.readBytes();",
          "21584:               bitField0_ |= 0x00000004;",
          "21585:               runName_ = bs;",
          "21588:             case 56: {",
          "21590:               startTime_ = input.readInt64();",
          "21593:             case 74: {",
          "21594:               if (!((mutable_bitField0_ & 0x00000010) != 0)) {",
          "21595:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>();",
          "21596:                 mutable_bitField0_ |= 0x00000010;",
          "21597:               }",
          "21598:               tags_.add(",
          "21599:                   input.readMessage(org.mlflow.api.proto.Service.RunTag.PARSER, extensionRegistry));",
          "",
          "[Added Lines]",
          "29138:               runUuid_ = bs;",
          "29141:             case 16: {",
          "29142:               int rawValue = input.readEnum();",
          "29143:                 @SuppressWarnings(\"deprecation\")",
          "29144:               org.mlflow.api.proto.Service.RunStatus value = org.mlflow.api.proto.Service.RunStatus.valueOf(rawValue);",
          "29145:               if (value == null) {",
          "29146:                 unknownFields.mergeVarintField(2, rawValue);",
          "29147:               } else {",
          "29148:                 bitField0_ |= 0x00000004;",
          "29149:                 status_ = rawValue;",
          "29150:               }",
          "29153:             case 24: {",
          "29155:               endTime_ = input.readInt64();",
          "29158:             case 34: {",
          "29159:               com.google.protobuf.ByteString bs = input.readBytes();",
          "29160:               bitField0_ |= 0x00000001;",
          "29161:               runId_ = bs;",
          "29162:               break;",
          "29163:             }",
          "29164:             case 42: {",
          "29165:               com.google.protobuf.ByteString bs = input.readBytes();",
          "29166:               bitField0_ |= 0x00000010;",
          "29167:               runName_ = bs;",
          "",
          "---------------",
          "--- Hunk 283 ---",
          "[Context before]",
          "21614:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "21615:             e).setUnfinishedMessage(this);",
          "21616:       } finally {",
          "21620:         this.unknownFields = unknownFields.build();",
          "21621:         makeExtensionsImmutable();",
          "21622:       }",
          "21623:     }",
          "21624:     public static final com.google.protobuf.Descriptors.Descriptor",
          "21625:         getDescriptor() {",
          "21627:     }",
          "21629:     @java.lang.Override",
          "21630:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "21631:         internalGetFieldAccessorTable() {",
          "21633:           .ensureFieldAccessorsInitialized(",
          "21635:     }",
          "21637:     public interface ResponseOrBuilder extends",
          "21639:         com.google.protobuf.MessageOrBuilder {",
          "21667:     }",
          "21671:     public static final class Response extends",
          "21672:         com.google.protobuf.GeneratedMessageV3 implements",
          "21674:         ResponseOrBuilder {",
          "21675:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "21617:         if (((mutable_bitField0_ & 0x00000010) != 0)) {",
          "21618:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "21619:         }",
          "21626:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_descriptor;",
          "21632:       return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_fieldAccessorTable",
          "21634:               org.mlflow.api.proto.Service.CreateRun.class, org.mlflow.api.proto.Service.CreateRun.Builder.class);",
          "21649:       boolean hasRun();",
          "21658:       org.mlflow.api.proto.Service.Run getRun();",
          "21666:       org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder();",
          "",
          "[Added Lines]",
          "29191:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_descriptor;",
          "29197:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_fieldAccessorTable",
          "29199:               org.mlflow.api.proto.Service.UpdateRun.class, org.mlflow.api.proto.Service.UpdateRun.Builder.class);",
          "29214:       boolean hasRunInfo();",
          "29223:       org.mlflow.api.proto.Service.RunInfo getRunInfo();",
          "29231:       org.mlflow.api.proto.Service.RunInfoOrBuilder getRunInfoOrBuilder();",
          "",
          "---------------",
          "--- Hunk 284 ---",
          "[Context before]",
          "21712:                 done = true;",
          "21713:                 break;",
          "21714:               case 10: {",
          "21716:                 if (((bitField0_ & 0x00000001) != 0)) {",
          "21718:                 }",
          "21720:                 if (subBuilder != null) {",
          "21723:                 }",
          "21724:                 bitField0_ |= 0x00000001;",
          "21725:                 break;",
          "",
          "[Removed Lines]",
          "21715:                 org.mlflow.api.proto.Service.Run.Builder subBuilder = null;",
          "21717:                   subBuilder = run_.toBuilder();",
          "21719:                 run_ = input.readMessage(org.mlflow.api.proto.Service.Run.PARSER, extensionRegistry);",
          "21721:                   subBuilder.mergeFrom(run_);",
          "21722:                   run_ = subBuilder.buildPartial();",
          "",
          "[Added Lines]",
          "29280:                 org.mlflow.api.proto.Service.RunInfo.Builder subBuilder = null;",
          "29282:                   subBuilder = runInfo_.toBuilder();",
          "29284:                 runInfo_ = input.readMessage(org.mlflow.api.proto.Service.RunInfo.PARSER, extensionRegistry);",
          "29286:                   subBuilder.mergeFrom(runInfo_);",
          "29287:                   runInfo_ = subBuilder.buildPartial();",
          "",
          "---------------",
          "--- Hunk 285 ---",
          "[Context before]",
          "21745:       }",
          "21746:       public static final com.google.protobuf.Descriptors.Descriptor",
          "21747:           getDescriptor() {",
          "21749:       }",
          "21751:       @java.lang.Override",
          "21752:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "21753:           internalGetFieldAccessorTable() {",
          "21755:             .ensureFieldAccessorsInitialized(",
          "21757:       }",
          "21759:       private int bitField0_;",
          "21770:       @java.lang.Override",
          "21772:         return ((bitField0_ & 0x00000001) != 0);",
          "21773:       }",
          "21782:       @java.lang.Override",
          "21785:       }",
          "21793:       @java.lang.Override",
          "21796:       }",
          "21798:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "21748:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_descriptor;",
          "21754:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_fieldAccessorTable",
          "21756:                 org.mlflow.api.proto.Service.CreateRun.Response.class, org.mlflow.api.proto.Service.CreateRun.Response.Builder.class);",
          "21760:       public static final int RUN_FIELD_NUMBER = 1;",
          "21761:       private org.mlflow.api.proto.Service.Run run_;",
          "21771:       public boolean hasRun() {",
          "21783:       public org.mlflow.api.proto.Service.Run getRun() {",
          "21784:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "21794:       public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "21795:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "",
          "[Added Lines]",
          "29313:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_descriptor;",
          "29319:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_fieldAccessorTable",
          "29321:                 org.mlflow.api.proto.Service.UpdateRun.Response.class, org.mlflow.api.proto.Service.UpdateRun.Response.Builder.class);",
          "29325:       public static final int RUN_INFO_FIELD_NUMBER = 1;",
          "29326:       private org.mlflow.api.proto.Service.RunInfo runInfo_;",
          "29336:       public boolean hasRunInfo() {",
          "29348:       public org.mlflow.api.proto.Service.RunInfo getRunInfo() {",
          "29349:         return runInfo_ == null ? org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "29359:       public org.mlflow.api.proto.Service.RunInfoOrBuilder getRunInfoOrBuilder() {",
          "29360:         return runInfo_ == null ? org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "",
          "---------------",
          "--- Hunk 286 ---",
          "[Context before]",
          "21810:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "21811:                           throws java.io.IOException {",
          "21812:         if (((bitField0_ & 0x00000001) != 0)) {",
          "21814:         }",
          "21815:         unknownFields.writeTo(output);",
          "21816:       }",
          "",
          "[Removed Lines]",
          "21813:           output.writeMessage(1, getRun());",
          "",
          "[Added Lines]",
          "29378:           output.writeMessage(1, getRunInfo());",
          "",
          "---------------",
          "--- Hunk 287 ---",
          "[Context before]",
          "21823:         size = 0;",
          "21824:         if (((bitField0_ & 0x00000001) != 0)) {",
          "21825:           size += com.google.protobuf.CodedOutputStream",
          "21827:         }",
          "21828:         size += unknownFields.getSerializedSize();",
          "21829:         memoizedSize = size;",
          "",
          "[Removed Lines]",
          "21826:             .computeMessageSize(1, getRun());",
          "",
          "[Added Lines]",
          "29391:             .computeMessageSize(1, getRunInfo());",
          "",
          "---------------",
          "--- Hunk 288 ---",
          "[Context before]",
          "21835:         if (obj == this) {",
          "21836:          return true;",
          "21837:         }",
          "21839:           return super.equals(obj);",
          "21840:         }",
          "21847:         }",
          "21848:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "21849:         return true;",
          "",
          "[Removed Lines]",
          "21838:         if (!(obj instanceof org.mlflow.api.proto.Service.CreateRun.Response)) {",
          "21841:         org.mlflow.api.proto.Service.CreateRun.Response other = (org.mlflow.api.proto.Service.CreateRun.Response) obj;",
          "21843:         if (hasRun() != other.hasRun()) return false;",
          "21844:         if (hasRun()) {",
          "21845:           if (!getRun()",
          "21846:               .equals(other.getRun())) return false;",
          "",
          "[Added Lines]",
          "29403:         if (!(obj instanceof org.mlflow.api.proto.Service.UpdateRun.Response)) {",
          "29406:         org.mlflow.api.proto.Service.UpdateRun.Response other = (org.mlflow.api.proto.Service.UpdateRun.Response) obj;",
          "29408:         if (hasRunInfo() != other.hasRunInfo()) return false;",
          "29409:         if (hasRunInfo()) {",
          "29410:           if (!getRunInfo()",
          "29411:               .equals(other.getRunInfo())) return false;",
          "",
          "---------------",
          "--- Hunk 289 ---",
          "[Context before]",
          "21856:         }",
          "21857:         int hash = 41;",
          "21858:         hash = (19 * hash) + getDescriptor().hashCode();",
          "21862:         }",
          "21863:         hash = (29 * hash) + unknownFields.hashCode();",
          "21864:         memoizedHashCode = hash;",
          "21865:         return hash;",
          "21866:       }",
          "21869:           java.nio.ByteBuffer data)",
          "21870:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "21871:         return PARSER.parseFrom(data);",
          "21872:       }",
          "21874:           java.nio.ByteBuffer data,",
          "21875:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21876:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "21877:         return PARSER.parseFrom(data, extensionRegistry);",
          "21878:       }",
          "21880:           com.google.protobuf.ByteString data)",
          "21881:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "21882:         return PARSER.parseFrom(data);",
          "21883:       }",
          "21885:           com.google.protobuf.ByteString data,",
          "21886:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21887:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "21888:         return PARSER.parseFrom(data, extensionRegistry);",
          "21889:       }",
          "21891:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "21892:         return PARSER.parseFrom(data);",
          "21893:       }",
          "21895:           byte[] data,",
          "21896:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21897:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "21898:         return PARSER.parseFrom(data, extensionRegistry);",
          "21899:       }",
          "21901:           throws java.io.IOException {",
          "21902:         return com.google.protobuf.GeneratedMessageV3",
          "21903:             .parseWithIOException(PARSER, input);",
          "21904:       }",
          "21906:           java.io.InputStream input,",
          "21907:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21908:           throws java.io.IOException {",
          "21909:         return com.google.protobuf.GeneratedMessageV3",
          "21910:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "21911:       }",
          "21913:           throws java.io.IOException {",
          "21914:         return com.google.protobuf.GeneratedMessageV3",
          "21915:             .parseDelimitedWithIOException(PARSER, input);",
          "21916:       }",
          "21918:           java.io.InputStream input,",
          "21919:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21920:           throws java.io.IOException {",
          "21921:         return com.google.protobuf.GeneratedMessageV3",
          "21922:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "21923:       }",
          "21925:           com.google.protobuf.CodedInputStream input)",
          "21926:           throws java.io.IOException {",
          "21927:         return com.google.protobuf.GeneratedMessageV3",
          "21928:             .parseWithIOException(PARSER, input);",
          "21929:       }",
          "21931:           com.google.protobuf.CodedInputStream input,",
          "21932:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "21933:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "21859:         if (hasRun()) {",
          "21860:           hash = (37 * hash) + RUN_FIELD_NUMBER;",
          "21861:           hash = (53 * hash) + getRun().hashCode();",
          "21868:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "21873:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "21879:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "21884:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "21890:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(byte[] data)",
          "21894:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "21900:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(java.io.InputStream input)",
          "21905:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "21912:       public static org.mlflow.api.proto.Service.CreateRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "21917:       public static org.mlflow.api.proto.Service.CreateRun.Response parseDelimitedFrom(",
          "21924:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "21930:       public static org.mlflow.api.proto.Service.CreateRun.Response parseFrom(",
          "",
          "[Added Lines]",
          "29424:         if (hasRunInfo()) {",
          "29425:           hash = (37 * hash) + RUN_INFO_FIELD_NUMBER;",
          "29426:           hash = (53 * hash) + getRunInfo().hashCode();",
          "29433:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "29438:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "29444:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "29449:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "29455:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(byte[] data)",
          "29459:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "29465:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(java.io.InputStream input)",
          "29470:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "29477:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "29482:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseDelimitedFrom(",
          "29489:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "29495:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 290 ---",
          "[Context before]",
          "21940:       public static Builder newBuilder() {",
          "21941:         return DEFAULT_INSTANCE.toBuilder();",
          "21942:       }",
          "21944:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "21945:       }",
          "21946:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "21943:       public static Builder newBuilder(org.mlflow.api.proto.Service.CreateRun.Response prototype) {",
          "",
          "[Added Lines]",
          "29508:       public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateRun.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 291 ---",
          "[Context before]",
          "21956:         return builder;",
          "21957:       }",
          "21961:       public static final class Builder extends",
          "21962:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "21965:         public static final com.google.protobuf.Descriptors.Descriptor",
          "21966:             getDescriptor() {",
          "21968:         }",
          "21970:         @java.lang.Override",
          "21971:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "21972:             internalGetFieldAccessorTable() {",
          "21974:               .ensureFieldAccessorsInitialized(",
          "21976:         }",
          "21979:         private Builder() {",
          "21980:           maybeForceBuilderInitialization();",
          "21981:         }",
          "",
          "[Removed Lines]",
          "21964:           org.mlflow.api.proto.Service.CreateRun.ResponseOrBuilder {",
          "21967:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_descriptor;",
          "21973:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_fieldAccessorTable",
          "21975:                   org.mlflow.api.proto.Service.CreateRun.Response.class, org.mlflow.api.proto.Service.CreateRun.Response.Builder.class);",
          "",
          "[Added Lines]",
          "29529:           org.mlflow.api.proto.Service.UpdateRun.ResponseOrBuilder {",
          "29532:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_descriptor;",
          "29538:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_fieldAccessorTable",
          "29540:                   org.mlflow.api.proto.Service.UpdateRun.Response.class, org.mlflow.api.proto.Service.UpdateRun.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 292 ---",
          "[Context before]",
          "21988:         private void maybeForceBuilderInitialization() {",
          "21989:           if (com.google.protobuf.GeneratedMessageV3",
          "21990:                   .alwaysUseFieldBuilders) {",
          "21992:           }",
          "21993:         }",
          "21994:         @java.lang.Override",
          "21995:         public Builder clear() {",
          "21996:           super.clear();",
          "21999:           } else {",
          "22001:           }",
          "22002:           bitField0_ = (bitField0_ & ~0x00000001);",
          "22003:           return this;",
          "",
          "[Removed Lines]",
          "21991:             getRunFieldBuilder();",
          "21997:           if (runBuilder_ == null) {",
          "21998:             run_ = null;",
          "22000:             runBuilder_.clear();",
          "",
          "[Added Lines]",
          "29556:             getRunInfoFieldBuilder();",
          "29562:           if (runInfoBuilder_ == null) {",
          "29563:             runInfo_ = null;",
          "29565:             runInfoBuilder_.clear();",
          "",
          "---------------",
          "--- Hunk 293 ---",
          "[Context before]",
          "22006:         @java.lang.Override",
          "22007:         public com.google.protobuf.Descriptors.Descriptor",
          "22008:             getDescriptorForType() {",
          "22010:         }",
          "22012:         @java.lang.Override",
          "22015:         }",
          "22017:         @java.lang.Override",
          "22020:           if (!result.isInitialized()) {",
          "22021:             throw newUninitializedMessageException(result);",
          "22022:           }",
          "",
          "[Removed Lines]",
          "22009:           return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_Response_descriptor;",
          "22013:         public org.mlflow.api.proto.Service.CreateRun.Response getDefaultInstanceForType() {",
          "22014:           return org.mlflow.api.proto.Service.CreateRun.Response.getDefaultInstance();",
          "22018:         public org.mlflow.api.proto.Service.CreateRun.Response build() {",
          "22019:           org.mlflow.api.proto.Service.CreateRun.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "29574:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_descriptor;",
          "29578:         public org.mlflow.api.proto.Service.UpdateRun.Response getDefaultInstanceForType() {",
          "29579:           return org.mlflow.api.proto.Service.UpdateRun.Response.getDefaultInstance();",
          "29583:         public org.mlflow.api.proto.Service.UpdateRun.Response build() {",
          "29584:           org.mlflow.api.proto.Service.UpdateRun.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 294 ---",
          "[Context before]",
          "22024:         }",
          "22026:         @java.lang.Override",
          "22029:           int from_bitField0_ = bitField0_;",
          "22030:           int to_bitField0_ = 0;",
          "22031:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "22034:             } else {",
          "22036:             }",
          "22037:             to_bitField0_ |= 0x00000001;",
          "22038:           }",
          "",
          "[Removed Lines]",
          "22027:         public org.mlflow.api.proto.Service.CreateRun.Response buildPartial() {",
          "22028:           org.mlflow.api.proto.Service.CreateRun.Response result = new org.mlflow.api.proto.Service.CreateRun.Response(this);",
          "22032:             if (runBuilder_ == null) {",
          "22033:               result.run_ = run_;",
          "22035:               result.run_ = runBuilder_.build();",
          "",
          "[Added Lines]",
          "29592:         public org.mlflow.api.proto.Service.UpdateRun.Response buildPartial() {",
          "29593:           org.mlflow.api.proto.Service.UpdateRun.Response result = new org.mlflow.api.proto.Service.UpdateRun.Response(this);",
          "29597:             if (runInfoBuilder_ == null) {",
          "29598:               result.runInfo_ = runInfo_;",
          "29600:               result.runInfo_ = runInfoBuilder_.build();",
          "",
          "---------------",
          "--- Hunk 295 ---",
          "[Context before]",
          "22075:         }",
          "22076:         @java.lang.Override",
          "22077:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "22080:           } else {",
          "22081:             super.mergeFrom(other);",
          "22082:             return this;",
          "22083:           }",
          "22084:         }",
          "22090:           }",
          "22091:           this.mergeUnknownFields(other.unknownFields);",
          "22092:           onChanged();",
          "",
          "[Removed Lines]",
          "22078:           if (other instanceof org.mlflow.api.proto.Service.CreateRun.Response) {",
          "22079:             return mergeFrom((org.mlflow.api.proto.Service.CreateRun.Response)other);",
          "22086:         public Builder mergeFrom(org.mlflow.api.proto.Service.CreateRun.Response other) {",
          "22087:           if (other == org.mlflow.api.proto.Service.CreateRun.Response.getDefaultInstance()) return this;",
          "22088:           if (other.hasRun()) {",
          "22089:             mergeRun(other.getRun());",
          "",
          "[Added Lines]",
          "29643:           if (other instanceof org.mlflow.api.proto.Service.UpdateRun.Response) {",
          "29644:             return mergeFrom((org.mlflow.api.proto.Service.UpdateRun.Response)other);",
          "29651:         public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateRun.Response other) {",
          "29652:           if (other == org.mlflow.api.proto.Service.UpdateRun.Response.getDefaultInstance()) return this;",
          "29653:           if (other.hasRunInfo()) {",
          "29654:             mergeRunInfo(other.getRunInfo());",
          "",
          "---------------",
          "--- Hunk 296 ---",
          "[Context before]",
          "22103:             com.google.protobuf.CodedInputStream input,",
          "22104:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22105:             throws java.io.IOException {",
          "22107:           try {",
          "22108:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "22109:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "22111:             throw e.unwrapIOException();",
          "22112:           } finally {",
          "22113:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "22106:           org.mlflow.api.proto.Service.CreateRun.Response parsedMessage = null;",
          "22110:             parsedMessage = (org.mlflow.api.proto.Service.CreateRun.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "29671:           org.mlflow.api.proto.Service.UpdateRun.Response parsedMessage = null;",
          "29675:             parsedMessage = (org.mlflow.api.proto.Service.UpdateRun.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 297 ---",
          "[Context before]",
          "22118:         }",
          "22119:         private int bitField0_;",
          "22122:         private com.google.protobuf.SingleFieldBuilderV3<",
          "22133:           return ((bitField0_ & 0x00000001) != 0);",
          "22134:         }",
          "22146:           } else {",
          "22148:           }",
          "22149:         }",
          "22159:             if (value == null) {",
          "22160:               throw new NullPointerException();",
          "22161:             }",
          "22163:             onChanged();",
          "22164:           } else {",
          "22166:           }",
          "22167:           bitField0_ |= 0x00000001;",
          "22168:           return this;",
          "22169:         }",
          "22181:             onChanged();",
          "22182:           } else {",
          "22184:           }",
          "22185:           bitField0_ |= 0x00000001;",
          "22186:           return this;",
          "22187:         }",
          "22197:             if (((bitField0_ & 0x00000001) != 0) &&",
          "22202:             } else {",
          "22204:             }",
          "22205:             onChanged();",
          "22206:           } else {",
          "22208:           }",
          "22209:           bitField0_ |= 0x00000001;",
          "22210:           return this;",
          "22211:         }",
          "22222:             onChanged();",
          "22223:           } else {",
          "22225:           }",
          "22226:           bitField0_ = (bitField0_ & ~0x00000001);",
          "22227:           return this;",
          "22228:         }",
          "22237:           bitField0_ |= 0x00000001;",
          "22238:           onChanged();",
          "22240:         }",
          "22251:           } else {",
          "22254:           }",
          "22255:         }",
          "22263:         private com.google.protobuf.SingleFieldBuilderV3<",
          "22270:                     getParentForChildren(),",
          "22271:                     isClean());",
          "22273:           }",
          "22275:         }",
          "22276:         @java.lang.Override",
          "22277:         public final Builder setUnknownFields(",
          "",
          "[Removed Lines]",
          "22121:         private org.mlflow.api.proto.Service.Run run_;",
          "22123:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder> runBuilder_;",
          "22132:         public boolean hasRun() {",
          "22143:         public org.mlflow.api.proto.Service.Run getRun() {",
          "22144:           if (runBuilder_ == null) {",
          "22145:             return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "22147:             return runBuilder_.getMessage();",
          "22157:         public Builder setRun(org.mlflow.api.proto.Service.Run value) {",
          "22158:           if (runBuilder_ == null) {",
          "22162:             run_ = value;",
          "22165:             runBuilder_.setMessage(value);",
          "22177:         public Builder setRun(",
          "22178:             org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "22179:           if (runBuilder_ == null) {",
          "22180:             run_ = builderForValue.build();",
          "22183:             runBuilder_.setMessage(builderForValue.build());",
          "22195:         public Builder mergeRun(org.mlflow.api.proto.Service.Run value) {",
          "22196:           if (runBuilder_ == null) {",
          "22198:                 run_ != null &&",
          "22199:                 run_ != org.mlflow.api.proto.Service.Run.getDefaultInstance()) {",
          "22200:               run_ =",
          "22201:                 org.mlflow.api.proto.Service.Run.newBuilder(run_).mergeFrom(value).buildPartial();",
          "22203:               run_ = value;",
          "22207:             runBuilder_.mergeFrom(value);",
          "22219:         public Builder clearRun() {",
          "22220:           if (runBuilder_ == null) {",
          "22221:             run_ = null;",
          "22224:             runBuilder_.clear();",
          "22236:         public org.mlflow.api.proto.Service.Run.Builder getRunBuilder() {",
          "22239:           return getRunFieldBuilder().getBuilder();",
          "22248:         public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "22249:           if (runBuilder_ != null) {",
          "22250:             return runBuilder_.getMessageOrBuilder();",
          "22252:             return run_ == null ?",
          "22253:                 org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "22264:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>",
          "22265:             getRunFieldBuilder() {",
          "22266:           if (runBuilder_ == null) {",
          "22267:             runBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "22268:                 org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>(",
          "22269:                     getRun(),",
          "22272:             run_ = null;",
          "22274:           return runBuilder_;",
          "",
          "[Added Lines]",
          "29686:         private org.mlflow.api.proto.Service.RunInfo runInfo_;",
          "29688:             org.mlflow.api.proto.Service.RunInfo, org.mlflow.api.proto.Service.RunInfo.Builder, org.mlflow.api.proto.Service.RunInfoOrBuilder> runInfoBuilder_;",
          "29697:         public boolean hasRunInfo() {",
          "29708:         public org.mlflow.api.proto.Service.RunInfo getRunInfo() {",
          "29709:           if (runInfoBuilder_ == null) {",
          "29710:             return runInfo_ == null ? org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "29712:             return runInfoBuilder_.getMessage();",
          "29722:         public Builder setRunInfo(org.mlflow.api.proto.Service.RunInfo value) {",
          "29723:           if (runInfoBuilder_ == null) {",
          "29727:             runInfo_ = value;",
          "29730:             runInfoBuilder_.setMessage(value);",
          "29742:         public Builder setRunInfo(",
          "29743:             org.mlflow.api.proto.Service.RunInfo.Builder builderForValue) {",
          "29744:           if (runInfoBuilder_ == null) {",
          "29745:             runInfo_ = builderForValue.build();",
          "29748:             runInfoBuilder_.setMessage(builderForValue.build());",
          "29760:         public Builder mergeRunInfo(org.mlflow.api.proto.Service.RunInfo value) {",
          "29761:           if (runInfoBuilder_ == null) {",
          "29763:                 runInfo_ != null &&",
          "29764:                 runInfo_ != org.mlflow.api.proto.Service.RunInfo.getDefaultInstance()) {",
          "29765:               runInfo_ =",
          "29766:                 org.mlflow.api.proto.Service.RunInfo.newBuilder(runInfo_).mergeFrom(value).buildPartial();",
          "29768:               runInfo_ = value;",
          "29772:             runInfoBuilder_.mergeFrom(value);",
          "29784:         public Builder clearRunInfo() {",
          "29785:           if (runInfoBuilder_ == null) {",
          "29786:             runInfo_ = null;",
          "29789:             runInfoBuilder_.clear();",
          "29801:         public org.mlflow.api.proto.Service.RunInfo.Builder getRunInfoBuilder() {",
          "29804:           return getRunInfoFieldBuilder().getBuilder();",
          "29813:         public org.mlflow.api.proto.Service.RunInfoOrBuilder getRunInfoOrBuilder() {",
          "29814:           if (runInfoBuilder_ != null) {",
          "29815:             return runInfoBuilder_.getMessageOrBuilder();",
          "29817:             return runInfo_ == null ?",
          "29818:                 org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "29829:             org.mlflow.api.proto.Service.RunInfo, org.mlflow.api.proto.Service.RunInfo.Builder, org.mlflow.api.proto.Service.RunInfoOrBuilder>",
          "29830:             getRunInfoFieldBuilder() {",
          "29831:           if (runInfoBuilder_ == null) {",
          "29832:             runInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "29833:                 org.mlflow.api.proto.Service.RunInfo, org.mlflow.api.proto.Service.RunInfo.Builder, org.mlflow.api.proto.Service.RunInfoOrBuilder>(",
          "29834:                     getRunInfo(),",
          "29837:             runInfo_ = null;",
          "29839:           return runInfoBuilder_;",
          "",
          "---------------",
          "--- Hunk 298 ---",
          "[Context before]",
          "22286:         }",
          "22290:       }",
          "22294:       static {",
          "22296:       }",
          "22299:         return DEFAULT_INSTANCE;",
          "22300:       }",
          "",
          "[Removed Lines]",
          "22293:       private static final org.mlflow.api.proto.Service.CreateRun.Response DEFAULT_INSTANCE;",
          "22295:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateRun.Response();",
          "22298:       public static org.mlflow.api.proto.Service.CreateRun.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "29858:       private static final org.mlflow.api.proto.Service.UpdateRun.Response DEFAULT_INSTANCE;",
          "29860:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateRun.Response();",
          "29863:       public static org.mlflow.api.proto.Service.UpdateRun.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 299 ---",
          "[Context before]",
          "22320:       }",
          "22322:       @java.lang.Override",
          "22324:         return DEFAULT_INSTANCE;",
          "22325:       }",
          "22327:     }",
          "22329:     private int bitField0_;",
          "22340:     @java.lang.Override",
          "22342:       return ((bitField0_ & 0x00000001) != 0);",
          "22343:     }",
          "22352:     @java.lang.Override",
          "22355:       if (ref instanceof java.lang.String) {",
          "22356:         return (java.lang.String) ref;",
          "22357:       } else {",
          "",
          "[Removed Lines]",
          "22323:       public org.mlflow.api.proto.Service.CreateRun.Response getDefaultInstanceForType() {",
          "22330:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "22331:     private volatile java.lang.Object experimentId_;",
          "22341:     public boolean hasExperimentId() {",
          "22353:     public java.lang.String getExperimentId() {",
          "22354:       java.lang.Object ref = experimentId_;",
          "",
          "[Added Lines]",
          "29888:       public org.mlflow.api.proto.Service.UpdateRun.Response getDefaultInstanceForType() {",
          "29895:     public static final int RUN_ID_FIELD_NUMBER = 4;",
          "29896:     private volatile java.lang.Object runId_;",
          "29906:     public boolean hasRunId() {",
          "29918:     public java.lang.String getRunId() {",
          "29919:       java.lang.Object ref = runId_;",
          "",
          "---------------",
          "--- Hunk 300 ---",
          "[Context before]",
          "22359:             (com.google.protobuf.ByteString) ref;",
          "22360:         java.lang.String s = bs.toStringUtf8();",
          "22361:         if (bs.isValidUtf8()) {",
          "22363:         }",
          "22364:         return s;",
          "22365:       }",
          "22366:     }",
          "22375:     @java.lang.Override",
          "22376:     public com.google.protobuf.ByteString",
          "22379:       if (ref instanceof java.lang.String) {",
          "22380:         com.google.protobuf.ByteString b =",
          "22381:             com.google.protobuf.ByteString.copyFromUtf8(",
          "22382:                 (java.lang.String) ref);",
          "22384:         return b;",
          "22385:       } else {",
          "22386:         return (com.google.protobuf.ByteString) ref;",
          "22387:       }",
          "22388:     }",
          "22402:     @java.lang.Override",
          "22404:       return ((bitField0_ & 0x00000002) != 0);",
          "22405:     }",
          "22416:     @java.lang.Override",
          "22419:       if (ref instanceof java.lang.String) {",
          "22420:         return (java.lang.String) ref;",
          "22421:       } else {",
          "",
          "[Removed Lines]",
          "22362:           experimentId_ = s;",
          "22377:         getExperimentIdBytes() {",
          "22378:       java.lang.Object ref = experimentId_;",
          "22383:         experimentId_ = b;",
          "22390:     public static final int USER_ID_FIELD_NUMBER = 2;",
          "22391:     private volatile java.lang.Object userId_;",
          "22403:     public boolean hasUserId() {",
          "22417:     public java.lang.String getUserId() {",
          "22418:       java.lang.Object ref = userId_;",
          "",
          "[Added Lines]",
          "29927:           runId_ = s;",
          "29942:         getRunIdBytes() {",
          "29943:       java.lang.Object ref = runId_;",
          "29948:         runId_ = b;",
          "29955:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "29956:     private volatile java.lang.Object runUuid_;",
          "29967:     public boolean hasRunUuid() {",
          "29980:     public java.lang.String getRunUuid() {",
          "29981:       java.lang.Object ref = runUuid_;",
          "",
          "---------------",
          "--- Hunk 301 ---",
          "[Context before]",
          "22423:             (com.google.protobuf.ByteString) ref;",
          "22424:         java.lang.String s = bs.toStringUtf8();",
          "22425:         if (bs.isValidUtf8()) {",
          "22427:         }",
          "22428:         return s;",
          "22429:       }",
          "22430:     }",
          "22441:     @java.lang.Override",
          "22442:     public com.google.protobuf.ByteString",
          "22445:       if (ref instanceof java.lang.String) {",
          "22446:         com.google.protobuf.ByteString b =",
          "22447:             com.google.protobuf.ByteString.copyFromUtf8(",
          "22448:                 (java.lang.String) ref);",
          "22450:         return b;",
          "22451:       } else {",
          "22452:         return (com.google.protobuf.ByteString) ref;",
          "22453:       }",
          "22454:     }",
          "22468:       return ((bitField0_ & 0x00000004) != 0);",
          "22469:     }",
          "22514:     }",
          "22526:     @java.lang.Override",
          "22528:       return ((bitField0_ & 0x00000008) != 0);",
          "22529:     }",
          "22538:     @java.lang.Override",
          "22541:     }",
          "22575:     @java.lang.Override",
          "22578:     }",
          "22586:     @java.lang.Override",
          "22589:     }",
          "22597:     @java.lang.Override",
          "22601:     }",
          "22603:     private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "22426:           userId_ = s;",
          "22443:         getUserIdBytes() {",
          "22444:       java.lang.Object ref = userId_;",
          "22449:         userId_ = b;",
          "22456:     public static final int RUN_NAME_FIELD_NUMBER = 3;",
          "22457:     private volatile java.lang.Object runName_;",
          "22466:     @java.lang.Override",
          "22467:     public boolean hasRunName() {",
          "22478:     @java.lang.Override",
          "22479:     public java.lang.String getRunName() {",
          "22480:       java.lang.Object ref = runName_;",
          "22481:       if (ref instanceof java.lang.String) {",
          "22482:         return (java.lang.String) ref;",
          "22483:       } else {",
          "22484:         com.google.protobuf.ByteString bs =",
          "22485:             (com.google.protobuf.ByteString) ref;",
          "22486:         java.lang.String s = bs.toStringUtf8();",
          "22487:         if (bs.isValidUtf8()) {",
          "22488:           runName_ = s;",
          "22489:         }",
          "22490:         return s;",
          "22491:       }",
          "22492:     }",
          "22501:     @java.lang.Override",
          "22502:     public com.google.protobuf.ByteString",
          "22503:         getRunNameBytes() {",
          "22504:       java.lang.Object ref = runName_;",
          "22505:       if (ref instanceof java.lang.String) {",
          "22506:         com.google.protobuf.ByteString b =",
          "22507:             com.google.protobuf.ByteString.copyFromUtf8(",
          "22508:                 (java.lang.String) ref);",
          "22509:         runName_ = b;",
          "22510:         return b;",
          "22511:       } else {",
          "22512:         return (com.google.protobuf.ByteString) ref;",
          "22513:       }",
          "22516:     public static final int START_TIME_FIELD_NUMBER = 7;",
          "22517:     private long startTime_;",
          "22527:     public boolean hasStartTime() {",
          "22539:     public long getStartTime() {",
          "22540:       return startTime_;",
          "22543:     public static final int TAGS_FIELD_NUMBER = 9;",
          "22544:     private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_;",
          "22552:     @java.lang.Override",
          "22553:     public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "22554:       return tags_;",
          "22555:     }",
          "22563:     @java.lang.Override",
          "22564:     public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "22565:         getTagsOrBuilderList() {",
          "22566:       return tags_;",
          "22567:     }",
          "22576:     public int getTagsCount() {",
          "22577:       return tags_.size();",
          "22587:     public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "22588:       return tags_.get(index);",
          "22598:     public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "22599:         int index) {",
          "22600:       return tags_.get(index);",
          "",
          "[Added Lines]",
          "29989:           runUuid_ = s;",
          "30005:         getRunUuidBytes() {",
          "30006:       java.lang.Object ref = runUuid_;",
          "30011:         runUuid_ = b;",
          "30018:     public static final int STATUS_FIELD_NUMBER = 2;",
          "30019:     private int status_;",
          "30028:     @java.lang.Override public boolean hasStatus() {",
          "30039:     @java.lang.Override public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "30040:       @SuppressWarnings(\"deprecation\")",
          "30041:       org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "30042:       return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "30045:     public static final int END_TIME_FIELD_NUMBER = 3;",
          "30046:     private long endTime_;",
          "30056:     public boolean hasEndTime() {",
          "30068:     public long getEndTime() {",
          "30069:       return endTime_;",
          "30072:     public static final int RUN_NAME_FIELD_NUMBER = 5;",
          "30073:     private volatile java.lang.Object runName_;",
          "30083:     public boolean hasRunName() {",
          "30084:       return ((bitField0_ & 0x00000010) != 0);",
          "30095:     public java.lang.String getRunName() {",
          "30096:       java.lang.Object ref = runName_;",
          "30097:       if (ref instanceof java.lang.String) {",
          "30098:         return (java.lang.String) ref;",
          "30099:       } else {",
          "30100:         com.google.protobuf.ByteString bs =",
          "30101:             (com.google.protobuf.ByteString) ref;",
          "30102:         java.lang.String s = bs.toStringUtf8();",
          "30103:         if (bs.isValidUtf8()) {",
          "30104:           runName_ = s;",
          "30105:         }",
          "30106:         return s;",
          "30107:       }",
          "30118:     public com.google.protobuf.ByteString",
          "30119:         getRunNameBytes() {",
          "30120:       java.lang.Object ref = runName_;",
          "30121:       if (ref instanceof java.lang.String) {",
          "30122:         com.google.protobuf.ByteString b =",
          "30123:             com.google.protobuf.ByteString.copyFromUtf8(",
          "30124:                 (java.lang.String) ref);",
          "30125:         runName_ = b;",
          "30126:         return b;",
          "30127:       } else {",
          "30128:         return (com.google.protobuf.ByteString) ref;",
          "30129:       }",
          "",
          "---------------",
          "--- Hunk 302 ---",
          "[Context before]",
          "22614:     @java.lang.Override",
          "22615:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "22616:                         throws java.io.IOException {",
          "22620:       if (((bitField0_ & 0x00000002) != 0)) {",
          "22622:       }",
          "22623:       if (((bitField0_ & 0x00000004) != 0)) {",
          "22625:       }",
          "22626:       if (((bitField0_ & 0x00000008) != 0)) {",
          "22628:       }",
          "22631:       }",
          "22632:       unknownFields.writeTo(output);",
          "22633:     }",
          "",
          "[Removed Lines]",
          "22617:       if (((bitField0_ & 0x00000001) != 0)) {",
          "22618:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "22619:       }",
          "22621:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userId_);",
          "22624:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runName_);",
          "22627:         output.writeInt64(7, startTime_);",
          "22629:       for (int i = 0; i < tags_.size(); i++) {",
          "22630:         output.writeMessage(9, tags_.get(i));",
          "",
          "[Added Lines]",
          "30147:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "30150:         output.writeEnum(2, status_);",
          "30153:         output.writeInt64(3, endTime_);",
          "30155:       if (((bitField0_ & 0x00000001) != 0)) {",
          "30156:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, runId_);",
          "30157:       }",
          "30158:       if (((bitField0_ & 0x00000010) != 0)) {",
          "30159:         com.google.protobuf.GeneratedMessageV3.writeString(output, 5, runName_);",
          "",
          "---------------",
          "--- Hunk 303 ---",
          "[Context before]",
          "22638:       if (size != -1) return size;",
          "22640:       size = 0;",
          "22644:       if (((bitField0_ & 0x00000002) != 0)) {",
          "22646:       }",
          "22647:       if (((bitField0_ & 0x00000004) != 0)) {",
          "22649:       }",
          "22650:       if (((bitField0_ & 0x00000008) != 0)) {",
          "22651:         size += com.google.protobuf.CodedOutputStream",
          "22653:       }",
          "22657:       }",
          "22658:       size += unknownFields.getSerializedSize();",
          "22659:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "22641:       if (((bitField0_ & 0x00000001) != 0)) {",
          "22642:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "22643:       }",
          "22645:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userId_);",
          "22648:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runName_);",
          "22652:           .computeInt64Size(7, startTime_);",
          "22654:       for (int i = 0; i < tags_.size(); i++) {",
          "22655:         size += com.google.protobuf.CodedOutputStream",
          "22656:           .computeMessageSize(9, tags_.get(i));",
          "",
          "[Added Lines]",
          "30171:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "30174:         size += com.google.protobuf.CodedOutputStream",
          "30175:           .computeEnumSize(2, status_);",
          "30179:           .computeInt64Size(3, endTime_);",
          "30181:       if (((bitField0_ & 0x00000001) != 0)) {",
          "30182:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, runId_);",
          "30183:       }",
          "30184:       if (((bitField0_ & 0x00000010) != 0)) {",
          "30185:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, runName_);",
          "",
          "---------------",
          "--- Hunk 304 ---",
          "[Context before]",
          "22665:       if (obj == this) {",
          "22666:        return true;",
          "22667:       }",
          "22669:         return super.equals(obj);",
          "22670:       }",
          "22677:       }",
          "22682:       }",
          "22683:       if (hasRunName() != other.hasRunName()) return false;",
          "22684:       if (hasRunName()) {",
          "22685:         if (!getRunName()",
          "22686:             .equals(other.getRunName())) return false;",
          "22687:       }",
          "22695:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "22696:       return true;",
          "22697:     }",
          "",
          "[Removed Lines]",
          "22668:       if (!(obj instanceof org.mlflow.api.proto.Service.CreateRun)) {",
          "22671:       org.mlflow.api.proto.Service.CreateRun other = (org.mlflow.api.proto.Service.CreateRun) obj;",
          "22673:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "22674:       if (hasExperimentId()) {",
          "22675:         if (!getExperimentId()",
          "22676:             .equals(other.getExperimentId())) return false;",
          "22678:       if (hasUserId() != other.hasUserId()) return false;",
          "22679:       if (hasUserId()) {",
          "22680:         if (!getUserId()",
          "22681:             .equals(other.getUserId())) return false;",
          "22688:       if (hasStartTime() != other.hasStartTime()) return false;",
          "22689:       if (hasStartTime()) {",
          "22690:         if (getStartTime()",
          "22691:             != other.getStartTime()) return false;",
          "22692:       }",
          "22693:       if (!getTagsList()",
          "22694:           .equals(other.getTagsList())) return false;",
          "",
          "[Added Lines]",
          "30197:       if (!(obj instanceof org.mlflow.api.proto.Service.UpdateRun)) {",
          "30200:       org.mlflow.api.proto.Service.UpdateRun other = (org.mlflow.api.proto.Service.UpdateRun) obj;",
          "30202:       if (hasRunId() != other.hasRunId()) return false;",
          "30203:       if (hasRunId()) {",
          "30204:         if (!getRunId()",
          "30205:             .equals(other.getRunId())) return false;",
          "30207:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "30208:       if (hasRunUuid()) {",
          "30209:         if (!getRunUuid()",
          "30210:             .equals(other.getRunUuid())) return false;",
          "30211:       }",
          "30212:       if (hasStatus() != other.hasStatus()) return false;",
          "30213:       if (hasStatus()) {",
          "30214:         if (status_ != other.status_) return false;",
          "30215:       }",
          "30216:       if (hasEndTime() != other.hasEndTime()) return false;",
          "30217:       if (hasEndTime()) {",
          "30218:         if (getEndTime()",
          "30219:             != other.getEndTime()) return false;",
          "",
          "---------------",
          "--- Hunk 305 ---",
          "[Context before]",
          "22703:       }",
          "22704:       int hash = 41;",
          "22705:       hash = (19 * hash) + getDescriptor().hashCode();",
          "22709:       }",
          "22713:       }",
          "22717:       }",
          "22720:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "22722:       }",
          "22726:       }",
          "22727:       hash = (29 * hash) + unknownFields.hashCode();",
          "22728:       memoizedHashCode = hash;",
          "22729:       return hash;",
          "22730:     }",
          "22733:         java.nio.ByteBuffer data)",
          "22734:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "22735:       return PARSER.parseFrom(data);",
          "22736:     }",
          "22738:         java.nio.ByteBuffer data,",
          "22739:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22740:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "22741:       return PARSER.parseFrom(data, extensionRegistry);",
          "22742:     }",
          "22744:         com.google.protobuf.ByteString data)",
          "22745:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "22746:       return PARSER.parseFrom(data);",
          "22747:     }",
          "22749:         com.google.protobuf.ByteString data,",
          "22750:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22751:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "22752:       return PARSER.parseFrom(data, extensionRegistry);",
          "22753:     }",
          "22755:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "22756:       return PARSER.parseFrom(data);",
          "22757:     }",
          "22759:         byte[] data,",
          "22760:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22761:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "22762:       return PARSER.parseFrom(data, extensionRegistry);",
          "22763:     }",
          "22765:         throws java.io.IOException {",
          "22766:       return com.google.protobuf.GeneratedMessageV3",
          "22767:           .parseWithIOException(PARSER, input);",
          "22768:     }",
          "22770:         java.io.InputStream input,",
          "22771:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22772:         throws java.io.IOException {",
          "22773:       return com.google.protobuf.GeneratedMessageV3",
          "22774:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "22775:     }",
          "22777:         throws java.io.IOException {",
          "22778:       return com.google.protobuf.GeneratedMessageV3",
          "22779:           .parseDelimitedWithIOException(PARSER, input);",
          "22780:     }",
          "22782:         java.io.InputStream input,",
          "22783:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22784:         throws java.io.IOException {",
          "22785:       return com.google.protobuf.GeneratedMessageV3",
          "22786:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "22787:     }",
          "22789:         com.google.protobuf.CodedInputStream input)",
          "22790:         throws java.io.IOException {",
          "22791:       return com.google.protobuf.GeneratedMessageV3",
          "22792:           .parseWithIOException(PARSER, input);",
          "22793:     }",
          "22795:         com.google.protobuf.CodedInputStream input,",
          "22796:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "22797:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "22706:       if (hasExperimentId()) {",
          "22707:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "22708:         hash = (53 * hash) + getExperimentId().hashCode();",
          "22710:       if (hasUserId()) {",
          "22711:         hash = (37 * hash) + USER_ID_FIELD_NUMBER;",
          "22712:         hash = (53 * hash) + getUserId().hashCode();",
          "22714:       if (hasRunName()) {",
          "22715:         hash = (37 * hash) + RUN_NAME_FIELD_NUMBER;",
          "22716:         hash = (53 * hash) + getRunName().hashCode();",
          "22718:       if (hasStartTime()) {",
          "22719:         hash = (37 * hash) + START_TIME_FIELD_NUMBER;",
          "22721:             getStartTime());",
          "22723:       if (getTagsCount() > 0) {",
          "22724:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "22725:         hash = (53 * hash) + getTagsList().hashCode();",
          "22732:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "22737:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "22743:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "22748:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "22754:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(byte[] data)",
          "22758:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "22764:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(java.io.InputStream input)",
          "22769:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "22776:     public static org.mlflow.api.proto.Service.CreateRun parseDelimitedFrom(java.io.InputStream input)",
          "22781:     public static org.mlflow.api.proto.Service.CreateRun parseDelimitedFrom(",
          "22788:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "22794:     public static org.mlflow.api.proto.Service.CreateRun parseFrom(",
          "",
          "[Added Lines]",
          "30237:       if (hasRunId()) {",
          "30238:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "30239:         hash = (53 * hash) + getRunId().hashCode();",
          "30241:       if (hasRunUuid()) {",
          "30242:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "30243:         hash = (53 * hash) + getRunUuid().hashCode();",
          "30245:       if (hasStatus()) {",
          "30246:         hash = (37 * hash) + STATUS_FIELD_NUMBER;",
          "30247:         hash = (53 * hash) + status_;",
          "30249:       if (hasEndTime()) {",
          "30250:         hash = (37 * hash) + END_TIME_FIELD_NUMBER;",
          "30252:             getEndTime());",
          "30254:       if (hasRunName()) {",
          "30255:         hash = (37 * hash) + RUN_NAME_FIELD_NUMBER;",
          "30256:         hash = (53 * hash) + getRunName().hashCode();",
          "30263:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "30268:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "30274:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "30279:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "30285:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(byte[] data)",
          "30289:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "30295:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(java.io.InputStream input)",
          "30300:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "30307:     public static org.mlflow.api.proto.Service.UpdateRun parseDelimitedFrom(java.io.InputStream input)",
          "30312:     public static org.mlflow.api.proto.Service.UpdateRun parseDelimitedFrom(",
          "30319:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "30325:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "",
          "---------------",
          "--- Hunk 306 ---",
          "[Context before]",
          "22804:     public static Builder newBuilder() {",
          "22805:       return DEFAULT_INSTANCE.toBuilder();",
          "22806:     }",
          "22808:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "22809:     }",
          "22810:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "22807:     public static Builder newBuilder(org.mlflow.api.proto.Service.CreateRun prototype) {",
          "",
          "[Added Lines]",
          "30338:     public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateRun prototype) {",
          "",
          "---------------",
          "--- Hunk 307 ---",
          "[Context before]",
          "22820:       return builder;",
          "22821:     }",
          "22825:     public static final class Builder extends",
          "22826:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "22829:       public static final com.google.protobuf.Descriptors.Descriptor",
          "22830:           getDescriptor() {",
          "22832:       }",
          "22834:       @java.lang.Override",
          "22835:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "22836:           internalGetFieldAccessorTable() {",
          "22838:             .ensureFieldAccessorsInitialized(",
          "22840:       }",
          "22843:       private Builder() {",
          "22844:         maybeForceBuilderInitialization();",
          "22845:       }",
          "",
          "[Removed Lines]",
          "22828:         org.mlflow.api.proto.Service.CreateRunOrBuilder {",
          "22831:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_descriptor;",
          "22837:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_fieldAccessorTable",
          "22839:                 org.mlflow.api.proto.Service.CreateRun.class, org.mlflow.api.proto.Service.CreateRun.Builder.class);",
          "",
          "[Added Lines]",
          "30359:         org.mlflow.api.proto.Service.UpdateRunOrBuilder {",
          "30362:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_descriptor;",
          "30368:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_fieldAccessorTable",
          "30370:                 org.mlflow.api.proto.Service.UpdateRun.class, org.mlflow.api.proto.Service.UpdateRun.Builder.class);",
          "",
          "---------------",
          "--- Hunk 308 ---",
          "[Context before]",
          "22852:       private void maybeForceBuilderInitialization() {",
          "22853:         if (com.google.protobuf.GeneratedMessageV3",
          "22854:                 .alwaysUseFieldBuilders) {",
          "22856:         }",
          "22857:       }",
          "22858:       @java.lang.Override",
          "22859:       public Builder clear() {",
          "22860:         super.clear();",
          "22862:         bitField0_ = (bitField0_ & ~0x00000001);",
          "22864:         bitField0_ = (bitField0_ & ~0x00000002);",
          "22866:         bitField0_ = (bitField0_ & ~0x00000004);",
          "22868:         bitField0_ = (bitField0_ & ~0x00000008);",
          "22875:         return this;",
          "22876:       }",
          "22878:       @java.lang.Override",
          "22879:       public com.google.protobuf.Descriptors.Descriptor",
          "22880:           getDescriptorForType() {",
          "22882:       }",
          "22884:       @java.lang.Override",
          "22887:       }",
          "22889:       @java.lang.Override",
          "22892:         if (!result.isInitialized()) {",
          "22893:           throw newUninitializedMessageException(result);",
          "22894:         }",
          "",
          "[Removed Lines]",
          "22855:           getTagsFieldBuilder();",
          "22861:         experimentId_ = \"\";",
          "22863:         userId_ = \"\";",
          "22865:         runName_ = \"\";",
          "22867:         startTime_ = 0L;",
          "22869:         if (tagsBuilder_ == null) {",
          "22870:           tags_ = java.util.Collections.emptyList();",
          "22871:           bitField0_ = (bitField0_ & ~0x00000010);",
          "22872:         } else {",
          "22873:           tagsBuilder_.clear();",
          "22874:         }",
          "22881:         return org.mlflow.api.proto.Service.internal_static_mlflow_CreateRun_descriptor;",
          "22885:       public org.mlflow.api.proto.Service.CreateRun getDefaultInstanceForType() {",
          "22886:         return org.mlflow.api.proto.Service.CreateRun.getDefaultInstance();",
          "22890:       public org.mlflow.api.proto.Service.CreateRun build() {",
          "22891:         org.mlflow.api.proto.Service.CreateRun result = buildPartial();",
          "",
          "[Added Lines]",
          "30391:         runId_ = \"\";",
          "30393:         runUuid_ = \"\";",
          "30395:         status_ = 1;",
          "30397:         endTime_ = 0L;",
          "30399:         runName_ = \"\";",
          "30400:         bitField0_ = (bitField0_ & ~0x00000010);",
          "30407:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_descriptor;",
          "30411:       public org.mlflow.api.proto.Service.UpdateRun getDefaultInstanceForType() {",
          "30412:         return org.mlflow.api.proto.Service.UpdateRun.getDefaultInstance();",
          "30416:       public org.mlflow.api.proto.Service.UpdateRun build() {",
          "30417:         org.mlflow.api.proto.Service.UpdateRun result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 309 ---",
          "[Context before]",
          "22896:       }",
          "22898:       @java.lang.Override",
          "22901:         int from_bitField0_ = bitField0_;",
          "22902:         int to_bitField0_ = 0;",
          "22903:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "22904:           to_bitField0_ |= 0x00000001;",
          "22905:         }",
          "22907:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "22908:           to_bitField0_ |= 0x00000002;",
          "22909:         }",
          "22911:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "22912:           to_bitField0_ |= 0x00000004;",
          "22913:         }",
          "22915:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "22917:           to_bitField0_ |= 0x00000008;",
          "22918:         }",
          "22927:         }",
          "22928:         result.bitField0_ = to_bitField0_;",
          "22929:         onBuilt();",
          "22930:         return result;",
          "",
          "[Removed Lines]",
          "22899:       public org.mlflow.api.proto.Service.CreateRun buildPartial() {",
          "22900:         org.mlflow.api.proto.Service.CreateRun result = new org.mlflow.api.proto.Service.CreateRun(this);",
          "22906:         result.experimentId_ = experimentId_;",
          "22910:         result.userId_ = userId_;",
          "22914:         result.runName_ = runName_;",
          "22916:           result.startTime_ = startTime_;",
          "22919:         if (tagsBuilder_ == null) {",
          "22920:           if (((bitField0_ & 0x00000010) != 0)) {",
          "22921:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "22922:             bitField0_ = (bitField0_ & ~0x00000010);",
          "22923:           }",
          "22924:           result.tags_ = tags_;",
          "22925:         } else {",
          "22926:           result.tags_ = tagsBuilder_.build();",
          "",
          "[Added Lines]",
          "30425:       public org.mlflow.api.proto.Service.UpdateRun buildPartial() {",
          "30426:         org.mlflow.api.proto.Service.UpdateRun result = new org.mlflow.api.proto.Service.UpdateRun(this);",
          "30432:         result.runId_ = runId_;",
          "30436:         result.runUuid_ = runUuid_;",
          "30440:         result.status_ = status_;",
          "30442:           result.endTime_ = endTime_;",
          "30445:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "30446:           to_bitField0_ |= 0x00000010;",
          "30448:         result.runName_ = runName_;",
          "",
          "---------------",
          "--- Hunk 310 ---",
          "[Context before]",
          "22964:       }",
          "22965:       @java.lang.Override",
          "22966:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "22969:         } else {",
          "22970:           super.mergeFrom(other);",
          "22971:           return this;",
          "22972:         }",
          "22973:       }",
          "22978:           bitField0_ |= 0x00000001;",
          "22980:           onChanged();",
          "22981:         }",
          "22983:           bitField0_ |= 0x00000002;",
          "22985:           onChanged();",
          "22986:         }",
          "22987:         if (other.hasRunName()) {",
          "22989:           runName_ = other.runName_;",
          "22990:           onChanged();",
          "22991:         }",
          "23021:         this.mergeUnknownFields(other.unknownFields);",
          "23022:         onChanged();",
          "23023:         return this;",
          "",
          "[Removed Lines]",
          "22967:         if (other instanceof org.mlflow.api.proto.Service.CreateRun) {",
          "22968:           return mergeFrom((org.mlflow.api.proto.Service.CreateRun)other);",
          "22975:       public Builder mergeFrom(org.mlflow.api.proto.Service.CreateRun other) {",
          "22976:         if (other == org.mlflow.api.proto.Service.CreateRun.getDefaultInstance()) return this;",
          "22977:         if (other.hasExperimentId()) {",
          "22979:           experimentId_ = other.experimentId_;",
          "22982:         if (other.hasUserId()) {",
          "22984:           userId_ = other.userId_;",
          "22988:           bitField0_ |= 0x00000004;",
          "22992:         if (other.hasStartTime()) {",
          "22993:           setStartTime(other.getStartTime());",
          "22994:         }",
          "22995:         if (tagsBuilder_ == null) {",
          "22996:           if (!other.tags_.isEmpty()) {",
          "22997:             if (tags_.isEmpty()) {",
          "22998:               tags_ = other.tags_;",
          "22999:               bitField0_ = (bitField0_ & ~0x00000010);",
          "23000:             } else {",
          "23001:               ensureTagsIsMutable();",
          "23002:               tags_.addAll(other.tags_);",
          "23003:             }",
          "23004:             onChanged();",
          "23005:           }",
          "23006:         } else {",
          "23007:           if (!other.tags_.isEmpty()) {",
          "23008:             if (tagsBuilder_.isEmpty()) {",
          "23009:               tagsBuilder_.dispose();",
          "23010:               tagsBuilder_ = null;",
          "23011:               tags_ = other.tags_;",
          "23012:               bitField0_ = (bitField0_ & ~0x00000010);",
          "23013:               tagsBuilder_ =",
          "23014:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "23015:                    getTagsFieldBuilder() : null;",
          "23016:             } else {",
          "23017:               tagsBuilder_.addAllMessages(other.tags_);",
          "23018:             }",
          "23019:           }",
          "23020:         }",
          "",
          "[Added Lines]",
          "30488:         if (other instanceof org.mlflow.api.proto.Service.UpdateRun) {",
          "30489:           return mergeFrom((org.mlflow.api.proto.Service.UpdateRun)other);",
          "30496:       public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateRun other) {",
          "30497:         if (other == org.mlflow.api.proto.Service.UpdateRun.getDefaultInstance()) return this;",
          "30498:         if (other.hasRunId()) {",
          "30500:           runId_ = other.runId_;",
          "30503:         if (other.hasRunUuid()) {",
          "30505:           runUuid_ = other.runUuid_;",
          "30508:         if (other.hasStatus()) {",
          "30509:           setStatus(other.getStatus());",
          "30510:         }",
          "30511:         if (other.hasEndTime()) {",
          "30512:           setEndTime(other.getEndTime());",
          "30513:         }",
          "30515:           bitField0_ |= 0x00000010;",
          "",
          "---------------",
          "--- Hunk 311 ---",
          "[Context before]",
          "23033:           com.google.protobuf.CodedInputStream input,",
          "23034:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "23035:           throws java.io.IOException {",
          "23037:         try {",
          "23038:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "23039:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "23041:           throw e.unwrapIOException();",
          "23042:         } finally {",
          "23043:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "23036:         org.mlflow.api.proto.Service.CreateRun parsedMessage = null;",
          "23040:           parsedMessage = (org.mlflow.api.proto.Service.CreateRun) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "30534:         org.mlflow.api.proto.Service.UpdateRun parsedMessage = null;",
          "30538:           parsedMessage = (org.mlflow.api.proto.Service.UpdateRun) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 312 ---",
          "[Context before]",
          "23048:       }",
          "23049:       private int bitField0_;",
          "23061:         return ((bitField0_ & 0x00000001) != 0);",
          "23062:       }",
          "23073:         if (!(ref instanceof java.lang.String)) {",
          "23074:           com.google.protobuf.ByteString bs =",
          "23075:               (com.google.protobuf.ByteString) ref;",
          "23076:           java.lang.String s = bs.toStringUtf8();",
          "23077:           if (bs.isValidUtf8()) {",
          "23079:           }",
          "23080:           return s;",
          "23081:         } else {",
          "",
          "[Removed Lines]",
          "23051:       private java.lang.Object experimentId_ = \"\";",
          "23060:       public boolean hasExperimentId() {",
          "23071:       public java.lang.String getExperimentId() {",
          "23072:         java.lang.Object ref = experimentId_;",
          "23078:             experimentId_ = s;",
          "",
          "[Added Lines]",
          "30549:       private java.lang.Object runId_ = \"\";",
          "30558:       public boolean hasRunId() {",
          "30569:       public java.lang.String getRunId() {",
          "30570:         java.lang.Object ref = runId_;",
          "30576:             runId_ = s;",
          "",
          "---------------",
          "--- Hunk 313 ---",
          "[Context before]",
          "23084:       }",
          "23093:       public com.google.protobuf.ByteString",
          "23096:         if (ref instanceof String) {",
          "23097:           com.google.protobuf.ByteString b =",
          "23098:               com.google.protobuf.ByteString.copyFromUtf8(",
          "23099:                   (java.lang.String) ref);",
          "23101:           return b;",
          "23102:         } else {",
          "23103:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "23094:           getExperimentIdBytes() {",
          "23095:         java.lang.Object ref = experimentId_;",
          "23100:           experimentId_ = b;",
          "",
          "[Added Lines]",
          "30592:           getRunIdBytes() {",
          "30593:         java.lang.Object ref = runId_;",
          "30598:           runId_ = b;",
          "",
          "---------------",
          "--- Hunk 314 ---",
          "[Context before]",
          "23105:       }",
          "23116:           java.lang.String value) {",
          "23117:         if (value == null) {",
          "23118:     throw new NullPointerException();",
          "23119:   }",
          "23120:   bitField0_ |= 0x00000001;",
          "23122:         onChanged();",
          "23123:         return this;",
          "23124:       }",
          "23134:         bitField0_ = (bitField0_ & ~0x00000001);",
          "23136:         onChanged();",
          "23137:         return this;",
          "23138:       }",
          "23149:           com.google.protobuf.ByteString value) {",
          "23150:         if (value == null) {",
          "23151:     throw new NullPointerException();",
          "23152:   }",
          "23153:   bitField0_ |= 0x00000001;",
          "23155:         onChanged();",
          "23156:         return this;",
          "23157:       }",
          "23171:         return ((bitField0_ & 0x00000002) != 0);",
          "23172:       }",
          "23185:         if (!(ref instanceof java.lang.String)) {",
          "23186:           com.google.protobuf.ByteString bs =",
          "23187:               (com.google.protobuf.ByteString) ref;",
          "23188:           java.lang.String s = bs.toStringUtf8();",
          "23189:           if (bs.isValidUtf8()) {",
          "23191:           }",
          "23192:           return s;",
          "23193:         } else {",
          "",
          "[Removed Lines]",
          "23115:       public Builder setExperimentId(",
          "23121:         experimentId_ = value;",
          "23133:       public Builder clearExperimentId() {",
          "23135:         experimentId_ = getDefaultInstance().getExperimentId();",
          "23148:       public Builder setExperimentIdBytes(",
          "23154:         experimentId_ = value;",
          "23159:       private java.lang.Object userId_ = \"\";",
          "23170:       public boolean hasUserId() {",
          "23183:       public java.lang.String getUserId() {",
          "23184:         java.lang.Object ref = userId_;",
          "23190:             userId_ = s;",
          "",
          "[Added Lines]",
          "30613:       public Builder setRunId(",
          "30619:         runId_ = value;",
          "30631:       public Builder clearRunId() {",
          "30633:         runId_ = getDefaultInstance().getRunId();",
          "30646:       public Builder setRunIdBytes(",
          "30652:         runId_ = value;",
          "30657:       private java.lang.Object runUuid_ = \"\";",
          "30667:       public boolean hasRunUuid() {",
          "30679:       public java.lang.String getRunUuid() {",
          "30680:         java.lang.Object ref = runUuid_;",
          "30686:             runUuid_ = s;",
          "",
          "---------------",
          "--- Hunk 315 ---",
          "[Context before]",
          "23196:       }",
          "23207:       public com.google.protobuf.ByteString",
          "23210:         if (ref instanceof String) {",
          "23211:           com.google.protobuf.ByteString b =",
          "23212:               com.google.protobuf.ByteString.copyFromUtf8(",
          "23213:                   (java.lang.String) ref);",
          "23215:           return b;",
          "23216:         } else {",
          "23217:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "23208:           getUserIdBytes() {",
          "23209:         java.lang.Object ref = userId_;",
          "23214:           userId_ = b;",
          "",
          "[Added Lines]",
          "30703:           getRunUuidBytes() {",
          "30704:         java.lang.Object ref = runUuid_;",
          "30709:           runUuid_ = b;",
          "",
          "---------------",
          "--- Hunk 316 ---",
          "[Context before]",
          "23219:       }",
          "23232:           java.lang.String value) {",
          "23233:         if (value == null) {",
          "23234:     throw new NullPointerException();",
          "23235:   }",
          "23236:   bitField0_ |= 0x00000002;",
          "23238:         onChanged();",
          "23239:         return this;",
          "23240:       }",
          "23252:         bitField0_ = (bitField0_ & ~0x00000002);",
          "23254:         onChanged();",
          "23255:         return this;",
          "23256:       }",
          "23269:           com.google.protobuf.ByteString value) {",
          "23270:         if (value == null) {",
          "23271:     throw new NullPointerException();",
          "23272:   }",
          "23273:   bitField0_ |= 0x00000002;",
          "23533:         return this;",
          "23534:       }",
          "23554:       }",
          "23575:       }",
          "23591:         }",
          "23592:         return this;",
          "23593:       }",
          "23610:         return this;",
          "23611:       }",
          "23630:       }",
          "23646:         return this;",
          "23647:       }",
          "23663:         return this;",
          "23664:       }",
          "23675:       }",
          "23688:         }",
          "23689:       }",
          "23701:         } else {",
          "23703:         }",
          "23704:       }",
          "23715:       }",
          "23727:       }",
          "23752:       }",
          "23753:       @java.lang.Override",
          "23754:       public final Builder setUnknownFields(",
          "",
          "[Removed Lines]",
          "23231:       public Builder setUserId(",
          "23237:         userId_ = value;",
          "23251:       public Builder clearUserId() {",
          "23253:         userId_ = getDefaultInstance().getUserId();",
          "23268:       public Builder setUserIdBytes(",
          "23274:         userId_ = value;",
          "23275:         onChanged();",
          "23276:         return this;",
          "23277:       }",
          "23279:       private java.lang.Object runName_ = \"\";",
          "23288:       public boolean hasRunName() {",
          "23289:         return ((bitField0_ & 0x00000004) != 0);",
          "23290:       }",
          "23299:       public java.lang.String getRunName() {",
          "23300:         java.lang.Object ref = runName_;",
          "23301:         if (!(ref instanceof java.lang.String)) {",
          "23302:           com.google.protobuf.ByteString bs =",
          "23303:               (com.google.protobuf.ByteString) ref;",
          "23304:           java.lang.String s = bs.toStringUtf8();",
          "23305:           if (bs.isValidUtf8()) {",
          "23306:             runName_ = s;",
          "23307:           }",
          "23308:           return s;",
          "23309:         } else {",
          "23310:           return (java.lang.String) ref;",
          "23311:         }",
          "23312:       }",
          "23321:       public com.google.protobuf.ByteString",
          "23322:           getRunNameBytes() {",
          "23323:         java.lang.Object ref = runName_;",
          "23324:         if (ref instanceof String) {",
          "23325:           com.google.protobuf.ByteString b =",
          "23326:               com.google.protobuf.ByteString.copyFromUtf8(",
          "23327:                   (java.lang.String) ref);",
          "23328:           runName_ = b;",
          "23329:           return b;",
          "23330:         } else {",
          "23331:           return (com.google.protobuf.ByteString) ref;",
          "23332:         }",
          "23333:       }",
          "23343:       public Builder setRunName(",
          "23344:           java.lang.String value) {",
          "23345:         if (value == null) {",
          "23346:     throw new NullPointerException();",
          "23347:   }",
          "23348:   bitField0_ |= 0x00000004;",
          "23349:         runName_ = value;",
          "23350:         onChanged();",
          "23351:         return this;",
          "23352:       }",
          "23361:       public Builder clearRunName() {",
          "23362:         bitField0_ = (bitField0_ & ~0x00000004);",
          "23363:         runName_ = getDefaultInstance().getRunName();",
          "23364:         onChanged();",
          "23365:         return this;",
          "23366:       }",
          "23376:       public Builder setRunNameBytes(",
          "23377:           com.google.protobuf.ByteString value) {",
          "23378:         if (value == null) {",
          "23379:     throw new NullPointerException();",
          "23380:   }",
          "23381:   bitField0_ |= 0x00000004;",
          "23382:         runName_ = value;",
          "23383:         onChanged();",
          "23384:         return this;",
          "23385:       }",
          "23387:       private long startTime_ ;",
          "23396:       @java.lang.Override",
          "23397:       public boolean hasStartTime() {",
          "23398:         return ((bitField0_ & 0x00000008) != 0);",
          "23399:       }",
          "23408:       @java.lang.Override",
          "23409:       public long getStartTime() {",
          "23410:         return startTime_;",
          "23411:       }",
          "23421:       public Builder setStartTime(long value) {",
          "23422:         bitField0_ |= 0x00000008;",
          "23423:         startTime_ = value;",
          "23424:         onChanged();",
          "23425:         return this;",
          "23426:       }",
          "23435:       public Builder clearStartTime() {",
          "23436:         bitField0_ = (bitField0_ & ~0x00000008);",
          "23437:         startTime_ = 0L;",
          "23438:         onChanged();",
          "23439:         return this;",
          "23440:       }",
          "23442:       private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_ =",
          "23443:         java.util.Collections.emptyList();",
          "23444:       private void ensureTagsIsMutable() {",
          "23445:         if (!((bitField0_ & 0x00000010) != 0)) {",
          "23446:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>(tags_);",
          "23447:           bitField0_ |= 0x00000010;",
          "23448:          }",
          "23449:       }",
          "23451:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "23452:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder> tagsBuilder_;",
          "23461:       public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "23462:         if (tagsBuilder_ == null) {",
          "23463:           return java.util.Collections.unmodifiableList(tags_);",
          "23464:         } else {",
          "23465:           return tagsBuilder_.getMessageList();",
          "23466:         }",
          "23467:       }",
          "23475:       public int getTagsCount() {",
          "23476:         if (tagsBuilder_ == null) {",
          "23477:           return tags_.size();",
          "23478:         } else {",
          "23479:           return tagsBuilder_.getCount();",
          "23480:         }",
          "23481:       }",
          "23489:       public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "23490:         if (tagsBuilder_ == null) {",
          "23491:           return tags_.get(index);",
          "23492:         } else {",
          "23493:           return tagsBuilder_.getMessage(index);",
          "23494:         }",
          "23495:       }",
          "23503:       public Builder setTags(",
          "23504:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "23505:         if (tagsBuilder_ == null) {",
          "23506:           if (value == null) {",
          "23507:             throw new NullPointerException();",
          "23508:           }",
          "23509:           ensureTagsIsMutable();",
          "23510:           tags_.set(index, value);",
          "23511:           onChanged();",
          "23512:         } else {",
          "23513:           tagsBuilder_.setMessage(index, value);",
          "23514:         }",
          "23515:         return this;",
          "23516:       }",
          "23524:       public Builder setTags(",
          "23525:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "23526:         if (tagsBuilder_ == null) {",
          "23527:           ensureTagsIsMutable();",
          "23528:           tags_.set(index, builderForValue.build());",
          "23529:           onChanged();",
          "23530:         } else {",
          "23531:           tagsBuilder_.setMessage(index, builderForValue.build());",
          "23532:         }",
          "23542:       public Builder addTags(org.mlflow.api.proto.Service.RunTag value) {",
          "23543:         if (tagsBuilder_ == null) {",
          "23544:           if (value == null) {",
          "23545:             throw new NullPointerException();",
          "23546:           }",
          "23547:           ensureTagsIsMutable();",
          "23548:           tags_.add(value);",
          "23549:           onChanged();",
          "23550:         } else {",
          "23551:           tagsBuilder_.addMessage(value);",
          "23552:         }",
          "23553:         return this;",
          "23562:       public Builder addTags(",
          "23563:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "23564:         if (tagsBuilder_ == null) {",
          "23565:           if (value == null) {",
          "23566:             throw new NullPointerException();",
          "23567:           }",
          "23568:           ensureTagsIsMutable();",
          "23569:           tags_.add(index, value);",
          "23570:           onChanged();",
          "23571:         } else {",
          "23572:           tagsBuilder_.addMessage(index, value);",
          "23573:         }",
          "23574:         return this;",
          "23583:       public Builder addTags(",
          "23584:           org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "23585:         if (tagsBuilder_ == null) {",
          "23586:           ensureTagsIsMutable();",
          "23587:           tags_.add(builderForValue.build());",
          "23588:           onChanged();",
          "23589:         } else {",
          "23590:           tagsBuilder_.addMessage(builderForValue.build());",
          "23601:       public Builder addTags(",
          "23602:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "23603:         if (tagsBuilder_ == null) {",
          "23604:           ensureTagsIsMutable();",
          "23605:           tags_.add(index, builderForValue.build());",
          "23606:           onChanged();",
          "23607:         } else {",
          "23608:           tagsBuilder_.addMessage(index, builderForValue.build());",
          "23609:         }",
          "23619:       public Builder addAllTags(",
          "23620:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.RunTag> values) {",
          "23621:         if (tagsBuilder_ == null) {",
          "23622:           ensureTagsIsMutable();",
          "23623:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "23624:               values, tags_);",
          "23625:           onChanged();",
          "23626:         } else {",
          "23627:           tagsBuilder_.addAllMessages(values);",
          "23628:         }",
          "23629:         return this;",
          "23638:       public Builder clearTags() {",
          "23639:         if (tagsBuilder_ == null) {",
          "23640:           tags_ = java.util.Collections.emptyList();",
          "23641:           bitField0_ = (bitField0_ & ~0x00000010);",
          "23642:           onChanged();",
          "23643:         } else {",
          "23644:           tagsBuilder_.clear();",
          "23645:         }",
          "23655:       public Builder removeTags(int index) {",
          "23656:         if (tagsBuilder_ == null) {",
          "23657:           ensureTagsIsMutable();",
          "23658:           tags_.remove(index);",
          "23659:           onChanged();",
          "23660:         } else {",
          "23661:           tagsBuilder_.remove(index);",
          "23662:         }",
          "23672:       public org.mlflow.api.proto.Service.RunTag.Builder getTagsBuilder(",
          "23673:           int index) {",
          "23674:         return getTagsFieldBuilder().getBuilder(index);",
          "23683:       public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "23684:           int index) {",
          "23685:         if (tagsBuilder_ == null) {",
          "23686:           return tags_.get(index);  } else {",
          "23687:           return tagsBuilder_.getMessageOrBuilder(index);",
          "23697:       public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "23698:            getTagsOrBuilderList() {",
          "23699:         if (tagsBuilder_ != null) {",
          "23700:           return tagsBuilder_.getMessageOrBuilderList();",
          "23702:           return java.util.Collections.unmodifiableList(tags_);",
          "23712:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder() {",
          "23713:         return getTagsFieldBuilder().addBuilder(",
          "23714:             org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "23723:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder(",
          "23724:           int index) {",
          "23725:         return getTagsFieldBuilder().addBuilder(",
          "23726:             index, org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "23735:       public java.util.List<org.mlflow.api.proto.Service.RunTag.Builder>",
          "23736:            getTagsBuilderList() {",
          "23737:         return getTagsFieldBuilder().getBuilderList();",
          "23738:       }",
          "23739:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "23740:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "23741:           getTagsFieldBuilder() {",
          "23742:         if (tagsBuilder_ == null) {",
          "23743:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "23744:               org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>(",
          "23745:                   tags_,",
          "23746:                   ((bitField0_ & 0x00000010) != 0),",
          "23747:                   getParentForChildren(),",
          "23748:                   isClean());",
          "23749:           tags_ = null;",
          "23750:         }",
          "23751:         return tagsBuilder_;",
          "",
          "[Added Lines]",
          "30725:       public Builder setRunUuid(",
          "30731:         runUuid_ = value;",
          "30744:       public Builder clearRunUuid() {",
          "30746:         runUuid_ = getDefaultInstance().getRunUuid();",
          "30760:       public Builder setRunUuidBytes(",
          "30766:         runUuid_ = value;",
          "30767:         onChanged();",
          "30771:       private int status_ = 1;",
          "30780:       @java.lang.Override public boolean hasStatus() {",
          "30781:         return ((bitField0_ & 0x00000004) != 0);",
          "30791:       @java.lang.Override",
          "30792:       public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "30793:         @SuppressWarnings(\"deprecation\")",
          "30794:         org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "30795:         return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "30806:       public Builder setStatus(org.mlflow.api.proto.Service.RunStatus value) {",
          "30807:         if (value == null) {",
          "30808:           throw new NullPointerException();",
          "30810:         bitField0_ |= 0x00000004;",
          "30811:         status_ = value.getNumber();",
          "30812:         onChanged();",
          "30823:       public Builder clearStatus() {",
          "30824:         bitField0_ = (bitField0_ & ~0x00000004);",
          "30825:         status_ = 1;",
          "30826:         onChanged();",
          "30830:       private long endTime_ ;",
          "30839:       @java.lang.Override",
          "30840:       public boolean hasEndTime() {",
          "30841:         return ((bitField0_ & 0x00000008) != 0);",
          "30851:       @java.lang.Override",
          "30852:       public long getEndTime() {",
          "30853:         return endTime_;",
          "30854:       }",
          "30864:       public Builder setEndTime(long value) {",
          "30865:         bitField0_ |= 0x00000008;",
          "30866:         endTime_ = value;",
          "30867:         onChanged();",
          "30878:       public Builder clearEndTime() {",
          "30879:         bitField0_ = (bitField0_ & ~0x00000008);",
          "30880:         endTime_ = 0L;",
          "30881:         onChanged();",
          "30885:       private java.lang.Object runName_ = \"\";",
          "30894:       public boolean hasRunName() {",
          "30895:         return ((bitField0_ & 0x00000010) != 0);",
          "30905:       public java.lang.String getRunName() {",
          "30906:         java.lang.Object ref = runName_;",
          "30907:         if (!(ref instanceof java.lang.String)) {",
          "30908:           com.google.protobuf.ByteString bs =",
          "30909:               (com.google.protobuf.ByteString) ref;",
          "30910:           java.lang.String s = bs.toStringUtf8();",
          "30911:           if (bs.isValidUtf8()) {",
          "30912:             runName_ = s;",
          "30913:           }",
          "30914:           return s;",
          "30915:         } else {",
          "30916:           return (java.lang.String) ref;",
          "30927:       public com.google.protobuf.ByteString",
          "30928:           getRunNameBytes() {",
          "30929:         java.lang.Object ref = runName_;",
          "30930:         if (ref instanceof String) {",
          "30931:           com.google.protobuf.ByteString b =",
          "30932:               com.google.protobuf.ByteString.copyFromUtf8(",
          "30933:                   (java.lang.String) ref);",
          "30934:           runName_ = b;",
          "30935:           return b;",
          "30937:           return (com.google.protobuf.ByteString) ref;",
          "30949:       public Builder setRunName(",
          "30950:           java.lang.String value) {",
          "30951:         if (value == null) {",
          "30952:     throw new NullPointerException();",
          "30953:   }",
          "30954:   bitField0_ |= 0x00000010;",
          "30955:         runName_ = value;",
          "30956:         onChanged();",
          "30957:         return this;",
          "30967:       public Builder clearRunName() {",
          "30968:         bitField0_ = (bitField0_ & ~0x00000010);",
          "30969:         runName_ = getDefaultInstance().getRunName();",
          "30970:         onChanged();",
          "30971:         return this;",
          "30982:       public Builder setRunNameBytes(",
          "30983:           com.google.protobuf.ByteString value) {",
          "30984:         if (value == null) {",
          "30985:     throw new NullPointerException();",
          "30986:   }",
          "30987:   bitField0_ |= 0x00000010;",
          "30988:         runName_ = value;",
          "30989:         onChanged();",
          "30990:         return this;",
          "",
          "---------------",
          "--- Hunk 317 ---",
          "[Context before]",
          "23763:       }",
          "23767:     }",
          "23771:     static {",
          "23773:     }",
          "23776:       return DEFAULT_INSTANCE;",
          "23777:     }",
          "23781:       @java.lang.Override",
          "23783:           com.google.protobuf.CodedInputStream input,",
          "23784:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "23785:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "23787:       }",
          "23788:     };",
          "23791:       return PARSER;",
          "23792:     }",
          "23794:     @java.lang.Override",
          "23796:       return PARSER;",
          "23797:     }",
          "23799:     @java.lang.Override",
          "23801:       return DEFAULT_INSTANCE;",
          "23802:     }",
          "23804:   }",
          "23808:       com.google.protobuf.MessageOrBuilder {",
          "23818:     boolean hasRunId();",
          "23827:     java.lang.String getRunId();",
          "23836:     com.google.protobuf.ByteString",
          "23837:         getRunIdBytes();",
          "23937:   }",
          "23942:       com.google.protobuf.GeneratedMessageV3 implements",
          "23945:   private static final long serialVersionUID = 0L;",
          "23948:       super(builder);",
          "23949:     }",
          "23951:       runId_ = \"\";",
          "23955:     }",
          "23957:     @java.lang.Override",
          "23958:     @SuppressWarnings({\"unused\"})",
          "23959:     protected java.lang.Object newInstance(",
          "23960:         UnusedPrivateParameter unused) {",
          "23962:     }",
          "23964:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "23770:     private static final org.mlflow.api.proto.Service.CreateRun DEFAULT_INSTANCE;",
          "23772:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.CreateRun();",
          "23775:     public static org.mlflow.api.proto.Service.CreateRun getDefaultInstance() {",
          "23779:     @java.lang.Deprecated public static final com.google.protobuf.Parser<CreateRun>",
          "23780:         PARSER = new com.google.protobuf.AbstractParser<CreateRun>() {",
          "23782:       public CreateRun parsePartialFrom(",
          "23786:         return new CreateRun(input, extensionRegistry);",
          "23790:     public static com.google.protobuf.Parser<CreateRun> parser() {",
          "23795:     public com.google.protobuf.Parser<CreateRun> getParserForType() {",
          "23800:     public org.mlflow.api.proto.Service.CreateRun getDefaultInstanceForType() {",
          "23806:   public interface UpdateRunOrBuilder extends",
          "23848:     boolean hasRunUuid();",
          "23858:     java.lang.String getRunUuid();",
          "23868:     com.google.protobuf.ByteString",
          "23869:         getRunUuidBytes();",
          "23879:     boolean hasStatus();",
          "23888:     org.mlflow.api.proto.Service.RunStatus getStatus();",
          "23898:     boolean hasEndTime();",
          "23907:     long getEndTime();",
          "23917:     boolean hasRunName();",
          "23926:     java.lang.String getRunName();",
          "23935:     com.google.protobuf.ByteString",
          "23936:         getRunNameBytes();",
          "23941:   public static final class UpdateRun extends",
          "23944:       UpdateRunOrBuilder {",
          "23947:     private UpdateRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "23950:     private UpdateRun() {",
          "23952:       runUuid_ = \"\";",
          "23953:       status_ = 1;",
          "23954:       runName_ = \"\";",
          "23961:       return new UpdateRun();",
          "",
          "[Added Lines]",
          "31009:     private static final org.mlflow.api.proto.Service.UpdateRun DEFAULT_INSTANCE;",
          "31011:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateRun();",
          "31014:     public static org.mlflow.api.proto.Service.UpdateRun getDefaultInstance() {",
          "31018:     @java.lang.Deprecated public static final com.google.protobuf.Parser<UpdateRun>",
          "31019:         PARSER = new com.google.protobuf.AbstractParser<UpdateRun>() {",
          "31021:       public UpdateRun parsePartialFrom(",
          "31025:         return new UpdateRun(input, extensionRegistry);",
          "31029:     public static com.google.protobuf.Parser<UpdateRun> parser() {",
          "31034:     public com.google.protobuf.Parser<UpdateRun> getParserForType() {",
          "31039:     public org.mlflow.api.proto.Service.UpdateRun getDefaultInstanceForType() {",
          "31045:   public interface DeleteRunOrBuilder extends",
          "31081:   public static final class DeleteRun extends",
          "31084:       DeleteRunOrBuilder {",
          "31087:     private DeleteRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "31090:     private DeleteRun() {",
          "31098:       return new DeleteRun();",
          "",
          "---------------",
          "--- Hunk 318 ---",
          "[Context before]",
          "23966:     getUnknownFields() {",
          "23967:       return this.unknownFields;",
          "23968:     }",
          "23970:         com.google.protobuf.CodedInputStream input,",
          "23971:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "23972:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "23969:     private UpdateRun(",
          "",
          "[Added Lines]",
          "31106:     private DeleteRun(",
          "",
          "---------------",
          "--- Hunk 319 ---",
          "[Context before]",
          "23986:               done = true;",
          "23987:               break;",
          "23988:             case 10: {",
          "24012:               com.google.protobuf.ByteString bs = input.readBytes();",
          "24013:               bitField0_ |= 0x00000001;",
          "24014:               runId_ = bs;",
          "24015:               break;",
          "24016:             }",
          "24023:             default: {",
          "24024:               if (!parseUnknownField(",
          "24025:                   input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "23989:               com.google.protobuf.ByteString bs = input.readBytes();",
          "23990:               bitField0_ |= 0x00000002;",
          "23991:               runUuid_ = bs;",
          "23992:               break;",
          "23993:             }",
          "23994:             case 16: {",
          "23995:               int rawValue = input.readEnum();",
          "23996:                 @SuppressWarnings(\"deprecation\")",
          "23997:               org.mlflow.api.proto.Service.RunStatus value = org.mlflow.api.proto.Service.RunStatus.valueOf(rawValue);",
          "23998:               if (value == null) {",
          "23999:                 unknownFields.mergeVarintField(2, rawValue);",
          "24000:               } else {",
          "24001:                 bitField0_ |= 0x00000004;",
          "24002:                 status_ = rawValue;",
          "24003:               }",
          "24004:               break;",
          "24005:             }",
          "24006:             case 24: {",
          "24007:               bitField0_ |= 0x00000008;",
          "24008:               endTime_ = input.readInt64();",
          "24009:               break;",
          "24010:             }",
          "24011:             case 34: {",
          "24017:             case 42: {",
          "24018:               com.google.protobuf.ByteString bs = input.readBytes();",
          "24019:               bitField0_ |= 0x00000010;",
          "24020:               runName_ = bs;",
          "24021:               break;",
          "24022:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 320 ---",
          "[Context before]",
          "24041:     }",
          "24042:     public static final com.google.protobuf.Descriptors.Descriptor",
          "24043:         getDescriptor() {",
          "24045:     }",
          "24047:     @java.lang.Override",
          "24048:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "24049:         internalGetFieldAccessorTable() {",
          "24051:           .ensureFieldAccessorsInitialized(",
          "24053:     }",
          "24055:     public interface ResponseOrBuilder extends",
          "24057:         com.google.protobuf.MessageOrBuilder {",
          "24085:     }",
          "24089:     public static final class Response extends",
          "24090:         com.google.protobuf.GeneratedMessageV3 implements",
          "24092:         ResponseOrBuilder {",
          "24093:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "24044:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_descriptor;",
          "24050:       return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_fieldAccessorTable",
          "24052:               org.mlflow.api.proto.Service.UpdateRun.class, org.mlflow.api.proto.Service.UpdateRun.Builder.class);",
          "24067:       boolean hasRunInfo();",
          "24076:       org.mlflow.api.proto.Service.RunInfo getRunInfo();",
          "24084:       org.mlflow.api.proto.Service.RunInfoOrBuilder getRunInfoOrBuilder();",
          "",
          "[Added Lines]",
          "31152:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_descriptor;",
          "31158:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_fieldAccessorTable",
          "31160:               org.mlflow.api.proto.Service.DeleteRun.class, org.mlflow.api.proto.Service.DeleteRun.Builder.class);",
          "",
          "---------------",
          "--- Hunk 321 ---",
          "[Context before]",
          "24118:         if (extensionRegistry == null) {",
          "24119:           throw new java.lang.NullPointerException();",
          "24120:         }",
          "24122:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "24123:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "24124:         try {",
          "",
          "[Removed Lines]",
          "24121:         int mutable_bitField0_ = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 322 ---",
          "[Context before]",
          "24129:               case 0:",
          "24130:                 done = true;",
          "24131:                 break;",
          "24145:               default: {",
          "24146:                 if (!parseUnknownField(",
          "24147:                     input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "24132:               case 10: {",
          "24133:                 org.mlflow.api.proto.Service.RunInfo.Builder subBuilder = null;",
          "24134:                 if (((bitField0_ & 0x00000001) != 0)) {",
          "24135:                   subBuilder = runInfo_.toBuilder();",
          "24136:                 }",
          "24137:                 runInfo_ = input.readMessage(org.mlflow.api.proto.Service.RunInfo.PARSER, extensionRegistry);",
          "24138:                 if (subBuilder != null) {",
          "24139:                   subBuilder.mergeFrom(runInfo_);",
          "24140:                   runInfo_ = subBuilder.buildPartial();",
          "24141:                 }",
          "24142:                 bitField0_ |= 0x00000001;",
          "24143:                 break;",
          "24144:               }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 323 ---",
          "[Context before]",
          "24163:       }",
          "24164:       public static final com.google.protobuf.Descriptors.Descriptor",
          "24165:           getDescriptor() {",
          "24167:       }",
          "24169:       @java.lang.Override",
          "24170:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "24171:           internalGetFieldAccessorTable() {",
          "24173:             .ensureFieldAccessorsInitialized(",
          "24214:       }",
          "24216:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "24166:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_descriptor;",
          "24172:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_fieldAccessorTable",
          "24174:                 org.mlflow.api.proto.Service.UpdateRun.Response.class, org.mlflow.api.proto.Service.UpdateRun.Response.Builder.class);",
          "24175:       }",
          "24177:       private int bitField0_;",
          "24178:       public static final int RUN_INFO_FIELD_NUMBER = 1;",
          "24179:       private org.mlflow.api.proto.Service.RunInfo runInfo_;",
          "24188:       @java.lang.Override",
          "24189:       public boolean hasRunInfo() {",
          "24190:         return ((bitField0_ & 0x00000001) != 0);",
          "24191:       }",
          "24200:       @java.lang.Override",
          "24201:       public org.mlflow.api.proto.Service.RunInfo getRunInfo() {",
          "24202:         return runInfo_ == null ? org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "24203:       }",
          "24211:       @java.lang.Override",
          "24212:       public org.mlflow.api.proto.Service.RunInfoOrBuilder getRunInfoOrBuilder() {",
          "24213:         return runInfo_ == null ? org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "",
          "[Added Lines]",
          "31233:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_descriptor;",
          "31239:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_fieldAccessorTable",
          "31241:                 org.mlflow.api.proto.Service.DeleteRun.Response.class, org.mlflow.api.proto.Service.DeleteRun.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 324 ---",
          "[Context before]",
          "24227:       @java.lang.Override",
          "24228:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "24229:                           throws java.io.IOException {",
          "24233:         unknownFields.writeTo(output);",
          "24234:       }",
          "",
          "[Removed Lines]",
          "24230:         if (((bitField0_ & 0x00000001) != 0)) {",
          "24231:           output.writeMessage(1, getRunInfo());",
          "24232:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 325 ---",
          "[Context before]",
          "24239:         if (size != -1) return size;",
          "24241:         size = 0;",
          "24246:         size += unknownFields.getSerializedSize();",
          "24247:         memoizedSize = size;",
          "24248:         return size;",
          "",
          "[Removed Lines]",
          "24242:         if (((bitField0_ & 0x00000001) != 0)) {",
          "24243:           size += com.google.protobuf.CodedOutputStream",
          "24244:             .computeMessageSize(1, getRunInfo());",
          "24245:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 326 ---",
          "[Context before]",
          "24253:         if (obj == this) {",
          "24254:          return true;",
          "24255:         }",
          "24257:           return super.equals(obj);",
          "24258:         }",
          "24266:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "24267:         return true;",
          "24268:       }",
          "",
          "[Removed Lines]",
          "24256:         if (!(obj instanceof org.mlflow.api.proto.Service.UpdateRun.Response)) {",
          "24259:         org.mlflow.api.proto.Service.UpdateRun.Response other = (org.mlflow.api.proto.Service.UpdateRun.Response) obj;",
          "24261:         if (hasRunInfo() != other.hasRunInfo()) return false;",
          "24262:         if (hasRunInfo()) {",
          "24263:           if (!getRunInfo()",
          "24264:               .equals(other.getRunInfo())) return false;",
          "24265:         }",
          "",
          "[Added Lines]",
          "31277:         if (!(obj instanceof org.mlflow.api.proto.Service.DeleteRun.Response)) {",
          "31280:         org.mlflow.api.proto.Service.DeleteRun.Response other = (org.mlflow.api.proto.Service.DeleteRun.Response) obj;",
          "",
          "---------------",
          "--- Hunk 327 ---",
          "[Context before]",
          "24274:         }",
          "24275:         int hash = 41;",
          "24276:         hash = (19 * hash) + getDescriptor().hashCode();",
          "24281:         hash = (29 * hash) + unknownFields.hashCode();",
          "24282:         memoizedHashCode = hash;",
          "24283:         return hash;",
          "24284:       }",
          "24287:           java.nio.ByteBuffer data)",
          "24288:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "24289:         return PARSER.parseFrom(data);",
          "24290:       }",
          "24292:           java.nio.ByteBuffer data,",
          "24293:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "24294:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "24295:         return PARSER.parseFrom(data, extensionRegistry);",
          "24296:       }",
          "24298:           com.google.protobuf.ByteString data)",
          "24299:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "24300:         return PARSER.parseFrom(data);",
          "24301:       }",
          "24303:           com.google.protobuf.ByteString data,",
          "24304:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "24305:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "24306:         return PARSER.parseFrom(data, extensionRegistry);",
          "24307:       }",
          "24309:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "24310:         return PARSER.parseFrom(data);",
          "24311:       }",
          "24313:           byte[] data,",
          "24314:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "24315:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "24316:         return PARSER.parseFrom(data, extensionRegistry);",
          "24317:       }",
          "24319:           throws java.io.IOException {",
          "24320:         return com.google.protobuf.GeneratedMessageV3",
          "24321:             .parseWithIOException(PARSER, input);",
          "24322:       }",
          "24324:           java.io.InputStream input,",
          "24325:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "24326:           throws java.io.IOException {",
          "24327:         return com.google.protobuf.GeneratedMessageV3",
          "24328:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "24329:       }",
          "24331:           throws java.io.IOException {",
          "24332:         return com.google.protobuf.GeneratedMessageV3",
          "24333:             .parseDelimitedWithIOException(PARSER, input);",
          "24334:       }",
          "24336:           java.io.InputStream input,",
          "24337:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "24338:           throws java.io.IOException {",
          "24339:         return com.google.protobuf.GeneratedMessageV3",
          "24340:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "24341:       }",
          "24343:           com.google.protobuf.CodedInputStream input)",
          "24344:           throws java.io.IOException {",
          "24345:         return com.google.protobuf.GeneratedMessageV3",
          "24346:             .parseWithIOException(PARSER, input);",
          "24347:       }",
          "24349:           com.google.protobuf.CodedInputStream input,",
          "24350:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "24351:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "24277:         if (hasRunInfo()) {",
          "24278:           hash = (37 * hash) + RUN_INFO_FIELD_NUMBER;",
          "24279:           hash = (53 * hash) + getRunInfo().hashCode();",
          "24280:         }",
          "24286:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "24291:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "24297:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "24302:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "24308:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(byte[] data)",
          "24312:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "24318:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(java.io.InputStream input)",
          "24323:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "24330:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "24335:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseDelimitedFrom(",
          "24342:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "24348:       public static org.mlflow.api.proto.Service.UpdateRun.Response parseFrom(",
          "",
          "[Added Lines]",
          "31298:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "31303:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "31309:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "31314:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "31320:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(byte[] data)",
          "31324:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "31330:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(java.io.InputStream input)",
          "31335:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "31342:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "31347:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseDelimitedFrom(",
          "31354:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "31360:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 328 ---",
          "[Context before]",
          "24358:       public static Builder newBuilder() {",
          "24359:         return DEFAULT_INSTANCE.toBuilder();",
          "24360:       }",
          "24362:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "24363:       }",
          "24364:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "24361:       public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateRun.Response prototype) {",
          "",
          "[Added Lines]",
          "31373:       public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteRun.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 329 ---",
          "[Context before]",
          "24374:         return builder;",
          "24375:       }",
          "24379:       public static final class Builder extends",
          "24380:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "24383:         public static final com.google.protobuf.Descriptors.Descriptor",
          "24384:             getDescriptor() {",
          "24386:         }",
          "24388:         @java.lang.Override",
          "24389:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "24390:             internalGetFieldAccessorTable() {",
          "24392:               .ensureFieldAccessorsInitialized(",
          "24394:         }",
          "24397:         private Builder() {",
          "24398:           maybeForceBuilderInitialization();",
          "24399:         }",
          "",
          "[Removed Lines]",
          "24382:           org.mlflow.api.proto.Service.UpdateRun.ResponseOrBuilder {",
          "24385:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_descriptor;",
          "24391:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_fieldAccessorTable",
          "24393:                   org.mlflow.api.proto.Service.UpdateRun.Response.class, org.mlflow.api.proto.Service.UpdateRun.Response.Builder.class);",
          "",
          "[Added Lines]",
          "31394:           org.mlflow.api.proto.Service.DeleteRun.ResponseOrBuilder {",
          "31397:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_descriptor;",
          "31403:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_fieldAccessorTable",
          "31405:                   org.mlflow.api.proto.Service.DeleteRun.Response.class, org.mlflow.api.proto.Service.DeleteRun.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 330 ---",
          "[Context before]",
          "24406:         private void maybeForceBuilderInitialization() {",
          "24407:           if (com.google.protobuf.GeneratedMessageV3",
          "24408:                   .alwaysUseFieldBuilders) {",
          "24410:           }",
          "24411:         }",
          "24412:         @java.lang.Override",
          "24413:         public Builder clear() {",
          "24414:           super.clear();",
          "24421:           return this;",
          "24422:         }",
          "24424:         @java.lang.Override",
          "24425:         public com.google.protobuf.Descriptors.Descriptor",
          "24426:             getDescriptorForType() {",
          "24428:         }",
          "24430:         @java.lang.Override",
          "24433:         }",
          "24435:         @java.lang.Override",
          "24438:           if (!result.isInitialized()) {",
          "24439:             throw newUninitializedMessageException(result);",
          "24440:           }",
          "",
          "[Removed Lines]",
          "24409:             getRunInfoFieldBuilder();",
          "24415:           if (runInfoBuilder_ == null) {",
          "24416:             runInfo_ = null;",
          "24417:           } else {",
          "24418:             runInfoBuilder_.clear();",
          "24419:           }",
          "24420:           bitField0_ = (bitField0_ & ~0x00000001);",
          "24427:           return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_Response_descriptor;",
          "24431:         public org.mlflow.api.proto.Service.UpdateRun.Response getDefaultInstanceForType() {",
          "24432:           return org.mlflow.api.proto.Service.UpdateRun.Response.getDefaultInstance();",
          "24436:         public org.mlflow.api.proto.Service.UpdateRun.Response build() {",
          "24437:           org.mlflow.api.proto.Service.UpdateRun.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "31432:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_descriptor;",
          "31436:         public org.mlflow.api.proto.Service.DeleteRun.Response getDefaultInstanceForType() {",
          "31437:           return org.mlflow.api.proto.Service.DeleteRun.Response.getDefaultInstance();",
          "31441:         public org.mlflow.api.proto.Service.DeleteRun.Response build() {",
          "31442:           org.mlflow.api.proto.Service.DeleteRun.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 331 ---",
          "[Context before]",
          "24442:         }",
          "24444:         @java.lang.Override",
          "24458:           onBuilt();",
          "24459:           return result;",
          "24460:         }",
          "",
          "[Removed Lines]",
          "24445:         public org.mlflow.api.proto.Service.UpdateRun.Response buildPartial() {",
          "24446:           org.mlflow.api.proto.Service.UpdateRun.Response result = new org.mlflow.api.proto.Service.UpdateRun.Response(this);",
          "24447:           int from_bitField0_ = bitField0_;",
          "24448:           int to_bitField0_ = 0;",
          "24449:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "24450:             if (runInfoBuilder_ == null) {",
          "24451:               result.runInfo_ = runInfo_;",
          "24452:             } else {",
          "24453:               result.runInfo_ = runInfoBuilder_.build();",
          "24454:             }",
          "24455:             to_bitField0_ |= 0x00000001;",
          "24456:           }",
          "24457:           result.bitField0_ = to_bitField0_;",
          "",
          "[Added Lines]",
          "31450:         public org.mlflow.api.proto.Service.DeleteRun.Response buildPartial() {",
          "31451:           org.mlflow.api.proto.Service.DeleteRun.Response result = new org.mlflow.api.proto.Service.DeleteRun.Response(this);",
          "",
          "---------------",
          "--- Hunk 332 ---",
          "[Context before]",
          "24493:         }",
          "24494:         @java.lang.Override",
          "24495:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "24498:           } else {",
          "24499:             super.mergeFrom(other);",
          "24500:             return this;",
          "24501:           }",
          "24502:         }",
          "24509:           this.mergeUnknownFields(other.unknownFields);",
          "24510:           onChanged();",
          "24511:           return this;",
          "",
          "[Removed Lines]",
          "24496:           if (other instanceof org.mlflow.api.proto.Service.UpdateRun.Response) {",
          "24497:             return mergeFrom((org.mlflow.api.proto.Service.UpdateRun.Response)other);",
          "24504:         public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateRun.Response other) {",
          "24505:           if (other == org.mlflow.api.proto.Service.UpdateRun.Response.getDefaultInstance()) return this;",
          "24506:           if (other.hasRunInfo()) {",
          "24507:             mergeRunInfo(other.getRunInfo());",
          "24508:           }",
          "",
          "[Added Lines]",
          "31490:           if (other instanceof org.mlflow.api.proto.Service.DeleteRun.Response) {",
          "31491:             return mergeFrom((org.mlflow.api.proto.Service.DeleteRun.Response)other);",
          "31498:         public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteRun.Response other) {",
          "31499:           if (other == org.mlflow.api.proto.Service.DeleteRun.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 333 ---",
          "[Context before]",
          "24521:             com.google.protobuf.CodedInputStream input,",
          "24522:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "24523:             throws java.io.IOException {",
          "24525:           try {",
          "24526:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "24527:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "24529:             throw e.unwrapIOException();",
          "24530:           } finally {",
          "24531:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "24524:           org.mlflow.api.proto.Service.UpdateRun.Response parsedMessage = null;",
          "24528:             parsedMessage = (org.mlflow.api.proto.Service.UpdateRun.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "31515:           org.mlflow.api.proto.Service.DeleteRun.Response parsedMessage = null;",
          "31519:             parsedMessage = (org.mlflow.api.proto.Service.DeleteRun.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 334 ---",
          "[Context before]",
          "24534:           }",
          "24535:           return this;",
          "24536:         }",
          "24694:         @java.lang.Override",
          "24695:         public final Builder setUnknownFields(",
          "24696:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "24537:         private int bitField0_;",
          "24539:         private org.mlflow.api.proto.Service.RunInfo runInfo_;",
          "24540:         private com.google.protobuf.SingleFieldBuilderV3<",
          "24541:             org.mlflow.api.proto.Service.RunInfo, org.mlflow.api.proto.Service.RunInfo.Builder, org.mlflow.api.proto.Service.RunInfoOrBuilder> runInfoBuilder_;",
          "24550:         public boolean hasRunInfo() {",
          "24551:           return ((bitField0_ & 0x00000001) != 0);",
          "24552:         }",
          "24561:         public org.mlflow.api.proto.Service.RunInfo getRunInfo() {",
          "24562:           if (runInfoBuilder_ == null) {",
          "24563:             return runInfo_ == null ? org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "24564:           } else {",
          "24565:             return runInfoBuilder_.getMessage();",
          "24566:           }",
          "24567:         }",
          "24575:         public Builder setRunInfo(org.mlflow.api.proto.Service.RunInfo value) {",
          "24576:           if (runInfoBuilder_ == null) {",
          "24577:             if (value == null) {",
          "24578:               throw new NullPointerException();",
          "24579:             }",
          "24580:             runInfo_ = value;",
          "24581:             onChanged();",
          "24582:           } else {",
          "24583:             runInfoBuilder_.setMessage(value);",
          "24584:           }",
          "24585:           bitField0_ |= 0x00000001;",
          "24586:           return this;",
          "24587:         }",
          "24595:         public Builder setRunInfo(",
          "24596:             org.mlflow.api.proto.Service.RunInfo.Builder builderForValue) {",
          "24597:           if (runInfoBuilder_ == null) {",
          "24598:             runInfo_ = builderForValue.build();",
          "24599:             onChanged();",
          "24600:           } else {",
          "24601:             runInfoBuilder_.setMessage(builderForValue.build());",
          "24602:           }",
          "24603:           bitField0_ |= 0x00000001;",
          "24604:           return this;",
          "24605:         }",
          "24613:         public Builder mergeRunInfo(org.mlflow.api.proto.Service.RunInfo value) {",
          "24614:           if (runInfoBuilder_ == null) {",
          "24615:             if (((bitField0_ & 0x00000001) != 0) &&",
          "24616:                 runInfo_ != null &&",
          "24617:                 runInfo_ != org.mlflow.api.proto.Service.RunInfo.getDefaultInstance()) {",
          "24618:               runInfo_ =",
          "24619:                 org.mlflow.api.proto.Service.RunInfo.newBuilder(runInfo_).mergeFrom(value).buildPartial();",
          "24620:             } else {",
          "24621:               runInfo_ = value;",
          "24622:             }",
          "24623:             onChanged();",
          "24624:           } else {",
          "24625:             runInfoBuilder_.mergeFrom(value);",
          "24626:           }",
          "24627:           bitField0_ |= 0x00000001;",
          "24628:           return this;",
          "24629:         }",
          "24637:         public Builder clearRunInfo() {",
          "24638:           if (runInfoBuilder_ == null) {",
          "24639:             runInfo_ = null;",
          "24640:             onChanged();",
          "24641:           } else {",
          "24642:             runInfoBuilder_.clear();",
          "24643:           }",
          "24644:           bitField0_ = (bitField0_ & ~0x00000001);",
          "24645:           return this;",
          "24646:         }",
          "24654:         public org.mlflow.api.proto.Service.RunInfo.Builder getRunInfoBuilder() {",
          "24655:           bitField0_ |= 0x00000001;",
          "24656:           onChanged();",
          "24657:           return getRunInfoFieldBuilder().getBuilder();",
          "24658:         }",
          "24666:         public org.mlflow.api.proto.Service.RunInfoOrBuilder getRunInfoOrBuilder() {",
          "24667:           if (runInfoBuilder_ != null) {",
          "24668:             return runInfoBuilder_.getMessageOrBuilder();",
          "24669:           } else {",
          "24670:             return runInfo_ == null ?",
          "24671:                 org.mlflow.api.proto.Service.RunInfo.getDefaultInstance() : runInfo_;",
          "24672:           }",
          "24673:         }",
          "24681:         private com.google.protobuf.SingleFieldBuilderV3<",
          "24682:             org.mlflow.api.proto.Service.RunInfo, org.mlflow.api.proto.Service.RunInfo.Builder, org.mlflow.api.proto.Service.RunInfoOrBuilder>",
          "24683:             getRunInfoFieldBuilder() {",
          "24684:           if (runInfoBuilder_ == null) {",
          "24685:             runInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "24686:                 org.mlflow.api.proto.Service.RunInfo, org.mlflow.api.proto.Service.RunInfo.Builder, org.mlflow.api.proto.Service.RunInfoOrBuilder>(",
          "24687:                     getRunInfo(),",
          "24688:                     getParentForChildren(),",
          "24689:                     isClean());",
          "24690:             runInfo_ = null;",
          "24691:           }",
          "24692:           return runInfoBuilder_;",
          "24693:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 335 ---",
          "[Context before]",
          "24704:         }",
          "24708:       }",
          "24712:       static {",
          "24714:       }",
          "24717:         return DEFAULT_INSTANCE;",
          "24718:       }",
          "",
          "[Removed Lines]",
          "24711:       private static final org.mlflow.api.proto.Service.UpdateRun.Response DEFAULT_INSTANCE;",
          "24713:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateRun.Response();",
          "24716:       public static org.mlflow.api.proto.Service.UpdateRun.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "31545:       private static final org.mlflow.api.proto.Service.DeleteRun.Response DEFAULT_INSTANCE;",
          "31547:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteRun.Response();",
          "31550:       public static org.mlflow.api.proto.Service.DeleteRun.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 336 ---",
          "[Context before]",
          "24726:             throws com.google.protobuf.InvalidProtocolBufferException {",
          "24727:           return new Response(input, extensionRegistry);",
          "24728:         }",
          "24923:     }",
          "24935:     @java.lang.Override",
          "24938:     }",
          "24947:     @java.lang.Override",
          "24950:       if (ref instanceof java.lang.String) {",
          "24951:         return (java.lang.String) ref;",
          "24952:       } else {",
          "",
          "[Removed Lines]",
          "24729:       };",
          "24731:       public static com.google.protobuf.Parser<Response> parser() {",
          "24732:         return PARSER;",
          "24733:       }",
          "24735:       @java.lang.Override",
          "24736:       public com.google.protobuf.Parser<Response> getParserForType() {",
          "24737:         return PARSER;",
          "24738:       }",
          "24740:       @java.lang.Override",
          "24741:       public org.mlflow.api.proto.Service.UpdateRun.Response getDefaultInstanceForType() {",
          "24742:         return DEFAULT_INSTANCE;",
          "24743:       }",
          "24745:     }",
          "24747:     private int bitField0_;",
          "24748:     public static final int RUN_ID_FIELD_NUMBER = 4;",
          "24749:     private volatile java.lang.Object runId_;",
          "24758:     @java.lang.Override",
          "24759:     public boolean hasRunId() {",
          "24760:       return ((bitField0_ & 0x00000001) != 0);",
          "24761:     }",
          "24770:     @java.lang.Override",
          "24771:     public java.lang.String getRunId() {",
          "24772:       java.lang.Object ref = runId_;",
          "24773:       if (ref instanceof java.lang.String) {",
          "24774:         return (java.lang.String) ref;",
          "24775:       } else {",
          "24776:         com.google.protobuf.ByteString bs =",
          "24777:             (com.google.protobuf.ByteString) ref;",
          "24778:         java.lang.String s = bs.toStringUtf8();",
          "24779:         if (bs.isValidUtf8()) {",
          "24780:           runId_ = s;",
          "24781:         }",
          "24782:         return s;",
          "24783:       }",
          "24784:     }",
          "24793:     @java.lang.Override",
          "24794:     public com.google.protobuf.ByteString",
          "24795:         getRunIdBytes() {",
          "24796:       java.lang.Object ref = runId_;",
          "24797:       if (ref instanceof java.lang.String) {",
          "24798:         com.google.protobuf.ByteString b =",
          "24799:             com.google.protobuf.ByteString.copyFromUtf8(",
          "24800:                 (java.lang.String) ref);",
          "24801:         runId_ = b;",
          "24802:         return b;",
          "24803:       } else {",
          "24804:         return (com.google.protobuf.ByteString) ref;",
          "24805:       }",
          "24806:     }",
          "24808:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "24809:     private volatile java.lang.Object runUuid_;",
          "24819:     @java.lang.Override",
          "24820:     public boolean hasRunUuid() {",
          "24821:       return ((bitField0_ & 0x00000002) != 0);",
          "24822:     }",
          "24832:     @java.lang.Override",
          "24833:     public java.lang.String getRunUuid() {",
          "24834:       java.lang.Object ref = runUuid_;",
          "24835:       if (ref instanceof java.lang.String) {",
          "24836:         return (java.lang.String) ref;",
          "24837:       } else {",
          "24838:         com.google.protobuf.ByteString bs =",
          "24839:             (com.google.protobuf.ByteString) ref;",
          "24840:         java.lang.String s = bs.toStringUtf8();",
          "24841:         if (bs.isValidUtf8()) {",
          "24842:           runUuid_ = s;",
          "24843:         }",
          "24844:         return s;",
          "24845:       }",
          "24846:     }",
          "24856:     @java.lang.Override",
          "24857:     public com.google.protobuf.ByteString",
          "24858:         getRunUuidBytes() {",
          "24859:       java.lang.Object ref = runUuid_;",
          "24860:       if (ref instanceof java.lang.String) {",
          "24861:         com.google.protobuf.ByteString b =",
          "24862:             com.google.protobuf.ByteString.copyFromUtf8(",
          "24863:                 (java.lang.String) ref);",
          "24864:         runUuid_ = b;",
          "24865:         return b;",
          "24866:       } else {",
          "24867:         return (com.google.protobuf.ByteString) ref;",
          "24868:       }",
          "24869:     }",
          "24871:     public static final int STATUS_FIELD_NUMBER = 2;",
          "24872:     private int status_;",
          "24881:     @java.lang.Override public boolean hasStatus() {",
          "24882:       return ((bitField0_ & 0x00000004) != 0);",
          "24883:     }",
          "24892:     @java.lang.Override public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "24893:       @SuppressWarnings(\"deprecation\")",
          "24894:       org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "24895:       return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "24896:     }",
          "24898:     public static final int END_TIME_FIELD_NUMBER = 3;",
          "24899:     private long endTime_;",
          "24908:     @java.lang.Override",
          "24909:     public boolean hasEndTime() {",
          "24910:       return ((bitField0_ & 0x00000008) != 0);",
          "24911:     }",
          "24920:     @java.lang.Override",
          "24921:     public long getEndTime() {",
          "24922:       return endTime_;",
          "24925:     public static final int RUN_NAME_FIELD_NUMBER = 5;",
          "24926:     private volatile java.lang.Object runName_;",
          "24936:     public boolean hasRunName() {",
          "24937:       return ((bitField0_ & 0x00000010) != 0);",
          "24948:     public java.lang.String getRunName() {",
          "24949:       java.lang.Object ref = runName_;",
          "",
          "[Added Lines]",
          "31563:       };",
          "31565:       public static com.google.protobuf.Parser<Response> parser() {",
          "31566:         return PARSER;",
          "31567:       }",
          "31569:       @java.lang.Override",
          "31570:       public com.google.protobuf.Parser<Response> getParserForType() {",
          "31571:         return PARSER;",
          "31572:       }",
          "31574:       @java.lang.Override",
          "31575:       public org.mlflow.api.proto.Service.DeleteRun.Response getDefaultInstanceForType() {",
          "31576:         return DEFAULT_INSTANCE;",
          "31577:       }",
          "31581:     private int bitField0_;",
          "31582:     public static final int RUN_ID_FIELD_NUMBER = 1;",
          "31583:     private volatile java.lang.Object runId_;",
          "31593:     public boolean hasRunId() {",
          "31594:       return ((bitField0_ & 0x00000001) != 0);",
          "31605:     public java.lang.String getRunId() {",
          "31606:       java.lang.Object ref = runId_;",
          "",
          "---------------",
          "--- Hunk 337 ---",
          "[Context before]",
          "24954:             (com.google.protobuf.ByteString) ref;",
          "24955:         java.lang.String s = bs.toStringUtf8();",
          "24956:         if (bs.isValidUtf8()) {",
          "24958:         }",
          "24959:         return s;",
          "24960:       }",
          "24961:     }",
          "24970:     @java.lang.Override",
          "24971:     public com.google.protobuf.ByteString",
          "24974:       if (ref instanceof java.lang.String) {",
          "24975:         com.google.protobuf.ByteString b =",
          "24976:             com.google.protobuf.ByteString.copyFromUtf8(",
          "24977:                 (java.lang.String) ref);",
          "24979:         return b;",
          "24980:       } else {",
          "24981:         return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "24957:           runName_ = s;",
          "24972:         getRunNameBytes() {",
          "24973:       java.lang.Object ref = runName_;",
          "24978:         runName_ = b;",
          "",
          "[Added Lines]",
          "31614:           runId_ = s;",
          "31629:         getRunIdBytes() {",
          "31630:       java.lang.Object ref = runId_;",
          "31635:         runId_ = b;",
          "",
          "---------------",
          "--- Hunk 338 ---",
          "[Context before]",
          "24996:     @java.lang.Override",
          "24997:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "24998:                         throws java.io.IOException {",
          "25008:       if (((bitField0_ & 0x00000001) != 0)) {",
          "25013:       }",
          "25014:       unknownFields.writeTo(output);",
          "25015:     }",
          "",
          "[Removed Lines]",
          "24999:       if (((bitField0_ & 0x00000002) != 0)) {",
          "25000:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "25001:       }",
          "25002:       if (((bitField0_ & 0x00000004) != 0)) {",
          "25003:         output.writeEnum(2, status_);",
          "25004:       }",
          "25005:       if (((bitField0_ & 0x00000008) != 0)) {",
          "25006:         output.writeInt64(3, endTime_);",
          "25007:       }",
          "25009:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, runId_);",
          "25010:       }",
          "25011:       if (((bitField0_ & 0x00000010) != 0)) {",
          "25012:         com.google.protobuf.GeneratedMessageV3.writeString(output, 5, runName_);",
          "",
          "[Added Lines]",
          "31657:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "",
          "---------------",
          "--- Hunk 339 ---",
          "[Context before]",
          "25020:       if (size != -1) return size;",
          "25022:       size = 0;",
          "25034:       if (((bitField0_ & 0x00000001) != 0)) {",
          "25039:       }",
          "25040:       size += unknownFields.getSerializedSize();",
          "25041:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "25023:       if (((bitField0_ & 0x00000002) != 0)) {",
          "25024:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "25025:       }",
          "25026:       if (((bitField0_ & 0x00000004) != 0)) {",
          "25027:         size += com.google.protobuf.CodedOutputStream",
          "25028:           .computeEnumSize(2, status_);",
          "25029:       }",
          "25030:       if (((bitField0_ & 0x00000008) != 0)) {",
          "25031:         size += com.google.protobuf.CodedOutputStream",
          "25032:           .computeInt64Size(3, endTime_);",
          "25033:       }",
          "25035:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, runId_);",
          "25036:       }",
          "25037:       if (((bitField0_ & 0x00000010) != 0)) {",
          "25038:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, runName_);",
          "",
          "[Added Lines]",
          "31669:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "",
          "---------------",
          "--- Hunk 340 ---",
          "[Context before]",
          "25047:       if (obj == this) {",
          "25048:        return true;",
          "25049:       }",
          "25051:         return super.equals(obj);",
          "25052:       }",
          "25055:       if (hasRunId() != other.hasRunId()) return false;",
          "25056:       if (hasRunId()) {",
          "25057:         if (!getRunId()",
          "25058:             .equals(other.getRunId())) return false;",
          "25059:       }",
          "25079:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "25080:       return true;",
          "25081:     }",
          "",
          "[Removed Lines]",
          "25050:       if (!(obj instanceof org.mlflow.api.proto.Service.UpdateRun)) {",
          "25053:       org.mlflow.api.proto.Service.UpdateRun other = (org.mlflow.api.proto.Service.UpdateRun) obj;",
          "25060:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "25061:       if (hasRunUuid()) {",
          "25062:         if (!getRunUuid()",
          "25063:             .equals(other.getRunUuid())) return false;",
          "25064:       }",
          "25065:       if (hasStatus() != other.hasStatus()) return false;",
          "25066:       if (hasStatus()) {",
          "25067:         if (status_ != other.status_) return false;",
          "25068:       }",
          "25069:       if (hasEndTime() != other.hasEndTime()) return false;",
          "25070:       if (hasEndTime()) {",
          "25071:         if (getEndTime()",
          "25072:             != other.getEndTime()) return false;",
          "25073:       }",
          "25074:       if (hasRunName() != other.hasRunName()) return false;",
          "25075:       if (hasRunName()) {",
          "25076:         if (!getRunName()",
          "25077:             .equals(other.getRunName())) return false;",
          "25078:       }",
          "",
          "[Added Lines]",
          "31681:       if (!(obj instanceof org.mlflow.api.proto.Service.DeleteRun)) {",
          "31684:       org.mlflow.api.proto.Service.DeleteRun other = (org.mlflow.api.proto.Service.DeleteRun) obj;",
          "",
          "---------------",
          "--- Hunk 341 ---",
          "[Context before]",
          "25091:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "25092:         hash = (53 * hash) + getRunId().hashCode();",
          "25093:       }",
          "25111:       hash = (29 * hash) + unknownFields.hashCode();",
          "25112:       memoizedHashCode = hash;",
          "25113:       return hash;",
          "25114:     }",
          "25117:         java.nio.ByteBuffer data)",
          "25118:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "25119:       return PARSER.parseFrom(data);",
          "25120:     }",
          "25122:         java.nio.ByteBuffer data,",
          "25123:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25124:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "25125:       return PARSER.parseFrom(data, extensionRegistry);",
          "25126:     }",
          "25128:         com.google.protobuf.ByteString data)",
          "25129:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "25130:       return PARSER.parseFrom(data);",
          "25131:     }",
          "25133:         com.google.protobuf.ByteString data,",
          "25134:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25135:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "25136:       return PARSER.parseFrom(data, extensionRegistry);",
          "25137:     }",
          "25139:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "25140:       return PARSER.parseFrom(data);",
          "25141:     }",
          "25143:         byte[] data,",
          "25144:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25145:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "25146:       return PARSER.parseFrom(data, extensionRegistry);",
          "25147:     }",
          "25149:         throws java.io.IOException {",
          "25150:       return com.google.protobuf.GeneratedMessageV3",
          "25151:           .parseWithIOException(PARSER, input);",
          "25152:     }",
          "25154:         java.io.InputStream input,",
          "25155:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25156:         throws java.io.IOException {",
          "25157:       return com.google.protobuf.GeneratedMessageV3",
          "25158:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "25159:     }",
          "25161:         throws java.io.IOException {",
          "25162:       return com.google.protobuf.GeneratedMessageV3",
          "25163:           .parseDelimitedWithIOException(PARSER, input);",
          "25164:     }",
          "25166:         java.io.InputStream input,",
          "25167:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25168:         throws java.io.IOException {",
          "25169:       return com.google.protobuf.GeneratedMessageV3",
          "25170:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "25171:     }",
          "25173:         com.google.protobuf.CodedInputStream input)",
          "25174:         throws java.io.IOException {",
          "25175:       return com.google.protobuf.GeneratedMessageV3",
          "25176:           .parseWithIOException(PARSER, input);",
          "25177:     }",
          "25179:         com.google.protobuf.CodedInputStream input,",
          "25180:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25181:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "25094:       if (hasRunUuid()) {",
          "25095:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "25096:         hash = (53 * hash) + getRunUuid().hashCode();",
          "25097:       }",
          "25098:       if (hasStatus()) {",
          "25099:         hash = (37 * hash) + STATUS_FIELD_NUMBER;",
          "25100:         hash = (53 * hash) + status_;",
          "25101:       }",
          "25102:       if (hasEndTime()) {",
          "25103:         hash = (37 * hash) + END_TIME_FIELD_NUMBER;",
          "25104:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "25105:             getEndTime());",
          "25106:       }",
          "25107:       if (hasRunName()) {",
          "25108:         hash = (37 * hash) + RUN_NAME_FIELD_NUMBER;",
          "25109:         hash = (53 * hash) + getRunName().hashCode();",
          "25110:       }",
          "25116:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "25121:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "25127:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "25132:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "25138:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(byte[] data)",
          "25142:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "25148:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(java.io.InputStream input)",
          "25153:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "25160:     public static org.mlflow.api.proto.Service.UpdateRun parseDelimitedFrom(java.io.InputStream input)",
          "25165:     public static org.mlflow.api.proto.Service.UpdateRun parseDelimitedFrom(",
          "25172:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "25178:     public static org.mlflow.api.proto.Service.UpdateRun parseFrom(",
          "",
          "[Added Lines]",
          "31711:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "31716:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "31722:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "31727:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "31733:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(byte[] data)",
          "31737:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "31743:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(java.io.InputStream input)",
          "31748:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "31755:     public static org.mlflow.api.proto.Service.DeleteRun parseDelimitedFrom(java.io.InputStream input)",
          "31760:     public static org.mlflow.api.proto.Service.DeleteRun parseDelimitedFrom(",
          "31767:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "31773:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "",
          "---------------",
          "--- Hunk 342 ---",
          "[Context before]",
          "25188:     public static Builder newBuilder() {",
          "25189:       return DEFAULT_INSTANCE.toBuilder();",
          "25190:     }",
          "25192:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "25193:     }",
          "25194:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "25191:     public static Builder newBuilder(org.mlflow.api.proto.Service.UpdateRun prototype) {",
          "",
          "[Added Lines]",
          "31786:     public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteRun prototype) {",
          "",
          "---------------",
          "--- Hunk 343 ---",
          "[Context before]",
          "25204:       return builder;",
          "25205:     }",
          "25567:       }",
          "25587:       }",
          "25602:       }",
          "25621:         return this;",
          "25622:       }",
          "25635:       }",
          "25644:       @java.lang.Override",
          "25649:       }",
          "25662:         }",
          "25667:       }",
          "25681:       }",
          "25692:       @java.lang.Override",
          "25695:       }",
          "25704:       @java.lang.Override",
          "25707:       }",
          "25720:         onChanged();",
          "25721:         return this;",
          "25722:       }",
          "25735:         return this;",
          "25736:       }",
          "25749:       }",
          "25760:         if (!(ref instanceof java.lang.String)) {",
          "25761:           com.google.protobuf.ByteString bs =",
          "25762:               (com.google.protobuf.ByteString) ref;",
          "25763:           java.lang.String s = bs.toStringUtf8();",
          "25764:           if (bs.isValidUtf8()) {",
          "25766:           }",
          "25767:           return s;",
          "25768:         } else {",
          "",
          "[Removed Lines]",
          "25209:     public static final class Builder extends",
          "25210:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "25212:         org.mlflow.api.proto.Service.UpdateRunOrBuilder {",
          "25213:       public static final com.google.protobuf.Descriptors.Descriptor",
          "25214:           getDescriptor() {",
          "25215:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_descriptor;",
          "25216:       }",
          "25218:       @java.lang.Override",
          "25219:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "25220:           internalGetFieldAccessorTable() {",
          "25221:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_fieldAccessorTable",
          "25222:             .ensureFieldAccessorsInitialized(",
          "25223:                 org.mlflow.api.proto.Service.UpdateRun.class, org.mlflow.api.proto.Service.UpdateRun.Builder.class);",
          "25224:       }",
          "25227:       private Builder() {",
          "25228:         maybeForceBuilderInitialization();",
          "25229:       }",
          "25231:       private Builder(",
          "25232:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "25233:         super(parent);",
          "25234:         maybeForceBuilderInitialization();",
          "25235:       }",
          "25236:       private void maybeForceBuilderInitialization() {",
          "25237:         if (com.google.protobuf.GeneratedMessageV3",
          "25238:                 .alwaysUseFieldBuilders) {",
          "25239:         }",
          "25240:       }",
          "25241:       @java.lang.Override",
          "25242:       public Builder clear() {",
          "25243:         super.clear();",
          "25244:         runId_ = \"\";",
          "25245:         bitField0_ = (bitField0_ & ~0x00000001);",
          "25246:         runUuid_ = \"\";",
          "25247:         bitField0_ = (bitField0_ & ~0x00000002);",
          "25248:         status_ = 1;",
          "25249:         bitField0_ = (bitField0_ & ~0x00000004);",
          "25250:         endTime_ = 0L;",
          "25251:         bitField0_ = (bitField0_ & ~0x00000008);",
          "25252:         runName_ = \"\";",
          "25253:         bitField0_ = (bitField0_ & ~0x00000010);",
          "25254:         return this;",
          "25255:       }",
          "25257:       @java.lang.Override",
          "25258:       public com.google.protobuf.Descriptors.Descriptor",
          "25259:           getDescriptorForType() {",
          "25260:         return org.mlflow.api.proto.Service.internal_static_mlflow_UpdateRun_descriptor;",
          "25261:       }",
          "25263:       @java.lang.Override",
          "25264:       public org.mlflow.api.proto.Service.UpdateRun getDefaultInstanceForType() {",
          "25265:         return org.mlflow.api.proto.Service.UpdateRun.getDefaultInstance();",
          "25266:       }",
          "25268:       @java.lang.Override",
          "25269:       public org.mlflow.api.proto.Service.UpdateRun build() {",
          "25270:         org.mlflow.api.proto.Service.UpdateRun result = buildPartial();",
          "25271:         if (!result.isInitialized()) {",
          "25272:           throw newUninitializedMessageException(result);",
          "25273:         }",
          "25274:         return result;",
          "25275:       }",
          "25277:       @java.lang.Override",
          "25278:       public org.mlflow.api.proto.Service.UpdateRun buildPartial() {",
          "25279:         org.mlflow.api.proto.Service.UpdateRun result = new org.mlflow.api.proto.Service.UpdateRun(this);",
          "25280:         int from_bitField0_ = bitField0_;",
          "25281:         int to_bitField0_ = 0;",
          "25282:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "25283:           to_bitField0_ |= 0x00000001;",
          "25284:         }",
          "25285:         result.runId_ = runId_;",
          "25286:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "25287:           to_bitField0_ |= 0x00000002;",
          "25288:         }",
          "25289:         result.runUuid_ = runUuid_;",
          "25290:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "25291:           to_bitField0_ |= 0x00000004;",
          "25292:         }",
          "25293:         result.status_ = status_;",
          "25294:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "25295:           result.endTime_ = endTime_;",
          "25296:           to_bitField0_ |= 0x00000008;",
          "25297:         }",
          "25298:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "25299:           to_bitField0_ |= 0x00000010;",
          "25300:         }",
          "25301:         result.runName_ = runName_;",
          "25302:         result.bitField0_ = to_bitField0_;",
          "25303:         onBuilt();",
          "25304:         return result;",
          "25305:       }",
          "25307:       @java.lang.Override",
          "25308:       public Builder clone() {",
          "25309:         return super.clone();",
          "25310:       }",
          "25311:       @java.lang.Override",
          "25312:       public Builder setField(",
          "25313:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "25314:           java.lang.Object value) {",
          "25315:         return super.setField(field, value);",
          "25316:       }",
          "25317:       @java.lang.Override",
          "25318:       public Builder clearField(",
          "25319:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "25320:         return super.clearField(field);",
          "25321:       }",
          "25322:       @java.lang.Override",
          "25323:       public Builder clearOneof(",
          "25324:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "25325:         return super.clearOneof(oneof);",
          "25326:       }",
          "25327:       @java.lang.Override",
          "25328:       public Builder setRepeatedField(",
          "25329:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "25330:           int index, java.lang.Object value) {",
          "25331:         return super.setRepeatedField(field, index, value);",
          "25332:       }",
          "25333:       @java.lang.Override",
          "25334:       public Builder addRepeatedField(",
          "25335:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "25336:           java.lang.Object value) {",
          "25337:         return super.addRepeatedField(field, value);",
          "25338:       }",
          "25339:       @java.lang.Override",
          "25340:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "25341:         if (other instanceof org.mlflow.api.proto.Service.UpdateRun) {",
          "25342:           return mergeFrom((org.mlflow.api.proto.Service.UpdateRun)other);",
          "25343:         } else {",
          "25344:           super.mergeFrom(other);",
          "25345:           return this;",
          "25346:         }",
          "25347:       }",
          "25349:       public Builder mergeFrom(org.mlflow.api.proto.Service.UpdateRun other) {",
          "25350:         if (other == org.mlflow.api.proto.Service.UpdateRun.getDefaultInstance()) return this;",
          "25351:         if (other.hasRunId()) {",
          "25352:           bitField0_ |= 0x00000001;",
          "25353:           runId_ = other.runId_;",
          "25354:           onChanged();",
          "25355:         }",
          "25356:         if (other.hasRunUuid()) {",
          "25357:           bitField0_ |= 0x00000002;",
          "25358:           runUuid_ = other.runUuid_;",
          "25359:           onChanged();",
          "25360:         }",
          "25361:         if (other.hasStatus()) {",
          "25362:           setStatus(other.getStatus());",
          "25363:         }",
          "25364:         if (other.hasEndTime()) {",
          "25365:           setEndTime(other.getEndTime());",
          "25366:         }",
          "25367:         if (other.hasRunName()) {",
          "25368:           bitField0_ |= 0x00000010;",
          "25369:           runName_ = other.runName_;",
          "25370:           onChanged();",
          "25371:         }",
          "25372:         this.mergeUnknownFields(other.unknownFields);",
          "25373:         onChanged();",
          "25374:         return this;",
          "25375:       }",
          "25377:       @java.lang.Override",
          "25378:       public final boolean isInitialized() {",
          "25379:         return true;",
          "25380:       }",
          "25382:       @java.lang.Override",
          "25383:       public Builder mergeFrom(",
          "25384:           com.google.protobuf.CodedInputStream input,",
          "25385:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25386:           throws java.io.IOException {",
          "25387:         org.mlflow.api.proto.Service.UpdateRun parsedMessage = null;",
          "25388:         try {",
          "25389:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "25390:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "25391:           parsedMessage = (org.mlflow.api.proto.Service.UpdateRun) e.getUnfinishedMessage();",
          "25392:           throw e.unwrapIOException();",
          "25393:         } finally {",
          "25394:           if (parsedMessage != null) {",
          "25395:             mergeFrom(parsedMessage);",
          "25396:           }",
          "25397:         }",
          "25398:         return this;",
          "25399:       }",
          "25400:       private int bitField0_;",
          "25402:       private java.lang.Object runId_ = \"\";",
          "25411:       public boolean hasRunId() {",
          "25412:         return ((bitField0_ & 0x00000001) != 0);",
          "25413:       }",
          "25422:       public java.lang.String getRunId() {",
          "25423:         java.lang.Object ref = runId_;",
          "25424:         if (!(ref instanceof java.lang.String)) {",
          "25425:           com.google.protobuf.ByteString bs =",
          "25426:               (com.google.protobuf.ByteString) ref;",
          "25427:           java.lang.String s = bs.toStringUtf8();",
          "25428:           if (bs.isValidUtf8()) {",
          "25429:             runId_ = s;",
          "25430:           }",
          "25431:           return s;",
          "25432:         } else {",
          "25433:           return (java.lang.String) ref;",
          "25434:         }",
          "25435:       }",
          "25444:       public com.google.protobuf.ByteString",
          "25445:           getRunIdBytes() {",
          "25446:         java.lang.Object ref = runId_;",
          "25447:         if (ref instanceof String) {",
          "25448:           com.google.protobuf.ByteString b =",
          "25449:               com.google.protobuf.ByteString.copyFromUtf8(",
          "25450:                   (java.lang.String) ref);",
          "25451:           runId_ = b;",
          "25452:           return b;",
          "25453:         } else {",
          "25454:           return (com.google.protobuf.ByteString) ref;",
          "25455:         }",
          "25456:       }",
          "25466:       public Builder setRunId(",
          "25467:           java.lang.String value) {",
          "25468:         if (value == null) {",
          "25469:     throw new NullPointerException();",
          "25470:   }",
          "25471:   bitField0_ |= 0x00000001;",
          "25472:         runId_ = value;",
          "25473:         onChanged();",
          "25474:         return this;",
          "25475:       }",
          "25484:       public Builder clearRunId() {",
          "25485:         bitField0_ = (bitField0_ & ~0x00000001);",
          "25486:         runId_ = getDefaultInstance().getRunId();",
          "25487:         onChanged();",
          "25488:         return this;",
          "25489:       }",
          "25499:       public Builder setRunIdBytes(",
          "25500:           com.google.protobuf.ByteString value) {",
          "25501:         if (value == null) {",
          "25502:     throw new NullPointerException();",
          "25503:   }",
          "25504:   bitField0_ |= 0x00000001;",
          "25505:         runId_ = value;",
          "25506:         onChanged();",
          "25507:         return this;",
          "25508:       }",
          "25510:       private java.lang.Object runUuid_ = \"\";",
          "25520:       public boolean hasRunUuid() {",
          "25521:         return ((bitField0_ & 0x00000002) != 0);",
          "25522:       }",
          "25532:       public java.lang.String getRunUuid() {",
          "25533:         java.lang.Object ref = runUuid_;",
          "25534:         if (!(ref instanceof java.lang.String)) {",
          "25535:           com.google.protobuf.ByteString bs =",
          "25536:               (com.google.protobuf.ByteString) ref;",
          "25537:           java.lang.String s = bs.toStringUtf8();",
          "25538:           if (bs.isValidUtf8()) {",
          "25539:             runUuid_ = s;",
          "25540:           }",
          "25541:           return s;",
          "25542:         } else {",
          "25543:           return (java.lang.String) ref;",
          "25544:         }",
          "25545:       }",
          "25555:       public com.google.protobuf.ByteString",
          "25556:           getRunUuidBytes() {",
          "25557:         java.lang.Object ref = runUuid_;",
          "25558:         if (ref instanceof String) {",
          "25559:           com.google.protobuf.ByteString b =",
          "25560:               com.google.protobuf.ByteString.copyFromUtf8(",
          "25561:                   (java.lang.String) ref);",
          "25562:           runUuid_ = b;",
          "25563:           return b;",
          "25564:         } else {",
          "25565:           return (com.google.protobuf.ByteString) ref;",
          "25566:         }",
          "25578:       public Builder setRunUuid(",
          "25579:           java.lang.String value) {",
          "25580:         if (value == null) {",
          "25581:     throw new NullPointerException();",
          "25582:   }",
          "25583:   bitField0_ |= 0x00000002;",
          "25584:         runUuid_ = value;",
          "25585:         onChanged();",
          "25586:         return this;",
          "25597:       public Builder clearRunUuid() {",
          "25598:         bitField0_ = (bitField0_ & ~0x00000002);",
          "25599:         runUuid_ = getDefaultInstance().getRunUuid();",
          "25600:         onChanged();",
          "25601:         return this;",
          "25613:       public Builder setRunUuidBytes(",
          "25614:           com.google.protobuf.ByteString value) {",
          "25615:         if (value == null) {",
          "25616:     throw new NullPointerException();",
          "25617:   }",
          "25618:   bitField0_ |= 0x00000002;",
          "25619:         runUuid_ = value;",
          "25620:         onChanged();",
          "25624:       private int status_ = 1;",
          "25633:       @java.lang.Override public boolean hasStatus() {",
          "25634:         return ((bitField0_ & 0x00000004) != 0);",
          "25645:       public org.mlflow.api.proto.Service.RunStatus getStatus() {",
          "25646:         @SuppressWarnings(\"deprecation\")",
          "25647:         org.mlflow.api.proto.Service.RunStatus result = org.mlflow.api.proto.Service.RunStatus.valueOf(status_);",
          "25648:         return result == null ? org.mlflow.api.proto.Service.RunStatus.RUNNING : result;",
          "25659:       public Builder setStatus(org.mlflow.api.proto.Service.RunStatus value) {",
          "25660:         if (value == null) {",
          "25661:           throw new NullPointerException();",
          "25663:         bitField0_ |= 0x00000004;",
          "25664:         status_ = value.getNumber();",
          "25665:         onChanged();",
          "25666:         return this;",
          "25676:       public Builder clearStatus() {",
          "25677:         bitField0_ = (bitField0_ & ~0x00000004);",
          "25678:         status_ = 1;",
          "25679:         onChanged();",
          "25680:         return this;",
          "25683:       private long endTime_ ;",
          "25693:       public boolean hasEndTime() {",
          "25694:         return ((bitField0_ & 0x00000008) != 0);",
          "25705:       public long getEndTime() {",
          "25706:         return endTime_;",
          "25717:       public Builder setEndTime(long value) {",
          "25718:         bitField0_ |= 0x00000008;",
          "25719:         endTime_ = value;",
          "25731:       public Builder clearEndTime() {",
          "25732:         bitField0_ = (bitField0_ & ~0x00000008);",
          "25733:         endTime_ = 0L;",
          "25734:         onChanged();",
          "25738:       private java.lang.Object runName_ = \"\";",
          "25747:       public boolean hasRunName() {",
          "25748:         return ((bitField0_ & 0x00000010) != 0);",
          "25758:       public java.lang.String getRunName() {",
          "25759:         java.lang.Object ref = runName_;",
          "25765:             runName_ = s;",
          "",
          "[Added Lines]",
          "31804:     public static final class Builder extends",
          "31805:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "31807:         org.mlflow.api.proto.Service.DeleteRunOrBuilder {",
          "31808:       public static final com.google.protobuf.Descriptors.Descriptor",
          "31809:           getDescriptor() {",
          "31810:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_descriptor;",
          "31813:       @java.lang.Override",
          "31814:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "31815:           internalGetFieldAccessorTable() {",
          "31816:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_fieldAccessorTable",
          "31817:             .ensureFieldAccessorsInitialized(",
          "31818:                 org.mlflow.api.proto.Service.DeleteRun.class, org.mlflow.api.proto.Service.DeleteRun.Builder.class);",
          "31822:       private Builder() {",
          "31823:         maybeForceBuilderInitialization();",
          "31826:       private Builder(",
          "31827:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "31828:         super(parent);",
          "31829:         maybeForceBuilderInitialization();",
          "31830:       }",
          "31831:       private void maybeForceBuilderInitialization() {",
          "31832:         if (com.google.protobuf.GeneratedMessageV3",
          "31833:                 .alwaysUseFieldBuilders) {",
          "31834:         }",
          "31835:       }",
          "31836:       @java.lang.Override",
          "31837:       public Builder clear() {",
          "31838:         super.clear();",
          "31839:         runId_ = \"\";",
          "31840:         bitField0_ = (bitField0_ & ~0x00000001);",
          "31844:       @java.lang.Override",
          "31845:       public com.google.protobuf.Descriptors.Descriptor",
          "31846:           getDescriptorForType() {",
          "31847:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_descriptor;",
          "31851:       public org.mlflow.api.proto.Service.DeleteRun getDefaultInstanceForType() {",
          "31852:         return org.mlflow.api.proto.Service.DeleteRun.getDefaultInstance();",
          "31855:       @java.lang.Override",
          "31856:       public org.mlflow.api.proto.Service.DeleteRun build() {",
          "31857:         org.mlflow.api.proto.Service.DeleteRun result = buildPartial();",
          "31858:         if (!result.isInitialized()) {",
          "31859:           throw newUninitializedMessageException(result);",
          "31861:         return result;",
          "31864:       @java.lang.Override",
          "31865:       public org.mlflow.api.proto.Service.DeleteRun buildPartial() {",
          "31866:         org.mlflow.api.proto.Service.DeleteRun result = new org.mlflow.api.proto.Service.DeleteRun(this);",
          "31867:         int from_bitField0_ = bitField0_;",
          "31868:         int to_bitField0_ = 0;",
          "31869:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "31870:           to_bitField0_ |= 0x00000001;",
          "31871:         }",
          "31872:         result.runId_ = runId_;",
          "31873:         result.bitField0_ = to_bitField0_;",
          "31874:         onBuilt();",
          "31875:         return result;",
          "31879:       public Builder clone() {",
          "31880:         return super.clone();",
          "31883:       public Builder setField(",
          "31884:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "31885:           java.lang.Object value) {",
          "31886:         return super.setField(field, value);",
          "31888:       @java.lang.Override",
          "31889:       public Builder clearField(",
          "31890:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "31891:         return super.clearField(field);",
          "31892:       }",
          "31893:       @java.lang.Override",
          "31894:       public Builder clearOneof(",
          "31895:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "31896:         return super.clearOneof(oneof);",
          "31897:       }",
          "31898:       @java.lang.Override",
          "31899:       public Builder setRepeatedField(",
          "31900:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "31901:           int index, java.lang.Object value) {",
          "31902:         return super.setRepeatedField(field, index, value);",
          "31903:       }",
          "31904:       @java.lang.Override",
          "31905:       public Builder addRepeatedField(",
          "31906:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "31907:           java.lang.Object value) {",
          "31908:         return super.addRepeatedField(field, value);",
          "31909:       }",
          "31910:       @java.lang.Override",
          "31911:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "31912:         if (other instanceof org.mlflow.api.proto.Service.DeleteRun) {",
          "31913:           return mergeFrom((org.mlflow.api.proto.Service.DeleteRun)other);",
          "31914:         } else {",
          "31915:           super.mergeFrom(other);",
          "31916:           return this;",
          "31917:         }",
          "31918:       }",
          "31920:       public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteRun other) {",
          "31921:         if (other == org.mlflow.api.proto.Service.DeleteRun.getDefaultInstance()) return this;",
          "31922:         if (other.hasRunId()) {",
          "31923:           bitField0_ |= 0x00000001;",
          "31924:           runId_ = other.runId_;",
          "31925:           onChanged();",
          "31926:         }",
          "31927:         this.mergeUnknownFields(other.unknownFields);",
          "31932:       @java.lang.Override",
          "31933:       public final boolean isInitialized() {",
          "31934:         return true;",
          "31935:       }",
          "31937:       @java.lang.Override",
          "31938:       public Builder mergeFrom(",
          "31939:           com.google.protobuf.CodedInputStream input,",
          "31940:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31941:           throws java.io.IOException {",
          "31942:         org.mlflow.api.proto.Service.DeleteRun parsedMessage = null;",
          "31943:         try {",
          "31944:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "31945:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "31946:           parsedMessage = (org.mlflow.api.proto.Service.DeleteRun) e.getUnfinishedMessage();",
          "31947:           throw e.unwrapIOException();",
          "31948:         } finally {",
          "31949:           if (parsedMessage != null) {",
          "31950:             mergeFrom(parsedMessage);",
          "31951:           }",
          "31952:         }",
          "31955:       private int bitField0_;",
          "31957:       private java.lang.Object runId_ = \"\";",
          "31966:       public boolean hasRunId() {",
          "31967:         return ((bitField0_ & 0x00000001) != 0);",
          "31977:       public java.lang.String getRunId() {",
          "31978:         java.lang.Object ref = runId_;",
          "31984:             runId_ = s;",
          "",
          "---------------",
          "--- Hunk 344 ---",
          "[Context before]",
          "25771:       }",
          "25780:       public com.google.protobuf.ByteString",
          "25783:         if (ref instanceof String) {",
          "25784:           com.google.protobuf.ByteString b =",
          "25785:               com.google.protobuf.ByteString.copyFromUtf8(",
          "25786:                   (java.lang.String) ref);",
          "25788:           return b;",
          "25789:         } else {",
          "25790:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "25781:           getRunNameBytes() {",
          "25782:         java.lang.Object ref = runName_;",
          "25787:           runName_ = b;",
          "",
          "[Added Lines]",
          "32000:           getRunIdBytes() {",
          "32001:         java.lang.Object ref = runId_;",
          "32006:           runId_ = b;",
          "",
          "---------------",
          "--- Hunk 345 ---",
          "[Context before]",
          "25792:       }",
          "25803:           java.lang.String value) {",
          "25804:         if (value == null) {",
          "25805:     throw new NullPointerException();",
          "25806:   }",
          "25809:         onChanged();",
          "25810:         return this;",
          "25811:       }",
          "25823:         onChanged();",
          "25824:         return this;",
          "25825:       }",
          "25836:           com.google.protobuf.ByteString value) {",
          "25837:         if (value == null) {",
          "25838:     throw new NullPointerException();",
          "25839:   }",
          "25842:         onChanged();",
          "25843:         return this;",
          "25844:       }",
          "",
          "[Removed Lines]",
          "25802:       public Builder setRunName(",
          "25807:   bitField0_ |= 0x00000010;",
          "25808:         runName_ = value;",
          "25820:       public Builder clearRunName() {",
          "25821:         bitField0_ = (bitField0_ & ~0x00000010);",
          "25822:         runName_ = getDefaultInstance().getRunName();",
          "25835:       public Builder setRunNameBytes(",
          "25840:   bitField0_ |= 0x00000010;",
          "25841:         runName_ = value;",
          "",
          "[Added Lines]",
          "32021:       public Builder setRunId(",
          "32026:   bitField0_ |= 0x00000001;",
          "32027:         runId_ = value;",
          "32039:       public Builder clearRunId() {",
          "32040:         bitField0_ = (bitField0_ & ~0x00000001);",
          "32041:         runId_ = getDefaultInstance().getRunId();",
          "32054:       public Builder setRunIdBytes(",
          "32059:   bitField0_ |= 0x00000001;",
          "32060:         runId_ = value;",
          "",
          "---------------",
          "--- Hunk 346 ---",
          "[Context before]",
          "25855:       }",
          "25859:     }",
          "25863:     static {",
          "25865:     }",
          "25868:       return DEFAULT_INSTANCE;",
          "25869:     }",
          "25873:       @java.lang.Override",
          "25875:           com.google.protobuf.CodedInputStream input,",
          "25876:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25877:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "25879:       }",
          "25880:     };",
          "25883:       return PARSER;",
          "25884:     }",
          "25886:     @java.lang.Override",
          "25888:       return PARSER;",
          "25889:     }",
          "25891:     @java.lang.Override",
          "25893:       return DEFAULT_INSTANCE;",
          "25894:     }",
          "25896:   }",
          "25900:       com.google.protobuf.MessageOrBuilder {",
          "",
          "[Removed Lines]",
          "25862:     private static final org.mlflow.api.proto.Service.UpdateRun DEFAULT_INSTANCE;",
          "25864:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.UpdateRun();",
          "25867:     public static org.mlflow.api.proto.Service.UpdateRun getDefaultInstance() {",
          "25871:     @java.lang.Deprecated public static final com.google.protobuf.Parser<UpdateRun>",
          "25872:         PARSER = new com.google.protobuf.AbstractParser<UpdateRun>() {",
          "25874:       public UpdateRun parsePartialFrom(",
          "25878:         return new UpdateRun(input, extensionRegistry);",
          "25882:     public static com.google.protobuf.Parser<UpdateRun> parser() {",
          "25887:     public com.google.protobuf.Parser<UpdateRun> getParserForType() {",
          "25892:     public org.mlflow.api.proto.Service.UpdateRun getDefaultInstanceForType() {",
          "25898:   public interface DeleteRunOrBuilder extends",
          "",
          "[Added Lines]",
          "32081:     private static final org.mlflow.api.proto.Service.DeleteRun DEFAULT_INSTANCE;",
          "32083:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteRun();",
          "32086:     public static org.mlflow.api.proto.Service.DeleteRun getDefaultInstance() {",
          "32090:     @java.lang.Deprecated public static final com.google.protobuf.Parser<DeleteRun>",
          "32091:         PARSER = new com.google.protobuf.AbstractParser<DeleteRun>() {",
          "32093:       public DeleteRun parsePartialFrom(",
          "32097:         return new DeleteRun(input, extensionRegistry);",
          "32101:     public static com.google.protobuf.Parser<DeleteRun> parser() {",
          "32106:     public com.google.protobuf.Parser<DeleteRun> getParserForType() {",
          "32111:     public org.mlflow.api.proto.Service.DeleteRun getDefaultInstanceForType() {",
          "32117:   public interface RestoreRunOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 347 ---",
          "[Context before]",
          "25929:         getRunIdBytes();",
          "25930:   }",
          "25935:       com.google.protobuf.GeneratedMessageV3 implements",
          "25938:   private static final long serialVersionUID = 0L;",
          "25941:       super(builder);",
          "25942:     }",
          "25944:       runId_ = \"\";",
          "25945:     }",
          "",
          "[Removed Lines]",
          "25934:   public static final class DeleteRun extends",
          "25937:       DeleteRunOrBuilder {",
          "25940:     private DeleteRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "25943:     private DeleteRun() {",
          "",
          "[Added Lines]",
          "32153:   public static final class RestoreRun extends",
          "32156:       RestoreRunOrBuilder {",
          "32159:     private RestoreRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "32162:     private RestoreRun() {",
          "",
          "---------------",
          "--- Hunk 348 ---",
          "[Context before]",
          "25948:     @SuppressWarnings({\"unused\"})",
          "25949:     protected java.lang.Object newInstance(",
          "25950:         UnusedPrivateParameter unused) {",
          "25952:     }",
          "25954:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "25951:       return new DeleteRun();",
          "",
          "[Added Lines]",
          "32170:       return new RestoreRun();",
          "",
          "---------------",
          "--- Hunk 349 ---",
          "[Context before]",
          "25956:     getUnknownFields() {",
          "25957:       return this.unknownFields;",
          "25958:     }",
          "25960:         com.google.protobuf.CodedInputStream input,",
          "25961:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "25962:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "25959:     private DeleteRun(",
          "",
          "[Added Lines]",
          "32178:     private RestoreRun(",
          "",
          "---------------",
          "--- Hunk 350 ---",
          "[Context before]",
          "26002:     }",
          "26003:     public static final com.google.protobuf.Descriptors.Descriptor",
          "26004:         getDescriptor() {",
          "26006:     }",
          "26008:     @java.lang.Override",
          "26009:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "26010:         internalGetFieldAccessorTable() {",
          "26012:           .ensureFieldAccessorsInitialized(",
          "26014:     }",
          "26016:     public interface ResponseOrBuilder extends",
          "26018:         com.google.protobuf.MessageOrBuilder {",
          "26019:     }",
          "26023:     public static final class Response extends",
          "26024:         com.google.protobuf.GeneratedMessageV3 implements",
          "26026:         ResponseOrBuilder {",
          "26027:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "26005:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_descriptor;",
          "26011:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_fieldAccessorTable",
          "26013:               org.mlflow.api.proto.Service.DeleteRun.class, org.mlflow.api.proto.Service.DeleteRun.Builder.class);",
          "",
          "[Added Lines]",
          "32224:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_descriptor;",
          "32230:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_fieldAccessorTable",
          "32232:               org.mlflow.api.proto.Service.RestoreRun.class, org.mlflow.api.proto.Service.RestoreRun.Builder.class);",
          "",
          "---------------",
          "--- Hunk 351 ---",
          "[Context before]",
          "26083:       }",
          "26084:       public static final com.google.protobuf.Descriptors.Descriptor",
          "26085:           getDescriptor() {",
          "26087:       }",
          "26089:       @java.lang.Override",
          "26090:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "26091:           internalGetFieldAccessorTable() {",
          "26093:             .ensureFieldAccessorsInitialized(",
          "26095:       }",
          "26097:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "26086:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_descriptor;",
          "26092:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_fieldAccessorTable",
          "26094:                 org.mlflow.api.proto.Service.DeleteRun.Response.class, org.mlflow.api.proto.Service.DeleteRun.Response.Builder.class);",
          "",
          "[Added Lines]",
          "32305:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_descriptor;",
          "32311:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_fieldAccessorTable",
          "32313:                 org.mlflow.api.proto.Service.RestoreRun.Response.class, org.mlflow.api.proto.Service.RestoreRun.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 352 ---",
          "[Context before]",
          "26127:         if (obj == this) {",
          "26128:          return true;",
          "26129:         }",
          "26131:           return super.equals(obj);",
          "26132:         }",
          "26135:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "26136:         return true;",
          "",
          "[Removed Lines]",
          "26130:         if (!(obj instanceof org.mlflow.api.proto.Service.DeleteRun.Response)) {",
          "26133:         org.mlflow.api.proto.Service.DeleteRun.Response other = (org.mlflow.api.proto.Service.DeleteRun.Response) obj;",
          "",
          "[Added Lines]",
          "32349:         if (!(obj instanceof org.mlflow.api.proto.Service.RestoreRun.Response)) {",
          "32352:         org.mlflow.api.proto.Service.RestoreRun.Response other = (org.mlflow.api.proto.Service.RestoreRun.Response) obj;",
          "",
          "---------------",
          "--- Hunk 353 ---",
          "[Context before]",
          "26148:         return hash;",
          "26149:       }",
          "26152:           java.nio.ByteBuffer data)",
          "26153:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "26154:         return PARSER.parseFrom(data);",
          "26155:       }",
          "26157:           java.nio.ByteBuffer data,",
          "26158:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26159:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "26160:         return PARSER.parseFrom(data, extensionRegistry);",
          "26161:       }",
          "26163:           com.google.protobuf.ByteString data)",
          "26164:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "26165:         return PARSER.parseFrom(data);",
          "26166:       }",
          "26168:           com.google.protobuf.ByteString data,",
          "26169:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26170:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "26171:         return PARSER.parseFrom(data, extensionRegistry);",
          "26172:       }",
          "26174:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "26175:         return PARSER.parseFrom(data);",
          "26176:       }",
          "26178:           byte[] data,",
          "26179:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26180:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "26181:         return PARSER.parseFrom(data, extensionRegistry);",
          "26182:       }",
          "26184:           throws java.io.IOException {",
          "26185:         return com.google.protobuf.GeneratedMessageV3",
          "26186:             .parseWithIOException(PARSER, input);",
          "26187:       }",
          "26189:           java.io.InputStream input,",
          "26190:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26191:           throws java.io.IOException {",
          "26192:         return com.google.protobuf.GeneratedMessageV3",
          "26193:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "26194:       }",
          "26196:           throws java.io.IOException {",
          "26197:         return com.google.protobuf.GeneratedMessageV3",
          "26198:             .parseDelimitedWithIOException(PARSER, input);",
          "26199:       }",
          "26201:           java.io.InputStream input,",
          "26202:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26203:           throws java.io.IOException {",
          "26204:         return com.google.protobuf.GeneratedMessageV3",
          "26205:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "26206:       }",
          "26208:           com.google.protobuf.CodedInputStream input)",
          "26209:           throws java.io.IOException {",
          "26210:         return com.google.protobuf.GeneratedMessageV3",
          "26211:             .parseWithIOException(PARSER, input);",
          "26212:       }",
          "26214:           com.google.protobuf.CodedInputStream input,",
          "26215:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26216:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "26151:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "26156:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "26162:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "26167:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "26173:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(byte[] data)",
          "26177:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "26183:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(java.io.InputStream input)",
          "26188:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "26195:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "26200:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseDelimitedFrom(",
          "26207:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "26213:       public static org.mlflow.api.proto.Service.DeleteRun.Response parseFrom(",
          "",
          "[Added Lines]",
          "32370:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "32375:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "32381:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "32386:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "32392:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(byte[] data)",
          "32396:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "32402:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(java.io.InputStream input)",
          "32407:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "32414:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "32419:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseDelimitedFrom(",
          "32426:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "32432:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 354 ---",
          "[Context before]",
          "26223:       public static Builder newBuilder() {",
          "26224:         return DEFAULT_INSTANCE.toBuilder();",
          "26225:       }",
          "26227:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "26228:       }",
          "26229:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "26226:       public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteRun.Response prototype) {",
          "",
          "[Added Lines]",
          "32445:       public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreRun.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 355 ---",
          "[Context before]",
          "26239:         return builder;",
          "26240:       }",
          "26244:       public static final class Builder extends",
          "26245:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "26248:         public static final com.google.protobuf.Descriptors.Descriptor",
          "26249:             getDescriptor() {",
          "26251:         }",
          "26253:         @java.lang.Override",
          "26254:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "26255:             internalGetFieldAccessorTable() {",
          "26257:               .ensureFieldAccessorsInitialized(",
          "26259:         }",
          "26262:         private Builder() {",
          "26263:           maybeForceBuilderInitialization();",
          "26264:         }",
          "",
          "[Removed Lines]",
          "26247:           org.mlflow.api.proto.Service.DeleteRun.ResponseOrBuilder {",
          "26250:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_descriptor;",
          "26256:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_fieldAccessorTable",
          "26258:                   org.mlflow.api.proto.Service.DeleteRun.Response.class, org.mlflow.api.proto.Service.DeleteRun.Response.Builder.class);",
          "",
          "[Added Lines]",
          "32466:           org.mlflow.api.proto.Service.RestoreRun.ResponseOrBuilder {",
          "32469:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_descriptor;",
          "32475:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_fieldAccessorTable",
          "32477:                   org.mlflow.api.proto.Service.RestoreRun.Response.class, org.mlflow.api.proto.Service.RestoreRun.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 356 ---",
          "[Context before]",
          "26282:         @java.lang.Override",
          "26283:         public com.google.protobuf.Descriptors.Descriptor",
          "26284:             getDescriptorForType() {",
          "26286:         }",
          "26288:         @java.lang.Override",
          "26291:         }",
          "26293:         @java.lang.Override",
          "26296:           if (!result.isInitialized()) {",
          "26297:             throw newUninitializedMessageException(result);",
          "26298:           }",
          "",
          "[Removed Lines]",
          "26285:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_Response_descriptor;",
          "26289:         public org.mlflow.api.proto.Service.DeleteRun.Response getDefaultInstanceForType() {",
          "26290:           return org.mlflow.api.proto.Service.DeleteRun.Response.getDefaultInstance();",
          "26294:         public org.mlflow.api.proto.Service.DeleteRun.Response build() {",
          "26295:           org.mlflow.api.proto.Service.DeleteRun.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "32504:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_descriptor;",
          "32508:         public org.mlflow.api.proto.Service.RestoreRun.Response getDefaultInstanceForType() {",
          "32509:           return org.mlflow.api.proto.Service.RestoreRun.Response.getDefaultInstance();",
          "32513:         public org.mlflow.api.proto.Service.RestoreRun.Response build() {",
          "32514:           org.mlflow.api.proto.Service.RestoreRun.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 357 ---",
          "[Context before]",
          "26300:         }",
          "26302:         @java.lang.Override",
          "26305:           onBuilt();",
          "26306:           return result;",
          "26307:         }",
          "",
          "[Removed Lines]",
          "26303:         public org.mlflow.api.proto.Service.DeleteRun.Response buildPartial() {",
          "26304:           org.mlflow.api.proto.Service.DeleteRun.Response result = new org.mlflow.api.proto.Service.DeleteRun.Response(this);",
          "",
          "[Added Lines]",
          "32522:         public org.mlflow.api.proto.Service.RestoreRun.Response buildPartial() {",
          "32523:           org.mlflow.api.proto.Service.RestoreRun.Response result = new org.mlflow.api.proto.Service.RestoreRun.Response(this);",
          "",
          "---------------",
          "--- Hunk 358 ---",
          "[Context before]",
          "26340:         }",
          "26341:         @java.lang.Override",
          "26342:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "26345:           } else {",
          "26346:             super.mergeFrom(other);",
          "26347:             return this;",
          "26348:           }",
          "26349:         }",
          "26353:           this.mergeUnknownFields(other.unknownFields);",
          "26354:           onChanged();",
          "26355:           return this;",
          "",
          "[Removed Lines]",
          "26343:           if (other instanceof org.mlflow.api.proto.Service.DeleteRun.Response) {",
          "26344:             return mergeFrom((org.mlflow.api.proto.Service.DeleteRun.Response)other);",
          "26351:         public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteRun.Response other) {",
          "26352:           if (other == org.mlflow.api.proto.Service.DeleteRun.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "32562:           if (other instanceof org.mlflow.api.proto.Service.RestoreRun.Response) {",
          "32563:             return mergeFrom((org.mlflow.api.proto.Service.RestoreRun.Response)other);",
          "32570:         public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreRun.Response other) {",
          "32571:           if (other == org.mlflow.api.proto.Service.RestoreRun.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 359 ---",
          "[Context before]",
          "26365:             com.google.protobuf.CodedInputStream input,",
          "26366:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26367:             throws java.io.IOException {",
          "26369:           try {",
          "26370:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "26371:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "26373:             throw e.unwrapIOException();",
          "26374:           } finally {",
          "26375:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "26368:           org.mlflow.api.proto.Service.DeleteRun.Response parsedMessage = null;",
          "26372:             parsedMessage = (org.mlflow.api.proto.Service.DeleteRun.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "32587:           org.mlflow.api.proto.Service.RestoreRun.Response parsedMessage = null;",
          "32591:             parsedMessage = (org.mlflow.api.proto.Service.RestoreRun.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 360 ---",
          "[Context before]",
          "26391:         }",
          "26395:       }",
          "26399:       static {",
          "26401:       }",
          "26404:         return DEFAULT_INSTANCE;",
          "26405:       }",
          "",
          "[Removed Lines]",
          "26398:       private static final org.mlflow.api.proto.Service.DeleteRun.Response DEFAULT_INSTANCE;",
          "26400:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteRun.Response();",
          "26403:       public static org.mlflow.api.proto.Service.DeleteRun.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "32617:       private static final org.mlflow.api.proto.Service.RestoreRun.Response DEFAULT_INSTANCE;",
          "32619:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreRun.Response();",
          "32622:       public static org.mlflow.api.proto.Service.RestoreRun.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 361 ---",
          "[Context before]",
          "26425:       }",
          "26427:       @java.lang.Override",
          "26429:         return DEFAULT_INSTANCE;",
          "26430:       }",
          "",
          "[Removed Lines]",
          "26428:       public org.mlflow.api.proto.Service.DeleteRun.Response getDefaultInstanceForType() {",
          "",
          "[Added Lines]",
          "32647:       public org.mlflow.api.proto.Service.RestoreRun.Response getDefaultInstanceForType() {",
          "",
          "---------------",
          "--- Hunk 362 ---",
          "[Context before]",
          "26531:       if (obj == this) {",
          "26532:        return true;",
          "26533:       }",
          "26535:         return super.equals(obj);",
          "26536:       }",
          "26539:       if (hasRunId() != other.hasRunId()) return false;",
          "26540:       if (hasRunId()) {",
          "",
          "[Removed Lines]",
          "26534:       if (!(obj instanceof org.mlflow.api.proto.Service.DeleteRun)) {",
          "26537:       org.mlflow.api.proto.Service.DeleteRun other = (org.mlflow.api.proto.Service.DeleteRun) obj;",
          "",
          "[Added Lines]",
          "32753:       if (!(obj instanceof org.mlflow.api.proto.Service.RestoreRun)) {",
          "32756:       org.mlflow.api.proto.Service.RestoreRun other = (org.mlflow.api.proto.Service.RestoreRun) obj;",
          "",
          "---------------",
          "--- Hunk 363 ---",
          "[Context before]",
          "26561:       return hash;",
          "26562:     }",
          "26565:         java.nio.ByteBuffer data)",
          "26566:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "26567:       return PARSER.parseFrom(data);",
          "26568:     }",
          "26570:         java.nio.ByteBuffer data,",
          "26571:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26572:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "26573:       return PARSER.parseFrom(data, extensionRegistry);",
          "26574:     }",
          "26576:         com.google.protobuf.ByteString data)",
          "26577:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "26578:       return PARSER.parseFrom(data);",
          "26579:     }",
          "26581:         com.google.protobuf.ByteString data,",
          "26582:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26583:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "26584:       return PARSER.parseFrom(data, extensionRegistry);",
          "26585:     }",
          "26587:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "26588:       return PARSER.parseFrom(data);",
          "26589:     }",
          "26591:         byte[] data,",
          "26592:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26593:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "26594:       return PARSER.parseFrom(data, extensionRegistry);",
          "26595:     }",
          "26597:         throws java.io.IOException {",
          "26598:       return com.google.protobuf.GeneratedMessageV3",
          "26599:           .parseWithIOException(PARSER, input);",
          "26600:     }",
          "26602:         java.io.InputStream input,",
          "26603:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26604:         throws java.io.IOException {",
          "26605:       return com.google.protobuf.GeneratedMessageV3",
          "26606:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "26607:     }",
          "26609:         throws java.io.IOException {",
          "26610:       return com.google.protobuf.GeneratedMessageV3",
          "26611:           .parseDelimitedWithIOException(PARSER, input);",
          "26612:     }",
          "26614:         java.io.InputStream input,",
          "26615:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26616:         throws java.io.IOException {",
          "26617:       return com.google.protobuf.GeneratedMessageV3",
          "26618:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "26619:     }",
          "26621:         com.google.protobuf.CodedInputStream input)",
          "26622:         throws java.io.IOException {",
          "26623:       return com.google.protobuf.GeneratedMessageV3",
          "26624:           .parseWithIOException(PARSER, input);",
          "26625:     }",
          "26627:         com.google.protobuf.CodedInputStream input,",
          "26628:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26629:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "26564:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "26569:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "26575:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "26580:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "26586:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(byte[] data)",
          "26590:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "26596:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(java.io.InputStream input)",
          "26601:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "26608:     public static org.mlflow.api.proto.Service.DeleteRun parseDelimitedFrom(java.io.InputStream input)",
          "26613:     public static org.mlflow.api.proto.Service.DeleteRun parseDelimitedFrom(",
          "26620:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "26626:     public static org.mlflow.api.proto.Service.DeleteRun parseFrom(",
          "",
          "[Added Lines]",
          "32783:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "32788:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "32794:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "32799:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "32805:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(byte[] data)",
          "32809:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "32815:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(java.io.InputStream input)",
          "32820:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "32827:     public static org.mlflow.api.proto.Service.RestoreRun parseDelimitedFrom(java.io.InputStream input)",
          "32832:     public static org.mlflow.api.proto.Service.RestoreRun parseDelimitedFrom(",
          "32839:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "32845:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "",
          "---------------",
          "--- Hunk 364 ---",
          "[Context before]",
          "26636:     public static Builder newBuilder() {",
          "26637:       return DEFAULT_INSTANCE.toBuilder();",
          "26638:     }",
          "26640:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "26641:     }",
          "26642:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "26639:     public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteRun prototype) {",
          "",
          "[Added Lines]",
          "32858:     public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreRun prototype) {",
          "",
          "---------------",
          "--- Hunk 365 ---",
          "[Context before]",
          "26652:       return builder;",
          "26653:     }",
          "26657:     public static final class Builder extends",
          "26658:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "26661:       public static final com.google.protobuf.Descriptors.Descriptor",
          "26662:           getDescriptor() {",
          "26664:       }",
          "26666:       @java.lang.Override",
          "26667:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "26668:           internalGetFieldAccessorTable() {",
          "26670:             .ensureFieldAccessorsInitialized(",
          "26672:       }",
          "26675:       private Builder() {",
          "26676:         maybeForceBuilderInitialization();",
          "26677:       }",
          "",
          "[Removed Lines]",
          "26660:         org.mlflow.api.proto.Service.DeleteRunOrBuilder {",
          "26663:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_descriptor;",
          "26669:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_fieldAccessorTable",
          "26671:                 org.mlflow.api.proto.Service.DeleteRun.class, org.mlflow.api.proto.Service.DeleteRun.Builder.class);",
          "",
          "[Added Lines]",
          "32879:         org.mlflow.api.proto.Service.RestoreRunOrBuilder {",
          "32882:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_descriptor;",
          "32888:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_fieldAccessorTable",
          "32890:                 org.mlflow.api.proto.Service.RestoreRun.class, org.mlflow.api.proto.Service.RestoreRun.Builder.class);",
          "",
          "---------------",
          "--- Hunk 366 ---",
          "[Context before]",
          "26697:       @java.lang.Override",
          "26698:       public com.google.protobuf.Descriptors.Descriptor",
          "26699:           getDescriptorForType() {",
          "26701:       }",
          "26703:       @java.lang.Override",
          "26706:       }",
          "26708:       @java.lang.Override",
          "26711:         if (!result.isInitialized()) {",
          "26712:           throw newUninitializedMessageException(result);",
          "26713:         }",
          "",
          "[Removed Lines]",
          "26700:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteRun_descriptor;",
          "26704:       public org.mlflow.api.proto.Service.DeleteRun getDefaultInstanceForType() {",
          "26705:         return org.mlflow.api.proto.Service.DeleteRun.getDefaultInstance();",
          "26709:       public org.mlflow.api.proto.Service.DeleteRun build() {",
          "26710:         org.mlflow.api.proto.Service.DeleteRun result = buildPartial();",
          "",
          "[Added Lines]",
          "32919:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_descriptor;",
          "32923:       public org.mlflow.api.proto.Service.RestoreRun getDefaultInstanceForType() {",
          "32924:         return org.mlflow.api.proto.Service.RestoreRun.getDefaultInstance();",
          "32928:       public org.mlflow.api.proto.Service.RestoreRun build() {",
          "32929:         org.mlflow.api.proto.Service.RestoreRun result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 367 ---",
          "[Context before]",
          "26715:       }",
          "26717:       @java.lang.Override",
          "26720:         int from_bitField0_ = bitField0_;",
          "26721:         int to_bitField0_ = 0;",
          "26722:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "26718:       public org.mlflow.api.proto.Service.DeleteRun buildPartial() {",
          "26719:         org.mlflow.api.proto.Service.DeleteRun result = new org.mlflow.api.proto.Service.DeleteRun(this);",
          "",
          "[Added Lines]",
          "32937:       public org.mlflow.api.proto.Service.RestoreRun buildPartial() {",
          "32938:         org.mlflow.api.proto.Service.RestoreRun result = new org.mlflow.api.proto.Service.RestoreRun(this);",
          "",
          "---------------",
          "--- Hunk 368 ---",
          "[Context before]",
          "26762:       }",
          "26763:       @java.lang.Override",
          "26764:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "26767:         } else {",
          "26768:           super.mergeFrom(other);",
          "26769:           return this;",
          "26770:         }",
          "26771:       }",
          "26775:         if (other.hasRunId()) {",
          "26776:           bitField0_ |= 0x00000001;",
          "26777:           runId_ = other.runId_;",
          "",
          "[Removed Lines]",
          "26765:         if (other instanceof org.mlflow.api.proto.Service.DeleteRun) {",
          "26766:           return mergeFrom((org.mlflow.api.proto.Service.DeleteRun)other);",
          "26773:       public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteRun other) {",
          "26774:         if (other == org.mlflow.api.proto.Service.DeleteRun.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "32984:         if (other instanceof org.mlflow.api.proto.Service.RestoreRun) {",
          "32985:           return mergeFrom((org.mlflow.api.proto.Service.RestoreRun)other);",
          "32992:       public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreRun other) {",
          "32993:         if (other == org.mlflow.api.proto.Service.RestoreRun.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 369 ---",
          "[Context before]",
          "26792:           com.google.protobuf.CodedInputStream input,",
          "26793:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26794:           throws java.io.IOException {",
          "26796:         try {",
          "26797:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "26798:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "26800:           throw e.unwrapIOException();",
          "26801:         } finally {",
          "26802:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "26795:         org.mlflow.api.proto.Service.DeleteRun parsedMessage = null;",
          "26799:           parsedMessage = (org.mlflow.api.proto.Service.DeleteRun) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "33014:         org.mlflow.api.proto.Service.RestoreRun parsedMessage = null;",
          "33018:           parsedMessage = (org.mlflow.api.proto.Service.RestoreRun) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 370 ---",
          "[Context before]",
          "26927:       }",
          "26931:     }",
          "26935:     static {",
          "26937:     }",
          "26940:       return DEFAULT_INSTANCE;",
          "26941:     }",
          "26945:       @java.lang.Override",
          "26947:           com.google.protobuf.CodedInputStream input,",
          "26948:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "26949:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "26951:       }",
          "26952:     };",
          "26955:       return PARSER;",
          "26956:     }",
          "26958:     @java.lang.Override",
          "26960:       return PARSER;",
          "26961:     }",
          "26963:     @java.lang.Override",
          "26965:       return DEFAULT_INSTANCE;",
          "26966:     }",
          "26968:   }",
          "26972:       com.google.protobuf.MessageOrBuilder {",
          "26982:     boolean hasRunId();",
          "26991:     java.lang.String getRunId();",
          "27000:     com.google.protobuf.ByteString",
          "27001:         getRunIdBytes();",
          "27002:   }",
          "27007:       com.google.protobuf.GeneratedMessageV3 implements",
          "27010:   private static final long serialVersionUID = 0L;",
          "27013:       super(builder);",
          "27014:     }",
          "27016:       runId_ = \"\";",
          "27017:     }",
          "27019:     @java.lang.Override",
          "27020:     @SuppressWarnings({\"unused\"})",
          "27021:     protected java.lang.Object newInstance(",
          "27022:         UnusedPrivateParameter unused) {",
          "27024:     }",
          "27026:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "26934:     private static final org.mlflow.api.proto.Service.DeleteRun DEFAULT_INSTANCE;",
          "26936:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteRun();",
          "26939:     public static org.mlflow.api.proto.Service.DeleteRun getDefaultInstance() {",
          "26943:     @java.lang.Deprecated public static final com.google.protobuf.Parser<DeleteRun>",
          "26944:         PARSER = new com.google.protobuf.AbstractParser<DeleteRun>() {",
          "26946:       public DeleteRun parsePartialFrom(",
          "26950:         return new DeleteRun(input, extensionRegistry);",
          "26954:     public static com.google.protobuf.Parser<DeleteRun> parser() {",
          "26959:     public com.google.protobuf.Parser<DeleteRun> getParserForType() {",
          "26964:     public org.mlflow.api.proto.Service.DeleteRun getDefaultInstanceForType() {",
          "26970:   public interface RestoreRunOrBuilder extends",
          "27006:   public static final class RestoreRun extends",
          "27009:       RestoreRunOrBuilder {",
          "27012:     private RestoreRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "27015:     private RestoreRun() {",
          "27023:       return new RestoreRun();",
          "",
          "[Added Lines]",
          "33153:     private static final org.mlflow.api.proto.Service.RestoreRun DEFAULT_INSTANCE;",
          "33155:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreRun();",
          "33158:     public static org.mlflow.api.proto.Service.RestoreRun getDefaultInstance() {",
          "33162:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RestoreRun>",
          "33163:         PARSER = new com.google.protobuf.AbstractParser<RestoreRun>() {",
          "33165:       public RestoreRun parsePartialFrom(",
          "33169:         return new RestoreRun(input, extensionRegistry);",
          "33173:     public static com.google.protobuf.Parser<RestoreRun> parser() {",
          "33178:     public com.google.protobuf.Parser<RestoreRun> getParserForType() {",
          "33183:     public org.mlflow.api.proto.Service.RestoreRun getDefaultInstanceForType() {",
          "33189:   public interface LogMetricOrBuilder extends",
          "33231:     boolean hasRunUuid();",
          "33241:     java.lang.String getRunUuid();",
          "33251:     com.google.protobuf.ByteString",
          "33252:         getRunUuidBytes();",
          "33262:     boolean hasKey();",
          "33271:     java.lang.String getKey();",
          "33280:     com.google.protobuf.ByteString",
          "33281:         getKeyBytes();",
          "33291:     boolean hasValue();",
          "33300:     double getValue();",
          "33310:     boolean hasTimestamp();",
          "33319:     long getTimestamp();",
          "33329:     boolean hasStep();",
          "33338:     long getStep();",
          "33343:   public static final class LogMetric extends",
          "33346:       LogMetricOrBuilder {",
          "33349:     private LogMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "33352:     private LogMetric() {",
          "33354:       runUuid_ = \"\";",
          "33355:       key_ = \"\";",
          "33362:       return new LogMetric();",
          "",
          "---------------",
          "--- Hunk 371 ---",
          "[Context before]",
          "27028:     getUnknownFields() {",
          "27029:       return this.unknownFields;",
          "27030:     }",
          "27032:         com.google.protobuf.CodedInputStream input,",
          "27033:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27034:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "27031:     private RestoreRun(",
          "",
          "[Added Lines]",
          "33370:     private LogMetric(",
          "",
          "---------------",
          "--- Hunk 372 ---",
          "[Context before]",
          "27048:               done = true;",
          "27049:               break;",
          "27050:             case 10: {",
          "27051:               com.google.protobuf.ByteString bs = input.readBytes();",
          "27052:               bitField0_ |= 0x00000001;",
          "27053:               runId_ = bs;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33390:               com.google.protobuf.ByteString bs = input.readBytes();",
          "33391:               bitField0_ |= 0x00000002;",
          "33392:               runUuid_ = bs;",
          "33393:               break;",
          "33394:             }",
          "33395:             case 18: {",
          "33396:               com.google.protobuf.ByteString bs = input.readBytes();",
          "33397:               bitField0_ |= 0x00000004;",
          "33398:               key_ = bs;",
          "33399:               break;",
          "33400:             }",
          "33401:             case 25: {",
          "33402:               bitField0_ |= 0x00000008;",
          "33403:               value_ = input.readDouble();",
          "33404:               break;",
          "33405:             }",
          "33406:             case 32: {",
          "33407:               bitField0_ |= 0x00000010;",
          "33408:               timestamp_ = input.readInt64();",
          "33409:               break;",
          "33410:             }",
          "33411:             case 40: {",
          "33412:               bitField0_ |= 0x00000020;",
          "33413:               step_ = input.readInt64();",
          "33414:               break;",
          "33415:             }",
          "33416:             case 50: {",
          "",
          "---------------",
          "--- Hunk 373 ---",
          "[Context before]",
          "27074:     }",
          "27075:     public static final com.google.protobuf.Descriptors.Descriptor",
          "27076:         getDescriptor() {",
          "27078:     }",
          "27080:     @java.lang.Override",
          "27081:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "27082:         internalGetFieldAccessorTable() {",
          "27084:           .ensureFieldAccessorsInitialized(",
          "27086:     }",
          "27088:     public interface ResponseOrBuilder extends",
          "27090:         com.google.protobuf.MessageOrBuilder {",
          "27091:     }",
          "27095:     public static final class Response extends",
          "27096:         com.google.protobuf.GeneratedMessageV3 implements",
          "27098:         ResponseOrBuilder {",
          "27099:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "27077:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_descriptor;",
          "27083:       return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_fieldAccessorTable",
          "27085:               org.mlflow.api.proto.Service.RestoreRun.class, org.mlflow.api.proto.Service.RestoreRun.Builder.class);",
          "",
          "[Added Lines]",
          "33443:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_descriptor;",
          "33449:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_fieldAccessorTable",
          "33451:               org.mlflow.api.proto.Service.LogMetric.class, org.mlflow.api.proto.Service.LogMetric.Builder.class);",
          "",
          "---------------",
          "--- Hunk 374 ---",
          "[Context before]",
          "27155:       }",
          "27156:       public static final com.google.protobuf.Descriptors.Descriptor",
          "27157:           getDescriptor() {",
          "27159:       }",
          "27161:       @java.lang.Override",
          "27162:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "27163:           internalGetFieldAccessorTable() {",
          "27165:             .ensureFieldAccessorsInitialized(",
          "27167:       }",
          "27169:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "27158:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_descriptor;",
          "27164:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_fieldAccessorTable",
          "27166:                 org.mlflow.api.proto.Service.RestoreRun.Response.class, org.mlflow.api.proto.Service.RestoreRun.Response.Builder.class);",
          "",
          "[Added Lines]",
          "33524:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_descriptor;",
          "33530:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_fieldAccessorTable",
          "33532:                 org.mlflow.api.proto.Service.LogMetric.Response.class, org.mlflow.api.proto.Service.LogMetric.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 375 ---",
          "[Context before]",
          "27199:         if (obj == this) {",
          "27200:          return true;",
          "27201:         }",
          "27203:           return super.equals(obj);",
          "27204:         }",
          "27207:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "27208:         return true;",
          "",
          "[Removed Lines]",
          "27202:         if (!(obj instanceof org.mlflow.api.proto.Service.RestoreRun.Response)) {",
          "27205:         org.mlflow.api.proto.Service.RestoreRun.Response other = (org.mlflow.api.proto.Service.RestoreRun.Response) obj;",
          "",
          "[Added Lines]",
          "33568:         if (!(obj instanceof org.mlflow.api.proto.Service.LogMetric.Response)) {",
          "33571:         org.mlflow.api.proto.Service.LogMetric.Response other = (org.mlflow.api.proto.Service.LogMetric.Response) obj;",
          "",
          "---------------",
          "--- Hunk 376 ---",
          "[Context before]",
          "27220:         return hash;",
          "27221:       }",
          "27224:           java.nio.ByteBuffer data)",
          "27225:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "27226:         return PARSER.parseFrom(data);",
          "27227:       }",
          "27229:           java.nio.ByteBuffer data,",
          "27230:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27231:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "27232:         return PARSER.parseFrom(data, extensionRegistry);",
          "27233:       }",
          "27235:           com.google.protobuf.ByteString data)",
          "27236:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "27237:         return PARSER.parseFrom(data);",
          "27238:       }",
          "27240:           com.google.protobuf.ByteString data,",
          "27241:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27242:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "27243:         return PARSER.parseFrom(data, extensionRegistry);",
          "27244:       }",
          "27246:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "27247:         return PARSER.parseFrom(data);",
          "27248:       }",
          "27250:           byte[] data,",
          "27251:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27252:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "27253:         return PARSER.parseFrom(data, extensionRegistry);",
          "27254:       }",
          "27256:           throws java.io.IOException {",
          "27257:         return com.google.protobuf.GeneratedMessageV3",
          "27258:             .parseWithIOException(PARSER, input);",
          "27259:       }",
          "27261:           java.io.InputStream input,",
          "27262:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27263:           throws java.io.IOException {",
          "27264:         return com.google.protobuf.GeneratedMessageV3",
          "27265:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "27266:       }",
          "27268:           throws java.io.IOException {",
          "27269:         return com.google.protobuf.GeneratedMessageV3",
          "27270:             .parseDelimitedWithIOException(PARSER, input);",
          "27271:       }",
          "27273:           java.io.InputStream input,",
          "27274:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27275:           throws java.io.IOException {",
          "27276:         return com.google.protobuf.GeneratedMessageV3",
          "27277:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "27278:       }",
          "27280:           com.google.protobuf.CodedInputStream input)",
          "27281:           throws java.io.IOException {",
          "27282:         return com.google.protobuf.GeneratedMessageV3",
          "27283:             .parseWithIOException(PARSER, input);",
          "27284:       }",
          "27286:           com.google.protobuf.CodedInputStream input,",
          "27287:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27288:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "27223:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "27228:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "27234:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "27239:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "27245:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(byte[] data)",
          "27249:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "27255:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(java.io.InputStream input)",
          "27260:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "27267:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "27272:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseDelimitedFrom(",
          "27279:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "27285:       public static org.mlflow.api.proto.Service.RestoreRun.Response parseFrom(",
          "",
          "[Added Lines]",
          "33589:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "33594:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "33600:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "33605:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "33611:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(byte[] data)",
          "33615:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "33621:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(java.io.InputStream input)",
          "33626:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "33633:       public static org.mlflow.api.proto.Service.LogMetric.Response parseDelimitedFrom(java.io.InputStream input)",
          "33638:       public static org.mlflow.api.proto.Service.LogMetric.Response parseDelimitedFrom(",
          "33645:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "33651:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 377 ---",
          "[Context before]",
          "27295:       public static Builder newBuilder() {",
          "27296:         return DEFAULT_INSTANCE.toBuilder();",
          "27297:       }",
          "27299:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "27300:       }",
          "27301:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "27298:       public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreRun.Response prototype) {",
          "",
          "[Added Lines]",
          "33664:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogMetric.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 378 ---",
          "[Context before]",
          "27311:         return builder;",
          "27312:       }",
          "27316:       public static final class Builder extends",
          "27317:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "27320:         public static final com.google.protobuf.Descriptors.Descriptor",
          "27321:             getDescriptor() {",
          "27323:         }",
          "27325:         @java.lang.Override",
          "27326:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "27327:             internalGetFieldAccessorTable() {",
          "27329:               .ensureFieldAccessorsInitialized(",
          "27331:         }",
          "27334:         private Builder() {",
          "27335:           maybeForceBuilderInitialization();",
          "27336:         }",
          "",
          "[Removed Lines]",
          "27319:           org.mlflow.api.proto.Service.RestoreRun.ResponseOrBuilder {",
          "27322:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_descriptor;",
          "27328:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_fieldAccessorTable",
          "27330:                   org.mlflow.api.proto.Service.RestoreRun.Response.class, org.mlflow.api.proto.Service.RestoreRun.Response.Builder.class);",
          "",
          "[Added Lines]",
          "33685:           org.mlflow.api.proto.Service.LogMetric.ResponseOrBuilder {",
          "33688:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_descriptor;",
          "33694:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_fieldAccessorTable",
          "33696:                   org.mlflow.api.proto.Service.LogMetric.Response.class, org.mlflow.api.proto.Service.LogMetric.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 379 ---",
          "[Context before]",
          "27354:         @java.lang.Override",
          "27355:         public com.google.protobuf.Descriptors.Descriptor",
          "27356:             getDescriptorForType() {",
          "27358:         }",
          "27360:         @java.lang.Override",
          "27363:         }",
          "27365:         @java.lang.Override",
          "27368:           if (!result.isInitialized()) {",
          "27369:             throw newUninitializedMessageException(result);",
          "27370:           }",
          "",
          "[Removed Lines]",
          "27357:           return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_Response_descriptor;",
          "27361:         public org.mlflow.api.proto.Service.RestoreRun.Response getDefaultInstanceForType() {",
          "27362:           return org.mlflow.api.proto.Service.RestoreRun.Response.getDefaultInstance();",
          "27366:         public org.mlflow.api.proto.Service.RestoreRun.Response build() {",
          "27367:           org.mlflow.api.proto.Service.RestoreRun.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "33723:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_descriptor;",
          "33727:         public org.mlflow.api.proto.Service.LogMetric.Response getDefaultInstanceForType() {",
          "33728:           return org.mlflow.api.proto.Service.LogMetric.Response.getDefaultInstance();",
          "33732:         public org.mlflow.api.proto.Service.LogMetric.Response build() {",
          "33733:           org.mlflow.api.proto.Service.LogMetric.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 380 ---",
          "[Context before]",
          "27372:         }",
          "27374:         @java.lang.Override",
          "27377:           onBuilt();",
          "27378:           return result;",
          "27379:         }",
          "",
          "[Removed Lines]",
          "27375:         public org.mlflow.api.proto.Service.RestoreRun.Response buildPartial() {",
          "27376:           org.mlflow.api.proto.Service.RestoreRun.Response result = new org.mlflow.api.proto.Service.RestoreRun.Response(this);",
          "",
          "[Added Lines]",
          "33741:         public org.mlflow.api.proto.Service.LogMetric.Response buildPartial() {",
          "33742:           org.mlflow.api.proto.Service.LogMetric.Response result = new org.mlflow.api.proto.Service.LogMetric.Response(this);",
          "",
          "---------------",
          "--- Hunk 381 ---",
          "[Context before]",
          "27412:         }",
          "27413:         @java.lang.Override",
          "27414:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "27417:           } else {",
          "27418:             super.mergeFrom(other);",
          "27419:             return this;",
          "27420:           }",
          "27421:         }",
          "27425:           this.mergeUnknownFields(other.unknownFields);",
          "27426:           onChanged();",
          "27427:           return this;",
          "",
          "[Removed Lines]",
          "27415:           if (other instanceof org.mlflow.api.proto.Service.RestoreRun.Response) {",
          "27416:             return mergeFrom((org.mlflow.api.proto.Service.RestoreRun.Response)other);",
          "27423:         public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreRun.Response other) {",
          "27424:           if (other == org.mlflow.api.proto.Service.RestoreRun.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "33781:           if (other instanceof org.mlflow.api.proto.Service.LogMetric.Response) {",
          "33782:             return mergeFrom((org.mlflow.api.proto.Service.LogMetric.Response)other);",
          "33789:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogMetric.Response other) {",
          "33790:           if (other == org.mlflow.api.proto.Service.LogMetric.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 382 ---",
          "[Context before]",
          "27437:             com.google.protobuf.CodedInputStream input,",
          "27438:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27439:             throws java.io.IOException {",
          "27441:           try {",
          "27442:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "27443:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "27445:             throw e.unwrapIOException();",
          "27446:           } finally {",
          "27447:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "27440:           org.mlflow.api.proto.Service.RestoreRun.Response parsedMessage = null;",
          "27444:             parsedMessage = (org.mlflow.api.proto.Service.RestoreRun.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "33806:           org.mlflow.api.proto.Service.LogMetric.Response parsedMessage = null;",
          "33810:             parsedMessage = (org.mlflow.api.proto.Service.LogMetric.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 383 ---",
          "[Context before]",
          "27463:         }",
          "27467:       }",
          "27471:       static {",
          "27473:       }",
          "27476:         return DEFAULT_INSTANCE;",
          "27477:       }",
          "",
          "[Removed Lines]",
          "27470:       private static final org.mlflow.api.proto.Service.RestoreRun.Response DEFAULT_INSTANCE;",
          "27472:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreRun.Response();",
          "27475:       public static org.mlflow.api.proto.Service.RestoreRun.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "33836:       private static final org.mlflow.api.proto.Service.LogMetric.Response DEFAULT_INSTANCE;",
          "33838:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogMetric.Response();",
          "33841:       public static org.mlflow.api.proto.Service.LogMetric.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 384 ---",
          "[Context before]",
          "27497:       }",
          "27499:       @java.lang.Override",
          "27501:         return DEFAULT_INSTANCE;",
          "27502:       }",
          "27504:     }",
          "27506:     private int bitField0_;",
          "27508:     private volatile java.lang.Object runId_;",
          "27517:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "27500:       public org.mlflow.api.proto.Service.RestoreRun.Response getDefaultInstanceForType() {",
          "27507:     public static final int RUN_ID_FIELD_NUMBER = 1;",
          "",
          "[Added Lines]",
          "33866:       public org.mlflow.api.proto.Service.LogMetric.Response getDefaultInstanceForType() {",
          "33873:     public static final int RUN_ID_FIELD_NUMBER = 6;",
          "",
          "---------------",
          "--- Hunk 385 ---",
          "[Context before]",
          "27536:             (com.google.protobuf.ByteString) ref;",
          "27537:         java.lang.String s = bs.toStringUtf8();",
          "27538:         if (bs.isValidUtf8()) {",
          "27540:         }",
          "27541:         return s;",
          "27542:       }",
          "27543:     }",
          "27552:     @java.lang.Override",
          "27553:     public com.google.protobuf.ByteString",
          "27556:       if (ref instanceof java.lang.String) {",
          "27557:         com.google.protobuf.ByteString b =",
          "27558:             com.google.protobuf.ByteString.copyFromUtf8(",
          "27559:                 (java.lang.String) ref);",
          "27561:         return b;",
          "27562:       } else {",
          "27563:         return (com.google.protobuf.ByteString) ref;",
          "27564:       }",
          "27565:     }",
          "27567:     private byte memoizedIsInitialized = -1;",
          "27568:     @java.lang.Override",
          "27569:     public final boolean isInitialized() {",
          "",
          "[Removed Lines]",
          "27539:           runId_ = s;",
          "27554:         getRunIdBytes() {",
          "27555:       java.lang.Object ref = runId_;",
          "27560:         runId_ = b;",
          "",
          "[Added Lines]",
          "33905:           runId_ = s;",
          "33906:         }",
          "33907:         return s;",
          "33908:       }",
          "33909:     }",
          "33918:     @java.lang.Override",
          "33919:     public com.google.protobuf.ByteString",
          "33920:         getRunIdBytes() {",
          "33921:       java.lang.Object ref = runId_;",
          "33922:       if (ref instanceof java.lang.String) {",
          "33923:         com.google.protobuf.ByteString b =",
          "33924:             com.google.protobuf.ByteString.copyFromUtf8(",
          "33925:                 (java.lang.String) ref);",
          "33926:         runId_ = b;",
          "33927:         return b;",
          "33928:       } else {",
          "33929:         return (com.google.protobuf.ByteString) ref;",
          "33930:       }",
          "33931:     }",
          "33933:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "33934:     private volatile java.lang.Object runUuid_;",
          "33944:     @java.lang.Override",
          "33945:     public boolean hasRunUuid() {",
          "33946:       return ((bitField0_ & 0x00000002) != 0);",
          "33947:     }",
          "33957:     @java.lang.Override",
          "33958:     public java.lang.String getRunUuid() {",
          "33959:       java.lang.Object ref = runUuid_;",
          "33960:       if (ref instanceof java.lang.String) {",
          "33961:         return (java.lang.String) ref;",
          "33962:       } else {",
          "33963:         com.google.protobuf.ByteString bs =",
          "33964:             (com.google.protobuf.ByteString) ref;",
          "33965:         java.lang.String s = bs.toStringUtf8();",
          "33966:         if (bs.isValidUtf8()) {",
          "33967:           runUuid_ = s;",
          "33968:         }",
          "33969:         return s;",
          "33970:       }",
          "33971:     }",
          "33981:     @java.lang.Override",
          "33982:     public com.google.protobuf.ByteString",
          "33983:         getRunUuidBytes() {",
          "33984:       java.lang.Object ref = runUuid_;",
          "33985:       if (ref instanceof java.lang.String) {",
          "33986:         com.google.protobuf.ByteString b =",
          "33987:             com.google.protobuf.ByteString.copyFromUtf8(",
          "33988:                 (java.lang.String) ref);",
          "33989:         runUuid_ = b;",
          "33990:         return b;",
          "33991:       } else {",
          "33992:         return (com.google.protobuf.ByteString) ref;",
          "33993:       }",
          "33994:     }",
          "33996:     public static final int KEY_FIELD_NUMBER = 2;",
          "33997:     private volatile java.lang.Object key_;",
          "34006:     @java.lang.Override",
          "34007:     public boolean hasKey() {",
          "34008:       return ((bitField0_ & 0x00000004) != 0);",
          "34009:     }",
          "34018:     @java.lang.Override",
          "34019:     public java.lang.String getKey() {",
          "34020:       java.lang.Object ref = key_;",
          "34021:       if (ref instanceof java.lang.String) {",
          "34022:         return (java.lang.String) ref;",
          "34023:       } else {",
          "34024:         com.google.protobuf.ByteString bs =",
          "34025:             (com.google.protobuf.ByteString) ref;",
          "34026:         java.lang.String s = bs.toStringUtf8();",
          "34027:         if (bs.isValidUtf8()) {",
          "34028:           key_ = s;",
          "34043:         getKeyBytes() {",
          "34044:       java.lang.Object ref = key_;",
          "34049:         key_ = b;",
          "34056:     public static final int VALUE_FIELD_NUMBER = 3;",
          "34057:     private double value_;",
          "34066:     @java.lang.Override",
          "34067:     public boolean hasValue() {",
          "34068:       return ((bitField0_ & 0x00000008) != 0);",
          "34069:     }",
          "34078:     @java.lang.Override",
          "34079:     public double getValue() {",
          "34080:       return value_;",
          "34081:     }",
          "34083:     public static final int TIMESTAMP_FIELD_NUMBER = 4;",
          "34084:     private long timestamp_;",
          "34093:     @java.lang.Override",
          "34094:     public boolean hasTimestamp() {",
          "34095:       return ((bitField0_ & 0x00000010) != 0);",
          "34096:     }",
          "34105:     @java.lang.Override",
          "34106:     public long getTimestamp() {",
          "34107:       return timestamp_;",
          "34108:     }",
          "34110:     public static final int STEP_FIELD_NUMBER = 5;",
          "34111:     private long step_;",
          "34120:     @java.lang.Override",
          "34121:     public boolean hasStep() {",
          "34122:       return ((bitField0_ & 0x00000020) != 0);",
          "34123:     }",
          "34132:     @java.lang.Override",
          "34133:     public long getStep() {",
          "34134:       return step_;",
          "34135:     }",
          "",
          "---------------",
          "--- Hunk 386 ---",
          "[Context before]",
          "27578:     @java.lang.Override",
          "27579:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "27580:                         throws java.io.IOException {",
          "27581:       if (((bitField0_ & 0x00000001) != 0)) {",
          "27583:       }",
          "27584:       unknownFields.writeTo(output);",
          "27585:     }",
          "",
          "[Removed Lines]",
          "27582:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "",
          "[Added Lines]",
          "34151:       if (((bitField0_ & 0x00000002) != 0)) {",
          "34152:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "34153:       }",
          "34154:       if (((bitField0_ & 0x00000004) != 0)) {",
          "34155:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);",
          "34156:       }",
          "34157:       if (((bitField0_ & 0x00000008) != 0)) {",
          "34158:         output.writeDouble(3, value_);",
          "34159:       }",
          "34160:       if (((bitField0_ & 0x00000010) != 0)) {",
          "34161:         output.writeInt64(4, timestamp_);",
          "34162:       }",
          "34163:       if (((bitField0_ & 0x00000020) != 0)) {",
          "34164:         output.writeInt64(5, step_);",
          "34165:       }",
          "34167:         com.google.protobuf.GeneratedMessageV3.writeString(output, 6, runId_);",
          "",
          "---------------",
          "--- Hunk 387 ---",
          "[Context before]",
          "27590:       if (size != -1) return size;",
          "27592:       size = 0;",
          "27593:       if (((bitField0_ & 0x00000001) != 0)) {",
          "27595:       }",
          "27596:       size += unknownFields.getSerializedSize();",
          "27597:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "27594:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "",
          "[Added Lines]",
          "34178:       if (((bitField0_ & 0x00000002) != 0)) {",
          "34179:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "34180:       }",
          "34181:       if (((bitField0_ & 0x00000004) != 0)) {",
          "34182:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);",
          "34183:       }",
          "34184:       if (((bitField0_ & 0x00000008) != 0)) {",
          "34185:         size += com.google.protobuf.CodedOutputStream",
          "34186:           .computeDoubleSize(3, value_);",
          "34187:       }",
          "34188:       if (((bitField0_ & 0x00000010) != 0)) {",
          "34189:         size += com.google.protobuf.CodedOutputStream",
          "34190:           .computeInt64Size(4, timestamp_);",
          "34191:       }",
          "34192:       if (((bitField0_ & 0x00000020) != 0)) {",
          "34193:         size += com.google.protobuf.CodedOutputStream",
          "34194:           .computeInt64Size(5, step_);",
          "34195:       }",
          "34197:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, runId_);",
          "",
          "---------------",
          "--- Hunk 388 ---",
          "[Context before]",
          "27603:       if (obj == this) {",
          "27604:        return true;",
          "27605:       }",
          "27607:         return super.equals(obj);",
          "27608:       }",
          "27611:       if (hasRunId() != other.hasRunId()) return false;",
          "27612:       if (hasRunId()) {",
          "27613:         if (!getRunId()",
          "27614:             .equals(other.getRunId())) return false;",
          "27615:       }",
          "27616:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "27617:       return true;",
          "27618:     }",
          "",
          "[Removed Lines]",
          "27606:       if (!(obj instanceof org.mlflow.api.proto.Service.RestoreRun)) {",
          "27609:       org.mlflow.api.proto.Service.RestoreRun other = (org.mlflow.api.proto.Service.RestoreRun) obj;",
          "",
          "[Added Lines]",
          "34209:       if (!(obj instanceof org.mlflow.api.proto.Service.LogMetric)) {",
          "34212:       org.mlflow.api.proto.Service.LogMetric other = (org.mlflow.api.proto.Service.LogMetric) obj;",
          "34219:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "34220:       if (hasRunUuid()) {",
          "34221:         if (!getRunUuid()",
          "34222:             .equals(other.getRunUuid())) return false;",
          "34223:       }",
          "34224:       if (hasKey() != other.hasKey()) return false;",
          "34225:       if (hasKey()) {",
          "34226:         if (!getKey()",
          "34227:             .equals(other.getKey())) return false;",
          "34228:       }",
          "34229:       if (hasValue() != other.hasValue()) return false;",
          "34230:       if (hasValue()) {",
          "34231:         if (java.lang.Double.doubleToLongBits(getValue())",
          "34232:             != java.lang.Double.doubleToLongBits(",
          "34233:                 other.getValue())) return false;",
          "34234:       }",
          "34235:       if (hasTimestamp() != other.hasTimestamp()) return false;",
          "34236:       if (hasTimestamp()) {",
          "34237:         if (getTimestamp()",
          "34238:             != other.getTimestamp()) return false;",
          "34239:       }",
          "34240:       if (hasStep() != other.hasStep()) return false;",
          "34241:       if (hasStep()) {",
          "34242:         if (getStep()",
          "34243:             != other.getStep()) return false;",
          "34244:       }",
          "",
          "---------------",
          "--- Hunk 389 ---",
          "[Context before]",
          "27628:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "27629:         hash = (53 * hash) + getRunId().hashCode();",
          "27630:       }",
          "27631:       hash = (29 * hash) + unknownFields.hashCode();",
          "27632:       memoizedHashCode = hash;",
          "27633:       return hash;",
          "27634:     }",
          "27637:         java.nio.ByteBuffer data)",
          "27638:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "27639:       return PARSER.parseFrom(data);",
          "27640:     }",
          "27642:         java.nio.ByteBuffer data,",
          "27643:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27644:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "27645:       return PARSER.parseFrom(data, extensionRegistry);",
          "27646:     }",
          "27648:         com.google.protobuf.ByteString data)",
          "27649:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "27650:       return PARSER.parseFrom(data);",
          "27651:     }",
          "27653:         com.google.protobuf.ByteString data,",
          "27654:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27655:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "27656:       return PARSER.parseFrom(data, extensionRegistry);",
          "27657:     }",
          "27659:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "27660:       return PARSER.parseFrom(data);",
          "27661:     }",
          "27663:         byte[] data,",
          "27664:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27665:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "27666:       return PARSER.parseFrom(data, extensionRegistry);",
          "27667:     }",
          "27669:         throws java.io.IOException {",
          "27670:       return com.google.protobuf.GeneratedMessageV3",
          "27671:           .parseWithIOException(PARSER, input);",
          "27672:     }",
          "27674:         java.io.InputStream input,",
          "27675:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27676:         throws java.io.IOException {",
          "27677:       return com.google.protobuf.GeneratedMessageV3",
          "27678:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "27679:     }",
          "27681:         throws java.io.IOException {",
          "27682:       return com.google.protobuf.GeneratedMessageV3",
          "27683:           .parseDelimitedWithIOException(PARSER, input);",
          "27684:     }",
          "27686:         java.io.InputStream input,",
          "27687:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27688:         throws java.io.IOException {",
          "27689:       return com.google.protobuf.GeneratedMessageV3",
          "27690:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "27691:     }",
          "27693:         com.google.protobuf.CodedInputStream input)",
          "27694:         throws java.io.IOException {",
          "27695:       return com.google.protobuf.GeneratedMessageV3",
          "27696:           .parseWithIOException(PARSER, input);",
          "27697:     }",
          "27699:         com.google.protobuf.CodedInputStream input,",
          "27700:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27701:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "27636:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "27641:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "27647:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "27652:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "27658:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(byte[] data)",
          "27662:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "27668:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(java.io.InputStream input)",
          "27673:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "27680:     public static org.mlflow.api.proto.Service.RestoreRun parseDelimitedFrom(java.io.InputStream input)",
          "27685:     public static org.mlflow.api.proto.Service.RestoreRun parseDelimitedFrom(",
          "27692:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "27698:     public static org.mlflow.api.proto.Service.RestoreRun parseFrom(",
          "",
          "[Added Lines]",
          "34260:       if (hasRunUuid()) {",
          "34261:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "34262:         hash = (53 * hash) + getRunUuid().hashCode();",
          "34263:       }",
          "34264:       if (hasKey()) {",
          "34265:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "34266:         hash = (53 * hash) + getKey().hashCode();",
          "34267:       }",
          "34268:       if (hasValue()) {",
          "34269:         hash = (37 * hash) + VALUE_FIELD_NUMBER;",
          "34270:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "34271:             java.lang.Double.doubleToLongBits(getValue()));",
          "34272:       }",
          "34273:       if (hasTimestamp()) {",
          "34274:         hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;",
          "34275:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "34276:             getTimestamp());",
          "34277:       }",
          "34278:       if (hasStep()) {",
          "34279:         hash = (37 * hash) + STEP_FIELD_NUMBER;",
          "34280:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "34281:             getStep());",
          "34282:       }",
          "34288:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "34293:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "34299:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "34304:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "34310:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(byte[] data)",
          "34314:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "34320:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(java.io.InputStream input)",
          "34325:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "34332:     public static org.mlflow.api.proto.Service.LogMetric parseDelimitedFrom(java.io.InputStream input)",
          "34337:     public static org.mlflow.api.proto.Service.LogMetric parseDelimitedFrom(",
          "34344:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "34350:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "",
          "---------------",
          "--- Hunk 390 ---",
          "[Context before]",
          "27708:     public static Builder newBuilder() {",
          "27709:       return DEFAULT_INSTANCE.toBuilder();",
          "27710:     }",
          "27712:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "27713:     }",
          "27714:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "27711:     public static Builder newBuilder(org.mlflow.api.proto.Service.RestoreRun prototype) {",
          "",
          "[Added Lines]",
          "34363:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogMetric prototype) {",
          "",
          "---------------",
          "--- Hunk 391 ---",
          "[Context before]",
          "27724:       return builder;",
          "27725:     }",
          "27729:     public static final class Builder extends",
          "27730:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "27733:       public static final com.google.protobuf.Descriptors.Descriptor",
          "27734:           getDescriptor() {",
          "27736:       }",
          "27738:       @java.lang.Override",
          "27739:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "27740:           internalGetFieldAccessorTable() {",
          "27742:             .ensureFieldAccessorsInitialized(",
          "27744:       }",
          "27747:       private Builder() {",
          "27748:         maybeForceBuilderInitialization();",
          "27749:       }",
          "",
          "[Removed Lines]",
          "27732:         org.mlflow.api.proto.Service.RestoreRunOrBuilder {",
          "27735:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_descriptor;",
          "27741:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_fieldAccessorTable",
          "27743:                 org.mlflow.api.proto.Service.RestoreRun.class, org.mlflow.api.proto.Service.RestoreRun.Builder.class);",
          "",
          "[Added Lines]",
          "34384:         org.mlflow.api.proto.Service.LogMetricOrBuilder {",
          "34387:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_descriptor;",
          "34393:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_fieldAccessorTable",
          "34395:                 org.mlflow.api.proto.Service.LogMetric.class, org.mlflow.api.proto.Service.LogMetric.Builder.class);",
          "",
          "---------------",
          "--- Hunk 392 ---",
          "[Context before]",
          "27763:         super.clear();",
          "27764:         runId_ = \"\";",
          "27765:         bitField0_ = (bitField0_ & ~0x00000001);",
          "27766:         return this;",
          "27767:       }",
          "27769:       @java.lang.Override",
          "27770:       public com.google.protobuf.Descriptors.Descriptor",
          "27771:           getDescriptorForType() {",
          "27773:       }",
          "27775:       @java.lang.Override",
          "27778:       }",
          "27780:       @java.lang.Override",
          "27783:         if (!result.isInitialized()) {",
          "27784:           throw newUninitializedMessageException(result);",
          "27785:         }",
          "",
          "[Removed Lines]",
          "27772:         return org.mlflow.api.proto.Service.internal_static_mlflow_RestoreRun_descriptor;",
          "27776:       public org.mlflow.api.proto.Service.RestoreRun getDefaultInstanceForType() {",
          "27777:         return org.mlflow.api.proto.Service.RestoreRun.getDefaultInstance();",
          "27781:       public org.mlflow.api.proto.Service.RestoreRun build() {",
          "27782:         org.mlflow.api.proto.Service.RestoreRun result = buildPartial();",
          "",
          "[Added Lines]",
          "34418:         runUuid_ = \"\";",
          "34419:         bitField0_ = (bitField0_ & ~0x00000002);",
          "34420:         key_ = \"\";",
          "34421:         bitField0_ = (bitField0_ & ~0x00000004);",
          "34422:         value_ = 0D;",
          "34423:         bitField0_ = (bitField0_ & ~0x00000008);",
          "34424:         timestamp_ = 0L;",
          "34425:         bitField0_ = (bitField0_ & ~0x00000010);",
          "34426:         step_ = 0L;",
          "34427:         bitField0_ = (bitField0_ & ~0x00000020);",
          "34434:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_descriptor;",
          "34438:       public org.mlflow.api.proto.Service.LogMetric getDefaultInstanceForType() {",
          "34439:         return org.mlflow.api.proto.Service.LogMetric.getDefaultInstance();",
          "34443:       public org.mlflow.api.proto.Service.LogMetric build() {",
          "34444:         org.mlflow.api.proto.Service.LogMetric result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 393 ---",
          "[Context before]",
          "27787:       }",
          "27789:       @java.lang.Override",
          "27792:         int from_bitField0_ = bitField0_;",
          "27793:         int to_bitField0_ = 0;",
          "27794:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "27795:           to_bitField0_ |= 0x00000001;",
          "27796:         }",
          "27797:         result.runId_ = runId_;",
          "27798:         result.bitField0_ = to_bitField0_;",
          "27799:         onBuilt();",
          "27800:         return result;",
          "",
          "[Removed Lines]",
          "27790:       public org.mlflow.api.proto.Service.RestoreRun buildPartial() {",
          "27791:         org.mlflow.api.proto.Service.RestoreRun result = new org.mlflow.api.proto.Service.RestoreRun(this);",
          "",
          "[Added Lines]",
          "34452:       public org.mlflow.api.proto.Service.LogMetric buildPartial() {",
          "34453:         org.mlflow.api.proto.Service.LogMetric result = new org.mlflow.api.proto.Service.LogMetric(this);",
          "34460:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "34461:           to_bitField0_ |= 0x00000002;",
          "34462:         }",
          "34463:         result.runUuid_ = runUuid_;",
          "34464:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "34465:           to_bitField0_ |= 0x00000004;",
          "34466:         }",
          "34467:         result.key_ = key_;",
          "34468:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "34469:           result.value_ = value_;",
          "34470:           to_bitField0_ |= 0x00000008;",
          "34471:         }",
          "34472:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "34473:           result.timestamp_ = timestamp_;",
          "34474:           to_bitField0_ |= 0x00000010;",
          "34475:         }",
          "34476:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "34477:           result.step_ = step_;",
          "34478:           to_bitField0_ |= 0x00000020;",
          "34479:         }",
          "",
          "---------------",
          "--- Hunk 394 ---",
          "[Context before]",
          "27834:       }",
          "27835:       @java.lang.Override",
          "27836:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "27839:         } else {",
          "27840:           super.mergeFrom(other);",
          "27841:           return this;",
          "27842:         }",
          "27843:       }",
          "27847:         if (other.hasRunId()) {",
          "27848:           bitField0_ |= 0x00000001;",
          "27849:           runId_ = other.runId_;",
          "27850:           onChanged();",
          "27851:         }",
          "27852:         this.mergeUnknownFields(other.unknownFields);",
          "27853:         onChanged();",
          "27854:         return this;",
          "",
          "[Removed Lines]",
          "27837:         if (other instanceof org.mlflow.api.proto.Service.RestoreRun) {",
          "27838:           return mergeFrom((org.mlflow.api.proto.Service.RestoreRun)other);",
          "27845:       public Builder mergeFrom(org.mlflow.api.proto.Service.RestoreRun other) {",
          "27846:         if (other == org.mlflow.api.proto.Service.RestoreRun.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "34519:         if (other instanceof org.mlflow.api.proto.Service.LogMetric) {",
          "34520:           return mergeFrom((org.mlflow.api.proto.Service.LogMetric)other);",
          "34527:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogMetric other) {",
          "34528:         if (other == org.mlflow.api.proto.Service.LogMetric.getDefaultInstance()) return this;",
          "34534:         if (other.hasRunUuid()) {",
          "34535:           bitField0_ |= 0x00000002;",
          "34536:           runUuid_ = other.runUuid_;",
          "34537:           onChanged();",
          "34538:         }",
          "34539:         if (other.hasKey()) {",
          "34540:           bitField0_ |= 0x00000004;",
          "34541:           key_ = other.key_;",
          "34542:           onChanged();",
          "34543:         }",
          "34544:         if (other.hasValue()) {",
          "34545:           setValue(other.getValue());",
          "34546:         }",
          "34547:         if (other.hasTimestamp()) {",
          "34548:           setTimestamp(other.getTimestamp());",
          "34549:         }",
          "34550:         if (other.hasStep()) {",
          "34551:           setStep(other.getStep());",
          "34552:         }",
          "",
          "---------------",
          "--- Hunk 395 ---",
          "[Context before]",
          "27864:           com.google.protobuf.CodedInputStream input,",
          "27865:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "27866:           throws java.io.IOException {",
          "27868:         try {",
          "27869:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "27870:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "27872:           throw e.unwrapIOException();",
          "27873:         } finally {",
          "27874:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "27867:         org.mlflow.api.proto.Service.RestoreRun parsedMessage = null;",
          "27871:           parsedMessage = (org.mlflow.api.proto.Service.RestoreRun) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "34568:         org.mlflow.api.proto.Service.LogMetric parsedMessage = null;",
          "34572:           parsedMessage = (org.mlflow.api.proto.Service.LogMetric) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 396 ---",
          "[Context before]",
          "27877:         }",
          "27878:         return this;",
          "27879:       }",
          "27893:       }",
          "27904:         if (!(ref instanceof java.lang.String)) {",
          "27905:           com.google.protobuf.ByteString bs =",
          "27906:               (com.google.protobuf.ByteString) ref;",
          "27907:           java.lang.String s = bs.toStringUtf8();",
          "27908:           if (bs.isValidUtf8()) {",
          "27910:           }",
          "27911:           return s;",
          "27912:         } else {",
          "",
          "[Removed Lines]",
          "27880:       private int bitField0_;",
          "27882:       private java.lang.Object runId_ = \"\";",
          "27891:       public boolean hasRunId() {",
          "27892:         return ((bitField0_ & 0x00000001) != 0);",
          "27902:       public java.lang.String getRunId() {",
          "27903:         java.lang.Object ref = runId_;",
          "27909:             runId_ = s;",
          "",
          "[Added Lines]",
          "34581:       private int bitField0_;",
          "34583:       private java.lang.Object runId_ = \"\";",
          "34592:       public boolean hasRunId() {",
          "34593:         return ((bitField0_ & 0x00000001) != 0);",
          "34594:       }",
          "34603:       public java.lang.String getRunId() {",
          "34604:         java.lang.Object ref = runId_;",
          "34605:         if (!(ref instanceof java.lang.String)) {",
          "34606:           com.google.protobuf.ByteString bs =",
          "34607:               (com.google.protobuf.ByteString) ref;",
          "34608:           java.lang.String s = bs.toStringUtf8();",
          "34609:           if (bs.isValidUtf8()) {",
          "34610:             runId_ = s;",
          "34611:           }",
          "34612:           return s;",
          "34613:         } else {",
          "34614:           return (java.lang.String) ref;",
          "34615:         }",
          "34616:       }",
          "34625:       public com.google.protobuf.ByteString",
          "34626:           getRunIdBytes() {",
          "34627:         java.lang.Object ref = runId_;",
          "34628:         if (ref instanceof String) {",
          "34629:           com.google.protobuf.ByteString b =",
          "34630:               com.google.protobuf.ByteString.copyFromUtf8(",
          "34631:                   (java.lang.String) ref);",
          "34632:           runId_ = b;",
          "34633:           return b;",
          "34634:         } else {",
          "34635:           return (com.google.protobuf.ByteString) ref;",
          "34636:         }",
          "34637:       }",
          "34647:       public Builder setRunId(",
          "34648:           java.lang.String value) {",
          "34649:         if (value == null) {",
          "34650:     throw new NullPointerException();",
          "34651:   }",
          "34652:   bitField0_ |= 0x00000001;",
          "34653:         runId_ = value;",
          "34654:         onChanged();",
          "34655:         return this;",
          "34656:       }",
          "34665:       public Builder clearRunId() {",
          "34666:         bitField0_ = (bitField0_ & ~0x00000001);",
          "34667:         runId_ = getDefaultInstance().getRunId();",
          "34668:         onChanged();",
          "34669:         return this;",
          "34670:       }",
          "34680:       public Builder setRunIdBytes(",
          "34681:           com.google.protobuf.ByteString value) {",
          "34682:         if (value == null) {",
          "34683:     throw new NullPointerException();",
          "34684:   }",
          "34685:   bitField0_ |= 0x00000001;",
          "34686:         runId_ = value;",
          "34687:         onChanged();",
          "34688:         return this;",
          "34689:       }",
          "34691:       private java.lang.Object runUuid_ = \"\";",
          "34701:       public boolean hasRunUuid() {",
          "34702:         return ((bitField0_ & 0x00000002) != 0);",
          "34703:       }",
          "34713:       public java.lang.String getRunUuid() {",
          "34714:         java.lang.Object ref = runUuid_;",
          "34715:         if (!(ref instanceof java.lang.String)) {",
          "34716:           com.google.protobuf.ByteString bs =",
          "34717:               (com.google.protobuf.ByteString) ref;",
          "34718:           java.lang.String s = bs.toStringUtf8();",
          "34719:           if (bs.isValidUtf8()) {",
          "34720:             runUuid_ = s;",
          "34721:           }",
          "34722:           return s;",
          "34723:         } else {",
          "34724:           return (java.lang.String) ref;",
          "34725:         }",
          "34726:       }",
          "34736:       public com.google.protobuf.ByteString",
          "34737:           getRunUuidBytes() {",
          "34738:         java.lang.Object ref = runUuid_;",
          "34739:         if (ref instanceof String) {",
          "34740:           com.google.protobuf.ByteString b =",
          "34741:               com.google.protobuf.ByteString.copyFromUtf8(",
          "34742:                   (java.lang.String) ref);",
          "34743:           runUuid_ = b;",
          "34744:           return b;",
          "34745:         } else {",
          "34746:           return (com.google.protobuf.ByteString) ref;",
          "34747:         }",
          "34748:       }",
          "34759:       public Builder setRunUuid(",
          "34760:           java.lang.String value) {",
          "34761:         if (value == null) {",
          "34762:     throw new NullPointerException();",
          "34763:   }",
          "34764:   bitField0_ |= 0x00000002;",
          "34765:         runUuid_ = value;",
          "34766:         onChanged();",
          "34767:         return this;",
          "34768:       }",
          "34778:       public Builder clearRunUuid() {",
          "34779:         bitField0_ = (bitField0_ & ~0x00000002);",
          "34780:         runUuid_ = getDefaultInstance().getRunUuid();",
          "34781:         onChanged();",
          "34782:         return this;",
          "34783:       }",
          "34794:       public Builder setRunUuidBytes(",
          "34795:           com.google.protobuf.ByteString value) {",
          "34796:         if (value == null) {",
          "34797:     throw new NullPointerException();",
          "34798:   }",
          "34799:   bitField0_ |= 0x00000002;",
          "34800:         runUuid_ = value;",
          "34801:         onChanged();",
          "34802:         return this;",
          "34803:       }",
          "34805:       private java.lang.Object key_ = \"\";",
          "34814:       public boolean hasKey() {",
          "34815:         return ((bitField0_ & 0x00000004) != 0);",
          "34825:       public java.lang.String getKey() {",
          "34826:         java.lang.Object ref = key_;",
          "34832:             key_ = s;",
          "",
          "---------------",
          "--- Hunk 397 ---",
          "[Context before]",
          "27915:       }",
          "27924:       public com.google.protobuf.ByteString",
          "27927:         if (ref instanceof String) {",
          "27928:           com.google.protobuf.ByteString b =",
          "27929:               com.google.protobuf.ByteString.copyFromUtf8(",
          "27930:                   (java.lang.String) ref);",
          "27932:           return b;",
          "27933:         } else {",
          "27934:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "27925:           getRunIdBytes() {",
          "27926:         java.lang.Object ref = runId_;",
          "27931:           runId_ = b;",
          "",
          "[Added Lines]",
          "34848:           getKeyBytes() {",
          "34849:         java.lang.Object ref = key_;",
          "34854:           key_ = b;",
          "",
          "---------------",
          "--- Hunk 398 ---",
          "[Context before]",
          "27936:       }",
          "27947:           java.lang.String value) {",
          "27948:         if (value == null) {",
          "27949:     throw new NullPointerException();",
          "27950:   }",
          "27953:         onChanged();",
          "27954:         return this;",
          "27955:       }",
          "27967:         onChanged();",
          "27968:         return this;",
          "27969:       }",
          "27980:           com.google.protobuf.ByteString value) {",
          "27981:         if (value == null) {",
          "27982:     throw new NullPointerException();",
          "27983:   }",
          "27986:         onChanged();",
          "27987:         return this;",
          "27988:       }",
          "",
          "[Removed Lines]",
          "27946:       public Builder setRunId(",
          "27951:   bitField0_ |= 0x00000001;",
          "27952:         runId_ = value;",
          "27964:       public Builder clearRunId() {",
          "27965:         bitField0_ = (bitField0_ & ~0x00000001);",
          "27966:         runId_ = getDefaultInstance().getRunId();",
          "27979:       public Builder setRunIdBytes(",
          "27984:   bitField0_ |= 0x00000001;",
          "27985:         runId_ = value;",
          "",
          "[Added Lines]",
          "34869:       public Builder setKey(",
          "34874:   bitField0_ |= 0x00000004;",
          "34875:         key_ = value;",
          "34887:       public Builder clearKey() {",
          "34888:         bitField0_ = (bitField0_ & ~0x00000004);",
          "34889:         key_ = getDefaultInstance().getKey();",
          "34902:       public Builder setKeyBytes(",
          "34907:   bitField0_ |= 0x00000004;",
          "34908:         key_ = value;",
          "34909:         onChanged();",
          "34910:         return this;",
          "34911:       }",
          "34913:       private double value_ ;",
          "34922:       @java.lang.Override",
          "34923:       public boolean hasValue() {",
          "34924:         return ((bitField0_ & 0x00000008) != 0);",
          "34925:       }",
          "34934:       @java.lang.Override",
          "34935:       public double getValue() {",
          "34936:         return value_;",
          "34937:       }",
          "34947:       public Builder setValue(double value) {",
          "34948:         bitField0_ |= 0x00000008;",
          "34949:         value_ = value;",
          "34950:         onChanged();",
          "34951:         return this;",
          "34952:       }",
          "34961:       public Builder clearValue() {",
          "34962:         bitField0_ = (bitField0_ & ~0x00000008);",
          "34963:         value_ = 0D;",
          "34964:         onChanged();",
          "34965:         return this;",
          "34966:       }",
          "34968:       private long timestamp_ ;",
          "34977:       @java.lang.Override",
          "34978:       public boolean hasTimestamp() {",
          "34979:         return ((bitField0_ & 0x00000010) != 0);",
          "34980:       }",
          "34989:       @java.lang.Override",
          "34990:       public long getTimestamp() {",
          "34991:         return timestamp_;",
          "34992:       }",
          "35002:       public Builder setTimestamp(long value) {",
          "35003:         bitField0_ |= 0x00000010;",
          "35004:         timestamp_ = value;",
          "35005:         onChanged();",
          "35006:         return this;",
          "35007:       }",
          "35016:       public Builder clearTimestamp() {",
          "35017:         bitField0_ = (bitField0_ & ~0x00000010);",
          "35018:         timestamp_ = 0L;",
          "35019:         onChanged();",
          "35020:         return this;",
          "35021:       }",
          "35023:       private long step_ ;",
          "35032:       @java.lang.Override",
          "35033:       public boolean hasStep() {",
          "35034:         return ((bitField0_ & 0x00000020) != 0);",
          "35035:       }",
          "35044:       @java.lang.Override",
          "35045:       public long getStep() {",
          "35046:         return step_;",
          "35047:       }",
          "35057:       public Builder setStep(long value) {",
          "35058:         bitField0_ |= 0x00000020;",
          "35059:         step_ = value;",
          "35060:         onChanged();",
          "35061:         return this;",
          "35062:       }",
          "35071:       public Builder clearStep() {",
          "35072:         bitField0_ = (bitField0_ & ~0x00000020);",
          "35073:         step_ = 0L;",
          "",
          "---------------",
          "--- Hunk 399 ---",
          "[Context before]",
          "27999:       }",
          "28003:     }",
          "28007:     static {",
          "28009:     }",
          "28012:       return DEFAULT_INSTANCE;",
          "28013:     }",
          "28017:       @java.lang.Override",
          "28019:           com.google.protobuf.CodedInputStream input,",
          "28020:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28021:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "28023:       }",
          "28024:     };",
          "28027:       return PARSER;",
          "28028:     }",
          "28030:     @java.lang.Override",
          "28032:       return PARSER;",
          "28033:     }",
          "28035:     @java.lang.Override",
          "28037:       return DEFAULT_INSTANCE;",
          "28038:     }",
          "28040:   }",
          "28044:       com.google.protobuf.MessageOrBuilder {",
          "28054:     boolean hasRunId();",
          "28063:     java.lang.String getRunId();",
          "28072:     com.google.protobuf.ByteString",
          "",
          "[Removed Lines]",
          "28006:     private static final org.mlflow.api.proto.Service.RestoreRun DEFAULT_INSTANCE;",
          "28008:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.RestoreRun();",
          "28011:     public static org.mlflow.api.proto.Service.RestoreRun getDefaultInstance() {",
          "28015:     @java.lang.Deprecated public static final com.google.protobuf.Parser<RestoreRun>",
          "28016:         PARSER = new com.google.protobuf.AbstractParser<RestoreRun>() {",
          "28018:       public RestoreRun parsePartialFrom(",
          "28022:         return new RestoreRun(input, extensionRegistry);",
          "28026:     public static com.google.protobuf.Parser<RestoreRun> parser() {",
          "28031:     public com.google.protobuf.Parser<RestoreRun> getParserForType() {",
          "28036:     public org.mlflow.api.proto.Service.RestoreRun getDefaultInstanceForType() {",
          "28042:   public interface LogMetricOrBuilder extends",
          "",
          "[Added Lines]",
          "35094:     private static final org.mlflow.api.proto.Service.LogMetric DEFAULT_INSTANCE;",
          "35096:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogMetric();",
          "35099:     public static org.mlflow.api.proto.Service.LogMetric getDefaultInstance() {",
          "35103:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogMetric>",
          "35104:         PARSER = new com.google.protobuf.AbstractParser<LogMetric>() {",
          "35106:       public LogMetric parsePartialFrom(",
          "35110:         return new LogMetric(input, extensionRegistry);",
          "35114:     public static com.google.protobuf.Parser<LogMetric> parser() {",
          "35119:     public com.google.protobuf.Parser<LogMetric> getParserForType() {",
          "35124:     public org.mlflow.api.proto.Service.LogMetric getDefaultInstanceForType() {",
          "35130:   public interface LogParamOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 400 ---",
          "[Context before]",
          "28144:     boolean hasValue();",
          "28192:   }",
          "28197:       com.google.protobuf.GeneratedMessageV3 implements",
          "28200:   private static final long serialVersionUID = 0L;",
          "28203:       super(builder);",
          "28204:     }",
          "28206:       runId_ = \"\";",
          "28207:       runUuid_ = \"\";",
          "28208:       key_ = \"\";",
          "28209:     }",
          "28211:     @java.lang.Override",
          "28212:     @SuppressWarnings({\"unused\"})",
          "28213:     protected java.lang.Object newInstance(",
          "28214:         UnusedPrivateParameter unused) {",
          "28216:     }",
          "28218:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "28153:     double getValue();",
          "28163:     boolean hasTimestamp();",
          "28172:     long getTimestamp();",
          "28182:     boolean hasStep();",
          "28191:     long getStep();",
          "28196:   public static final class LogMetric extends",
          "28199:       LogMetricOrBuilder {",
          "28202:     private LogMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "28205:     private LogMetric() {",
          "28215:       return new LogMetric();",
          "",
          "[Added Lines]",
          "35241:     java.lang.String getValue();",
          "35250:     com.google.protobuf.ByteString",
          "35251:         getValueBytes();",
          "35256:   public static final class LogParam extends",
          "35259:       LogParamOrBuilder {",
          "35262:     private LogParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "35265:     private LogParam() {",
          "35269:       value_ = \"\";",
          "35276:       return new LogParam();",
          "",
          "---------------",
          "--- Hunk 401 ---",
          "[Context before]",
          "28220:     getUnknownFields() {",
          "28221:       return this.unknownFields;",
          "28222:     }",
          "28224:         com.google.protobuf.CodedInputStream input,",
          "28225:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28226:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "28223:     private LogMetric(",
          "",
          "[Added Lines]",
          "35284:     private LogParam(",
          "",
          "---------------",
          "--- Hunk 402 ---",
          "[Context before]",
          "28251:               key_ = bs;",
          "28252:               break;",
          "28253:             }",
          "28255:               bitField0_ |= 0x00000008;",
          "28267:               break;",
          "28268:             }",
          "28270:               com.google.protobuf.ByteString bs = input.readBytes();",
          "28271:               bitField0_ |= 0x00000001;",
          "28272:               runId_ = bs;",
          "",
          "[Removed Lines]",
          "28254:             case 25: {",
          "28256:               value_ = input.readDouble();",
          "28257:               break;",
          "28258:             }",
          "28259:             case 32: {",
          "28260:               bitField0_ |= 0x00000010;",
          "28261:               timestamp_ = input.readInt64();",
          "28262:               break;",
          "28263:             }",
          "28264:             case 40: {",
          "28265:               bitField0_ |= 0x00000020;",
          "28266:               step_ = input.readInt64();",
          "28269:             case 50: {",
          "",
          "[Added Lines]",
          "35315:             case 26: {",
          "35316:               com.google.protobuf.ByteString bs = input.readBytes();",
          "35318:               value_ = bs;",
          "35321:             case 34: {",
          "",
          "---------------",
          "--- Hunk 403 ---",
          "[Context before]",
          "28293:     }",
          "28294:     public static final com.google.protobuf.Descriptors.Descriptor",
          "28295:         getDescriptor() {",
          "28297:     }",
          "28299:     @java.lang.Override",
          "28300:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "28301:         internalGetFieldAccessorTable() {",
          "28303:           .ensureFieldAccessorsInitialized(",
          "28305:     }",
          "28307:     public interface ResponseOrBuilder extends",
          "28309:         com.google.protobuf.MessageOrBuilder {",
          "28310:     }",
          "28314:     public static final class Response extends",
          "28315:         com.google.protobuf.GeneratedMessageV3 implements",
          "28317:         ResponseOrBuilder {",
          "28318:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "28296:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_descriptor;",
          "28302:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_fieldAccessorTable",
          "28304:               org.mlflow.api.proto.Service.LogMetric.class, org.mlflow.api.proto.Service.LogMetric.Builder.class);",
          "",
          "[Added Lines]",
          "35348:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_descriptor;",
          "35354:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_fieldAccessorTable",
          "35356:               org.mlflow.api.proto.Service.LogParam.class, org.mlflow.api.proto.Service.LogParam.Builder.class);",
          "",
          "---------------",
          "--- Hunk 404 ---",
          "[Context before]",
          "28374:       }",
          "28375:       public static final com.google.protobuf.Descriptors.Descriptor",
          "28376:           getDescriptor() {",
          "28378:       }",
          "28380:       @java.lang.Override",
          "28381:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "28382:           internalGetFieldAccessorTable() {",
          "28384:             .ensureFieldAccessorsInitialized(",
          "28386:       }",
          "28388:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "28377:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_descriptor;",
          "28383:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_fieldAccessorTable",
          "28385:                 org.mlflow.api.proto.Service.LogMetric.Response.class, org.mlflow.api.proto.Service.LogMetric.Response.Builder.class);",
          "",
          "[Added Lines]",
          "35429:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_descriptor;",
          "35435:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_fieldAccessorTable",
          "35437:                 org.mlflow.api.proto.Service.LogParam.Response.class, org.mlflow.api.proto.Service.LogParam.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 405 ---",
          "[Context before]",
          "28418:         if (obj == this) {",
          "28419:          return true;",
          "28420:         }",
          "28422:           return super.equals(obj);",
          "28423:         }",
          "28426:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "28427:         return true;",
          "",
          "[Removed Lines]",
          "28421:         if (!(obj instanceof org.mlflow.api.proto.Service.LogMetric.Response)) {",
          "28424:         org.mlflow.api.proto.Service.LogMetric.Response other = (org.mlflow.api.proto.Service.LogMetric.Response) obj;",
          "",
          "[Added Lines]",
          "35473:         if (!(obj instanceof org.mlflow.api.proto.Service.LogParam.Response)) {",
          "35476:         org.mlflow.api.proto.Service.LogParam.Response other = (org.mlflow.api.proto.Service.LogParam.Response) obj;",
          "",
          "---------------",
          "--- Hunk 406 ---",
          "[Context before]",
          "28439:         return hash;",
          "28440:       }",
          "28443:           java.nio.ByteBuffer data)",
          "28444:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "28445:         return PARSER.parseFrom(data);",
          "28446:       }",
          "28448:           java.nio.ByteBuffer data,",
          "28449:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28450:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "28451:         return PARSER.parseFrom(data, extensionRegistry);",
          "28452:       }",
          "28454:           com.google.protobuf.ByteString data)",
          "28455:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "28456:         return PARSER.parseFrom(data);",
          "28457:       }",
          "28459:           com.google.protobuf.ByteString data,",
          "28460:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28461:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "28462:         return PARSER.parseFrom(data, extensionRegistry);",
          "28463:       }",
          "28465:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "28466:         return PARSER.parseFrom(data);",
          "28467:       }",
          "28469:           byte[] data,",
          "28470:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28471:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "28472:         return PARSER.parseFrom(data, extensionRegistry);",
          "28473:       }",
          "28475:           throws java.io.IOException {",
          "28476:         return com.google.protobuf.GeneratedMessageV3",
          "28477:             .parseWithIOException(PARSER, input);",
          "28478:       }",
          "28480:           java.io.InputStream input,",
          "28481:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28482:           throws java.io.IOException {",
          "28483:         return com.google.protobuf.GeneratedMessageV3",
          "28484:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "28485:       }",
          "28487:           throws java.io.IOException {",
          "28488:         return com.google.protobuf.GeneratedMessageV3",
          "28489:             .parseDelimitedWithIOException(PARSER, input);",
          "28490:       }",
          "28492:           java.io.InputStream input,",
          "28493:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28494:           throws java.io.IOException {",
          "28495:         return com.google.protobuf.GeneratedMessageV3",
          "28496:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "28497:       }",
          "28499:           com.google.protobuf.CodedInputStream input)",
          "28500:           throws java.io.IOException {",
          "28501:         return com.google.protobuf.GeneratedMessageV3",
          "28502:             .parseWithIOException(PARSER, input);",
          "28503:       }",
          "28505:           com.google.protobuf.CodedInputStream input,",
          "28506:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28507:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "28442:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "28447:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "28453:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "28458:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "28464:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(byte[] data)",
          "28468:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "28474:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(java.io.InputStream input)",
          "28479:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "28486:       public static org.mlflow.api.proto.Service.LogMetric.Response parseDelimitedFrom(java.io.InputStream input)",
          "28491:       public static org.mlflow.api.proto.Service.LogMetric.Response parseDelimitedFrom(",
          "28498:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "28504:       public static org.mlflow.api.proto.Service.LogMetric.Response parseFrom(",
          "",
          "[Added Lines]",
          "35494:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "35499:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "35505:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "35510:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "35516:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(byte[] data)",
          "35520:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "35526:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(java.io.InputStream input)",
          "35531:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "35538:       public static org.mlflow.api.proto.Service.LogParam.Response parseDelimitedFrom(java.io.InputStream input)",
          "35543:       public static org.mlflow.api.proto.Service.LogParam.Response parseDelimitedFrom(",
          "35550:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "35556:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 407 ---",
          "[Context before]",
          "28514:       public static Builder newBuilder() {",
          "28515:         return DEFAULT_INSTANCE.toBuilder();",
          "28516:       }",
          "28518:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "28519:       }",
          "28520:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "28517:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogMetric.Response prototype) {",
          "",
          "[Added Lines]",
          "35569:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogParam.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 408 ---",
          "[Context before]",
          "28530:         return builder;",
          "28531:       }",
          "28535:       public static final class Builder extends",
          "28536:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "28539:         public static final com.google.protobuf.Descriptors.Descriptor",
          "28540:             getDescriptor() {",
          "28542:         }",
          "28544:         @java.lang.Override",
          "28545:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "28546:             internalGetFieldAccessorTable() {",
          "28548:               .ensureFieldAccessorsInitialized(",
          "28550:         }",
          "28553:         private Builder() {",
          "28554:           maybeForceBuilderInitialization();",
          "28555:         }",
          "",
          "[Removed Lines]",
          "28538:           org.mlflow.api.proto.Service.LogMetric.ResponseOrBuilder {",
          "28541:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_descriptor;",
          "28547:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_fieldAccessorTable",
          "28549:                   org.mlflow.api.proto.Service.LogMetric.Response.class, org.mlflow.api.proto.Service.LogMetric.Response.Builder.class);",
          "",
          "[Added Lines]",
          "35590:           org.mlflow.api.proto.Service.LogParam.ResponseOrBuilder {",
          "35593:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_descriptor;",
          "35599:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_fieldAccessorTable",
          "35601:                   org.mlflow.api.proto.Service.LogParam.Response.class, org.mlflow.api.proto.Service.LogParam.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 409 ---",
          "[Context before]",
          "28573:         @java.lang.Override",
          "28574:         public com.google.protobuf.Descriptors.Descriptor",
          "28575:             getDescriptorForType() {",
          "28577:         }",
          "28579:         @java.lang.Override",
          "28582:         }",
          "28584:         @java.lang.Override",
          "28587:           if (!result.isInitialized()) {",
          "28588:             throw newUninitializedMessageException(result);",
          "28589:           }",
          "",
          "[Removed Lines]",
          "28576:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_Response_descriptor;",
          "28580:         public org.mlflow.api.proto.Service.LogMetric.Response getDefaultInstanceForType() {",
          "28581:           return org.mlflow.api.proto.Service.LogMetric.Response.getDefaultInstance();",
          "28585:         public org.mlflow.api.proto.Service.LogMetric.Response build() {",
          "28586:           org.mlflow.api.proto.Service.LogMetric.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "35628:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_descriptor;",
          "35632:         public org.mlflow.api.proto.Service.LogParam.Response getDefaultInstanceForType() {",
          "35633:           return org.mlflow.api.proto.Service.LogParam.Response.getDefaultInstance();",
          "35637:         public org.mlflow.api.proto.Service.LogParam.Response build() {",
          "35638:           org.mlflow.api.proto.Service.LogParam.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 410 ---",
          "[Context before]",
          "28591:         }",
          "28593:         @java.lang.Override",
          "28596:           onBuilt();",
          "28597:           return result;",
          "28598:         }",
          "",
          "[Removed Lines]",
          "28594:         public org.mlflow.api.proto.Service.LogMetric.Response buildPartial() {",
          "28595:           org.mlflow.api.proto.Service.LogMetric.Response result = new org.mlflow.api.proto.Service.LogMetric.Response(this);",
          "",
          "[Added Lines]",
          "35646:         public org.mlflow.api.proto.Service.LogParam.Response buildPartial() {",
          "35647:           org.mlflow.api.proto.Service.LogParam.Response result = new org.mlflow.api.proto.Service.LogParam.Response(this);",
          "",
          "---------------",
          "--- Hunk 411 ---",
          "[Context before]",
          "28631:         }",
          "28632:         @java.lang.Override",
          "28633:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "28636:           } else {",
          "28637:             super.mergeFrom(other);",
          "28638:             return this;",
          "28639:           }",
          "28640:         }",
          "28644:           this.mergeUnknownFields(other.unknownFields);",
          "28645:           onChanged();",
          "28646:           return this;",
          "",
          "[Removed Lines]",
          "28634:           if (other instanceof org.mlflow.api.proto.Service.LogMetric.Response) {",
          "28635:             return mergeFrom((org.mlflow.api.proto.Service.LogMetric.Response)other);",
          "28642:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogMetric.Response other) {",
          "28643:           if (other == org.mlflow.api.proto.Service.LogMetric.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "35686:           if (other instanceof org.mlflow.api.proto.Service.LogParam.Response) {",
          "35687:             return mergeFrom((org.mlflow.api.proto.Service.LogParam.Response)other);",
          "35694:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogParam.Response other) {",
          "35695:           if (other == org.mlflow.api.proto.Service.LogParam.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 412 ---",
          "[Context before]",
          "28656:             com.google.protobuf.CodedInputStream input,",
          "28657:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "28658:             throws java.io.IOException {",
          "28660:           try {",
          "28661:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "28662:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "28664:             throw e.unwrapIOException();",
          "28665:           } finally {",
          "28666:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "28659:           org.mlflow.api.proto.Service.LogMetric.Response parsedMessage = null;",
          "28663:             parsedMessage = (org.mlflow.api.proto.Service.LogMetric.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "35711:           org.mlflow.api.proto.Service.LogParam.Response parsedMessage = null;",
          "35715:             parsedMessage = (org.mlflow.api.proto.Service.LogParam.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 413 ---",
          "[Context before]",
          "28682:         }",
          "28686:       }",
          "28690:       static {",
          "28692:       }",
          "28695:         return DEFAULT_INSTANCE;",
          "28696:       }",
          "",
          "[Removed Lines]",
          "28689:       private static final org.mlflow.api.proto.Service.LogMetric.Response DEFAULT_INSTANCE;",
          "28691:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogMetric.Response();",
          "28694:       public static org.mlflow.api.proto.Service.LogMetric.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "35741:       private static final org.mlflow.api.proto.Service.LogParam.Response DEFAULT_INSTANCE;",
          "35743:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogParam.Response();",
          "35746:       public static org.mlflow.api.proto.Service.LogParam.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 414 ---",
          "[Context before]",
          "28716:       }",
          "28718:       @java.lang.Override",
          "28720:         return DEFAULT_INSTANCE;",
          "28721:       }",
          "28723:     }",
          "28725:     private int bitField0_;",
          "28727:     private volatile java.lang.Object runId_;",
          "28736:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "28719:       public org.mlflow.api.proto.Service.LogMetric.Response getDefaultInstanceForType() {",
          "28726:     public static final int RUN_ID_FIELD_NUMBER = 6;",
          "",
          "[Added Lines]",
          "35771:       public org.mlflow.api.proto.Service.LogParam.Response getDefaultInstanceForType() {",
          "35778:     public static final int RUN_ID_FIELD_NUMBER = 4;",
          "",
          "---------------",
          "--- Hunk 415 ---",
          "[Context before]",
          "28907:     }",
          "28909:     public static final int VALUE_FIELD_NUMBER = 3;",
          "28919:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "28910:     private double value_;",
          "",
          "[Added Lines]",
          "35962:     private volatile java.lang.Object value_;",
          "",
          "---------------",
          "--- Hunk 416 ---",
          "[Context before]",
          "28922:     }",
          "28931:     @java.lang.Override",
          "28976:     }",
          "28985:     @java.lang.Override",
          "28988:     }",
          "28990:     private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "28932:     public double getValue() {",
          "28933:       return value_;",
          "28934:     }",
          "28936:     public static final int TIMESTAMP_FIELD_NUMBER = 4;",
          "28937:     private long timestamp_;",
          "28946:     @java.lang.Override",
          "28947:     public boolean hasTimestamp() {",
          "28948:       return ((bitField0_ & 0x00000010) != 0);",
          "28949:     }",
          "28958:     @java.lang.Override",
          "28959:     public long getTimestamp() {",
          "28960:       return timestamp_;",
          "28961:     }",
          "28963:     public static final int STEP_FIELD_NUMBER = 5;",
          "28964:     private long step_;",
          "28973:     @java.lang.Override",
          "28974:     public boolean hasStep() {",
          "28975:       return ((bitField0_ & 0x00000020) != 0);",
          "28986:     public long getStep() {",
          "28987:       return step_;",
          "",
          "[Added Lines]",
          "35984:     public java.lang.String getValue() {",
          "35985:       java.lang.Object ref = value_;",
          "35986:       if (ref instanceof java.lang.String) {",
          "35987:         return (java.lang.String) ref;",
          "35988:       } else {",
          "35989:         com.google.protobuf.ByteString bs =",
          "35990:             (com.google.protobuf.ByteString) ref;",
          "35991:         java.lang.String s = bs.toStringUtf8();",
          "35992:         if (bs.isValidUtf8()) {",
          "35993:           value_ = s;",
          "35994:         }",
          "35995:         return s;",
          "35996:       }",
          "36007:     public com.google.protobuf.ByteString",
          "36008:         getValueBytes() {",
          "36009:       java.lang.Object ref = value_;",
          "36010:       if (ref instanceof java.lang.String) {",
          "36011:         com.google.protobuf.ByteString b =",
          "36012:             com.google.protobuf.ByteString.copyFromUtf8(",
          "36013:                 (java.lang.String) ref);",
          "36014:         value_ = b;",
          "36015:         return b;",
          "36016:       } else {",
          "36017:         return (com.google.protobuf.ByteString) ref;",
          "36018:       }",
          "",
          "---------------",
          "--- Hunk 417 ---",
          "[Context before]",
          "29008:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);",
          "29009:       }",
          "29010:       if (((bitField0_ & 0x00000008) != 0)) {",
          "29018:       }",
          "29019:       if (((bitField0_ & 0x00000001) != 0)) {",
          "29021:       }",
          "29022:       unknownFields.writeTo(output);",
          "29023:     }",
          "",
          "[Removed Lines]",
          "29011:         output.writeDouble(3, value_);",
          "29012:       }",
          "29013:       if (((bitField0_ & 0x00000010) != 0)) {",
          "29014:         output.writeInt64(4, timestamp_);",
          "29015:       }",
          "29016:       if (((bitField0_ & 0x00000020) != 0)) {",
          "29017:         output.writeInt64(5, step_);",
          "29020:         com.google.protobuf.GeneratedMessageV3.writeString(output, 6, runId_);",
          "",
          "[Added Lines]",
          "36042:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);",
          "36045:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, runId_);",
          "",
          "---------------",
          "--- Hunk 418 ---",
          "[Context before]",
          "29035:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);",
          "29036:       }",
          "29037:       if (((bitField0_ & 0x00000008) != 0)) {",
          "29048:       }",
          "29049:       if (((bitField0_ & 0x00000001) != 0)) {",
          "29051:       }",
          "29052:       size += unknownFields.getSerializedSize();",
          "29053:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "29038:         size += com.google.protobuf.CodedOutputStream",
          "29039:           .computeDoubleSize(3, value_);",
          "29040:       }",
          "29041:       if (((bitField0_ & 0x00000010) != 0)) {",
          "29042:         size += com.google.protobuf.CodedOutputStream",
          "29043:           .computeInt64Size(4, timestamp_);",
          "29044:       }",
          "29045:       if (((bitField0_ & 0x00000020) != 0)) {",
          "29046:         size += com.google.protobuf.CodedOutputStream",
          "29047:           .computeInt64Size(5, step_);",
          "29050:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, runId_);",
          "",
          "[Added Lines]",
          "36063:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);",
          "36066:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, runId_);",
          "",
          "---------------",
          "--- Hunk 419 ---",
          "[Context before]",
          "29059:       if (obj == this) {",
          "29060:        return true;",
          "29061:       }",
          "29063:         return super.equals(obj);",
          "29064:       }",
          "29067:       if (hasRunId() != other.hasRunId()) return false;",
          "29068:       if (hasRunId()) {",
          "",
          "[Removed Lines]",
          "29062:       if (!(obj instanceof org.mlflow.api.proto.Service.LogMetric)) {",
          "29065:       org.mlflow.api.proto.Service.LogMetric other = (org.mlflow.api.proto.Service.LogMetric) obj;",
          "",
          "[Added Lines]",
          "36078:       if (!(obj instanceof org.mlflow.api.proto.Service.LogParam)) {",
          "36081:       org.mlflow.api.proto.Service.LogParam other = (org.mlflow.api.proto.Service.LogParam) obj;",
          "",
          "---------------",
          "--- Hunk 420 ---",
          "[Context before]",
          "29081:       }",
          "29082:       if (hasValue() != other.hasValue()) return false;",
          "29083:       if (hasValue()) {",
          "29097:       }",
          "29098:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "29099:       return true;",
          "",
          "[Removed Lines]",
          "29084:         if (java.lang.Double.doubleToLongBits(getValue())",
          "29085:             != java.lang.Double.doubleToLongBits(",
          "29086:                 other.getValue())) return false;",
          "29087:       }",
          "29088:       if (hasTimestamp() != other.hasTimestamp()) return false;",
          "29089:       if (hasTimestamp()) {",
          "29090:         if (getTimestamp()",
          "29091:             != other.getTimestamp()) return false;",
          "29092:       }",
          "29093:       if (hasStep() != other.hasStep()) return false;",
          "29094:       if (hasStep()) {",
          "29095:         if (getStep()",
          "29096:             != other.getStep()) return false;",
          "",
          "[Added Lines]",
          "36100:         if (!getValue()",
          "36101:             .equals(other.getValue())) return false;",
          "",
          "---------------",
          "--- Hunk 421 ---",
          "[Context before]",
          "29120:       }",
          "29121:       if (hasValue()) {",
          "29122:         hash = (37 * hash) + VALUE_FIELD_NUMBER;",
          "29135:       }",
          "29136:       hash = (29 * hash) + unknownFields.hashCode();",
          "29137:       memoizedHashCode = hash;",
          "29138:       return hash;",
          "29139:     }",
          "29142:         java.nio.ByteBuffer data)",
          "29143:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "29144:       return PARSER.parseFrom(data);",
          "29145:     }",
          "29147:         java.nio.ByteBuffer data,",
          "29148:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29149:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "29150:       return PARSER.parseFrom(data, extensionRegistry);",
          "29151:     }",
          "29153:         com.google.protobuf.ByteString data)",
          "29154:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "29155:       return PARSER.parseFrom(data);",
          "29156:     }",
          "29158:         com.google.protobuf.ByteString data,",
          "29159:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29160:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "29161:       return PARSER.parseFrom(data, extensionRegistry);",
          "29162:     }",
          "29164:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "29165:       return PARSER.parseFrom(data);",
          "29166:     }",
          "29168:         byte[] data,",
          "29169:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29170:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "29171:       return PARSER.parseFrom(data, extensionRegistry);",
          "29172:     }",
          "29174:         throws java.io.IOException {",
          "29175:       return com.google.protobuf.GeneratedMessageV3",
          "29176:           .parseWithIOException(PARSER, input);",
          "29177:     }",
          "29179:         java.io.InputStream input,",
          "29180:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29181:         throws java.io.IOException {",
          "29182:       return com.google.protobuf.GeneratedMessageV3",
          "29183:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "29184:     }",
          "29186:         throws java.io.IOException {",
          "29187:       return com.google.protobuf.GeneratedMessageV3",
          "29188:           .parseDelimitedWithIOException(PARSER, input);",
          "29189:     }",
          "29191:         java.io.InputStream input,",
          "29192:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29193:         throws java.io.IOException {",
          "29194:       return com.google.protobuf.GeneratedMessageV3",
          "29195:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "29196:     }",
          "29198:         com.google.protobuf.CodedInputStream input)",
          "29199:         throws java.io.IOException {",
          "29200:       return com.google.protobuf.GeneratedMessageV3",
          "29201:           .parseWithIOException(PARSER, input);",
          "29202:     }",
          "29204:         com.google.protobuf.CodedInputStream input,",
          "29205:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29206:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "29123:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "29124:             java.lang.Double.doubleToLongBits(getValue()));",
          "29125:       }",
          "29126:       if (hasTimestamp()) {",
          "29127:         hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;",
          "29128:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "29129:             getTimestamp());",
          "29130:       }",
          "29131:       if (hasStep()) {",
          "29132:         hash = (37 * hash) + STEP_FIELD_NUMBER;",
          "29133:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "29134:             getStep());",
          "29141:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "29146:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "29152:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "29157:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "29163:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(byte[] data)",
          "29167:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "29173:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(java.io.InputStream input)",
          "29178:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "29185:     public static org.mlflow.api.proto.Service.LogMetric parseDelimitedFrom(java.io.InputStream input)",
          "29190:     public static org.mlflow.api.proto.Service.LogMetric parseDelimitedFrom(",
          "29197:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "29203:     public static org.mlflow.api.proto.Service.LogMetric parseFrom(",
          "",
          "[Added Lines]",
          "36128:         hash = (53 * hash) + getValue().hashCode();",
          "36135:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "36140:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "36146:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "36151:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "36157:     public static org.mlflow.api.proto.Service.LogParam parseFrom(byte[] data)",
          "36161:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "36167:     public static org.mlflow.api.proto.Service.LogParam parseFrom(java.io.InputStream input)",
          "36172:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "36179:     public static org.mlflow.api.proto.Service.LogParam parseDelimitedFrom(java.io.InputStream input)",
          "36184:     public static org.mlflow.api.proto.Service.LogParam parseDelimitedFrom(",
          "36191:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "36197:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "",
          "---------------",
          "--- Hunk 422 ---",
          "[Context before]",
          "29213:     public static Builder newBuilder() {",
          "29214:       return DEFAULT_INSTANCE.toBuilder();",
          "29215:     }",
          "29217:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "29218:     }",
          "29219:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "29216:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogMetric prototype) {",
          "",
          "[Added Lines]",
          "36210:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogParam prototype) {",
          "",
          "---------------",
          "--- Hunk 423 ---",
          "[Context before]",
          "29229:       return builder;",
          "29230:     }",
          "29234:     public static final class Builder extends",
          "29235:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "29238:       public static final com.google.protobuf.Descriptors.Descriptor",
          "29239:           getDescriptor() {",
          "29241:       }",
          "29243:       @java.lang.Override",
          "29244:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "29245:           internalGetFieldAccessorTable() {",
          "29247:             .ensureFieldAccessorsInitialized(",
          "29249:       }",
          "29252:       private Builder() {",
          "29253:         maybeForceBuilderInitialization();",
          "29254:       }",
          "",
          "[Removed Lines]",
          "29237:         org.mlflow.api.proto.Service.LogMetricOrBuilder {",
          "29240:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_descriptor;",
          "29246:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_fieldAccessorTable",
          "29248:                 org.mlflow.api.proto.Service.LogMetric.class, org.mlflow.api.proto.Service.LogMetric.Builder.class);",
          "",
          "[Added Lines]",
          "36231:         org.mlflow.api.proto.Service.LogParamOrBuilder {",
          "36234:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_descriptor;",
          "36240:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_fieldAccessorTable",
          "36242:                 org.mlflow.api.proto.Service.LogParam.class, org.mlflow.api.proto.Service.LogParam.Builder.class);",
          "",
          "---------------",
          "--- Hunk 424 ---",
          "[Context before]",
          "29272:         bitField0_ = (bitField0_ & ~0x00000002);",
          "29273:         key_ = \"\";",
          "29274:         bitField0_ = (bitField0_ & ~0x00000004);",
          "29276:         bitField0_ = (bitField0_ & ~0x00000008);",
          "29281:         return this;",
          "29282:       }",
          "29284:       @java.lang.Override",
          "29285:       public com.google.protobuf.Descriptors.Descriptor",
          "29286:           getDescriptorForType() {",
          "29288:       }",
          "29290:       @java.lang.Override",
          "29293:       }",
          "29295:       @java.lang.Override",
          "29298:         if (!result.isInitialized()) {",
          "29299:           throw newUninitializedMessageException(result);",
          "29300:         }",
          "",
          "[Removed Lines]",
          "29275:         value_ = 0D;",
          "29277:         timestamp_ = 0L;",
          "29278:         bitField0_ = (bitField0_ & ~0x00000010);",
          "29279:         step_ = 0L;",
          "29280:         bitField0_ = (bitField0_ & ~0x00000020);",
          "29287:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogMetric_descriptor;",
          "29291:       public org.mlflow.api.proto.Service.LogMetric getDefaultInstanceForType() {",
          "29292:         return org.mlflow.api.proto.Service.LogMetric.getDefaultInstance();",
          "29296:       public org.mlflow.api.proto.Service.LogMetric build() {",
          "29297:         org.mlflow.api.proto.Service.LogMetric result = buildPartial();",
          "",
          "[Added Lines]",
          "36269:         value_ = \"\";",
          "36277:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_descriptor;",
          "36281:       public org.mlflow.api.proto.Service.LogParam getDefaultInstanceForType() {",
          "36282:         return org.mlflow.api.proto.Service.LogParam.getDefaultInstance();",
          "36286:       public org.mlflow.api.proto.Service.LogParam build() {",
          "36287:         org.mlflow.api.proto.Service.LogParam result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 425 ---",
          "[Context before]",
          "29302:       }",
          "29304:       @java.lang.Override",
          "29307:         int from_bitField0_ = bitField0_;",
          "29308:         int to_bitField0_ = 0;",
          "29309:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "29305:       public org.mlflow.api.proto.Service.LogMetric buildPartial() {",
          "29306:         org.mlflow.api.proto.Service.LogMetric result = new org.mlflow.api.proto.Service.LogMetric(this);",
          "",
          "[Added Lines]",
          "36295:       public org.mlflow.api.proto.Service.LogParam buildPartial() {",
          "36296:         org.mlflow.api.proto.Service.LogParam result = new org.mlflow.api.proto.Service.LogParam(this);",
          "",
          "---------------",
          "--- Hunk 426 ---",
          "[Context before]",
          "29319:         }",
          "29320:         result.key_ = key_;",
          "29321:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "29323:           to_bitField0_ |= 0x00000008;",
          "29324:         }",
          "29333:         result.bitField0_ = to_bitField0_;",
          "29334:         onBuilt();",
          "29335:         return result;",
          "",
          "[Removed Lines]",
          "29322:           result.value_ = value_;",
          "29325:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "29326:           result.timestamp_ = timestamp_;",
          "29327:           to_bitField0_ |= 0x00000010;",
          "29328:         }",
          "29329:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "29330:           result.step_ = step_;",
          "29331:           to_bitField0_ |= 0x00000020;",
          "29332:         }",
          "",
          "[Added Lines]",
          "36314:         result.value_ = value_;",
          "",
          "---------------",
          "--- Hunk 427 ---",
          "[Context before]",
          "29369:       }",
          "29370:       @java.lang.Override",
          "29371:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "29374:         } else {",
          "29375:           super.mergeFrom(other);",
          "29376:           return this;",
          "29377:         }",
          "29378:       }",
          "29382:         if (other.hasRunId()) {",
          "29383:           bitField0_ |= 0x00000001;",
          "29384:           runId_ = other.runId_;",
          "",
          "[Removed Lines]",
          "29372:         if (other instanceof org.mlflow.api.proto.Service.LogMetric) {",
          "29373:           return mergeFrom((org.mlflow.api.proto.Service.LogMetric)other);",
          "29380:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogMetric other) {",
          "29381:         if (other == org.mlflow.api.proto.Service.LogMetric.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "36354:         if (other instanceof org.mlflow.api.proto.Service.LogParam) {",
          "36355:           return mergeFrom((org.mlflow.api.proto.Service.LogParam)other);",
          "36362:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogParam other) {",
          "36363:         if (other == org.mlflow.api.proto.Service.LogParam.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 428 ---",
          "[Context before]",
          "29395:           onChanged();",
          "29396:         }",
          "29397:         if (other.hasValue()) {",
          "29405:         }",
          "29406:         this.mergeUnknownFields(other.unknownFields);",
          "29407:         onChanged();",
          "",
          "[Removed Lines]",
          "29398:           setValue(other.getValue());",
          "29399:         }",
          "29400:         if (other.hasTimestamp()) {",
          "29401:           setTimestamp(other.getTimestamp());",
          "29402:         }",
          "29403:         if (other.hasStep()) {",
          "29404:           setStep(other.getStep());",
          "",
          "[Added Lines]",
          "36380:           bitField0_ |= 0x00000008;",
          "36381:           value_ = other.value_;",
          "36382:           onChanged();",
          "",
          "---------------",
          "--- Hunk 429 ---",
          "[Context before]",
          "29418:           com.google.protobuf.CodedInputStream input,",
          "29419:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29420:           throws java.io.IOException {",
          "29422:         try {",
          "29423:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "29424:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "29426:           throw e.unwrapIOException();",
          "29427:         } finally {",
          "29428:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "29421:         org.mlflow.api.proto.Service.LogMetric parsedMessage = null;",
          "29425:           parsedMessage = (org.mlflow.api.proto.Service.LogMetric) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "36399:         org.mlflow.api.proto.Service.LogParam parsedMessage = null;",
          "36403:           parsedMessage = (org.mlflow.api.proto.Service.LogParam) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 430 ---",
          "[Context before]",
          "29763:         return this;",
          "29764:       }",
          "29776:       public boolean hasValue() {",
          "29777:         return ((bitField0_ & 0x00000008) != 0);",
          "29778:       }",
          "29845:       }",
          "29860:       }",
          "29872:         onChanged();",
          "29873:         return this;",
          "29874:       }",
          "29913:         onChanged();",
          "29914:         return this;",
          "29915:       }",
          "29927:         onChanged();",
          "29928:         return this;",
          "29929:       }",
          "",
          "[Removed Lines]",
          "29766:       private double value_ ;",
          "29775:       @java.lang.Override",
          "29787:       @java.lang.Override",
          "29788:       public double getValue() {",
          "29789:         return value_;",
          "29790:       }",
          "29800:       public Builder setValue(double value) {",
          "29801:         bitField0_ |= 0x00000008;",
          "29802:         value_ = value;",
          "29803:         onChanged();",
          "29804:         return this;",
          "29805:       }",
          "29814:       public Builder clearValue() {",
          "29815:         bitField0_ = (bitField0_ & ~0x00000008);",
          "29816:         value_ = 0D;",
          "29817:         onChanged();",
          "29818:         return this;",
          "29819:       }",
          "29821:       private long timestamp_ ;",
          "29830:       @java.lang.Override",
          "29831:       public boolean hasTimestamp() {",
          "29832:         return ((bitField0_ & 0x00000010) != 0);",
          "29833:       }",
          "29842:       @java.lang.Override",
          "29843:       public long getTimestamp() {",
          "29844:         return timestamp_;",
          "29855:       public Builder setTimestamp(long value) {",
          "29856:         bitField0_ |= 0x00000010;",
          "29857:         timestamp_ = value;",
          "29858:         onChanged();",
          "29859:         return this;",
          "29869:       public Builder clearTimestamp() {",
          "29870:         bitField0_ = (bitField0_ & ~0x00000010);",
          "29871:         timestamp_ = 0L;",
          "29876:       private long step_ ;",
          "29885:       @java.lang.Override",
          "29886:       public boolean hasStep() {",
          "29887:         return ((bitField0_ & 0x00000020) != 0);",
          "29888:       }",
          "29897:       @java.lang.Override",
          "29898:       public long getStep() {",
          "29899:         return step_;",
          "29900:       }",
          "29910:       public Builder setStep(long value) {",
          "29911:         bitField0_ |= 0x00000020;",
          "29912:         step_ = value;",
          "29924:       public Builder clearStep() {",
          "29925:         bitField0_ = (bitField0_ & ~0x00000020);",
          "29926:         step_ = 0L;",
          "",
          "[Added Lines]",
          "36744:       private java.lang.Object value_ = \"\";",
          "36764:       public java.lang.String getValue() {",
          "36765:         java.lang.Object ref = value_;",
          "36766:         if (!(ref instanceof java.lang.String)) {",
          "36767:           com.google.protobuf.ByteString bs =",
          "36768:               (com.google.protobuf.ByteString) ref;",
          "36769:           java.lang.String s = bs.toStringUtf8();",
          "36770:           if (bs.isValidUtf8()) {",
          "36771:             value_ = s;",
          "36772:           }",
          "36773:           return s;",
          "36774:         } else {",
          "36775:           return (java.lang.String) ref;",
          "36776:         }",
          "36786:       public com.google.protobuf.ByteString",
          "36787:           getValueBytes() {",
          "36788:         java.lang.Object ref = value_;",
          "36789:         if (ref instanceof String) {",
          "36790:           com.google.protobuf.ByteString b =",
          "36791:               com.google.protobuf.ByteString.copyFromUtf8(",
          "36792:                   (java.lang.String) ref);",
          "36793:           value_ = b;",
          "36794:           return b;",
          "36795:         } else {",
          "36796:           return (com.google.protobuf.ByteString) ref;",
          "36797:         }",
          "36808:       public Builder setValue(",
          "36809:           java.lang.String value) {",
          "36810:         if (value == null) {",
          "36811:     throw new NullPointerException();",
          "36812:   }",
          "36813:   bitField0_ |= 0x00000008;",
          "36814:         value_ = value;",
          "36826:       public Builder clearValue() {",
          "36827:         bitField0_ = (bitField0_ & ~0x00000008);",
          "36828:         value_ = getDefaultInstance().getValue();",
          "36841:       public Builder setValueBytes(",
          "36842:           com.google.protobuf.ByteString value) {",
          "36843:         if (value == null) {",
          "36844:     throw new NullPointerException();",
          "36845:   }",
          "36846:   bitField0_ |= 0x00000008;",
          "36847:         value_ = value;",
          "",
          "---------------",
          "--- Hunk 431 ---",
          "[Context before]",
          "29940:       }",
          "29944:     }",
          "29948:     static {",
          "29950:     }",
          "29953:       return DEFAULT_INSTANCE;",
          "29954:     }",
          "29958:       @java.lang.Override",
          "29960:           com.google.protobuf.CodedInputStream input,",
          "29961:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "29962:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "29964:       }",
          "29965:     };",
          "29968:       return PARSER;",
          "29969:     }",
          "29971:     @java.lang.Override",
          "29973:       return PARSER;",
          "29974:     }",
          "29976:     @java.lang.Override",
          "29978:       return DEFAULT_INSTANCE;",
          "29979:     }",
          "29981:   }",
          "29985:       com.google.protobuf.MessageOrBuilder {",
          "30045:     com.google.protobuf.ByteString",
          "",
          "[Removed Lines]",
          "29947:     private static final org.mlflow.api.proto.Service.LogMetric DEFAULT_INSTANCE;",
          "29949:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogMetric();",
          "29952:     public static org.mlflow.api.proto.Service.LogMetric getDefaultInstance() {",
          "29956:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogMetric>",
          "29957:         PARSER = new com.google.protobuf.AbstractParser<LogMetric>() {",
          "29959:       public LogMetric parsePartialFrom(",
          "29963:         return new LogMetric(input, extensionRegistry);",
          "29967:     public static com.google.protobuf.Parser<LogMetric> parser() {",
          "29972:     public com.google.protobuf.Parser<LogMetric> getParserForType() {",
          "29977:     public org.mlflow.api.proto.Service.LogMetric getDefaultInstanceForType() {",
          "29983:   public interface LogParamOrBuilder extends",
          "29995:     boolean hasRunId();",
          "30004:     java.lang.String getRunId();",
          "30013:     com.google.protobuf.ByteString",
          "30014:         getRunIdBytes();",
          "30025:     boolean hasRunUuid();",
          "30035:     java.lang.String getRunUuid();",
          "30046:         getRunUuidBytes();",
          "",
          "[Added Lines]",
          "36868:     private static final org.mlflow.api.proto.Service.LogParam DEFAULT_INSTANCE;",
          "36870:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogParam();",
          "36873:     public static org.mlflow.api.proto.Service.LogParam getDefaultInstance() {",
          "36877:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogParam>",
          "36878:         PARSER = new com.google.protobuf.AbstractParser<LogParam>() {",
          "36880:       public LogParam parsePartialFrom(",
          "36884:         return new LogParam(input, extensionRegistry);",
          "36888:     public static com.google.protobuf.Parser<LogParam> parser() {",
          "36893:     public com.google.protobuf.Parser<LogParam> getParserForType() {",
          "36898:     public org.mlflow.api.proto.Service.LogParam getDefaultInstanceForType() {",
          "36904:   public interface SetExperimentTagOrBuilder extends",
          "36916:     boolean hasExperimentId();",
          "36925:     java.lang.String getExperimentId();",
          "36935:         getExperimentIdBytes();",
          "",
          "---------------",
          "--- Hunk 432 ---",
          "[Context before]",
          "30104:         getValueBytes();",
          "30105:   }",
          "30110:       com.google.protobuf.GeneratedMessageV3 implements",
          "30113:   private static final long serialVersionUID = 0L;",
          "30116:       super(builder);",
          "30117:     }",
          "30121:       key_ = \"\";",
          "30122:       value_ = \"\";",
          "30123:     }",
          "",
          "[Removed Lines]",
          "30109:   public static final class LogParam extends",
          "30112:       LogParamOrBuilder {",
          "30115:     private LogParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "30118:     private LogParam() {",
          "30119:       runId_ = \"\";",
          "30120:       runUuid_ = \"\";",
          "",
          "[Added Lines]",
          "37004:   public static final class SetExperimentTag extends",
          "37007:       SetExperimentTagOrBuilder {",
          "37010:     private SetExperimentTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "37013:     private SetExperimentTag() {",
          "37014:       experimentId_ = \"\";",
          "",
          "---------------",
          "--- Hunk 433 ---",
          "[Context before]",
          "30126:     @SuppressWarnings({\"unused\"})",
          "30127:     protected java.lang.Object newInstance(",
          "30128:         UnusedPrivateParameter unused) {",
          "30130:     }",
          "30132:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "30129:       return new LogParam();",
          "",
          "[Added Lines]",
          "37023:       return new SetExperimentTag();",
          "",
          "---------------",
          "--- Hunk 434 ---",
          "[Context before]",
          "30134:     getUnknownFields() {",
          "30135:       return this.unknownFields;",
          "30136:     }",
          "30138:         com.google.protobuf.CodedInputStream input,",
          "30139:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30140:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "30137:     private LogParam(",
          "",
          "[Added Lines]",
          "37031:     private SetExperimentTag(",
          "",
          "---------------",
          "--- Hunk 435 ---",
          "[Context before]",
          "30155:               break;",
          "30156:             case 10: {",
          "30157:               com.google.protobuf.ByteString bs = input.readBytes();",
          "30160:               break;",
          "30161:             }",
          "30162:             case 18: {",
          "30163:               com.google.protobuf.ByteString bs = input.readBytes();",
          "30165:               key_ = bs;",
          "30166:               break;",
          "30167:             }",
          "30168:             case 26: {",
          "30169:               com.google.protobuf.ByteString bs = input.readBytes();",
          "30171:               value_ = bs;",
          "30172:               break;",
          "30173:             }",
          "30180:             default: {",
          "30181:               if (!parseUnknownField(",
          "30182:                   input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "30158:               bitField0_ |= 0x00000002;",
          "30159:               runUuid_ = bs;",
          "30164:               bitField0_ |= 0x00000004;",
          "30170:               bitField0_ |= 0x00000008;",
          "30174:             case 34: {",
          "30175:               com.google.protobuf.ByteString bs = input.readBytes();",
          "30176:               bitField0_ |= 0x00000001;",
          "30177:               runId_ = bs;",
          "30178:               break;",
          "30179:             }",
          "",
          "[Added Lines]",
          "37052:               bitField0_ |= 0x00000001;",
          "37053:               experimentId_ = bs;",
          "37058:               bitField0_ |= 0x00000002;",
          "37064:               bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 436 ---",
          "[Context before]",
          "30198:     }",
          "30199:     public static final com.google.protobuf.Descriptors.Descriptor",
          "30200:         getDescriptor() {",
          "30202:     }",
          "30204:     @java.lang.Override",
          "30205:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "30206:         internalGetFieldAccessorTable() {",
          "30208:           .ensureFieldAccessorsInitialized(",
          "30210:     }",
          "30212:     public interface ResponseOrBuilder extends",
          "30214:         com.google.protobuf.MessageOrBuilder {",
          "30215:     }",
          "30219:     public static final class Response extends",
          "30220:         com.google.protobuf.GeneratedMessageV3 implements",
          "30222:         ResponseOrBuilder {",
          "30223:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "30201:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_descriptor;",
          "30207:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_fieldAccessorTable",
          "30209:               org.mlflow.api.proto.Service.LogParam.class, org.mlflow.api.proto.Service.LogParam.Builder.class);",
          "",
          "[Added Lines]",
          "37089:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_descriptor;",
          "37095:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_fieldAccessorTable",
          "37097:               org.mlflow.api.proto.Service.SetExperimentTag.class, org.mlflow.api.proto.Service.SetExperimentTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 437 ---",
          "[Context before]",
          "30279:       }",
          "30280:       public static final com.google.protobuf.Descriptors.Descriptor",
          "30281:           getDescriptor() {",
          "30283:       }",
          "30285:       @java.lang.Override",
          "30286:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "30287:           internalGetFieldAccessorTable() {",
          "30289:             .ensureFieldAccessorsInitialized(",
          "30291:       }",
          "30293:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "30282:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_descriptor;",
          "30288:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_fieldAccessorTable",
          "30290:                 org.mlflow.api.proto.Service.LogParam.Response.class, org.mlflow.api.proto.Service.LogParam.Response.Builder.class);",
          "",
          "[Added Lines]",
          "37170:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_descriptor;",
          "37176:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_fieldAccessorTable",
          "37178:                 org.mlflow.api.proto.Service.SetExperimentTag.Response.class, org.mlflow.api.proto.Service.SetExperimentTag.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 438 ---",
          "[Context before]",
          "30323:         if (obj == this) {",
          "30324:          return true;",
          "30325:         }",
          "30327:           return super.equals(obj);",
          "30328:         }",
          "30331:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "30332:         return true;",
          "",
          "[Removed Lines]",
          "30326:         if (!(obj instanceof org.mlflow.api.proto.Service.LogParam.Response)) {",
          "30329:         org.mlflow.api.proto.Service.LogParam.Response other = (org.mlflow.api.proto.Service.LogParam.Response) obj;",
          "",
          "[Added Lines]",
          "37214:         if (!(obj instanceof org.mlflow.api.proto.Service.SetExperimentTag.Response)) {",
          "37217:         org.mlflow.api.proto.Service.SetExperimentTag.Response other = (org.mlflow.api.proto.Service.SetExperimentTag.Response) obj;",
          "",
          "---------------",
          "--- Hunk 439 ---",
          "[Context before]",
          "30344:         return hash;",
          "30345:       }",
          "30348:           java.nio.ByteBuffer data)",
          "30349:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "30350:         return PARSER.parseFrom(data);",
          "30351:       }",
          "30353:           java.nio.ByteBuffer data,",
          "30354:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30355:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "30356:         return PARSER.parseFrom(data, extensionRegistry);",
          "30357:       }",
          "30359:           com.google.protobuf.ByteString data)",
          "30360:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "30361:         return PARSER.parseFrom(data);",
          "30362:       }",
          "30364:           com.google.protobuf.ByteString data,",
          "30365:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30366:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "30367:         return PARSER.parseFrom(data, extensionRegistry);",
          "30368:       }",
          "30370:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "30371:         return PARSER.parseFrom(data);",
          "30372:       }",
          "30374:           byte[] data,",
          "30375:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30376:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "30377:         return PARSER.parseFrom(data, extensionRegistry);",
          "30378:       }",
          "30380:           throws java.io.IOException {",
          "30381:         return com.google.protobuf.GeneratedMessageV3",
          "30382:             .parseWithIOException(PARSER, input);",
          "30383:       }",
          "30385:           java.io.InputStream input,",
          "30386:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30387:           throws java.io.IOException {",
          "30388:         return com.google.protobuf.GeneratedMessageV3",
          "30389:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "30390:       }",
          "30392:           throws java.io.IOException {",
          "30393:         return com.google.protobuf.GeneratedMessageV3",
          "30394:             .parseDelimitedWithIOException(PARSER, input);",
          "30395:       }",
          "30397:           java.io.InputStream input,",
          "30398:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30399:           throws java.io.IOException {",
          "30400:         return com.google.protobuf.GeneratedMessageV3",
          "30401:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "30402:       }",
          "30404:           com.google.protobuf.CodedInputStream input)",
          "30405:           throws java.io.IOException {",
          "30406:         return com.google.protobuf.GeneratedMessageV3",
          "30407:             .parseWithIOException(PARSER, input);",
          "30408:       }",
          "30410:           com.google.protobuf.CodedInputStream input,",
          "30411:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30412:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "30347:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "30352:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "30358:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "30363:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "30369:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(byte[] data)",
          "30373:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "30379:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(java.io.InputStream input)",
          "30384:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "30391:       public static org.mlflow.api.proto.Service.LogParam.Response parseDelimitedFrom(java.io.InputStream input)",
          "30396:       public static org.mlflow.api.proto.Service.LogParam.Response parseDelimitedFrom(",
          "30403:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "30409:       public static org.mlflow.api.proto.Service.LogParam.Response parseFrom(",
          "",
          "[Added Lines]",
          "37235:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "37240:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "37246:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "37251:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "37257:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(byte[] data)",
          "37261:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "37267:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(java.io.InputStream input)",
          "37272:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "37279:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseDelimitedFrom(java.io.InputStream input)",
          "37284:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseDelimitedFrom(",
          "37291:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "37297:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 440 ---",
          "[Context before]",
          "30419:       public static Builder newBuilder() {",
          "30420:         return DEFAULT_INSTANCE.toBuilder();",
          "30421:       }",
          "30423:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "30424:       }",
          "30425:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "30422:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogParam.Response prototype) {",
          "",
          "[Added Lines]",
          "37310:       public static Builder newBuilder(org.mlflow.api.proto.Service.SetExperimentTag.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 441 ---",
          "[Context before]",
          "30435:         return builder;",
          "30436:       }",
          "30440:       public static final class Builder extends",
          "30441:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "30444:         public static final com.google.protobuf.Descriptors.Descriptor",
          "30445:             getDescriptor() {",
          "30447:         }",
          "30449:         @java.lang.Override",
          "30450:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "30451:             internalGetFieldAccessorTable() {",
          "30453:               .ensureFieldAccessorsInitialized(",
          "30455:         }",
          "30458:         private Builder() {",
          "30459:           maybeForceBuilderInitialization();",
          "30460:         }",
          "",
          "[Removed Lines]",
          "30443:           org.mlflow.api.proto.Service.LogParam.ResponseOrBuilder {",
          "30446:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_descriptor;",
          "30452:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_fieldAccessorTable",
          "30454:                   org.mlflow.api.proto.Service.LogParam.Response.class, org.mlflow.api.proto.Service.LogParam.Response.Builder.class);",
          "",
          "[Added Lines]",
          "37331:           org.mlflow.api.proto.Service.SetExperimentTag.ResponseOrBuilder {",
          "37334:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_descriptor;",
          "37340:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_fieldAccessorTable",
          "37342:                   org.mlflow.api.proto.Service.SetExperimentTag.Response.class, org.mlflow.api.proto.Service.SetExperimentTag.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 442 ---",
          "[Context before]",
          "30478:         @java.lang.Override",
          "30479:         public com.google.protobuf.Descriptors.Descriptor",
          "30480:             getDescriptorForType() {",
          "30482:         }",
          "30484:         @java.lang.Override",
          "30487:         }",
          "30489:         @java.lang.Override",
          "30492:           if (!result.isInitialized()) {",
          "30493:             throw newUninitializedMessageException(result);",
          "30494:           }",
          "",
          "[Removed Lines]",
          "30481:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_Response_descriptor;",
          "30485:         public org.mlflow.api.proto.Service.LogParam.Response getDefaultInstanceForType() {",
          "30486:           return org.mlflow.api.proto.Service.LogParam.Response.getDefaultInstance();",
          "30490:         public org.mlflow.api.proto.Service.LogParam.Response build() {",
          "30491:           org.mlflow.api.proto.Service.LogParam.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "37369:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_descriptor;",
          "37373:         public org.mlflow.api.proto.Service.SetExperimentTag.Response getDefaultInstanceForType() {",
          "37374:           return org.mlflow.api.proto.Service.SetExperimentTag.Response.getDefaultInstance();",
          "37378:         public org.mlflow.api.proto.Service.SetExperimentTag.Response build() {",
          "37379:           org.mlflow.api.proto.Service.SetExperimentTag.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 443 ---",
          "[Context before]",
          "30496:         }",
          "30498:         @java.lang.Override",
          "30501:           onBuilt();",
          "30502:           return result;",
          "30503:         }",
          "",
          "[Removed Lines]",
          "30499:         public org.mlflow.api.proto.Service.LogParam.Response buildPartial() {",
          "30500:           org.mlflow.api.proto.Service.LogParam.Response result = new org.mlflow.api.proto.Service.LogParam.Response(this);",
          "",
          "[Added Lines]",
          "37387:         public org.mlflow.api.proto.Service.SetExperimentTag.Response buildPartial() {",
          "37388:           org.mlflow.api.proto.Service.SetExperimentTag.Response result = new org.mlflow.api.proto.Service.SetExperimentTag.Response(this);",
          "",
          "---------------",
          "--- Hunk 444 ---",
          "[Context before]",
          "30536:         }",
          "30537:         @java.lang.Override",
          "30538:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "30541:           } else {",
          "30542:             super.mergeFrom(other);",
          "30543:             return this;",
          "30544:           }",
          "30545:         }",
          "30549:           this.mergeUnknownFields(other.unknownFields);",
          "30550:           onChanged();",
          "30551:           return this;",
          "",
          "[Removed Lines]",
          "30539:           if (other instanceof org.mlflow.api.proto.Service.LogParam.Response) {",
          "30540:             return mergeFrom((org.mlflow.api.proto.Service.LogParam.Response)other);",
          "30547:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogParam.Response other) {",
          "30548:           if (other == org.mlflow.api.proto.Service.LogParam.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "37427:           if (other instanceof org.mlflow.api.proto.Service.SetExperimentTag.Response) {",
          "37428:             return mergeFrom((org.mlflow.api.proto.Service.SetExperimentTag.Response)other);",
          "37435:         public Builder mergeFrom(org.mlflow.api.proto.Service.SetExperimentTag.Response other) {",
          "37436:           if (other == org.mlflow.api.proto.Service.SetExperimentTag.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 445 ---",
          "[Context before]",
          "30561:             com.google.protobuf.CodedInputStream input,",
          "30562:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30563:             throws java.io.IOException {",
          "30565:           try {",
          "30566:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "30567:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "30569:             throw e.unwrapIOException();",
          "30570:           } finally {",
          "30571:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "30564:           org.mlflow.api.proto.Service.LogParam.Response parsedMessage = null;",
          "30568:             parsedMessage = (org.mlflow.api.proto.Service.LogParam.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "37452:           org.mlflow.api.proto.Service.SetExperimentTag.Response parsedMessage = null;",
          "37456:             parsedMessage = (org.mlflow.api.proto.Service.SetExperimentTag.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 446 ---",
          "[Context before]",
          "30587:         }",
          "30591:       }",
          "30595:       static {",
          "30597:       }",
          "30600:         return DEFAULT_INSTANCE;",
          "30601:       }",
          "",
          "[Removed Lines]",
          "30594:       private static final org.mlflow.api.proto.Service.LogParam.Response DEFAULT_INSTANCE;",
          "30596:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogParam.Response();",
          "30599:       public static org.mlflow.api.proto.Service.LogParam.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "37482:       private static final org.mlflow.api.proto.Service.SetExperimentTag.Response DEFAULT_INSTANCE;",
          "37484:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetExperimentTag.Response();",
          "37487:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 447 ---",
          "[Context before]",
          "30621:       }",
          "30623:       @java.lang.Override",
          "30625:         return DEFAULT_INSTANCE;",
          "30626:       }",
          "30628:     }",
          "30630:     private int bitField0_;",
          "30641:     @java.lang.Override",
          "30643:       return ((bitField0_ & 0x00000001) != 0);",
          "30644:     }",
          "30715:     @java.lang.Override",
          "30718:       if (ref instanceof java.lang.String) {",
          "30719:         return (java.lang.String) ref;",
          "30720:       } else {",
          "",
          "[Removed Lines]",
          "30624:       public org.mlflow.api.proto.Service.LogParam.Response getDefaultInstanceForType() {",
          "30631:     public static final int RUN_ID_FIELD_NUMBER = 4;",
          "30632:     private volatile java.lang.Object runId_;",
          "30642:     public boolean hasRunId() {",
          "30653:     @java.lang.Override",
          "30654:     public java.lang.String getRunId() {",
          "30655:       java.lang.Object ref = runId_;",
          "30656:       if (ref instanceof java.lang.String) {",
          "30657:         return (java.lang.String) ref;",
          "30658:       } else {",
          "30659:         com.google.protobuf.ByteString bs =",
          "30660:             (com.google.protobuf.ByteString) ref;",
          "30661:         java.lang.String s = bs.toStringUtf8();",
          "30662:         if (bs.isValidUtf8()) {",
          "30663:           runId_ = s;",
          "30664:         }",
          "30665:         return s;",
          "30666:       }",
          "30667:     }",
          "30676:     @java.lang.Override",
          "30677:     public com.google.protobuf.ByteString",
          "30678:         getRunIdBytes() {",
          "30679:       java.lang.Object ref = runId_;",
          "30680:       if (ref instanceof java.lang.String) {",
          "30681:         com.google.protobuf.ByteString b =",
          "30682:             com.google.protobuf.ByteString.copyFromUtf8(",
          "30683:                 (java.lang.String) ref);",
          "30684:         runId_ = b;",
          "30685:         return b;",
          "30686:       } else {",
          "30687:         return (com.google.protobuf.ByteString) ref;",
          "30688:       }",
          "30689:     }",
          "30691:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "30692:     private volatile java.lang.Object runUuid_;",
          "30702:     @java.lang.Override",
          "30703:     public boolean hasRunUuid() {",
          "30704:       return ((bitField0_ & 0x00000002) != 0);",
          "30705:     }",
          "30716:     public java.lang.String getRunUuid() {",
          "30717:       java.lang.Object ref = runUuid_;",
          "",
          "[Added Lines]",
          "37512:       public org.mlflow.api.proto.Service.SetExperimentTag.Response getDefaultInstanceForType() {",
          "37519:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "37520:     private volatile java.lang.Object experimentId_;",
          "37530:     public boolean hasExperimentId() {",
          "37542:     public java.lang.String getExperimentId() {",
          "37543:       java.lang.Object ref = experimentId_;",
          "",
          "---------------",
          "--- Hunk 448 ---",
          "[Context before]",
          "30722:             (com.google.protobuf.ByteString) ref;",
          "30723:         java.lang.String s = bs.toStringUtf8();",
          "30724:         if (bs.isValidUtf8()) {",
          "30726:         }",
          "30727:         return s;",
          "30728:       }",
          "30729:     }",
          "30739:     @java.lang.Override",
          "30740:     public com.google.protobuf.ByteString",
          "30743:       if (ref instanceof java.lang.String) {",
          "30744:         com.google.protobuf.ByteString b =",
          "30745:             com.google.protobuf.ByteString.copyFromUtf8(",
          "30746:                 (java.lang.String) ref);",
          "30748:         return b;",
          "30749:       } else {",
          "30750:         return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "30725:           runUuid_ = s;",
          "30741:         getRunUuidBytes() {",
          "30742:       java.lang.Object ref = runUuid_;",
          "30747:         runUuid_ = b;",
          "",
          "[Added Lines]",
          "37551:           experimentId_ = s;",
          "37566:         getExperimentIdBytes() {",
          "37567:       java.lang.Object ref = experimentId_;",
          "37572:         experimentId_ = b;",
          "",
          "---------------",
          "--- Hunk 449 ---",
          "[Context before]",
          "30764:     @java.lang.Override",
          "30765:     public boolean hasKey() {",
          "30767:     }",
          "",
          "[Removed Lines]",
          "30766:       return ((bitField0_ & 0x00000004) != 0);",
          "",
          "[Added Lines]",
          "37592:       return ((bitField0_ & 0x00000002) != 0);",
          "",
          "---------------",
          "--- Hunk 450 ---",
          "[Context before]",
          "30824:     @java.lang.Override",
          "30825:     public boolean hasValue() {",
          "30827:     }",
          "",
          "[Removed Lines]",
          "30826:       return ((bitField0_ & 0x00000008) != 0);",
          "",
          "[Added Lines]",
          "37655:       return ((bitField0_ & 0x00000004) != 0);",
          "",
          "---------------",
          "--- Hunk 451 ---",
          "[Context before]",
          "30885:     @java.lang.Override",
          "30886:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "30887:                         throws java.io.IOException {",
          "30890:       }",
          "30892:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);",
          "30893:       }",
          "30895:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);",
          "30896:       }",
          "30900:       unknownFields.writeTo(output);",
          "30901:     }",
          "",
          "[Removed Lines]",
          "30888:       if (((bitField0_ & 0x00000002) != 0)) {",
          "30889:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "30891:       if (((bitField0_ & 0x00000004) != 0)) {",
          "30894:       if (((bitField0_ & 0x00000008) != 0)) {",
          "30897:       if (((bitField0_ & 0x00000001) != 0)) {",
          "30898:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, runId_);",
          "30899:       }",
          "",
          "[Added Lines]",
          "37719:       if (((bitField0_ & 0x00000001) != 0)) {",
          "37720:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "37722:       if (((bitField0_ & 0x00000002) != 0)) {",
          "37725:       if (((bitField0_ & 0x00000004) != 0)) {",
          "",
          "---------------",
          "--- Hunk 452 ---",
          "[Context before]",
          "30906:       if (size != -1) return size;",
          "30908:       size = 0;",
          "30911:       }",
          "30913:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);",
          "30914:       }",
          "30916:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);",
          "30917:       }",
          "30921:       size += unknownFields.getSerializedSize();",
          "30922:       memoizedSize = size;",
          "30923:       return size;",
          "",
          "[Removed Lines]",
          "30909:       if (((bitField0_ & 0x00000002) != 0)) {",
          "30910:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "30912:       if (((bitField0_ & 0x00000004) != 0)) {",
          "30915:       if (((bitField0_ & 0x00000008) != 0)) {",
          "30918:       if (((bitField0_ & 0x00000001) != 0)) {",
          "30919:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, runId_);",
          "30920:       }",
          "",
          "[Added Lines]",
          "37737:       if (((bitField0_ & 0x00000001) != 0)) {",
          "37738:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "37740:       if (((bitField0_ & 0x00000002) != 0)) {",
          "37743:       if (((bitField0_ & 0x00000004) != 0)) {",
          "",
          "---------------",
          "--- Hunk 453 ---",
          "[Context before]",
          "30928:       if (obj == this) {",
          "30929:        return true;",
          "30930:       }",
          "30932:         return super.equals(obj);",
          "30933:       }",
          "30945:       }",
          "30946:       if (hasKey() != other.hasKey()) return false;",
          "30947:       if (hasKey()) {",
          "",
          "[Removed Lines]",
          "30931:       if (!(obj instanceof org.mlflow.api.proto.Service.LogParam)) {",
          "30934:       org.mlflow.api.proto.Service.LogParam other = (org.mlflow.api.proto.Service.LogParam) obj;",
          "30936:       if (hasRunId() != other.hasRunId()) return false;",
          "30937:       if (hasRunId()) {",
          "30938:         if (!getRunId()",
          "30939:             .equals(other.getRunId())) return false;",
          "30940:       }",
          "30941:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "30942:       if (hasRunUuid()) {",
          "30943:         if (!getRunUuid()",
          "30944:             .equals(other.getRunUuid())) return false;",
          "",
          "[Added Lines]",
          "37756:       if (!(obj instanceof org.mlflow.api.proto.Service.SetExperimentTag)) {",
          "37759:       org.mlflow.api.proto.Service.SetExperimentTag other = (org.mlflow.api.proto.Service.SetExperimentTag) obj;",
          "37761:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "37762:       if (hasExperimentId()) {",
          "37763:         if (!getExperimentId()",
          "37764:             .equals(other.getExperimentId())) return false;",
          "",
          "---------------",
          "--- Hunk 454 ---",
          "[Context before]",
          "30964:       }",
          "30965:       int hash = 41;",
          "30966:       hash = (19 * hash) + getDescriptor().hashCode();",
          "30974:       }",
          "30975:       if (hasKey()) {",
          "30976:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "",
          "[Removed Lines]",
          "30967:       if (hasRunId()) {",
          "30968:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "30969:         hash = (53 * hash) + getRunId().hashCode();",
          "30970:       }",
          "30971:       if (hasRunUuid()) {",
          "30972:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "30973:         hash = (53 * hash) + getRunUuid().hashCode();",
          "",
          "[Added Lines]",
          "37787:       if (hasExperimentId()) {",
          "37788:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "37789:         hash = (53 * hash) + getExperimentId().hashCode();",
          "",
          "---------------",
          "--- Hunk 455 ---",
          "[Context before]",
          "30985:       return hash;",
          "30986:     }",
          "30989:         java.nio.ByteBuffer data)",
          "30990:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "30991:       return PARSER.parseFrom(data);",
          "30992:     }",
          "30994:         java.nio.ByteBuffer data,",
          "30995:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "30996:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "30997:       return PARSER.parseFrom(data, extensionRegistry);",
          "30998:     }",
          "31000:         com.google.protobuf.ByteString data)",
          "31001:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "31002:       return PARSER.parseFrom(data);",
          "31003:     }",
          "31005:         com.google.protobuf.ByteString data,",
          "31006:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31007:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "31008:       return PARSER.parseFrom(data, extensionRegistry);",
          "31009:     }",
          "31011:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "31012:       return PARSER.parseFrom(data);",
          "31013:     }",
          "31015:         byte[] data,",
          "31016:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31017:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "31018:       return PARSER.parseFrom(data, extensionRegistry);",
          "31019:     }",
          "31021:         throws java.io.IOException {",
          "31022:       return com.google.protobuf.GeneratedMessageV3",
          "31023:           .parseWithIOException(PARSER, input);",
          "31024:     }",
          "31026:         java.io.InputStream input,",
          "31027:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31028:         throws java.io.IOException {",
          "31029:       return com.google.protobuf.GeneratedMessageV3",
          "31030:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "31031:     }",
          "31033:         throws java.io.IOException {",
          "31034:       return com.google.protobuf.GeneratedMessageV3",
          "31035:           .parseDelimitedWithIOException(PARSER, input);",
          "31036:     }",
          "31038:         java.io.InputStream input,",
          "31039:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31040:         throws java.io.IOException {",
          "31041:       return com.google.protobuf.GeneratedMessageV3",
          "31042:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "31043:     }",
          "31045:         com.google.protobuf.CodedInputStream input)",
          "31046:         throws java.io.IOException {",
          "31047:       return com.google.protobuf.GeneratedMessageV3",
          "31048:           .parseWithIOException(PARSER, input);",
          "31049:     }",
          "31051:         com.google.protobuf.CodedInputStream input,",
          "31052:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31053:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "30988:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "30993:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "30999:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "31004:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "31010:     public static org.mlflow.api.proto.Service.LogParam parseFrom(byte[] data)",
          "31014:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "31020:     public static org.mlflow.api.proto.Service.LogParam parseFrom(java.io.InputStream input)",
          "31025:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "31032:     public static org.mlflow.api.proto.Service.LogParam parseDelimitedFrom(java.io.InputStream input)",
          "31037:     public static org.mlflow.api.proto.Service.LogParam parseDelimitedFrom(",
          "31044:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "31050:     public static org.mlflow.api.proto.Service.LogParam parseFrom(",
          "",
          "[Added Lines]",
          "37804:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "37809:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "37815:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "37820:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "37826:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(byte[] data)",
          "37830:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "37836:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(java.io.InputStream input)",
          "37841:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "37848:     public static org.mlflow.api.proto.Service.SetExperimentTag parseDelimitedFrom(java.io.InputStream input)",
          "37853:     public static org.mlflow.api.proto.Service.SetExperimentTag parseDelimitedFrom(",
          "37860:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "37866:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "",
          "---------------",
          "--- Hunk 456 ---",
          "[Context before]",
          "31060:     public static Builder newBuilder() {",
          "31061:       return DEFAULT_INSTANCE.toBuilder();",
          "31062:     }",
          "31064:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "31065:     }",
          "31066:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "31063:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogParam prototype) {",
          "",
          "[Added Lines]",
          "37879:     public static Builder newBuilder(org.mlflow.api.proto.Service.SetExperimentTag prototype) {",
          "",
          "---------------",
          "--- Hunk 457 ---",
          "[Context before]",
          "31076:       return builder;",
          "31077:     }",
          "31081:     public static final class Builder extends",
          "31082:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "31085:       public static final com.google.protobuf.Descriptors.Descriptor",
          "31086:           getDescriptor() {",
          "31088:       }",
          "31090:       @java.lang.Override",
          "31091:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "31092:           internalGetFieldAccessorTable() {",
          "31094:             .ensureFieldAccessorsInitialized(",
          "31096:       }",
          "31099:       private Builder() {",
          "31100:         maybeForceBuilderInitialization();",
          "31101:       }",
          "",
          "[Removed Lines]",
          "31084:         org.mlflow.api.proto.Service.LogParamOrBuilder {",
          "31087:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_descriptor;",
          "31093:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_fieldAccessorTable",
          "31095:                 org.mlflow.api.proto.Service.LogParam.class, org.mlflow.api.proto.Service.LogParam.Builder.class);",
          "",
          "[Added Lines]",
          "37900:         org.mlflow.api.proto.Service.SetExperimentTagOrBuilder {",
          "37903:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_descriptor;",
          "37909:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_fieldAccessorTable",
          "37911:                 org.mlflow.api.proto.Service.SetExperimentTag.class, org.mlflow.api.proto.Service.SetExperimentTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 458 ---",
          "[Context before]",
          "31113:       @java.lang.Override",
          "31114:       public Builder clear() {",
          "31115:         super.clear();",
          "31117:         bitField0_ = (bitField0_ & ~0x00000001);",
          "31120:         key_ = \"\";",
          "31122:         value_ = \"\";",
          "31124:         return this;",
          "31125:       }",
          "31127:       @java.lang.Override",
          "31128:       public com.google.protobuf.Descriptors.Descriptor",
          "31129:           getDescriptorForType() {",
          "31131:       }",
          "31133:       @java.lang.Override",
          "31136:       }",
          "31138:       @java.lang.Override",
          "31141:         if (!result.isInitialized()) {",
          "31142:           throw newUninitializedMessageException(result);",
          "31143:         }",
          "",
          "[Removed Lines]",
          "31116:         runId_ = \"\";",
          "31118:         runUuid_ = \"\";",
          "31119:         bitField0_ = (bitField0_ & ~0x00000002);",
          "31121:         bitField0_ = (bitField0_ & ~0x00000004);",
          "31123:         bitField0_ = (bitField0_ & ~0x00000008);",
          "31130:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogParam_descriptor;",
          "31134:       public org.mlflow.api.proto.Service.LogParam getDefaultInstanceForType() {",
          "31135:         return org.mlflow.api.proto.Service.LogParam.getDefaultInstance();",
          "31139:       public org.mlflow.api.proto.Service.LogParam build() {",
          "31140:         org.mlflow.api.proto.Service.LogParam result = buildPartial();",
          "",
          "[Added Lines]",
          "37932:         experimentId_ = \"\";",
          "37935:         bitField0_ = (bitField0_ & ~0x00000002);",
          "37937:         bitField0_ = (bitField0_ & ~0x00000004);",
          "37944:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_descriptor;",
          "37948:       public org.mlflow.api.proto.Service.SetExperimentTag getDefaultInstanceForType() {",
          "37949:         return org.mlflow.api.proto.Service.SetExperimentTag.getDefaultInstance();",
          "37953:       public org.mlflow.api.proto.Service.SetExperimentTag build() {",
          "37954:         org.mlflow.api.proto.Service.SetExperimentTag result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 459 ---",
          "[Context before]",
          "31145:       }",
          "31147:       @java.lang.Override",
          "31150:         int from_bitField0_ = bitField0_;",
          "31151:         int to_bitField0_ = 0;",
          "31152:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "31153:           to_bitField0_ |= 0x00000001;",
          "31154:         }",
          "31156:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "31157:           to_bitField0_ |= 0x00000002;",
          "31158:         }",
          "31160:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "31161:           to_bitField0_ |= 0x00000004;",
          "31162:         }",
          "31167:         result.value_ = value_;",
          "31168:         result.bitField0_ = to_bitField0_;",
          "31169:         onBuilt();",
          "",
          "[Removed Lines]",
          "31148:       public org.mlflow.api.proto.Service.LogParam buildPartial() {",
          "31149:         org.mlflow.api.proto.Service.LogParam result = new org.mlflow.api.proto.Service.LogParam(this);",
          "31155:         result.runId_ = runId_;",
          "31159:         result.runUuid_ = runUuid_;",
          "31163:         result.key_ = key_;",
          "31164:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "31165:           to_bitField0_ |= 0x00000008;",
          "31166:         }",
          "",
          "[Added Lines]",
          "37962:       public org.mlflow.api.proto.Service.SetExperimentTag buildPartial() {",
          "37963:         org.mlflow.api.proto.Service.SetExperimentTag result = new org.mlflow.api.proto.Service.SetExperimentTag(this);",
          "37969:         result.experimentId_ = experimentId_;",
          "37973:         result.key_ = key_;",
          "",
          "---------------",
          "--- Hunk 460 ---",
          "[Context before]",
          "31204:       }",
          "31205:       @java.lang.Override",
          "31206:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "31209:         } else {",
          "31210:           super.mergeFrom(other);",
          "31211:           return this;",
          "31212:         }",
          "31213:       }",
          "31218:           bitField0_ |= 0x00000001;",
          "31225:           onChanged();",
          "31226:         }",
          "31227:         if (other.hasKey()) {",
          "31229:           key_ = other.key_;",
          "31230:           onChanged();",
          "31231:         }",
          "31232:         if (other.hasValue()) {",
          "31234:           value_ = other.value_;",
          "31235:           onChanged();",
          "31236:         }",
          "",
          "[Removed Lines]",
          "31207:         if (other instanceof org.mlflow.api.proto.Service.LogParam) {",
          "31208:           return mergeFrom((org.mlflow.api.proto.Service.LogParam)other);",
          "31215:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogParam other) {",
          "31216:         if (other == org.mlflow.api.proto.Service.LogParam.getDefaultInstance()) return this;",
          "31217:         if (other.hasRunId()) {",
          "31219:           runId_ = other.runId_;",
          "31220:           onChanged();",
          "31221:         }",
          "31222:         if (other.hasRunUuid()) {",
          "31223:           bitField0_ |= 0x00000002;",
          "31224:           runUuid_ = other.runUuid_;",
          "31228:           bitField0_ |= 0x00000004;",
          "31233:           bitField0_ |= 0x00000008;",
          "",
          "[Added Lines]",
          "38017:         if (other instanceof org.mlflow.api.proto.Service.SetExperimentTag) {",
          "38018:           return mergeFrom((org.mlflow.api.proto.Service.SetExperimentTag)other);",
          "38025:       public Builder mergeFrom(org.mlflow.api.proto.Service.SetExperimentTag other) {",
          "38026:         if (other == org.mlflow.api.proto.Service.SetExperimentTag.getDefaultInstance()) return this;",
          "38027:         if (other.hasExperimentId()) {",
          "38029:           experimentId_ = other.experimentId_;",
          "38033:           bitField0_ |= 0x00000002;",
          "38038:           bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 461 ---",
          "[Context before]",
          "31249:           com.google.protobuf.CodedInputStream input,",
          "31250:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31251:           throws java.io.IOException {",
          "31253:         try {",
          "31254:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "31255:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "31257:           throw e.unwrapIOException();",
          "31258:         } finally {",
          "31259:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "31252:         org.mlflow.api.proto.Service.LogParam parsedMessage = null;",
          "31256:           parsedMessage = (org.mlflow.api.proto.Service.LogParam) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "38057:         org.mlflow.api.proto.Service.SetExperimentTag parsedMessage = null;",
          "38061:           parsedMessage = (org.mlflow.api.proto.Service.SetExperimentTag) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 462 ---",
          "[Context before]",
          "31264:       }",
          "31265:       private int bitField0_;",
          "31277:         return ((bitField0_ & 0x00000001) != 0);",
          "31278:       }",
          "31289:         if (!(ref instanceof java.lang.String)) {",
          "31290:           com.google.protobuf.ByteString bs =",
          "31291:               (com.google.protobuf.ByteString) ref;",
          "31292:           java.lang.String s = bs.toStringUtf8();",
          "31293:           if (bs.isValidUtf8()) {",
          "31295:           }",
          "31296:           return s;",
          "31297:         } else {",
          "",
          "[Removed Lines]",
          "31267:       private java.lang.Object runId_ = \"\";",
          "31276:       public boolean hasRunId() {",
          "31287:       public java.lang.String getRunId() {",
          "31288:         java.lang.Object ref = runId_;",
          "31294:             runId_ = s;",
          "",
          "[Added Lines]",
          "38072:       private java.lang.Object experimentId_ = \"\";",
          "38081:       public boolean hasExperimentId() {",
          "38092:       public java.lang.String getExperimentId() {",
          "38093:         java.lang.Object ref = experimentId_;",
          "38099:             experimentId_ = s;",
          "",
          "---------------",
          "--- Hunk 463 ---",
          "[Context before]",
          "31300:       }",
          "31309:       public com.google.protobuf.ByteString",
          "31312:         if (ref instanceof String) {",
          "31313:           com.google.protobuf.ByteString b =",
          "31314:               com.google.protobuf.ByteString.copyFromUtf8(",
          "31315:                   (java.lang.String) ref);",
          "31317:           return b;",
          "31318:         } else {",
          "31319:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "31310:           getRunIdBytes() {",
          "31311:         java.lang.Object ref = runId_;",
          "31316:           runId_ = b;",
          "",
          "[Added Lines]",
          "38115:           getExperimentIdBytes() {",
          "38116:         java.lang.Object ref = experimentId_;",
          "38121:           experimentId_ = b;",
          "",
          "---------------",
          "--- Hunk 464 ---",
          "[Context before]",
          "31321:       }",
          "31332:           java.lang.String value) {",
          "31333:         if (value == null) {",
          "31334:     throw new NullPointerException();",
          "31335:   }",
          "31336:   bitField0_ |= 0x00000001;",
          "31338:         onChanged();",
          "31339:         return this;",
          "31340:       }",
          "31350:         bitField0_ = (bitField0_ & ~0x00000001);",
          "31352:         onChanged();",
          "31353:         return this;",
          "31354:       }",
          "31365:           com.google.protobuf.ByteString value) {",
          "31366:         if (value == null) {",
          "31367:     throw new NullPointerException();",
          "31368:   }",
          "31369:   bitField0_ |= 0x00000001;",
          "31485:         onChanged();",
          "31486:         return this;",
          "31487:       }",
          "",
          "[Removed Lines]",
          "31331:       public Builder setRunId(",
          "31337:         runId_ = value;",
          "31349:       public Builder clearRunId() {",
          "31351:         runId_ = getDefaultInstance().getRunId();",
          "31364:       public Builder setRunIdBytes(",
          "31370:         runId_ = value;",
          "31371:         onChanged();",
          "31372:         return this;",
          "31373:       }",
          "31375:       private java.lang.Object runUuid_ = \"\";",
          "31385:       public boolean hasRunUuid() {",
          "31386:         return ((bitField0_ & 0x00000002) != 0);",
          "31387:       }",
          "31397:       public java.lang.String getRunUuid() {",
          "31398:         java.lang.Object ref = runUuid_;",
          "31399:         if (!(ref instanceof java.lang.String)) {",
          "31400:           com.google.protobuf.ByteString bs =",
          "31401:               (com.google.protobuf.ByteString) ref;",
          "31402:           java.lang.String s = bs.toStringUtf8();",
          "31403:           if (bs.isValidUtf8()) {",
          "31404:             runUuid_ = s;",
          "31405:           }",
          "31406:           return s;",
          "31407:         } else {",
          "31408:           return (java.lang.String) ref;",
          "31409:         }",
          "31410:       }",
          "31420:       public com.google.protobuf.ByteString",
          "31421:           getRunUuidBytes() {",
          "31422:         java.lang.Object ref = runUuid_;",
          "31423:         if (ref instanceof String) {",
          "31424:           com.google.protobuf.ByteString b =",
          "31425:               com.google.protobuf.ByteString.copyFromUtf8(",
          "31426:                   (java.lang.String) ref);",
          "31427:           runUuid_ = b;",
          "31428:           return b;",
          "31429:         } else {",
          "31430:           return (com.google.protobuf.ByteString) ref;",
          "31431:         }",
          "31432:       }",
          "31443:       public Builder setRunUuid(",
          "31444:           java.lang.String value) {",
          "31445:         if (value == null) {",
          "31446:     throw new NullPointerException();",
          "31447:   }",
          "31448:   bitField0_ |= 0x00000002;",
          "31449:         runUuid_ = value;",
          "31450:         onChanged();",
          "31451:         return this;",
          "31452:       }",
          "31462:       public Builder clearRunUuid() {",
          "31463:         bitField0_ = (bitField0_ & ~0x00000002);",
          "31464:         runUuid_ = getDefaultInstance().getRunUuid();",
          "31465:         onChanged();",
          "31466:         return this;",
          "31467:       }",
          "31478:       public Builder setRunUuidBytes(",
          "31479:           com.google.protobuf.ByteString value) {",
          "31480:         if (value == null) {",
          "31481:     throw new NullPointerException();",
          "31482:   }",
          "31483:   bitField0_ |= 0x00000002;",
          "31484:         runUuid_ = value;",
          "",
          "[Added Lines]",
          "38136:       public Builder setExperimentId(",
          "38142:         experimentId_ = value;",
          "38154:       public Builder clearExperimentId() {",
          "38156:         experimentId_ = getDefaultInstance().getExperimentId();",
          "38169:       public Builder setExperimentIdBytes(",
          "38175:         experimentId_ = value;",
          "",
          "---------------",
          "--- Hunk 465 ---",
          "[Context before]",
          "31489:       private java.lang.Object key_ = \"\";",
          "31498:       public boolean hasKey() {",
          "31500:       }",
          "",
          "[Removed Lines]",
          "31499:         return ((bitField0_ & 0x00000004) != 0);",
          "",
          "[Added Lines]",
          "38191:         return ((bitField0_ & 0x00000002) != 0);",
          "",
          "---------------",
          "--- Hunk 466 ---",
          "[Context before]",
          "31555:         if (value == null) {",
          "31556:     throw new NullPointerException();",
          "31557:   }",
          "31559:         key_ = value;",
          "31560:         onChanged();",
          "31561:         return this;",
          "31562:       }",
          "31571:       public Builder clearKey() {",
          "31573:         key_ = getDefaultInstance().getKey();",
          "31574:         onChanged();",
          "31575:         return this;",
          "31576:       }",
          "",
          "[Removed Lines]",
          "31558:   bitField0_ |= 0x00000004;",
          "31572:         bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "[Added Lines]",
          "38253:   bitField0_ |= 0x00000002;",
          "38268:         bitField0_ = (bitField0_ & ~0x00000002);",
          "",
          "---------------",
          "--- Hunk 467 ---",
          "[Context before]",
          "31588:         if (value == null) {",
          "31589:     throw new NullPointerException();",
          "31590:   }",
          "31592:         key_ = value;",
          "31593:         onChanged();",
          "31594:         return this;",
          "",
          "[Removed Lines]",
          "31591:   bitField0_ |= 0x00000004;",
          "",
          "[Added Lines]",
          "38288:   bitField0_ |= 0x00000002;",
          "",
          "---------------",
          "--- Hunk 468 ---",
          "[Context before]",
          "31597:       private java.lang.Object value_ = \"\";",
          "31606:       public boolean hasValue() {",
          "31608:       }",
          "",
          "[Removed Lines]",
          "31607:         return ((bitField0_ & 0x00000008) != 0);",
          "",
          "[Added Lines]",
          "38305:         return ((bitField0_ & 0x00000004) != 0);",
          "",
          "---------------",
          "--- Hunk 469 ---",
          "[Context before]",
          "31663:         if (value == null) {",
          "31664:     throw new NullPointerException();",
          "31665:   }",
          "31667:         value_ = value;",
          "31668:         onChanged();",
          "31669:         return this;",
          "31670:       }",
          "31679:       public Builder clearValue() {",
          "31681:         value_ = getDefaultInstance().getValue();",
          "31682:         onChanged();",
          "31683:         return this;",
          "31684:       }",
          "",
          "[Removed Lines]",
          "31666:   bitField0_ |= 0x00000008;",
          "31680:         bitField0_ = (bitField0_ & ~0x00000008);",
          "",
          "[Added Lines]",
          "38367:   bitField0_ |= 0x00000004;",
          "38382:         bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 470 ---",
          "[Context before]",
          "31696:         if (value == null) {",
          "31697:     throw new NullPointerException();",
          "31698:   }",
          "31700:         value_ = value;",
          "31701:         onChanged();",
          "31702:         return this;",
          "",
          "[Removed Lines]",
          "31699:   bitField0_ |= 0x00000008;",
          "",
          "[Added Lines]",
          "38402:   bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 471 ---",
          "[Context before]",
          "31714:       }",
          "31718:     }",
          "31722:     static {",
          "31724:     }",
          "31727:       return DEFAULT_INSTANCE;",
          "31728:     }",
          "31732:       @java.lang.Override",
          "31734:           com.google.protobuf.CodedInputStream input,",
          "31735:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31736:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "31738:       }",
          "31739:     };",
          "31742:       return PARSER;",
          "31743:     }",
          "31745:     @java.lang.Override",
          "31747:       return PARSER;",
          "31748:     }",
          "31750:     @java.lang.Override",
          "31752:       return DEFAULT_INSTANCE;",
          "31753:     }",
          "31755:   }",
          "31759:       com.google.protobuf.MessageOrBuilder {",
          "31787:     com.google.protobuf.ByteString",
          "",
          "[Removed Lines]",
          "31721:     private static final org.mlflow.api.proto.Service.LogParam DEFAULT_INSTANCE;",
          "31723:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogParam();",
          "31726:     public static org.mlflow.api.proto.Service.LogParam getDefaultInstance() {",
          "31730:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogParam>",
          "31731:         PARSER = new com.google.protobuf.AbstractParser<LogParam>() {",
          "31733:       public LogParam parsePartialFrom(",
          "31737:         return new LogParam(input, extensionRegistry);",
          "31741:     public static com.google.protobuf.Parser<LogParam> parser() {",
          "31746:     public com.google.protobuf.Parser<LogParam> getParserForType() {",
          "31751:     public org.mlflow.api.proto.Service.LogParam getDefaultInstanceForType() {",
          "31757:   public interface SetExperimentTagOrBuilder extends",
          "31769:     boolean hasExperimentId();",
          "31778:     java.lang.String getExperimentId();",
          "31788:         getExperimentIdBytes();",
          "",
          "[Added Lines]",
          "38424:     private static final org.mlflow.api.proto.Service.SetExperimentTag DEFAULT_INSTANCE;",
          "38426:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetExperimentTag();",
          "38429:     public static org.mlflow.api.proto.Service.SetExperimentTag getDefaultInstance() {",
          "38433:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SetExperimentTag>",
          "38434:         PARSER = new com.google.protobuf.AbstractParser<SetExperimentTag>() {",
          "38436:       public SetExperimentTag parsePartialFrom(",
          "38440:         return new SetExperimentTag(input, extensionRegistry);",
          "38444:     public static com.google.protobuf.Parser<SetExperimentTag> parser() {",
          "38449:     public com.google.protobuf.Parser<SetExperimentTag> getParserForType() {",
          "38454:     public org.mlflow.api.proto.Service.SetExperimentTag getDefaultInstanceForType() {",
          "38460:   public interface SetTagOrBuilder extends",
          "38472:     boolean hasRunId();",
          "38481:     java.lang.String getRunId();",
          "38491:         getRunIdBytes();",
          "38502:     boolean hasRunUuid();",
          "38512:     java.lang.String getRunUuid();",
          "38522:     com.google.protobuf.ByteString",
          "38523:         getRunUuidBytes();",
          "",
          "---------------",
          "--- Hunk 472 ---",
          "[Context before]",
          "31852:         getValueBytes();",
          "31853:   }",
          "31858:       com.google.protobuf.GeneratedMessageV3 implements",
          "31861:   private static final long serialVersionUID = 0L;",
          "31864:       super(builder);",
          "31865:     }",
          "31868:       key_ = \"\";",
          "31869:       value_ = \"\";",
          "31870:     }",
          "",
          "[Removed Lines]",
          "31857:   public static final class SetExperimentTag extends",
          "31860:       SetExperimentTagOrBuilder {",
          "31863:     private SetExperimentTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "31866:     private SetExperimentTag() {",
          "31867:       experimentId_ = \"\";",
          "",
          "[Added Lines]",
          "38592:   public static final class SetTag extends",
          "38595:       SetTagOrBuilder {",
          "38598:     private SetTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "38601:     private SetTag() {",
          "38602:       runId_ = \"\";",
          "38603:       runUuid_ = \"\";",
          "",
          "---------------",
          "--- Hunk 473 ---",
          "[Context before]",
          "31873:     @SuppressWarnings({\"unused\"})",
          "31874:     protected java.lang.Object newInstance(",
          "31875:         UnusedPrivateParameter unused) {",
          "31877:     }",
          "31879:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "31876:       return new SetExperimentTag();",
          "",
          "[Added Lines]",
          "38612:       return new SetTag();",
          "",
          "---------------",
          "--- Hunk 474 ---",
          "[Context before]",
          "31881:     getUnknownFields() {",
          "31882:       return this.unknownFields;",
          "31883:     }",
          "31885:         com.google.protobuf.CodedInputStream input,",
          "31886:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "31887:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "31884:     private SetExperimentTag(",
          "",
          "[Added Lines]",
          "38620:     private SetTag(",
          "",
          "---------------",
          "--- Hunk 475 ---",
          "[Context before]",
          "31902:               break;",
          "31903:             case 10: {",
          "31904:               com.google.protobuf.ByteString bs = input.readBytes();",
          "31907:               break;",
          "31908:             }",
          "31909:             case 18: {",
          "31910:               com.google.protobuf.ByteString bs = input.readBytes();",
          "31912:               key_ = bs;",
          "31913:               break;",
          "31914:             }",
          "31915:             case 26: {",
          "31916:               com.google.protobuf.ByteString bs = input.readBytes();",
          "31918:               value_ = bs;",
          "31919:               break;",
          "31920:             }",
          "31921:             default: {",
          "31922:               if (!parseUnknownField(",
          "31923:                   input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "31905:               bitField0_ |= 0x00000001;",
          "31906:               experimentId_ = bs;",
          "31911:               bitField0_ |= 0x00000002;",
          "31917:               bitField0_ |= 0x00000004;",
          "",
          "[Added Lines]",
          "38641:               bitField0_ |= 0x00000002;",
          "38642:               runUuid_ = bs;",
          "38647:               bitField0_ |= 0x00000004;",
          "38653:               bitField0_ |= 0x00000008;",
          "38657:             case 34: {",
          "38658:               com.google.protobuf.ByteString bs = input.readBytes();",
          "38659:               bitField0_ |= 0x00000001;",
          "38660:               runId_ = bs;",
          "38661:               break;",
          "38662:             }",
          "",
          "---------------",
          "--- Hunk 476 ---",
          "[Context before]",
          "31939:     }",
          "31940:     public static final com.google.protobuf.Descriptors.Descriptor",
          "31941:         getDescriptor() {",
          "31943:     }",
          "31945:     @java.lang.Override",
          "31946:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "31947:         internalGetFieldAccessorTable() {",
          "31949:           .ensureFieldAccessorsInitialized(",
          "31951:     }",
          "31953:     public interface ResponseOrBuilder extends",
          "31955:         com.google.protobuf.MessageOrBuilder {",
          "31956:     }",
          "31960:     public static final class Response extends",
          "31961:         com.google.protobuf.GeneratedMessageV3 implements",
          "31963:         ResponseOrBuilder {",
          "31964:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "31942:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_descriptor;",
          "31948:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_fieldAccessorTable",
          "31950:               org.mlflow.api.proto.Service.SetExperimentTag.class, org.mlflow.api.proto.Service.SetExperimentTag.Builder.class);",
          "",
          "[Added Lines]",
          "38684:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_descriptor;",
          "38690:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_fieldAccessorTable",
          "38692:               org.mlflow.api.proto.Service.SetTag.class, org.mlflow.api.proto.Service.SetTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 477 ---",
          "[Context before]",
          "32020:       }",
          "32021:       public static final com.google.protobuf.Descriptors.Descriptor",
          "32022:           getDescriptor() {",
          "32024:       }",
          "32026:       @java.lang.Override",
          "32027:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "32028:           internalGetFieldAccessorTable() {",
          "32030:             .ensureFieldAccessorsInitialized(",
          "32032:       }",
          "32034:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "32023:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_descriptor;",
          "32029:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_fieldAccessorTable",
          "32031:                 org.mlflow.api.proto.Service.SetExperimentTag.Response.class, org.mlflow.api.proto.Service.SetExperimentTag.Response.Builder.class);",
          "",
          "[Added Lines]",
          "38765:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_descriptor;",
          "38771:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_fieldAccessorTable",
          "38773:                 org.mlflow.api.proto.Service.SetTag.Response.class, org.mlflow.api.proto.Service.SetTag.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 478 ---",
          "[Context before]",
          "32064:         if (obj == this) {",
          "32065:          return true;",
          "32066:         }",
          "32068:           return super.equals(obj);",
          "32069:         }",
          "32072:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "32073:         return true;",
          "",
          "[Removed Lines]",
          "32067:         if (!(obj instanceof org.mlflow.api.proto.Service.SetExperimentTag.Response)) {",
          "32070:         org.mlflow.api.proto.Service.SetExperimentTag.Response other = (org.mlflow.api.proto.Service.SetExperimentTag.Response) obj;",
          "",
          "[Added Lines]",
          "38809:         if (!(obj instanceof org.mlflow.api.proto.Service.SetTag.Response)) {",
          "38812:         org.mlflow.api.proto.Service.SetTag.Response other = (org.mlflow.api.proto.Service.SetTag.Response) obj;",
          "",
          "---------------",
          "--- Hunk 479 ---",
          "[Context before]",
          "32085:         return hash;",
          "32086:       }",
          "32089:           java.nio.ByteBuffer data)",
          "32090:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "32091:         return PARSER.parseFrom(data);",
          "32092:       }",
          "32094:           java.nio.ByteBuffer data,",
          "32095:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32096:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "32097:         return PARSER.parseFrom(data, extensionRegistry);",
          "32098:       }",
          "32100:           com.google.protobuf.ByteString data)",
          "32101:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "32102:         return PARSER.parseFrom(data);",
          "32103:       }",
          "32105:           com.google.protobuf.ByteString data,",
          "32106:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32107:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "32108:         return PARSER.parseFrom(data, extensionRegistry);",
          "32109:       }",
          "32111:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "32112:         return PARSER.parseFrom(data);",
          "32113:       }",
          "32115:           byte[] data,",
          "32116:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32117:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "32118:         return PARSER.parseFrom(data, extensionRegistry);",
          "32119:       }",
          "32121:           throws java.io.IOException {",
          "32122:         return com.google.protobuf.GeneratedMessageV3",
          "32123:             .parseWithIOException(PARSER, input);",
          "32124:       }",
          "32126:           java.io.InputStream input,",
          "32127:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32128:           throws java.io.IOException {",
          "32129:         return com.google.protobuf.GeneratedMessageV3",
          "32130:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "32131:       }",
          "32133:           throws java.io.IOException {",
          "32134:         return com.google.protobuf.GeneratedMessageV3",
          "32135:             .parseDelimitedWithIOException(PARSER, input);",
          "32136:       }",
          "32138:           java.io.InputStream input,",
          "32139:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32140:           throws java.io.IOException {",
          "32141:         return com.google.protobuf.GeneratedMessageV3",
          "32142:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "32143:       }",
          "32145:           com.google.protobuf.CodedInputStream input)",
          "32146:           throws java.io.IOException {",
          "32147:         return com.google.protobuf.GeneratedMessageV3",
          "32148:             .parseWithIOException(PARSER, input);",
          "32149:       }",
          "32151:           com.google.protobuf.CodedInputStream input,",
          "32152:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32153:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "32088:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "32093:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "32099:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "32104:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "32110:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(byte[] data)",
          "32114:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "32120:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(java.io.InputStream input)",
          "32125:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "32132:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseDelimitedFrom(java.io.InputStream input)",
          "32137:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseDelimitedFrom(",
          "32144:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "32150:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response parseFrom(",
          "",
          "[Added Lines]",
          "38830:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "38835:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "38841:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "38846:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "38852:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(byte[] data)",
          "38856:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "38862:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(java.io.InputStream input)",
          "38867:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "38874:       public static org.mlflow.api.proto.Service.SetTag.Response parseDelimitedFrom(java.io.InputStream input)",
          "38879:       public static org.mlflow.api.proto.Service.SetTag.Response parseDelimitedFrom(",
          "38886:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "38892:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 480 ---",
          "[Context before]",
          "32160:       public static Builder newBuilder() {",
          "32161:         return DEFAULT_INSTANCE.toBuilder();",
          "32162:       }",
          "32164:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "32165:       }",
          "32166:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "32163:       public static Builder newBuilder(org.mlflow.api.proto.Service.SetExperimentTag.Response prototype) {",
          "",
          "[Added Lines]",
          "38905:       public static Builder newBuilder(org.mlflow.api.proto.Service.SetTag.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 481 ---",
          "[Context before]",
          "32176:         return builder;",
          "32177:       }",
          "32181:       public static final class Builder extends",
          "32182:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "32185:         public static final com.google.protobuf.Descriptors.Descriptor",
          "32186:             getDescriptor() {",
          "32188:         }",
          "32190:         @java.lang.Override",
          "32191:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "32192:             internalGetFieldAccessorTable() {",
          "32194:               .ensureFieldAccessorsInitialized(",
          "32196:         }",
          "32199:         private Builder() {",
          "32200:           maybeForceBuilderInitialization();",
          "32201:         }",
          "",
          "[Removed Lines]",
          "32184:           org.mlflow.api.proto.Service.SetExperimentTag.ResponseOrBuilder {",
          "32187:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_descriptor;",
          "32193:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_fieldAccessorTable",
          "32195:                   org.mlflow.api.proto.Service.SetExperimentTag.Response.class, org.mlflow.api.proto.Service.SetExperimentTag.Response.Builder.class);",
          "",
          "[Added Lines]",
          "38926:           org.mlflow.api.proto.Service.SetTag.ResponseOrBuilder {",
          "38929:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_descriptor;",
          "38935:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_fieldAccessorTable",
          "38937:                   org.mlflow.api.proto.Service.SetTag.Response.class, org.mlflow.api.proto.Service.SetTag.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 482 ---",
          "[Context before]",
          "32219:         @java.lang.Override",
          "32220:         public com.google.protobuf.Descriptors.Descriptor",
          "32221:             getDescriptorForType() {",
          "32223:         }",
          "32225:         @java.lang.Override",
          "32228:         }",
          "32230:         @java.lang.Override",
          "32233:           if (!result.isInitialized()) {",
          "32234:             throw newUninitializedMessageException(result);",
          "32235:           }",
          "",
          "[Removed Lines]",
          "32222:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_Response_descriptor;",
          "32226:         public org.mlflow.api.proto.Service.SetExperimentTag.Response getDefaultInstanceForType() {",
          "32227:           return org.mlflow.api.proto.Service.SetExperimentTag.Response.getDefaultInstance();",
          "32231:         public org.mlflow.api.proto.Service.SetExperimentTag.Response build() {",
          "32232:           org.mlflow.api.proto.Service.SetExperimentTag.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "38964:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_descriptor;",
          "38968:         public org.mlflow.api.proto.Service.SetTag.Response getDefaultInstanceForType() {",
          "38969:           return org.mlflow.api.proto.Service.SetTag.Response.getDefaultInstance();",
          "38973:         public org.mlflow.api.proto.Service.SetTag.Response build() {",
          "38974:           org.mlflow.api.proto.Service.SetTag.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 483 ---",
          "[Context before]",
          "32237:         }",
          "32239:         @java.lang.Override",
          "32242:           onBuilt();",
          "32243:           return result;",
          "32244:         }",
          "",
          "[Removed Lines]",
          "32240:         public org.mlflow.api.proto.Service.SetExperimentTag.Response buildPartial() {",
          "32241:           org.mlflow.api.proto.Service.SetExperimentTag.Response result = new org.mlflow.api.proto.Service.SetExperimentTag.Response(this);",
          "",
          "[Added Lines]",
          "38982:         public org.mlflow.api.proto.Service.SetTag.Response buildPartial() {",
          "38983:           org.mlflow.api.proto.Service.SetTag.Response result = new org.mlflow.api.proto.Service.SetTag.Response(this);",
          "",
          "---------------",
          "--- Hunk 484 ---",
          "[Context before]",
          "32277:         }",
          "32278:         @java.lang.Override",
          "32279:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "32282:           } else {",
          "32283:             super.mergeFrom(other);",
          "32284:             return this;",
          "32285:           }",
          "32286:         }",
          "32290:           this.mergeUnknownFields(other.unknownFields);",
          "32291:           onChanged();",
          "32292:           return this;",
          "",
          "[Removed Lines]",
          "32280:           if (other instanceof org.mlflow.api.proto.Service.SetExperimentTag.Response) {",
          "32281:             return mergeFrom((org.mlflow.api.proto.Service.SetExperimentTag.Response)other);",
          "32288:         public Builder mergeFrom(org.mlflow.api.proto.Service.SetExperimentTag.Response other) {",
          "32289:           if (other == org.mlflow.api.proto.Service.SetExperimentTag.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "39022:           if (other instanceof org.mlflow.api.proto.Service.SetTag.Response) {",
          "39023:             return mergeFrom((org.mlflow.api.proto.Service.SetTag.Response)other);",
          "39030:         public Builder mergeFrom(org.mlflow.api.proto.Service.SetTag.Response other) {",
          "39031:           if (other == org.mlflow.api.proto.Service.SetTag.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 485 ---",
          "[Context before]",
          "32302:             com.google.protobuf.CodedInputStream input,",
          "32303:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32304:             throws java.io.IOException {",
          "32306:           try {",
          "32307:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "32308:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "32310:             throw e.unwrapIOException();",
          "32311:           } finally {",
          "32312:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "32305:           org.mlflow.api.proto.Service.SetExperimentTag.Response parsedMessage = null;",
          "32309:             parsedMessage = (org.mlflow.api.proto.Service.SetExperimentTag.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "39047:           org.mlflow.api.proto.Service.SetTag.Response parsedMessage = null;",
          "39051:             parsedMessage = (org.mlflow.api.proto.Service.SetTag.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 486 ---",
          "[Context before]",
          "32328:         }",
          "32332:       }",
          "32336:       static {",
          "32338:       }",
          "32341:         return DEFAULT_INSTANCE;",
          "32342:       }",
          "",
          "[Removed Lines]",
          "32335:       private static final org.mlflow.api.proto.Service.SetExperimentTag.Response DEFAULT_INSTANCE;",
          "32337:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetExperimentTag.Response();",
          "32340:       public static org.mlflow.api.proto.Service.SetExperimentTag.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "39077:       private static final org.mlflow.api.proto.Service.SetTag.Response DEFAULT_INSTANCE;",
          "39079:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetTag.Response();",
          "39082:       public static org.mlflow.api.proto.Service.SetTag.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 487 ---",
          "[Context before]",
          "32362:       }",
          "32364:       @java.lang.Override",
          "32366:         return DEFAULT_INSTANCE;",
          "32367:       }",
          "32369:     }",
          "32371:     private int bitField0_;",
          "32382:     @java.lang.Override",
          "32384:       return ((bitField0_ & 0x00000001) != 0);",
          "32385:     }",
          "32394:     @java.lang.Override",
          "32397:       if (ref instanceof java.lang.String) {",
          "32398:         return (java.lang.String) ref;",
          "32399:       } else {",
          "",
          "[Removed Lines]",
          "32365:       public org.mlflow.api.proto.Service.SetExperimentTag.Response getDefaultInstanceForType() {",
          "32372:     public static final int EXPERIMENT_ID_FIELD_NUMBER = 1;",
          "32373:     private volatile java.lang.Object experimentId_;",
          "32383:     public boolean hasExperimentId() {",
          "32395:     public java.lang.String getExperimentId() {",
          "32396:       java.lang.Object ref = experimentId_;",
          "",
          "[Added Lines]",
          "39107:       public org.mlflow.api.proto.Service.SetTag.Response getDefaultInstanceForType() {",
          "39114:     public static final int RUN_ID_FIELD_NUMBER = 4;",
          "39115:     private volatile java.lang.Object runId_;",
          "39125:     public boolean hasRunId() {",
          "39137:     public java.lang.String getRunId() {",
          "39138:       java.lang.Object ref = runId_;",
          "",
          "---------------",
          "--- Hunk 488 ---",
          "[Context before]",
          "32401:             (com.google.protobuf.ByteString) ref;",
          "32402:         java.lang.String s = bs.toStringUtf8();",
          "32403:         if (bs.isValidUtf8()) {",
          "32405:         }",
          "32406:         return s;",
          "32407:       }",
          "32408:     }",
          "32417:     @java.lang.Override",
          "32418:     public com.google.protobuf.ByteString",
          "32421:       if (ref instanceof java.lang.String) {",
          "32422:         com.google.protobuf.ByteString b =",
          "32423:             com.google.protobuf.ByteString.copyFromUtf8(",
          "32424:                 (java.lang.String) ref);",
          "32426:         return b;",
          "32427:       } else {",
          "32428:         return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "32404:           experimentId_ = s;",
          "32419:         getExperimentIdBytes() {",
          "32420:       java.lang.Object ref = experimentId_;",
          "32425:         experimentId_ = b;",
          "",
          "[Added Lines]",
          "39146:           runId_ = s;",
          "39161:         getRunIdBytes() {",
          "39162:       java.lang.Object ref = runId_;",
          "39167:         runId_ = b;",
          "39168:         return b;",
          "39169:       } else {",
          "39170:         return (com.google.protobuf.ByteString) ref;",
          "39171:       }",
          "39172:     }",
          "39174:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "39175:     private volatile java.lang.Object runUuid_;",
          "39185:     @java.lang.Override",
          "39186:     public boolean hasRunUuid() {",
          "39187:       return ((bitField0_ & 0x00000002) != 0);",
          "39188:     }",
          "39198:     @java.lang.Override",
          "39199:     public java.lang.String getRunUuid() {",
          "39200:       java.lang.Object ref = runUuid_;",
          "39201:       if (ref instanceof java.lang.String) {",
          "39202:         return (java.lang.String) ref;",
          "39203:       } else {",
          "39204:         com.google.protobuf.ByteString bs =",
          "39205:             (com.google.protobuf.ByteString) ref;",
          "39206:         java.lang.String s = bs.toStringUtf8();",
          "39207:         if (bs.isValidUtf8()) {",
          "39208:           runUuid_ = s;",
          "39209:         }",
          "39210:         return s;",
          "39211:       }",
          "39212:     }",
          "39222:     @java.lang.Override",
          "39223:     public com.google.protobuf.ByteString",
          "39224:         getRunUuidBytes() {",
          "39225:       java.lang.Object ref = runUuid_;",
          "39226:       if (ref instanceof java.lang.String) {",
          "39227:         com.google.protobuf.ByteString b =",
          "39228:             com.google.protobuf.ByteString.copyFromUtf8(",
          "39229:                 (java.lang.String) ref);",
          "39230:         runUuid_ = b;",
          "",
          "---------------",
          "--- Hunk 489 ---",
          "[Context before]",
          "32443:     @java.lang.Override",
          "32444:     public boolean hasKey() {",
          "32446:     }",
          "",
          "[Removed Lines]",
          "32445:       return ((bitField0_ & 0x00000002) != 0);",
          "",
          "[Added Lines]",
          "39250:       return ((bitField0_ & 0x00000004) != 0);",
          "",
          "---------------",
          "--- Hunk 490 ---",
          "[Context before]",
          "32506:     @java.lang.Override",
          "32507:     public boolean hasValue() {",
          "32509:     }",
          "",
          "[Removed Lines]",
          "32508:       return ((bitField0_ & 0x00000004) != 0);",
          "",
          "[Added Lines]",
          "39313:       return ((bitField0_ & 0x00000008) != 0);",
          "",
          "---------------",
          "--- Hunk 491 ---",
          "[Context before]",
          "32569:     @java.lang.Override",
          "32570:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "32571:                         throws java.io.IOException {",
          "32575:       if (((bitField0_ & 0x00000002) != 0)) {",
          "32577:       }",
          "32578:       if (((bitField0_ & 0x00000004) != 0)) {",
          "32579:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);",
          "32580:       }",
          "32581:       unknownFields.writeTo(output);",
          "32582:     }",
          "",
          "[Removed Lines]",
          "32572:       if (((bitField0_ & 0x00000001) != 0)) {",
          "32573:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentId_);",
          "32574:       }",
          "32576:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);",
          "",
          "[Added Lines]",
          "39378:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "39381:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);",
          "39382:       }",
          "39383:       if (((bitField0_ & 0x00000008) != 0)) {",
          "39386:       if (((bitField0_ & 0x00000001) != 0)) {",
          "39387:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, runId_);",
          "39388:       }",
          "",
          "---------------",
          "--- Hunk 492 ---",
          "[Context before]",
          "32587:       if (size != -1) return size;",
          "32589:       size = 0;",
          "32593:       if (((bitField0_ & 0x00000002) != 0)) {",
          "32595:       }",
          "32596:       if (((bitField0_ & 0x00000004) != 0)) {",
          "32597:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);",
          "32598:       }",
          "32599:       size += unknownFields.getSerializedSize();",
          "32600:       memoizedSize = size;",
          "32601:       return size;",
          "",
          "[Removed Lines]",
          "32590:       if (((bitField0_ & 0x00000001) != 0)) {",
          "32591:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, experimentId_);",
          "32592:       }",
          "32594:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);",
          "",
          "[Added Lines]",
          "39399:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "39402:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);",
          "39403:       }",
          "39404:       if (((bitField0_ & 0x00000008) != 0)) {",
          "39407:       if (((bitField0_ & 0x00000001) != 0)) {",
          "39408:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, runId_);",
          "39409:       }",
          "",
          "---------------",
          "--- Hunk 493 ---",
          "[Context before]",
          "32606:       if (obj == this) {",
          "32607:        return true;",
          "32608:       }",
          "32610:         return super.equals(obj);",
          "32611:       }",
          "32618:       }",
          "32619:       if (hasKey() != other.hasKey()) return false;",
          "32620:       if (hasKey()) {",
          "",
          "[Removed Lines]",
          "32609:       if (!(obj instanceof org.mlflow.api.proto.Service.SetExperimentTag)) {",
          "32612:       org.mlflow.api.proto.Service.SetExperimentTag other = (org.mlflow.api.proto.Service.SetExperimentTag) obj;",
          "32614:       if (hasExperimentId() != other.hasExperimentId()) return false;",
          "32615:       if (hasExperimentId()) {",
          "32616:         if (!getExperimentId()",
          "32617:             .equals(other.getExperimentId())) return false;",
          "",
          "[Added Lines]",
          "39420:       if (!(obj instanceof org.mlflow.api.proto.Service.SetTag)) {",
          "39423:       org.mlflow.api.proto.Service.SetTag other = (org.mlflow.api.proto.Service.SetTag) obj;",
          "39425:       if (hasRunId() != other.hasRunId()) return false;",
          "39426:       if (hasRunId()) {",
          "39427:         if (!getRunId()",
          "39428:             .equals(other.getRunId())) return false;",
          "39429:       }",
          "39430:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "39431:       if (hasRunUuid()) {",
          "39432:         if (!getRunUuid()",
          "39433:             .equals(other.getRunUuid())) return false;",
          "",
          "---------------",
          "--- Hunk 494 ---",
          "[Context before]",
          "32637:       }",
          "32638:       int hash = 41;",
          "32639:       hash = (19 * hash) + getDescriptor().hashCode();",
          "32643:       }",
          "32644:       if (hasKey()) {",
          "32645:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "",
          "[Removed Lines]",
          "32640:       if (hasExperimentId()) {",
          "32641:         hash = (37 * hash) + EXPERIMENT_ID_FIELD_NUMBER;",
          "32642:         hash = (53 * hash) + getExperimentId().hashCode();",
          "",
          "[Added Lines]",
          "39456:       if (hasRunId()) {",
          "39457:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "39458:         hash = (53 * hash) + getRunId().hashCode();",
          "39459:       }",
          "39460:       if (hasRunUuid()) {",
          "39461:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "39462:         hash = (53 * hash) + getRunUuid().hashCode();",
          "",
          "---------------",
          "--- Hunk 495 ---",
          "[Context before]",
          "32654:       return hash;",
          "32655:     }",
          "32658:         java.nio.ByteBuffer data)",
          "32659:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "32660:       return PARSER.parseFrom(data);",
          "32661:     }",
          "32663:         java.nio.ByteBuffer data,",
          "32664:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32665:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "32666:       return PARSER.parseFrom(data, extensionRegistry);",
          "32667:     }",
          "32669:         com.google.protobuf.ByteString data)",
          "32670:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "32671:       return PARSER.parseFrom(data);",
          "32672:     }",
          "32674:         com.google.protobuf.ByteString data,",
          "32675:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32676:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "32677:       return PARSER.parseFrom(data, extensionRegistry);",
          "32678:     }",
          "32680:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "32681:       return PARSER.parseFrom(data);",
          "32682:     }",
          "32684:         byte[] data,",
          "32685:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32686:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "32687:       return PARSER.parseFrom(data, extensionRegistry);",
          "32688:     }",
          "32690:         throws java.io.IOException {",
          "32691:       return com.google.protobuf.GeneratedMessageV3",
          "32692:           .parseWithIOException(PARSER, input);",
          "32693:     }",
          "32695:         java.io.InputStream input,",
          "32696:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32697:         throws java.io.IOException {",
          "32698:       return com.google.protobuf.GeneratedMessageV3",
          "32699:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "32700:     }",
          "32702:         throws java.io.IOException {",
          "32703:       return com.google.protobuf.GeneratedMessageV3",
          "32704:           .parseDelimitedWithIOException(PARSER, input);",
          "32705:     }",
          "32707:         java.io.InputStream input,",
          "32708:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32709:         throws java.io.IOException {",
          "32710:       return com.google.protobuf.GeneratedMessageV3",
          "32711:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "32712:     }",
          "32714:         com.google.protobuf.CodedInputStream input)",
          "32715:         throws java.io.IOException {",
          "32716:       return com.google.protobuf.GeneratedMessageV3",
          "32717:           .parseWithIOException(PARSER, input);",
          "32718:     }",
          "32720:         com.google.protobuf.CodedInputStream input,",
          "32721:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32722:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "32657:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "32662:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "32668:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "32673:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "32679:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(byte[] data)",
          "32683:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "32689:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(java.io.InputStream input)",
          "32694:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "32701:     public static org.mlflow.api.proto.Service.SetExperimentTag parseDelimitedFrom(java.io.InputStream input)",
          "32706:     public static org.mlflow.api.proto.Service.SetExperimentTag parseDelimitedFrom(",
          "32713:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "32719:     public static org.mlflow.api.proto.Service.SetExperimentTag parseFrom(",
          "",
          "[Added Lines]",
          "39477:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "39482:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "39488:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "39493:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "39499:     public static org.mlflow.api.proto.Service.SetTag parseFrom(byte[] data)",
          "39503:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "39509:     public static org.mlflow.api.proto.Service.SetTag parseFrom(java.io.InputStream input)",
          "39514:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "39521:     public static org.mlflow.api.proto.Service.SetTag parseDelimitedFrom(java.io.InputStream input)",
          "39526:     public static org.mlflow.api.proto.Service.SetTag parseDelimitedFrom(",
          "39533:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "39539:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "",
          "---------------",
          "--- Hunk 496 ---",
          "[Context before]",
          "32729:     public static Builder newBuilder() {",
          "32730:       return DEFAULT_INSTANCE.toBuilder();",
          "32731:     }",
          "32733:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "32734:     }",
          "32735:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "32732:     public static Builder newBuilder(org.mlflow.api.proto.Service.SetExperimentTag prototype) {",
          "",
          "[Added Lines]",
          "39552:     public static Builder newBuilder(org.mlflow.api.proto.Service.SetTag prototype) {",
          "",
          "---------------",
          "--- Hunk 497 ---",
          "[Context before]",
          "32745:       return builder;",
          "32746:     }",
          "32750:     public static final class Builder extends",
          "32751:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "32754:       public static final com.google.protobuf.Descriptors.Descriptor",
          "32755:           getDescriptor() {",
          "32757:       }",
          "32759:       @java.lang.Override",
          "32760:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "32761:           internalGetFieldAccessorTable() {",
          "32763:             .ensureFieldAccessorsInitialized(",
          "32765:       }",
          "32768:       private Builder() {",
          "32769:         maybeForceBuilderInitialization();",
          "32770:       }",
          "",
          "[Removed Lines]",
          "32753:         org.mlflow.api.proto.Service.SetExperimentTagOrBuilder {",
          "32756:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_descriptor;",
          "32762:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_fieldAccessorTable",
          "32764:                 org.mlflow.api.proto.Service.SetExperimentTag.class, org.mlflow.api.proto.Service.SetExperimentTag.Builder.class);",
          "",
          "[Added Lines]",
          "39573:         org.mlflow.api.proto.Service.SetTagOrBuilder {",
          "39576:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_descriptor;",
          "39582:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_fieldAccessorTable",
          "39584:                 org.mlflow.api.proto.Service.SetTag.class, org.mlflow.api.proto.Service.SetTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 498 ---",
          "[Context before]",
          "32782:       @java.lang.Override",
          "32783:       public Builder clear() {",
          "32784:         super.clear();",
          "32786:         bitField0_ = (bitField0_ & ~0x00000001);",
          "32788:         bitField0_ = (bitField0_ & ~0x00000002);",
          "32790:         bitField0_ = (bitField0_ & ~0x00000004);",
          "32791:         return this;",
          "32792:       }",
          "32794:       @java.lang.Override",
          "32795:       public com.google.protobuf.Descriptors.Descriptor",
          "32796:           getDescriptorForType() {",
          "32798:       }",
          "32800:       @java.lang.Override",
          "32803:       }",
          "32805:       @java.lang.Override",
          "32808:         if (!result.isInitialized()) {",
          "32809:           throw newUninitializedMessageException(result);",
          "32810:         }",
          "",
          "[Removed Lines]",
          "32785:         experimentId_ = \"\";",
          "32787:         key_ = \"\";",
          "32789:         value_ = \"\";",
          "32797:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetExperimentTag_descriptor;",
          "32801:       public org.mlflow.api.proto.Service.SetExperimentTag getDefaultInstanceForType() {",
          "32802:         return org.mlflow.api.proto.Service.SetExperimentTag.getDefaultInstance();",
          "32806:       public org.mlflow.api.proto.Service.SetExperimentTag build() {",
          "32807:         org.mlflow.api.proto.Service.SetExperimentTag result = buildPartial();",
          "",
          "[Added Lines]",
          "39605:         runId_ = \"\";",
          "39607:         runUuid_ = \"\";",
          "39609:         key_ = \"\";",
          "39611:         value_ = \"\";",
          "39612:         bitField0_ = (bitField0_ & ~0x00000008);",
          "39619:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_descriptor;",
          "39623:       public org.mlflow.api.proto.Service.SetTag getDefaultInstanceForType() {",
          "39624:         return org.mlflow.api.proto.Service.SetTag.getDefaultInstance();",
          "39628:       public org.mlflow.api.proto.Service.SetTag build() {",
          "39629:         org.mlflow.api.proto.Service.SetTag result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 499 ---",
          "[Context before]",
          "32812:       }",
          "32814:       @java.lang.Override",
          "32817:         int from_bitField0_ = bitField0_;",
          "32818:         int to_bitField0_ = 0;",
          "32819:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "32820:           to_bitField0_ |= 0x00000001;",
          "32821:         }",
          "32823:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "32824:           to_bitField0_ |= 0x00000002;",
          "32825:         }",
          "32827:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "32828:           to_bitField0_ |= 0x00000004;",
          "32829:         }",
          "32830:         result.value_ = value_;",
          "32831:         result.bitField0_ = to_bitField0_;",
          "32832:         onBuilt();",
          "",
          "[Removed Lines]",
          "32815:       public org.mlflow.api.proto.Service.SetExperimentTag buildPartial() {",
          "32816:         org.mlflow.api.proto.Service.SetExperimentTag result = new org.mlflow.api.proto.Service.SetExperimentTag(this);",
          "32822:         result.experimentId_ = experimentId_;",
          "32826:         result.key_ = key_;",
          "",
          "[Added Lines]",
          "39637:       public org.mlflow.api.proto.Service.SetTag buildPartial() {",
          "39638:         org.mlflow.api.proto.Service.SetTag result = new org.mlflow.api.proto.Service.SetTag(this);",
          "39644:         result.runId_ = runId_;",
          "39648:         result.runUuid_ = runUuid_;",
          "39652:         result.key_ = key_;",
          "39653:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "39654:           to_bitField0_ |= 0x00000008;",
          "39655:         }",
          "",
          "---------------",
          "--- Hunk 500 ---",
          "[Context before]",
          "32867:       }",
          "32868:       @java.lang.Override",
          "32869:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "32872:         } else {",
          "32873:           super.mergeFrom(other);",
          "32874:           return this;",
          "32875:         }",
          "32876:       }",
          "32881:           bitField0_ |= 0x00000001;",
          "32883:           onChanged();",
          "32884:         }",
          "32886:           bitField0_ |= 0x00000002;",
          "32887:           key_ = other.key_;",
          "32888:           onChanged();",
          "32889:         }",
          "32890:         if (other.hasValue()) {",
          "32892:           value_ = other.value_;",
          "32893:           onChanged();",
          "32894:         }",
          "",
          "[Removed Lines]",
          "32870:         if (other instanceof org.mlflow.api.proto.Service.SetExperimentTag) {",
          "32871:           return mergeFrom((org.mlflow.api.proto.Service.SetExperimentTag)other);",
          "32878:       public Builder mergeFrom(org.mlflow.api.proto.Service.SetExperimentTag other) {",
          "32879:         if (other == org.mlflow.api.proto.Service.SetExperimentTag.getDefaultInstance()) return this;",
          "32880:         if (other.hasExperimentId()) {",
          "32882:           experimentId_ = other.experimentId_;",
          "32885:         if (other.hasKey()) {",
          "32891:           bitField0_ |= 0x00000004;",
          "",
          "[Added Lines]",
          "39696:         if (other instanceof org.mlflow.api.proto.Service.SetTag) {",
          "39697:           return mergeFrom((org.mlflow.api.proto.Service.SetTag)other);",
          "39704:       public Builder mergeFrom(org.mlflow.api.proto.Service.SetTag other) {",
          "39705:         if (other == org.mlflow.api.proto.Service.SetTag.getDefaultInstance()) return this;",
          "39706:         if (other.hasRunId()) {",
          "39708:           runId_ = other.runId_;",
          "39711:         if (other.hasRunUuid()) {",
          "39713:           runUuid_ = other.runUuid_;",
          "39714:           onChanged();",
          "39715:         }",
          "39716:         if (other.hasKey()) {",
          "39717:           bitField0_ |= 0x00000004;",
          "39722:           bitField0_ |= 0x00000008;",
          "",
          "---------------",
          "--- Hunk 501 ---",
          "[Context before]",
          "32907:           com.google.protobuf.CodedInputStream input,",
          "32908:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "32909:           throws java.io.IOException {",
          "32911:         try {",
          "32912:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "32913:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "32915:           throw e.unwrapIOException();",
          "32916:         } finally {",
          "32917:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "32910:         org.mlflow.api.proto.Service.SetExperimentTag parsedMessage = null;",
          "32914:           parsedMessage = (org.mlflow.api.proto.Service.SetExperimentTag) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "39741:         org.mlflow.api.proto.Service.SetTag parsedMessage = null;",
          "39745:           parsedMessage = (org.mlflow.api.proto.Service.SetTag) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 502 ---",
          "[Context before]",
          "32922:       }",
          "32923:       private int bitField0_;",
          "32935:         return ((bitField0_ & 0x00000001) != 0);",
          "32936:       }",
          "32947:         if (!(ref instanceof java.lang.String)) {",
          "32948:           com.google.protobuf.ByteString bs =",
          "32949:               (com.google.protobuf.ByteString) ref;",
          "32950:           java.lang.String s = bs.toStringUtf8();",
          "32951:           if (bs.isValidUtf8()) {",
          "32953:           }",
          "32954:           return s;",
          "32955:         } else {",
          "",
          "[Removed Lines]",
          "32925:       private java.lang.Object experimentId_ = \"\";",
          "32934:       public boolean hasExperimentId() {",
          "32945:       public java.lang.String getExperimentId() {",
          "32946:         java.lang.Object ref = experimentId_;",
          "32952:             experimentId_ = s;",
          "",
          "[Added Lines]",
          "39756:       private java.lang.Object runId_ = \"\";",
          "39765:       public boolean hasRunId() {",
          "39776:       public java.lang.String getRunId() {",
          "39777:         java.lang.Object ref = runId_;",
          "39783:             runId_ = s;",
          "",
          "---------------",
          "--- Hunk 503 ---",
          "[Context before]",
          "32958:       }",
          "32967:       public com.google.protobuf.ByteString",
          "32970:         if (ref instanceof String) {",
          "32971:           com.google.protobuf.ByteString b =",
          "32972:               com.google.protobuf.ByteString.copyFromUtf8(",
          "32973:                   (java.lang.String) ref);",
          "32975:           return b;",
          "32976:         } else {",
          "32977:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "32968:           getExperimentIdBytes() {",
          "32969:         java.lang.Object ref = experimentId_;",
          "32974:           experimentId_ = b;",
          "",
          "[Added Lines]",
          "39799:           getRunIdBytes() {",
          "39800:         java.lang.Object ref = runId_;",
          "39805:           runId_ = b;",
          "",
          "---------------",
          "--- Hunk 504 ---",
          "[Context before]",
          "32979:       }",
          "32990:           java.lang.String value) {",
          "32991:         if (value == null) {",
          "32992:     throw new NullPointerException();",
          "32993:   }",
          "32994:   bitField0_ |= 0x00000001;",
          "32996:         onChanged();",
          "32997:         return this;",
          "32998:       }",
          "33008:         bitField0_ = (bitField0_ & ~0x00000001);",
          "33010:         onChanged();",
          "33011:         return this;",
          "33012:       }",
          "33023:           com.google.protobuf.ByteString value) {",
          "33024:         if (value == null) {",
          "33025:     throw new NullPointerException();",
          "33026:   }",
          "33027:   bitField0_ |= 0x00000001;",
          "33029:         onChanged();",
          "33030:         return this;",
          "33031:       }",
          "",
          "[Removed Lines]",
          "32989:       public Builder setExperimentId(",
          "32995:         experimentId_ = value;",
          "33007:       public Builder clearExperimentId() {",
          "33009:         experimentId_ = getDefaultInstance().getExperimentId();",
          "33022:       public Builder setExperimentIdBytes(",
          "33028:         experimentId_ = value;",
          "",
          "[Added Lines]",
          "39820:       public Builder setRunId(",
          "39826:         runId_ = value;",
          "39838:       public Builder clearRunId() {",
          "39840:         runId_ = getDefaultInstance().getRunId();",
          "39853:       public Builder setRunIdBytes(",
          "39859:         runId_ = value;",
          "39860:         onChanged();",
          "39861:         return this;",
          "39862:       }",
          "39864:       private java.lang.Object runUuid_ = \"\";",
          "39874:       public boolean hasRunUuid() {",
          "39875:         return ((bitField0_ & 0x00000002) != 0);",
          "39876:       }",
          "39886:       public java.lang.String getRunUuid() {",
          "39887:         java.lang.Object ref = runUuid_;",
          "39888:         if (!(ref instanceof java.lang.String)) {",
          "39889:           com.google.protobuf.ByteString bs =",
          "39890:               (com.google.protobuf.ByteString) ref;",
          "39891:           java.lang.String s = bs.toStringUtf8();",
          "39892:           if (bs.isValidUtf8()) {",
          "39893:             runUuid_ = s;",
          "39894:           }",
          "39895:           return s;",
          "39896:         } else {",
          "39897:           return (java.lang.String) ref;",
          "39898:         }",
          "39899:       }",
          "39909:       public com.google.protobuf.ByteString",
          "39910:           getRunUuidBytes() {",
          "39911:         java.lang.Object ref = runUuid_;",
          "39912:         if (ref instanceof String) {",
          "39913:           com.google.protobuf.ByteString b =",
          "39914:               com.google.protobuf.ByteString.copyFromUtf8(",
          "39915:                   (java.lang.String) ref);",
          "39916:           runUuid_ = b;",
          "39917:           return b;",
          "39918:         } else {",
          "39919:           return (com.google.protobuf.ByteString) ref;",
          "39920:         }",
          "39921:       }",
          "39932:       public Builder setRunUuid(",
          "39933:           java.lang.String value) {",
          "39934:         if (value == null) {",
          "39935:     throw new NullPointerException();",
          "39936:   }",
          "39937:   bitField0_ |= 0x00000002;",
          "39938:         runUuid_ = value;",
          "39939:         onChanged();",
          "39940:         return this;",
          "39941:       }",
          "39951:       public Builder clearRunUuid() {",
          "39952:         bitField0_ = (bitField0_ & ~0x00000002);",
          "39953:         runUuid_ = getDefaultInstance().getRunUuid();",
          "39954:         onChanged();",
          "39955:         return this;",
          "39956:       }",
          "39967:       public Builder setRunUuidBytes(",
          "39968:           com.google.protobuf.ByteString value) {",
          "39969:         if (value == null) {",
          "39970:     throw new NullPointerException();",
          "39971:   }",
          "39972:   bitField0_ |= 0x00000002;",
          "39973:         runUuid_ = value;",
          "",
          "---------------",
          "--- Hunk 505 ---",
          "[Context before]",
          "33043:       public boolean hasKey() {",
          "33045:       }",
          "",
          "[Removed Lines]",
          "33044:         return ((bitField0_ & 0x00000002) != 0);",
          "",
          "[Added Lines]",
          "39989:         return ((bitField0_ & 0x00000004) != 0);",
          "",
          "---------------",
          "--- Hunk 506 ---",
          "[Context before]",
          "33103:         if (value == null) {",
          "33104:     throw new NullPointerException();",
          "33105:   }",
          "33107:         key_ = value;",
          "33108:         onChanged();",
          "33109:         return this;",
          "",
          "[Removed Lines]",
          "33106:   bitField0_ |= 0x00000002;",
          "",
          "[Added Lines]",
          "40051:   bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 507 ---",
          "[Context before]",
          "33120:       public Builder clearKey() {",
          "33122:         key_ = getDefaultInstance().getKey();",
          "33123:         onChanged();",
          "33124:         return this;",
          "",
          "[Removed Lines]",
          "33121:         bitField0_ = (bitField0_ & ~0x00000002);",
          "",
          "[Added Lines]",
          "40066:         bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 508 ---",
          "[Context before]",
          "33138:         if (value == null) {",
          "33139:     throw new NullPointerException();",
          "33140:   }",
          "33142:         key_ = value;",
          "33143:         onChanged();",
          "33144:         return this;",
          "",
          "[Removed Lines]",
          "33141:   bitField0_ |= 0x00000002;",
          "",
          "[Added Lines]",
          "40086:   bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 509 ---",
          "[Context before]",
          "33157:       public boolean hasValue() {",
          "33159:       }",
          "",
          "[Removed Lines]",
          "33158:         return ((bitField0_ & 0x00000004) != 0);",
          "",
          "[Added Lines]",
          "40103:         return ((bitField0_ & 0x00000008) != 0);",
          "",
          "---------------",
          "--- Hunk 510 ---",
          "[Context before]",
          "33217:         if (value == null) {",
          "33218:     throw new NullPointerException();",
          "33219:   }",
          "33221:         value_ = value;",
          "33222:         onChanged();",
          "33223:         return this;",
          "",
          "[Removed Lines]",
          "33220:   bitField0_ |= 0x00000004;",
          "",
          "[Added Lines]",
          "40165:   bitField0_ |= 0x00000008;",
          "",
          "---------------",
          "--- Hunk 511 ---",
          "[Context before]",
          "33234:       public Builder clearValue() {",
          "33236:         value_ = getDefaultInstance().getValue();",
          "33237:         onChanged();",
          "33238:         return this;",
          "",
          "[Removed Lines]",
          "33235:         bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "[Added Lines]",
          "40180:         bitField0_ = (bitField0_ & ~0x00000008);",
          "",
          "---------------",
          "--- Hunk 512 ---",
          "[Context before]",
          "33252:         if (value == null) {",
          "33253:     throw new NullPointerException();",
          "33254:   }",
          "33256:         value_ = value;",
          "33257:         onChanged();",
          "33258:         return this;",
          "",
          "[Removed Lines]",
          "33255:   bitField0_ |= 0x00000004;",
          "",
          "[Added Lines]",
          "40200:   bitField0_ |= 0x00000008;",
          "",
          "---------------",
          "--- Hunk 513 ---",
          "[Context before]",
          "33270:       }",
          "33274:     }",
          "33278:     static {",
          "33280:     }",
          "33283:       return DEFAULT_INSTANCE;",
          "33284:     }",
          "33288:       @java.lang.Override",
          "33290:           com.google.protobuf.CodedInputStream input,",
          "33291:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33292:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "33294:       }",
          "33295:     };",
          "33298:       return PARSER;",
          "33299:     }",
          "33301:     @java.lang.Override",
          "33303:       return PARSER;",
          "33304:     }",
          "33306:     @java.lang.Override",
          "33308:       return DEFAULT_INSTANCE;",
          "33309:     }",
          "33311:   }",
          "33315:       com.google.protobuf.MessageOrBuilder {",
          "33325:     boolean hasRunId();",
          "33334:     java.lang.String getRunId();",
          "33343:     com.google.protobuf.ByteString",
          "",
          "[Removed Lines]",
          "33277:     private static final org.mlflow.api.proto.Service.SetExperimentTag DEFAULT_INSTANCE;",
          "33279:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetExperimentTag();",
          "33282:     public static org.mlflow.api.proto.Service.SetExperimentTag getDefaultInstance() {",
          "33286:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SetExperimentTag>",
          "33287:         PARSER = new com.google.protobuf.AbstractParser<SetExperimentTag>() {",
          "33289:       public SetExperimentTag parsePartialFrom(",
          "33293:         return new SetExperimentTag(input, extensionRegistry);",
          "33297:     public static com.google.protobuf.Parser<SetExperimentTag> parser() {",
          "33302:     public com.google.protobuf.Parser<SetExperimentTag> getParserForType() {",
          "33307:     public org.mlflow.api.proto.Service.SetExperimentTag getDefaultInstanceForType() {",
          "33313:   public interface SetTagOrBuilder extends",
          "",
          "[Added Lines]",
          "40222:     private static final org.mlflow.api.proto.Service.SetTag DEFAULT_INSTANCE;",
          "40224:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetTag();",
          "40227:     public static org.mlflow.api.proto.Service.SetTag getDefaultInstance() {",
          "40231:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SetTag>",
          "40232:         PARSER = new com.google.protobuf.AbstractParser<SetTag>() {",
          "40234:       public SetTag parsePartialFrom(",
          "40238:         return new SetTag(input, extensionRegistry);",
          "40242:     public static com.google.protobuf.Parser<SetTag> parser() {",
          "40247:     public com.google.protobuf.Parser<SetTag> getParserForType() {",
          "40252:     public org.mlflow.api.proto.Service.SetTag getDefaultInstanceForType() {",
          "40258:   public interface DeleteTagOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 514 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "33355:     boolean hasRunUuid();",
          "33365:     java.lang.String getRunUuid();",
          "33375:     com.google.protobuf.ByteString",
          "33376:         getRunUuidBytes();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 515 ---",
          "[Context before]",
          "33407:     com.google.protobuf.ByteString",
          "33408:         getKeyBytes();",
          "33441:   }",
          "33446:       com.google.protobuf.GeneratedMessageV3 implements",
          "33449:   private static final long serialVersionUID = 0L;",
          "33452:       super(builder);",
          "33453:     }",
          "33455:       runId_ = \"\";",
          "33457:       key_ = \"\";",
          "33459:     }",
          "33461:     @java.lang.Override",
          "33462:     @SuppressWarnings({\"unused\"})",
          "33463:     protected java.lang.Object newInstance(",
          "33464:         UnusedPrivateParameter unused) {",
          "33466:     }",
          "33468:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "33419:     boolean hasValue();",
          "33429:     java.lang.String getValue();",
          "33439:     com.google.protobuf.ByteString",
          "33440:         getValueBytes();",
          "33445:   public static final class SetTag extends",
          "33448:       SetTagOrBuilder {",
          "33451:     private SetTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "33454:     private SetTag() {",
          "33456:       runUuid_ = \"\";",
          "33458:       value_ = \"\";",
          "33465:       return new SetTag();",
          "",
          "[Added Lines]",
          "40323:   public static final class DeleteTag extends",
          "40326:       DeleteTagOrBuilder {",
          "40329:     private DeleteTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "40332:     private DeleteTag() {",
          "40341:       return new DeleteTag();",
          "",
          "---------------",
          "--- Hunk 516 ---",
          "[Context before]",
          "33470:     getUnknownFields() {",
          "33471:       return this.unknownFields;",
          "33472:     }",
          "33474:         com.google.protobuf.CodedInputStream input,",
          "33475:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33476:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "33473:     private SetTag(",
          "",
          "[Added Lines]",
          "40349:     private DeleteTag(",
          "",
          "---------------",
          "--- Hunk 517 ---",
          "[Context before]",
          "33491:               break;",
          "33492:             case 10: {",
          "33493:               com.google.protobuf.ByteString bs = input.readBytes();",
          "33496:               break;",
          "33497:             }",
          "33498:             case 18: {",
          "33499:               com.google.protobuf.ByteString bs = input.readBytes();",
          "33501:               key_ = bs;",
          "33502:               break;",
          "33503:             }",
          "33516:             default: {",
          "33517:               if (!parseUnknownField(",
          "33518:                   input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "33494:               bitField0_ |= 0x00000002;",
          "33495:               runUuid_ = bs;",
          "33500:               bitField0_ |= 0x00000004;",
          "33504:             case 26: {",
          "33505:               com.google.protobuf.ByteString bs = input.readBytes();",
          "33506:               bitField0_ |= 0x00000008;",
          "33507:               value_ = bs;",
          "33508:               break;",
          "33509:             }",
          "33510:             case 34: {",
          "33511:               com.google.protobuf.ByteString bs = input.readBytes();",
          "33512:               bitField0_ |= 0x00000001;",
          "33513:               runId_ = bs;",
          "33514:               break;",
          "33515:             }",
          "",
          "[Added Lines]",
          "40370:               bitField0_ |= 0x00000001;",
          "40371:               runId_ = bs;",
          "40376:               bitField0_ |= 0x00000002;",
          "",
          "---------------",
          "--- Hunk 518 ---",
          "[Context before]",
          "33534:     }",
          "33535:     public static final com.google.protobuf.Descriptors.Descriptor",
          "33536:         getDescriptor() {",
          "33538:     }",
          "33540:     @java.lang.Override",
          "33541:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "33542:         internalGetFieldAccessorTable() {",
          "33544:           .ensureFieldAccessorsInitialized(",
          "33546:     }",
          "33548:     public interface ResponseOrBuilder extends",
          "33550:         com.google.protobuf.MessageOrBuilder {",
          "33551:     }",
          "33555:     public static final class Response extends",
          "33556:         com.google.protobuf.GeneratedMessageV3 implements",
          "33558:         ResponseOrBuilder {",
          "33559:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "33537:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_descriptor;",
          "33543:       return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_fieldAccessorTable",
          "33545:               org.mlflow.api.proto.Service.SetTag.class, org.mlflow.api.proto.Service.SetTag.Builder.class);",
          "",
          "[Added Lines]",
          "40401:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_descriptor;",
          "40407:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_fieldAccessorTable",
          "40409:               org.mlflow.api.proto.Service.DeleteTag.class, org.mlflow.api.proto.Service.DeleteTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 519 ---",
          "[Context before]",
          "33615:       }",
          "33616:       public static final com.google.protobuf.Descriptors.Descriptor",
          "33617:           getDescriptor() {",
          "33619:       }",
          "33621:       @java.lang.Override",
          "33622:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "33623:           internalGetFieldAccessorTable() {",
          "33625:             .ensureFieldAccessorsInitialized(",
          "33627:       }",
          "33629:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "33618:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_descriptor;",
          "33624:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_fieldAccessorTable",
          "33626:                 org.mlflow.api.proto.Service.SetTag.Response.class, org.mlflow.api.proto.Service.SetTag.Response.Builder.class);",
          "",
          "[Added Lines]",
          "40482:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_descriptor;",
          "40488:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_fieldAccessorTable",
          "40490:                 org.mlflow.api.proto.Service.DeleteTag.Response.class, org.mlflow.api.proto.Service.DeleteTag.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 520 ---",
          "[Context before]",
          "33659:         if (obj == this) {",
          "33660:          return true;",
          "33661:         }",
          "33663:           return super.equals(obj);",
          "33664:         }",
          "33667:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "33668:         return true;",
          "",
          "[Removed Lines]",
          "33662:         if (!(obj instanceof org.mlflow.api.proto.Service.SetTag.Response)) {",
          "33665:         org.mlflow.api.proto.Service.SetTag.Response other = (org.mlflow.api.proto.Service.SetTag.Response) obj;",
          "",
          "[Added Lines]",
          "40526:         if (!(obj instanceof org.mlflow.api.proto.Service.DeleteTag.Response)) {",
          "40529:         org.mlflow.api.proto.Service.DeleteTag.Response other = (org.mlflow.api.proto.Service.DeleteTag.Response) obj;",
          "",
          "---------------",
          "--- Hunk 521 ---",
          "[Context before]",
          "33680:         return hash;",
          "33681:       }",
          "33684:           java.nio.ByteBuffer data)",
          "33685:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "33686:         return PARSER.parseFrom(data);",
          "33687:       }",
          "33689:           java.nio.ByteBuffer data,",
          "33690:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33691:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "33692:         return PARSER.parseFrom(data, extensionRegistry);",
          "33693:       }",
          "33695:           com.google.protobuf.ByteString data)",
          "33696:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "33697:         return PARSER.parseFrom(data);",
          "33698:       }",
          "33700:           com.google.protobuf.ByteString data,",
          "33701:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33702:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "33703:         return PARSER.parseFrom(data, extensionRegistry);",
          "33704:       }",
          "33706:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "33707:         return PARSER.parseFrom(data);",
          "33708:       }",
          "33710:           byte[] data,",
          "33711:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33712:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "33713:         return PARSER.parseFrom(data, extensionRegistry);",
          "33714:       }",
          "33716:           throws java.io.IOException {",
          "33717:         return com.google.protobuf.GeneratedMessageV3",
          "33718:             .parseWithIOException(PARSER, input);",
          "33719:       }",
          "33721:           java.io.InputStream input,",
          "33722:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33723:           throws java.io.IOException {",
          "33724:         return com.google.protobuf.GeneratedMessageV3",
          "33725:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "33726:       }",
          "33728:           throws java.io.IOException {",
          "33729:         return com.google.protobuf.GeneratedMessageV3",
          "33730:             .parseDelimitedWithIOException(PARSER, input);",
          "33731:       }",
          "33733:           java.io.InputStream input,",
          "33734:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33735:           throws java.io.IOException {",
          "33736:         return com.google.protobuf.GeneratedMessageV3",
          "33737:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "33738:       }",
          "33740:           com.google.protobuf.CodedInputStream input)",
          "33741:           throws java.io.IOException {",
          "33742:         return com.google.protobuf.GeneratedMessageV3",
          "33743:             .parseWithIOException(PARSER, input);",
          "33744:       }",
          "33746:           com.google.protobuf.CodedInputStream input,",
          "33747:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33748:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "33683:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "33688:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "33694:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "33699:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "33705:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(byte[] data)",
          "33709:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "33715:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(java.io.InputStream input)",
          "33720:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "33727:       public static org.mlflow.api.proto.Service.SetTag.Response parseDelimitedFrom(java.io.InputStream input)",
          "33732:       public static org.mlflow.api.proto.Service.SetTag.Response parseDelimitedFrom(",
          "33739:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "33745:       public static org.mlflow.api.proto.Service.SetTag.Response parseFrom(",
          "",
          "[Added Lines]",
          "40547:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "40552:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "40558:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "40563:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "40569:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(byte[] data)",
          "40573:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "40579:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(java.io.InputStream input)",
          "40584:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "40591:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseDelimitedFrom(java.io.InputStream input)",
          "40596:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseDelimitedFrom(",
          "40603:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "40609:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 522 ---",
          "[Context before]",
          "33755:       public static Builder newBuilder() {",
          "33756:         return DEFAULT_INSTANCE.toBuilder();",
          "33757:       }",
          "33759:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "33760:       }",
          "33761:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "33758:       public static Builder newBuilder(org.mlflow.api.proto.Service.SetTag.Response prototype) {",
          "",
          "[Added Lines]",
          "40622:       public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteTag.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 523 ---",
          "[Context before]",
          "33771:         return builder;",
          "33772:       }",
          "33776:       public static final class Builder extends",
          "33777:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "33780:         public static final com.google.protobuf.Descriptors.Descriptor",
          "33781:             getDescriptor() {",
          "33783:         }",
          "33785:         @java.lang.Override",
          "33786:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "33787:             internalGetFieldAccessorTable() {",
          "33789:               .ensureFieldAccessorsInitialized(",
          "33791:         }",
          "33794:         private Builder() {",
          "33795:           maybeForceBuilderInitialization();",
          "33796:         }",
          "",
          "[Removed Lines]",
          "33779:           org.mlflow.api.proto.Service.SetTag.ResponseOrBuilder {",
          "33782:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_descriptor;",
          "33788:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_fieldAccessorTable",
          "33790:                   org.mlflow.api.proto.Service.SetTag.Response.class, org.mlflow.api.proto.Service.SetTag.Response.Builder.class);",
          "",
          "[Added Lines]",
          "40643:           org.mlflow.api.proto.Service.DeleteTag.ResponseOrBuilder {",
          "40646:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_descriptor;",
          "40652:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_fieldAccessorTable",
          "40654:                   org.mlflow.api.proto.Service.DeleteTag.Response.class, org.mlflow.api.proto.Service.DeleteTag.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 524 ---",
          "[Context before]",
          "33814:         @java.lang.Override",
          "33815:         public com.google.protobuf.Descriptors.Descriptor",
          "33816:             getDescriptorForType() {",
          "33818:         }",
          "33820:         @java.lang.Override",
          "33823:         }",
          "33825:         @java.lang.Override",
          "33828:           if (!result.isInitialized()) {",
          "33829:             throw newUninitializedMessageException(result);",
          "33830:           }",
          "",
          "[Removed Lines]",
          "33817:           return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_Response_descriptor;",
          "33821:         public org.mlflow.api.proto.Service.SetTag.Response getDefaultInstanceForType() {",
          "33822:           return org.mlflow.api.proto.Service.SetTag.Response.getDefaultInstance();",
          "33826:         public org.mlflow.api.proto.Service.SetTag.Response build() {",
          "33827:           org.mlflow.api.proto.Service.SetTag.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "40681:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_descriptor;",
          "40685:         public org.mlflow.api.proto.Service.DeleteTag.Response getDefaultInstanceForType() {",
          "40686:           return org.mlflow.api.proto.Service.DeleteTag.Response.getDefaultInstance();",
          "40690:         public org.mlflow.api.proto.Service.DeleteTag.Response build() {",
          "40691:           org.mlflow.api.proto.Service.DeleteTag.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 525 ---",
          "[Context before]",
          "33832:         }",
          "33834:         @java.lang.Override",
          "33837:           onBuilt();",
          "33838:           return result;",
          "33839:         }",
          "",
          "[Removed Lines]",
          "33835:         public org.mlflow.api.proto.Service.SetTag.Response buildPartial() {",
          "33836:           org.mlflow.api.proto.Service.SetTag.Response result = new org.mlflow.api.proto.Service.SetTag.Response(this);",
          "",
          "[Added Lines]",
          "40699:         public org.mlflow.api.proto.Service.DeleteTag.Response buildPartial() {",
          "40700:           org.mlflow.api.proto.Service.DeleteTag.Response result = new org.mlflow.api.proto.Service.DeleteTag.Response(this);",
          "",
          "---------------",
          "--- Hunk 526 ---",
          "[Context before]",
          "33872:         }",
          "33873:         @java.lang.Override",
          "33874:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "33877:           } else {",
          "33878:             super.mergeFrom(other);",
          "33879:             return this;",
          "33880:           }",
          "33881:         }",
          "33885:           this.mergeUnknownFields(other.unknownFields);",
          "33886:           onChanged();",
          "33887:           return this;",
          "",
          "[Removed Lines]",
          "33875:           if (other instanceof org.mlflow.api.proto.Service.SetTag.Response) {",
          "33876:             return mergeFrom((org.mlflow.api.proto.Service.SetTag.Response)other);",
          "33883:         public Builder mergeFrom(org.mlflow.api.proto.Service.SetTag.Response other) {",
          "33884:           if (other == org.mlflow.api.proto.Service.SetTag.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "40739:           if (other instanceof org.mlflow.api.proto.Service.DeleteTag.Response) {",
          "40740:             return mergeFrom((org.mlflow.api.proto.Service.DeleteTag.Response)other);",
          "40747:         public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteTag.Response other) {",
          "40748:           if (other == org.mlflow.api.proto.Service.DeleteTag.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 527 ---",
          "[Context before]",
          "33897:             com.google.protobuf.CodedInputStream input,",
          "33898:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "33899:             throws java.io.IOException {",
          "33901:           try {",
          "33902:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "33903:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "33905:             throw e.unwrapIOException();",
          "33906:           } finally {",
          "33907:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "33900:           org.mlflow.api.proto.Service.SetTag.Response parsedMessage = null;",
          "33904:             parsedMessage = (org.mlflow.api.proto.Service.SetTag.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "40764:           org.mlflow.api.proto.Service.DeleteTag.Response parsedMessage = null;",
          "40768:             parsedMessage = (org.mlflow.api.proto.Service.DeleteTag.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 528 ---",
          "[Context before]",
          "33923:         }",
          "33927:       }",
          "33931:       static {",
          "33933:       }",
          "33936:         return DEFAULT_INSTANCE;",
          "33937:       }",
          "",
          "[Removed Lines]",
          "33930:       private static final org.mlflow.api.proto.Service.SetTag.Response DEFAULT_INSTANCE;",
          "33932:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetTag.Response();",
          "33935:       public static org.mlflow.api.proto.Service.SetTag.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "40794:       private static final org.mlflow.api.proto.Service.DeleteTag.Response DEFAULT_INSTANCE;",
          "40796:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteTag.Response();",
          "40799:       public static org.mlflow.api.proto.Service.DeleteTag.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 529 ---",
          "[Context before]",
          "33957:       }",
          "33959:       @java.lang.Override",
          "33961:         return DEFAULT_INSTANCE;",
          "33962:       }",
          "33964:     }",
          "33966:     private int bitField0_;",
          "33968:     private volatile java.lang.Object runId_;",
          "33977:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "33960:       public org.mlflow.api.proto.Service.SetTag.Response getDefaultInstanceForType() {",
          "33967:     public static final int RUN_ID_FIELD_NUMBER = 4;",
          "",
          "[Added Lines]",
          "40824:       public org.mlflow.api.proto.Service.DeleteTag.Response getDefaultInstanceForType() {",
          "40831:     public static final int RUN_ID_FIELD_NUMBER = 1;",
          "",
          "---------------",
          "--- Hunk 530 ---",
          "[Context before]",
          "34024:       }",
          "34025:     }",
          "34090:     public static final int KEY_FIELD_NUMBER = 2;",
          "34091:     private volatile java.lang.Object key_;",
          "",
          "[Removed Lines]",
          "34027:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "34028:     private volatile java.lang.Object runUuid_;",
          "34038:     @java.lang.Override",
          "34039:     public boolean hasRunUuid() {",
          "34040:       return ((bitField0_ & 0x00000002) != 0);",
          "34041:     }",
          "34051:     @java.lang.Override",
          "34052:     public java.lang.String getRunUuid() {",
          "34053:       java.lang.Object ref = runUuid_;",
          "34054:       if (ref instanceof java.lang.String) {",
          "34055:         return (java.lang.String) ref;",
          "34056:       } else {",
          "34057:         com.google.protobuf.ByteString bs =",
          "34058:             (com.google.protobuf.ByteString) ref;",
          "34059:         java.lang.String s = bs.toStringUtf8();",
          "34060:         if (bs.isValidUtf8()) {",
          "34061:           runUuid_ = s;",
          "34062:         }",
          "34063:         return s;",
          "34064:       }",
          "34065:     }",
          "34075:     @java.lang.Override",
          "34076:     public com.google.protobuf.ByteString",
          "34077:         getRunUuidBytes() {",
          "34078:       java.lang.Object ref = runUuid_;",
          "34079:       if (ref instanceof java.lang.String) {",
          "34080:         com.google.protobuf.ByteString b =",
          "34081:             com.google.protobuf.ByteString.copyFromUtf8(",
          "34082:                 (java.lang.String) ref);",
          "34083:         runUuid_ = b;",
          "34084:         return b;",
          "34085:       } else {",
          "34086:         return (com.google.protobuf.ByteString) ref;",
          "34087:       }",
          "34088:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 531 ---",
          "[Context before]",
          "34101:     @java.lang.Override",
          "34102:     public boolean hasKey() {",
          "34104:     }",
          "",
          "[Removed Lines]",
          "34103:       return ((bitField0_ & 0x00000004) != 0);",
          "",
          "[Added Lines]",
          "40903:       return ((bitField0_ & 0x00000002) != 0);",
          "",
          "---------------",
          "--- Hunk 532 ---",
          "[Context before]",
          "34128:     }",
          "34201:     @java.lang.Override",
          "34202:     public com.google.protobuf.ByteString",
          "34205:       if (ref instanceof java.lang.String) {",
          "34206:         com.google.protobuf.ByteString b =",
          "34207:             com.google.protobuf.ByteString.copyFromUtf8(",
          "34208:                 (java.lang.String) ref);",
          "34210:         return b;",
          "34211:       } else {",
          "34212:         return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "34138:     @java.lang.Override",
          "34139:     public com.google.protobuf.ByteString",
          "34140:         getKeyBytes() {",
          "34141:       java.lang.Object ref = key_;",
          "34142:       if (ref instanceof java.lang.String) {",
          "34143:         com.google.protobuf.ByteString b =",
          "34144:             com.google.protobuf.ByteString.copyFromUtf8(",
          "34145:                 (java.lang.String) ref);",
          "34146:         key_ = b;",
          "34147:         return b;",
          "34148:       } else {",
          "34149:         return (com.google.protobuf.ByteString) ref;",
          "34150:       }",
          "34151:     }",
          "34153:     public static final int VALUE_FIELD_NUMBER = 3;",
          "34154:     private volatile java.lang.Object value_;",
          "34164:     @java.lang.Override",
          "34165:     public boolean hasValue() {",
          "34166:       return ((bitField0_ & 0x00000008) != 0);",
          "34167:     }",
          "34177:     @java.lang.Override",
          "34178:     public java.lang.String getValue() {",
          "34179:       java.lang.Object ref = value_;",
          "34180:       if (ref instanceof java.lang.String) {",
          "34181:         return (java.lang.String) ref;",
          "34182:       } else {",
          "34183:         com.google.protobuf.ByteString bs =",
          "34184:             (com.google.protobuf.ByteString) ref;",
          "34185:         java.lang.String s = bs.toStringUtf8();",
          "34186:         if (bs.isValidUtf8()) {",
          "34187:           value_ = s;",
          "34188:         }",
          "34189:         return s;",
          "34190:       }",
          "34191:     }",
          "34203:         getValueBytes() {",
          "34204:       java.lang.Object ref = value_;",
          "34209:         value_ = b;",
          "",
          "[Added Lines]",
          "40938:         getKeyBytes() {",
          "40939:       java.lang.Object ref = key_;",
          "40944:         key_ = b;",
          "",
          "---------------",
          "--- Hunk 533 ---",
          "[Context before]",
          "34227:     @java.lang.Override",
          "34228:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "34229:                         throws java.io.IOException {",
          "34232:       }",
          "34234:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);",
          "34235:       }",
          "34242:       unknownFields.writeTo(output);",
          "34243:     }",
          "",
          "[Removed Lines]",
          "34230:       if (((bitField0_ & 0x00000002) != 0)) {",
          "34231:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "34233:       if (((bitField0_ & 0x00000004) != 0)) {",
          "34236:       if (((bitField0_ & 0x00000008) != 0)) {",
          "34237:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);",
          "34238:       }",
          "34239:       if (((bitField0_ & 0x00000001) != 0)) {",
          "34240:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, runId_);",
          "34241:       }",
          "",
          "[Added Lines]",
          "40965:       if (((bitField0_ & 0x00000001) != 0)) {",
          "40966:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "40968:       if (((bitField0_ & 0x00000002) != 0)) {",
          "",
          "---------------",
          "--- Hunk 534 ---",
          "[Context before]",
          "34248:       if (size != -1) return size;",
          "34250:       size = 0;",
          "34253:       }",
          "34255:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);",
          "34256:       }",
          "34263:       size += unknownFields.getSerializedSize();",
          "34264:       memoizedSize = size;",
          "34265:       return size;",
          "",
          "[Removed Lines]",
          "34251:       if (((bitField0_ & 0x00000002) != 0)) {",
          "34252:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "34254:       if (((bitField0_ & 0x00000004) != 0)) {",
          "34257:       if (((bitField0_ & 0x00000008) != 0)) {",
          "34258:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);",
          "34259:       }",
          "34260:       if (((bitField0_ & 0x00000001) != 0)) {",
          "34261:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, runId_);",
          "34262:       }",
          "",
          "[Added Lines]",
          "40980:       if (((bitField0_ & 0x00000001) != 0)) {",
          "40981:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "40983:       if (((bitField0_ & 0x00000002) != 0)) {",
          "",
          "---------------",
          "--- Hunk 535 ---",
          "[Context before]",
          "34270:       if (obj == this) {",
          "34271:        return true;",
          "34272:       }",
          "34274:         return super.equals(obj);",
          "34275:       }",
          "34278:       if (hasRunId() != other.hasRunId()) return false;",
          "34279:       if (hasRunId()) {",
          "34280:         if (!getRunId()",
          "34281:             .equals(other.getRunId())) return false;",
          "34282:       }",
          "34288:       if (hasKey() != other.hasKey()) return false;",
          "34289:       if (hasKey()) {",
          "34290:         if (!getKey()",
          "34291:             .equals(other.getKey())) return false;",
          "34292:       }",
          "34298:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "34299:       return true;",
          "34300:     }",
          "",
          "[Removed Lines]",
          "34273:       if (!(obj instanceof org.mlflow.api.proto.Service.SetTag)) {",
          "34276:       org.mlflow.api.proto.Service.SetTag other = (org.mlflow.api.proto.Service.SetTag) obj;",
          "34283:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "34284:       if (hasRunUuid()) {",
          "34285:         if (!getRunUuid()",
          "34286:             .equals(other.getRunUuid())) return false;",
          "34287:       }",
          "34293:       if (hasValue() != other.hasValue()) return false;",
          "34294:       if (hasValue()) {",
          "34295:         if (!getValue()",
          "34296:             .equals(other.getValue())) return false;",
          "34297:       }",
          "",
          "[Added Lines]",
          "40996:       if (!(obj instanceof org.mlflow.api.proto.Service.DeleteTag)) {",
          "40999:       org.mlflow.api.proto.Service.DeleteTag other = (org.mlflow.api.proto.Service.DeleteTag) obj;",
          "",
          "---------------",
          "--- Hunk 536 ---",
          "[Context before]",
          "34310:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "34311:         hash = (53 * hash) + getRunId().hashCode();",
          "34312:       }",
          "34317:       if (hasKey()) {",
          "34318:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "34319:         hash = (53 * hash) + getKey().hashCode();",
          "34320:       }",
          "34325:       hash = (29 * hash) + unknownFields.hashCode();",
          "34326:       memoizedHashCode = hash;",
          "34327:       return hash;",
          "34328:     }",
          "34331:         java.nio.ByteBuffer data)",
          "34332:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "34333:       return PARSER.parseFrom(data);",
          "34334:     }",
          "34336:         java.nio.ByteBuffer data,",
          "34337:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "34338:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "34339:       return PARSER.parseFrom(data, extensionRegistry);",
          "34340:     }",
          "34342:         com.google.protobuf.ByteString data)",
          "34343:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "34344:       return PARSER.parseFrom(data);",
          "34345:     }",
          "34347:         com.google.protobuf.ByteString data,",
          "34348:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "34349:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "34350:       return PARSER.parseFrom(data, extensionRegistry);",
          "34351:     }",
          "34353:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "34354:       return PARSER.parseFrom(data);",
          "34355:     }",
          "34357:         byte[] data,",
          "34358:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "34359:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "34360:       return PARSER.parseFrom(data, extensionRegistry);",
          "34361:     }",
          "34363:         throws java.io.IOException {",
          "34364:       return com.google.protobuf.GeneratedMessageV3",
          "34365:           .parseWithIOException(PARSER, input);",
          "34366:     }",
          "34368:         java.io.InputStream input,",
          "34369:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "34370:         throws java.io.IOException {",
          "34371:       return com.google.protobuf.GeneratedMessageV3",
          "34372:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "34373:     }",
          "34375:         throws java.io.IOException {",
          "34376:       return com.google.protobuf.GeneratedMessageV3",
          "34377:           .parseDelimitedWithIOException(PARSER, input);",
          "34378:     }",
          "34380:         java.io.InputStream input,",
          "34381:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "34382:         throws java.io.IOException {",
          "34383:       return com.google.protobuf.GeneratedMessageV3",
          "34384:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "34385:     }",
          "34387:         com.google.protobuf.CodedInputStream input)",
          "34388:         throws java.io.IOException {",
          "34389:       return com.google.protobuf.GeneratedMessageV3",
          "34390:           .parseWithIOException(PARSER, input);",
          "34391:     }",
          "34393:         com.google.protobuf.CodedInputStream input,",
          "34394:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "34395:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "34313:       if (hasRunUuid()) {",
          "34314:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "34315:         hash = (53 * hash) + getRunUuid().hashCode();",
          "34316:       }",
          "34321:       if (hasValue()) {",
          "34322:         hash = (37 * hash) + VALUE_FIELD_NUMBER;",
          "34323:         hash = (53 * hash) + getValue().hashCode();",
          "34324:       }",
          "34330:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "34335:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "34341:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "34346:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "34352:     public static org.mlflow.api.proto.Service.SetTag parseFrom(byte[] data)",
          "34356:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "34362:     public static org.mlflow.api.proto.Service.SetTag parseFrom(java.io.InputStream input)",
          "34367:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "34374:     public static org.mlflow.api.proto.Service.SetTag parseDelimitedFrom(java.io.InputStream input)",
          "34379:     public static org.mlflow.api.proto.Service.SetTag parseDelimitedFrom(",
          "34386:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "34392:     public static org.mlflow.api.proto.Service.SetTag parseFrom(",
          "",
          "[Added Lines]",
          "41035:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "41040:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "41046:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "41051:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "41057:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(byte[] data)",
          "41061:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "41067:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(java.io.InputStream input)",
          "41072:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "41079:     public static org.mlflow.api.proto.Service.DeleteTag parseDelimitedFrom(java.io.InputStream input)",
          "41084:     public static org.mlflow.api.proto.Service.DeleteTag parseDelimitedFrom(",
          "41091:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "41097:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "",
          "---------------",
          "--- Hunk 537 ---",
          "[Context before]",
          "34402:     public static Builder newBuilder() {",
          "34403:       return DEFAULT_INSTANCE.toBuilder();",
          "34404:     }",
          "34406:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "34407:     }",
          "34408:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "34405:     public static Builder newBuilder(org.mlflow.api.proto.Service.SetTag prototype) {",
          "",
          "[Added Lines]",
          "41110:     public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteTag prototype) {",
          "",
          "---------------",
          "--- Hunk 538 ---",
          "[Context before]",
          "34418:       return builder;",
          "34419:     }",
          "34423:     public static final class Builder extends",
          "34424:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "34427:       public static final com.google.protobuf.Descriptors.Descriptor",
          "34428:           getDescriptor() {",
          "34430:       }",
          "34432:       @java.lang.Override",
          "34433:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "34434:           internalGetFieldAccessorTable() {",
          "34436:             .ensureFieldAccessorsInitialized(",
          "34438:       }",
          "34441:       private Builder() {",
          "34442:         maybeForceBuilderInitialization();",
          "34443:       }",
          "",
          "[Removed Lines]",
          "34426:         org.mlflow.api.proto.Service.SetTagOrBuilder {",
          "34429:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_descriptor;",
          "34435:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_fieldAccessorTable",
          "34437:                 org.mlflow.api.proto.Service.SetTag.class, org.mlflow.api.proto.Service.SetTag.Builder.class);",
          "",
          "[Added Lines]",
          "41131:         org.mlflow.api.proto.Service.DeleteTagOrBuilder {",
          "41134:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_descriptor;",
          "41140:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_fieldAccessorTable",
          "41142:                 org.mlflow.api.proto.Service.DeleteTag.class, org.mlflow.api.proto.Service.DeleteTag.Builder.class);",
          "",
          "---------------",
          "--- Hunk 539 ---",
          "[Context before]",
          "34457:         super.clear();",
          "34458:         runId_ = \"\";",
          "34459:         bitField0_ = (bitField0_ & ~0x00000001);",
          "34462:         key_ = \"\";",
          "34466:         return this;",
          "34467:       }",
          "34469:       @java.lang.Override",
          "34470:       public com.google.protobuf.Descriptors.Descriptor",
          "34471:           getDescriptorForType() {",
          "34473:       }",
          "34475:       @java.lang.Override",
          "34478:       }",
          "34480:       @java.lang.Override",
          "34483:         if (!result.isInitialized()) {",
          "34484:           throw newUninitializedMessageException(result);",
          "34485:         }",
          "",
          "[Removed Lines]",
          "34460:         runUuid_ = \"\";",
          "34461:         bitField0_ = (bitField0_ & ~0x00000002);",
          "34463:         bitField0_ = (bitField0_ & ~0x00000004);",
          "34464:         value_ = \"\";",
          "34465:         bitField0_ = (bitField0_ & ~0x00000008);",
          "34472:         return org.mlflow.api.proto.Service.internal_static_mlflow_SetTag_descriptor;",
          "34476:       public org.mlflow.api.proto.Service.SetTag getDefaultInstanceForType() {",
          "34477:         return org.mlflow.api.proto.Service.SetTag.getDefaultInstance();",
          "34481:       public org.mlflow.api.proto.Service.SetTag build() {",
          "34482:         org.mlflow.api.proto.Service.SetTag result = buildPartial();",
          "",
          "[Added Lines]",
          "41166:         bitField0_ = (bitField0_ & ~0x00000002);",
          "41173:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_descriptor;",
          "41177:       public org.mlflow.api.proto.Service.DeleteTag getDefaultInstanceForType() {",
          "41178:         return org.mlflow.api.proto.Service.DeleteTag.getDefaultInstance();",
          "41182:       public org.mlflow.api.proto.Service.DeleteTag build() {",
          "41183:         org.mlflow.api.proto.Service.DeleteTag result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 540 ---",
          "[Context before]",
          "34487:       }",
          "34489:       @java.lang.Override",
          "34492:         int from_bitField0_ = bitField0_;",
          "34493:         int to_bitField0_ = 0;",
          "34494:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "34490:       public org.mlflow.api.proto.Service.SetTag buildPartial() {",
          "34491:         org.mlflow.api.proto.Service.SetTag result = new org.mlflow.api.proto.Service.SetTag(this);",
          "",
          "[Added Lines]",
          "41191:       public org.mlflow.api.proto.Service.DeleteTag buildPartial() {",
          "41192:         org.mlflow.api.proto.Service.DeleteTag result = new org.mlflow.api.proto.Service.DeleteTag(this);",
          "",
          "---------------",
          "--- Hunk 541 ---",
          "[Context before]",
          "34498:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "34499:           to_bitField0_ |= 0x00000002;",
          "34500:         }",
          "34505:         result.key_ = key_;",
          "34510:         result.bitField0_ = to_bitField0_;",
          "34511:         onBuilt();",
          "34512:         return result;",
          "",
          "[Removed Lines]",
          "34501:         result.runUuid_ = runUuid_;",
          "34502:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "34503:           to_bitField0_ |= 0x00000004;",
          "34504:         }",
          "34506:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "34507:           to_bitField0_ |= 0x00000008;",
          "34508:         }",
          "34509:         result.value_ = value_;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 542 ---",
          "[Context before]",
          "34546:       }",
          "34547:       @java.lang.Override",
          "34548:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "34551:         } else {",
          "34552:           super.mergeFrom(other);",
          "34553:           return this;",
          "34554:         }",
          "34555:       }",
          "34559:         if (other.hasRunId()) {",
          "34560:           bitField0_ |= 0x00000001;",
          "34561:           runId_ = other.runId_;",
          "34562:           onChanged();",
          "34563:         }",
          "34569:         if (other.hasKey()) {",
          "34571:           key_ = other.key_;",
          "34572:           onChanged();",
          "34573:         }",
          "34579:         this.mergeUnknownFields(other.unknownFields);",
          "34580:         onChanged();",
          "34581:         return this;",
          "",
          "[Removed Lines]",
          "34549:         if (other instanceof org.mlflow.api.proto.Service.SetTag) {",
          "34550:           return mergeFrom((org.mlflow.api.proto.Service.SetTag)other);",
          "34557:       public Builder mergeFrom(org.mlflow.api.proto.Service.SetTag other) {",
          "34558:         if (other == org.mlflow.api.proto.Service.SetTag.getDefaultInstance()) return this;",
          "34564:         if (other.hasRunUuid()) {",
          "34565:           bitField0_ |= 0x00000002;",
          "34566:           runUuid_ = other.runUuid_;",
          "34567:           onChanged();",
          "34568:         }",
          "34570:           bitField0_ |= 0x00000004;",
          "34574:         if (other.hasValue()) {",
          "34575:           bitField0_ |= 0x00000008;",
          "34576:           value_ = other.value_;",
          "34577:           onChanged();",
          "34578:         }",
          "",
          "[Added Lines]",
          "41242:         if (other instanceof org.mlflow.api.proto.Service.DeleteTag) {",
          "41243:           return mergeFrom((org.mlflow.api.proto.Service.DeleteTag)other);",
          "41250:       public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteTag other) {",
          "41251:         if (other == org.mlflow.api.proto.Service.DeleteTag.getDefaultInstance()) return this;",
          "41258:           bitField0_ |= 0x00000002;",
          "",
          "---------------",
          "--- Hunk 543 ---",
          "[Context before]",
          "34591:           com.google.protobuf.CodedInputStream input,",
          "34592:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "34593:           throws java.io.IOException {",
          "34595:         try {",
          "34596:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "34597:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "34599:           throw e.unwrapIOException();",
          "34600:         } finally {",
          "34601:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "34594:         org.mlflow.api.proto.Service.SetTag parsedMessage = null;",
          "34598:           parsedMessage = (org.mlflow.api.proto.Service.SetTag) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "41277:         org.mlflow.api.proto.Service.DeleteTag parsedMessage = null;",
          "41281:           parsedMessage = (org.mlflow.api.proto.Service.DeleteTag) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 544 ---",
          "[Context before]",
          "34714:         return this;",
          "34715:       }",
          "34831:       private java.lang.Object key_ = \"\";",
          "34841:       public boolean hasKey() {",
          "34843:       }",
          "",
          "[Removed Lines]",
          "34717:       private java.lang.Object runUuid_ = \"\";",
          "34727:       public boolean hasRunUuid() {",
          "34728:         return ((bitField0_ & 0x00000002) != 0);",
          "34729:       }",
          "34739:       public java.lang.String getRunUuid() {",
          "34740:         java.lang.Object ref = runUuid_;",
          "34741:         if (!(ref instanceof java.lang.String)) {",
          "34742:           com.google.protobuf.ByteString bs =",
          "34743:               (com.google.protobuf.ByteString) ref;",
          "34744:           java.lang.String s = bs.toStringUtf8();",
          "34745:           if (bs.isValidUtf8()) {",
          "34746:             runUuid_ = s;",
          "34747:           }",
          "34748:           return s;",
          "34749:         } else {",
          "34750:           return (java.lang.String) ref;",
          "34751:         }",
          "34752:       }",
          "34762:       public com.google.protobuf.ByteString",
          "34763:           getRunUuidBytes() {",
          "34764:         java.lang.Object ref = runUuid_;",
          "34765:         if (ref instanceof String) {",
          "34766:           com.google.protobuf.ByteString b =",
          "34767:               com.google.protobuf.ByteString.copyFromUtf8(",
          "34768:                   (java.lang.String) ref);",
          "34769:           runUuid_ = b;",
          "34770:           return b;",
          "34771:         } else {",
          "34772:           return (com.google.protobuf.ByteString) ref;",
          "34773:         }",
          "34774:       }",
          "34785:       public Builder setRunUuid(",
          "34786:           java.lang.String value) {",
          "34787:         if (value == null) {",
          "34788:     throw new NullPointerException();",
          "34789:   }",
          "34790:   bitField0_ |= 0x00000002;",
          "34791:         runUuid_ = value;",
          "34792:         onChanged();",
          "34793:         return this;",
          "34794:       }",
          "34804:       public Builder clearRunUuid() {",
          "34805:         bitField0_ = (bitField0_ & ~0x00000002);",
          "34806:         runUuid_ = getDefaultInstance().getRunUuid();",
          "34807:         onChanged();",
          "34808:         return this;",
          "34809:       }",
          "34820:       public Builder setRunUuidBytes(",
          "34821:           com.google.protobuf.ByteString value) {",
          "34822:         if (value == null) {",
          "34823:     throw new NullPointerException();",
          "34824:   }",
          "34825:   bitField0_ |= 0x00000002;",
          "34826:         runUuid_ = value;",
          "34827:         onChanged();",
          "34828:         return this;",
          "34829:       }",
          "34842:         return ((bitField0_ & 0x00000004) != 0);",
          "",
          "[Added Lines]",
          "41410:         return ((bitField0_ & 0x00000002) != 0);",
          "",
          "---------------",
          "--- Hunk 545 ---",
          "[Context before]",
          "34901:         if (value == null) {",
          "34902:     throw new NullPointerException();",
          "34903:   }",
          "34905:         key_ = value;",
          "34906:         onChanged();",
          "34907:         return this;",
          "34908:       }",
          "34918:       public Builder clearKey() {",
          "34920:         key_ = getDefaultInstance().getKey();",
          "34921:         onChanged();",
          "34922:         return this;",
          "34923:       }",
          "",
          "[Removed Lines]",
          "34904:   bitField0_ |= 0x00000004;",
          "34919:         bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "[Added Lines]",
          "41469:   bitField0_ |= 0x00000002;",
          "41483:         bitField0_ = (bitField0_ & ~0x00000002);",
          "",
          "---------------",
          "--- Hunk 546 ---",
          "[Context before]",
          "34936:         if (value == null) {",
          "34937:     throw new NullPointerException();",
          "34938:   }",
          "34940:         key_ = value;",
          "34941:         onChanged();",
          "34942:         return this;",
          "34943:       }",
          "35058:       @java.lang.Override",
          "35059:       public final Builder setUnknownFields(",
          "35060:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "34939:   bitField0_ |= 0x00000004;",
          "34945:       private java.lang.Object value_ = \"\";",
          "34955:       public boolean hasValue() {",
          "34956:         return ((bitField0_ & 0x00000008) != 0);",
          "34957:       }",
          "34967:       public java.lang.String getValue() {",
          "34968:         java.lang.Object ref = value_;",
          "34969:         if (!(ref instanceof java.lang.String)) {",
          "34970:           com.google.protobuf.ByteString bs =",
          "34971:               (com.google.protobuf.ByteString) ref;",
          "34972:           java.lang.String s = bs.toStringUtf8();",
          "34973:           if (bs.isValidUtf8()) {",
          "34974:             value_ = s;",
          "34975:           }",
          "34976:           return s;",
          "34977:         } else {",
          "34978:           return (java.lang.String) ref;",
          "34979:         }",
          "34980:       }",
          "34990:       public com.google.protobuf.ByteString",
          "34991:           getValueBytes() {",
          "34992:         java.lang.Object ref = value_;",
          "34993:         if (ref instanceof String) {",
          "34994:           com.google.protobuf.ByteString b =",
          "34995:               com.google.protobuf.ByteString.copyFromUtf8(",
          "34996:                   (java.lang.String) ref);",
          "34997:           value_ = b;",
          "34998:           return b;",
          "34999:         } else {",
          "35000:           return (com.google.protobuf.ByteString) ref;",
          "35001:         }",
          "35002:       }",
          "35013:       public Builder setValue(",
          "35014:           java.lang.String value) {",
          "35015:         if (value == null) {",
          "35016:     throw new NullPointerException();",
          "35017:   }",
          "35018:   bitField0_ |= 0x00000008;",
          "35019:         value_ = value;",
          "35020:         onChanged();",
          "35021:         return this;",
          "35022:       }",
          "35032:       public Builder clearValue() {",
          "35033:         bitField0_ = (bitField0_ & ~0x00000008);",
          "35034:         value_ = getDefaultInstance().getValue();",
          "35035:         onChanged();",
          "35036:         return this;",
          "35037:       }",
          "35048:       public Builder setValueBytes(",
          "35049:           com.google.protobuf.ByteString value) {",
          "35050:         if (value == null) {",
          "35051:     throw new NullPointerException();",
          "35052:   }",
          "35053:   bitField0_ |= 0x00000008;",
          "35054:         value_ = value;",
          "35055:         onChanged();",
          "35056:         return this;",
          "35057:       }",
          "",
          "[Added Lines]",
          "41502:   bitField0_ |= 0x00000002;",
          "",
          "---------------",
          "--- Hunk 547 ---",
          "[Context before]",
          "35068:       }",
          "35072:     }",
          "35076:     static {",
          "35078:     }",
          "35081:       return DEFAULT_INSTANCE;",
          "35082:     }",
          "35086:       @java.lang.Override",
          "35088:           com.google.protobuf.CodedInputStream input,",
          "35089:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35090:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "35092:       }",
          "35093:     };",
          "35096:       return PARSER;",
          "35097:     }",
          "35099:     @java.lang.Override",
          "35101:       return PARSER;",
          "35102:     }",
          "35104:     @java.lang.Override",
          "35106:       return DEFAULT_INSTANCE;",
          "35107:     }",
          "35109:   }",
          "35113:       com.google.protobuf.MessageOrBuilder {",
          "35123:     boolean hasRunId();",
          "35132:     java.lang.String getRunId();",
          "35141:     com.google.protobuf.ByteString",
          "",
          "[Removed Lines]",
          "35075:     private static final org.mlflow.api.proto.Service.SetTag DEFAULT_INSTANCE;",
          "35077:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SetTag();",
          "35080:     public static org.mlflow.api.proto.Service.SetTag getDefaultInstance() {",
          "35084:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SetTag>",
          "35085:         PARSER = new com.google.protobuf.AbstractParser<SetTag>() {",
          "35087:       public SetTag parsePartialFrom(",
          "35091:         return new SetTag(input, extensionRegistry);",
          "35095:     public static com.google.protobuf.Parser<SetTag> parser() {",
          "35100:     public com.google.protobuf.Parser<SetTag> getParserForType() {",
          "35105:     public org.mlflow.api.proto.Service.SetTag getDefaultInstanceForType() {",
          "35111:   public interface DeleteTagOrBuilder extends",
          "",
          "[Added Lines]",
          "41524:     private static final org.mlflow.api.proto.Service.DeleteTag DEFAULT_INSTANCE;",
          "41526:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteTag();",
          "41529:     public static org.mlflow.api.proto.Service.DeleteTag getDefaultInstance() {",
          "41533:     @java.lang.Deprecated public static final com.google.protobuf.Parser<DeleteTag>",
          "41534:         PARSER = new com.google.protobuf.AbstractParser<DeleteTag>() {",
          "41536:       public DeleteTag parsePartialFrom(",
          "41540:         return new DeleteTag(input, extensionRegistry);",
          "41544:     public static com.google.protobuf.Parser<DeleteTag> parser() {",
          "41549:     public com.google.protobuf.Parser<DeleteTag> getParserForType() {",
          "41554:     public org.mlflow.api.proto.Service.DeleteTag getDefaultInstanceForType() {",
          "41560:   public interface GetRunOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 548 ---",
          "[Context before]",
          "35170:     com.google.protobuf.ByteString",
          "35172:   }",
          "35177:       com.google.protobuf.GeneratedMessageV3 implements",
          "35180:   private static final long serialVersionUID = 0L;",
          "35183:       super(builder);",
          "35184:     }",
          "35186:       runId_ = \"\";",
          "35188:     }",
          "35190:     @java.lang.Override",
          "35191:     @SuppressWarnings({\"unused\"})",
          "35192:     protected java.lang.Object newInstance(",
          "35193:         UnusedPrivateParameter unused) {",
          "35195:     }",
          "35197:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "35152:     boolean hasKey();",
          "35161:     java.lang.String getKey();",
          "35171:         getKeyBytes();",
          "35176:   public static final class DeleteTag extends",
          "35179:       DeleteTagOrBuilder {",
          "35182:     private DeleteTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "35185:     private DeleteTag() {",
          "35187:       key_ = \"\";",
          "35194:       return new DeleteTag();",
          "",
          "[Added Lines]",
          "41602:     boolean hasRunUuid();",
          "41612:     java.lang.String getRunUuid();",
          "41623:         getRunUuidBytes();",
          "41628:   public static final class GetRun extends",
          "41631:       GetRunOrBuilder {",
          "41634:     private GetRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "41637:     private GetRun() {",
          "41639:       runUuid_ = \"\";",
          "41646:       return new GetRun();",
          "",
          "---------------",
          "--- Hunk 549 ---",
          "[Context before]",
          "35199:     getUnknownFields() {",
          "35200:       return this.unknownFields;",
          "35201:     }",
          "35203:         com.google.protobuf.CodedInputStream input,",
          "35204:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35205:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "35202:     private DeleteTag(",
          "",
          "[Added Lines]",
          "41654:     private GetRun(",
          "",
          "---------------",
          "--- Hunk 550 ---",
          "[Context before]",
          "35220:               break;",
          "35221:             case 10: {",
          "35222:               com.google.protobuf.ByteString bs = input.readBytes();",
          "35225:               break;",
          "35226:             }",
          "35227:             case 18: {",
          "35228:               com.google.protobuf.ByteString bs = input.readBytes();",
          "35231:               break;",
          "35232:             }",
          "35233:             default: {",
          "",
          "[Removed Lines]",
          "35223:               bitField0_ |= 0x00000001;",
          "35224:               runId_ = bs;",
          "35229:               bitField0_ |= 0x00000002;",
          "35230:               key_ = bs;",
          "",
          "[Added Lines]",
          "41675:               bitField0_ |= 0x00000002;",
          "41676:               runUuid_ = bs;",
          "41681:               bitField0_ |= 0x00000001;",
          "41682:               runId_ = bs;",
          "",
          "---------------",
          "--- Hunk 551 ---",
          "[Context before]",
          "35251:     }",
          "35252:     public static final com.google.protobuf.Descriptors.Descriptor",
          "35253:         getDescriptor() {",
          "35255:     }",
          "35257:     @java.lang.Override",
          "35258:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "35259:         internalGetFieldAccessorTable() {",
          "35261:           .ensureFieldAccessorsInitialized(",
          "35263:     }",
          "35265:     public interface ResponseOrBuilder extends",
          "35267:         com.google.protobuf.MessageOrBuilder {",
          "35268:     }",
          "35272:     public static final class Response extends",
          "35273:         com.google.protobuf.GeneratedMessageV3 implements",
          "35275:         ResponseOrBuilder {",
          "35276:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "35254:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_descriptor;",
          "35260:       return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_fieldAccessorTable",
          "35262:               org.mlflow.api.proto.Service.DeleteTag.class, org.mlflow.api.proto.Service.DeleteTag.Builder.class);",
          "",
          "[Added Lines]",
          "41706:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_descriptor;",
          "41712:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_fieldAccessorTable",
          "41714:               org.mlflow.api.proto.Service.GetRun.class, org.mlflow.api.proto.Service.GetRun.Builder.class);",
          "41729:       boolean hasRun();",
          "41738:       org.mlflow.api.proto.Service.Run getRun();",
          "41746:       org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder();",
          "",
          "---------------",
          "--- Hunk 552 ---",
          "[Context before]",
          "35301:         if (extensionRegistry == null) {",
          "35302:           throw new java.lang.NullPointerException();",
          "35303:         }",
          "35304:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "35305:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "35306:         try {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41783:         int mutable_bitField0_ = 0;",
          "",
          "---------------",
          "--- Hunk 553 ---",
          "[Context before]",
          "35311:               case 0:",
          "35312:                 done = true;",
          "35313:                 break;",
          "35314:               default: {",
          "35315:                 if (!parseUnknownField(",
          "35316:                     input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41794:               case 10: {",
          "41795:                 org.mlflow.api.proto.Service.Run.Builder subBuilder = null;",
          "41796:                 if (((bitField0_ & 0x00000001) != 0)) {",
          "41797:                   subBuilder = run_.toBuilder();",
          "41798:                 }",
          "41799:                 run_ = input.readMessage(org.mlflow.api.proto.Service.Run.PARSER, extensionRegistry);",
          "41800:                 if (subBuilder != null) {",
          "41801:                   subBuilder.mergeFrom(run_);",
          "41802:                   run_ = subBuilder.buildPartial();",
          "41803:                 }",
          "41804:                 bitField0_ |= 0x00000001;",
          "41805:                 break;",
          "41806:               }",
          "",
          "---------------",
          "--- Hunk 554 ---",
          "[Context before]",
          "35332:       }",
          "35333:       public static final com.google.protobuf.Descriptors.Descriptor",
          "35334:           getDescriptor() {",
          "35336:       }",
          "35338:       @java.lang.Override",
          "35339:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "35340:           internalGetFieldAccessorTable() {",
          "35342:             .ensureFieldAccessorsInitialized(",
          "35344:       }",
          "35346:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "35335:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_descriptor;",
          "35341:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_fieldAccessorTable",
          "35343:                 org.mlflow.api.proto.Service.DeleteTag.Response.class, org.mlflow.api.proto.Service.DeleteTag.Response.Builder.class);",
          "",
          "[Added Lines]",
          "41828:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_descriptor;",
          "41834:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_fieldAccessorTable",
          "41836:                 org.mlflow.api.proto.Service.GetRun.Response.class, org.mlflow.api.proto.Service.GetRun.Response.Builder.class);",
          "41837:       }",
          "41839:       private int bitField0_;",
          "41840:       public static final int RUN_FIELD_NUMBER = 1;",
          "41841:       private org.mlflow.api.proto.Service.Run run_;",
          "41850:       @java.lang.Override",
          "41851:       public boolean hasRun() {",
          "41852:         return ((bitField0_ & 0x00000001) != 0);",
          "41853:       }",
          "41862:       @java.lang.Override",
          "41863:       public org.mlflow.api.proto.Service.Run getRun() {",
          "41864:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "41865:       }",
          "41873:       @java.lang.Override",
          "41874:       public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "41875:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "",
          "---------------",
          "--- Hunk 555 ---",
          "[Context before]",
          "35357:       @java.lang.Override",
          "35358:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "35359:                           throws java.io.IOException {",
          "35360:         unknownFields.writeTo(output);",
          "35361:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41892:         if (((bitField0_ & 0x00000001) != 0)) {",
          "41893:           output.writeMessage(1, getRun());",
          "41894:         }",
          "",
          "---------------",
          "--- Hunk 556 ---",
          "[Context before]",
          "35366:         if (size != -1) return size;",
          "35368:         size = 0;",
          "35369:         size += unknownFields.getSerializedSize();",
          "35370:         memoizedSize = size;",
          "35371:         return size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41904:         if (((bitField0_ & 0x00000001) != 0)) {",
          "41905:           size += com.google.protobuf.CodedOutputStream",
          "41906:             .computeMessageSize(1, getRun());",
          "41907:         }",
          "",
          "---------------",
          "--- Hunk 557 ---",
          "[Context before]",
          "35376:         if (obj == this) {",
          "35377:          return true;",
          "35378:         }",
          "35380:           return super.equals(obj);",
          "35381:         }",
          "35384:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "35385:         return true;",
          "35386:       }",
          "",
          "[Removed Lines]",
          "35379:         if (!(obj instanceof org.mlflow.api.proto.Service.DeleteTag.Response)) {",
          "35382:         org.mlflow.api.proto.Service.DeleteTag.Response other = (org.mlflow.api.proto.Service.DeleteTag.Response) obj;",
          "",
          "[Added Lines]",
          "41918:         if (!(obj instanceof org.mlflow.api.proto.Service.GetRun.Response)) {",
          "41921:         org.mlflow.api.proto.Service.GetRun.Response other = (org.mlflow.api.proto.Service.GetRun.Response) obj;",
          "41923:         if (hasRun() != other.hasRun()) return false;",
          "41924:         if (hasRun()) {",
          "41925:           if (!getRun()",
          "41926:               .equals(other.getRun())) return false;",
          "41927:         }",
          "",
          "---------------",
          "--- Hunk 558 ---",
          "[Context before]",
          "35392:         }",
          "35393:         int hash = 41;",
          "35394:         hash = (19 * hash) + getDescriptor().hashCode();",
          "35395:         hash = (29 * hash) + unknownFields.hashCode();",
          "35396:         memoizedHashCode = hash;",
          "35397:         return hash;",
          "35398:       }",
          "35401:           java.nio.ByteBuffer data)",
          "35402:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "35403:         return PARSER.parseFrom(data);",
          "35404:       }",
          "35406:           java.nio.ByteBuffer data,",
          "35407:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35408:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "35409:         return PARSER.parseFrom(data, extensionRegistry);",
          "35410:       }",
          "35412:           com.google.protobuf.ByteString data)",
          "35413:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "35414:         return PARSER.parseFrom(data);",
          "35415:       }",
          "35417:           com.google.protobuf.ByteString data,",
          "35418:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35419:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "35420:         return PARSER.parseFrom(data, extensionRegistry);",
          "35421:       }",
          "35423:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "35424:         return PARSER.parseFrom(data);",
          "35425:       }",
          "35427:           byte[] data,",
          "35428:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35429:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "35430:         return PARSER.parseFrom(data, extensionRegistry);",
          "35431:       }",
          "35433:           throws java.io.IOException {",
          "35434:         return com.google.protobuf.GeneratedMessageV3",
          "35435:             .parseWithIOException(PARSER, input);",
          "35436:       }",
          "35438:           java.io.InputStream input,",
          "35439:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35440:           throws java.io.IOException {",
          "35441:         return com.google.protobuf.GeneratedMessageV3",
          "35442:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "35443:       }",
          "35445:           throws java.io.IOException {",
          "35446:         return com.google.protobuf.GeneratedMessageV3",
          "35447:             .parseDelimitedWithIOException(PARSER, input);",
          "35448:       }",
          "35450:           java.io.InputStream input,",
          "35451:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35452:           throws java.io.IOException {",
          "35453:         return com.google.protobuf.GeneratedMessageV3",
          "35454:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "35455:       }",
          "35457:           com.google.protobuf.CodedInputStream input)",
          "35458:           throws java.io.IOException {",
          "35459:         return com.google.protobuf.GeneratedMessageV3",
          "35460:             .parseWithIOException(PARSER, input);",
          "35461:       }",
          "35463:           com.google.protobuf.CodedInputStream input,",
          "35464:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35465:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "35400:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "35405:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "35411:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "35416:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "35422:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(byte[] data)",
          "35426:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "35432:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(java.io.InputStream input)",
          "35437:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "35444:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseDelimitedFrom(java.io.InputStream input)",
          "35449:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseDelimitedFrom(",
          "35456:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "35462:       public static org.mlflow.api.proto.Service.DeleteTag.Response parseFrom(",
          "",
          "[Added Lines]",
          "41939:         if (hasRun()) {",
          "41940:           hash = (37 * hash) + RUN_FIELD_NUMBER;",
          "41941:           hash = (53 * hash) + getRun().hashCode();",
          "41942:         }",
          "41948:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "41953:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "41959:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "41964:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "41970:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(byte[] data)",
          "41974:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "41980:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(java.io.InputStream input)",
          "41985:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "41992:       public static org.mlflow.api.proto.Service.GetRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "41997:       public static org.mlflow.api.proto.Service.GetRun.Response parseDelimitedFrom(",
          "42004:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "42010:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 559 ---",
          "[Context before]",
          "35472:       public static Builder newBuilder() {",
          "35473:         return DEFAULT_INSTANCE.toBuilder();",
          "35474:       }",
          "35476:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "35477:       }",
          "35478:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "35475:       public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteTag.Response prototype) {",
          "",
          "[Added Lines]",
          "42023:       public static Builder newBuilder(org.mlflow.api.proto.Service.GetRun.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 560 ---",
          "[Context before]",
          "35488:         return builder;",
          "35489:       }",
          "35493:       public static final class Builder extends",
          "35494:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "35497:         public static final com.google.protobuf.Descriptors.Descriptor",
          "35498:             getDescriptor() {",
          "35500:         }",
          "35502:         @java.lang.Override",
          "35503:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "35504:             internalGetFieldAccessorTable() {",
          "35506:               .ensureFieldAccessorsInitialized(",
          "35508:         }",
          "35511:         private Builder() {",
          "35512:           maybeForceBuilderInitialization();",
          "35513:         }",
          "",
          "[Removed Lines]",
          "35496:           org.mlflow.api.proto.Service.DeleteTag.ResponseOrBuilder {",
          "35499:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_descriptor;",
          "35505:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_fieldAccessorTable",
          "35507:                   org.mlflow.api.proto.Service.DeleteTag.Response.class, org.mlflow.api.proto.Service.DeleteTag.Response.Builder.class);",
          "",
          "[Added Lines]",
          "42044:           org.mlflow.api.proto.Service.GetRun.ResponseOrBuilder {",
          "42047:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_descriptor;",
          "42053:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_fieldAccessorTable",
          "42055:                   org.mlflow.api.proto.Service.GetRun.Response.class, org.mlflow.api.proto.Service.GetRun.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 561 ---",
          "[Context before]",
          "35520:         private void maybeForceBuilderInitialization() {",
          "35521:           if (com.google.protobuf.GeneratedMessageV3",
          "35522:                   .alwaysUseFieldBuilders) {",
          "35523:           }",
          "35524:         }",
          "35525:         @java.lang.Override",
          "35526:         public Builder clear() {",
          "35527:           super.clear();",
          "35528:           return this;",
          "35529:         }",
          "35531:         @java.lang.Override",
          "35532:         public com.google.protobuf.Descriptors.Descriptor",
          "35533:             getDescriptorForType() {",
          "35535:         }",
          "35537:         @java.lang.Override",
          "35540:         }",
          "35542:         @java.lang.Override",
          "35545:           if (!result.isInitialized()) {",
          "35546:             throw newUninitializedMessageException(result);",
          "35547:           }",
          "",
          "[Removed Lines]",
          "35534:           return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_Response_descriptor;",
          "35538:         public org.mlflow.api.proto.Service.DeleteTag.Response getDefaultInstanceForType() {",
          "35539:           return org.mlflow.api.proto.Service.DeleteTag.Response.getDefaultInstance();",
          "35543:         public org.mlflow.api.proto.Service.DeleteTag.Response build() {",
          "35544:           org.mlflow.api.proto.Service.DeleteTag.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "42071:             getRunFieldBuilder();",
          "42077:           if (runBuilder_ == null) {",
          "42078:             run_ = null;",
          "42079:           } else {",
          "42080:             runBuilder_.clear();",
          "42081:           }",
          "42082:           bitField0_ = (bitField0_ & ~0x00000001);",
          "42089:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_descriptor;",
          "42093:         public org.mlflow.api.proto.Service.GetRun.Response getDefaultInstanceForType() {",
          "42094:           return org.mlflow.api.proto.Service.GetRun.Response.getDefaultInstance();",
          "42098:         public org.mlflow.api.proto.Service.GetRun.Response build() {",
          "42099:           org.mlflow.api.proto.Service.GetRun.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 562 ---",
          "[Context before]",
          "35549:         }",
          "35551:         @java.lang.Override",
          "35554:           onBuilt();",
          "35555:           return result;",
          "35556:         }",
          "",
          "[Removed Lines]",
          "35552:         public org.mlflow.api.proto.Service.DeleteTag.Response buildPartial() {",
          "35553:           org.mlflow.api.proto.Service.DeleteTag.Response result = new org.mlflow.api.proto.Service.DeleteTag.Response(this);",
          "",
          "[Added Lines]",
          "42107:         public org.mlflow.api.proto.Service.GetRun.Response buildPartial() {",
          "42108:           org.mlflow.api.proto.Service.GetRun.Response result = new org.mlflow.api.proto.Service.GetRun.Response(this);",
          "42109:           int from_bitField0_ = bitField0_;",
          "42110:           int to_bitField0_ = 0;",
          "42111:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "42112:             if (runBuilder_ == null) {",
          "42113:               result.run_ = run_;",
          "42114:             } else {",
          "42115:               result.run_ = runBuilder_.build();",
          "42116:             }",
          "42117:             to_bitField0_ |= 0x00000001;",
          "42118:           }",
          "42119:           result.bitField0_ = to_bitField0_;",
          "",
          "---------------",
          "--- Hunk 563 ---",
          "[Context before]",
          "35589:         }",
          "35590:         @java.lang.Override",
          "35591:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "35594:           } else {",
          "35595:             super.mergeFrom(other);",
          "35596:             return this;",
          "35597:           }",
          "35598:         }",
          "35602:           this.mergeUnknownFields(other.unknownFields);",
          "35603:           onChanged();",
          "35604:           return this;",
          "",
          "[Removed Lines]",
          "35592:           if (other instanceof org.mlflow.api.proto.Service.DeleteTag.Response) {",
          "35593:             return mergeFrom((org.mlflow.api.proto.Service.DeleteTag.Response)other);",
          "35600:         public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteTag.Response other) {",
          "35601:           if (other == org.mlflow.api.proto.Service.DeleteTag.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "42158:           if (other instanceof org.mlflow.api.proto.Service.GetRun.Response) {",
          "42159:             return mergeFrom((org.mlflow.api.proto.Service.GetRun.Response)other);",
          "42166:         public Builder mergeFrom(org.mlflow.api.proto.Service.GetRun.Response other) {",
          "42167:           if (other == org.mlflow.api.proto.Service.GetRun.Response.getDefaultInstance()) return this;",
          "42168:           if (other.hasRun()) {",
          "42169:             mergeRun(other.getRun());",
          "42170:           }",
          "",
          "---------------",
          "--- Hunk 564 ---",
          "[Context before]",
          "35614:             com.google.protobuf.CodedInputStream input,",
          "35615:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35616:             throws java.io.IOException {",
          "35618:           try {",
          "35619:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "35620:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "35622:             throw e.unwrapIOException();",
          "35623:           } finally {",
          "35624:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "35617:           org.mlflow.api.proto.Service.DeleteTag.Response parsedMessage = null;",
          "35621:             parsedMessage = (org.mlflow.api.proto.Service.DeleteTag.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "42186:           org.mlflow.api.proto.Service.GetRun.Response parsedMessage = null;",
          "42190:             parsedMessage = (org.mlflow.api.proto.Service.GetRun.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 565 ---",
          "[Context before]",
          "35627:           }",
          "35628:           return this;",
          "35629:         }",
          "35630:         @java.lang.Override",
          "35631:         public final Builder setUnknownFields(",
          "35632:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42199:         private int bitField0_;",
          "42201:         private org.mlflow.api.proto.Service.Run run_;",
          "42202:         private com.google.protobuf.SingleFieldBuilderV3<",
          "42203:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder> runBuilder_;",
          "42212:         public boolean hasRun() {",
          "42213:           return ((bitField0_ & 0x00000001) != 0);",
          "42214:         }",
          "42223:         public org.mlflow.api.proto.Service.Run getRun() {",
          "42224:           if (runBuilder_ == null) {",
          "42225:             return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "42226:           } else {",
          "42227:             return runBuilder_.getMessage();",
          "42228:           }",
          "42229:         }",
          "42237:         public Builder setRun(org.mlflow.api.proto.Service.Run value) {",
          "42238:           if (runBuilder_ == null) {",
          "42239:             if (value == null) {",
          "42240:               throw new NullPointerException();",
          "42241:             }",
          "42242:             run_ = value;",
          "42243:             onChanged();",
          "42244:           } else {",
          "42245:             runBuilder_.setMessage(value);",
          "42246:           }",
          "42247:           bitField0_ |= 0x00000001;",
          "42248:           return this;",
          "42249:         }",
          "42257:         public Builder setRun(",
          "42258:             org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "42259:           if (runBuilder_ == null) {",
          "42260:             run_ = builderForValue.build();",
          "42261:             onChanged();",
          "42262:           } else {",
          "42263:             runBuilder_.setMessage(builderForValue.build());",
          "42264:           }",
          "42265:           bitField0_ |= 0x00000001;",
          "42266:           return this;",
          "42267:         }",
          "42275:         public Builder mergeRun(org.mlflow.api.proto.Service.Run value) {",
          "42276:           if (runBuilder_ == null) {",
          "42277:             if (((bitField0_ & 0x00000001) != 0) &&",
          "42278:                 run_ != null &&",
          "42279:                 run_ != org.mlflow.api.proto.Service.Run.getDefaultInstance()) {",
          "42280:               run_ =",
          "42281:                 org.mlflow.api.proto.Service.Run.newBuilder(run_).mergeFrom(value).buildPartial();",
          "42282:             } else {",
          "42283:               run_ = value;",
          "42284:             }",
          "42285:             onChanged();",
          "42286:           } else {",
          "42287:             runBuilder_.mergeFrom(value);",
          "42288:           }",
          "42289:           bitField0_ |= 0x00000001;",
          "42290:           return this;",
          "42291:         }",
          "42299:         public Builder clearRun() {",
          "42300:           if (runBuilder_ == null) {",
          "42301:             run_ = null;",
          "42302:             onChanged();",
          "42303:           } else {",
          "42304:             runBuilder_.clear();",
          "42305:           }",
          "42306:           bitField0_ = (bitField0_ & ~0x00000001);",
          "42307:           return this;",
          "42308:         }",
          "42316:         public org.mlflow.api.proto.Service.Run.Builder getRunBuilder() {",
          "42317:           bitField0_ |= 0x00000001;",
          "42318:           onChanged();",
          "42319:           return getRunFieldBuilder().getBuilder();",
          "42320:         }",
          "42328:         public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "42329:           if (runBuilder_ != null) {",
          "42330:             return runBuilder_.getMessageOrBuilder();",
          "42331:           } else {",
          "42332:             return run_ == null ?",
          "42333:                 org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "42334:           }",
          "42335:         }",
          "42343:         private com.google.protobuf.SingleFieldBuilderV3<",
          "42344:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>",
          "42345:             getRunFieldBuilder() {",
          "42346:           if (runBuilder_ == null) {",
          "42347:             runBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "42348:                 org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>(",
          "42349:                     getRun(),",
          "42350:                     getParentForChildren(),",
          "42351:                     isClean());",
          "42352:             run_ = null;",
          "42353:           }",
          "42354:           return runBuilder_;",
          "42355:         }",
          "",
          "---------------",
          "--- Hunk 566 ---",
          "[Context before]",
          "35640:         }",
          "35644:       }",
          "35648:       static {",
          "35650:       }",
          "35653:         return DEFAULT_INSTANCE;",
          "35654:       }",
          "",
          "[Removed Lines]",
          "35647:       private static final org.mlflow.api.proto.Service.DeleteTag.Response DEFAULT_INSTANCE;",
          "35649:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteTag.Response();",
          "35652:       public static org.mlflow.api.proto.Service.DeleteTag.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "42373:       private static final org.mlflow.api.proto.Service.GetRun.Response DEFAULT_INSTANCE;",
          "42375:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetRun.Response();",
          "42378:       public static org.mlflow.api.proto.Service.GetRun.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 567 ---",
          "[Context before]",
          "35674:       }",
          "35676:       @java.lang.Override",
          "35678:         return DEFAULT_INSTANCE;",
          "35679:       }",
          "35681:     }",
          "35683:     private int bitField0_;",
          "35685:     private volatile java.lang.Object runId_;",
          "35694:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "35677:       public org.mlflow.api.proto.Service.DeleteTag.Response getDefaultInstanceForType() {",
          "35684:     public static final int RUN_ID_FIELD_NUMBER = 1;",
          "",
          "[Added Lines]",
          "42403:       public org.mlflow.api.proto.Service.GetRun.Response getDefaultInstanceForType() {",
          "42410:     public static final int RUN_ID_FIELD_NUMBER = 2;",
          "",
          "---------------",
          "--- Hunk 568 ---",
          "[Context before]",
          "35741:       }",
          "35742:     }",
          "35754:     @java.lang.Override",
          "35756:       return ((bitField0_ & 0x00000002) != 0);",
          "35757:     }",
          "35766:     @java.lang.Override",
          "35769:       if (ref instanceof java.lang.String) {",
          "35770:         return (java.lang.String) ref;",
          "35771:       } else {",
          "",
          "[Removed Lines]",
          "35744:     public static final int KEY_FIELD_NUMBER = 2;",
          "35745:     private volatile java.lang.Object key_;",
          "35755:     public boolean hasKey() {",
          "35767:     public java.lang.String getKey() {",
          "35768:       java.lang.Object ref = key_;",
          "",
          "[Added Lines]",
          "42470:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "42471:     private volatile java.lang.Object runUuid_;",
          "42482:     public boolean hasRunUuid() {",
          "42495:     public java.lang.String getRunUuid() {",
          "42496:       java.lang.Object ref = runUuid_;",
          "",
          "---------------",
          "--- Hunk 569 ---",
          "[Context before]",
          "35773:             (com.google.protobuf.ByteString) ref;",
          "35774:         java.lang.String s = bs.toStringUtf8();",
          "35775:         if (bs.isValidUtf8()) {",
          "35777:         }",
          "35778:         return s;",
          "35779:       }",
          "35780:     }",
          "35789:     @java.lang.Override",
          "35790:     public com.google.protobuf.ByteString",
          "35793:       if (ref instanceof java.lang.String) {",
          "35794:         com.google.protobuf.ByteString b =",
          "35795:             com.google.protobuf.ByteString.copyFromUtf8(",
          "35796:                 (java.lang.String) ref);",
          "35798:         return b;",
          "35799:       } else {",
          "35800:         return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "35776:           key_ = s;",
          "35791:         getKeyBytes() {",
          "35792:       java.lang.Object ref = key_;",
          "35797:         key_ = b;",
          "",
          "[Added Lines]",
          "42504:           runUuid_ = s;",
          "42520:         getRunUuidBytes() {",
          "42521:       java.lang.Object ref = runUuid_;",
          "42526:         runUuid_ = b;",
          "",
          "---------------",
          "--- Hunk 570 ---",
          "[Context before]",
          "35815:     @java.lang.Override",
          "35816:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "35817:                         throws java.io.IOException {",
          "35821:       if (((bitField0_ & 0x00000002) != 0)) {",
          "35823:       }",
          "35824:       unknownFields.writeTo(output);",
          "35825:     }",
          "",
          "[Removed Lines]",
          "35818:       if (((bitField0_ & 0x00000001) != 0)) {",
          "35819:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "35820:       }",
          "35822:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);",
          "",
          "[Added Lines]",
          "42548:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "42549:       }",
          "42550:       if (((bitField0_ & 0x00000001) != 0)) {",
          "42551:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, runId_);",
          "",
          "---------------",
          "--- Hunk 571 ---",
          "[Context before]",
          "35830:       if (size != -1) return size;",
          "35832:       size = 0;",
          "35836:       if (((bitField0_ & 0x00000002) != 0)) {",
          "35838:       }",
          "35839:       size += unknownFields.getSerializedSize();",
          "35840:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "35833:       if (((bitField0_ & 0x00000001) != 0)) {",
          "35834:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "35835:       }",
          "35837:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);",
          "",
          "[Added Lines]",
          "42563:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "42564:       }",
          "42565:       if (((bitField0_ & 0x00000001) != 0)) {",
          "42566:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, runId_);",
          "",
          "---------------",
          "--- Hunk 572 ---",
          "[Context before]",
          "35846:       if (obj == this) {",
          "35847:        return true;",
          "35848:       }",
          "35850:         return super.equals(obj);",
          "35851:       }",
          "35854:       if (hasRunId() != other.hasRunId()) return false;",
          "35855:       if (hasRunId()) {",
          "35856:         if (!getRunId()",
          "35857:             .equals(other.getRunId())) return false;",
          "35858:       }",
          "35863:       }",
          "35864:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "35865:       return true;",
          "",
          "[Removed Lines]",
          "35849:       if (!(obj instanceof org.mlflow.api.proto.Service.DeleteTag)) {",
          "35852:       org.mlflow.api.proto.Service.DeleteTag other = (org.mlflow.api.proto.Service.DeleteTag) obj;",
          "35859:       if (hasKey() != other.hasKey()) return false;",
          "35860:       if (hasKey()) {",
          "35861:         if (!getKey()",
          "35862:             .equals(other.getKey())) return false;",
          "",
          "[Added Lines]",
          "42578:       if (!(obj instanceof org.mlflow.api.proto.Service.GetRun)) {",
          "42581:       org.mlflow.api.proto.Service.GetRun other = (org.mlflow.api.proto.Service.GetRun) obj;",
          "42588:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "42589:       if (hasRunUuid()) {",
          "42590:         if (!getRunUuid()",
          "42591:             .equals(other.getRunUuid())) return false;",
          "",
          "---------------",
          "--- Hunk 573 ---",
          "[Context before]",
          "35876:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "35877:         hash = (53 * hash) + getRunId().hashCode();",
          "35878:       }",
          "35882:       }",
          "35883:       hash = (29 * hash) + unknownFields.hashCode();",
          "35884:       memoizedHashCode = hash;",
          "35885:       return hash;",
          "35886:     }",
          "35889:         java.nio.ByteBuffer data)",
          "35890:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "35891:       return PARSER.parseFrom(data);",
          "35892:     }",
          "35894:         java.nio.ByteBuffer data,",
          "35895:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35896:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "35897:       return PARSER.parseFrom(data, extensionRegistry);",
          "35898:     }",
          "35900:         com.google.protobuf.ByteString data)",
          "35901:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "35902:       return PARSER.parseFrom(data);",
          "35903:     }",
          "35905:         com.google.protobuf.ByteString data,",
          "35906:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35907:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "35908:       return PARSER.parseFrom(data, extensionRegistry);",
          "35909:     }",
          "35911:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "35912:       return PARSER.parseFrom(data);",
          "35913:     }",
          "35915:         byte[] data,",
          "35916:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35917:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "35918:       return PARSER.parseFrom(data, extensionRegistry);",
          "35919:     }",
          "35921:         throws java.io.IOException {",
          "35922:       return com.google.protobuf.GeneratedMessageV3",
          "35923:           .parseWithIOException(PARSER, input);",
          "35924:     }",
          "35926:         java.io.InputStream input,",
          "35927:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35928:         throws java.io.IOException {",
          "35929:       return com.google.protobuf.GeneratedMessageV3",
          "35930:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "35931:     }",
          "35933:         throws java.io.IOException {",
          "35934:       return com.google.protobuf.GeneratedMessageV3",
          "35935:           .parseDelimitedWithIOException(PARSER, input);",
          "35936:     }",
          "35938:         java.io.InputStream input,",
          "35939:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35940:         throws java.io.IOException {",
          "35941:       return com.google.protobuf.GeneratedMessageV3",
          "35942:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "35943:     }",
          "35945:         com.google.protobuf.CodedInputStream input)",
          "35946:         throws java.io.IOException {",
          "35947:       return com.google.protobuf.GeneratedMessageV3",
          "35948:           .parseWithIOException(PARSER, input);",
          "35949:     }",
          "35951:         com.google.protobuf.CodedInputStream input,",
          "35952:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "35953:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "35879:       if (hasKey()) {",
          "35880:         hash = (37 * hash) + KEY_FIELD_NUMBER;",
          "35881:         hash = (53 * hash) + getKey().hashCode();",
          "35888:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "35893:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "35899:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "35904:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "35910:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(byte[] data)",
          "35914:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "35920:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(java.io.InputStream input)",
          "35925:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "35932:     public static org.mlflow.api.proto.Service.DeleteTag parseDelimitedFrom(java.io.InputStream input)",
          "35937:     public static org.mlflow.api.proto.Service.DeleteTag parseDelimitedFrom(",
          "35944:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "35950:     public static org.mlflow.api.proto.Service.DeleteTag parseFrom(",
          "",
          "[Added Lines]",
          "42608:       if (hasRunUuid()) {",
          "42609:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "42610:         hash = (53 * hash) + getRunUuid().hashCode();",
          "42617:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "42622:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "42628:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "42633:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "42639:     public static org.mlflow.api.proto.Service.GetRun parseFrom(byte[] data)",
          "42643:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "42649:     public static org.mlflow.api.proto.Service.GetRun parseFrom(java.io.InputStream input)",
          "42654:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "42661:     public static org.mlflow.api.proto.Service.GetRun parseDelimitedFrom(java.io.InputStream input)",
          "42666:     public static org.mlflow.api.proto.Service.GetRun parseDelimitedFrom(",
          "42673:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "42679:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "",
          "---------------",
          "--- Hunk 574 ---",
          "[Context before]",
          "35960:     public static Builder newBuilder() {",
          "35961:       return DEFAULT_INSTANCE.toBuilder();",
          "35962:     }",
          "35964:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "35965:     }",
          "35966:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "35963:     public static Builder newBuilder(org.mlflow.api.proto.Service.DeleteTag prototype) {",
          "",
          "[Added Lines]",
          "42692:     public static Builder newBuilder(org.mlflow.api.proto.Service.GetRun prototype) {",
          "",
          "---------------",
          "--- Hunk 575 ---",
          "[Context before]",
          "35976:       return builder;",
          "35977:     }",
          "35981:     public static final class Builder extends",
          "35982:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "35985:       public static final com.google.protobuf.Descriptors.Descriptor",
          "35986:           getDescriptor() {",
          "35988:       }",
          "35990:       @java.lang.Override",
          "35991:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "35992:           internalGetFieldAccessorTable() {",
          "35994:             .ensureFieldAccessorsInitialized(",
          "35996:       }",
          "35999:       private Builder() {",
          "36000:         maybeForceBuilderInitialization();",
          "36001:       }",
          "",
          "[Removed Lines]",
          "35984:         org.mlflow.api.proto.Service.DeleteTagOrBuilder {",
          "35987:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_descriptor;",
          "35993:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_fieldAccessorTable",
          "35995:                 org.mlflow.api.proto.Service.DeleteTag.class, org.mlflow.api.proto.Service.DeleteTag.Builder.class);",
          "",
          "[Added Lines]",
          "42713:         org.mlflow.api.proto.Service.GetRunOrBuilder {",
          "42716:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_descriptor;",
          "42722:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_fieldAccessorTable",
          "42724:                 org.mlflow.api.proto.Service.GetRun.class, org.mlflow.api.proto.Service.GetRun.Builder.class);",
          "",
          "---------------",
          "--- Hunk 576 ---",
          "[Context before]",
          "36015:         super.clear();",
          "36016:         runId_ = \"\";",
          "36017:         bitField0_ = (bitField0_ & ~0x00000001);",
          "36019:         bitField0_ = (bitField0_ & ~0x00000002);",
          "36020:         return this;",
          "36021:       }",
          "",
          "[Removed Lines]",
          "36018:         key_ = \"\";",
          "",
          "[Added Lines]",
          "42747:         runUuid_ = \"\";",
          "",
          "---------------",
          "--- Hunk 577 ---",
          "[Context before]",
          "36023:       @java.lang.Override",
          "36024:       public com.google.protobuf.Descriptors.Descriptor",
          "36025:           getDescriptorForType() {",
          "36027:       }",
          "36029:       @java.lang.Override",
          "36032:       }",
          "36034:       @java.lang.Override",
          "36037:         if (!result.isInitialized()) {",
          "36038:           throw newUninitializedMessageException(result);",
          "36039:         }",
          "",
          "[Removed Lines]",
          "36026:         return org.mlflow.api.proto.Service.internal_static_mlflow_DeleteTag_descriptor;",
          "36030:       public org.mlflow.api.proto.Service.DeleteTag getDefaultInstanceForType() {",
          "36031:         return org.mlflow.api.proto.Service.DeleteTag.getDefaultInstance();",
          "36035:       public org.mlflow.api.proto.Service.DeleteTag build() {",
          "36036:         org.mlflow.api.proto.Service.DeleteTag result = buildPartial();",
          "",
          "[Added Lines]",
          "42755:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_descriptor;",
          "42759:       public org.mlflow.api.proto.Service.GetRun getDefaultInstanceForType() {",
          "42760:         return org.mlflow.api.proto.Service.GetRun.getDefaultInstance();",
          "42764:       public org.mlflow.api.proto.Service.GetRun build() {",
          "42765:         org.mlflow.api.proto.Service.GetRun result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 578 ---",
          "[Context before]",
          "36041:       }",
          "36043:       @java.lang.Override",
          "36046:         int from_bitField0_ = bitField0_;",
          "36047:         int to_bitField0_ = 0;",
          "36048:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "",
          "[Removed Lines]",
          "36044:       public org.mlflow.api.proto.Service.DeleteTag buildPartial() {",
          "36045:         org.mlflow.api.proto.Service.DeleteTag result = new org.mlflow.api.proto.Service.DeleteTag(this);",
          "",
          "[Added Lines]",
          "42773:       public org.mlflow.api.proto.Service.GetRun buildPartial() {",
          "42774:         org.mlflow.api.proto.Service.GetRun result = new org.mlflow.api.proto.Service.GetRun(this);",
          "",
          "---------------",
          "--- Hunk 579 ---",
          "[Context before]",
          "36052:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "36053:           to_bitField0_ |= 0x00000002;",
          "36054:         }",
          "36056:         result.bitField0_ = to_bitField0_;",
          "36057:         onBuilt();",
          "36058:         return result;",
          "",
          "[Removed Lines]",
          "36055:         result.key_ = key_;",
          "",
          "[Added Lines]",
          "42784:         result.runUuid_ = runUuid_;",
          "",
          "---------------",
          "--- Hunk 580 ---",
          "[Context before]",
          "36092:       }",
          "36093:       @java.lang.Override",
          "36094:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "36097:         } else {",
          "36098:           super.mergeFrom(other);",
          "36099:           return this;",
          "36100:         }",
          "36101:       }",
          "36105:         if (other.hasRunId()) {",
          "36106:           bitField0_ |= 0x00000001;",
          "36107:           runId_ = other.runId_;",
          "36108:           onChanged();",
          "36109:         }",
          "36111:           bitField0_ |= 0x00000002;",
          "36113:           onChanged();",
          "36114:         }",
          "36115:         this.mergeUnknownFields(other.unknownFields);",
          "",
          "[Removed Lines]",
          "36095:         if (other instanceof org.mlflow.api.proto.Service.DeleteTag) {",
          "36096:           return mergeFrom((org.mlflow.api.proto.Service.DeleteTag)other);",
          "36103:       public Builder mergeFrom(org.mlflow.api.proto.Service.DeleteTag other) {",
          "36104:         if (other == org.mlflow.api.proto.Service.DeleteTag.getDefaultInstance()) return this;",
          "36110:         if (other.hasKey()) {",
          "36112:           key_ = other.key_;",
          "",
          "[Added Lines]",
          "42824:         if (other instanceof org.mlflow.api.proto.Service.GetRun) {",
          "42825:           return mergeFrom((org.mlflow.api.proto.Service.GetRun)other);",
          "42832:       public Builder mergeFrom(org.mlflow.api.proto.Service.GetRun other) {",
          "42833:         if (other == org.mlflow.api.proto.Service.GetRun.getDefaultInstance()) return this;",
          "42839:         if (other.hasRunUuid()) {",
          "42841:           runUuid_ = other.runUuid_;",
          "",
          "---------------",
          "--- Hunk 581 ---",
          "[Context before]",
          "36127:           com.google.protobuf.CodedInputStream input,",
          "36128:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36129:           throws java.io.IOException {",
          "36131:         try {",
          "36132:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "36133:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "36135:           throw e.unwrapIOException();",
          "36136:         } finally {",
          "36137:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "36130:         org.mlflow.api.proto.Service.DeleteTag parsedMessage = null;",
          "36134:           parsedMessage = (org.mlflow.api.proto.Service.DeleteTag) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "42859:         org.mlflow.api.proto.Service.GetRun parsedMessage = null;",
          "42863:           parsedMessage = (org.mlflow.api.proto.Service.GetRun) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 582 ---",
          "[Context before]",
          "36250:         return this;",
          "36251:       }",
          "36263:         return ((bitField0_ & 0x00000002) != 0);",
          "36264:       }",
          "36275:         if (!(ref instanceof java.lang.String)) {",
          "36276:           com.google.protobuf.ByteString bs =",
          "36277:               (com.google.protobuf.ByteString) ref;",
          "36278:           java.lang.String s = bs.toStringUtf8();",
          "36279:           if (bs.isValidUtf8()) {",
          "36281:           }",
          "36282:           return s;",
          "36283:         } else {",
          "",
          "[Removed Lines]",
          "36253:       private java.lang.Object key_ = \"\";",
          "36262:       public boolean hasKey() {",
          "36273:       public java.lang.String getKey() {",
          "36274:         java.lang.Object ref = key_;",
          "36280:             key_ = s;",
          "",
          "[Added Lines]",
          "42982:       private java.lang.Object runUuid_ = \"\";",
          "42992:       public boolean hasRunUuid() {",
          "43004:       public java.lang.String getRunUuid() {",
          "43005:         java.lang.Object ref = runUuid_;",
          "43011:             runUuid_ = s;",
          "",
          "---------------",
          "--- Hunk 583 ---",
          "[Context before]",
          "36286:       }",
          "36295:       public com.google.protobuf.ByteString",
          "36298:         if (ref instanceof String) {",
          "36299:           com.google.protobuf.ByteString b =",
          "36300:               com.google.protobuf.ByteString.copyFromUtf8(",
          "36301:                   (java.lang.String) ref);",
          "36303:           return b;",
          "36304:         } else {",
          "36305:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "36296:           getKeyBytes() {",
          "36297:         java.lang.Object ref = key_;",
          "36302:           key_ = b;",
          "",
          "[Added Lines]",
          "43028:           getRunUuidBytes() {",
          "43029:         java.lang.Object ref = runUuid_;",
          "43034:           runUuid_ = b;",
          "",
          "---------------",
          "--- Hunk 584 ---",
          "[Context before]",
          "36307:       }",
          "36318:           java.lang.String value) {",
          "36319:         if (value == null) {",
          "36320:     throw new NullPointerException();",
          "36321:   }",
          "36322:   bitField0_ |= 0x00000002;",
          "36324:         onChanged();",
          "36325:         return this;",
          "36326:       }",
          "36336:         bitField0_ = (bitField0_ & ~0x00000002);",
          "36338:         onChanged();",
          "36339:         return this;",
          "36340:       }",
          "36351:           com.google.protobuf.ByteString value) {",
          "36352:         if (value == null) {",
          "36353:     throw new NullPointerException();",
          "36354:   }",
          "36355:   bitField0_ |= 0x00000002;",
          "36357:         onChanged();",
          "36358:         return this;",
          "36359:       }",
          "",
          "[Removed Lines]",
          "36317:       public Builder setKey(",
          "36323:         key_ = value;",
          "36335:       public Builder clearKey() {",
          "36337:         key_ = getDefaultInstance().getKey();",
          "36350:       public Builder setKeyBytes(",
          "36356:         key_ = value;",
          "",
          "[Added Lines]",
          "43050:       public Builder setRunUuid(",
          "43056:         runUuid_ = value;",
          "43069:       public Builder clearRunUuid() {",
          "43071:         runUuid_ = getDefaultInstance().getRunUuid();",
          "43085:       public Builder setRunUuidBytes(",
          "43091:         runUuid_ = value;",
          "",
          "---------------",
          "--- Hunk 585 ---",
          "[Context before]",
          "36370:       }",
          "36374:     }",
          "36378:     static {",
          "36380:     }",
          "36383:       return DEFAULT_INSTANCE;",
          "36384:     }",
          "36388:       @java.lang.Override",
          "36390:           com.google.protobuf.CodedInputStream input,",
          "36391:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36392:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "36394:       }",
          "36395:     };",
          "36398:       return PARSER;",
          "36399:     }",
          "36401:     @java.lang.Override",
          "36403:       return PARSER;",
          "36404:     }",
          "36406:     @java.lang.Override",
          "36408:       return DEFAULT_INSTANCE;",
          "36409:     }",
          "36411:   }",
          "36415:       com.google.protobuf.MessageOrBuilder {",
          "36443:     com.google.protobuf.ByteString",
          "36475:     com.google.protobuf.ByteString",
          "36477:   }",
          "36482:       com.google.protobuf.GeneratedMessageV3 implements",
          "36485:   private static final long serialVersionUID = 0L;",
          "36488:       super(builder);",
          "36489:     }",
          "36493:     }",
          "36495:     @java.lang.Override",
          "36496:     @SuppressWarnings({\"unused\"})",
          "36497:     protected java.lang.Object newInstance(",
          "36498:         UnusedPrivateParameter unused) {",
          "36500:     }",
          "36502:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "36377:     private static final org.mlflow.api.proto.Service.DeleteTag DEFAULT_INSTANCE;",
          "36379:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.DeleteTag();",
          "36382:     public static org.mlflow.api.proto.Service.DeleteTag getDefaultInstance() {",
          "36386:     @java.lang.Deprecated public static final com.google.protobuf.Parser<DeleteTag>",
          "36387:         PARSER = new com.google.protobuf.AbstractParser<DeleteTag>() {",
          "36389:       public DeleteTag parsePartialFrom(",
          "36393:         return new DeleteTag(input, extensionRegistry);",
          "36397:     public static com.google.protobuf.Parser<DeleteTag> parser() {",
          "36402:     public com.google.protobuf.Parser<DeleteTag> getParserForType() {",
          "36407:     public org.mlflow.api.proto.Service.DeleteTag getDefaultInstanceForType() {",
          "36413:   public interface GetRunOrBuilder extends",
          "36425:     boolean hasRunId();",
          "36434:     java.lang.String getRunId();",
          "36444:         getRunIdBytes();",
          "36455:     boolean hasRunUuid();",
          "36465:     java.lang.String getRunUuid();",
          "36476:         getRunUuidBytes();",
          "36481:   public static final class GetRun extends",
          "36484:       GetRunOrBuilder {",
          "36487:     private GetRun(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "36490:     private GetRun() {",
          "36491:       runId_ = \"\";",
          "36492:       runUuid_ = \"\";",
          "36499:       return new GetRun();",
          "",
          "[Added Lines]",
          "43112:     private static final org.mlflow.api.proto.Service.GetRun DEFAULT_INSTANCE;",
          "43114:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetRun();",
          "43117:     public static org.mlflow.api.proto.Service.GetRun getDefaultInstance() {",
          "43121:     @java.lang.Deprecated public static final com.google.protobuf.Parser<GetRun>",
          "43122:         PARSER = new com.google.protobuf.AbstractParser<GetRun>() {",
          "43124:       public GetRun parsePartialFrom(",
          "43128:         return new GetRun(input, extensionRegistry);",
          "43132:     public static com.google.protobuf.Parser<GetRun> parser() {",
          "43137:     public com.google.protobuf.Parser<GetRun> getParserForType() {",
          "43142:     public org.mlflow.api.proto.Service.GetRun getDefaultInstanceForType() {",
          "43148:   public interface SearchRunsOrBuilder extends",
          "43160:     java.util.List<java.lang.String>",
          "43161:         getExperimentIdsList();",
          "43170:     int getExperimentIdsCount();",
          "43180:     java.lang.String getExperimentIds(int index);",
          "43191:         getExperimentIdsBytes(int index);",
          "43207:     boolean hasFilter();",
          "43222:     java.lang.String getFilter();",
          "43238:         getFilterBytes();",
          "43249:     boolean hasRunViewType();",
          "43259:     org.mlflow.api.proto.Service.ViewType getRunViewType();",
          "43272:     boolean hasMaxResults();",
          "43284:     int getMaxResults();",
          "43298:     java.util.List<java.lang.String>",
          "43299:         getOrderByList();",
          "43312:     int getOrderByCount();",
          "43326:     java.lang.String getOrderBy(int index);",
          "43340:     com.google.protobuf.ByteString",
          "43341:         getOrderByBytes(int index);",
          "43347:     boolean hasPageToken();",
          "43352:     java.lang.String getPageToken();",
          "43357:     com.google.protobuf.ByteString",
          "43358:         getPageTokenBytes();",
          "43363:   public static final class SearchRuns extends",
          "43366:       SearchRunsOrBuilder {",
          "43369:     private SearchRuns(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "43372:     private SearchRuns() {",
          "43373:       experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "43374:       filter_ = \"\";",
          "43375:       runViewType_ = 1;",
          "43376:       maxResults_ = 1000;",
          "43377:       orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "43378:       pageToken_ = \"\";",
          "43385:       return new SearchRuns();",
          "",
          "---------------",
          "--- Hunk 586 ---",
          "[Context before]",
          "36504:     getUnknownFields() {",
          "36505:       return this.unknownFields;",
          "36506:     }",
          "36508:         com.google.protobuf.CodedInputStream input,",
          "36509:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36510:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "36507:     private GetRun(",
          "",
          "[Added Lines]",
          "43393:     private SearchRuns(",
          "",
          "---------------",
          "--- Hunk 587 ---",
          "[Context before]",
          "36525:               break;",
          "36526:             case 10: {",
          "36527:               com.google.protobuf.ByteString bs = input.readBytes();",
          "36530:               break;",
          "36531:             }",
          "36533:               com.google.protobuf.ByteString bs = input.readBytes();",
          "36534:               bitField0_ |= 0x00000001;",
          "36536:               break;",
          "36537:             }",
          "36538:             default: {",
          "",
          "[Removed Lines]",
          "36528:               bitField0_ |= 0x00000002;",
          "36529:               runUuid_ = bs;",
          "36532:             case 18: {",
          "36535:               runId_ = bs;",
          "",
          "[Added Lines]",
          "43414:               if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "43415:                 experimentIds_ = new com.google.protobuf.LazyStringArrayList();",
          "43416:                 mutable_bitField0_ |= 0x00000001;",
          "43417:               }",
          "43418:               experimentIds_.add(bs);",
          "43421:             case 24: {",
          "43422:               int rawValue = input.readEnum();",
          "43423:                 @SuppressWarnings(\"deprecation\")",
          "43424:               org.mlflow.api.proto.Service.ViewType value = org.mlflow.api.proto.Service.ViewType.valueOf(rawValue);",
          "43425:               if (value == null) {",
          "43426:                 unknownFields.mergeVarintField(3, rawValue);",
          "43427:               } else {",
          "43428:                 bitField0_ |= 0x00000002;",
          "43429:                 runViewType_ = rawValue;",
          "43430:               }",
          "43431:               break;",
          "43432:             }",
          "43433:             case 34: {",
          "43436:               filter_ = bs;",
          "43437:               break;",
          "43438:             }",
          "43439:             case 40: {",
          "43440:               bitField0_ |= 0x00000004;",
          "43441:               maxResults_ = input.readInt32();",
          "43442:               break;",
          "43443:             }",
          "43444:             case 50: {",
          "43445:               com.google.protobuf.ByteString bs = input.readBytes();",
          "43446:               if (!((mutable_bitField0_ & 0x00000010) != 0)) {",
          "43447:                 orderBy_ = new com.google.protobuf.LazyStringArrayList();",
          "43448:                 mutable_bitField0_ |= 0x00000010;",
          "43449:               }",
          "43450:               orderBy_.add(bs);",
          "43451:               break;",
          "43452:             }",
          "43453:             case 58: {",
          "43454:               com.google.protobuf.ByteString bs = input.readBytes();",
          "43455:               bitField0_ |= 0x00000008;",
          "43456:               pageToken_ = bs;",
          "",
          "---------------",
          "--- Hunk 588 ---",
          "[Context before]",
          "36550:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "36551:             e).setUnfinishedMessage(this);",
          "36552:       } finally {",
          "36553:         this.unknownFields = unknownFields.build();",
          "36554:         makeExtensionsImmutable();",
          "36555:       }",
          "36556:     }",
          "36557:     public static final com.google.protobuf.Descriptors.Descriptor",
          "36558:         getDescriptor() {",
          "36560:     }",
          "36562:     @java.lang.Override",
          "36563:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "36564:         internalGetFieldAccessorTable() {",
          "36566:           .ensureFieldAccessorsInitialized(",
          "36568:     }",
          "36570:     public interface ResponseOrBuilder extends",
          "36572:         com.google.protobuf.MessageOrBuilder {",
          "36600:     }",
          "36604:     public static final class Response extends",
          "36605:         com.google.protobuf.GeneratedMessageV3 implements",
          "36607:         ResponseOrBuilder {",
          "36608:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "36559:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_descriptor;",
          "36565:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_fieldAccessorTable",
          "36567:               org.mlflow.api.proto.Service.GetRun.class, org.mlflow.api.proto.Service.GetRun.Builder.class);",
          "36582:       boolean hasRun();",
          "36591:       org.mlflow.api.proto.Service.Run getRun();",
          "36599:       org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder();",
          "",
          "[Added Lines]",
          "43474:         if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "43475:           experimentIds_ = experimentIds_.getUnmodifiableView();",
          "43476:         }",
          "43477:         if (((mutable_bitField0_ & 0x00000010) != 0)) {",
          "43478:           orderBy_ = orderBy_.getUnmodifiableView();",
          "43479:         }",
          "43486:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_descriptor;",
          "43492:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_fieldAccessorTable",
          "43494:               org.mlflow.api.proto.Service.SearchRuns.class, org.mlflow.api.proto.Service.SearchRuns.Builder.class);",
          "43508:       java.util.List<org.mlflow.api.proto.Service.Run>",
          "43509:           getRunsList();",
          "43517:       org.mlflow.api.proto.Service.Run getRuns(int index);",
          "43525:       int getRunsCount();",
          "43533:       java.util.List<? extends org.mlflow.api.proto.Service.RunOrBuilder>",
          "43534:           getRunsOrBuilderList();",
          "43542:       org.mlflow.api.proto.Service.RunOrBuilder getRunsOrBuilder(",
          "43543:           int index);",
          "43549:       boolean hasNextPageToken();",
          "43554:       java.lang.String getNextPageToken();",
          "43559:       com.google.protobuf.ByteString",
          "43560:           getNextPageTokenBytes();",
          "",
          "---------------",
          "--- Hunk 589 ---",
          "[Context before]",
          "36611:         super(builder);",
          "36612:       }",
          "36613:       private Response() {",
          "36614:       }",
          "36616:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43575:         runs_ = java.util.Collections.emptyList();",
          "43576:         nextPageToken_ = \"\";",
          "",
          "---------------",
          "--- Hunk 590 ---",
          "[Context before]",
          "36645:                 done = true;",
          "36646:                 break;",
          "36647:               case 10: {",
          "36656:                 }",
          "36657:                 bitField0_ |= 0x00000001;",
          "36658:                 break;",
          "36659:               }",
          "36660:               default: {",
          "",
          "[Removed Lines]",
          "36648:                 org.mlflow.api.proto.Service.Run.Builder subBuilder = null;",
          "36649:                 if (((bitField0_ & 0x00000001) != 0)) {",
          "36650:                   subBuilder = run_.toBuilder();",
          "36651:                 }",
          "36652:                 run_ = input.readMessage(org.mlflow.api.proto.Service.Run.PARSER, extensionRegistry);",
          "36653:                 if (subBuilder != null) {",
          "36654:                   subBuilder.mergeFrom(run_);",
          "36655:                   run_ = subBuilder.buildPartial();",
          "",
          "[Added Lines]",
          "43611:                 if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "43612:                   runs_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Run>();",
          "43613:                   mutable_bitField0_ |= 0x00000001;",
          "43615:                 runs_.add(",
          "43616:                     input.readMessage(org.mlflow.api.proto.Service.Run.PARSER, extensionRegistry));",
          "43617:                 break;",
          "43618:               }",
          "43619:               case 18: {",
          "43620:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "43622:                 nextPageToken_ = bs;",
          "",
          "---------------",
          "--- Hunk 591 ---",
          "[Context before]",
          "36672:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "36673:               e).setUnfinishedMessage(this);",
          "36674:         } finally {",
          "36675:           this.unknownFields = unknownFields.build();",
          "36676:           makeExtensionsImmutable();",
          "36677:         }",
          "36678:       }",
          "36679:       public static final com.google.protobuf.Descriptors.Descriptor",
          "36680:           getDescriptor() {",
          "36682:       }",
          "36684:       @java.lang.Override",
          "36685:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "36686:           internalGetFieldAccessorTable() {",
          "36688:             .ensureFieldAccessorsInitialized(",
          "36690:       }",
          "36692:       private int bitField0_;",
          "36703:       @java.lang.Override",
          "36706:       }",
          "36715:       @java.lang.Override",
          "36718:       }",
          "36726:       @java.lang.Override",
          "36729:       }",
          "36731:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "36681:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_descriptor;",
          "36687:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_fieldAccessorTable",
          "36689:                 org.mlflow.api.proto.Service.GetRun.Response.class, org.mlflow.api.proto.Service.GetRun.Response.Builder.class);",
          "36693:       public static final int RUN_FIELD_NUMBER = 1;",
          "36694:       private org.mlflow.api.proto.Service.Run run_;",
          "36704:       public boolean hasRun() {",
          "36705:         return ((bitField0_ & 0x00000001) != 0);",
          "36716:       public org.mlflow.api.proto.Service.Run getRun() {",
          "36717:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "36727:       public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "36728:         return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "",
          "[Added Lines]",
          "43640:           if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "43641:             runs_ = java.util.Collections.unmodifiableList(runs_);",
          "43642:           }",
          "43649:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_descriptor;",
          "43655:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_fieldAccessorTable",
          "43657:                 org.mlflow.api.proto.Service.SearchRuns.Response.class, org.mlflow.api.proto.Service.SearchRuns.Response.Builder.class);",
          "43661:       public static final int RUNS_FIELD_NUMBER = 1;",
          "43662:       private java.util.List<org.mlflow.api.proto.Service.Run> runs_;",
          "43671:       public java.util.List<org.mlflow.api.proto.Service.Run> getRunsList() {",
          "43672:         return runs_;",
          "43682:       public java.util.List<? extends org.mlflow.api.proto.Service.RunOrBuilder>",
          "43683:           getRunsOrBuilderList() {",
          "43684:         return runs_;",
          "43694:       public int getRunsCount() {",
          "43695:         return runs_.size();",
          "43696:       }",
          "43704:       @java.lang.Override",
          "43705:       public org.mlflow.api.proto.Service.Run getRuns(int index) {",
          "43706:         return runs_.get(index);",
          "43707:       }",
          "43715:       @java.lang.Override",
          "43716:       public org.mlflow.api.proto.Service.RunOrBuilder getRunsOrBuilder(",
          "43717:           int index) {",
          "43718:         return runs_.get(index);",
          "43719:       }",
          "43721:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;",
          "43722:       private volatile java.lang.Object nextPageToken_;",
          "43727:       @java.lang.Override",
          "43728:       public boolean hasNextPageToken() {",
          "43729:         return ((bitField0_ & 0x00000001) != 0);",
          "43730:       }",
          "43735:       @java.lang.Override",
          "43736:       public java.lang.String getNextPageToken() {",
          "43737:         java.lang.Object ref = nextPageToken_;",
          "43738:         if (ref instanceof java.lang.String) {",
          "43739:           return (java.lang.String) ref;",
          "43740:         } else {",
          "43741:           com.google.protobuf.ByteString bs =",
          "43742:               (com.google.protobuf.ByteString) ref;",
          "43743:           java.lang.String s = bs.toStringUtf8();",
          "43744:           if (bs.isValidUtf8()) {",
          "43745:             nextPageToken_ = s;",
          "43746:           }",
          "43747:           return s;",
          "43748:         }",
          "43749:       }",
          "43754:       @java.lang.Override",
          "43755:       public com.google.protobuf.ByteString",
          "43756:           getNextPageTokenBytes() {",
          "43757:         java.lang.Object ref = nextPageToken_;",
          "43758:         if (ref instanceof java.lang.String) {",
          "43759:           com.google.protobuf.ByteString b =",
          "43760:               com.google.protobuf.ByteString.copyFromUtf8(",
          "43761:                   (java.lang.String) ref);",
          "43762:           nextPageToken_ = b;",
          "43763:           return b;",
          "43764:         } else {",
          "43765:           return (com.google.protobuf.ByteString) ref;",
          "43766:         }",
          "",
          "---------------",
          "--- Hunk 592 ---",
          "[Context before]",
          "36742:       @java.lang.Override",
          "36743:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "36744:                           throws java.io.IOException {",
          "36745:         if (((bitField0_ & 0x00000001) != 0)) {",
          "36747:         }",
          "36748:         unknownFields.writeTo(output);",
          "36749:       }",
          "",
          "[Removed Lines]",
          "36746:           output.writeMessage(1, getRun());",
          "",
          "[Added Lines]",
          "43783:         for (int i = 0; i < runs_.size(); i++) {",
          "43784:           output.writeMessage(1, runs_.get(i));",
          "43785:         }",
          "43787:           com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);",
          "",
          "---------------",
          "--- Hunk 593 ---",
          "[Context before]",
          "36754:         if (size != -1) return size;",
          "36756:         size = 0;",
          "36758:           size += com.google.protobuf.CodedOutputStream",
          "36760:         }",
          "36761:         size += unknownFields.getSerializedSize();",
          "36762:         memoizedSize = size;",
          "",
          "[Removed Lines]",
          "36757:         if (((bitField0_ & 0x00000001) != 0)) {",
          "36759:             .computeMessageSize(1, getRun());",
          "",
          "[Added Lines]",
          "43798:         for (int i = 0; i < runs_.size(); i++) {",
          "43800:             .computeMessageSize(1, runs_.get(i));",
          "43801:         }",
          "43802:         if (((bitField0_ & 0x00000001) != 0)) {",
          "43803:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);",
          "",
          "---------------",
          "--- Hunk 594 ---",
          "[Context before]",
          "36768:         if (obj == this) {",
          "36769:          return true;",
          "36770:         }",
          "36772:           return super.equals(obj);",
          "36773:         }",
          "36780:         }",
          "36781:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "36782:         return true;",
          "",
          "[Removed Lines]",
          "36771:         if (!(obj instanceof org.mlflow.api.proto.Service.GetRun.Response)) {",
          "36774:         org.mlflow.api.proto.Service.GetRun.Response other = (org.mlflow.api.proto.Service.GetRun.Response) obj;",
          "36776:         if (hasRun() != other.hasRun()) return false;",
          "36777:         if (hasRun()) {",
          "36778:           if (!getRun()",
          "36779:               .equals(other.getRun())) return false;",
          "",
          "[Added Lines]",
          "43815:         if (!(obj instanceof org.mlflow.api.proto.Service.SearchRuns.Response)) {",
          "43818:         org.mlflow.api.proto.Service.SearchRuns.Response other = (org.mlflow.api.proto.Service.SearchRuns.Response) obj;",
          "43820:         if (!getRunsList()",
          "43821:             .equals(other.getRunsList())) return false;",
          "43822:         if (hasNextPageToken() != other.hasNextPageToken()) return false;",
          "43823:         if (hasNextPageToken()) {",
          "43824:           if (!getNextPageToken()",
          "43825:               .equals(other.getNextPageToken())) return false;",
          "",
          "---------------",
          "--- Hunk 595 ---",
          "[Context before]",
          "36789:         }",
          "36790:         int hash = 41;",
          "36791:         hash = (19 * hash) + getDescriptor().hashCode();",
          "36795:         }",
          "36796:         hash = (29 * hash) + unknownFields.hashCode();",
          "36797:         memoizedHashCode = hash;",
          "36798:         return hash;",
          "36799:       }",
          "36802:           java.nio.ByteBuffer data)",
          "36803:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "36804:         return PARSER.parseFrom(data);",
          "36805:       }",
          "36807:           java.nio.ByteBuffer data,",
          "36808:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36809:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "36810:         return PARSER.parseFrom(data, extensionRegistry);",
          "36811:       }",
          "36813:           com.google.protobuf.ByteString data)",
          "36814:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "36815:         return PARSER.parseFrom(data);",
          "36816:       }",
          "36818:           com.google.protobuf.ByteString data,",
          "36819:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36820:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "36821:         return PARSER.parseFrom(data, extensionRegistry);",
          "36822:       }",
          "36824:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "36825:         return PARSER.parseFrom(data);",
          "36826:       }",
          "36828:           byte[] data,",
          "36829:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36830:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "36831:         return PARSER.parseFrom(data, extensionRegistry);",
          "36832:       }",
          "36834:           throws java.io.IOException {",
          "36835:         return com.google.protobuf.GeneratedMessageV3",
          "36836:             .parseWithIOException(PARSER, input);",
          "36837:       }",
          "36839:           java.io.InputStream input,",
          "36840:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36841:           throws java.io.IOException {",
          "36842:         return com.google.protobuf.GeneratedMessageV3",
          "36843:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "36844:       }",
          "36846:           throws java.io.IOException {",
          "36847:         return com.google.protobuf.GeneratedMessageV3",
          "36848:             .parseDelimitedWithIOException(PARSER, input);",
          "36849:       }",
          "36851:           java.io.InputStream input,",
          "36852:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36853:           throws java.io.IOException {",
          "36854:         return com.google.protobuf.GeneratedMessageV3",
          "36855:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "36856:       }",
          "36858:           com.google.protobuf.CodedInputStream input)",
          "36859:           throws java.io.IOException {",
          "36860:         return com.google.protobuf.GeneratedMessageV3",
          "36861:             .parseWithIOException(PARSER, input);",
          "36862:       }",
          "36864:           com.google.protobuf.CodedInputStream input,",
          "36865:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "36866:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "36792:         if (hasRun()) {",
          "36793:           hash = (37 * hash) + RUN_FIELD_NUMBER;",
          "36794:           hash = (53 * hash) + getRun().hashCode();",
          "36801:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "36806:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "36812:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "36817:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "36823:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(byte[] data)",
          "36827:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "36833:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(java.io.InputStream input)",
          "36838:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "36845:       public static org.mlflow.api.proto.Service.GetRun.Response parseDelimitedFrom(java.io.InputStream input)",
          "36850:       public static org.mlflow.api.proto.Service.GetRun.Response parseDelimitedFrom(",
          "36857:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "36863:       public static org.mlflow.api.proto.Service.GetRun.Response parseFrom(",
          "",
          "[Added Lines]",
          "43838:         if (getRunsCount() > 0) {",
          "43839:           hash = (37 * hash) + RUNS_FIELD_NUMBER;",
          "43840:           hash = (53 * hash) + getRunsList().hashCode();",
          "43841:         }",
          "43842:         if (hasNextPageToken()) {",
          "43843:           hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;",
          "43844:           hash = (53 * hash) + getNextPageToken().hashCode();",
          "43851:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "43856:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "43862:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "43867:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "43873:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(byte[] data)",
          "43877:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "43883:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(java.io.InputStream input)",
          "43888:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "43895:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseDelimitedFrom(java.io.InputStream input)",
          "43900:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseDelimitedFrom(",
          "43907:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "43913:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 596 ---",
          "[Context before]",
          "36873:       public static Builder newBuilder() {",
          "36874:         return DEFAULT_INSTANCE.toBuilder();",
          "36875:       }",
          "36877:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "36878:       }",
          "36879:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "36876:       public static Builder newBuilder(org.mlflow.api.proto.Service.GetRun.Response prototype) {",
          "",
          "[Added Lines]",
          "43926:       public static Builder newBuilder(org.mlflow.api.proto.Service.SearchRuns.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 597 ---",
          "[Context before]",
          "36889:         return builder;",
          "36890:       }",
          "36894:       public static final class Builder extends",
          "36895:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "36898:         public static final com.google.protobuf.Descriptors.Descriptor",
          "36899:             getDescriptor() {",
          "36901:         }",
          "36903:         @java.lang.Override",
          "36904:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "36905:             internalGetFieldAccessorTable() {",
          "36907:               .ensureFieldAccessorsInitialized(",
          "36909:         }",
          "36912:         private Builder() {",
          "36913:           maybeForceBuilderInitialization();",
          "36914:         }",
          "",
          "[Removed Lines]",
          "36897:           org.mlflow.api.proto.Service.GetRun.ResponseOrBuilder {",
          "36900:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_descriptor;",
          "36906:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_fieldAccessorTable",
          "36908:                   org.mlflow.api.proto.Service.GetRun.Response.class, org.mlflow.api.proto.Service.GetRun.Response.Builder.class);",
          "",
          "[Added Lines]",
          "43947:           org.mlflow.api.proto.Service.SearchRuns.ResponseOrBuilder {",
          "43950:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_descriptor;",
          "43956:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_fieldAccessorTable",
          "43958:                   org.mlflow.api.proto.Service.SearchRuns.Response.class, org.mlflow.api.proto.Service.SearchRuns.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 598 ---",
          "[Context before]",
          "36921:         private void maybeForceBuilderInitialization() {",
          "36922:           if (com.google.protobuf.GeneratedMessageV3",
          "36923:                   .alwaysUseFieldBuilders) {",
          "36925:           }",
          "36926:         }",
          "36927:         @java.lang.Override",
          "36928:         public Builder clear() {",
          "36929:           super.clear();",
          "36932:           } else {",
          "36934:           }",
          "36936:           return this;",
          "36937:         }",
          "36939:         @java.lang.Override",
          "36940:         public com.google.protobuf.Descriptors.Descriptor",
          "36941:             getDescriptorForType() {",
          "36943:         }",
          "36945:         @java.lang.Override",
          "36948:         }",
          "36950:         @java.lang.Override",
          "36953:           if (!result.isInitialized()) {",
          "36954:             throw newUninitializedMessageException(result);",
          "36955:           }",
          "",
          "[Removed Lines]",
          "36924:             getRunFieldBuilder();",
          "36930:           if (runBuilder_ == null) {",
          "36931:             run_ = null;",
          "36933:             runBuilder_.clear();",
          "36935:           bitField0_ = (bitField0_ & ~0x00000001);",
          "36942:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_Response_descriptor;",
          "36946:         public org.mlflow.api.proto.Service.GetRun.Response getDefaultInstanceForType() {",
          "36947:           return org.mlflow.api.proto.Service.GetRun.Response.getDefaultInstance();",
          "36951:         public org.mlflow.api.proto.Service.GetRun.Response build() {",
          "36952:           org.mlflow.api.proto.Service.GetRun.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "43974:             getRunsFieldBuilder();",
          "43980:           if (runsBuilder_ == null) {",
          "43981:             runs_ = java.util.Collections.emptyList();",
          "43982:             bitField0_ = (bitField0_ & ~0x00000001);",
          "43984:             runsBuilder_.clear();",
          "43986:           nextPageToken_ = \"\";",
          "43987:           bitField0_ = (bitField0_ & ~0x00000002);",
          "43994:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_descriptor;",
          "43998:         public org.mlflow.api.proto.Service.SearchRuns.Response getDefaultInstanceForType() {",
          "43999:           return org.mlflow.api.proto.Service.SearchRuns.Response.getDefaultInstance();",
          "44003:         public org.mlflow.api.proto.Service.SearchRuns.Response build() {",
          "44004:           org.mlflow.api.proto.Service.SearchRuns.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 599 ---",
          "[Context before]",
          "36957:         }",
          "36959:         @java.lang.Override",
          "36962:           int from_bitField0_ = bitField0_;",
          "36963:           int to_bitField0_ = 0;",
          "36969:             }",
          "36970:             to_bitField0_ |= 0x00000001;",
          "36971:           }",
          "36972:           result.bitField0_ = to_bitField0_;",
          "36973:           onBuilt();",
          "36974:           return result;",
          "",
          "[Removed Lines]",
          "36960:         public org.mlflow.api.proto.Service.GetRun.Response buildPartial() {",
          "36961:           org.mlflow.api.proto.Service.GetRun.Response result = new org.mlflow.api.proto.Service.GetRun.Response(this);",
          "36964:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "36965:             if (runBuilder_ == null) {",
          "36966:               result.run_ = run_;",
          "36967:             } else {",
          "36968:               result.run_ = runBuilder_.build();",
          "",
          "[Added Lines]",
          "44012:         public org.mlflow.api.proto.Service.SearchRuns.Response buildPartial() {",
          "44013:           org.mlflow.api.proto.Service.SearchRuns.Response result = new org.mlflow.api.proto.Service.SearchRuns.Response(this);",
          "44016:           if (runsBuilder_ == null) {",
          "44017:             if (((bitField0_ & 0x00000001) != 0)) {",
          "44018:               runs_ = java.util.Collections.unmodifiableList(runs_);",
          "44019:               bitField0_ = (bitField0_ & ~0x00000001);",
          "44021:             result.runs_ = runs_;",
          "44022:           } else {",
          "44023:             result.runs_ = runsBuilder_.build();",
          "44024:           }",
          "44025:           if (((from_bitField0_ & 0x00000002) != 0)) {",
          "44028:           result.nextPageToken_ = nextPageToken_;",
          "",
          "---------------",
          "--- Hunk 600 ---",
          "[Context before]",
          "37008:         }",
          "37009:         @java.lang.Override",
          "37010:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "37013:           } else {",
          "37014:             super.mergeFrom(other);",
          "37015:             return this;",
          "37016:           }",
          "37017:         }",
          "37023:           }",
          "37024:           this.mergeUnknownFields(other.unknownFields);",
          "37025:           onChanged();",
          "",
          "[Removed Lines]",
          "37011:           if (other instanceof org.mlflow.api.proto.Service.GetRun.Response) {",
          "37012:             return mergeFrom((org.mlflow.api.proto.Service.GetRun.Response)other);",
          "37019:         public Builder mergeFrom(org.mlflow.api.proto.Service.GetRun.Response other) {",
          "37020:           if (other == org.mlflow.api.proto.Service.GetRun.Response.getDefaultInstance()) return this;",
          "37021:           if (other.hasRun()) {",
          "37022:             mergeRun(other.getRun());",
          "",
          "[Added Lines]",
          "44068:           if (other instanceof org.mlflow.api.proto.Service.SearchRuns.Response) {",
          "44069:             return mergeFrom((org.mlflow.api.proto.Service.SearchRuns.Response)other);",
          "44076:         public Builder mergeFrom(org.mlflow.api.proto.Service.SearchRuns.Response other) {",
          "44077:           if (other == org.mlflow.api.proto.Service.SearchRuns.Response.getDefaultInstance()) return this;",
          "44078:           if (runsBuilder_ == null) {",
          "44079:             if (!other.runs_.isEmpty()) {",
          "44080:               if (runs_.isEmpty()) {",
          "44081:                 runs_ = other.runs_;",
          "44082:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "44083:               } else {",
          "44084:                 ensureRunsIsMutable();",
          "44085:                 runs_.addAll(other.runs_);",
          "44086:               }",
          "44087:               onChanged();",
          "44088:             }",
          "44089:           } else {",
          "44090:             if (!other.runs_.isEmpty()) {",
          "44091:               if (runsBuilder_.isEmpty()) {",
          "44092:                 runsBuilder_.dispose();",
          "44093:                 runsBuilder_ = null;",
          "44094:                 runs_ = other.runs_;",
          "44095:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "44096:                 runsBuilder_ =",
          "44097:                   com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "44098:                      getRunsFieldBuilder() : null;",
          "44099:               } else {",
          "44100:                 runsBuilder_.addAllMessages(other.runs_);",
          "44101:               }",
          "44102:             }",
          "44103:           }",
          "44104:           if (other.hasNextPageToken()) {",
          "44105:             bitField0_ |= 0x00000002;",
          "44106:             nextPageToken_ = other.nextPageToken_;",
          "44107:             onChanged();",
          "",
          "---------------",
          "--- Hunk 601 ---",
          "[Context before]",
          "37036:             com.google.protobuf.CodedInputStream input,",
          "37037:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37038:             throws java.io.IOException {",
          "37040:           try {",
          "37041:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "37042:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "37044:             throw e.unwrapIOException();",
          "37045:           } finally {",
          "37046:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "37039:           org.mlflow.api.proto.Service.GetRun.Response parsedMessage = null;",
          "37043:             parsedMessage = (org.mlflow.api.proto.Service.GetRun.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "44124:           org.mlflow.api.proto.Service.SearchRuns.Response parsedMessage = null;",
          "44128:             parsedMessage = (org.mlflow.api.proto.Service.SearchRuns.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 602 ---",
          "[Context before]",
          "37051:         }",
          "37052:         private int bitField0_;",
          "37067:         }",
          "37079:           } else {",
          "37081:           }",
          "37082:         }",
          "37092:             if (value == null) {",
          "37093:               throw new NullPointerException();",
          "37094:             }",
          "37096:             onChanged();",
          "37097:           } else {",
          "37099:           }",
          "37101:           return this;",
          "37102:         }",
          "37114:             onChanged();",
          "37115:           } else {",
          "37117:           }",
          "37119:           return this;",
          "37120:         }",
          "37137:             }",
          "37138:             onChanged();",
          "37139:           } else {",
          "37141:           }",
          "37144:         }",
          "37156:           } else {",
          "37158:           }",
          "37161:         }",
          "37173:         }",
          "37188:         }",
          "37197:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>",
          "37201:                 org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>(",
          "37203:                     getParentForChildren(),",
          "37204:                     isClean());",
          "37206:           }",
          "37208:         }",
          "37209:         @java.lang.Override",
          "37210:         public final Builder setUnknownFields(",
          "",
          "[Removed Lines]",
          "37054:         private org.mlflow.api.proto.Service.Run run_;",
          "37055:         private com.google.protobuf.SingleFieldBuilderV3<",
          "37056:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder> runBuilder_;",
          "37065:         public boolean hasRun() {",
          "37066:           return ((bitField0_ & 0x00000001) != 0);",
          "37076:         public org.mlflow.api.proto.Service.Run getRun() {",
          "37077:           if (runBuilder_ == null) {",
          "37078:             return run_ == null ? org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "37080:             return runBuilder_.getMessage();",
          "37090:         public Builder setRun(org.mlflow.api.proto.Service.Run value) {",
          "37091:           if (runBuilder_ == null) {",
          "37095:             run_ = value;",
          "37098:             runBuilder_.setMessage(value);",
          "37100:           bitField0_ |= 0x00000001;",
          "37110:         public Builder setRun(",
          "37111:             org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "37112:           if (runBuilder_ == null) {",
          "37113:             run_ = builderForValue.build();",
          "37116:             runBuilder_.setMessage(builderForValue.build());",
          "37118:           bitField0_ |= 0x00000001;",
          "37128:         public Builder mergeRun(org.mlflow.api.proto.Service.Run value) {",
          "37129:           if (runBuilder_ == null) {",
          "37130:             if (((bitField0_ & 0x00000001) != 0) &&",
          "37131:                 run_ != null &&",
          "37132:                 run_ != org.mlflow.api.proto.Service.Run.getDefaultInstance()) {",
          "37133:               run_ =",
          "37134:                 org.mlflow.api.proto.Service.Run.newBuilder(run_).mergeFrom(value).buildPartial();",
          "37135:             } else {",
          "37136:               run_ = value;",
          "37140:             runBuilder_.mergeFrom(value);",
          "37142:           bitField0_ |= 0x00000001;",
          "37143:           return this;",
          "37152:         public Builder clearRun() {",
          "37153:           if (runBuilder_ == null) {",
          "37154:             run_ = null;",
          "37155:             onChanged();",
          "37157:             runBuilder_.clear();",
          "37159:           bitField0_ = (bitField0_ & ~0x00000001);",
          "37160:           return this;",
          "37169:         public org.mlflow.api.proto.Service.Run.Builder getRunBuilder() {",
          "37170:           bitField0_ |= 0x00000001;",
          "37171:           onChanged();",
          "37172:           return getRunFieldBuilder().getBuilder();",
          "37181:         public org.mlflow.api.proto.Service.RunOrBuilder getRunOrBuilder() {",
          "37182:           if (runBuilder_ != null) {",
          "37183:             return runBuilder_.getMessageOrBuilder();",
          "37184:           } else {",
          "37185:             return run_ == null ?",
          "37186:                 org.mlflow.api.proto.Service.Run.getDefaultInstance() : run_;",
          "37187:           }",
          "37196:         private com.google.protobuf.SingleFieldBuilderV3<",
          "37198:             getRunFieldBuilder() {",
          "37199:           if (runBuilder_ == null) {",
          "37200:             runBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<",
          "37202:                     getRun(),",
          "37205:             run_ = null;",
          "37207:           return runBuilder_;",
          "",
          "[Added Lines]",
          "44139:         private java.util.List<org.mlflow.api.proto.Service.Run> runs_ =",
          "44140:           java.util.Collections.emptyList();",
          "44141:         private void ensureRunsIsMutable() {",
          "44142:           if (!((bitField0_ & 0x00000001) != 0)) {",
          "44143:             runs_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Run>(runs_);",
          "44144:             bitField0_ |= 0x00000001;",
          "44145:            }",
          "44146:         }",
          "44148:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "44149:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder> runsBuilder_;",
          "44158:         public java.util.List<org.mlflow.api.proto.Service.Run> getRunsList() {",
          "44159:           if (runsBuilder_ == null) {",
          "44160:             return java.util.Collections.unmodifiableList(runs_);",
          "44161:           } else {",
          "44162:             return runsBuilder_.getMessageList();",
          "44163:           }",
          "44172:         public int getRunsCount() {",
          "44173:           if (runsBuilder_ == null) {",
          "44174:             return runs_.size();",
          "44176:             return runsBuilder_.getCount();",
          "44186:         public org.mlflow.api.proto.Service.Run getRuns(int index) {",
          "44187:           if (runsBuilder_ == null) {",
          "44188:             return runs_.get(index);",
          "44189:           } else {",
          "44190:             return runsBuilder_.getMessage(index);",
          "44191:           }",
          "44192:         }",
          "44200:         public Builder setRuns(",
          "44201:             int index, org.mlflow.api.proto.Service.Run value) {",
          "44202:           if (runsBuilder_ == null) {",
          "44206:             ensureRunsIsMutable();",
          "44207:             runs_.set(index, value);",
          "44210:             runsBuilder_.setMessage(index, value);",
          "44221:         public Builder setRuns(",
          "44222:             int index, org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "44223:           if (runsBuilder_ == null) {",
          "44224:             ensureRunsIsMutable();",
          "44225:             runs_.set(index, builderForValue.build());",
          "44228:             runsBuilder_.setMessage(index, builderForValue.build());",
          "44239:         public Builder addRuns(org.mlflow.api.proto.Service.Run value) {",
          "44240:           if (runsBuilder_ == null) {",
          "44241:             if (value == null) {",
          "44242:               throw new NullPointerException();",
          "44244:             ensureRunsIsMutable();",
          "44245:             runs_.add(value);",
          "44248:             runsBuilder_.addMessage(value);",
          "44249:           }",
          "44250:           return this;",
          "44251:         }",
          "44259:         public Builder addRuns(",
          "44260:             int index, org.mlflow.api.proto.Service.Run value) {",
          "44261:           if (runsBuilder_ == null) {",
          "44262:             if (value == null) {",
          "44263:               throw new NullPointerException();",
          "44264:             }",
          "44265:             ensureRunsIsMutable();",
          "44266:             runs_.add(index, value);",
          "44267:             onChanged();",
          "44268:           } else {",
          "44269:             runsBuilder_.addMessage(index, value);",
          "44270:           }",
          "44271:           return this;",
          "44272:         }",
          "44280:         public Builder addRuns(",
          "44281:             org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "44282:           if (runsBuilder_ == null) {",
          "44283:             ensureRunsIsMutable();",
          "44284:             runs_.add(builderForValue.build());",
          "44285:             onChanged();",
          "44286:           } else {",
          "44287:             runsBuilder_.addMessage(builderForValue.build());",
          "44288:           }",
          "44289:           return this;",
          "44290:         }",
          "44298:         public Builder addRuns(",
          "44299:             int index, org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "44300:           if (runsBuilder_ == null) {",
          "44301:             ensureRunsIsMutable();",
          "44302:             runs_.add(index, builderForValue.build());",
          "44303:             onChanged();",
          "44304:           } else {",
          "44305:             runsBuilder_.addMessage(index, builderForValue.build());",
          "44306:           }",
          "44307:           return this;",
          "44308:         }",
          "44316:         public Builder addAllRuns(",
          "44317:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.Run> values) {",
          "44318:           if (runsBuilder_ == null) {",
          "44319:             ensureRunsIsMutable();",
          "44320:             com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "44321:                 values, runs_);",
          "44322:             onChanged();",
          "44323:           } else {",
          "44324:             runsBuilder_.addAllMessages(values);",
          "44325:           }",
          "44326:           return this;",
          "44327:         }",
          "44335:         public Builder clearRuns() {",
          "44336:           if (runsBuilder_ == null) {",
          "44337:             runs_ = java.util.Collections.emptyList();",
          "44338:             bitField0_ = (bitField0_ & ~0x00000001);",
          "44339:             onChanged();",
          "44340:           } else {",
          "44341:             runsBuilder_.clear();",
          "44342:           }",
          "44343:           return this;",
          "44344:         }",
          "44352:         public Builder removeRuns(int index) {",
          "44353:           if (runsBuilder_ == null) {",
          "44354:             ensureRunsIsMutable();",
          "44355:             runs_.remove(index);",
          "44356:             onChanged();",
          "44357:           } else {",
          "44358:             runsBuilder_.remove(index);",
          "44359:           }",
          "44360:           return this;",
          "44361:         }",
          "44369:         public org.mlflow.api.proto.Service.Run.Builder getRunsBuilder(",
          "44370:             int index) {",
          "44371:           return getRunsFieldBuilder().getBuilder(index);",
          "44372:         }",
          "44380:         public org.mlflow.api.proto.Service.RunOrBuilder getRunsOrBuilder(",
          "44381:             int index) {",
          "44382:           if (runsBuilder_ == null) {",
          "44383:             return runs_.get(index);  } else {",
          "44384:             return runsBuilder_.getMessageOrBuilder(index);",
          "44394:         public java.util.List<? extends org.mlflow.api.proto.Service.RunOrBuilder>",
          "44395:              getRunsOrBuilderList() {",
          "44396:           if (runsBuilder_ != null) {",
          "44397:             return runsBuilder_.getMessageOrBuilderList();",
          "44399:             return java.util.Collections.unmodifiableList(runs_);",
          "44409:         public org.mlflow.api.proto.Service.Run.Builder addRunsBuilder() {",
          "44410:           return getRunsFieldBuilder().addBuilder(",
          "44411:               org.mlflow.api.proto.Service.Run.getDefaultInstance());",
          "44420:         public org.mlflow.api.proto.Service.Run.Builder addRunsBuilder(",
          "44421:             int index) {",
          "44422:           return getRunsFieldBuilder().addBuilder(",
          "44423:               index, org.mlflow.api.proto.Service.Run.getDefaultInstance());",
          "44432:         public java.util.List<org.mlflow.api.proto.Service.Run.Builder>",
          "44433:              getRunsBuilderList() {",
          "44434:           return getRunsFieldBuilder().getBuilderList();",
          "44435:         }",
          "44436:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "44438:             getRunsFieldBuilder() {",
          "44439:           if (runsBuilder_ == null) {",
          "44440:             runsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "44442:                     runs_,",
          "44443:                     ((bitField0_ & 0x00000001) != 0),",
          "44446:             runs_ = null;",
          "44448:           return runsBuilder_;",
          "44449:         }",
          "44451:         private java.lang.Object nextPageToken_ = \"\";",
          "44456:         public boolean hasNextPageToken() {",
          "44457:           return ((bitField0_ & 0x00000002) != 0);",
          "44458:         }",
          "44463:         public java.lang.String getNextPageToken() {",
          "44464:           java.lang.Object ref = nextPageToken_;",
          "44465:           if (!(ref instanceof java.lang.String)) {",
          "44466:             com.google.protobuf.ByteString bs =",
          "44467:                 (com.google.protobuf.ByteString) ref;",
          "44468:             java.lang.String s = bs.toStringUtf8();",
          "44469:             if (bs.isValidUtf8()) {",
          "44470:               nextPageToken_ = s;",
          "44471:             }",
          "44472:             return s;",
          "44473:           } else {",
          "44474:             return (java.lang.String) ref;",
          "44475:           }",
          "44476:         }",
          "44481:         public com.google.protobuf.ByteString",
          "44482:             getNextPageTokenBytes() {",
          "44483:           java.lang.Object ref = nextPageToken_;",
          "44484:           if (ref instanceof String) {",
          "44485:             com.google.protobuf.ByteString b =",
          "44486:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "44487:                     (java.lang.String) ref);",
          "44488:             nextPageToken_ = b;",
          "44489:             return b;",
          "44490:           } else {",
          "44491:             return (com.google.protobuf.ByteString) ref;",
          "44492:           }",
          "44493:         }",
          "44499:         public Builder setNextPageToken(",
          "44500:             java.lang.String value) {",
          "44501:           if (value == null) {",
          "44502:     throw new NullPointerException();",
          "44503:   }",
          "44504:   bitField0_ |= 0x00000002;",
          "44505:           nextPageToken_ = value;",
          "44506:           onChanged();",
          "44507:           return this;",
          "44508:         }",
          "44513:         public Builder clearNextPageToken() {",
          "44514:           bitField0_ = (bitField0_ & ~0x00000002);",
          "44515:           nextPageToken_ = getDefaultInstance().getNextPageToken();",
          "44516:           onChanged();",
          "44517:           return this;",
          "44518:         }",
          "44524:         public Builder setNextPageTokenBytes(",
          "44525:             com.google.protobuf.ByteString value) {",
          "44526:           if (value == null) {",
          "44527:     throw new NullPointerException();",
          "44528:   }",
          "44529:   bitField0_ |= 0x00000002;",
          "44530:           nextPageToken_ = value;",
          "44531:           onChanged();",
          "44532:           return this;",
          "",
          "---------------",
          "--- Hunk 603 ---",
          "[Context before]",
          "37219:         }",
          "37223:       }",
          "37227:       static {",
          "37229:       }",
          "37232:         return DEFAULT_INSTANCE;",
          "37233:       }",
          "",
          "[Removed Lines]",
          "37226:       private static final org.mlflow.api.proto.Service.GetRun.Response DEFAULT_INSTANCE;",
          "37228:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetRun.Response();",
          "37231:       public static org.mlflow.api.proto.Service.GetRun.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "44551:       private static final org.mlflow.api.proto.Service.SearchRuns.Response DEFAULT_INSTANCE;",
          "44553:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchRuns.Response();",
          "44556:       public static org.mlflow.api.proto.Service.SearchRuns.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 604 ---",
          "[Context before]",
          "37253:       }",
          "37255:       @java.lang.Override",
          "37257:         return DEFAULT_INSTANCE;",
          "37258:       }",
          "37260:     }",
          "37262:     private int bitField0_;",
          "37273:     @java.lang.Override",
          "37275:       return ((bitField0_ & 0x00000001) != 0);",
          "37276:     }",
          "37285:     @java.lang.Override",
          "37288:       if (ref instanceof java.lang.String) {",
          "37289:         return (java.lang.String) ref;",
          "37290:       } else {",
          "",
          "[Removed Lines]",
          "37256:       public org.mlflow.api.proto.Service.GetRun.Response getDefaultInstanceForType() {",
          "37263:     public static final int RUN_ID_FIELD_NUMBER = 2;",
          "37264:     private volatile java.lang.Object runId_;",
          "37274:     public boolean hasRunId() {",
          "37286:     public java.lang.String getRunId() {",
          "37287:       java.lang.Object ref = runId_;",
          "",
          "[Added Lines]",
          "44581:       public org.mlflow.api.proto.Service.SearchRuns.Response getDefaultInstanceForType() {",
          "44588:     public static final int EXPERIMENT_IDS_FIELD_NUMBER = 1;",
          "44589:     private com.google.protobuf.LazyStringList experimentIds_;",
          "44598:     public com.google.protobuf.ProtocolStringList",
          "44599:         getExperimentIdsList() {",
          "44600:       return experimentIds_;",
          "44601:     }",
          "44610:     public int getExperimentIdsCount() {",
          "44611:       return experimentIds_.size();",
          "44612:     }",
          "44622:     public java.lang.String getExperimentIds(int index) {",
          "44623:       return experimentIds_.get(index);",
          "44624:     }",
          "44634:     public com.google.protobuf.ByteString",
          "44635:         getExperimentIdsBytes(int index) {",
          "44636:       return experimentIds_.getByteString(index);",
          "44637:     }",
          "44639:     public static final int FILTER_FIELD_NUMBER = 4;",
          "44640:     private volatile java.lang.Object filter_;",
          "44656:     public boolean hasFilter() {",
          "44674:     public java.lang.String getFilter() {",
          "44675:       java.lang.Object ref = filter_;",
          "",
          "---------------",
          "--- Hunk 605 ---",
          "[Context before]",
          "37292:             (com.google.protobuf.ByteString) ref;",
          "37293:         java.lang.String s = bs.toStringUtf8();",
          "37294:         if (bs.isValidUtf8()) {",
          "37296:         }",
          "37297:         return s;",
          "37298:       }",
          "37299:     }",
          "37308:     @java.lang.Override",
          "37309:     public com.google.protobuf.ByteString",
          "37312:       if (ref instanceof java.lang.String) {",
          "37313:         com.google.protobuf.ByteString b =",
          "37314:             com.google.protobuf.ByteString.copyFromUtf8(",
          "37315:                 (java.lang.String) ref);",
          "37317:         return b;",
          "37318:       } else {",
          "37319:         return (com.google.protobuf.ByteString) ref;",
          "37320:       }",
          "37321:     }",
          "37336:       return ((bitField0_ & 0x00000002) != 0);",
          "37337:     }",
          "37347:     @java.lang.Override",
          "37350:       if (ref instanceof java.lang.String) {",
          "37351:         return (java.lang.String) ref;",
          "37352:       } else {",
          "",
          "[Removed Lines]",
          "37295:           runId_ = s;",
          "37310:         getRunIdBytes() {",
          "37311:       java.lang.Object ref = runId_;",
          "37316:         runId_ = b;",
          "37323:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "37324:     private volatile java.lang.Object runUuid_;",
          "37334:     @java.lang.Override",
          "37335:     public boolean hasRunUuid() {",
          "37348:     public java.lang.String getRunUuid() {",
          "37349:       java.lang.Object ref = runUuid_;",
          "",
          "[Added Lines]",
          "44683:           filter_ = s;",
          "44704:         getFilterBytes() {",
          "44705:       java.lang.Object ref = filter_;",
          "44710:         filter_ = b;",
          "44717:     public static final int RUN_VIEW_TYPE_FIELD_NUMBER = 3;",
          "44718:     private int runViewType_;",
          "44728:     @java.lang.Override public boolean hasRunViewType() {",
          "44740:     @java.lang.Override public org.mlflow.api.proto.Service.ViewType getRunViewType() {",
          "44741:       @SuppressWarnings(\"deprecation\")",
          "44742:       org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(runViewType_);",
          "44743:       return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "44744:     }",
          "44746:     public static final int MAX_RESULTS_FIELD_NUMBER = 5;",
          "44747:     private int maxResults_;",
          "44760:     public boolean hasMaxResults() {",
          "44761:       return ((bitField0_ & 0x00000004) != 0);",
          "44762:     }",
          "44774:     @java.lang.Override",
          "44775:     public int getMaxResults() {",
          "44776:       return maxResults_;",
          "44777:     }",
          "44779:     public static final int ORDER_BY_FIELD_NUMBER = 6;",
          "44780:     private com.google.protobuf.LazyStringList orderBy_;",
          "44793:     public com.google.protobuf.ProtocolStringList",
          "44794:         getOrderByList() {",
          "44795:       return orderBy_;",
          "44796:     }",
          "44809:     public int getOrderByCount() {",
          "44810:       return orderBy_.size();",
          "44811:     }",
          "44825:     public java.lang.String getOrderBy(int index) {",
          "44826:       return orderBy_.get(index);",
          "44827:     }",
          "44841:     public com.google.protobuf.ByteString",
          "44842:         getOrderByBytes(int index) {",
          "44843:       return orderBy_.getByteString(index);",
          "44844:     }",
          "44846:     public static final int PAGE_TOKEN_FIELD_NUMBER = 7;",
          "44847:     private volatile java.lang.Object pageToken_;",
          "44852:     @java.lang.Override",
          "44853:     public boolean hasPageToken() {",
          "44854:       return ((bitField0_ & 0x00000008) != 0);",
          "44855:     }",
          "44860:     @java.lang.Override",
          "44861:     public java.lang.String getPageToken() {",
          "44862:       java.lang.Object ref = pageToken_;",
          "",
          "---------------",
          "--- Hunk 606 ---",
          "[Context before]",
          "37354:             (com.google.protobuf.ByteString) ref;",
          "37355:         java.lang.String s = bs.toStringUtf8();",
          "37356:         if (bs.isValidUtf8()) {",
          "37358:         }",
          "37359:         return s;",
          "37360:       }",
          "37361:     }",
          "37371:     @java.lang.Override",
          "37372:     public com.google.protobuf.ByteString",
          "37375:       if (ref instanceof java.lang.String) {",
          "37376:         com.google.protobuf.ByteString b =",
          "37377:             com.google.protobuf.ByteString.copyFromUtf8(",
          "37378:                 (java.lang.String) ref);",
          "37380:         return b;",
          "37381:       } else {",
          "37382:         return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "37357:           runUuid_ = s;",
          "37373:         getRunUuidBytes() {",
          "37374:       java.lang.Object ref = runUuid_;",
          "37379:         runUuid_ = b;",
          "",
          "[Added Lines]",
          "44870:           pageToken_ = s;",
          "44881:         getPageTokenBytes() {",
          "44882:       java.lang.Object ref = pageToken_;",
          "44887:         pageToken_ = b;",
          "",
          "---------------",
          "--- Hunk 607 ---",
          "[Context before]",
          "37397:     @java.lang.Override",
          "37398:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "37399:                         throws java.io.IOException {",
          "37400:       if (((bitField0_ & 0x00000002) != 0)) {",
          "37402:       }",
          "37403:       if (((bitField0_ & 0x00000001) != 0)) {",
          "37405:       }",
          "37406:       unknownFields.writeTo(output);",
          "37407:     }",
          "",
          "[Removed Lines]",
          "37401:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "37404:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, runId_);",
          "",
          "[Added Lines]",
          "44908:       for (int i = 0; i < experimentIds_.size(); i++) {",
          "44909:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentIds_.getRaw(i));",
          "44910:       }",
          "44912:         output.writeEnum(3, runViewType_);",
          "44915:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, filter_);",
          "44916:       }",
          "44917:       if (((bitField0_ & 0x00000004) != 0)) {",
          "44918:         output.writeInt32(5, maxResults_);",
          "44919:       }",
          "44920:       for (int i = 0; i < orderBy_.size(); i++) {",
          "44921:         com.google.protobuf.GeneratedMessageV3.writeString(output, 6, orderBy_.getRaw(i));",
          "44922:       }",
          "44923:       if (((bitField0_ & 0x00000008) != 0)) {",
          "44924:         com.google.protobuf.GeneratedMessageV3.writeString(output, 7, pageToken_);",
          "",
          "---------------",
          "--- Hunk 608 ---",
          "[Context before]",
          "37412:       if (size != -1) return size;",
          "37414:       size = 0;",
          "37415:       if (((bitField0_ & 0x00000002) != 0)) {",
          "37417:       }",
          "37418:       if (((bitField0_ & 0x00000001) != 0)) {",
          "37420:       }",
          "37421:       size += unknownFields.getSerializedSize();",
          "37422:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "37416:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "37419:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, runId_);",
          "",
          "[Added Lines]",
          "44935:       {",
          "44936:         int dataSize = 0;",
          "44937:         for (int i = 0; i < experimentIds_.size(); i++) {",
          "44938:           dataSize += computeStringSizeNoTag(experimentIds_.getRaw(i));",
          "44939:         }",
          "44940:         size += dataSize;",
          "44941:         size += 1 * getExperimentIdsList().size();",
          "44942:       }",
          "44944:         size += com.google.protobuf.CodedOutputStream",
          "44945:           .computeEnumSize(3, runViewType_);",
          "44948:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, filter_);",
          "44949:       }",
          "44950:       if (((bitField0_ & 0x00000004) != 0)) {",
          "44951:         size += com.google.protobuf.CodedOutputStream",
          "44952:           .computeInt32Size(5, maxResults_);",
          "44953:       }",
          "44954:       {",
          "44955:         int dataSize = 0;",
          "44956:         for (int i = 0; i < orderBy_.size(); i++) {",
          "44957:           dataSize += computeStringSizeNoTag(orderBy_.getRaw(i));",
          "44958:         }",
          "44959:         size += dataSize;",
          "44960:         size += 1 * getOrderByList().size();",
          "44961:       }",
          "44962:       if (((bitField0_ & 0x00000008) != 0)) {",
          "44963:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, pageToken_);",
          "",
          "---------------",
          "--- Hunk 609 ---",
          "[Context before]",
          "37428:       if (obj == this) {",
          "37429:        return true;",
          "37430:       }",
          "37432:         return super.equals(obj);",
          "37433:       }",
          "37440:       }",
          "37445:       }",
          "37446:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "37447:       return true;",
          "",
          "[Removed Lines]",
          "37431:       if (!(obj instanceof org.mlflow.api.proto.Service.GetRun)) {",
          "37434:       org.mlflow.api.proto.Service.GetRun other = (org.mlflow.api.proto.Service.GetRun) obj;",
          "37436:       if (hasRunId() != other.hasRunId()) return false;",
          "37437:       if (hasRunId()) {",
          "37438:         if (!getRunId()",
          "37439:             .equals(other.getRunId())) return false;",
          "37441:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "37442:       if (hasRunUuid()) {",
          "37443:         if (!getRunUuid()",
          "37444:             .equals(other.getRunUuid())) return false;",
          "",
          "[Added Lines]",
          "44975:       if (!(obj instanceof org.mlflow.api.proto.Service.SearchRuns)) {",
          "44978:       org.mlflow.api.proto.Service.SearchRuns other = (org.mlflow.api.proto.Service.SearchRuns) obj;",
          "44980:       if (!getExperimentIdsList()",
          "44981:           .equals(other.getExperimentIdsList())) return false;",
          "44982:       if (hasFilter() != other.hasFilter()) return false;",
          "44983:       if (hasFilter()) {",
          "44984:         if (!getFilter()",
          "44985:             .equals(other.getFilter())) return false;",
          "44987:       if (hasRunViewType() != other.hasRunViewType()) return false;",
          "44988:       if (hasRunViewType()) {",
          "44989:         if (runViewType_ != other.runViewType_) return false;",
          "44990:       }",
          "44991:       if (hasMaxResults() != other.hasMaxResults()) return false;",
          "44992:       if (hasMaxResults()) {",
          "44993:         if (getMaxResults()",
          "44994:             != other.getMaxResults()) return false;",
          "44995:       }",
          "44996:       if (!getOrderByList()",
          "44997:           .equals(other.getOrderByList())) return false;",
          "44998:       if (hasPageToken() != other.hasPageToken()) return false;",
          "44999:       if (hasPageToken()) {",
          "45000:         if (!getPageToken()",
          "45001:             .equals(other.getPageToken())) return false;",
          "",
          "---------------",
          "--- Hunk 610 ---",
          "[Context before]",
          "37454:       }",
          "37455:       int hash = 41;",
          "37456:       hash = (19 * hash) + getDescriptor().hashCode();",
          "37460:       }",
          "37464:       }",
          "37465:       hash = (29 * hash) + unknownFields.hashCode();",
          "37466:       memoizedHashCode = hash;",
          "37467:       return hash;",
          "37468:     }",
          "37471:         java.nio.ByteBuffer data)",
          "37472:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "37473:       return PARSER.parseFrom(data);",
          "37474:     }",
          "37476:         java.nio.ByteBuffer data,",
          "37477:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37478:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "37479:       return PARSER.parseFrom(data, extensionRegistry);",
          "37480:     }",
          "37482:         com.google.protobuf.ByteString data)",
          "37483:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "37484:       return PARSER.parseFrom(data);",
          "37485:     }",
          "37487:         com.google.protobuf.ByteString data,",
          "37488:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37489:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "37490:       return PARSER.parseFrom(data, extensionRegistry);",
          "37491:     }",
          "37493:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "37494:       return PARSER.parseFrom(data);",
          "37495:     }",
          "37497:         byte[] data,",
          "37498:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37499:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "37500:       return PARSER.parseFrom(data, extensionRegistry);",
          "37501:     }",
          "37503:         throws java.io.IOException {",
          "37504:       return com.google.protobuf.GeneratedMessageV3",
          "37505:           .parseWithIOException(PARSER, input);",
          "37506:     }",
          "37508:         java.io.InputStream input,",
          "37509:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37510:         throws java.io.IOException {",
          "37511:       return com.google.protobuf.GeneratedMessageV3",
          "37512:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "37513:     }",
          "37515:         throws java.io.IOException {",
          "37516:       return com.google.protobuf.GeneratedMessageV3",
          "37517:           .parseDelimitedWithIOException(PARSER, input);",
          "37518:     }",
          "37520:         java.io.InputStream input,",
          "37521:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37522:         throws java.io.IOException {",
          "37523:       return com.google.protobuf.GeneratedMessageV3",
          "37524:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "37525:     }",
          "37527:         com.google.protobuf.CodedInputStream input)",
          "37528:         throws java.io.IOException {",
          "37529:       return com.google.protobuf.GeneratedMessageV3",
          "37530:           .parseWithIOException(PARSER, input);",
          "37531:     }",
          "37533:         com.google.protobuf.CodedInputStream input,",
          "37534:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37535:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "37457:       if (hasRunId()) {",
          "37458:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "37459:         hash = (53 * hash) + getRunId().hashCode();",
          "37461:       if (hasRunUuid()) {",
          "37462:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "37463:         hash = (53 * hash) + getRunUuid().hashCode();",
          "37470:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "37475:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "37481:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "37486:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "37492:     public static org.mlflow.api.proto.Service.GetRun parseFrom(byte[] data)",
          "37496:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "37502:     public static org.mlflow.api.proto.Service.GetRun parseFrom(java.io.InputStream input)",
          "37507:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "37514:     public static org.mlflow.api.proto.Service.GetRun parseDelimitedFrom(java.io.InputStream input)",
          "37519:     public static org.mlflow.api.proto.Service.GetRun parseDelimitedFrom(",
          "37526:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "37532:     public static org.mlflow.api.proto.Service.GetRun parseFrom(",
          "",
          "[Added Lines]",
          "45014:       if (getExperimentIdsCount() > 0) {",
          "45015:         hash = (37 * hash) + EXPERIMENT_IDS_FIELD_NUMBER;",
          "45016:         hash = (53 * hash) + getExperimentIdsList().hashCode();",
          "45018:       if (hasFilter()) {",
          "45019:         hash = (37 * hash) + FILTER_FIELD_NUMBER;",
          "45020:         hash = (53 * hash) + getFilter().hashCode();",
          "45021:       }",
          "45022:       if (hasRunViewType()) {",
          "45023:         hash = (37 * hash) + RUN_VIEW_TYPE_FIELD_NUMBER;",
          "45024:         hash = (53 * hash) + runViewType_;",
          "45025:       }",
          "45026:       if (hasMaxResults()) {",
          "45027:         hash = (37 * hash) + MAX_RESULTS_FIELD_NUMBER;",
          "45028:         hash = (53 * hash) + getMaxResults();",
          "45029:       }",
          "45030:       if (getOrderByCount() > 0) {",
          "45031:         hash = (37 * hash) + ORDER_BY_FIELD_NUMBER;",
          "45032:         hash = (53 * hash) + getOrderByList().hashCode();",
          "45033:       }",
          "45034:       if (hasPageToken()) {",
          "45035:         hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;",
          "45036:         hash = (53 * hash) + getPageToken().hashCode();",
          "45043:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "45048:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "45054:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "45059:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "45065:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(byte[] data)",
          "45069:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "45075:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(java.io.InputStream input)",
          "45080:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "45087:     public static org.mlflow.api.proto.Service.SearchRuns parseDelimitedFrom(java.io.InputStream input)",
          "45092:     public static org.mlflow.api.proto.Service.SearchRuns parseDelimitedFrom(",
          "45099:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "45105:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "",
          "---------------",
          "--- Hunk 611 ---",
          "[Context before]",
          "37542:     public static Builder newBuilder() {",
          "37543:       return DEFAULT_INSTANCE.toBuilder();",
          "37544:     }",
          "37546:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "37547:     }",
          "37548:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "37545:     public static Builder newBuilder(org.mlflow.api.proto.Service.GetRun prototype) {",
          "",
          "[Added Lines]",
          "45118:     public static Builder newBuilder(org.mlflow.api.proto.Service.SearchRuns prototype) {",
          "",
          "---------------",
          "--- Hunk 612 ---",
          "[Context before]",
          "37558:       return builder;",
          "37559:     }",
          "37563:     public static final class Builder extends",
          "37564:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "37567:       public static final com.google.protobuf.Descriptors.Descriptor",
          "37568:           getDescriptor() {",
          "37570:       }",
          "37572:       @java.lang.Override",
          "37573:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "37574:           internalGetFieldAccessorTable() {",
          "37576:             .ensureFieldAccessorsInitialized(",
          "37578:       }",
          "37581:       private Builder() {",
          "37582:         maybeForceBuilderInitialization();",
          "37583:       }",
          "",
          "[Removed Lines]",
          "37566:         org.mlflow.api.proto.Service.GetRunOrBuilder {",
          "37569:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_descriptor;",
          "37575:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_fieldAccessorTable",
          "37577:                 org.mlflow.api.proto.Service.GetRun.class, org.mlflow.api.proto.Service.GetRun.Builder.class);",
          "",
          "[Added Lines]",
          "45139:         org.mlflow.api.proto.Service.SearchRunsOrBuilder {",
          "45142:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_descriptor;",
          "45148:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_fieldAccessorTable",
          "45150:                 org.mlflow.api.proto.Service.SearchRuns.class, org.mlflow.api.proto.Service.SearchRuns.Builder.class);",
          "",
          "---------------",
          "--- Hunk 613 ---",
          "[Context before]",
          "37595:       @java.lang.Override",
          "37596:       public Builder clear() {",
          "37597:         super.clear();",
          "37599:         bitField0_ = (bitField0_ & ~0x00000001);",
          "37601:         bitField0_ = (bitField0_ & ~0x00000002);",
          "37602:         return this;",
          "37603:       }",
          "37605:       @java.lang.Override",
          "37606:       public com.google.protobuf.Descriptors.Descriptor",
          "37607:           getDescriptorForType() {",
          "37609:       }",
          "37611:       @java.lang.Override",
          "37614:       }",
          "37616:       @java.lang.Override",
          "37619:         if (!result.isInitialized()) {",
          "37620:           throw newUninitializedMessageException(result);",
          "37621:         }",
          "",
          "[Removed Lines]",
          "37598:         runId_ = \"\";",
          "37600:         runUuid_ = \"\";",
          "37608:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetRun_descriptor;",
          "37612:       public org.mlflow.api.proto.Service.GetRun getDefaultInstanceForType() {",
          "37613:         return org.mlflow.api.proto.Service.GetRun.getDefaultInstance();",
          "37617:       public org.mlflow.api.proto.Service.GetRun build() {",
          "37618:         org.mlflow.api.proto.Service.GetRun result = buildPartial();",
          "",
          "[Added Lines]",
          "45171:         experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "45173:         filter_ = \"\";",
          "45175:         runViewType_ = 1;",
          "45176:         bitField0_ = (bitField0_ & ~0x00000004);",
          "45177:         maxResults_ = 1000;",
          "45178:         bitField0_ = (bitField0_ & ~0x00000008);",
          "45179:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "45180:         bitField0_ = (bitField0_ & ~0x00000010);",
          "45181:         pageToken_ = \"\";",
          "45182:         bitField0_ = (bitField0_ & ~0x00000020);",
          "45189:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_descriptor;",
          "45193:       public org.mlflow.api.proto.Service.SearchRuns getDefaultInstanceForType() {",
          "45194:         return org.mlflow.api.proto.Service.SearchRuns.getDefaultInstance();",
          "45198:       public org.mlflow.api.proto.Service.SearchRuns build() {",
          "45199:         org.mlflow.api.proto.Service.SearchRuns result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 614 ---",
          "[Context before]",
          "37623:       }",
          "37625:       @java.lang.Override",
          "37628:         int from_bitField0_ = bitField0_;",
          "37629:         int to_bitField0_ = 0;",
          "37632:         }",
          "37634:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "37635:           to_bitField0_ |= 0x00000002;",
          "37636:         }",
          "37638:         result.bitField0_ = to_bitField0_;",
          "37639:         onBuilt();",
          "37640:         return result;",
          "",
          "[Removed Lines]",
          "37626:       public org.mlflow.api.proto.Service.GetRun buildPartial() {",
          "37627:         org.mlflow.api.proto.Service.GetRun result = new org.mlflow.api.proto.Service.GetRun(this);",
          "37630:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "37631:           to_bitField0_ |= 0x00000001;",
          "37633:         result.runId_ = runId_;",
          "37637:         result.runUuid_ = runUuid_;",
          "",
          "[Added Lines]",
          "45207:       public org.mlflow.api.proto.Service.SearchRuns buildPartial() {",
          "45208:         org.mlflow.api.proto.Service.SearchRuns result = new org.mlflow.api.proto.Service.SearchRuns(this);",
          "45211:         if (((bitField0_ & 0x00000001) != 0)) {",
          "45212:           experimentIds_ = experimentIds_.getUnmodifiableView();",
          "45213:           bitField0_ = (bitField0_ & ~0x00000001);",
          "45215:         result.experimentIds_ = experimentIds_;",
          "45217:           to_bitField0_ |= 0x00000001;",
          "45218:         }",
          "45219:         result.filter_ = filter_;",
          "45220:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "45223:         result.runViewType_ = runViewType_;",
          "45224:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "45225:           to_bitField0_ |= 0x00000004;",
          "45226:         }",
          "45227:         result.maxResults_ = maxResults_;",
          "45228:         if (((bitField0_ & 0x00000010) != 0)) {",
          "45229:           orderBy_ = orderBy_.getUnmodifiableView();",
          "45230:           bitField0_ = (bitField0_ & ~0x00000010);",
          "45231:         }",
          "45232:         result.orderBy_ = orderBy_;",
          "45233:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "45234:           to_bitField0_ |= 0x00000008;",
          "45235:         }",
          "45236:         result.pageToken_ = pageToken_;",
          "",
          "---------------",
          "--- Hunk 615 ---",
          "[Context before]",
          "37673:         return super.addRepeatedField(field, value);",
          "37674:       }",
          "37675:       @java.lang.Override",
          "37683:       }",
          "37696:         }",
          "37698:         onChanged();",
          "37699:         return this;",
          "37700:       }",
          "37702:       @java.lang.Override",
          "37705:       }",
          "37707:       @java.lang.Override",
          "37723:         return this;",
          "37724:       }",
          "37738:       }",
          "37760:       }",
          "37769:       public com.google.protobuf.ByteString",
          "37781:       }",
          "37793:         if (value == null) {",
          "37794:     throw new NullPointerException();",
          "37795:   }",
          "37798:         onChanged();",
          "37799:         return this;",
          "37800:       }",
          "37812:         onChanged();",
          "37813:         return this;",
          "37814:       }",
          "37831:         onChanged();",
          "37832:         return this;",
          "37833:       }",
          "37847:       }",
          "37859:         if (!(ref instanceof java.lang.String)) {",
          "37860:           com.google.protobuf.ByteString bs =",
          "37861:               (com.google.protobuf.ByteString) ref;",
          "37862:           java.lang.String s = bs.toStringUtf8();",
          "37863:           if (bs.isValidUtf8()) {",
          "37865:           }",
          "37866:           return s;",
          "37867:         } else {",
          "",
          "[Removed Lines]",
          "37676:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "37677:         if (other instanceof org.mlflow.api.proto.Service.GetRun) {",
          "37678:           return mergeFrom((org.mlflow.api.proto.Service.GetRun)other);",
          "37679:         } else {",
          "37680:           super.mergeFrom(other);",
          "37681:           return this;",
          "37682:         }",
          "37685:       public Builder mergeFrom(org.mlflow.api.proto.Service.GetRun other) {",
          "37686:         if (other == org.mlflow.api.proto.Service.GetRun.getDefaultInstance()) return this;",
          "37687:         if (other.hasRunId()) {",
          "37688:           bitField0_ |= 0x00000001;",
          "37689:           runId_ = other.runId_;",
          "37690:           onChanged();",
          "37691:         }",
          "37692:         if (other.hasRunUuid()) {",
          "37693:           bitField0_ |= 0x00000002;",
          "37694:           runUuid_ = other.runUuid_;",
          "37695:           onChanged();",
          "37697:         this.mergeUnknownFields(other.unknownFields);",
          "37703:       public final boolean isInitialized() {",
          "37704:         return true;",
          "37708:       public Builder mergeFrom(",
          "37709:           com.google.protobuf.CodedInputStream input,",
          "37710:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37711:           throws java.io.IOException {",
          "37712:         org.mlflow.api.proto.Service.GetRun parsedMessage = null;",
          "37713:         try {",
          "37714:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "37715:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "37716:           parsedMessage = (org.mlflow.api.proto.Service.GetRun) e.getUnfinishedMessage();",
          "37717:           throw e.unwrapIOException();",
          "37718:         } finally {",
          "37719:           if (parsedMessage != null) {",
          "37720:             mergeFrom(parsedMessage);",
          "37721:           }",
          "37722:         }",
          "37725:       private int bitField0_;",
          "37727:       private java.lang.Object runId_ = \"\";",
          "37736:       public boolean hasRunId() {",
          "37737:         return ((bitField0_ & 0x00000001) != 0);",
          "37747:       public java.lang.String getRunId() {",
          "37748:         java.lang.Object ref = runId_;",
          "37749:         if (!(ref instanceof java.lang.String)) {",
          "37750:           com.google.protobuf.ByteString bs =",
          "37751:               (com.google.protobuf.ByteString) ref;",
          "37752:           java.lang.String s = bs.toStringUtf8();",
          "37753:           if (bs.isValidUtf8()) {",
          "37754:             runId_ = s;",
          "37755:           }",
          "37756:           return s;",
          "37757:         } else {",
          "37758:           return (java.lang.String) ref;",
          "37759:         }",
          "37770:           getRunIdBytes() {",
          "37771:         java.lang.Object ref = runId_;",
          "37772:         if (ref instanceof String) {",
          "37773:           com.google.protobuf.ByteString b =",
          "37774:               com.google.protobuf.ByteString.copyFromUtf8(",
          "37775:                   (java.lang.String) ref);",
          "37776:           runId_ = b;",
          "37777:           return b;",
          "37778:         } else {",
          "37779:           return (com.google.protobuf.ByteString) ref;",
          "37780:         }",
          "37791:       public Builder setRunId(",
          "37792:           java.lang.String value) {",
          "37796:   bitField0_ |= 0x00000001;",
          "37797:         runId_ = value;",
          "37809:       public Builder clearRunId() {",
          "37810:         bitField0_ = (bitField0_ & ~0x00000001);",
          "37811:         runId_ = getDefaultInstance().getRunId();",
          "37824:       public Builder setRunIdBytes(",
          "37825:           com.google.protobuf.ByteString value) {",
          "37826:         if (value == null) {",
          "37827:     throw new NullPointerException();",
          "37828:   }",
          "37829:   bitField0_ |= 0x00000001;",
          "37830:         runId_ = value;",
          "37835:       private java.lang.Object runUuid_ = \"\";",
          "37845:       public boolean hasRunUuid() {",
          "37846:         return ((bitField0_ & 0x00000002) != 0);",
          "37857:       public java.lang.String getRunUuid() {",
          "37858:         java.lang.Object ref = runUuid_;",
          "37864:             runUuid_ = s;",
          "",
          "[Added Lines]",
          "45275:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "45276:         if (other instanceof org.mlflow.api.proto.Service.SearchRuns) {",
          "45277:           return mergeFrom((org.mlflow.api.proto.Service.SearchRuns)other);",
          "45278:         } else {",
          "45279:           super.mergeFrom(other);",
          "45280:           return this;",
          "45281:         }",
          "45282:       }",
          "45284:       public Builder mergeFrom(org.mlflow.api.proto.Service.SearchRuns other) {",
          "45285:         if (other == org.mlflow.api.proto.Service.SearchRuns.getDefaultInstance()) return this;",
          "45286:         if (!other.experimentIds_.isEmpty()) {",
          "45287:           if (experimentIds_.isEmpty()) {",
          "45288:             experimentIds_ = other.experimentIds_;",
          "45289:             bitField0_ = (bitField0_ & ~0x00000001);",
          "45290:           } else {",
          "45291:             ensureExperimentIdsIsMutable();",
          "45292:             experimentIds_.addAll(other.experimentIds_);",
          "45293:           }",
          "45294:           onChanged();",
          "45295:         }",
          "45296:         if (other.hasFilter()) {",
          "45297:           bitField0_ |= 0x00000002;",
          "45298:           filter_ = other.filter_;",
          "45299:           onChanged();",
          "45300:         }",
          "45301:         if (other.hasRunViewType()) {",
          "45302:           setRunViewType(other.getRunViewType());",
          "45303:         }",
          "45304:         if (other.hasMaxResults()) {",
          "45305:           setMaxResults(other.getMaxResults());",
          "45306:         }",
          "45307:         if (!other.orderBy_.isEmpty()) {",
          "45308:           if (orderBy_.isEmpty()) {",
          "45309:             orderBy_ = other.orderBy_;",
          "45310:             bitField0_ = (bitField0_ & ~0x00000010);",
          "45311:           } else {",
          "45312:             ensureOrderByIsMutable();",
          "45313:             orderBy_.addAll(other.orderBy_);",
          "45314:           }",
          "45315:           onChanged();",
          "45316:         }",
          "45317:         if (other.hasPageToken()) {",
          "45318:           bitField0_ |= 0x00000020;",
          "45319:           pageToken_ = other.pageToken_;",
          "45320:           onChanged();",
          "45321:         }",
          "45322:         this.mergeUnknownFields(other.unknownFields);",
          "45323:         onChanged();",
          "45324:         return this;",
          "45325:       }",
          "45327:       @java.lang.Override",
          "45328:       public final boolean isInitialized() {",
          "45329:         return true;",
          "45330:       }",
          "45332:       @java.lang.Override",
          "45333:       public Builder mergeFrom(",
          "45334:           com.google.protobuf.CodedInputStream input,",
          "45335:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45336:           throws java.io.IOException {",
          "45337:         org.mlflow.api.proto.Service.SearchRuns parsedMessage = null;",
          "45338:         try {",
          "45339:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "45340:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "45341:           parsedMessage = (org.mlflow.api.proto.Service.SearchRuns) e.getUnfinishedMessage();",
          "45342:           throw e.unwrapIOException();",
          "45343:         } finally {",
          "45344:           if (parsedMessage != null) {",
          "45345:             mergeFrom(parsedMessage);",
          "45346:           }",
          "45347:         }",
          "45348:         return this;",
          "45349:       }",
          "45350:       private int bitField0_;",
          "45352:       private com.google.protobuf.LazyStringList experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "45353:       private void ensureExperimentIdsIsMutable() {",
          "45354:         if (!((bitField0_ & 0x00000001) != 0)) {",
          "45355:           experimentIds_ = new com.google.protobuf.LazyStringArrayList(experimentIds_);",
          "45356:           bitField0_ |= 0x00000001;",
          "45357:          }",
          "45358:       }",
          "45367:       public com.google.protobuf.ProtocolStringList",
          "45368:           getExperimentIdsList() {",
          "45369:         return experimentIds_.getUnmodifiableView();",
          "45370:       }",
          "45379:       public int getExperimentIdsCount() {",
          "45380:         return experimentIds_.size();",
          "45381:       }",
          "45391:       public java.lang.String getExperimentIds(int index) {",
          "45392:         return experimentIds_.get(index);",
          "45393:       }",
          "45403:       public com.google.protobuf.ByteString",
          "45404:           getExperimentIdsBytes(int index) {",
          "45405:         return experimentIds_.getByteString(index);",
          "45406:       }",
          "45417:       public Builder setExperimentIds(",
          "45418:           int index, java.lang.String value) {",
          "45419:         if (value == null) {",
          "45420:     throw new NullPointerException();",
          "45421:   }",
          "45422:   ensureExperimentIdsIsMutable();",
          "45423:         experimentIds_.set(index, value);",
          "45424:         onChanged();",
          "45425:         return this;",
          "45426:       }",
          "45436:       public Builder addExperimentIds(",
          "45437:           java.lang.String value) {",
          "45438:         if (value == null) {",
          "45439:     throw new NullPointerException();",
          "45440:   }",
          "45441:   ensureExperimentIdsIsMutable();",
          "45442:         experimentIds_.add(value);",
          "45443:         onChanged();",
          "45444:         return this;",
          "45445:       }",
          "45455:       public Builder addAllExperimentIds(",
          "45456:           java.lang.Iterable<java.lang.String> values) {",
          "45457:         ensureExperimentIdsIsMutable();",
          "45458:         com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "45459:             values, experimentIds_);",
          "45460:         onChanged();",
          "45461:         return this;",
          "45462:       }",
          "45471:       public Builder clearExperimentIds() {",
          "45472:         experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "45473:         bitField0_ = (bitField0_ & ~0x00000001);",
          "45474:         onChanged();",
          "45475:         return this;",
          "45476:       }",
          "45486:       public Builder addExperimentIdsBytes(",
          "45487:           com.google.protobuf.ByteString value) {",
          "45488:         if (value == null) {",
          "45489:     throw new NullPointerException();",
          "45490:   }",
          "45491:   ensureExperimentIdsIsMutable();",
          "45492:         experimentIds_.add(value);",
          "45493:         onChanged();",
          "45494:         return this;",
          "45495:       }",
          "45497:       private java.lang.Object filter_ = \"\";",
          "45512:       public boolean hasFilter() {",
          "45513:         return ((bitField0_ & 0x00000002) != 0);",
          "45514:       }",
          "45529:       public java.lang.String getFilter() {",
          "45530:         java.lang.Object ref = filter_;",
          "45531:         if (!(ref instanceof java.lang.String)) {",
          "45532:           com.google.protobuf.ByteString bs =",
          "45533:               (com.google.protobuf.ByteString) ref;",
          "45534:           java.lang.String s = bs.toStringUtf8();",
          "45535:           if (bs.isValidUtf8()) {",
          "45536:             filter_ = s;",
          "45537:           }",
          "45538:           return s;",
          "45539:         } else {",
          "45540:           return (java.lang.String) ref;",
          "45541:         }",
          "45542:       }",
          "45557:       public com.google.protobuf.ByteString",
          "45558:           getFilterBytes() {",
          "45559:         java.lang.Object ref = filter_;",
          "45560:         if (ref instanceof String) {",
          "45561:           com.google.protobuf.ByteString b =",
          "45562:               com.google.protobuf.ByteString.copyFromUtf8(",
          "45563:                   (java.lang.String) ref);",
          "45564:           filter_ = b;",
          "45565:           return b;",
          "45566:         } else {",
          "45567:           return (com.google.protobuf.ByteString) ref;",
          "45568:         }",
          "45569:       }",
          "45585:       public Builder setFilter(",
          "45586:           java.lang.String value) {",
          "45587:         if (value == null) {",
          "45588:     throw new NullPointerException();",
          "45589:   }",
          "45590:   bitField0_ |= 0x00000002;",
          "45591:         filter_ = value;",
          "45592:         onChanged();",
          "45593:         return this;",
          "45594:       }",
          "45609:       public Builder clearFilter() {",
          "45610:         bitField0_ = (bitField0_ & ~0x00000002);",
          "45611:         filter_ = getDefaultInstance().getFilter();",
          "45612:         onChanged();",
          "45613:         return this;",
          "45614:       }",
          "45630:       public Builder setFilterBytes(",
          "45631:           com.google.protobuf.ByteString value) {",
          "45632:         if (value == null) {",
          "45633:     throw new NullPointerException();",
          "45634:   }",
          "45635:   bitField0_ |= 0x00000002;",
          "45636:         filter_ = value;",
          "45637:         onChanged();",
          "45638:         return this;",
          "45639:       }",
          "45641:       private int runViewType_ = 1;",
          "45651:       @java.lang.Override public boolean hasRunViewType() {",
          "45652:         return ((bitField0_ & 0x00000004) != 0);",
          "45653:       }",
          "45663:       @java.lang.Override",
          "45664:       public org.mlflow.api.proto.Service.ViewType getRunViewType() {",
          "45665:         @SuppressWarnings(\"deprecation\")",
          "45666:         org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(runViewType_);",
          "45667:         return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "45679:       public Builder setRunViewType(org.mlflow.api.proto.Service.ViewType value) {",
          "45680:         if (value == null) {",
          "45681:           throw new NullPointerException();",
          "45683:         bitField0_ |= 0x00000004;",
          "45684:         runViewType_ = value.getNumber();",
          "45685:         onChanged();",
          "45686:         return this;",
          "45687:       }",
          "45697:       public Builder clearRunViewType() {",
          "45698:         bitField0_ = (bitField0_ & ~0x00000004);",
          "45699:         runViewType_ = 1;",
          "45704:       private int maxResults_ = 1000;",
          "45717:       public boolean hasMaxResults() {",
          "45718:         return ((bitField0_ & 0x00000008) != 0);",
          "45732:       public int getMaxResults() {",
          "45733:         return maxResults_;",
          "45734:       }",
          "45747:       public Builder setMaxResults(int value) {",
          "45748:         bitField0_ |= 0x00000008;",
          "45749:         maxResults_ = value;",
          "45750:         onChanged();",
          "45751:         return this;",
          "45752:       }",
          "45764:       public Builder clearMaxResults() {",
          "45765:         bitField0_ = (bitField0_ & ~0x00000008);",
          "45766:         maxResults_ = 1000;",
          "45767:         onChanged();",
          "45771:       private com.google.protobuf.LazyStringList orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "45772:       private void ensureOrderByIsMutable() {",
          "45773:         if (!((bitField0_ & 0x00000010) != 0)) {",
          "45774:           orderBy_ = new com.google.protobuf.LazyStringArrayList(orderBy_);",
          "45775:           bitField0_ |= 0x00000010;",
          "45776:          }",
          "45777:       }",
          "45790:       public com.google.protobuf.ProtocolStringList",
          "45791:           getOrderByList() {",
          "45792:         return orderBy_.getUnmodifiableView();",
          "45806:       public int getOrderByCount() {",
          "45807:         return orderBy_.size();",
          "45822:       public java.lang.String getOrderBy(int index) {",
          "45823:         return orderBy_.get(index);",
          "45824:       }",
          "45839:           getOrderByBytes(int index) {",
          "45840:         return orderBy_.getByteString(index);",
          "45856:       public Builder setOrderBy(",
          "45857:           int index, java.lang.String value) {",
          "45861:   ensureOrderByIsMutable();",
          "45862:         orderBy_.set(index, value);",
          "45879:       public Builder addOrderBy(",
          "45880:           java.lang.String value) {",
          "45881:         if (value == null) {",
          "45882:     throw new NullPointerException();",
          "45883:   }",
          "45884:   ensureOrderByIsMutable();",
          "45885:         orderBy_.add(value);",
          "45902:       public Builder addAllOrderBy(",
          "45903:           java.lang.Iterable<java.lang.String> values) {",
          "45904:         ensureOrderByIsMutable();",
          "45905:         com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "45906:             values, orderBy_);",
          "45922:       public Builder clearOrderBy() {",
          "45923:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "45924:         bitField0_ = (bitField0_ & ~0x00000010);",
          "45925:         onChanged();",
          "45926:         return this;",
          "45941:       public Builder addOrderByBytes(",
          "45942:           com.google.protobuf.ByteString value) {",
          "45943:         if (value == null) {",
          "45944:     throw new NullPointerException();",
          "45945:   }",
          "45946:   ensureOrderByIsMutable();",
          "45947:         orderBy_.add(value);",
          "45948:         onChanged();",
          "45949:         return this;",
          "45950:       }",
          "45952:       private java.lang.Object pageToken_ = \"\";",
          "45957:       public boolean hasPageToken() {",
          "45958:         return ((bitField0_ & 0x00000020) != 0);",
          "45959:       }",
          "45964:       public java.lang.String getPageToken() {",
          "45965:         java.lang.Object ref = pageToken_;",
          "45971:             pageToken_ = s;",
          "",
          "---------------",
          "--- Hunk 616 ---",
          "[Context before]",
          "37869:         }",
          "37870:       }",
          "37880:       public com.google.protobuf.ByteString",
          "37883:         if (ref instanceof String) {",
          "37884:           com.google.protobuf.ByteString b =",
          "37885:               com.google.protobuf.ByteString.copyFromUtf8(",
          "37886:                   (java.lang.String) ref);",
          "37888:           return b;",
          "37889:         } else {",
          "37890:           return (com.google.protobuf.ByteString) ref;",
          "37891:         }",
          "37892:       }",
          "37904:           java.lang.String value) {",
          "37905:         if (value == null) {",
          "37906:     throw new NullPointerException();",
          "37907:   }",
          "37910:         onChanged();",
          "37911:         return this;",
          "37912:       }",
          "37925:         onChanged();",
          "37926:         return this;",
          "37927:       }",
          "37939:           com.google.protobuf.ByteString value) {",
          "37940:         if (value == null) {",
          "37941:     throw new NullPointerException();",
          "37942:   }",
          "37945:         onChanged();",
          "37946:         return this;",
          "37947:       }",
          "",
          "[Removed Lines]",
          "37881:           getRunUuidBytes() {",
          "37882:         java.lang.Object ref = runUuid_;",
          "37887:           runUuid_ = b;",
          "37903:       public Builder setRunUuid(",
          "37908:   bitField0_ |= 0x00000002;",
          "37909:         runUuid_ = value;",
          "37922:       public Builder clearRunUuid() {",
          "37923:         bitField0_ = (bitField0_ & ~0x00000002);",
          "37924:         runUuid_ = getDefaultInstance().getRunUuid();",
          "37938:       public Builder setRunUuidBytes(",
          "37943:   bitField0_ |= 0x00000002;",
          "37944:         runUuid_ = value;",
          "",
          "[Added Lines]",
          "45983:           getPageTokenBytes() {",
          "45984:         java.lang.Object ref = pageToken_;",
          "45989:           pageToken_ = b;",
          "46000:       public Builder setPageToken(",
          "46005:   bitField0_ |= 0x00000020;",
          "46006:         pageToken_ = value;",
          "46014:       public Builder clearPageToken() {",
          "46015:         bitField0_ = (bitField0_ & ~0x00000020);",
          "46016:         pageToken_ = getDefaultInstance().getPageToken();",
          "46025:       public Builder setPageTokenBytes(",
          "46030:   bitField0_ |= 0x00000020;",
          "46031:         pageToken_ = value;",
          "",
          "---------------",
          "--- Hunk 617 ---",
          "[Context before]",
          "37958:       }",
          "37962:     }",
          "37966:     static {",
          "37968:     }",
          "37971:       return DEFAULT_INSTANCE;",
          "37972:     }",
          "37976:       @java.lang.Override",
          "37978:           com.google.protobuf.CodedInputStream input,",
          "37979:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "37980:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "37982:       }",
          "37983:     };",
          "37986:       return PARSER;",
          "37987:     }",
          "37989:     @java.lang.Override",
          "37991:       return PARSER;",
          "37992:     }",
          "37994:     @java.lang.Override",
          "37996:       return DEFAULT_INSTANCE;",
          "37997:     }",
          "37999:   }",
          "38193:     com.google.protobuf.ByteString",
          "38200:     boolean hasPageToken();",
          "38205:     java.lang.String getPageToken();",
          "38210:     com.google.protobuf.ByteString",
          "38211:         getPageTokenBytes();",
          "38212:   }",
          "38217:       com.google.protobuf.GeneratedMessageV3 implements",
          "38220:   private static final long serialVersionUID = 0L;",
          "38223:       super(builder);",
          "38224:     }",
          "38231:       pageToken_ = \"\";",
          "38232:     }",
          "",
          "[Removed Lines]",
          "37965:     private static final org.mlflow.api.proto.Service.GetRun DEFAULT_INSTANCE;",
          "37967:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetRun();",
          "37970:     public static org.mlflow.api.proto.Service.GetRun getDefaultInstance() {",
          "37974:     @java.lang.Deprecated public static final com.google.protobuf.Parser<GetRun>",
          "37975:         PARSER = new com.google.protobuf.AbstractParser<GetRun>() {",
          "37977:       public GetRun parsePartialFrom(",
          "37981:         return new GetRun(input, extensionRegistry);",
          "37985:     public static com.google.protobuf.Parser<GetRun> parser() {",
          "37990:     public com.google.protobuf.Parser<GetRun> getParserForType() {",
          "37995:     public org.mlflow.api.proto.Service.GetRun getDefaultInstanceForType() {",
          "38001:   public interface SearchRunsOrBuilder extends",
          "38003:       com.google.protobuf.MessageOrBuilder {",
          "38013:     java.util.List<java.lang.String>",
          "38014:         getExperimentIdsList();",
          "38023:     int getExperimentIdsCount();",
          "38033:     java.lang.String getExperimentIds(int index);",
          "38043:     com.google.protobuf.ByteString",
          "38044:         getExperimentIdsBytes(int index);",
          "38060:     boolean hasFilter();",
          "38075:     java.lang.String getFilter();",
          "38090:     com.google.protobuf.ByteString",
          "38091:         getFilterBytes();",
          "38102:     boolean hasRunViewType();",
          "38112:     org.mlflow.api.proto.Service.ViewType getRunViewType();",
          "38125:     boolean hasMaxResults();",
          "38137:     int getMaxResults();",
          "38151:     java.util.List<java.lang.String>",
          "38152:         getOrderByList();",
          "38165:     int getOrderByCount();",
          "38179:     java.lang.String getOrderBy(int index);",
          "38194:         getOrderByBytes(int index);",
          "38216:   public static final class SearchRuns extends",
          "38219:       SearchRunsOrBuilder {",
          "38222:     private SearchRuns(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "38225:     private SearchRuns() {",
          "38226:       experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "38227:       filter_ = \"\";",
          "38228:       runViewType_ = 1;",
          "38229:       maxResults_ = 1000;",
          "38230:       orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "",
          "[Added Lines]",
          "46052:     private static final org.mlflow.api.proto.Service.SearchRuns DEFAULT_INSTANCE;",
          "46054:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchRuns();",
          "46057:     public static org.mlflow.api.proto.Service.SearchRuns getDefaultInstance() {",
          "46061:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SearchRuns>",
          "46062:         PARSER = new com.google.protobuf.AbstractParser<SearchRuns>() {",
          "46064:       public SearchRuns parsePartialFrom(",
          "46068:         return new SearchRuns(input, extensionRegistry);",
          "46072:     public static com.google.protobuf.Parser<SearchRuns> parser() {",
          "46077:     public com.google.protobuf.Parser<SearchRuns> getParserForType() {",
          "46082:     public org.mlflow.api.proto.Service.SearchRuns getDefaultInstanceForType() {",
          "46088:   public interface ListArtifactsOrBuilder extends",
          "46090:       com.google.protobuf.MessageOrBuilder {",
          "46100:     boolean hasRunId();",
          "46109:     java.lang.String getRunId();",
          "46118:     com.google.protobuf.ByteString",
          "46119:         getRunIdBytes();",
          "46130:     boolean hasRunUuid();",
          "46140:     java.lang.String getRunUuid();",
          "46150:     com.google.protobuf.ByteString",
          "46151:         getRunUuidBytes();",
          "46161:     boolean hasPath();",
          "46170:     java.lang.String getPath();",
          "46180:         getPathBytes();",
          "46214:   public static final class ListArtifacts extends",
          "46217:       ListArtifactsOrBuilder {",
          "46220:     private ListArtifacts(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "46223:     private ListArtifacts() {",
          "46224:       runId_ = \"\";",
          "46225:       runUuid_ = \"\";",
          "46226:       path_ = \"\";",
          "",
          "---------------",
          "--- Hunk 618 ---",
          "[Context before]",
          "38235:     @SuppressWarnings({\"unused\"})",
          "38236:     protected java.lang.Object newInstance(",
          "38237:         UnusedPrivateParameter unused) {",
          "38239:     }",
          "38241:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "38238:       return new SearchRuns();",
          "",
          "[Added Lines]",
          "46234:       return new ListArtifacts();",
          "",
          "---------------",
          "--- Hunk 619 ---",
          "[Context before]",
          "38243:     getUnknownFields() {",
          "38244:       return this.unknownFields;",
          "38245:     }",
          "38247:         com.google.protobuf.CodedInputStream input,",
          "38248:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38249:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "38246:     private SearchRuns(",
          "",
          "[Added Lines]",
          "46242:     private ListArtifacts(",
          "",
          "---------------",
          "--- Hunk 620 ---",
          "[Context before]",
          "38264:               break;",
          "38265:             case 10: {",
          "38266:               com.google.protobuf.ByteString bs = input.readBytes();",
          "38284:               break;",
          "38285:             }",
          "38287:               com.google.protobuf.ByteString bs = input.readBytes();",
          "38293:               bitField0_ |= 0x00000004;",
          "38295:               break;",
          "38296:             }",
          "38298:               com.google.protobuf.ByteString bs = input.readBytes();",
          "38304:               break;",
          "38305:             }",
          "38307:               com.google.protobuf.ByteString bs = input.readBytes();",
          "38308:               bitField0_ |= 0x00000008;",
          "38309:               pageToken_ = bs;",
          "",
          "[Removed Lines]",
          "38267:               if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "38268:                 experimentIds_ = new com.google.protobuf.LazyStringArrayList();",
          "38269:                 mutable_bitField0_ |= 0x00000001;",
          "38270:               }",
          "38271:               experimentIds_.add(bs);",
          "38272:               break;",
          "38273:             }",
          "38274:             case 24: {",
          "38275:               int rawValue = input.readEnum();",
          "38276:                 @SuppressWarnings(\"deprecation\")",
          "38277:               org.mlflow.api.proto.Service.ViewType value = org.mlflow.api.proto.Service.ViewType.valueOf(rawValue);",
          "38278:               if (value == null) {",
          "38279:                 unknownFields.mergeVarintField(3, rawValue);",
          "38280:               } else {",
          "38281:                 bitField0_ |= 0x00000002;",
          "38282:                 runViewType_ = rawValue;",
          "38283:               }",
          "38286:             case 34: {",
          "38288:               bitField0_ |= 0x00000001;",
          "38289:               filter_ = bs;",
          "38290:               break;",
          "38291:             }",
          "38292:             case 40: {",
          "38294:               maxResults_ = input.readInt32();",
          "38297:             case 50: {",
          "38299:               if (!((mutable_bitField0_ & 0x00000010) != 0)) {",
          "38300:                 orderBy_ = new com.google.protobuf.LazyStringArrayList();",
          "38301:                 mutable_bitField0_ |= 0x00000010;",
          "38302:               }",
          "38303:               orderBy_.add(bs);",
          "38306:             case 58: {",
          "",
          "[Added Lines]",
          "46263:               bitField0_ |= 0x00000002;",
          "46264:               runUuid_ = bs;",
          "46267:             case 18: {",
          "46270:               path_ = bs;",
          "46273:             case 26: {",
          "46275:               bitField0_ |= 0x00000001;",
          "46276:               runId_ = bs;",
          "46279:             case 34: {",
          "",
          "---------------",
          "--- Hunk 621 ---",
          "[Context before]",
          "38324:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "38325:             e).setUnfinishedMessage(this);",
          "38326:       } finally {",
          "38333:         this.unknownFields = unknownFields.build();",
          "38334:         makeExtensionsImmutable();",
          "38335:       }",
          "38336:     }",
          "38337:     public static final com.google.protobuf.Descriptors.Descriptor",
          "38338:         getDescriptor() {",
          "38340:     }",
          "38342:     @java.lang.Override",
          "38343:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "38344:         internalGetFieldAccessorTable() {",
          "38346:           .ensureFieldAccessorsInitialized(",
          "38348:     }",
          "38350:     public interface ResponseOrBuilder extends",
          "38352:         com.google.protobuf.MessageOrBuilder {",
          "38396:           int index);",
          "38402:       boolean hasNextPageToken();",
          "38407:       java.lang.String getNextPageToken();",
          "38412:       com.google.protobuf.ByteString",
          "38413:           getNextPageTokenBytes();",
          "38414:     }",
          "38418:     public static final class Response extends",
          "38419:         com.google.protobuf.GeneratedMessageV3 implements",
          "38421:         ResponseOrBuilder {",
          "38422:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "38327:         if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "38328:           experimentIds_ = experimentIds_.getUnmodifiableView();",
          "38329:         }",
          "38330:         if (((mutable_bitField0_ & 0x00000010) != 0)) {",
          "38331:           orderBy_ = orderBy_.getUnmodifiableView();",
          "38332:         }",
          "38339:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_descriptor;",
          "38345:       return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_fieldAccessorTable",
          "38347:               org.mlflow.api.proto.Service.SearchRuns.class, org.mlflow.api.proto.Service.SearchRuns.Builder.class);",
          "38361:       java.util.List<org.mlflow.api.proto.Service.Run>",
          "38362:           getRunsList();",
          "38370:       org.mlflow.api.proto.Service.Run getRuns(int index);",
          "38378:       int getRunsCount();",
          "38386:       java.util.List<? extends org.mlflow.api.proto.Service.RunOrBuilder>",
          "38387:           getRunsOrBuilderList();",
          "38395:       org.mlflow.api.proto.Service.RunOrBuilder getRunsOrBuilder(",
          "",
          "[Added Lines]",
          "46306:       return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_descriptor;",
          "46312:       return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_fieldAccessorTable",
          "46314:               org.mlflow.api.proto.Service.ListArtifacts.class, org.mlflow.api.proto.Service.ListArtifacts.Builder.class);",
          "46329:       boolean hasRootUri();",
          "46338:       java.lang.String getRootUri();",
          "46347:       com.google.protobuf.ByteString",
          "46348:           getRootUriBytes();",
          "46357:       java.util.List<org.mlflow.api.proto.Service.FileInfo>",
          "46358:           getFilesList();",
          "46366:       org.mlflow.api.proto.Service.FileInfo getFiles(int index);",
          "46374:       int getFilesCount();",
          "46382:       java.util.List<? extends org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "46383:           getFilesOrBuilderList();",
          "46391:       org.mlflow.api.proto.Service.FileInfoOrBuilder getFilesOrBuilder(",
          "",
          "---------------",
          "--- Hunk 622 ---",
          "[Context before]",
          "38425:         super(builder);",
          "38426:       }",
          "38427:       private Response() {",
          "38429:         nextPageToken_ = \"\";",
          "38430:       }",
          "",
          "[Removed Lines]",
          "38428:         runs_ = java.util.Collections.emptyList();",
          "",
          "[Added Lines]",
          "46436:         rootUri_ = \"\";",
          "46437:         files_ = java.util.Collections.emptyList();",
          "",
          "---------------",
          "--- Hunk 623 ---",
          "[Context before]",
          "38461:                 done = true;",
          "38462:                 break;",
          "38463:               case 10: {",
          "38470:                 break;",
          "38471:               }",
          "38472:               case 18: {",
          "38473:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "38475:                 nextPageToken_ = bs;",
          "38476:                 break;",
          "38477:               }",
          "",
          "[Removed Lines]",
          "38464:                 if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "38465:                   runs_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Run>();",
          "38466:                   mutable_bitField0_ |= 0x00000001;",
          "38467:                 }",
          "38468:                 runs_.add(",
          "38469:                     input.readMessage(org.mlflow.api.proto.Service.Run.PARSER, extensionRegistry));",
          "38474:                 bitField0_ |= 0x00000001;",
          "",
          "[Added Lines]",
          "46473:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "46474:                 bitField0_ |= 0x00000001;",
          "46475:                 rootUri_ = bs;",
          "46479:                 if (!((mutable_bitField0_ & 0x00000002) != 0)) {",
          "46480:                   files_ = new java.util.ArrayList<org.mlflow.api.proto.Service.FileInfo>();",
          "46481:                   mutable_bitField0_ |= 0x00000002;",
          "46482:                 }",
          "46483:                 files_.add(",
          "46484:                     input.readMessage(org.mlflow.api.proto.Service.FileInfo.PARSER, extensionRegistry));",
          "46485:                 break;",
          "46486:               }",
          "46487:               case 26: {",
          "46489:                 bitField0_ |= 0x00000002;",
          "",
          "---------------",
          "--- Hunk 624 ---",
          "[Context before]",
          "38490:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "38491:               e).setUnfinishedMessage(this);",
          "38492:         } finally {",
          "38495:           }",
          "38496:           this.unknownFields = unknownFields.build();",
          "38497:           makeExtensionsImmutable();",
          "",
          "[Removed Lines]",
          "38493:           if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "38494:             runs_ = java.util.Collections.unmodifiableList(runs_);",
          "",
          "[Added Lines]",
          "46508:           if (((mutable_bitField0_ & 0x00000002) != 0)) {",
          "46509:             files_ = java.util.Collections.unmodifiableList(files_);",
          "",
          "---------------",
          "--- Hunk 625 ---",
          "[Context before]",
          "38499:       }",
          "38500:       public static final com.google.protobuf.Descriptors.Descriptor",
          "38501:           getDescriptor() {",
          "38503:       }",
          "38505:       @java.lang.Override",
          "38506:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "38507:           internalGetFieldAccessorTable() {",
          "38509:             .ensureFieldAccessorsInitialized(",
          "38511:       }",
          "38513:       private int bitField0_;",
          "38523:       @java.lang.Override",
          "38526:       }",
          "38534:       @java.lang.Override",
          "38538:       }",
          "38546:       @java.lang.Override",
          "38549:       }",
          "38557:       @java.lang.Override",
          "38560:       }",
          "38568:       @java.lang.Override",
          "38570:           int index) {",
          "38572:       }",
          "38575:       private volatile java.lang.Object nextPageToken_;",
          "38580:       @java.lang.Override",
          "38581:       public boolean hasNextPageToken() {",
          "38583:       }",
          "38588:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "38502:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_descriptor;",
          "38508:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_fieldAccessorTable",
          "38510:                 org.mlflow.api.proto.Service.SearchRuns.Response.class, org.mlflow.api.proto.Service.SearchRuns.Response.Builder.class);",
          "38514:       public static final int RUNS_FIELD_NUMBER = 1;",
          "38515:       private java.util.List<org.mlflow.api.proto.Service.Run> runs_;",
          "38524:       public java.util.List<org.mlflow.api.proto.Service.Run> getRunsList() {",
          "38525:         return runs_;",
          "38535:       public java.util.List<? extends org.mlflow.api.proto.Service.RunOrBuilder>",
          "38536:           getRunsOrBuilderList() {",
          "38537:         return runs_;",
          "38547:       public int getRunsCount() {",
          "38548:         return runs_.size();",
          "38558:       public org.mlflow.api.proto.Service.Run getRuns(int index) {",
          "38559:         return runs_.get(index);",
          "38569:       public org.mlflow.api.proto.Service.RunOrBuilder getRunsOrBuilder(",
          "38571:         return runs_.get(index);",
          "38574:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;",
          "38582:         return ((bitField0_ & 0x00000001) != 0);",
          "",
          "[Added Lines]",
          "46517:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_descriptor;",
          "46523:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_fieldAccessorTable",
          "46525:                 org.mlflow.api.proto.Service.ListArtifacts.Response.class, org.mlflow.api.proto.Service.ListArtifacts.Response.Builder.class);",
          "46529:       public static final int ROOT_URI_FIELD_NUMBER = 1;",
          "46530:       private volatile java.lang.Object rootUri_;",
          "46540:       public boolean hasRootUri() {",
          "46541:         return ((bitField0_ & 0x00000001) != 0);",
          "46552:       public java.lang.String getRootUri() {",
          "46553:         java.lang.Object ref = rootUri_;",
          "46554:         if (ref instanceof java.lang.String) {",
          "46555:           return (java.lang.String) ref;",
          "46556:         } else {",
          "46557:           com.google.protobuf.ByteString bs =",
          "46558:               (com.google.protobuf.ByteString) ref;",
          "46559:           java.lang.String s = bs.toStringUtf8();",
          "46560:           if (bs.isValidUtf8()) {",
          "46561:             rootUri_ = s;",
          "46562:           }",
          "46563:           return s;",
          "46564:         }",
          "46575:       public com.google.protobuf.ByteString",
          "46576:           getRootUriBytes() {",
          "46577:         java.lang.Object ref = rootUri_;",
          "46578:         if (ref instanceof java.lang.String) {",
          "46579:           com.google.protobuf.ByteString b =",
          "46580:               com.google.protobuf.ByteString.copyFromUtf8(",
          "46581:                   (java.lang.String) ref);",
          "46582:           rootUri_ = b;",
          "46583:           return b;",
          "46584:         } else {",
          "46585:           return (com.google.protobuf.ByteString) ref;",
          "46586:         }",
          "46589:       public static final int FILES_FIELD_NUMBER = 2;",
          "46590:       private java.util.List<org.mlflow.api.proto.Service.FileInfo> files_;",
          "46599:       public java.util.List<org.mlflow.api.proto.Service.FileInfo> getFilesList() {",
          "46600:         return files_;",
          "46610:       public java.util.List<? extends org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "46611:           getFilesOrBuilderList() {",
          "46612:         return files_;",
          "46613:       }",
          "46621:       @java.lang.Override",
          "46622:       public int getFilesCount() {",
          "46623:         return files_.size();",
          "46624:       }",
          "46632:       @java.lang.Override",
          "46633:       public org.mlflow.api.proto.Service.FileInfo getFiles(int index) {",
          "46634:         return files_.get(index);",
          "46635:       }",
          "46643:       @java.lang.Override",
          "46644:       public org.mlflow.api.proto.Service.FileInfoOrBuilder getFilesOrBuilder(",
          "46646:         return files_.get(index);",
          "46649:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 3;",
          "46661:         return ((bitField0_ & 0x00000002) != 0);",
          "",
          "---------------",
          "--- Hunk 626 ---",
          "[Context before]",
          "38633:       @java.lang.Override",
          "38634:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "38635:                           throws java.io.IOException {",
          "38639:         if (((bitField0_ & 0x00000001) != 0)) {",
          "38641:         }",
          "38642:         unknownFields.writeTo(output);",
          "38643:       }",
          "",
          "[Removed Lines]",
          "38636:         for (int i = 0; i < runs_.size(); i++) {",
          "38637:           output.writeMessage(1, runs_.get(i));",
          "38638:         }",
          "38640:           com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);",
          "",
          "[Added Lines]",
          "46724:           com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rootUri_);",
          "46725:         }",
          "46726:         for (int i = 0; i < files_.size(); i++) {",
          "46727:           output.writeMessage(2, files_.get(i));",
          "46728:         }",
          "46729:         if (((bitField0_ & 0x00000002) != 0)) {",
          "46730:           com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nextPageToken_);",
          "",
          "---------------",
          "--- Hunk 627 ---",
          "[Context before]",
          "38648:         if (size != -1) return size;",
          "38650:         size = 0;",
          "38652:           size += com.google.protobuf.CodedOutputStream",
          "38654:         }",
          "38657:         }",
          "38658:         size += unknownFields.getSerializedSize();",
          "38659:         memoizedSize = size;",
          "",
          "[Removed Lines]",
          "38651:         for (int i = 0; i < runs_.size(); i++) {",
          "38653:             .computeMessageSize(1, runs_.get(i));",
          "38655:         if (((bitField0_ & 0x00000001) != 0)) {",
          "38656:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);",
          "",
          "[Added Lines]",
          "46741:         if (((bitField0_ & 0x00000001) != 0)) {",
          "46742:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rootUri_);",
          "46743:         }",
          "46744:         for (int i = 0; i < files_.size(); i++) {",
          "46746:             .computeMessageSize(2, files_.get(i));",
          "46748:         if (((bitField0_ & 0x00000002) != 0)) {",
          "46749:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nextPageToken_);",
          "",
          "---------------",
          "--- Hunk 628 ---",
          "[Context before]",
          "38665:         if (obj == this) {",
          "38666:          return true;",
          "38667:         }",
          "38669:           return super.equals(obj);",
          "38670:         }",
          "38675:         if (hasNextPageToken() != other.hasNextPageToken()) return false;",
          "38676:         if (hasNextPageToken()) {",
          "38677:           if (!getNextPageToken()",
          "",
          "[Removed Lines]",
          "38668:         if (!(obj instanceof org.mlflow.api.proto.Service.SearchRuns.Response)) {",
          "38671:         org.mlflow.api.proto.Service.SearchRuns.Response other = (org.mlflow.api.proto.Service.SearchRuns.Response) obj;",
          "38673:         if (!getRunsList()",
          "38674:             .equals(other.getRunsList())) return false;",
          "",
          "[Added Lines]",
          "46761:         if (!(obj instanceof org.mlflow.api.proto.Service.ListArtifacts.Response)) {",
          "46764:         org.mlflow.api.proto.Service.ListArtifacts.Response other = (org.mlflow.api.proto.Service.ListArtifacts.Response) obj;",
          "46766:         if (hasRootUri() != other.hasRootUri()) return false;",
          "46767:         if (hasRootUri()) {",
          "46768:           if (!getRootUri()",
          "46769:               .equals(other.getRootUri())) return false;",
          "46770:         }",
          "46771:         if (!getFilesList()",
          "46772:             .equals(other.getFilesList())) return false;",
          "",
          "---------------",
          "--- Hunk 629 ---",
          "[Context before]",
          "38688:         }",
          "38689:         int hash = 41;",
          "38690:         hash = (19 * hash) + getDescriptor().hashCode();",
          "38694:         }",
          "38695:         if (hasNextPageToken()) {",
          "38696:           hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;",
          "",
          "[Removed Lines]",
          "38691:         if (getRunsCount() > 0) {",
          "38692:           hash = (37 * hash) + RUNS_FIELD_NUMBER;",
          "38693:           hash = (53 * hash) + getRunsList().hashCode();",
          "",
          "[Added Lines]",
          "46789:         if (hasRootUri()) {",
          "46790:           hash = (37 * hash) + ROOT_URI_FIELD_NUMBER;",
          "46791:           hash = (53 * hash) + getRootUri().hashCode();",
          "46792:         }",
          "46793:         if (getFilesCount() > 0) {",
          "46794:           hash = (37 * hash) + FILES_FIELD_NUMBER;",
          "46795:           hash = (53 * hash) + getFilesList().hashCode();",
          "",
          "---------------",
          "--- Hunk 630 ---",
          "[Context before]",
          "38701:         return hash;",
          "38702:       }",
          "38705:           java.nio.ByteBuffer data)",
          "38706:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "38707:         return PARSER.parseFrom(data);",
          "38708:       }",
          "38710:           java.nio.ByteBuffer data,",
          "38711:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38712:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "38713:         return PARSER.parseFrom(data, extensionRegistry);",
          "38714:       }",
          "38716:           com.google.protobuf.ByteString data)",
          "38717:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "38718:         return PARSER.parseFrom(data);",
          "38719:       }",
          "38721:           com.google.protobuf.ByteString data,",
          "38722:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38723:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "38724:         return PARSER.parseFrom(data, extensionRegistry);",
          "38725:       }",
          "38727:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "38728:         return PARSER.parseFrom(data);",
          "38729:       }",
          "38731:           byte[] data,",
          "38732:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38733:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "38734:         return PARSER.parseFrom(data, extensionRegistry);",
          "38735:       }",
          "38737:           throws java.io.IOException {",
          "38738:         return com.google.protobuf.GeneratedMessageV3",
          "38739:             .parseWithIOException(PARSER, input);",
          "38740:       }",
          "38742:           java.io.InputStream input,",
          "38743:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38744:           throws java.io.IOException {",
          "38745:         return com.google.protobuf.GeneratedMessageV3",
          "38746:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "38747:       }",
          "38749:           throws java.io.IOException {",
          "38750:         return com.google.protobuf.GeneratedMessageV3",
          "38751:             .parseDelimitedWithIOException(PARSER, input);",
          "38752:       }",
          "38754:           java.io.InputStream input,",
          "38755:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38756:           throws java.io.IOException {",
          "38757:         return com.google.protobuf.GeneratedMessageV3",
          "38758:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "38759:       }",
          "38761:           com.google.protobuf.CodedInputStream input)",
          "38762:           throws java.io.IOException {",
          "38763:         return com.google.protobuf.GeneratedMessageV3",
          "38764:             .parseWithIOException(PARSER, input);",
          "38765:       }",
          "38767:           com.google.protobuf.CodedInputStream input,",
          "38768:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38769:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "38704:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "38709:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "38715:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "38720:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "38726:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(byte[] data)",
          "38730:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "38736:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(java.io.InputStream input)",
          "38741:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "38748:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseDelimitedFrom(java.io.InputStream input)",
          "38753:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseDelimitedFrom(",
          "38760:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "38766:       public static org.mlflow.api.proto.Service.SearchRuns.Response parseFrom(",
          "",
          "[Added Lines]",
          "46806:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "46811:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "46817:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "46822:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "46828:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(byte[] data)",
          "46832:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "46838:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(java.io.InputStream input)",
          "46843:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "46850:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseDelimitedFrom(java.io.InputStream input)",
          "46855:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseDelimitedFrom(",
          "46862:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "46868:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 631 ---",
          "[Context before]",
          "38776:       public static Builder newBuilder() {",
          "38777:         return DEFAULT_INSTANCE.toBuilder();",
          "38778:       }",
          "38780:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "38781:       }",
          "38782:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "38779:       public static Builder newBuilder(org.mlflow.api.proto.Service.SearchRuns.Response prototype) {",
          "",
          "[Added Lines]",
          "46881:       public static Builder newBuilder(org.mlflow.api.proto.Service.ListArtifacts.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 632 ---",
          "[Context before]",
          "38792:         return builder;",
          "38793:       }",
          "38797:       public static final class Builder extends",
          "38798:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "38801:         public static final com.google.protobuf.Descriptors.Descriptor",
          "38802:             getDescriptor() {",
          "38804:         }",
          "38806:         @java.lang.Override",
          "38807:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "38808:             internalGetFieldAccessorTable() {",
          "38810:               .ensureFieldAccessorsInitialized(",
          "38812:         }",
          "38815:         private Builder() {",
          "38816:           maybeForceBuilderInitialization();",
          "38817:         }",
          "",
          "[Removed Lines]",
          "38800:           org.mlflow.api.proto.Service.SearchRuns.ResponseOrBuilder {",
          "38803:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_descriptor;",
          "38809:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_fieldAccessorTable",
          "38811:                   org.mlflow.api.proto.Service.SearchRuns.Response.class, org.mlflow.api.proto.Service.SearchRuns.Response.Builder.class);",
          "",
          "[Added Lines]",
          "46902:           org.mlflow.api.proto.Service.ListArtifacts.ResponseOrBuilder {",
          "46905:           return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_descriptor;",
          "46911:           return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_fieldAccessorTable",
          "46913:                   org.mlflow.api.proto.Service.ListArtifacts.Response.class, org.mlflow.api.proto.Service.ListArtifacts.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 633 ---",
          "[Context before]",
          "38824:         private void maybeForceBuilderInitialization() {",
          "38825:           if (com.google.protobuf.GeneratedMessageV3",
          "38826:                   .alwaysUseFieldBuilders) {",
          "38828:           }",
          "38829:         }",
          "38830:         @java.lang.Override",
          "38831:         public Builder clear() {",
          "38832:           super.clear();",
          "38836:           } else {",
          "38838:           }",
          "38839:           nextPageToken_ = \"\";",
          "38841:           return this;",
          "38842:         }",
          "38844:         @java.lang.Override",
          "38845:         public com.google.protobuf.Descriptors.Descriptor",
          "38846:             getDescriptorForType() {",
          "38848:         }",
          "38850:         @java.lang.Override",
          "38853:         }",
          "38855:         @java.lang.Override",
          "38858:           if (!result.isInitialized()) {",
          "38859:             throw newUninitializedMessageException(result);",
          "38860:           }",
          "",
          "[Removed Lines]",
          "38827:             getRunsFieldBuilder();",
          "38833:           if (runsBuilder_ == null) {",
          "38834:             runs_ = java.util.Collections.emptyList();",
          "38835:             bitField0_ = (bitField0_ & ~0x00000001);",
          "38837:             runsBuilder_.clear();",
          "38840:           bitField0_ = (bitField0_ & ~0x00000002);",
          "38847:           return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_Response_descriptor;",
          "38851:         public org.mlflow.api.proto.Service.SearchRuns.Response getDefaultInstanceForType() {",
          "38852:           return org.mlflow.api.proto.Service.SearchRuns.Response.getDefaultInstance();",
          "38856:         public org.mlflow.api.proto.Service.SearchRuns.Response build() {",
          "38857:           org.mlflow.api.proto.Service.SearchRuns.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "46929:             getFilesFieldBuilder();",
          "46935:           rootUri_ = \"\";",
          "46936:           bitField0_ = (bitField0_ & ~0x00000001);",
          "46937:           if (filesBuilder_ == null) {",
          "46938:             files_ = java.util.Collections.emptyList();",
          "46939:             bitField0_ = (bitField0_ & ~0x00000002);",
          "46941:             filesBuilder_.clear();",
          "46944:           bitField0_ = (bitField0_ & ~0x00000004);",
          "46951:           return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_descriptor;",
          "46955:         public org.mlflow.api.proto.Service.ListArtifacts.Response getDefaultInstanceForType() {",
          "46956:           return org.mlflow.api.proto.Service.ListArtifacts.Response.getDefaultInstance();",
          "46960:         public org.mlflow.api.proto.Service.ListArtifacts.Response build() {",
          "46961:           org.mlflow.api.proto.Service.ListArtifacts.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 634 ---",
          "[Context before]",
          "38862:         }",
          "38864:         @java.lang.Override",
          "38867:           int from_bitField0_ = bitField0_;",
          "38868:           int to_bitField0_ = 0;",
          "38873:             }",
          "38875:           } else {",
          "38877:           }",
          "38880:           }",
          "38881:           result.nextPageToken_ = nextPageToken_;",
          "38882:           result.bitField0_ = to_bitField0_;",
          "",
          "[Removed Lines]",
          "38865:         public org.mlflow.api.proto.Service.SearchRuns.Response buildPartial() {",
          "38866:           org.mlflow.api.proto.Service.SearchRuns.Response result = new org.mlflow.api.proto.Service.SearchRuns.Response(this);",
          "38869:           if (runsBuilder_ == null) {",
          "38870:             if (((bitField0_ & 0x00000001) != 0)) {",
          "38871:               runs_ = java.util.Collections.unmodifiableList(runs_);",
          "38872:               bitField0_ = (bitField0_ & ~0x00000001);",
          "38874:             result.runs_ = runs_;",
          "38876:             result.runs_ = runsBuilder_.build();",
          "38878:           if (((from_bitField0_ & 0x00000002) != 0)) {",
          "38879:             to_bitField0_ |= 0x00000001;",
          "",
          "[Added Lines]",
          "46969:         public org.mlflow.api.proto.Service.ListArtifacts.Response buildPartial() {",
          "46970:           org.mlflow.api.proto.Service.ListArtifacts.Response result = new org.mlflow.api.proto.Service.ListArtifacts.Response(this);",
          "46973:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "46974:             to_bitField0_ |= 0x00000001;",
          "46975:           }",
          "46976:           result.rootUri_ = rootUri_;",
          "46977:           if (filesBuilder_ == null) {",
          "46978:             if (((bitField0_ & 0x00000002) != 0)) {",
          "46979:               files_ = java.util.Collections.unmodifiableList(files_);",
          "46980:               bitField0_ = (bitField0_ & ~0x00000002);",
          "46982:             result.files_ = files_;",
          "46984:             result.files_ = filesBuilder_.build();",
          "46986:           if (((from_bitField0_ & 0x00000004) != 0)) {",
          "46987:             to_bitField0_ |= 0x00000002;",
          "",
          "---------------",
          "--- Hunk 635 ---",
          "[Context before]",
          "38918:         }",
          "38919:         @java.lang.Override",
          "38920:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "38923:           } else {",
          "38924:             super.mergeFrom(other);",
          "38925:             return this;",
          "38926:           }",
          "38927:         }",
          "38936:               } else {",
          "38939:               }",
          "38940:               onChanged();",
          "38941:             }",
          "38942:           } else {",
          "38950:                   com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "38952:               } else {",
          "38954:               }",
          "38955:             }",
          "38956:           }",
          "38957:           if (other.hasNextPageToken()) {",
          "38959:             nextPageToken_ = other.nextPageToken_;",
          "38960:             onChanged();",
          "38961:           }",
          "",
          "[Removed Lines]",
          "38921:           if (other instanceof org.mlflow.api.proto.Service.SearchRuns.Response) {",
          "38922:             return mergeFrom((org.mlflow.api.proto.Service.SearchRuns.Response)other);",
          "38929:         public Builder mergeFrom(org.mlflow.api.proto.Service.SearchRuns.Response other) {",
          "38930:           if (other == org.mlflow.api.proto.Service.SearchRuns.Response.getDefaultInstance()) return this;",
          "38931:           if (runsBuilder_ == null) {",
          "38932:             if (!other.runs_.isEmpty()) {",
          "38933:               if (runs_.isEmpty()) {",
          "38934:                 runs_ = other.runs_;",
          "38935:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "38937:                 ensureRunsIsMutable();",
          "38938:                 runs_.addAll(other.runs_);",
          "38943:             if (!other.runs_.isEmpty()) {",
          "38944:               if (runsBuilder_.isEmpty()) {",
          "38945:                 runsBuilder_.dispose();",
          "38946:                 runsBuilder_ = null;",
          "38947:                 runs_ = other.runs_;",
          "38948:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "38949:                 runsBuilder_ =",
          "38951:                      getRunsFieldBuilder() : null;",
          "38953:                 runsBuilder_.addAllMessages(other.runs_);",
          "38958:             bitField0_ |= 0x00000002;",
          "",
          "[Added Lines]",
          "47029:           if (other instanceof org.mlflow.api.proto.Service.ListArtifacts.Response) {",
          "47030:             return mergeFrom((org.mlflow.api.proto.Service.ListArtifacts.Response)other);",
          "47037:         public Builder mergeFrom(org.mlflow.api.proto.Service.ListArtifacts.Response other) {",
          "47038:           if (other == org.mlflow.api.proto.Service.ListArtifacts.Response.getDefaultInstance()) return this;",
          "47039:           if (other.hasRootUri()) {",
          "47040:             bitField0_ |= 0x00000001;",
          "47041:             rootUri_ = other.rootUri_;",
          "47042:             onChanged();",
          "47043:           }",
          "47044:           if (filesBuilder_ == null) {",
          "47045:             if (!other.files_.isEmpty()) {",
          "47046:               if (files_.isEmpty()) {",
          "47047:                 files_ = other.files_;",
          "47048:                 bitField0_ = (bitField0_ & ~0x00000002);",
          "47050:                 ensureFilesIsMutable();",
          "47051:                 files_.addAll(other.files_);",
          "47056:             if (!other.files_.isEmpty()) {",
          "47057:               if (filesBuilder_.isEmpty()) {",
          "47058:                 filesBuilder_.dispose();",
          "47059:                 filesBuilder_ = null;",
          "47060:                 files_ = other.files_;",
          "47061:                 bitField0_ = (bitField0_ & ~0x00000002);",
          "47062:                 filesBuilder_ =",
          "47064:                      getFilesFieldBuilder() : null;",
          "47066:                 filesBuilder_.addAllMessages(other.files_);",
          "47071:             bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 636 ---",
          "[Context before]",
          "38974:             com.google.protobuf.CodedInputStream input,",
          "38975:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "38976:             throws java.io.IOException {",
          "38978:           try {",
          "38979:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "38980:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "38982:             throw e.unwrapIOException();",
          "38983:           } finally {",
          "38984:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "38977:           org.mlflow.api.proto.Service.SearchRuns.Response parsedMessage = null;",
          "38981:             parsedMessage = (org.mlflow.api.proto.Service.SearchRuns.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "47090:           org.mlflow.api.proto.Service.ListArtifacts.Response parsedMessage = null;",
          "47094:             parsedMessage = (org.mlflow.api.proto.Service.ListArtifacts.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 637 ---",
          "[Context before]",
          "38989:         }",
          "38990:         private int bitField0_;",
          "38993:           java.util.Collections.emptyList();",
          "38998:            }",
          "38999:         }",
          "39001:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "39014:           } else {",
          "39016:           }",
          "39017:         }",
          "39028:           } else {",
          "39030:           }",
          "39031:         }",
          "39042:           } else {",
          "39044:           }",
          "39045:         }",
          "39056:             if (value == null) {",
          "39057:               throw new NullPointerException();",
          "39058:             }",
          "39061:             onChanged();",
          "39062:           } else {",
          "39064:           }",
          "39065:           return this;",
          "39066:         }",
          "39079:             onChanged();",
          "39080:           } else {",
          "39082:           }",
          "39083:           return this;",
          "39084:         }",
          "39094:             if (value == null) {",
          "39095:               throw new NullPointerException();",
          "39096:             }",
          "39099:             onChanged();",
          "39100:           } else {",
          "39102:           }",
          "39103:           return this;",
          "39104:         }",
          "39115:             if (value == null) {",
          "39116:               throw new NullPointerException();",
          "39117:             }",
          "39120:             onChanged();",
          "39121:           } else {",
          "39123:           }",
          "39124:           return this;",
          "39125:         }",
          "39138:             onChanged();",
          "39139:           } else {",
          "39141:           }",
          "39142:           return this;",
          "39143:         }",
          "39156:             onChanged();",
          "39157:           } else {",
          "39159:           }",
          "39160:           return this;",
          "39161:         }",
          "39173:             com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "39175:             onChanged();",
          "39176:           } else {",
          "39178:           }",
          "39179:           return this;",
          "39180:         }",
          "39192:             onChanged();",
          "39193:           } else {",
          "39195:           }",
          "39196:           return this;",
          "39197:         }",
          "39209:             onChanged();",
          "39210:           } else {",
          "39212:           }",
          "39213:           return this;",
          "39214:         }",
          "39223:             int index) {",
          "39225:         }",
          "39234:             int index) {",
          "39238:           }",
          "39239:         }",
          "39251:           } else {",
          "39253:           }",
          "39254:         }",
          "39265:         }",
          "39274:             int index) {",
          "39277:         }",
          "39288:         }",
          "39289:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "39297:                     getParentForChildren(),",
          "39298:                     isClean());",
          "39300:           }",
          "39302:         }",
          "39304:         private java.lang.Object nextPageToken_ = \"\";",
          "39309:         public boolean hasNextPageToken() {",
          "39311:         }",
          "39316:         public java.lang.String getNextPageToken() {",
          "",
          "[Removed Lines]",
          "38992:         private java.util.List<org.mlflow.api.proto.Service.Run> runs_ =",
          "38994:         private void ensureRunsIsMutable() {",
          "38995:           if (!((bitField0_ & 0x00000001) != 0)) {",
          "38996:             runs_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Run>(runs_);",
          "38997:             bitField0_ |= 0x00000001;",
          "39002:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder> runsBuilder_;",
          "39011:         public java.util.List<org.mlflow.api.proto.Service.Run> getRunsList() {",
          "39012:           if (runsBuilder_ == null) {",
          "39013:             return java.util.Collections.unmodifiableList(runs_);",
          "39015:             return runsBuilder_.getMessageList();",
          "39025:         public int getRunsCount() {",
          "39026:           if (runsBuilder_ == null) {",
          "39027:             return runs_.size();",
          "39029:             return runsBuilder_.getCount();",
          "39039:         public org.mlflow.api.proto.Service.Run getRuns(int index) {",
          "39040:           if (runsBuilder_ == null) {",
          "39041:             return runs_.get(index);",
          "39043:             return runsBuilder_.getMessage(index);",
          "39053:         public Builder setRuns(",
          "39054:             int index, org.mlflow.api.proto.Service.Run value) {",
          "39055:           if (runsBuilder_ == null) {",
          "39059:             ensureRunsIsMutable();",
          "39060:             runs_.set(index, value);",
          "39063:             runsBuilder_.setMessage(index, value);",
          "39074:         public Builder setRuns(",
          "39075:             int index, org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "39076:           if (runsBuilder_ == null) {",
          "39077:             ensureRunsIsMutable();",
          "39078:             runs_.set(index, builderForValue.build());",
          "39081:             runsBuilder_.setMessage(index, builderForValue.build());",
          "39092:         public Builder addRuns(org.mlflow.api.proto.Service.Run value) {",
          "39093:           if (runsBuilder_ == null) {",
          "39097:             ensureRunsIsMutable();",
          "39098:             runs_.add(value);",
          "39101:             runsBuilder_.addMessage(value);",
          "39112:         public Builder addRuns(",
          "39113:             int index, org.mlflow.api.proto.Service.Run value) {",
          "39114:           if (runsBuilder_ == null) {",
          "39118:             ensureRunsIsMutable();",
          "39119:             runs_.add(index, value);",
          "39122:             runsBuilder_.addMessage(index, value);",
          "39133:         public Builder addRuns(",
          "39134:             org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "39135:           if (runsBuilder_ == null) {",
          "39136:             ensureRunsIsMutable();",
          "39137:             runs_.add(builderForValue.build());",
          "39140:             runsBuilder_.addMessage(builderForValue.build());",
          "39151:         public Builder addRuns(",
          "39152:             int index, org.mlflow.api.proto.Service.Run.Builder builderForValue) {",
          "39153:           if (runsBuilder_ == null) {",
          "39154:             ensureRunsIsMutable();",
          "39155:             runs_.add(index, builderForValue.build());",
          "39158:             runsBuilder_.addMessage(index, builderForValue.build());",
          "39169:         public Builder addAllRuns(",
          "39170:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.Run> values) {",
          "39171:           if (runsBuilder_ == null) {",
          "39172:             ensureRunsIsMutable();",
          "39174:                 values, runs_);",
          "39177:             runsBuilder_.addAllMessages(values);",
          "39188:         public Builder clearRuns() {",
          "39189:           if (runsBuilder_ == null) {",
          "39190:             runs_ = java.util.Collections.emptyList();",
          "39191:             bitField0_ = (bitField0_ & ~0x00000001);",
          "39194:             runsBuilder_.clear();",
          "39205:         public Builder removeRuns(int index) {",
          "39206:           if (runsBuilder_ == null) {",
          "39207:             ensureRunsIsMutable();",
          "39208:             runs_.remove(index);",
          "39211:             runsBuilder_.remove(index);",
          "39222:         public org.mlflow.api.proto.Service.Run.Builder getRunsBuilder(",
          "39224:           return getRunsFieldBuilder().getBuilder(index);",
          "39233:         public org.mlflow.api.proto.Service.RunOrBuilder getRunsOrBuilder(",
          "39235:           if (runsBuilder_ == null) {",
          "39236:             return runs_.get(index);  } else {",
          "39237:             return runsBuilder_.getMessageOrBuilder(index);",
          "39247:         public java.util.List<? extends org.mlflow.api.proto.Service.RunOrBuilder>",
          "39248:              getRunsOrBuilderList() {",
          "39249:           if (runsBuilder_ != null) {",
          "39250:             return runsBuilder_.getMessageOrBuilderList();",
          "39252:             return java.util.Collections.unmodifiableList(runs_);",
          "39262:         public org.mlflow.api.proto.Service.Run.Builder addRunsBuilder() {",
          "39263:           return getRunsFieldBuilder().addBuilder(",
          "39264:               org.mlflow.api.proto.Service.Run.getDefaultInstance());",
          "39273:         public org.mlflow.api.proto.Service.Run.Builder addRunsBuilder(",
          "39275:           return getRunsFieldBuilder().addBuilder(",
          "39276:               index, org.mlflow.api.proto.Service.Run.getDefaultInstance());",
          "39285:         public java.util.List<org.mlflow.api.proto.Service.Run.Builder>",
          "39286:              getRunsBuilderList() {",
          "39287:           return getRunsFieldBuilder().getBuilderList();",
          "39290:             org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>",
          "39291:             getRunsFieldBuilder() {",
          "39292:           if (runsBuilder_ == null) {",
          "39293:             runsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "39294:                 org.mlflow.api.proto.Service.Run, org.mlflow.api.proto.Service.Run.Builder, org.mlflow.api.proto.Service.RunOrBuilder>(",
          "39295:                     runs_,",
          "39296:                     ((bitField0_ & 0x00000001) != 0),",
          "39299:             runs_ = null;",
          "39301:           return runsBuilder_;",
          "39310:           return ((bitField0_ & 0x00000002) != 0);",
          "",
          "[Added Lines]",
          "47105:         private java.lang.Object rootUri_ = \"\";",
          "47114:         public boolean hasRootUri() {",
          "47115:           return ((bitField0_ & 0x00000001) != 0);",
          "47116:         }",
          "47125:         public java.lang.String getRootUri() {",
          "47126:           java.lang.Object ref = rootUri_;",
          "47127:           if (!(ref instanceof java.lang.String)) {",
          "47128:             com.google.protobuf.ByteString bs =",
          "47129:                 (com.google.protobuf.ByteString) ref;",
          "47130:             java.lang.String s = bs.toStringUtf8();",
          "47131:             if (bs.isValidUtf8()) {",
          "47132:               rootUri_ = s;",
          "47133:             }",
          "47134:             return s;",
          "47135:           } else {",
          "47136:             return (java.lang.String) ref;",
          "47137:           }",
          "47138:         }",
          "47147:         public com.google.protobuf.ByteString",
          "47148:             getRootUriBytes() {",
          "47149:           java.lang.Object ref = rootUri_;",
          "47150:           if (ref instanceof String) {",
          "47151:             com.google.protobuf.ByteString b =",
          "47152:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "47153:                     (java.lang.String) ref);",
          "47154:             rootUri_ = b;",
          "47155:             return b;",
          "47156:           } else {",
          "47157:             return (com.google.protobuf.ByteString) ref;",
          "47158:           }",
          "47159:         }",
          "47169:         public Builder setRootUri(",
          "47170:             java.lang.String value) {",
          "47171:           if (value == null) {",
          "47172:     throw new NullPointerException();",
          "47173:   }",
          "47174:   bitField0_ |= 0x00000001;",
          "47175:           rootUri_ = value;",
          "47176:           onChanged();",
          "47177:           return this;",
          "47178:         }",
          "47187:         public Builder clearRootUri() {",
          "47188:           bitField0_ = (bitField0_ & ~0x00000001);",
          "47189:           rootUri_ = getDefaultInstance().getRootUri();",
          "47190:           onChanged();",
          "47191:           return this;",
          "47192:         }",
          "47202:         public Builder setRootUriBytes(",
          "47203:             com.google.protobuf.ByteString value) {",
          "47204:           if (value == null) {",
          "47205:     throw new NullPointerException();",
          "47206:   }",
          "47207:   bitField0_ |= 0x00000001;",
          "47208:           rootUri_ = value;",
          "47209:           onChanged();",
          "47210:           return this;",
          "47211:         }",
          "47213:         private java.util.List<org.mlflow.api.proto.Service.FileInfo> files_ =",
          "47215:         private void ensureFilesIsMutable() {",
          "47216:           if (!((bitField0_ & 0x00000002) != 0)) {",
          "47217:             files_ = new java.util.ArrayList<org.mlflow.api.proto.Service.FileInfo>(files_);",
          "47218:             bitField0_ |= 0x00000002;",
          "47223:             org.mlflow.api.proto.Service.FileInfo, org.mlflow.api.proto.Service.FileInfo.Builder, org.mlflow.api.proto.Service.FileInfoOrBuilder> filesBuilder_;",
          "47232:         public java.util.List<org.mlflow.api.proto.Service.FileInfo> getFilesList() {",
          "47233:           if (filesBuilder_ == null) {",
          "47234:             return java.util.Collections.unmodifiableList(files_);",
          "47236:             return filesBuilder_.getMessageList();",
          "47246:         public int getFilesCount() {",
          "47247:           if (filesBuilder_ == null) {",
          "47248:             return files_.size();",
          "47250:             return filesBuilder_.getCount();",
          "47260:         public org.mlflow.api.proto.Service.FileInfo getFiles(int index) {",
          "47261:           if (filesBuilder_ == null) {",
          "47262:             return files_.get(index);",
          "47264:             return filesBuilder_.getMessage(index);",
          "47274:         public Builder setFiles(",
          "47275:             int index, org.mlflow.api.proto.Service.FileInfo value) {",
          "47276:           if (filesBuilder_ == null) {",
          "47280:             ensureFilesIsMutable();",
          "47281:             files_.set(index, value);",
          "47284:             filesBuilder_.setMessage(index, value);",
          "47295:         public Builder setFiles(",
          "47296:             int index, org.mlflow.api.proto.Service.FileInfo.Builder builderForValue) {",
          "47297:           if (filesBuilder_ == null) {",
          "47298:             ensureFilesIsMutable();",
          "47299:             files_.set(index, builderForValue.build());",
          "47302:             filesBuilder_.setMessage(index, builderForValue.build());",
          "47313:         public Builder addFiles(org.mlflow.api.proto.Service.FileInfo value) {",
          "47314:           if (filesBuilder_ == null) {",
          "47318:             ensureFilesIsMutable();",
          "47319:             files_.add(value);",
          "47322:             filesBuilder_.addMessage(value);",
          "47333:         public Builder addFiles(",
          "47334:             int index, org.mlflow.api.proto.Service.FileInfo value) {",
          "47335:           if (filesBuilder_ == null) {",
          "47339:             ensureFilesIsMutable();",
          "47340:             files_.add(index, value);",
          "47343:             filesBuilder_.addMessage(index, value);",
          "47354:         public Builder addFiles(",
          "47355:             org.mlflow.api.proto.Service.FileInfo.Builder builderForValue) {",
          "47356:           if (filesBuilder_ == null) {",
          "47357:             ensureFilesIsMutable();",
          "47358:             files_.add(builderForValue.build());",
          "47361:             filesBuilder_.addMessage(builderForValue.build());",
          "47372:         public Builder addFiles(",
          "47373:             int index, org.mlflow.api.proto.Service.FileInfo.Builder builderForValue) {",
          "47374:           if (filesBuilder_ == null) {",
          "47375:             ensureFilesIsMutable();",
          "47376:             files_.add(index, builderForValue.build());",
          "47379:             filesBuilder_.addMessage(index, builderForValue.build());",
          "47390:         public Builder addAllFiles(",
          "47391:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.FileInfo> values) {",
          "47392:           if (filesBuilder_ == null) {",
          "47393:             ensureFilesIsMutable();",
          "47395:                 values, files_);",
          "47398:             filesBuilder_.addAllMessages(values);",
          "47409:         public Builder clearFiles() {",
          "47410:           if (filesBuilder_ == null) {",
          "47411:             files_ = java.util.Collections.emptyList();",
          "47412:             bitField0_ = (bitField0_ & ~0x00000002);",
          "47415:             filesBuilder_.clear();",
          "47426:         public Builder removeFiles(int index) {",
          "47427:           if (filesBuilder_ == null) {",
          "47428:             ensureFilesIsMutable();",
          "47429:             files_.remove(index);",
          "47432:             filesBuilder_.remove(index);",
          "47443:         public org.mlflow.api.proto.Service.FileInfo.Builder getFilesBuilder(",
          "47445:           return getFilesFieldBuilder().getBuilder(index);",
          "47454:         public org.mlflow.api.proto.Service.FileInfoOrBuilder getFilesOrBuilder(",
          "47456:           if (filesBuilder_ == null) {",
          "47457:             return files_.get(index);  } else {",
          "47458:             return filesBuilder_.getMessageOrBuilder(index);",
          "47468:         public java.util.List<? extends org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "47469:              getFilesOrBuilderList() {",
          "47470:           if (filesBuilder_ != null) {",
          "47471:             return filesBuilder_.getMessageOrBuilderList();",
          "47473:             return java.util.Collections.unmodifiableList(files_);",
          "47483:         public org.mlflow.api.proto.Service.FileInfo.Builder addFilesBuilder() {",
          "47484:           return getFilesFieldBuilder().addBuilder(",
          "47485:               org.mlflow.api.proto.Service.FileInfo.getDefaultInstance());",
          "47494:         public org.mlflow.api.proto.Service.FileInfo.Builder addFilesBuilder(",
          "47496:           return getFilesFieldBuilder().addBuilder(",
          "47497:               index, org.mlflow.api.proto.Service.FileInfo.getDefaultInstance());",
          "47506:         public java.util.List<org.mlflow.api.proto.Service.FileInfo.Builder>",
          "47507:              getFilesBuilderList() {",
          "47508:           return getFilesFieldBuilder().getBuilderList();",
          "47511:             org.mlflow.api.proto.Service.FileInfo, org.mlflow.api.proto.Service.FileInfo.Builder, org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "47512:             getFilesFieldBuilder() {",
          "47513:           if (filesBuilder_ == null) {",
          "47514:             filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "47515:                 org.mlflow.api.proto.Service.FileInfo, org.mlflow.api.proto.Service.FileInfo.Builder, org.mlflow.api.proto.Service.FileInfoOrBuilder>(",
          "47516:                     files_,",
          "47517:                     ((bitField0_ & 0x00000002) != 0),",
          "47520:             files_ = null;",
          "47522:           return filesBuilder_;",
          "47535:           return ((bitField0_ & 0x00000004) != 0);",
          "",
          "---------------",
          "--- Hunk 638 ---",
          "[Context before]",
          "39354:           if (value == null) {",
          "39355:     throw new NullPointerException();",
          "39356:   }",
          "39358:           nextPageToken_ = value;",
          "39359:           onChanged();",
          "39360:           return this;",
          "39361:         }",
          "39366:         public Builder clearNextPageToken() {",
          "39368:           nextPageToken_ = getDefaultInstance().getNextPageToken();",
          "39369:           onChanged();",
          "39370:           return this;",
          "39371:         }",
          "",
          "[Removed Lines]",
          "39357:   bitField0_ |= 0x00000002;",
          "39367:           bitField0_ = (bitField0_ & ~0x00000002);",
          "",
          "[Added Lines]",
          "47594:   bitField0_ |= 0x00000004;",
          "47608:           bitField0_ = (bitField0_ & ~0x00000004);",
          "",
          "---------------",
          "--- Hunk 639 ---",
          "[Context before]",
          "39379:           if (value == null) {",
          "39380:     throw new NullPointerException();",
          "39381:   }",
          "39383:           nextPageToken_ = value;",
          "39384:           onChanged();",
          "39385:           return this;",
          "",
          "[Removed Lines]",
          "39382:   bitField0_ |= 0x00000002;",
          "",
          "[Added Lines]",
          "47627:   bitField0_ |= 0x00000004;",
          "",
          "---------------",
          "--- Hunk 640 ---",
          "[Context before]",
          "39397:         }",
          "39401:       }",
          "39405:       static {",
          "39407:       }",
          "39410:         return DEFAULT_INSTANCE;",
          "39411:       }",
          "",
          "[Removed Lines]",
          "39404:       private static final org.mlflow.api.proto.Service.SearchRuns.Response DEFAULT_INSTANCE;",
          "39406:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchRuns.Response();",
          "39409:       public static org.mlflow.api.proto.Service.SearchRuns.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "47649:       private static final org.mlflow.api.proto.Service.ListArtifacts.Response DEFAULT_INSTANCE;",
          "47651:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.ListArtifacts.Response();",
          "47654:       public static org.mlflow.api.proto.Service.ListArtifacts.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 641 ---",
          "[Context before]",
          "39431:       }",
          "39433:       @java.lang.Override",
          "39435:         return DEFAULT_INSTANCE;",
          "39436:       }",
          "39438:     }",
          "39440:     private int bitField0_;",
          "39508:     @java.lang.Override",
          "39510:       return ((bitField0_ & 0x00000001) != 0);",
          "39511:     }",
          "39526:     @java.lang.Override",
          "39529:       if (ref instanceof java.lang.String) {",
          "39530:         return (java.lang.String) ref;",
          "39531:       } else {",
          "",
          "[Removed Lines]",
          "39434:       public org.mlflow.api.proto.Service.SearchRuns.Response getDefaultInstanceForType() {",
          "39441:     public static final int EXPERIMENT_IDS_FIELD_NUMBER = 1;",
          "39442:     private com.google.protobuf.LazyStringList experimentIds_;",
          "39451:     public com.google.protobuf.ProtocolStringList",
          "39452:         getExperimentIdsList() {",
          "39453:       return experimentIds_;",
          "39454:     }",
          "39463:     public int getExperimentIdsCount() {",
          "39464:       return experimentIds_.size();",
          "39465:     }",
          "39475:     public java.lang.String getExperimentIds(int index) {",
          "39476:       return experimentIds_.get(index);",
          "39477:     }",
          "39487:     public com.google.protobuf.ByteString",
          "39488:         getExperimentIdsBytes(int index) {",
          "39489:       return experimentIds_.getByteString(index);",
          "39490:     }",
          "39492:     public static final int FILTER_FIELD_NUMBER = 4;",
          "39493:     private volatile java.lang.Object filter_;",
          "39509:     public boolean hasFilter() {",
          "39527:     public java.lang.String getFilter() {",
          "39528:       java.lang.Object ref = filter_;",
          "",
          "[Added Lines]",
          "47679:       public org.mlflow.api.proto.Service.ListArtifacts.Response getDefaultInstanceForType() {",
          "47686:     public static final int RUN_ID_FIELD_NUMBER = 3;",
          "47687:     private volatile java.lang.Object runId_;",
          "47697:     public boolean hasRunId() {",
          "47709:     public java.lang.String getRunId() {",
          "47710:       java.lang.Object ref = runId_;",
          "",
          "---------------",
          "--- Hunk 642 ---",
          "[Context before]",
          "39533:             (com.google.protobuf.ByteString) ref;",
          "39534:         java.lang.String s = bs.toStringUtf8();",
          "39535:         if (bs.isValidUtf8()) {",
          "39537:         }",
          "39538:         return s;",
          "39539:       }",
          "39540:     }",
          "39555:     @java.lang.Override",
          "39556:     public com.google.protobuf.ByteString",
          "39559:       if (ref instanceof java.lang.String) {",
          "39560:         com.google.protobuf.ByteString b =",
          "39561:             com.google.protobuf.ByteString.copyFromUtf8(",
          "39562:                 (java.lang.String) ref);",
          "39564:         return b;",
          "39565:       } else {",
          "39566:         return (com.google.protobuf.ByteString) ref;",
          "39567:       }",
          "39568:     }",
          "39582:       return ((bitField0_ & 0x00000002) != 0);",
          "39583:     }",
          "39612:     @java.lang.Override",
          "39615:     }",
          "39627:     @java.lang.Override",
          "39630:     }",
          "39664:     }",
          "39680:     }",
          "39694:     public com.google.protobuf.ByteString",
          "39697:     }",
          "39700:     private volatile java.lang.Object pageToken_;",
          "39705:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "39536:           filter_ = s;",
          "39557:         getFilterBytes() {",
          "39558:       java.lang.Object ref = filter_;",
          "39563:         filter_ = b;",
          "39570:     public static final int RUN_VIEW_TYPE_FIELD_NUMBER = 3;",
          "39571:     private int runViewType_;",
          "39581:     @java.lang.Override public boolean hasRunViewType() {",
          "39593:     @java.lang.Override public org.mlflow.api.proto.Service.ViewType getRunViewType() {",
          "39594:       @SuppressWarnings(\"deprecation\")",
          "39595:       org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(runViewType_);",
          "39596:       return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "39597:     }",
          "39599:     public static final int MAX_RESULTS_FIELD_NUMBER = 5;",
          "39600:     private int maxResults_;",
          "39613:     public boolean hasMaxResults() {",
          "39614:       return ((bitField0_ & 0x00000004) != 0);",
          "39628:     public int getMaxResults() {",
          "39629:       return maxResults_;",
          "39632:     public static final int ORDER_BY_FIELD_NUMBER = 6;",
          "39633:     private com.google.protobuf.LazyStringList orderBy_;",
          "39646:     public com.google.protobuf.ProtocolStringList",
          "39647:         getOrderByList() {",
          "39648:       return orderBy_;",
          "39649:     }",
          "39662:     public int getOrderByCount() {",
          "39663:       return orderBy_.size();",
          "39678:     public java.lang.String getOrderBy(int index) {",
          "39679:       return orderBy_.get(index);",
          "39695:         getOrderByBytes(int index) {",
          "39696:       return orderBy_.getByteString(index);",
          "39699:     public static final int PAGE_TOKEN_FIELD_NUMBER = 7;",
          "",
          "[Added Lines]",
          "47718:           runId_ = s;",
          "47733:         getRunIdBytes() {",
          "47734:       java.lang.Object ref = runId_;",
          "47739:         runId_ = b;",
          "47746:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "47747:     private volatile java.lang.Object runUuid_;",
          "47757:     @java.lang.Override",
          "47758:     public boolean hasRunUuid() {",
          "47771:     public java.lang.String getRunUuid() {",
          "47772:       java.lang.Object ref = runUuid_;",
          "47773:       if (ref instanceof java.lang.String) {",
          "47774:         return (java.lang.String) ref;",
          "47775:       } else {",
          "47776:         com.google.protobuf.ByteString bs =",
          "47777:             (com.google.protobuf.ByteString) ref;",
          "47778:         java.lang.String s = bs.toStringUtf8();",
          "47779:         if (bs.isValidUtf8()) {",
          "47780:           runUuid_ = s;",
          "47781:         }",
          "47782:         return s;",
          "47783:       }",
          "47795:     public com.google.protobuf.ByteString",
          "47796:         getRunUuidBytes() {",
          "47797:       java.lang.Object ref = runUuid_;",
          "47798:       if (ref instanceof java.lang.String) {",
          "47799:         com.google.protobuf.ByteString b =",
          "47800:             com.google.protobuf.ByteString.copyFromUtf8(",
          "47801:                 (java.lang.String) ref);",
          "47802:         runUuid_ = b;",
          "47803:         return b;",
          "47804:       } else {",
          "47805:         return (com.google.protobuf.ByteString) ref;",
          "47806:       }",
          "47809:     public static final int PATH_FIELD_NUMBER = 2;",
          "47810:     private volatile java.lang.Object path_;",
          "47819:     @java.lang.Override",
          "47820:     public boolean hasPath() {",
          "47821:       return ((bitField0_ & 0x00000004) != 0);",
          "47831:     @java.lang.Override",
          "47832:     public java.lang.String getPath() {",
          "47833:       java.lang.Object ref = path_;",
          "47834:       if (ref instanceof java.lang.String) {",
          "47835:         return (java.lang.String) ref;",
          "47836:       } else {",
          "47837:         com.google.protobuf.ByteString bs =",
          "47838:             (com.google.protobuf.ByteString) ref;",
          "47839:         java.lang.String s = bs.toStringUtf8();",
          "47840:         if (bs.isValidUtf8()) {",
          "47841:           path_ = s;",
          "47842:         }",
          "47843:         return s;",
          "47844:       }",
          "47854:     @java.lang.Override",
          "47856:         getPathBytes() {",
          "47857:       java.lang.Object ref = path_;",
          "47858:       if (ref instanceof java.lang.String) {",
          "47859:         com.google.protobuf.ByteString b =",
          "47860:             com.google.protobuf.ByteString.copyFromUtf8(",
          "47861:                 (java.lang.String) ref);",
          "47862:         path_ = b;",
          "47863:         return b;",
          "47864:       } else {",
          "47865:         return (com.google.protobuf.ByteString) ref;",
          "47866:       }",
          "47869:     public static final int PAGE_TOKEN_FIELD_NUMBER = 4;",
          "",
          "---------------",
          "--- Hunk 643 ---",
          "[Context before]",
          "39758:     @java.lang.Override",
          "39759:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "39760:                         throws java.io.IOException {",
          "39764:       if (((bitField0_ & 0x00000002) != 0)) {",
          "39769:       }",
          "39770:       if (((bitField0_ & 0x00000004) != 0)) {",
          "39772:       }",
          "39775:       }",
          "39776:       if (((bitField0_ & 0x00000008) != 0)) {",
          "39778:       }",
          "39779:       unknownFields.writeTo(output);",
          "39780:     }",
          "",
          "[Removed Lines]",
          "39761:       for (int i = 0; i < experimentIds_.size(); i++) {",
          "39762:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, experimentIds_.getRaw(i));",
          "39763:       }",
          "39765:         output.writeEnum(3, runViewType_);",
          "39766:       }",
          "39767:       if (((bitField0_ & 0x00000001) != 0)) {",
          "39768:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, filter_);",
          "39771:         output.writeInt32(5, maxResults_);",
          "39773:       for (int i = 0; i < orderBy_.size(); i++) {",
          "39774:         com.google.protobuf.GeneratedMessageV3.writeString(output, 6, orderBy_.getRaw(i));",
          "39777:         com.google.protobuf.GeneratedMessageV3.writeString(output, 7, pageToken_);",
          "",
          "[Added Lines]",
          "47944:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "47947:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);",
          "47949:       if (((bitField0_ & 0x00000001) != 0)) {",
          "47950:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runId_);",
          "47953:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pageToken_);",
          "",
          "---------------",
          "--- Hunk 644 ---",
          "[Context before]",
          "39785:       if (size != -1) return size;",
          "39787:       size = 0;",
          "39796:       if (((bitField0_ & 0x00000002) != 0)) {",
          "39802:       }",
          "39803:       if (((bitField0_ & 0x00000004) != 0)) {",
          "39806:       }",
          "39814:       }",
          "39815:       if (((bitField0_ & 0x00000008) != 0)) {",
          "39817:       }",
          "39818:       size += unknownFields.getSerializedSize();",
          "39819:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "39788:       {",
          "39789:         int dataSize = 0;",
          "39790:         for (int i = 0; i < experimentIds_.size(); i++) {",
          "39791:           dataSize += computeStringSizeNoTag(experimentIds_.getRaw(i));",
          "39792:         }",
          "39793:         size += dataSize;",
          "39794:         size += 1 * getExperimentIdsList().size();",
          "39795:       }",
          "39797:         size += com.google.protobuf.CodedOutputStream",
          "39798:           .computeEnumSize(3, runViewType_);",
          "39799:       }",
          "39800:       if (((bitField0_ & 0x00000001) != 0)) {",
          "39801:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, filter_);",
          "39804:         size += com.google.protobuf.CodedOutputStream",
          "39805:           .computeInt32Size(5, maxResults_);",
          "39807:       {",
          "39808:         int dataSize = 0;",
          "39809:         for (int i = 0; i < orderBy_.size(); i++) {",
          "39810:           dataSize += computeStringSizeNoTag(orderBy_.getRaw(i));",
          "39811:         }",
          "39812:         size += dataSize;",
          "39813:         size += 1 * getOrderByList().size();",
          "39816:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, pageToken_);",
          "",
          "[Added Lines]",
          "47965:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "47968:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);",
          "47970:       if (((bitField0_ & 0x00000001) != 0)) {",
          "47971:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runId_);",
          "47974:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pageToken_);",
          "",
          "---------------",
          "--- Hunk 645 ---",
          "[Context before]",
          "39825:       if (obj == this) {",
          "39826:        return true;",
          "39827:       }",
          "39829:         return super.equals(obj);",
          "39830:       }",
          "39839:       }",
          "39843:       }",
          "39848:       }",
          "39851:       if (hasPageToken() != other.hasPageToken()) return false;",
          "39852:       if (hasPageToken()) {",
          "39853:         if (!getPageToken()",
          "",
          "[Removed Lines]",
          "39828:       if (!(obj instanceof org.mlflow.api.proto.Service.SearchRuns)) {",
          "39831:       org.mlflow.api.proto.Service.SearchRuns other = (org.mlflow.api.proto.Service.SearchRuns) obj;",
          "39833:       if (!getExperimentIdsList()",
          "39834:           .equals(other.getExperimentIdsList())) return false;",
          "39835:       if (hasFilter() != other.hasFilter()) return false;",
          "39836:       if (hasFilter()) {",
          "39837:         if (!getFilter()",
          "39838:             .equals(other.getFilter())) return false;",
          "39840:       if (hasRunViewType() != other.hasRunViewType()) return false;",
          "39841:       if (hasRunViewType()) {",
          "39842:         if (runViewType_ != other.runViewType_) return false;",
          "39844:       if (hasMaxResults() != other.hasMaxResults()) return false;",
          "39845:       if (hasMaxResults()) {",
          "39846:         if (getMaxResults()",
          "39847:             != other.getMaxResults()) return false;",
          "39849:       if (!getOrderByList()",
          "39850:           .equals(other.getOrderByList())) return false;",
          "",
          "[Added Lines]",
          "47986:       if (!(obj instanceof org.mlflow.api.proto.Service.ListArtifacts)) {",
          "47989:       org.mlflow.api.proto.Service.ListArtifacts other = (org.mlflow.api.proto.Service.ListArtifacts) obj;",
          "47991:       if (hasRunId() != other.hasRunId()) return false;",
          "47992:       if (hasRunId()) {",
          "47993:         if (!getRunId()",
          "47994:             .equals(other.getRunId())) return false;",
          "47996:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "47997:       if (hasRunUuid()) {",
          "47998:         if (!getRunUuid()",
          "47999:             .equals(other.getRunUuid())) return false;",
          "48001:       if (hasPath() != other.hasPath()) return false;",
          "48002:       if (hasPath()) {",
          "48003:         if (!getPath()",
          "48004:             .equals(other.getPath())) return false;",
          "",
          "---------------",
          "--- Hunk 646 ---",
          "[Context before]",
          "39864:       }",
          "39865:       int hash = 41;",
          "39866:       hash = (19 * hash) + getDescriptor().hashCode();",
          "39878:       }",
          "39882:       }",
          "39886:       }",
          "39887:       if (hasPageToken()) {",
          "39888:         hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;",
          "",
          "[Removed Lines]",
          "39867:       if (getExperimentIdsCount() > 0) {",
          "39868:         hash = (37 * hash) + EXPERIMENT_IDS_FIELD_NUMBER;",
          "39869:         hash = (53 * hash) + getExperimentIdsList().hashCode();",
          "39870:       }",
          "39871:       if (hasFilter()) {",
          "39872:         hash = (37 * hash) + FILTER_FIELD_NUMBER;",
          "39873:         hash = (53 * hash) + getFilter().hashCode();",
          "39874:       }",
          "39875:       if (hasRunViewType()) {",
          "39876:         hash = (37 * hash) + RUN_VIEW_TYPE_FIELD_NUMBER;",
          "39877:         hash = (53 * hash) + runViewType_;",
          "39879:       if (hasMaxResults()) {",
          "39880:         hash = (37 * hash) + MAX_RESULTS_FIELD_NUMBER;",
          "39881:         hash = (53 * hash) + getMaxResults();",
          "39883:       if (getOrderByCount() > 0) {",
          "39884:         hash = (37 * hash) + ORDER_BY_FIELD_NUMBER;",
          "39885:         hash = (53 * hash) + getOrderByList().hashCode();",
          "",
          "[Added Lines]",
          "48022:       if (hasRunId()) {",
          "48023:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "48024:         hash = (53 * hash) + getRunId().hashCode();",
          "48026:       if (hasRunUuid()) {",
          "48027:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "48028:         hash = (53 * hash) + getRunUuid().hashCode();",
          "48030:       if (hasPath()) {",
          "48031:         hash = (37 * hash) + PATH_FIELD_NUMBER;",
          "48032:         hash = (53 * hash) + getPath().hashCode();",
          "",
          "---------------",
          "--- Hunk 647 ---",
          "[Context before]",
          "39893:       return hash;",
          "39894:     }",
          "39897:         java.nio.ByteBuffer data)",
          "39898:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "39899:       return PARSER.parseFrom(data);",
          "39900:     }",
          "39902:         java.nio.ByteBuffer data,",
          "39903:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "39904:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "39905:       return PARSER.parseFrom(data, extensionRegistry);",
          "39906:     }",
          "39908:         com.google.protobuf.ByteString data)",
          "39909:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "39910:       return PARSER.parseFrom(data);",
          "39911:     }",
          "39913:         com.google.protobuf.ByteString data,",
          "39914:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "39915:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "39916:       return PARSER.parseFrom(data, extensionRegistry);",
          "39917:     }",
          "39919:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "39920:       return PARSER.parseFrom(data);",
          "39921:     }",
          "39923:         byte[] data,",
          "39924:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "39925:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "39926:       return PARSER.parseFrom(data, extensionRegistry);",
          "39927:     }",
          "39929:         throws java.io.IOException {",
          "39930:       return com.google.protobuf.GeneratedMessageV3",
          "39931:           .parseWithIOException(PARSER, input);",
          "39932:     }",
          "39934:         java.io.InputStream input,",
          "39935:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "39936:         throws java.io.IOException {",
          "39937:       return com.google.protobuf.GeneratedMessageV3",
          "39938:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "39939:     }",
          "39941:         throws java.io.IOException {",
          "39942:       return com.google.protobuf.GeneratedMessageV3",
          "39943:           .parseDelimitedWithIOException(PARSER, input);",
          "39944:     }",
          "39946:         java.io.InputStream input,",
          "39947:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "39948:         throws java.io.IOException {",
          "39949:       return com.google.protobuf.GeneratedMessageV3",
          "39950:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "39951:     }",
          "39953:         com.google.protobuf.CodedInputStream input)",
          "39954:         throws java.io.IOException {",
          "39955:       return com.google.protobuf.GeneratedMessageV3",
          "39956:           .parseWithIOException(PARSER, input);",
          "39957:     }",
          "39959:         com.google.protobuf.CodedInputStream input,",
          "39960:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "39961:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "39896:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "39901:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "39907:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "39912:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "39918:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(byte[] data)",
          "39922:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "39928:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(java.io.InputStream input)",
          "39933:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "39940:     public static org.mlflow.api.proto.Service.SearchRuns parseDelimitedFrom(java.io.InputStream input)",
          "39945:     public static org.mlflow.api.proto.Service.SearchRuns parseDelimitedFrom(",
          "39952:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "39958:     public static org.mlflow.api.proto.Service.SearchRuns parseFrom(",
          "",
          "[Added Lines]",
          "48043:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "48048:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "48054:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "48059:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "48065:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(byte[] data)",
          "48069:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "48075:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(java.io.InputStream input)",
          "48080:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "48087:     public static org.mlflow.api.proto.Service.ListArtifacts parseDelimitedFrom(java.io.InputStream input)",
          "48092:     public static org.mlflow.api.proto.Service.ListArtifacts parseDelimitedFrom(",
          "48099:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "48105:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "",
          "---------------",
          "--- Hunk 648 ---",
          "[Context before]",
          "39968:     public static Builder newBuilder() {",
          "39969:       return DEFAULT_INSTANCE.toBuilder();",
          "39970:     }",
          "39972:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "39973:     }",
          "39974:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "39971:     public static Builder newBuilder(org.mlflow.api.proto.Service.SearchRuns prototype) {",
          "",
          "[Added Lines]",
          "48118:     public static Builder newBuilder(org.mlflow.api.proto.Service.ListArtifacts prototype) {",
          "",
          "---------------",
          "--- Hunk 649 ---",
          "[Context before]",
          "39984:       return builder;",
          "39985:     }",
          "39989:     public static final class Builder extends",
          "39990:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "39993:       public static final com.google.protobuf.Descriptors.Descriptor",
          "39994:           getDescriptor() {",
          "39996:       }",
          "39998:       @java.lang.Override",
          "39999:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "40000:           internalGetFieldAccessorTable() {",
          "40002:             .ensureFieldAccessorsInitialized(",
          "40004:       }",
          "40007:       private Builder() {",
          "40008:         maybeForceBuilderInitialization();",
          "40009:       }",
          "",
          "[Removed Lines]",
          "39992:         org.mlflow.api.proto.Service.SearchRunsOrBuilder {",
          "39995:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_descriptor;",
          "40001:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_fieldAccessorTable",
          "40003:                 org.mlflow.api.proto.Service.SearchRuns.class, org.mlflow.api.proto.Service.SearchRuns.Builder.class);",
          "",
          "[Added Lines]",
          "48139:         org.mlflow.api.proto.Service.ListArtifactsOrBuilder {",
          "48142:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_descriptor;",
          "48148:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_fieldAccessorTable",
          "48150:                 org.mlflow.api.proto.Service.ListArtifacts.class, org.mlflow.api.proto.Service.ListArtifacts.Builder.class);",
          "",
          "---------------",
          "--- Hunk 650 ---",
          "[Context before]",
          "40021:       @java.lang.Override",
          "40022:       public Builder clear() {",
          "40023:         super.clear();",
          "40025:         bitField0_ = (bitField0_ & ~0x00000001);",
          "40027:         bitField0_ = (bitField0_ & ~0x00000002);",
          "40029:         bitField0_ = (bitField0_ & ~0x00000004);",
          "40034:         pageToken_ = \"\";",
          "40036:         return this;",
          "40037:       }",
          "40039:       @java.lang.Override",
          "40040:       public com.google.protobuf.Descriptors.Descriptor",
          "40041:           getDescriptorForType() {",
          "40043:       }",
          "40045:       @java.lang.Override",
          "40048:       }",
          "40050:       @java.lang.Override",
          "40053:         if (!result.isInitialized()) {",
          "40054:           throw newUninitializedMessageException(result);",
          "40055:         }",
          "",
          "[Removed Lines]",
          "40024:         experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "40026:         filter_ = \"\";",
          "40028:         runViewType_ = 1;",
          "40030:         maxResults_ = 1000;",
          "40031:         bitField0_ = (bitField0_ & ~0x00000008);",
          "40032:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "40033:         bitField0_ = (bitField0_ & ~0x00000010);",
          "40035:         bitField0_ = (bitField0_ & ~0x00000020);",
          "40042:         return org.mlflow.api.proto.Service.internal_static_mlflow_SearchRuns_descriptor;",
          "40046:       public org.mlflow.api.proto.Service.SearchRuns getDefaultInstanceForType() {",
          "40047:         return org.mlflow.api.proto.Service.SearchRuns.getDefaultInstance();",
          "40051:       public org.mlflow.api.proto.Service.SearchRuns build() {",
          "40052:         org.mlflow.api.proto.Service.SearchRuns result = buildPartial();",
          "",
          "[Added Lines]",
          "48171:         runId_ = \"\";",
          "48173:         runUuid_ = \"\";",
          "48175:         path_ = \"\";",
          "48178:         bitField0_ = (bitField0_ & ~0x00000008);",
          "48185:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_descriptor;",
          "48189:       public org.mlflow.api.proto.Service.ListArtifacts getDefaultInstanceForType() {",
          "48190:         return org.mlflow.api.proto.Service.ListArtifacts.getDefaultInstance();",
          "48194:       public org.mlflow.api.proto.Service.ListArtifacts build() {",
          "48195:         org.mlflow.api.proto.Service.ListArtifacts result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 651 ---",
          "[Context before]",
          "40057:       }",
          "40059:       @java.lang.Override",
          "40070:           to_bitField0_ |= 0x00000001;",
          "40071:         }",
          "40074:           to_bitField0_ |= 0x00000002;",
          "40075:         }",
          "40078:           to_bitField0_ |= 0x00000004;",
          "40079:         }",
          "40087:           to_bitField0_ |= 0x00000008;",
          "40088:         }",
          "40089:         result.pageToken_ = pageToken_;",
          "",
          "[Removed Lines]",
          "40060:       public org.mlflow.api.proto.Service.SearchRuns buildPartial() {",
          "40061:         org.mlflow.api.proto.Service.SearchRuns result = new org.mlflow.api.proto.Service.SearchRuns(this);",
          "40062:         int from_bitField0_ = bitField0_;",
          "40063:         int to_bitField0_ = 0;",
          "40064:         if (((bitField0_ & 0x00000001) != 0)) {",
          "40065:           experimentIds_ = experimentIds_.getUnmodifiableView();",
          "40066:           bitField0_ = (bitField0_ & ~0x00000001);",
          "40067:         }",
          "40068:         result.experimentIds_ = experimentIds_;",
          "40069:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "40072:         result.filter_ = filter_;",
          "40073:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "40076:         result.runViewType_ = runViewType_;",
          "40077:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "40080:         result.maxResults_ = maxResults_;",
          "40081:         if (((bitField0_ & 0x00000010) != 0)) {",
          "40082:           orderBy_ = orderBy_.getUnmodifiableView();",
          "40083:           bitField0_ = (bitField0_ & ~0x00000010);",
          "40084:         }",
          "40085:         result.orderBy_ = orderBy_;",
          "40086:         if (((from_bitField0_ & 0x00000020) != 0)) {",
          "",
          "[Added Lines]",
          "48203:       public org.mlflow.api.proto.Service.ListArtifacts buildPartial() {",
          "48204:         org.mlflow.api.proto.Service.ListArtifacts result = new org.mlflow.api.proto.Service.ListArtifacts(this);",
          "48205:         int from_bitField0_ = bitField0_;",
          "48206:         int to_bitField0_ = 0;",
          "48207:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "48210:         result.runId_ = runId_;",
          "48211:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "48214:         result.runUuid_ = runUuid_;",
          "48215:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "48218:         result.path_ = path_;",
          "48219:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "",
          "---------------",
          "--- Hunk 652 ---",
          "[Context before]",
          "40126:       }",
          "40127:       @java.lang.Override",
          "40128:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "40131:         } else {",
          "40132:           super.mergeFrom(other);",
          "40133:           return this;",
          "40134:         }",
          "40135:       }",
          "40147:           onChanged();",
          "40148:         }",
          "40150:           bitField0_ |= 0x00000002;",
          "40152:           onChanged();",
          "40153:         }",
          "40168:           onChanged();",
          "40169:         }",
          "40170:         if (other.hasPageToken()) {",
          "40172:           pageToken_ = other.pageToken_;",
          "40173:           onChanged();",
          "40174:         }",
          "",
          "[Removed Lines]",
          "40129:         if (other instanceof org.mlflow.api.proto.Service.SearchRuns) {",
          "40130:           return mergeFrom((org.mlflow.api.proto.Service.SearchRuns)other);",
          "40137:       public Builder mergeFrom(org.mlflow.api.proto.Service.SearchRuns other) {",
          "40138:         if (other == org.mlflow.api.proto.Service.SearchRuns.getDefaultInstance()) return this;",
          "40139:         if (!other.experimentIds_.isEmpty()) {",
          "40140:           if (experimentIds_.isEmpty()) {",
          "40141:             experimentIds_ = other.experimentIds_;",
          "40142:             bitField0_ = (bitField0_ & ~0x00000001);",
          "40143:           } else {",
          "40144:             ensureExperimentIdsIsMutable();",
          "40145:             experimentIds_.addAll(other.experimentIds_);",
          "40146:           }",
          "40149:         if (other.hasFilter()) {",
          "40151:           filter_ = other.filter_;",
          "40154:         if (other.hasRunViewType()) {",
          "40155:           setRunViewType(other.getRunViewType());",
          "40156:         }",
          "40157:         if (other.hasMaxResults()) {",
          "40158:           setMaxResults(other.getMaxResults());",
          "40159:         }",
          "40160:         if (!other.orderBy_.isEmpty()) {",
          "40161:           if (orderBy_.isEmpty()) {",
          "40162:             orderBy_ = other.orderBy_;",
          "40163:             bitField0_ = (bitField0_ & ~0x00000010);",
          "40164:           } else {",
          "40165:             ensureOrderByIsMutable();",
          "40166:             orderBy_.addAll(other.orderBy_);",
          "40167:           }",
          "40171:           bitField0_ |= 0x00000020;",
          "",
          "[Added Lines]",
          "48262:         if (other instanceof org.mlflow.api.proto.Service.ListArtifacts) {",
          "48263:           return mergeFrom((org.mlflow.api.proto.Service.ListArtifacts)other);",
          "48270:       public Builder mergeFrom(org.mlflow.api.proto.Service.ListArtifacts other) {",
          "48271:         if (other == org.mlflow.api.proto.Service.ListArtifacts.getDefaultInstance()) return this;",
          "48272:         if (other.hasRunId()) {",
          "48273:           bitField0_ |= 0x00000001;",
          "48274:           runId_ = other.runId_;",
          "48277:         if (other.hasRunUuid()) {",
          "48279:           runUuid_ = other.runUuid_;",
          "48282:         if (other.hasPath()) {",
          "48283:           bitField0_ |= 0x00000004;",
          "48284:           path_ = other.path_;",
          "48288:           bitField0_ |= 0x00000008;",
          "",
          "---------------",
          "--- Hunk 653 ---",
          "[Context before]",
          "40187:           com.google.protobuf.CodedInputStream input,",
          "40188:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "40189:           throws java.io.IOException {",
          "40191:         try {",
          "40192:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "40193:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "40195:           throw e.unwrapIOException();",
          "40196:         } finally {",
          "40197:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "40190:         org.mlflow.api.proto.Service.SearchRuns parsedMessage = null;",
          "40194:           parsedMessage = (org.mlflow.api.proto.Service.SearchRuns) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "48307:         org.mlflow.api.proto.Service.ListArtifacts parsedMessage = null;",
          "48311:           parsedMessage = (org.mlflow.api.proto.Service.ListArtifacts) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 654 ---",
          "[Context before]",
          "40202:       }",
          "40203:       private int bitField0_;",
          "40234:       }",
          "40246:       }",
          "40256:       public com.google.protobuf.ByteString",
          "40279:       }",
          "40290:           java.lang.String value) {",
          "40291:         if (value == null) {",
          "40292:     throw new NullPointerException();",
          "40293:   }",
          "40313:         onChanged();",
          "40314:         return this;",
          "40315:       }",
          "40326:         bitField0_ = (bitField0_ & ~0x00000001);",
          "40327:         onChanged();",
          "40328:         return this;",
          "40329:       }",
          "40340:           com.google.protobuf.ByteString value) {",
          "40341:         if (value == null) {",
          "40342:     throw new NullPointerException();",
          "40343:   }",
          "40346:         onChanged();",
          "40347:         return this;",
          "40348:       }",
          "40366:         return ((bitField0_ & 0x00000002) != 0);",
          "40367:       }",
          "40384:         if (!(ref instanceof java.lang.String)) {",
          "40385:           com.google.protobuf.ByteString bs =",
          "40386:               (com.google.protobuf.ByteString) ref;",
          "40387:           java.lang.String s = bs.toStringUtf8();",
          "40388:           if (bs.isValidUtf8()) {",
          "40390:           }",
          "40391:           return s;",
          "40392:         } else {",
          "",
          "[Removed Lines]",
          "40205:       private com.google.protobuf.LazyStringList experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "40206:       private void ensureExperimentIdsIsMutable() {",
          "40207:         if (!((bitField0_ & 0x00000001) != 0)) {",
          "40208:           experimentIds_ = new com.google.protobuf.LazyStringArrayList(experimentIds_);",
          "40209:           bitField0_ |= 0x00000001;",
          "40210:          }",
          "40211:       }",
          "40220:       public com.google.protobuf.ProtocolStringList",
          "40221:           getExperimentIdsList() {",
          "40222:         return experimentIds_.getUnmodifiableView();",
          "40223:       }",
          "40232:       public int getExperimentIdsCount() {",
          "40233:         return experimentIds_.size();",
          "40244:       public java.lang.String getExperimentIds(int index) {",
          "40245:         return experimentIds_.get(index);",
          "40257:           getExperimentIdsBytes(int index) {",
          "40258:         return experimentIds_.getByteString(index);",
          "40259:       }",
          "40270:       public Builder setExperimentIds(",
          "40271:           int index, java.lang.String value) {",
          "40272:         if (value == null) {",
          "40273:     throw new NullPointerException();",
          "40274:   }",
          "40275:   ensureExperimentIdsIsMutable();",
          "40276:         experimentIds_.set(index, value);",
          "40277:         onChanged();",
          "40278:         return this;",
          "40289:       public Builder addExperimentIds(",
          "40294:   ensureExperimentIdsIsMutable();",
          "40295:         experimentIds_.add(value);",
          "40296:         onChanged();",
          "40297:         return this;",
          "40298:       }",
          "40308:       public Builder addAllExperimentIds(",
          "40309:           java.lang.Iterable<java.lang.String> values) {",
          "40310:         ensureExperimentIdsIsMutable();",
          "40311:         com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "40312:             values, experimentIds_);",
          "40324:       public Builder clearExperimentIds() {",
          "40325:         experimentIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "40339:       public Builder addExperimentIdsBytes(",
          "40344:   ensureExperimentIdsIsMutable();",
          "40345:         experimentIds_.add(value);",
          "40350:       private java.lang.Object filter_ = \"\";",
          "40365:       public boolean hasFilter() {",
          "40382:       public java.lang.String getFilter() {",
          "40383:         java.lang.Object ref = filter_;",
          "40389:             filter_ = s;",
          "",
          "[Added Lines]",
          "48322:       private java.lang.Object runId_ = \"\";",
          "48331:       public boolean hasRunId() {",
          "48332:         return ((bitField0_ & 0x00000001) != 0);",
          "48342:       public java.lang.String getRunId() {",
          "48343:         java.lang.Object ref = runId_;",
          "48344:         if (!(ref instanceof java.lang.String)) {",
          "48345:           com.google.protobuf.ByteString bs =",
          "48346:               (com.google.protobuf.ByteString) ref;",
          "48347:           java.lang.String s = bs.toStringUtf8();",
          "48348:           if (bs.isValidUtf8()) {",
          "48349:             runId_ = s;",
          "48350:           }",
          "48351:           return s;",
          "48352:         } else {",
          "48353:           return (java.lang.String) ref;",
          "48354:         }",
          "48365:           getRunIdBytes() {",
          "48366:         java.lang.Object ref = runId_;",
          "48367:         if (ref instanceof String) {",
          "48368:           com.google.protobuf.ByteString b =",
          "48369:               com.google.protobuf.ByteString.copyFromUtf8(",
          "48370:                   (java.lang.String) ref);",
          "48371:           runId_ = b;",
          "48372:           return b;",
          "48373:         } else {",
          "48374:           return (com.google.protobuf.ByteString) ref;",
          "48375:         }",
          "48386:       public Builder setRunId(",
          "48391:   bitField0_ |= 0x00000001;",
          "48392:         runId_ = value;",
          "48404:       public Builder clearRunId() {",
          "48406:         runId_ = getDefaultInstance().getRunId();",
          "48419:       public Builder setRunIdBytes(",
          "48424:   bitField0_ |= 0x00000001;",
          "48425:         runId_ = value;",
          "48430:       private java.lang.Object runUuid_ = \"\";",
          "48440:       public boolean hasRunUuid() {",
          "48452:       public java.lang.String getRunUuid() {",
          "48453:         java.lang.Object ref = runUuid_;",
          "48459:             runUuid_ = s;",
          "",
          "---------------",
          "--- Hunk 655 ---",
          "[Context before]",
          "40395:       }",
          "40410:       public com.google.protobuf.ByteString",
          "40413:         if (ref instanceof String) {",
          "40414:           com.google.protobuf.ByteString b =",
          "40415:               com.google.protobuf.ByteString.copyFromUtf8(",
          "40416:                   (java.lang.String) ref);",
          "40418:           return b;",
          "40419:         } else {",
          "40420:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "40411:           getFilterBytes() {",
          "40412:         java.lang.Object ref = filter_;",
          "40417:           filter_ = b;",
          "",
          "[Added Lines]",
          "48476:           getRunUuidBytes() {",
          "48477:         java.lang.Object ref = runUuid_;",
          "48482:           runUuid_ = b;",
          "",
          "---------------",
          "--- Hunk 656 ---",
          "[Context before]",
          "40422:       }",
          "40439:           java.lang.String value) {",
          "40440:         if (value == null) {",
          "40441:     throw new NullPointerException();",
          "40442:   }",
          "40443:   bitField0_ |= 0x00000002;",
          "40445:         onChanged();",
          "40446:         return this;",
          "40447:       }",
          "40463:         bitField0_ = (bitField0_ & ~0x00000002);",
          "40465:         onChanged();",
          "40466:         return this;",
          "40467:       }",
          "40484:           com.google.protobuf.ByteString value) {",
          "40485:         if (value == null) {",
          "40486:     throw new NullPointerException();",
          "40487:   }",
          "40488:   bitField0_ |= 0x00000002;",
          "40620:         onChanged();",
          "40621:         return this;",
          "40622:       }",
          "40694:       }",
          "40718:       }",
          "40741:       }",
          "40760:         onChanged();",
          "40761:         return this;",
          "40762:       }",
          "40778:         onChanged();",
          "40779:         return this;",
          "40780:       }",
          "40795:           com.google.protobuf.ByteString value) {",
          "40796:         if (value == null) {",
          "40797:     throw new NullPointerException();",
          "40798:   }",
          "40801:         onChanged();",
          "40802:         return this;",
          "40803:       }",
          "40805:       private java.lang.Object pageToken_ = \"\";",
          "40810:       public boolean hasPageToken() {",
          "40812:       }",
          "40817:       public java.lang.String getPageToken() {",
          "",
          "[Removed Lines]",
          "40438:       public Builder setFilter(",
          "40444:         filter_ = value;",
          "40462:       public Builder clearFilter() {",
          "40464:         filter_ = getDefaultInstance().getFilter();",
          "40483:       public Builder setFilterBytes(",
          "40489:         filter_ = value;",
          "40490:         onChanged();",
          "40491:         return this;",
          "40492:       }",
          "40494:       private int runViewType_ = 1;",
          "40504:       @java.lang.Override public boolean hasRunViewType() {",
          "40505:         return ((bitField0_ & 0x00000004) != 0);",
          "40506:       }",
          "40516:       @java.lang.Override",
          "40517:       public org.mlflow.api.proto.Service.ViewType getRunViewType() {",
          "40518:         @SuppressWarnings(\"deprecation\")",
          "40519:         org.mlflow.api.proto.Service.ViewType result = org.mlflow.api.proto.Service.ViewType.valueOf(runViewType_);",
          "40520:         return result == null ? org.mlflow.api.proto.Service.ViewType.ACTIVE_ONLY : result;",
          "40521:       }",
          "40532:       public Builder setRunViewType(org.mlflow.api.proto.Service.ViewType value) {",
          "40533:         if (value == null) {",
          "40534:           throw new NullPointerException();",
          "40535:         }",
          "40536:         bitField0_ |= 0x00000004;",
          "40537:         runViewType_ = value.getNumber();",
          "40538:         onChanged();",
          "40539:         return this;",
          "40540:       }",
          "40550:       public Builder clearRunViewType() {",
          "40551:         bitField0_ = (bitField0_ & ~0x00000004);",
          "40552:         runViewType_ = 1;",
          "40553:         onChanged();",
          "40554:         return this;",
          "40555:       }",
          "40557:       private int maxResults_ = 1000;",
          "40569:       @java.lang.Override",
          "40570:       public boolean hasMaxResults() {",
          "40571:         return ((bitField0_ & 0x00000008) != 0);",
          "40572:       }",
          "40584:       @java.lang.Override",
          "40585:       public int getMaxResults() {",
          "40586:         return maxResults_;",
          "40587:       }",
          "40600:       public Builder setMaxResults(int value) {",
          "40601:         bitField0_ |= 0x00000008;",
          "40602:         maxResults_ = value;",
          "40603:         onChanged();",
          "40604:         return this;",
          "40605:       }",
          "40617:       public Builder clearMaxResults() {",
          "40618:         bitField0_ = (bitField0_ & ~0x00000008);",
          "40619:         maxResults_ = 1000;",
          "40624:       private com.google.protobuf.LazyStringList orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "40625:       private void ensureOrderByIsMutable() {",
          "40626:         if (!((bitField0_ & 0x00000010) != 0)) {",
          "40627:           orderBy_ = new com.google.protobuf.LazyStringArrayList(orderBy_);",
          "40628:           bitField0_ |= 0x00000010;",
          "40629:          }",
          "40630:       }",
          "40643:       public com.google.protobuf.ProtocolStringList",
          "40644:           getOrderByList() {",
          "40645:         return orderBy_.getUnmodifiableView();",
          "40646:       }",
          "40659:       public int getOrderByCount() {",
          "40660:         return orderBy_.size();",
          "40661:       }",
          "40675:       public java.lang.String getOrderBy(int index) {",
          "40676:         return orderBy_.get(index);",
          "40677:       }",
          "40691:       public com.google.protobuf.ByteString",
          "40692:           getOrderByBytes(int index) {",
          "40693:         return orderBy_.getByteString(index);",
          "40709:       public Builder setOrderBy(",
          "40710:           int index, java.lang.String value) {",
          "40711:         if (value == null) {",
          "40712:     throw new NullPointerException();",
          "40713:   }",
          "40714:   ensureOrderByIsMutable();",
          "40715:         orderBy_.set(index, value);",
          "40716:         onChanged();",
          "40717:         return this;",
          "40732:       public Builder addOrderBy(",
          "40733:           java.lang.String value) {",
          "40734:         if (value == null) {",
          "40735:     throw new NullPointerException();",
          "40736:   }",
          "40737:   ensureOrderByIsMutable();",
          "40738:         orderBy_.add(value);",
          "40739:         onChanged();",
          "40740:         return this;",
          "40755:       public Builder addAllOrderBy(",
          "40756:           java.lang.Iterable<java.lang.String> values) {",
          "40757:         ensureOrderByIsMutable();",
          "40758:         com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "40759:             values, orderBy_);",
          "40775:       public Builder clearOrderBy() {",
          "40776:         orderBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;",
          "40777:         bitField0_ = (bitField0_ & ~0x00000010);",
          "40794:       public Builder addOrderByBytes(",
          "40799:   ensureOrderByIsMutable();",
          "40800:         orderBy_.add(value);",
          "40811:         return ((bitField0_ & 0x00000020) != 0);",
          "",
          "[Added Lines]",
          "48498:       public Builder setRunUuid(",
          "48504:         runUuid_ = value;",
          "48517:       public Builder clearRunUuid() {",
          "48519:         runUuid_ = getDefaultInstance().getRunUuid();",
          "48533:       public Builder setRunUuidBytes(",
          "48539:         runUuid_ = value;",
          "48544:       private java.lang.Object path_ = \"\";",
          "48553:       public boolean hasPath() {",
          "48554:         return ((bitField0_ & 0x00000004) != 0);",
          "48564:       public java.lang.String getPath() {",
          "48565:         java.lang.Object ref = path_;",
          "48566:         if (!(ref instanceof java.lang.String)) {",
          "48567:           com.google.protobuf.ByteString bs =",
          "48568:               (com.google.protobuf.ByteString) ref;",
          "48569:           java.lang.String s = bs.toStringUtf8();",
          "48570:           if (bs.isValidUtf8()) {",
          "48571:             path_ = s;",
          "48572:           }",
          "48573:           return s;",
          "48574:         } else {",
          "48575:           return (java.lang.String) ref;",
          "48576:         }",
          "48586:       public com.google.protobuf.ByteString",
          "48587:           getPathBytes() {",
          "48588:         java.lang.Object ref = path_;",
          "48589:         if (ref instanceof String) {",
          "48590:           com.google.protobuf.ByteString b =",
          "48591:               com.google.protobuf.ByteString.copyFromUtf8(",
          "48592:                   (java.lang.String) ref);",
          "48593:           path_ = b;",
          "48594:           return b;",
          "48595:         } else {",
          "48596:           return (com.google.protobuf.ByteString) ref;",
          "48597:         }",
          "48608:       public Builder setPath(",
          "48609:           java.lang.String value) {",
          "48610:         if (value == null) {",
          "48611:     throw new NullPointerException();",
          "48612:   }",
          "48613:   bitField0_ |= 0x00000004;",
          "48614:         path_ = value;",
          "48626:       public Builder clearPath() {",
          "48627:         bitField0_ = (bitField0_ & ~0x00000004);",
          "48628:         path_ = getDefaultInstance().getPath();",
          "48641:       public Builder setPathBytes(",
          "48646:   bitField0_ |= 0x00000004;",
          "48647:         path_ = value;",
          "48662:         return ((bitField0_ & 0x00000008) != 0);",
          "",
          "---------------",
          "--- Hunk 657 ---",
          "[Context before]",
          "40855:         if (value == null) {",
          "40856:     throw new NullPointerException();",
          "40857:   }",
          "40859:         pageToken_ = value;",
          "40860:         onChanged();",
          "40861:         return this;",
          "40862:       }",
          "40867:       public Builder clearPageToken() {",
          "40869:         pageToken_ = getDefaultInstance().getPageToken();",
          "40870:         onChanged();",
          "40871:         return this;",
          "40872:       }",
          "",
          "[Removed Lines]",
          "40858:   bitField0_ |= 0x00000020;",
          "40868:         bitField0_ = (bitField0_ & ~0x00000020);",
          "",
          "[Added Lines]",
          "48721:   bitField0_ |= 0x00000008;",
          "48735:         bitField0_ = (bitField0_ & ~0x00000008);",
          "",
          "---------------",
          "--- Hunk 658 ---",
          "[Context before]",
          "40880:         if (value == null) {",
          "40881:     throw new NullPointerException();",
          "40882:   }",
          "40884:         pageToken_ = value;",
          "40885:         onChanged();",
          "40886:         return this;",
          "",
          "[Removed Lines]",
          "40883:   bitField0_ |= 0x00000020;",
          "",
          "[Added Lines]",
          "48754:   bitField0_ |= 0x00000008;",
          "",
          "---------------",
          "--- Hunk 659 ---",
          "[Context before]",
          "40898:       }",
          "40902:     }",
          "40906:     static {",
          "40908:     }",
          "40911:       return DEFAULT_INSTANCE;",
          "40912:     }",
          "40916:       @java.lang.Override",
          "40918:           com.google.protobuf.CodedInputStream input,",
          "40919:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "40920:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "40922:       }",
          "40923:     };",
          "40926:       return PARSER;",
          "40927:     }",
          "40929:     @java.lang.Override",
          "40931:       return PARSER;",
          "40932:     }",
          "40934:     @java.lang.Override",
          "40936:       return DEFAULT_INSTANCE;",
          "40937:     }",
          "40939:   }",
          "40943:       com.google.protobuf.MessageOrBuilder {",
          "40971:     com.google.protobuf.ByteString",
          "41075:     }",
          "41081:     }",
          "41083:     @java.lang.Override",
          "41088:     }",
          "41090:     @java.lang.Override",
          "41094:     }",
          "41097:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41098:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "41156:     }",
          "41160:     }",
          "41162:     @java.lang.Override",
          "41168:     }",
          "41275:     }",
          "41287:       }",
          "41292:       }",
          "41294:       @java.lang.Override",
          "41299:       }",
          "41301:       @java.lang.Override",
          "41305:       }",
          "41313:         }",
          "41366:         }",
          "41367:       }",
          "41371:       }",
          "41373:       @java.lang.Override",
          "41379:       }",
          "41381:       private int bitField0_;",
          "41394:         return ((bitField0_ & 0x00000001) != 0);",
          "41395:       }",
          "41411:               (com.google.protobuf.ByteString) ref;",
          "41412:           java.lang.String s = bs.toStringUtf8();",
          "41413:           if (bs.isValidUtf8()) {",
          "41415:           }",
          "41416:           return s;",
          "41417:         }",
          "41418:       }",
          "41428:       public com.google.protobuf.ByteString",
          "41432:           com.google.protobuf.ByteString b =",
          "41433:               com.google.protobuf.ByteString.copyFromUtf8(",
          "41434:                   (java.lang.String) ref);",
          "41436:           return b;",
          "41437:         } else {",
          "41438:           return (com.google.protobuf.ByteString) ref;",
          "41439:         }",
          "41440:       }",
          "41454:       }",
          "41466:       }",
          "41477:       }",
          "41485:       @java.lang.Override",
          "41488:       }",
          "41496:       @java.lang.Override",
          "41500:       }",
          "41515:       }",
          "41538:       }",
          "41547:       @java.lang.Override",
          "41736:       }",
          "41737:       @java.lang.Override",
          "41741:       }",
          "41748:       }",
          "42059:   }",
          "42132:             }",
          "42170:             }",
          "42191:             }",
          "42406:             }",
          "42431:           }",
          "42432:         }",
          "42499:       }",
          "42505:       }",
          "42509:       }",
          "42519:         }",
          "42524:       }",
          "42526:       @java.lang.Override",
          "42529:       }",
          "42531:       @java.lang.Override",
          "42534:       }",
          "42574:       }",
          "42596:       }",
          "42636:       }",
          "42659:       }",
          "42695:         }",
          "42697:       }",
          "42719:       }",
          "42755:         }",
          "42757:       }",
          "42779:       }",
          "42798:       }",
          "42801:       }",
          "42804:       }",
          "42807:       }",
          "42819:       }",
          "42822:       }",
          "42825:       }",
          "42828:       }",
          "42838:       }",
          "42841:       }",
          "42848:       }",
          "42853:       }",
          "42858:       }",
          "42863:       }",
          "42878:       }",
          "42882:       }",
          "42886:       }",
          "42890:       }",
          "43019:         }",
          "43051:         }",
          "43062:         }",
          "43066:         }",
          "43070:         }",
          "43074:         }",
          "43119:           return this;",
          "43120:         }",
          "43129:         }",
          "43134:         }",
          "43139:         }",
          "43144:         }",
          "43169:           }",
          "43170:         }",
          "43203:           }",
          "43207:         }",
          "43228:         }",
          "43313:           }",
          "43317:         }",
          "43339:         }",
          "43429:         }",
          "43450:         }",
          "43533:           }",
          "43537:         }",
          "43558:         }",
          "43572:     throw new NullPointerException();",
          "43573:   }",
          "43605:     throw new NullPointerException();",
          "43606:   }",
          "43646:       }",
          "43763:     @java.lang.Override",
          "43820:       }",
          "43821:     }",
          "43846:     @java.lang.Override",
          "43849:     }",
          "43858:     @java.lang.Override",
          "43861:       if (ref instanceof java.lang.String) {",
          "43862:         return (java.lang.String) ref;",
          "43863:       } else {",
          "",
          "[Removed Lines]",
          "40905:     private static final org.mlflow.api.proto.Service.SearchRuns DEFAULT_INSTANCE;",
          "40907:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.SearchRuns();",
          "40910:     public static org.mlflow.api.proto.Service.SearchRuns getDefaultInstance() {",
          "40914:     @java.lang.Deprecated public static final com.google.protobuf.Parser<SearchRuns>",
          "40915:         PARSER = new com.google.protobuf.AbstractParser<SearchRuns>() {",
          "40917:       public SearchRuns parsePartialFrom(",
          "40921:         return new SearchRuns(input, extensionRegistry);",
          "40925:     public static com.google.protobuf.Parser<SearchRuns> parser() {",
          "40930:     public com.google.protobuf.Parser<SearchRuns> getParserForType() {",
          "40935:     public org.mlflow.api.proto.Service.SearchRuns getDefaultInstanceForType() {",
          "40941:   public interface ListArtifactsOrBuilder extends",
          "40953:     boolean hasRunId();",
          "40962:     java.lang.String getRunId();",
          "40972:         getRunIdBytes();",
          "40983:     boolean hasRunUuid();",
          "40993:     java.lang.String getRunUuid();",
          "41003:     com.google.protobuf.ByteString",
          "41004:         getRunUuidBytes();",
          "41014:     boolean hasPath();",
          "41023:     java.lang.String getPath();",
          "41032:     com.google.protobuf.ByteString",
          "41033:         getPathBytes();",
          "41043:     boolean hasPageToken();",
          "41052:     java.lang.String getPageToken();",
          "41061:     com.google.protobuf.ByteString",
          "41062:         getPageTokenBytes();",
          "41063:   }",
          "41067:   public static final class ListArtifacts extends",
          "41068:       com.google.protobuf.GeneratedMessageV3 implements",
          "41070:       ListArtifactsOrBuilder {",
          "41071:   private static final long serialVersionUID = 0L;",
          "41073:     private ListArtifacts(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "41074:       super(builder);",
          "41076:     private ListArtifacts() {",
          "41077:       runId_ = \"\";",
          "41078:       runUuid_ = \"\";",
          "41079:       path_ = \"\";",
          "41080:       pageToken_ = \"\";",
          "41084:     @SuppressWarnings({\"unused\"})",
          "41085:     protected java.lang.Object newInstance(",
          "41086:         UnusedPrivateParameter unused) {",
          "41087:       return new ListArtifacts();",
          "41091:     public final com.google.protobuf.UnknownFieldSet",
          "41092:     getUnknownFields() {",
          "41093:       return this.unknownFields;",
          "41095:     private ListArtifacts(",
          "41096:         com.google.protobuf.CodedInputStream input,",
          "41099:       this();",
          "41100:       if (extensionRegistry == null) {",
          "41101:         throw new java.lang.NullPointerException();",
          "41102:       }",
          "41103:       int mutable_bitField0_ = 0;",
          "41104:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "41105:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "41106:       try {",
          "41107:         boolean done = false;",
          "41108:         while (!done) {",
          "41109:           int tag = input.readTag();",
          "41110:           switch (tag) {",
          "41111:             case 0:",
          "41112:               done = true;",
          "41113:               break;",
          "41114:             case 10: {",
          "41115:               com.google.protobuf.ByteString bs = input.readBytes();",
          "41116:               bitField0_ |= 0x00000002;",
          "41117:               runUuid_ = bs;",
          "41118:               break;",
          "41119:             }",
          "41120:             case 18: {",
          "41121:               com.google.protobuf.ByteString bs = input.readBytes();",
          "41122:               bitField0_ |= 0x00000004;",
          "41123:               path_ = bs;",
          "41124:               break;",
          "41125:             }",
          "41126:             case 26: {",
          "41127:               com.google.protobuf.ByteString bs = input.readBytes();",
          "41128:               bitField0_ |= 0x00000001;",
          "41129:               runId_ = bs;",
          "41130:               break;",
          "41131:             }",
          "41132:             case 34: {",
          "41133:               com.google.protobuf.ByteString bs = input.readBytes();",
          "41134:               bitField0_ |= 0x00000008;",
          "41135:               pageToken_ = bs;",
          "41136:               break;",
          "41137:             }",
          "41138:             default: {",
          "41139:               if (!parseUnknownField(",
          "41140:                   input, unknownFields, extensionRegistry, tag)) {",
          "41141:                 done = true;",
          "41142:               }",
          "41143:               break;",
          "41144:             }",
          "41145:           }",
          "41146:         }",
          "41147:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "41148:         throw e.setUnfinishedMessage(this);",
          "41149:       } catch (java.io.IOException e) {",
          "41150:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "41151:             e).setUnfinishedMessage(this);",
          "41152:       } finally {",
          "41153:         this.unknownFields = unknownFields.build();",
          "41154:         makeExtensionsImmutable();",
          "41155:       }",
          "41157:     public static final com.google.protobuf.Descriptors.Descriptor",
          "41158:         getDescriptor() {",
          "41159:       return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_descriptor;",
          "41163:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "41164:         internalGetFieldAccessorTable() {",
          "41165:       return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_fieldAccessorTable",
          "41166:           .ensureFieldAccessorsInitialized(",
          "41167:               org.mlflow.api.proto.Service.ListArtifacts.class, org.mlflow.api.proto.Service.ListArtifacts.Builder.class);",
          "41170:     public interface ResponseOrBuilder extends",
          "41172:         com.google.protobuf.MessageOrBuilder {",
          "41182:       boolean hasRootUri();",
          "41191:       java.lang.String getRootUri();",
          "41200:       com.google.protobuf.ByteString",
          "41201:           getRootUriBytes();",
          "41210:       java.util.List<org.mlflow.api.proto.Service.FileInfo>",
          "41211:           getFilesList();",
          "41219:       org.mlflow.api.proto.Service.FileInfo getFiles(int index);",
          "41227:       int getFilesCount();",
          "41235:       java.util.List<? extends org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "41236:           getFilesOrBuilderList();",
          "41244:       org.mlflow.api.proto.Service.FileInfoOrBuilder getFilesOrBuilder(",
          "41245:           int index);",
          "41255:       boolean hasNextPageToken();",
          "41264:       java.lang.String getNextPageToken();",
          "41273:       com.google.protobuf.ByteString",
          "41274:           getNextPageTokenBytes();",
          "41279:     public static final class Response extends",
          "41280:         com.google.protobuf.GeneratedMessageV3 implements",
          "41282:         ResponseOrBuilder {",
          "41283:     private static final long serialVersionUID = 0L;",
          "41285:       private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "41286:         super(builder);",
          "41288:       private Response() {",
          "41289:         rootUri_ = \"\";",
          "41290:         files_ = java.util.Collections.emptyList();",
          "41291:         nextPageToken_ = \"\";",
          "41295:       @SuppressWarnings({\"unused\"})",
          "41296:       protected java.lang.Object newInstance(",
          "41297:           UnusedPrivateParameter unused) {",
          "41298:         return new Response();",
          "41302:       public final com.google.protobuf.UnknownFieldSet",
          "41303:       getUnknownFields() {",
          "41304:         return this.unknownFields;",
          "41306:       private Response(",
          "41307:           com.google.protobuf.CodedInputStream input,",
          "41308:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41309:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "41310:         this();",
          "41311:         if (extensionRegistry == null) {",
          "41312:           throw new java.lang.NullPointerException();",
          "41314:         int mutable_bitField0_ = 0;",
          "41315:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "41316:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "41317:         try {",
          "41318:           boolean done = false;",
          "41319:           while (!done) {",
          "41320:             int tag = input.readTag();",
          "41321:             switch (tag) {",
          "41322:               case 0:",
          "41323:                 done = true;",
          "41324:                 break;",
          "41325:               case 10: {",
          "41326:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "41327:                 bitField0_ |= 0x00000001;",
          "41328:                 rootUri_ = bs;",
          "41329:                 break;",
          "41330:               }",
          "41331:               case 18: {",
          "41332:                 if (!((mutable_bitField0_ & 0x00000002) != 0)) {",
          "41333:                   files_ = new java.util.ArrayList<org.mlflow.api.proto.Service.FileInfo>();",
          "41334:                   mutable_bitField0_ |= 0x00000002;",
          "41335:                 }",
          "41336:                 files_.add(",
          "41337:                     input.readMessage(org.mlflow.api.proto.Service.FileInfo.PARSER, extensionRegistry));",
          "41338:                 break;",
          "41339:               }",
          "41340:               case 26: {",
          "41341:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "41342:                 bitField0_ |= 0x00000002;",
          "41343:                 nextPageToken_ = bs;",
          "41344:                 break;",
          "41345:               }",
          "41346:               default: {",
          "41347:                 if (!parseUnknownField(",
          "41348:                     input, unknownFields, extensionRegistry, tag)) {",
          "41349:                   done = true;",
          "41350:                 }",
          "41351:                 break;",
          "41352:               }",
          "41353:             }",
          "41354:           }",
          "41355:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "41356:           throw e.setUnfinishedMessage(this);",
          "41357:         } catch (java.io.IOException e) {",
          "41358:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "41359:               e).setUnfinishedMessage(this);",
          "41360:         } finally {",
          "41361:           if (((mutable_bitField0_ & 0x00000002) != 0)) {",
          "41362:             files_ = java.util.Collections.unmodifiableList(files_);",
          "41363:           }",
          "41364:           this.unknownFields = unknownFields.build();",
          "41365:           makeExtensionsImmutable();",
          "41368:       public static final com.google.protobuf.Descriptors.Descriptor",
          "41369:           getDescriptor() {",
          "41370:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_descriptor;",
          "41374:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "41375:           internalGetFieldAccessorTable() {",
          "41376:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_fieldAccessorTable",
          "41377:             .ensureFieldAccessorsInitialized(",
          "41378:                 org.mlflow.api.proto.Service.ListArtifacts.Response.class, org.mlflow.api.proto.Service.ListArtifacts.Response.Builder.class);",
          "41382:       public static final int ROOT_URI_FIELD_NUMBER = 1;",
          "41383:       private volatile java.lang.Object rootUri_;",
          "41392:       @java.lang.Override",
          "41393:       public boolean hasRootUri() {",
          "41404:       @java.lang.Override",
          "41405:       public java.lang.String getRootUri() {",
          "41406:         java.lang.Object ref = rootUri_;",
          "41407:         if (ref instanceof java.lang.String) {",
          "41408:           return (java.lang.String) ref;",
          "41409:         } else {",
          "41410:           com.google.protobuf.ByteString bs =",
          "41414:             rootUri_ = s;",
          "41427:       @java.lang.Override",
          "41429:           getRootUriBytes() {",
          "41430:         java.lang.Object ref = rootUri_;",
          "41431:         if (ref instanceof java.lang.String) {",
          "41435:           rootUri_ = b;",
          "41442:       public static final int FILES_FIELD_NUMBER = 2;",
          "41443:       private java.util.List<org.mlflow.api.proto.Service.FileInfo> files_;",
          "41451:       @java.lang.Override",
          "41452:       public java.util.List<org.mlflow.api.proto.Service.FileInfo> getFilesList() {",
          "41453:         return files_;",
          "41462:       @java.lang.Override",
          "41463:       public java.util.List<? extends org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "41464:           getFilesOrBuilderList() {",
          "41465:         return files_;",
          "41474:       @java.lang.Override",
          "41475:       public int getFilesCount() {",
          "41476:         return files_.size();",
          "41486:       public org.mlflow.api.proto.Service.FileInfo getFiles(int index) {",
          "41487:         return files_.get(index);",
          "41497:       public org.mlflow.api.proto.Service.FileInfoOrBuilder getFilesOrBuilder(",
          "41498:           int index) {",
          "41499:         return files_.get(index);",
          "41502:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 3;",
          "41503:       private volatile java.lang.Object nextPageToken_;",
          "41512:       @java.lang.Override",
          "41513:       public boolean hasNextPageToken() {",
          "41514:         return ((bitField0_ & 0x00000002) != 0);",
          "41524:       @java.lang.Override",
          "41525:       public java.lang.String getNextPageToken() {",
          "41526:         java.lang.Object ref = nextPageToken_;",
          "41527:         if (ref instanceof java.lang.String) {",
          "41528:           return (java.lang.String) ref;",
          "41529:         } else {",
          "41530:           com.google.protobuf.ByteString bs =",
          "41531:               (com.google.protobuf.ByteString) ref;",
          "41532:           java.lang.String s = bs.toStringUtf8();",
          "41533:           if (bs.isValidUtf8()) {",
          "41534:             nextPageToken_ = s;",
          "41535:           }",
          "41536:           return s;",
          "41537:         }",
          "41548:       public com.google.protobuf.ByteString",
          "41549:           getNextPageTokenBytes() {",
          "41550:         java.lang.Object ref = nextPageToken_;",
          "41551:         if (ref instanceof java.lang.String) {",
          "41552:           com.google.protobuf.ByteString b =",
          "41553:               com.google.protobuf.ByteString.copyFromUtf8(",
          "41554:                   (java.lang.String) ref);",
          "41555:           nextPageToken_ = b;",
          "41556:           return b;",
          "41557:         } else {",
          "41558:           return (com.google.protobuf.ByteString) ref;",
          "41559:         }",
          "41560:       }",
          "41562:       private byte memoizedIsInitialized = -1;",
          "41563:       @java.lang.Override",
          "41564:       public final boolean isInitialized() {",
          "41565:         byte isInitialized = memoizedIsInitialized;",
          "41566:         if (isInitialized == 1) return true;",
          "41567:         if (isInitialized == 0) return false;",
          "41569:         memoizedIsInitialized = 1;",
          "41570:         return true;",
          "41571:       }",
          "41573:       @java.lang.Override",
          "41574:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "41575:                           throws java.io.IOException {",
          "41576:         if (((bitField0_ & 0x00000001) != 0)) {",
          "41577:           com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rootUri_);",
          "41578:         }",
          "41579:         for (int i = 0; i < files_.size(); i++) {",
          "41580:           output.writeMessage(2, files_.get(i));",
          "41581:         }",
          "41582:         if (((bitField0_ & 0x00000002) != 0)) {",
          "41583:           com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nextPageToken_);",
          "41584:         }",
          "41585:         unknownFields.writeTo(output);",
          "41586:       }",
          "41588:       @java.lang.Override",
          "41589:       public int getSerializedSize() {",
          "41590:         int size = memoizedSize;",
          "41591:         if (size != -1) return size;",
          "41593:         size = 0;",
          "41594:         if (((bitField0_ & 0x00000001) != 0)) {",
          "41595:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rootUri_);",
          "41596:         }",
          "41597:         for (int i = 0; i < files_.size(); i++) {",
          "41598:           size += com.google.protobuf.CodedOutputStream",
          "41599:             .computeMessageSize(2, files_.get(i));",
          "41600:         }",
          "41601:         if (((bitField0_ & 0x00000002) != 0)) {",
          "41602:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nextPageToken_);",
          "41603:         }",
          "41604:         size += unknownFields.getSerializedSize();",
          "41605:         memoizedSize = size;",
          "41606:         return size;",
          "41607:       }",
          "41609:       @java.lang.Override",
          "41610:       public boolean equals(final java.lang.Object obj) {",
          "41611:         if (obj == this) {",
          "41612:          return true;",
          "41613:         }",
          "41614:         if (!(obj instanceof org.mlflow.api.proto.Service.ListArtifacts.Response)) {",
          "41615:           return super.equals(obj);",
          "41616:         }",
          "41617:         org.mlflow.api.proto.Service.ListArtifacts.Response other = (org.mlflow.api.proto.Service.ListArtifacts.Response) obj;",
          "41619:         if (hasRootUri() != other.hasRootUri()) return false;",
          "41620:         if (hasRootUri()) {",
          "41621:           if (!getRootUri()",
          "41622:               .equals(other.getRootUri())) return false;",
          "41623:         }",
          "41624:         if (!getFilesList()",
          "41625:             .equals(other.getFilesList())) return false;",
          "41626:         if (hasNextPageToken() != other.hasNextPageToken()) return false;",
          "41627:         if (hasNextPageToken()) {",
          "41628:           if (!getNextPageToken()",
          "41629:               .equals(other.getNextPageToken())) return false;",
          "41630:         }",
          "41631:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "41632:         return true;",
          "41633:       }",
          "41635:       @java.lang.Override",
          "41636:       public int hashCode() {",
          "41637:         if (memoizedHashCode != 0) {",
          "41638:           return memoizedHashCode;",
          "41639:         }",
          "41640:         int hash = 41;",
          "41641:         hash = (19 * hash) + getDescriptor().hashCode();",
          "41642:         if (hasRootUri()) {",
          "41643:           hash = (37 * hash) + ROOT_URI_FIELD_NUMBER;",
          "41644:           hash = (53 * hash) + getRootUri().hashCode();",
          "41645:         }",
          "41646:         if (getFilesCount() > 0) {",
          "41647:           hash = (37 * hash) + FILES_FIELD_NUMBER;",
          "41648:           hash = (53 * hash) + getFilesList().hashCode();",
          "41649:         }",
          "41650:         if (hasNextPageToken()) {",
          "41651:           hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;",
          "41652:           hash = (53 * hash) + getNextPageToken().hashCode();",
          "41653:         }",
          "41654:         hash = (29 * hash) + unknownFields.hashCode();",
          "41655:         memoizedHashCode = hash;",
          "41656:         return hash;",
          "41657:       }",
          "41659:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41660:           java.nio.ByteBuffer data)",
          "41661:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "41662:         return PARSER.parseFrom(data);",
          "41663:       }",
          "41664:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41665:           java.nio.ByteBuffer data,",
          "41666:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41667:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "41668:         return PARSER.parseFrom(data, extensionRegistry);",
          "41669:       }",
          "41670:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41671:           com.google.protobuf.ByteString data)",
          "41672:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "41673:         return PARSER.parseFrom(data);",
          "41674:       }",
          "41675:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41676:           com.google.protobuf.ByteString data,",
          "41677:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41678:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "41679:         return PARSER.parseFrom(data, extensionRegistry);",
          "41680:       }",
          "41681:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(byte[] data)",
          "41682:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "41683:         return PARSER.parseFrom(data);",
          "41684:       }",
          "41685:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41686:           byte[] data,",
          "41687:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41688:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "41689:         return PARSER.parseFrom(data, extensionRegistry);",
          "41690:       }",
          "41691:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(java.io.InputStream input)",
          "41692:           throws java.io.IOException {",
          "41693:         return com.google.protobuf.GeneratedMessageV3",
          "41694:             .parseWithIOException(PARSER, input);",
          "41695:       }",
          "41696:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41697:           java.io.InputStream input,",
          "41698:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41699:           throws java.io.IOException {",
          "41700:         return com.google.protobuf.GeneratedMessageV3",
          "41701:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "41702:       }",
          "41703:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseDelimitedFrom(java.io.InputStream input)",
          "41704:           throws java.io.IOException {",
          "41705:         return com.google.protobuf.GeneratedMessageV3",
          "41706:             .parseDelimitedWithIOException(PARSER, input);",
          "41707:       }",
          "41708:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseDelimitedFrom(",
          "41709:           java.io.InputStream input,",
          "41710:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41711:           throws java.io.IOException {",
          "41712:         return com.google.protobuf.GeneratedMessageV3",
          "41713:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "41714:       }",
          "41715:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41716:           com.google.protobuf.CodedInputStream input)",
          "41717:           throws java.io.IOException {",
          "41718:         return com.google.protobuf.GeneratedMessageV3",
          "41719:             .parseWithIOException(PARSER, input);",
          "41720:       }",
          "41721:       public static org.mlflow.api.proto.Service.ListArtifacts.Response parseFrom(",
          "41722:           com.google.protobuf.CodedInputStream input,",
          "41723:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41724:           throws java.io.IOException {",
          "41725:         return com.google.protobuf.GeneratedMessageV3",
          "41726:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "41727:       }",
          "41729:       @java.lang.Override",
          "41730:       public Builder newBuilderForType() { return newBuilder(); }",
          "41731:       public static Builder newBuilder() {",
          "41732:         return DEFAULT_INSTANCE.toBuilder();",
          "41733:       }",
          "41734:       public static Builder newBuilder(org.mlflow.api.proto.Service.ListArtifacts.Response prototype) {",
          "41735:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "41738:       public Builder toBuilder() {",
          "41739:         return this == DEFAULT_INSTANCE",
          "41740:             ? new Builder() : new Builder().mergeFrom(this);",
          "41743:       @java.lang.Override",
          "41744:       protected Builder newBuilderForType(",
          "41745:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "41746:         Builder builder = new Builder(parent);",
          "41747:         return builder;",
          "41752:       public static final class Builder extends",
          "41753:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "41755:           org.mlflow.api.proto.Service.ListArtifacts.ResponseOrBuilder {",
          "41756:         public static final com.google.protobuf.Descriptors.Descriptor",
          "41757:             getDescriptor() {",
          "41758:           return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_descriptor;",
          "41759:         }",
          "41761:         @java.lang.Override",
          "41762:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "41763:             internalGetFieldAccessorTable() {",
          "41764:           return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_fieldAccessorTable",
          "41765:               .ensureFieldAccessorsInitialized(",
          "41766:                   org.mlflow.api.proto.Service.ListArtifacts.Response.class, org.mlflow.api.proto.Service.ListArtifacts.Response.Builder.class);",
          "41767:         }",
          "41770:         private Builder() {",
          "41771:           maybeForceBuilderInitialization();",
          "41772:         }",
          "41774:         private Builder(",
          "41775:             com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "41776:           super(parent);",
          "41777:           maybeForceBuilderInitialization();",
          "41778:         }",
          "41779:         private void maybeForceBuilderInitialization() {",
          "41780:           if (com.google.protobuf.GeneratedMessageV3",
          "41781:                   .alwaysUseFieldBuilders) {",
          "41782:             getFilesFieldBuilder();",
          "41783:           }",
          "41784:         }",
          "41785:         @java.lang.Override",
          "41786:         public Builder clear() {",
          "41787:           super.clear();",
          "41788:           rootUri_ = \"\";",
          "41789:           bitField0_ = (bitField0_ & ~0x00000001);",
          "41790:           if (filesBuilder_ == null) {",
          "41791:             files_ = java.util.Collections.emptyList();",
          "41792:             bitField0_ = (bitField0_ & ~0x00000002);",
          "41793:           } else {",
          "41794:             filesBuilder_.clear();",
          "41795:           }",
          "41796:           nextPageToken_ = \"\";",
          "41797:           bitField0_ = (bitField0_ & ~0x00000004);",
          "41798:           return this;",
          "41799:         }",
          "41801:         @java.lang.Override",
          "41802:         public com.google.protobuf.Descriptors.Descriptor",
          "41803:             getDescriptorForType() {",
          "41804:           return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_Response_descriptor;",
          "41805:         }",
          "41807:         @java.lang.Override",
          "41808:         public org.mlflow.api.proto.Service.ListArtifacts.Response getDefaultInstanceForType() {",
          "41809:           return org.mlflow.api.proto.Service.ListArtifacts.Response.getDefaultInstance();",
          "41810:         }",
          "41812:         @java.lang.Override",
          "41813:         public org.mlflow.api.proto.Service.ListArtifacts.Response build() {",
          "41814:           org.mlflow.api.proto.Service.ListArtifacts.Response result = buildPartial();",
          "41815:           if (!result.isInitialized()) {",
          "41816:             throw newUninitializedMessageException(result);",
          "41817:           }",
          "41818:           return result;",
          "41819:         }",
          "41821:         @java.lang.Override",
          "41822:         public org.mlflow.api.proto.Service.ListArtifacts.Response buildPartial() {",
          "41823:           org.mlflow.api.proto.Service.ListArtifacts.Response result = new org.mlflow.api.proto.Service.ListArtifacts.Response(this);",
          "41824:           int from_bitField0_ = bitField0_;",
          "41825:           int to_bitField0_ = 0;",
          "41826:           if (((from_bitField0_ & 0x00000001) != 0)) {",
          "41827:             to_bitField0_ |= 0x00000001;",
          "41828:           }",
          "41829:           result.rootUri_ = rootUri_;",
          "41830:           if (filesBuilder_ == null) {",
          "41831:             if (((bitField0_ & 0x00000002) != 0)) {",
          "41832:               files_ = java.util.Collections.unmodifiableList(files_);",
          "41833:               bitField0_ = (bitField0_ & ~0x00000002);",
          "41834:             }",
          "41835:             result.files_ = files_;",
          "41836:           } else {",
          "41837:             result.files_ = filesBuilder_.build();",
          "41838:           }",
          "41839:           if (((from_bitField0_ & 0x00000004) != 0)) {",
          "41840:             to_bitField0_ |= 0x00000002;",
          "41841:           }",
          "41842:           result.nextPageToken_ = nextPageToken_;",
          "41843:           result.bitField0_ = to_bitField0_;",
          "41844:           onBuilt();",
          "41845:           return result;",
          "41846:         }",
          "41848:         @java.lang.Override",
          "41849:         public Builder clone() {",
          "41850:           return super.clone();",
          "41851:         }",
          "41852:         @java.lang.Override",
          "41853:         public Builder setField(",
          "41854:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "41855:             java.lang.Object value) {",
          "41856:           return super.setField(field, value);",
          "41857:         }",
          "41858:         @java.lang.Override",
          "41859:         public Builder clearField(",
          "41860:             com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "41861:           return super.clearField(field);",
          "41862:         }",
          "41863:         @java.lang.Override",
          "41864:         public Builder clearOneof(",
          "41865:             com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "41866:           return super.clearOneof(oneof);",
          "41867:         }",
          "41868:         @java.lang.Override",
          "41869:         public Builder setRepeatedField(",
          "41870:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "41871:             int index, java.lang.Object value) {",
          "41872:           return super.setRepeatedField(field, index, value);",
          "41873:         }",
          "41874:         @java.lang.Override",
          "41875:         public Builder addRepeatedField(",
          "41876:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "41877:             java.lang.Object value) {",
          "41878:           return super.addRepeatedField(field, value);",
          "41879:         }",
          "41880:         @java.lang.Override",
          "41881:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "41882:           if (other instanceof org.mlflow.api.proto.Service.ListArtifacts.Response) {",
          "41883:             return mergeFrom((org.mlflow.api.proto.Service.ListArtifacts.Response)other);",
          "41884:           } else {",
          "41885:             super.mergeFrom(other);",
          "41886:             return this;",
          "41887:           }",
          "41888:         }",
          "41890:         public Builder mergeFrom(org.mlflow.api.proto.Service.ListArtifacts.Response other) {",
          "41891:           if (other == org.mlflow.api.proto.Service.ListArtifacts.Response.getDefaultInstance()) return this;",
          "41892:           if (other.hasRootUri()) {",
          "41893:             bitField0_ |= 0x00000001;",
          "41894:             rootUri_ = other.rootUri_;",
          "41895:             onChanged();",
          "41896:           }",
          "41897:           if (filesBuilder_ == null) {",
          "41898:             if (!other.files_.isEmpty()) {",
          "41899:               if (files_.isEmpty()) {",
          "41900:                 files_ = other.files_;",
          "41901:                 bitField0_ = (bitField0_ & ~0x00000002);",
          "41902:               } else {",
          "41903:                 ensureFilesIsMutable();",
          "41904:                 files_.addAll(other.files_);",
          "41905:               }",
          "41906:               onChanged();",
          "41907:             }",
          "41908:           } else {",
          "41909:             if (!other.files_.isEmpty()) {",
          "41910:               if (filesBuilder_.isEmpty()) {",
          "41911:                 filesBuilder_.dispose();",
          "41912:                 filesBuilder_ = null;",
          "41913:                 files_ = other.files_;",
          "41914:                 bitField0_ = (bitField0_ & ~0x00000002);",
          "41915:                 filesBuilder_ =",
          "41916:                   com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "41917:                      getFilesFieldBuilder() : null;",
          "41918:               } else {",
          "41919:                 filesBuilder_.addAllMessages(other.files_);",
          "41920:               }",
          "41921:             }",
          "41922:           }",
          "41923:           if (other.hasNextPageToken()) {",
          "41924:             bitField0_ |= 0x00000004;",
          "41925:             nextPageToken_ = other.nextPageToken_;",
          "41926:             onChanged();",
          "41927:           }",
          "41928:           this.mergeUnknownFields(other.unknownFields);",
          "41929:           onChanged();",
          "41930:           return this;",
          "41931:         }",
          "41933:         @java.lang.Override",
          "41934:         public final boolean isInitialized() {",
          "41935:           return true;",
          "41936:         }",
          "41938:         @java.lang.Override",
          "41939:         public Builder mergeFrom(",
          "41940:             com.google.protobuf.CodedInputStream input,",
          "41941:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "41942:             throws java.io.IOException {",
          "41943:           org.mlflow.api.proto.Service.ListArtifacts.Response parsedMessage = null;",
          "41944:           try {",
          "41945:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "41946:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "41947:             parsedMessage = (org.mlflow.api.proto.Service.ListArtifacts.Response) e.getUnfinishedMessage();",
          "41948:             throw e.unwrapIOException();",
          "41949:           } finally {",
          "41950:             if (parsedMessage != null) {",
          "41951:               mergeFrom(parsedMessage);",
          "41952:             }",
          "41953:           }",
          "41954:           return this;",
          "41955:         }",
          "41956:         private int bitField0_;",
          "41958:         private java.lang.Object rootUri_ = \"\";",
          "41967:         public boolean hasRootUri() {",
          "41968:           return ((bitField0_ & 0x00000001) != 0);",
          "41969:         }",
          "41978:         public java.lang.String getRootUri() {",
          "41979:           java.lang.Object ref = rootUri_;",
          "41980:           if (!(ref instanceof java.lang.String)) {",
          "41981:             com.google.protobuf.ByteString bs =",
          "41982:                 (com.google.protobuf.ByteString) ref;",
          "41983:             java.lang.String s = bs.toStringUtf8();",
          "41984:             if (bs.isValidUtf8()) {",
          "41985:               rootUri_ = s;",
          "41986:             }",
          "41987:             return s;",
          "41988:           } else {",
          "41989:             return (java.lang.String) ref;",
          "41990:           }",
          "41991:         }",
          "42000:         public com.google.protobuf.ByteString",
          "42001:             getRootUriBytes() {",
          "42002:           java.lang.Object ref = rootUri_;",
          "42003:           if (ref instanceof String) {",
          "42004:             com.google.protobuf.ByteString b =",
          "42005:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "42006:                     (java.lang.String) ref);",
          "42007:             rootUri_ = b;",
          "42008:             return b;",
          "42009:           } else {",
          "42010:             return (com.google.protobuf.ByteString) ref;",
          "42011:           }",
          "42012:         }",
          "42022:         public Builder setRootUri(",
          "42023:             java.lang.String value) {",
          "42024:           if (value == null) {",
          "42025:     throw new NullPointerException();",
          "42026:   }",
          "42027:   bitField0_ |= 0x00000001;",
          "42028:           rootUri_ = value;",
          "42029:           onChanged();",
          "42030:           return this;",
          "42031:         }",
          "42040:         public Builder clearRootUri() {",
          "42041:           bitField0_ = (bitField0_ & ~0x00000001);",
          "42042:           rootUri_ = getDefaultInstance().getRootUri();",
          "42043:           onChanged();",
          "42044:           return this;",
          "42045:         }",
          "42055:         public Builder setRootUriBytes(",
          "42056:             com.google.protobuf.ByteString value) {",
          "42057:           if (value == null) {",
          "42058:     throw new NullPointerException();",
          "42060:   bitField0_ |= 0x00000001;",
          "42061:           rootUri_ = value;",
          "42062:           onChanged();",
          "42063:           return this;",
          "42064:         }",
          "42066:         private java.util.List<org.mlflow.api.proto.Service.FileInfo> files_ =",
          "42067:           java.util.Collections.emptyList();",
          "42068:         private void ensureFilesIsMutable() {",
          "42069:           if (!((bitField0_ & 0x00000002) != 0)) {",
          "42070:             files_ = new java.util.ArrayList<org.mlflow.api.proto.Service.FileInfo>(files_);",
          "42071:             bitField0_ |= 0x00000002;",
          "42072:            }",
          "42073:         }",
          "42075:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "42076:             org.mlflow.api.proto.Service.FileInfo, org.mlflow.api.proto.Service.FileInfo.Builder, org.mlflow.api.proto.Service.FileInfoOrBuilder> filesBuilder_;",
          "42085:         public java.util.List<org.mlflow.api.proto.Service.FileInfo> getFilesList() {",
          "42086:           if (filesBuilder_ == null) {",
          "42087:             return java.util.Collections.unmodifiableList(files_);",
          "42088:           } else {",
          "42089:             return filesBuilder_.getMessageList();",
          "42090:           }",
          "42091:         }",
          "42099:         public int getFilesCount() {",
          "42100:           if (filesBuilder_ == null) {",
          "42101:             return files_.size();",
          "42102:           } else {",
          "42103:             return filesBuilder_.getCount();",
          "42104:           }",
          "42105:         }",
          "42113:         public org.mlflow.api.proto.Service.FileInfo getFiles(int index) {",
          "42114:           if (filesBuilder_ == null) {",
          "42115:             return files_.get(index);",
          "42116:           } else {",
          "42117:             return filesBuilder_.getMessage(index);",
          "42118:           }",
          "42119:         }",
          "42127:         public Builder setFiles(",
          "42128:             int index, org.mlflow.api.proto.Service.FileInfo value) {",
          "42129:           if (filesBuilder_ == null) {",
          "42130:             if (value == null) {",
          "42131:               throw new NullPointerException();",
          "42133:             ensureFilesIsMutable();",
          "42134:             files_.set(index, value);",
          "42135:             onChanged();",
          "42136:           } else {",
          "42137:             filesBuilder_.setMessage(index, value);",
          "42138:           }",
          "42139:           return this;",
          "42140:         }",
          "42148:         public Builder setFiles(",
          "42149:             int index, org.mlflow.api.proto.Service.FileInfo.Builder builderForValue) {",
          "42150:           if (filesBuilder_ == null) {",
          "42151:             ensureFilesIsMutable();",
          "42152:             files_.set(index, builderForValue.build());",
          "42153:             onChanged();",
          "42154:           } else {",
          "42155:             filesBuilder_.setMessage(index, builderForValue.build());",
          "42156:           }",
          "42157:           return this;",
          "42158:         }",
          "42166:         public Builder addFiles(org.mlflow.api.proto.Service.FileInfo value) {",
          "42167:           if (filesBuilder_ == null) {",
          "42168:             if (value == null) {",
          "42169:               throw new NullPointerException();",
          "42171:             ensureFilesIsMutable();",
          "42172:             files_.add(value);",
          "42173:             onChanged();",
          "42174:           } else {",
          "42175:             filesBuilder_.addMessage(value);",
          "42176:           }",
          "42177:           return this;",
          "42178:         }",
          "42186:         public Builder addFiles(",
          "42187:             int index, org.mlflow.api.proto.Service.FileInfo value) {",
          "42188:           if (filesBuilder_ == null) {",
          "42189:             if (value == null) {",
          "42190:               throw new NullPointerException();",
          "42192:             ensureFilesIsMutable();",
          "42193:             files_.add(index, value);",
          "42194:             onChanged();",
          "42195:           } else {",
          "42196:             filesBuilder_.addMessage(index, value);",
          "42197:           }",
          "42198:           return this;",
          "42199:         }",
          "42207:         public Builder addFiles(",
          "42208:             org.mlflow.api.proto.Service.FileInfo.Builder builderForValue) {",
          "42209:           if (filesBuilder_ == null) {",
          "42210:             ensureFilesIsMutable();",
          "42211:             files_.add(builderForValue.build());",
          "42212:             onChanged();",
          "42213:           } else {",
          "42214:             filesBuilder_.addMessage(builderForValue.build());",
          "42215:           }",
          "42216:           return this;",
          "42217:         }",
          "42225:         public Builder addFiles(",
          "42226:             int index, org.mlflow.api.proto.Service.FileInfo.Builder builderForValue) {",
          "42227:           if (filesBuilder_ == null) {",
          "42228:             ensureFilesIsMutable();",
          "42229:             files_.add(index, builderForValue.build());",
          "42230:             onChanged();",
          "42231:           } else {",
          "42232:             filesBuilder_.addMessage(index, builderForValue.build());",
          "42233:           }",
          "42234:           return this;",
          "42235:         }",
          "42243:         public Builder addAllFiles(",
          "42244:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.FileInfo> values) {",
          "42245:           if (filesBuilder_ == null) {",
          "42246:             ensureFilesIsMutable();",
          "42247:             com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "42248:                 values, files_);",
          "42249:             onChanged();",
          "42250:           } else {",
          "42251:             filesBuilder_.addAllMessages(values);",
          "42252:           }",
          "42253:           return this;",
          "42254:         }",
          "42262:         public Builder clearFiles() {",
          "42263:           if (filesBuilder_ == null) {",
          "42264:             files_ = java.util.Collections.emptyList();",
          "42265:             bitField0_ = (bitField0_ & ~0x00000002);",
          "42266:             onChanged();",
          "42267:           } else {",
          "42268:             filesBuilder_.clear();",
          "42269:           }",
          "42270:           return this;",
          "42271:         }",
          "42279:         public Builder removeFiles(int index) {",
          "42280:           if (filesBuilder_ == null) {",
          "42281:             ensureFilesIsMutable();",
          "42282:             files_.remove(index);",
          "42283:             onChanged();",
          "42284:           } else {",
          "42285:             filesBuilder_.remove(index);",
          "42286:           }",
          "42287:           return this;",
          "42288:         }",
          "42296:         public org.mlflow.api.proto.Service.FileInfo.Builder getFilesBuilder(",
          "42297:             int index) {",
          "42298:           return getFilesFieldBuilder().getBuilder(index);",
          "42299:         }",
          "42307:         public org.mlflow.api.proto.Service.FileInfoOrBuilder getFilesOrBuilder(",
          "42308:             int index) {",
          "42309:           if (filesBuilder_ == null) {",
          "42310:             return files_.get(index);  } else {",
          "42311:             return filesBuilder_.getMessageOrBuilder(index);",
          "42312:           }",
          "42313:         }",
          "42321:         public java.util.List<? extends org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "42322:              getFilesOrBuilderList() {",
          "42323:           if (filesBuilder_ != null) {",
          "42324:             return filesBuilder_.getMessageOrBuilderList();",
          "42325:           } else {",
          "42326:             return java.util.Collections.unmodifiableList(files_);",
          "42327:           }",
          "42328:         }",
          "42336:         public org.mlflow.api.proto.Service.FileInfo.Builder addFilesBuilder() {",
          "42337:           return getFilesFieldBuilder().addBuilder(",
          "42338:               org.mlflow.api.proto.Service.FileInfo.getDefaultInstance());",
          "42339:         }",
          "42347:         public org.mlflow.api.proto.Service.FileInfo.Builder addFilesBuilder(",
          "42348:             int index) {",
          "42349:           return getFilesFieldBuilder().addBuilder(",
          "42350:               index, org.mlflow.api.proto.Service.FileInfo.getDefaultInstance());",
          "42351:         }",
          "42359:         public java.util.List<org.mlflow.api.proto.Service.FileInfo.Builder>",
          "42360:              getFilesBuilderList() {",
          "42361:           return getFilesFieldBuilder().getBuilderList();",
          "42362:         }",
          "42363:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "42364:             org.mlflow.api.proto.Service.FileInfo, org.mlflow.api.proto.Service.FileInfo.Builder, org.mlflow.api.proto.Service.FileInfoOrBuilder>",
          "42365:             getFilesFieldBuilder() {",
          "42366:           if (filesBuilder_ == null) {",
          "42367:             filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "42368:                 org.mlflow.api.proto.Service.FileInfo, org.mlflow.api.proto.Service.FileInfo.Builder, org.mlflow.api.proto.Service.FileInfoOrBuilder>(",
          "42369:                     files_,",
          "42370:                     ((bitField0_ & 0x00000002) != 0),",
          "42371:                     getParentForChildren(),",
          "42372:                     isClean());",
          "42373:             files_ = null;",
          "42374:           }",
          "42375:           return filesBuilder_;",
          "42376:         }",
          "42378:         private java.lang.Object nextPageToken_ = \"\";",
          "42387:         public boolean hasNextPageToken() {",
          "42388:           return ((bitField0_ & 0x00000004) != 0);",
          "42389:         }",
          "42398:         public java.lang.String getNextPageToken() {",
          "42399:           java.lang.Object ref = nextPageToken_;",
          "42400:           if (!(ref instanceof java.lang.String)) {",
          "42401:             com.google.protobuf.ByteString bs =",
          "42402:                 (com.google.protobuf.ByteString) ref;",
          "42403:             java.lang.String s = bs.toStringUtf8();",
          "42404:             if (bs.isValidUtf8()) {",
          "42405:               nextPageToken_ = s;",
          "42407:             return s;",
          "42408:           } else {",
          "42409:             return (java.lang.String) ref;",
          "42410:           }",
          "42411:         }",
          "42420:         public com.google.protobuf.ByteString",
          "42421:             getNextPageTokenBytes() {",
          "42422:           java.lang.Object ref = nextPageToken_;",
          "42423:           if (ref instanceof String) {",
          "42424:             com.google.protobuf.ByteString b =",
          "42425:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "42426:                     (java.lang.String) ref);",
          "42427:             nextPageToken_ = b;",
          "42428:             return b;",
          "42429:           } else {",
          "42430:             return (com.google.protobuf.ByteString) ref;",
          "42442:         public Builder setNextPageToken(",
          "42443:             java.lang.String value) {",
          "42444:           if (value == null) {",
          "42445:     throw new NullPointerException();",
          "42446:   }",
          "42447:   bitField0_ |= 0x00000004;",
          "42448:           nextPageToken_ = value;",
          "42449:           onChanged();",
          "42450:           return this;",
          "42451:         }",
          "42460:         public Builder clearNextPageToken() {",
          "42461:           bitField0_ = (bitField0_ & ~0x00000004);",
          "42462:           nextPageToken_ = getDefaultInstance().getNextPageToken();",
          "42463:           onChanged();",
          "42464:           return this;",
          "42465:         }",
          "42475:         public Builder setNextPageTokenBytes(",
          "42476:             com.google.protobuf.ByteString value) {",
          "42477:           if (value == null) {",
          "42478:     throw new NullPointerException();",
          "42479:   }",
          "42480:   bitField0_ |= 0x00000004;",
          "42481:           nextPageToken_ = value;",
          "42482:           onChanged();",
          "42483:           return this;",
          "42484:         }",
          "42485:         @java.lang.Override",
          "42486:         public final Builder setUnknownFields(",
          "42487:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "42488:           return super.setUnknownFields(unknownFields);",
          "42489:         }",
          "42491:         @java.lang.Override",
          "42492:         public final Builder mergeUnknownFields(",
          "42493:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "42494:           return super.mergeUnknownFields(unknownFields);",
          "42495:         }",
          "42502:       private static final org.mlflow.api.proto.Service.ListArtifacts.Response DEFAULT_INSTANCE;",
          "42503:       static {",
          "42504:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.ListArtifacts.Response();",
          "42507:       public static org.mlflow.api.proto.Service.ListArtifacts.Response getDefaultInstance() {",
          "42508:         return DEFAULT_INSTANCE;",
          "42511:       @java.lang.Deprecated public static final com.google.protobuf.Parser<Response>",
          "42512:           PARSER = new com.google.protobuf.AbstractParser<Response>() {",
          "42513:         @java.lang.Override",
          "42514:         public Response parsePartialFrom(",
          "42515:             com.google.protobuf.CodedInputStream input,",
          "42516:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "42517:             throws com.google.protobuf.InvalidProtocolBufferException {",
          "42518:           return new Response(input, extensionRegistry);",
          "42520:       };",
          "42522:       public static com.google.protobuf.Parser<Response> parser() {",
          "42523:         return PARSER;",
          "42527:       public com.google.protobuf.Parser<Response> getParserForType() {",
          "42528:         return PARSER;",
          "42532:       public org.mlflow.api.proto.Service.ListArtifacts.Response getDefaultInstanceForType() {",
          "42533:         return DEFAULT_INSTANCE;",
          "42536:     }",
          "42538:     private int bitField0_;",
          "42539:     public static final int RUN_ID_FIELD_NUMBER = 3;",
          "42540:     private volatile java.lang.Object runId_;",
          "42549:     @java.lang.Override",
          "42550:     public boolean hasRunId() {",
          "42551:       return ((bitField0_ & 0x00000001) != 0);",
          "42552:     }",
          "42561:     @java.lang.Override",
          "42562:     public java.lang.String getRunId() {",
          "42563:       java.lang.Object ref = runId_;",
          "42564:       if (ref instanceof java.lang.String) {",
          "42565:         return (java.lang.String) ref;",
          "42566:       } else {",
          "42567:         com.google.protobuf.ByteString bs =",
          "42568:             (com.google.protobuf.ByteString) ref;",
          "42569:         java.lang.String s = bs.toStringUtf8();",
          "42570:         if (bs.isValidUtf8()) {",
          "42571:           runId_ = s;",
          "42572:         }",
          "42573:         return s;",
          "42575:     }",
          "42584:     @java.lang.Override",
          "42585:     public com.google.protobuf.ByteString",
          "42586:         getRunIdBytes() {",
          "42587:       java.lang.Object ref = runId_;",
          "42588:       if (ref instanceof java.lang.String) {",
          "42589:         com.google.protobuf.ByteString b =",
          "42590:             com.google.protobuf.ByteString.copyFromUtf8(",
          "42591:                 (java.lang.String) ref);",
          "42592:         runId_ = b;",
          "42593:         return b;",
          "42594:       } else {",
          "42595:         return (com.google.protobuf.ByteString) ref;",
          "42597:     }",
          "42599:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "42600:     private volatile java.lang.Object runUuid_;",
          "42610:     @java.lang.Override",
          "42611:     public boolean hasRunUuid() {",
          "42612:       return ((bitField0_ & 0x00000002) != 0);",
          "42613:     }",
          "42623:     @java.lang.Override",
          "42624:     public java.lang.String getRunUuid() {",
          "42625:       java.lang.Object ref = runUuid_;",
          "42626:       if (ref instanceof java.lang.String) {",
          "42627:         return (java.lang.String) ref;",
          "42628:       } else {",
          "42629:         com.google.protobuf.ByteString bs =",
          "42630:             (com.google.protobuf.ByteString) ref;",
          "42631:         java.lang.String s = bs.toStringUtf8();",
          "42632:         if (bs.isValidUtf8()) {",
          "42633:           runUuid_ = s;",
          "42634:         }",
          "42635:         return s;",
          "42637:     }",
          "42647:     @java.lang.Override",
          "42648:     public com.google.protobuf.ByteString",
          "42649:         getRunUuidBytes() {",
          "42650:       java.lang.Object ref = runUuid_;",
          "42651:       if (ref instanceof java.lang.String) {",
          "42652:         com.google.protobuf.ByteString b =",
          "42653:             com.google.protobuf.ByteString.copyFromUtf8(",
          "42654:                 (java.lang.String) ref);",
          "42655:         runUuid_ = b;",
          "42656:         return b;",
          "42657:       } else {",
          "42658:         return (com.google.protobuf.ByteString) ref;",
          "42660:     }",
          "42662:     public static final int PATH_FIELD_NUMBER = 2;",
          "42663:     private volatile java.lang.Object path_;",
          "42672:     @java.lang.Override",
          "42673:     public boolean hasPath() {",
          "42674:       return ((bitField0_ & 0x00000004) != 0);",
          "42675:     }",
          "42684:     @java.lang.Override",
          "42685:     public java.lang.String getPath() {",
          "42686:       java.lang.Object ref = path_;",
          "42687:       if (ref instanceof java.lang.String) {",
          "42688:         return (java.lang.String) ref;",
          "42689:       } else {",
          "42690:         com.google.protobuf.ByteString bs =",
          "42691:             (com.google.protobuf.ByteString) ref;",
          "42692:         java.lang.String s = bs.toStringUtf8();",
          "42693:         if (bs.isValidUtf8()) {",
          "42694:           path_ = s;",
          "42696:         return s;",
          "42698:     }",
          "42707:     @java.lang.Override",
          "42708:     public com.google.protobuf.ByteString",
          "42709:         getPathBytes() {",
          "42710:       java.lang.Object ref = path_;",
          "42711:       if (ref instanceof java.lang.String) {",
          "42712:         com.google.protobuf.ByteString b =",
          "42713:             com.google.protobuf.ByteString.copyFromUtf8(",
          "42714:                 (java.lang.String) ref);",
          "42715:         path_ = b;",
          "42716:         return b;",
          "42717:       } else {",
          "42718:         return (com.google.protobuf.ByteString) ref;",
          "42720:     }",
          "42722:     public static final int PAGE_TOKEN_FIELD_NUMBER = 4;",
          "42723:     private volatile java.lang.Object pageToken_;",
          "42732:     @java.lang.Override",
          "42733:     public boolean hasPageToken() {",
          "42734:       return ((bitField0_ & 0x00000008) != 0);",
          "42735:     }",
          "42744:     @java.lang.Override",
          "42745:     public java.lang.String getPageToken() {",
          "42746:       java.lang.Object ref = pageToken_;",
          "42747:       if (ref instanceof java.lang.String) {",
          "42748:         return (java.lang.String) ref;",
          "42749:       } else {",
          "42750:         com.google.protobuf.ByteString bs =",
          "42751:             (com.google.protobuf.ByteString) ref;",
          "42752:         java.lang.String s = bs.toStringUtf8();",
          "42753:         if (bs.isValidUtf8()) {",
          "42754:           pageToken_ = s;",
          "42756:         return s;",
          "42758:     }",
          "42767:     @java.lang.Override",
          "42768:     public com.google.protobuf.ByteString",
          "42769:         getPageTokenBytes() {",
          "42770:       java.lang.Object ref = pageToken_;",
          "42771:       if (ref instanceof java.lang.String) {",
          "42772:         com.google.protobuf.ByteString b =",
          "42773:             com.google.protobuf.ByteString.copyFromUtf8(",
          "42774:                 (java.lang.String) ref);",
          "42775:         pageToken_ = b;",
          "42776:         return b;",
          "42777:       } else {",
          "42778:         return (com.google.protobuf.ByteString) ref;",
          "42780:     }",
          "42782:     private byte memoizedIsInitialized = -1;",
          "42783:     @java.lang.Override",
          "42784:     public final boolean isInitialized() {",
          "42785:       byte isInitialized = memoizedIsInitialized;",
          "42786:       if (isInitialized == 1) return true;",
          "42787:       if (isInitialized == 0) return false;",
          "42789:       memoizedIsInitialized = 1;",
          "42790:       return true;",
          "42791:     }",
          "42793:     @java.lang.Override",
          "42794:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "42795:                         throws java.io.IOException {",
          "42796:       if (((bitField0_ & 0x00000002) != 0)) {",
          "42797:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "42799:       if (((bitField0_ & 0x00000004) != 0)) {",
          "42800:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);",
          "42802:       if (((bitField0_ & 0x00000001) != 0)) {",
          "42803:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runId_);",
          "42805:       if (((bitField0_ & 0x00000008) != 0)) {",
          "42806:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pageToken_);",
          "42808:       unknownFields.writeTo(output);",
          "42809:     }",
          "42811:     @java.lang.Override",
          "42812:     public int getSerializedSize() {",
          "42813:       int size = memoizedSize;",
          "42814:       if (size != -1) return size;",
          "42816:       size = 0;",
          "42817:       if (((bitField0_ & 0x00000002) != 0)) {",
          "42818:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "42820:       if (((bitField0_ & 0x00000004) != 0)) {",
          "42821:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);",
          "42823:       if (((bitField0_ & 0x00000001) != 0)) {",
          "42824:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runId_);",
          "42826:       if (((bitField0_ & 0x00000008) != 0)) {",
          "42827:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pageToken_);",
          "42829:       size += unknownFields.getSerializedSize();",
          "42830:       memoizedSize = size;",
          "42831:       return size;",
          "42832:     }",
          "42834:     @java.lang.Override",
          "42835:     public boolean equals(final java.lang.Object obj) {",
          "42836:       if (obj == this) {",
          "42837:        return true;",
          "42839:       if (!(obj instanceof org.mlflow.api.proto.Service.ListArtifacts)) {",
          "42840:         return super.equals(obj);",
          "42842:       org.mlflow.api.proto.Service.ListArtifacts other = (org.mlflow.api.proto.Service.ListArtifacts) obj;",
          "42844:       if (hasRunId() != other.hasRunId()) return false;",
          "42845:       if (hasRunId()) {",
          "42846:         if (!getRunId()",
          "42847:             .equals(other.getRunId())) return false;",
          "42849:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "42850:       if (hasRunUuid()) {",
          "42851:         if (!getRunUuid()",
          "42852:             .equals(other.getRunUuid())) return false;",
          "42854:       if (hasPath() != other.hasPath()) return false;",
          "42855:       if (hasPath()) {",
          "42856:         if (!getPath()",
          "42857:             .equals(other.getPath())) return false;",
          "42859:       if (hasPageToken() != other.hasPageToken()) return false;",
          "42860:       if (hasPageToken()) {",
          "42861:         if (!getPageToken()",
          "42862:             .equals(other.getPageToken())) return false;",
          "42864:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "42865:       return true;",
          "42866:     }",
          "42868:     @java.lang.Override",
          "42869:     public int hashCode() {",
          "42870:       if (memoizedHashCode != 0) {",
          "42871:         return memoizedHashCode;",
          "42872:       }",
          "42873:       int hash = 41;",
          "42874:       hash = (19 * hash) + getDescriptor().hashCode();",
          "42875:       if (hasRunId()) {",
          "42876:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "42877:         hash = (53 * hash) + getRunId().hashCode();",
          "42879:       if (hasRunUuid()) {",
          "42880:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "42881:         hash = (53 * hash) + getRunUuid().hashCode();",
          "42883:       if (hasPath()) {",
          "42884:         hash = (37 * hash) + PATH_FIELD_NUMBER;",
          "42885:         hash = (53 * hash) + getPath().hashCode();",
          "42887:       if (hasPageToken()) {",
          "42888:         hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;",
          "42889:         hash = (53 * hash) + getPageToken().hashCode();",
          "42891:       hash = (29 * hash) + unknownFields.hashCode();",
          "42892:       memoizedHashCode = hash;",
          "42893:       return hash;",
          "42894:     }",
          "42896:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42897:         java.nio.ByteBuffer data)",
          "42898:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "42899:       return PARSER.parseFrom(data);",
          "42900:     }",
          "42901:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42902:         java.nio.ByteBuffer data,",
          "42903:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "42904:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "42905:       return PARSER.parseFrom(data, extensionRegistry);",
          "42906:     }",
          "42907:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42908:         com.google.protobuf.ByteString data)",
          "42909:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "42910:       return PARSER.parseFrom(data);",
          "42911:     }",
          "42912:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42913:         com.google.protobuf.ByteString data,",
          "42914:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "42915:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "42916:       return PARSER.parseFrom(data, extensionRegistry);",
          "42917:     }",
          "42918:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(byte[] data)",
          "42919:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "42920:       return PARSER.parseFrom(data);",
          "42921:     }",
          "42922:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42923:         byte[] data,",
          "42924:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "42925:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "42926:       return PARSER.parseFrom(data, extensionRegistry);",
          "42927:     }",
          "42928:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(java.io.InputStream input)",
          "42929:         throws java.io.IOException {",
          "42930:       return com.google.protobuf.GeneratedMessageV3",
          "42931:           .parseWithIOException(PARSER, input);",
          "42932:     }",
          "42933:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42934:         java.io.InputStream input,",
          "42935:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "42936:         throws java.io.IOException {",
          "42937:       return com.google.protobuf.GeneratedMessageV3",
          "42938:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "42939:     }",
          "42940:     public static org.mlflow.api.proto.Service.ListArtifacts parseDelimitedFrom(java.io.InputStream input)",
          "42941:         throws java.io.IOException {",
          "42942:       return com.google.protobuf.GeneratedMessageV3",
          "42943:           .parseDelimitedWithIOException(PARSER, input);",
          "42944:     }",
          "42945:     public static org.mlflow.api.proto.Service.ListArtifacts parseDelimitedFrom(",
          "42946:         java.io.InputStream input,",
          "42947:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "42948:         throws java.io.IOException {",
          "42949:       return com.google.protobuf.GeneratedMessageV3",
          "42950:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "42951:     }",
          "42952:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42953:         com.google.protobuf.CodedInputStream input)",
          "42954:         throws java.io.IOException {",
          "42955:       return com.google.protobuf.GeneratedMessageV3",
          "42956:           .parseWithIOException(PARSER, input);",
          "42957:     }",
          "42958:     public static org.mlflow.api.proto.Service.ListArtifacts parseFrom(",
          "42959:         com.google.protobuf.CodedInputStream input,",
          "42960:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "42961:         throws java.io.IOException {",
          "42962:       return com.google.protobuf.GeneratedMessageV3",
          "42963:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "42964:     }",
          "42966:     @java.lang.Override",
          "42967:     public Builder newBuilderForType() { return newBuilder(); }",
          "42968:     public static Builder newBuilder() {",
          "42969:       return DEFAULT_INSTANCE.toBuilder();",
          "42970:     }",
          "42971:     public static Builder newBuilder(org.mlflow.api.proto.Service.ListArtifacts prototype) {",
          "42972:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "42973:     }",
          "42974:     @java.lang.Override",
          "42975:     public Builder toBuilder() {",
          "42976:       return this == DEFAULT_INSTANCE",
          "42977:           ? new Builder() : new Builder().mergeFrom(this);",
          "42978:     }",
          "42980:     @java.lang.Override",
          "42981:     protected Builder newBuilderForType(",
          "42982:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "42983:       Builder builder = new Builder(parent);",
          "42984:       return builder;",
          "42985:     }",
          "42989:     public static final class Builder extends",
          "42990:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "42992:         org.mlflow.api.proto.Service.ListArtifactsOrBuilder {",
          "42993:       public static final com.google.protobuf.Descriptors.Descriptor",
          "42994:           getDescriptor() {",
          "42995:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_descriptor;",
          "42996:       }",
          "42998:       @java.lang.Override",
          "42999:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "43000:           internalGetFieldAccessorTable() {",
          "43001:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_fieldAccessorTable",
          "43002:             .ensureFieldAccessorsInitialized(",
          "43003:                 org.mlflow.api.proto.Service.ListArtifacts.class, org.mlflow.api.proto.Service.ListArtifacts.Builder.class);",
          "43004:       }",
          "43007:       private Builder() {",
          "43008:         maybeForceBuilderInitialization();",
          "43009:       }",
          "43011:       private Builder(",
          "43012:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "43013:         super(parent);",
          "43014:         maybeForceBuilderInitialization();",
          "43015:       }",
          "43016:       private void maybeForceBuilderInitialization() {",
          "43017:         if (com.google.protobuf.GeneratedMessageV3",
          "43018:                 .alwaysUseFieldBuilders) {",
          "43020:       }",
          "43021:       @java.lang.Override",
          "43022:       public Builder clear() {",
          "43023:         super.clear();",
          "43024:         runId_ = \"\";",
          "43025:         bitField0_ = (bitField0_ & ~0x00000001);",
          "43026:         runUuid_ = \"\";",
          "43027:         bitField0_ = (bitField0_ & ~0x00000002);",
          "43028:         path_ = \"\";",
          "43029:         bitField0_ = (bitField0_ & ~0x00000004);",
          "43030:         pageToken_ = \"\";",
          "43031:         bitField0_ = (bitField0_ & ~0x00000008);",
          "43032:         return this;",
          "43033:       }",
          "43035:       @java.lang.Override",
          "43036:       public com.google.protobuf.Descriptors.Descriptor",
          "43037:           getDescriptorForType() {",
          "43038:         return org.mlflow.api.proto.Service.internal_static_mlflow_ListArtifacts_descriptor;",
          "43039:       }",
          "43041:       @java.lang.Override",
          "43042:       public org.mlflow.api.proto.Service.ListArtifacts getDefaultInstanceForType() {",
          "43043:         return org.mlflow.api.proto.Service.ListArtifacts.getDefaultInstance();",
          "43044:       }",
          "43046:       @java.lang.Override",
          "43047:       public org.mlflow.api.proto.Service.ListArtifacts build() {",
          "43048:         org.mlflow.api.proto.Service.ListArtifacts result = buildPartial();",
          "43049:         if (!result.isInitialized()) {",
          "43050:           throw newUninitializedMessageException(result);",
          "43052:         return result;",
          "43053:       }",
          "43055:       @java.lang.Override",
          "43056:       public org.mlflow.api.proto.Service.ListArtifacts buildPartial() {",
          "43057:         org.mlflow.api.proto.Service.ListArtifacts result = new org.mlflow.api.proto.Service.ListArtifacts(this);",
          "43058:         int from_bitField0_ = bitField0_;",
          "43059:         int to_bitField0_ = 0;",
          "43060:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "43061:           to_bitField0_ |= 0x00000001;",
          "43063:         result.runId_ = runId_;",
          "43064:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "43065:           to_bitField0_ |= 0x00000002;",
          "43067:         result.runUuid_ = runUuid_;",
          "43068:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "43069:           to_bitField0_ |= 0x00000004;",
          "43071:         result.path_ = path_;",
          "43072:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "43073:           to_bitField0_ |= 0x00000008;",
          "43075:         result.pageToken_ = pageToken_;",
          "43076:         result.bitField0_ = to_bitField0_;",
          "43077:         onBuilt();",
          "43078:         return result;",
          "43079:       }",
          "43081:       @java.lang.Override",
          "43082:       public Builder clone() {",
          "43083:         return super.clone();",
          "43084:       }",
          "43085:       @java.lang.Override",
          "43086:       public Builder setField(",
          "43087:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "43088:           java.lang.Object value) {",
          "43089:         return super.setField(field, value);",
          "43090:       }",
          "43091:       @java.lang.Override",
          "43092:       public Builder clearField(",
          "43093:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "43094:         return super.clearField(field);",
          "43095:       }",
          "43096:       @java.lang.Override",
          "43097:       public Builder clearOneof(",
          "43098:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "43099:         return super.clearOneof(oneof);",
          "43100:       }",
          "43101:       @java.lang.Override",
          "43102:       public Builder setRepeatedField(",
          "43103:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "43104:           int index, java.lang.Object value) {",
          "43105:         return super.setRepeatedField(field, index, value);",
          "43106:       }",
          "43107:       @java.lang.Override",
          "43108:       public Builder addRepeatedField(",
          "43109:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "43110:           java.lang.Object value) {",
          "43111:         return super.addRepeatedField(field, value);",
          "43112:       }",
          "43113:       @java.lang.Override",
          "43114:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "43115:         if (other instanceof org.mlflow.api.proto.Service.ListArtifacts) {",
          "43116:           return mergeFrom((org.mlflow.api.proto.Service.ListArtifacts)other);",
          "43117:         } else {",
          "43118:           super.mergeFrom(other);",
          "43121:       }",
          "43123:       public Builder mergeFrom(org.mlflow.api.proto.Service.ListArtifacts other) {",
          "43124:         if (other == org.mlflow.api.proto.Service.ListArtifacts.getDefaultInstance()) return this;",
          "43125:         if (other.hasRunId()) {",
          "43126:           bitField0_ |= 0x00000001;",
          "43127:           runId_ = other.runId_;",
          "43128:           onChanged();",
          "43130:         if (other.hasRunUuid()) {",
          "43131:           bitField0_ |= 0x00000002;",
          "43132:           runUuid_ = other.runUuid_;",
          "43133:           onChanged();",
          "43135:         if (other.hasPath()) {",
          "43136:           bitField0_ |= 0x00000004;",
          "43137:           path_ = other.path_;",
          "43138:           onChanged();",
          "43140:         if (other.hasPageToken()) {",
          "43141:           bitField0_ |= 0x00000008;",
          "43142:           pageToken_ = other.pageToken_;",
          "43143:           onChanged();",
          "43145:         this.mergeUnknownFields(other.unknownFields);",
          "43146:         onChanged();",
          "43147:         return this;",
          "43148:       }",
          "43150:       @java.lang.Override",
          "43151:       public final boolean isInitialized() {",
          "43152:         return true;",
          "43153:       }",
          "43155:       @java.lang.Override",
          "43156:       public Builder mergeFrom(",
          "43157:           com.google.protobuf.CodedInputStream input,",
          "43158:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "43159:           throws java.io.IOException {",
          "43160:         org.mlflow.api.proto.Service.ListArtifacts parsedMessage = null;",
          "43161:         try {",
          "43162:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "43163:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "43164:           parsedMessage = (org.mlflow.api.proto.Service.ListArtifacts) e.getUnfinishedMessage();",
          "43165:           throw e.unwrapIOException();",
          "43166:         } finally {",
          "43167:           if (parsedMessage != null) {",
          "43168:             mergeFrom(parsedMessage);",
          "43171:         return this;",
          "43172:       }",
          "43173:       private int bitField0_;",
          "43175:       private java.lang.Object runId_ = \"\";",
          "43184:       public boolean hasRunId() {",
          "43185:         return ((bitField0_ & 0x00000001) != 0);",
          "43186:       }",
          "43195:       public java.lang.String getRunId() {",
          "43196:         java.lang.Object ref = runId_;",
          "43197:         if (!(ref instanceof java.lang.String)) {",
          "43198:           com.google.protobuf.ByteString bs =",
          "43199:               (com.google.protobuf.ByteString) ref;",
          "43200:           java.lang.String s = bs.toStringUtf8();",
          "43201:           if (bs.isValidUtf8()) {",
          "43202:             runId_ = s;",
          "43204:           return s;",
          "43205:         } else {",
          "43206:           return (java.lang.String) ref;",
          "43208:       }",
          "43217:       public com.google.protobuf.ByteString",
          "43218:           getRunIdBytes() {",
          "43219:         java.lang.Object ref = runId_;",
          "43220:         if (ref instanceof String) {",
          "43221:           com.google.protobuf.ByteString b =",
          "43222:               com.google.protobuf.ByteString.copyFromUtf8(",
          "43223:                   (java.lang.String) ref);",
          "43224:           runId_ = b;",
          "43225:           return b;",
          "43226:         } else {",
          "43227:           return (com.google.protobuf.ByteString) ref;",
          "43229:       }",
          "43239:       public Builder setRunId(",
          "43240:           java.lang.String value) {",
          "43241:         if (value == null) {",
          "43242:     throw new NullPointerException();",
          "43243:   }",
          "43244:   bitField0_ |= 0x00000001;",
          "43245:         runId_ = value;",
          "43246:         onChanged();",
          "43247:         return this;",
          "43248:       }",
          "43257:       public Builder clearRunId() {",
          "43258:         bitField0_ = (bitField0_ & ~0x00000001);",
          "43259:         runId_ = getDefaultInstance().getRunId();",
          "43260:         onChanged();",
          "43261:         return this;",
          "43262:       }",
          "43272:       public Builder setRunIdBytes(",
          "43273:           com.google.protobuf.ByteString value) {",
          "43274:         if (value == null) {",
          "43275:     throw new NullPointerException();",
          "43276:   }",
          "43277:   bitField0_ |= 0x00000001;",
          "43278:         runId_ = value;",
          "43279:         onChanged();",
          "43280:         return this;",
          "43281:       }",
          "43283:       private java.lang.Object runUuid_ = \"\";",
          "43293:       public boolean hasRunUuid() {",
          "43294:         return ((bitField0_ & 0x00000002) != 0);",
          "43295:       }",
          "43305:       public java.lang.String getRunUuid() {",
          "43306:         java.lang.Object ref = runUuid_;",
          "43307:         if (!(ref instanceof java.lang.String)) {",
          "43308:           com.google.protobuf.ByteString bs =",
          "43309:               (com.google.protobuf.ByteString) ref;",
          "43310:           java.lang.String s = bs.toStringUtf8();",
          "43311:           if (bs.isValidUtf8()) {",
          "43312:             runUuid_ = s;",
          "43314:           return s;",
          "43315:         } else {",
          "43316:           return (java.lang.String) ref;",
          "43318:       }",
          "43328:       public com.google.protobuf.ByteString",
          "43329:           getRunUuidBytes() {",
          "43330:         java.lang.Object ref = runUuid_;",
          "43331:         if (ref instanceof String) {",
          "43332:           com.google.protobuf.ByteString b =",
          "43333:               com.google.protobuf.ByteString.copyFromUtf8(",
          "43334:                   (java.lang.String) ref);",
          "43335:           runUuid_ = b;",
          "43336:           return b;",
          "43337:         } else {",
          "43338:           return (com.google.protobuf.ByteString) ref;",
          "43340:       }",
          "43351:       public Builder setRunUuid(",
          "43352:           java.lang.String value) {",
          "43353:         if (value == null) {",
          "43354:     throw new NullPointerException();",
          "43355:   }",
          "43356:   bitField0_ |= 0x00000002;",
          "43357:         runUuid_ = value;",
          "43358:         onChanged();",
          "43359:         return this;",
          "43360:       }",
          "43370:       public Builder clearRunUuid() {",
          "43371:         bitField0_ = (bitField0_ & ~0x00000002);",
          "43372:         runUuid_ = getDefaultInstance().getRunUuid();",
          "43373:         onChanged();",
          "43374:         return this;",
          "43375:       }",
          "43386:       public Builder setRunUuidBytes(",
          "43387:           com.google.protobuf.ByteString value) {",
          "43388:         if (value == null) {",
          "43389:     throw new NullPointerException();",
          "43390:   }",
          "43391:   bitField0_ |= 0x00000002;",
          "43392:         runUuid_ = value;",
          "43393:         onChanged();",
          "43394:         return this;",
          "43395:       }",
          "43397:       private java.lang.Object path_ = \"\";",
          "43406:       public boolean hasPath() {",
          "43407:         return ((bitField0_ & 0x00000004) != 0);",
          "43408:       }",
          "43417:       public java.lang.String getPath() {",
          "43418:         java.lang.Object ref = path_;",
          "43419:         if (!(ref instanceof java.lang.String)) {",
          "43420:           com.google.protobuf.ByteString bs =",
          "43421:               (com.google.protobuf.ByteString) ref;",
          "43422:           java.lang.String s = bs.toStringUtf8();",
          "43423:           if (bs.isValidUtf8()) {",
          "43424:             path_ = s;",
          "43425:           }",
          "43426:           return s;",
          "43427:         } else {",
          "43428:           return (java.lang.String) ref;",
          "43430:       }",
          "43439:       public com.google.protobuf.ByteString",
          "43440:           getPathBytes() {",
          "43441:         java.lang.Object ref = path_;",
          "43442:         if (ref instanceof String) {",
          "43443:           com.google.protobuf.ByteString b =",
          "43444:               com.google.protobuf.ByteString.copyFromUtf8(",
          "43445:                   (java.lang.String) ref);",
          "43446:           path_ = b;",
          "43447:           return b;",
          "43448:         } else {",
          "43449:           return (com.google.protobuf.ByteString) ref;",
          "43451:       }",
          "43461:       public Builder setPath(",
          "43462:           java.lang.String value) {",
          "43463:         if (value == null) {",
          "43464:     throw new NullPointerException();",
          "43465:   }",
          "43466:   bitField0_ |= 0x00000004;",
          "43467:         path_ = value;",
          "43468:         onChanged();",
          "43469:         return this;",
          "43470:       }",
          "43479:       public Builder clearPath() {",
          "43480:         bitField0_ = (bitField0_ & ~0x00000004);",
          "43481:         path_ = getDefaultInstance().getPath();",
          "43482:         onChanged();",
          "43483:         return this;",
          "43484:       }",
          "43494:       public Builder setPathBytes(",
          "43495:           com.google.protobuf.ByteString value) {",
          "43496:         if (value == null) {",
          "43497:     throw new NullPointerException();",
          "43498:   }",
          "43499:   bitField0_ |= 0x00000004;",
          "43500:         path_ = value;",
          "43501:         onChanged();",
          "43502:         return this;",
          "43503:       }",
          "43505:       private java.lang.Object pageToken_ = \"\";",
          "43514:       public boolean hasPageToken() {",
          "43515:         return ((bitField0_ & 0x00000008) != 0);",
          "43516:       }",
          "43525:       public java.lang.String getPageToken() {",
          "43526:         java.lang.Object ref = pageToken_;",
          "43527:         if (!(ref instanceof java.lang.String)) {",
          "43528:           com.google.protobuf.ByteString bs =",
          "43529:               (com.google.protobuf.ByteString) ref;",
          "43530:           java.lang.String s = bs.toStringUtf8();",
          "43531:           if (bs.isValidUtf8()) {",
          "43532:             pageToken_ = s;",
          "43534:           return s;",
          "43535:         } else {",
          "43536:           return (java.lang.String) ref;",
          "43538:       }",
          "43547:       public com.google.protobuf.ByteString",
          "43548:           getPageTokenBytes() {",
          "43549:         java.lang.Object ref = pageToken_;",
          "43550:         if (ref instanceof String) {",
          "43551:           com.google.protobuf.ByteString b =",
          "43552:               com.google.protobuf.ByteString.copyFromUtf8(",
          "43553:                   (java.lang.String) ref);",
          "43554:           pageToken_ = b;",
          "43555:           return b;",
          "43556:         } else {",
          "43557:           return (com.google.protobuf.ByteString) ref;",
          "43559:       }",
          "43569:       public Builder setPageToken(",
          "43570:           java.lang.String value) {",
          "43571:         if (value == null) {",
          "43574:   bitField0_ |= 0x00000008;",
          "43575:         pageToken_ = value;",
          "43576:         onChanged();",
          "43577:         return this;",
          "43578:       }",
          "43587:       public Builder clearPageToken() {",
          "43588:         bitField0_ = (bitField0_ & ~0x00000008);",
          "43589:         pageToken_ = getDefaultInstance().getPageToken();",
          "43590:         onChanged();",
          "43591:         return this;",
          "43592:       }",
          "43602:       public Builder setPageTokenBytes(",
          "43603:           com.google.protobuf.ByteString value) {",
          "43604:         if (value == null) {",
          "43607:   bitField0_ |= 0x00000008;",
          "43608:         pageToken_ = value;",
          "43609:         onChanged();",
          "43610:         return this;",
          "43611:       }",
          "43612:       @java.lang.Override",
          "43613:       public final Builder setUnknownFields(",
          "43614:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "43615:         return super.setUnknownFields(unknownFields);",
          "43616:       }",
          "43618:       @java.lang.Override",
          "43619:       public final Builder mergeUnknownFields(",
          "43620:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "43621:         return super.mergeUnknownFields(unknownFields);",
          "43622:       }",
          "43626:     }",
          "43629:     private static final org.mlflow.api.proto.Service.ListArtifacts DEFAULT_INSTANCE;",
          "43630:     static {",
          "43631:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.ListArtifacts();",
          "43632:     }",
          "43634:     public static org.mlflow.api.proto.Service.ListArtifacts getDefaultInstance() {",
          "43635:       return DEFAULT_INSTANCE;",
          "43636:     }",
          "43638:     @java.lang.Deprecated public static final com.google.protobuf.Parser<ListArtifacts>",
          "43639:         PARSER = new com.google.protobuf.AbstractParser<ListArtifacts>() {",
          "43640:       @java.lang.Override",
          "43641:       public ListArtifacts parsePartialFrom(",
          "43642:           com.google.protobuf.CodedInputStream input,",
          "43643:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "43644:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "43645:         return new ListArtifacts(input, extensionRegistry);",
          "43647:     };",
          "43649:     public static com.google.protobuf.Parser<ListArtifacts> parser() {",
          "43650:       return PARSER;",
          "43651:     }",
          "43653:     @java.lang.Override",
          "43654:     public com.google.protobuf.Parser<ListArtifacts> getParserForType() {",
          "43655:       return PARSER;",
          "43656:     }",
          "43658:     @java.lang.Override",
          "43659:     public org.mlflow.api.proto.Service.ListArtifacts getDefaultInstanceForType() {",
          "43660:       return DEFAULT_INSTANCE;",
          "43661:     }",
          "43663:   }",
          "43665:   public interface FileInfoOrBuilder extends",
          "43667:       com.google.protobuf.MessageOrBuilder {",
          "43677:     boolean hasPath();",
          "43686:     java.lang.String getPath();",
          "43695:     com.google.protobuf.ByteString",
          "43696:         getPathBytes();",
          "43706:     boolean hasIsDir();",
          "43715:     boolean getIsDir();",
          "43725:     boolean hasFileSize();",
          "43734:     long getFileSize();",
          "43735:   }",
          "43743:   public static final class FileInfo extends",
          "43744:       com.google.protobuf.GeneratedMessageV3 implements",
          "43746:       FileInfoOrBuilder {",
          "43747:   private static final long serialVersionUID = 0L;",
          "43749:     private FileInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "43750:       super(builder);",
          "43751:     }",
          "43752:     private FileInfo() {",
          "43753:       path_ = \"\";",
          "43754:     }",
          "43756:     @java.lang.Override",
          "43757:     @SuppressWarnings({\"unused\"})",
          "43758:     protected java.lang.Object newInstance(",
          "43759:         UnusedPrivateParameter unused) {",
          "43760:       return new FileInfo();",
          "43761:     }",
          "43764:     public final com.google.protobuf.UnknownFieldSet",
          "43765:     getUnknownFields() {",
          "43766:       return this.unknownFields;",
          "43767:     }",
          "43768:     private FileInfo(",
          "43769:         com.google.protobuf.CodedInputStream input,",
          "43770:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "43771:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "43772:       this();",
          "43773:       if (extensionRegistry == null) {",
          "43774:         throw new java.lang.NullPointerException();",
          "43775:       }",
          "43776:       int mutable_bitField0_ = 0;",
          "43777:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "43778:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "43779:       try {",
          "43780:         boolean done = false;",
          "43781:         while (!done) {",
          "43782:           int tag = input.readTag();",
          "43783:           switch (tag) {",
          "43784:             case 0:",
          "43785:               done = true;",
          "43786:               break;",
          "43787:             case 10: {",
          "43788:               com.google.protobuf.ByteString bs = input.readBytes();",
          "43789:               bitField0_ |= 0x00000001;",
          "43790:               path_ = bs;",
          "43791:               break;",
          "43792:             }",
          "43793:             case 16: {",
          "43794:               bitField0_ |= 0x00000002;",
          "43795:               isDir_ = input.readBool();",
          "43796:               break;",
          "43797:             }",
          "43798:             case 24: {",
          "43799:               bitField0_ |= 0x00000004;",
          "43800:               fileSize_ = input.readInt64();",
          "43801:               break;",
          "43802:             }",
          "43803:             default: {",
          "43804:               if (!parseUnknownField(",
          "43805:                   input, unknownFields, extensionRegistry, tag)) {",
          "43806:                 done = true;",
          "43807:               }",
          "43808:               break;",
          "43809:             }",
          "43810:           }",
          "43811:         }",
          "43812:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "43813:         throw e.setUnfinishedMessage(this);",
          "43814:       } catch (java.io.IOException e) {",
          "43815:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "43816:             e).setUnfinishedMessage(this);",
          "43817:       } finally {",
          "43818:         this.unknownFields = unknownFields.build();",
          "43819:         makeExtensionsImmutable();",
          "43822:     public static final com.google.protobuf.Descriptors.Descriptor",
          "43823:         getDescriptor() {",
          "43824:       return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_descriptor;",
          "43825:     }",
          "43827:     @java.lang.Override",
          "43828:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "43829:         internalGetFieldAccessorTable() {",
          "43830:       return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_fieldAccessorTable",
          "43831:           .ensureFieldAccessorsInitialized(",
          "43832:               org.mlflow.api.proto.Service.FileInfo.class, org.mlflow.api.proto.Service.FileInfo.Builder.class);",
          "43833:     }",
          "43835:     private int bitField0_;",
          "43836:     public static final int PATH_FIELD_NUMBER = 1;",
          "43837:     private volatile java.lang.Object path_;",
          "43847:     public boolean hasPath() {",
          "43848:       return ((bitField0_ & 0x00000001) != 0);",
          "43859:     public java.lang.String getPath() {",
          "43860:       java.lang.Object ref = path_;",
          "",
          "[Added Lines]",
          "48776:     private static final org.mlflow.api.proto.Service.ListArtifacts DEFAULT_INSTANCE;",
          "48778:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.ListArtifacts();",
          "48781:     public static org.mlflow.api.proto.Service.ListArtifacts getDefaultInstance() {",
          "48785:     @java.lang.Deprecated public static final com.google.protobuf.Parser<ListArtifacts>",
          "48786:         PARSER = new com.google.protobuf.AbstractParser<ListArtifacts>() {",
          "48788:       public ListArtifacts parsePartialFrom(",
          "48792:         return new ListArtifacts(input, extensionRegistry);",
          "48796:     public static com.google.protobuf.Parser<ListArtifacts> parser() {",
          "48801:     public com.google.protobuf.Parser<ListArtifacts> getParserForType() {",
          "48806:     public org.mlflow.api.proto.Service.ListArtifacts getDefaultInstanceForType() {",
          "48812:   public interface FileInfoOrBuilder extends",
          "48824:     boolean hasPath();",
          "48833:     java.lang.String getPath();",
          "48843:         getPathBytes();",
          "48853:     boolean hasIsDir();",
          "48862:     boolean getIsDir();",
          "48872:     boolean hasFileSize();",
          "48881:     long getFileSize();",
          "48882:   }",
          "48890:   public static final class FileInfo extends",
          "48891:       com.google.protobuf.GeneratedMessageV3 implements",
          "48893:       FileInfoOrBuilder {",
          "48894:   private static final long serialVersionUID = 0L;",
          "48896:     private FileInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "48897:       super(builder);",
          "48898:     }",
          "48899:     private FileInfo() {",
          "48900:       path_ = \"\";",
          "48901:     }",
          "48903:     @java.lang.Override",
          "48904:     @SuppressWarnings({\"unused\"})",
          "48905:     protected java.lang.Object newInstance(",
          "48906:         UnusedPrivateParameter unused) {",
          "48907:       return new FileInfo();",
          "48908:     }",
          "48910:     @java.lang.Override",
          "48911:     public final com.google.protobuf.UnknownFieldSet",
          "48912:     getUnknownFields() {",
          "48913:       return this.unknownFields;",
          "48914:     }",
          "48915:     private FileInfo(",
          "48916:         com.google.protobuf.CodedInputStream input,",
          "48917:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48918:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "48919:       this();",
          "48920:       if (extensionRegistry == null) {",
          "48921:         throw new java.lang.NullPointerException();",
          "48922:       }",
          "48923:       int mutable_bitField0_ = 0;",
          "48924:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "48925:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "48926:       try {",
          "48927:         boolean done = false;",
          "48928:         while (!done) {",
          "48929:           int tag = input.readTag();",
          "48930:           switch (tag) {",
          "48931:             case 0:",
          "48932:               done = true;",
          "48933:               break;",
          "48934:             case 10: {",
          "48935:               com.google.protobuf.ByteString bs = input.readBytes();",
          "48936:               bitField0_ |= 0x00000001;",
          "48937:               path_ = bs;",
          "48938:               break;",
          "48939:             }",
          "48940:             case 16: {",
          "48941:               bitField0_ |= 0x00000002;",
          "48942:               isDir_ = input.readBool();",
          "48943:               break;",
          "48944:             }",
          "48945:             case 24: {",
          "48946:               bitField0_ |= 0x00000004;",
          "48947:               fileSize_ = input.readInt64();",
          "48948:               break;",
          "48949:             }",
          "48950:             default: {",
          "48951:               if (!parseUnknownField(",
          "48952:                   input, unknownFields, extensionRegistry, tag)) {",
          "48953:                 done = true;",
          "48954:               }",
          "48955:               break;",
          "48956:             }",
          "48957:           }",
          "48958:         }",
          "48959:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "48960:         throw e.setUnfinishedMessage(this);",
          "48961:       } catch (java.io.IOException e) {",
          "48962:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "48963:             e).setUnfinishedMessage(this);",
          "48964:       } finally {",
          "48965:         this.unknownFields = unknownFields.build();",
          "48966:         makeExtensionsImmutable();",
          "48967:       }",
          "48968:     }",
          "48969:     public static final com.google.protobuf.Descriptors.Descriptor",
          "48970:         getDescriptor() {",
          "48971:       return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_descriptor;",
          "48972:     }",
          "48974:     @java.lang.Override",
          "48975:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "48976:         internalGetFieldAccessorTable() {",
          "48977:       return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_fieldAccessorTable",
          "48978:           .ensureFieldAccessorsInitialized(",
          "48979:               org.mlflow.api.proto.Service.FileInfo.class, org.mlflow.api.proto.Service.FileInfo.Builder.class);",
          "48980:     }",
          "48982:     private int bitField0_;",
          "48983:     public static final int PATH_FIELD_NUMBER = 1;",
          "48984:     private volatile java.lang.Object path_;",
          "48993:     @java.lang.Override",
          "48994:     public boolean hasPath() {",
          "48995:       return ((bitField0_ & 0x00000001) != 0);",
          "48996:     }",
          "49005:     @java.lang.Override",
          "49006:     public java.lang.String getPath() {",
          "49007:       java.lang.Object ref = path_;",
          "49008:       if (ref instanceof java.lang.String) {",
          "49009:         return (java.lang.String) ref;",
          "49010:       } else {",
          "49011:         com.google.protobuf.ByteString bs =",
          "49012:             (com.google.protobuf.ByteString) ref;",
          "49013:         java.lang.String s = bs.toStringUtf8();",
          "49014:         if (bs.isValidUtf8()) {",
          "49015:           path_ = s;",
          "49016:         }",
          "49017:         return s;",
          "49018:       }",
          "49019:     }",
          "49028:     @java.lang.Override",
          "49029:     public com.google.protobuf.ByteString",
          "49030:         getPathBytes() {",
          "49031:       java.lang.Object ref = path_;",
          "49032:       if (ref instanceof java.lang.String) {",
          "49033:         com.google.protobuf.ByteString b =",
          "49034:             com.google.protobuf.ByteString.copyFromUtf8(",
          "49035:                 (java.lang.String) ref);",
          "49036:         path_ = b;",
          "49037:         return b;",
          "49038:       } else {",
          "49039:         return (com.google.protobuf.ByteString) ref;",
          "49040:       }",
          "49041:     }",
          "49043:     public static final int IS_DIR_FIELD_NUMBER = 2;",
          "49044:     private boolean isDir_;",
          "49053:     @java.lang.Override",
          "49054:     public boolean hasIsDir() {",
          "49055:       return ((bitField0_ & 0x00000002) != 0);",
          "49056:     }",
          "49065:     @java.lang.Override",
          "49066:     public boolean getIsDir() {",
          "49067:       return isDir_;",
          "49068:     }",
          "49070:     public static final int FILE_SIZE_FIELD_NUMBER = 3;",
          "49071:     private long fileSize_;",
          "49080:     @java.lang.Override",
          "49081:     public boolean hasFileSize() {",
          "49082:       return ((bitField0_ & 0x00000004) != 0);",
          "49092:     @java.lang.Override",
          "49093:     public long getFileSize() {",
          "49094:       return fileSize_;",
          "49095:     }",
          "49097:     private byte memoizedIsInitialized = -1;",
          "49098:     @java.lang.Override",
          "49099:     public final boolean isInitialized() {",
          "49100:       byte isInitialized = memoizedIsInitialized;",
          "49101:       if (isInitialized == 1) return true;",
          "49102:       if (isInitialized == 0) return false;",
          "49104:       memoizedIsInitialized = 1;",
          "49105:       return true;",
          "49106:     }",
          "49108:     @java.lang.Override",
          "49109:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "49110:                         throws java.io.IOException {",
          "49111:       if (((bitField0_ & 0x00000001) != 0)) {",
          "49112:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);",
          "49113:       }",
          "49114:       if (((bitField0_ & 0x00000002) != 0)) {",
          "49115:         output.writeBool(2, isDir_);",
          "49116:       }",
          "49117:       if (((bitField0_ & 0x00000004) != 0)) {",
          "49118:         output.writeInt64(3, fileSize_);",
          "49119:       }",
          "49120:       unknownFields.writeTo(output);",
          "49121:     }",
          "49123:     @java.lang.Override",
          "49124:     public int getSerializedSize() {",
          "49125:       int size = memoizedSize;",
          "49126:       if (size != -1) return size;",
          "49128:       size = 0;",
          "49129:       if (((bitField0_ & 0x00000001) != 0)) {",
          "49130:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);",
          "49131:       }",
          "49132:       if (((bitField0_ & 0x00000002) != 0)) {",
          "49133:         size += com.google.protobuf.CodedOutputStream",
          "49134:           .computeBoolSize(2, isDir_);",
          "49135:       }",
          "49136:       if (((bitField0_ & 0x00000004) != 0)) {",
          "49137:         size += com.google.protobuf.CodedOutputStream",
          "49138:           .computeInt64Size(3, fileSize_);",
          "49139:       }",
          "49140:       size += unknownFields.getSerializedSize();",
          "49141:       memoizedSize = size;",
          "49142:       return size;",
          "49146:     public boolean equals(final java.lang.Object obj) {",
          "49147:       if (obj == this) {",
          "49148:        return true;",
          "49149:       }",
          "49150:       if (!(obj instanceof org.mlflow.api.proto.Service.FileInfo)) {",
          "49151:         return super.equals(obj);",
          "49152:       }",
          "49153:       org.mlflow.api.proto.Service.FileInfo other = (org.mlflow.api.proto.Service.FileInfo) obj;",
          "49155:       if (hasPath() != other.hasPath()) return false;",
          "49156:       if (hasPath()) {",
          "49157:         if (!getPath()",
          "49158:             .equals(other.getPath())) return false;",
          "49159:       }",
          "49160:       if (hasIsDir() != other.hasIsDir()) return false;",
          "49161:       if (hasIsDir()) {",
          "49162:         if (getIsDir()",
          "49163:             != other.getIsDir()) return false;",
          "49164:       }",
          "49165:       if (hasFileSize() != other.hasFileSize()) return false;",
          "49166:       if (hasFileSize()) {",
          "49167:         if (getFileSize()",
          "49168:             != other.getFileSize()) return false;",
          "49169:       }",
          "49170:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "49171:       return true;",
          "49175:     public int hashCode() {",
          "49176:       if (memoizedHashCode != 0) {",
          "49177:         return memoizedHashCode;",
          "49178:       }",
          "49179:       int hash = 41;",
          "49180:       hash = (19 * hash) + getDescriptor().hashCode();",
          "49181:       if (hasPath()) {",
          "49182:         hash = (37 * hash) + PATH_FIELD_NUMBER;",
          "49183:         hash = (53 * hash) + getPath().hashCode();",
          "49184:       }",
          "49185:       if (hasIsDir()) {",
          "49186:         hash = (37 * hash) + IS_DIR_FIELD_NUMBER;",
          "49187:         hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(",
          "49188:             getIsDir());",
          "49189:       }",
          "49190:       if (hasFileSize()) {",
          "49191:         hash = (37 * hash) + FILE_SIZE_FIELD_NUMBER;",
          "49192:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "49193:             getFileSize());",
          "49194:       }",
          "49195:       hash = (29 * hash) + unknownFields.hashCode();",
          "49196:       memoizedHashCode = hash;",
          "49197:       return hash;",
          "49200:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49201:         java.nio.ByteBuffer data)",
          "49202:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "49203:       return PARSER.parseFrom(data);",
          "49204:     }",
          "49205:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49206:         java.nio.ByteBuffer data,",
          "49209:       return PARSER.parseFrom(data, extensionRegistry);",
          "49211:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49212:         com.google.protobuf.ByteString data)",
          "49213:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "49214:       return PARSER.parseFrom(data);",
          "49215:     }",
          "49216:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49217:         com.google.protobuf.ByteString data,",
          "49218:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49219:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "49220:       return PARSER.parseFrom(data, extensionRegistry);",
          "49221:     }",
          "49222:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(byte[] data)",
          "49223:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "49224:       return PARSER.parseFrom(data);",
          "49225:     }",
          "49226:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49227:         byte[] data,",
          "49228:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49229:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "49230:       return PARSER.parseFrom(data, extensionRegistry);",
          "49231:     }",
          "49232:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(java.io.InputStream input)",
          "49233:         throws java.io.IOException {",
          "49234:       return com.google.protobuf.GeneratedMessageV3",
          "49235:           .parseWithIOException(PARSER, input);",
          "49236:     }",
          "49237:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49238:         java.io.InputStream input,",
          "49239:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49240:         throws java.io.IOException {",
          "49241:       return com.google.protobuf.GeneratedMessageV3",
          "49242:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "49243:     }",
          "49244:     public static org.mlflow.api.proto.Service.FileInfo parseDelimitedFrom(java.io.InputStream input)",
          "49245:         throws java.io.IOException {",
          "49246:       return com.google.protobuf.GeneratedMessageV3",
          "49247:           .parseDelimitedWithIOException(PARSER, input);",
          "49248:     }",
          "49249:     public static org.mlflow.api.proto.Service.FileInfo parseDelimitedFrom(",
          "49250:         java.io.InputStream input,",
          "49251:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49252:         throws java.io.IOException {",
          "49253:       return com.google.protobuf.GeneratedMessageV3",
          "49254:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "49255:     }",
          "49256:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49257:         com.google.protobuf.CodedInputStream input)",
          "49258:         throws java.io.IOException {",
          "49259:       return com.google.protobuf.GeneratedMessageV3",
          "49260:           .parseWithIOException(PARSER, input);",
          "49261:     }",
          "49262:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "49263:         com.google.protobuf.CodedInputStream input,",
          "49264:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49265:         throws java.io.IOException {",
          "49266:       return com.google.protobuf.GeneratedMessageV3",
          "49267:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "49271:     public Builder newBuilderForType() { return newBuilder(); }",
          "49272:     public static Builder newBuilder() {",
          "49273:       return DEFAULT_INSTANCE.toBuilder();",
          "49274:     }",
          "49275:     public static Builder newBuilder(org.mlflow.api.proto.Service.FileInfo prototype) {",
          "49276:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "49277:     }",
          "49278:     @java.lang.Override",
          "49279:     public Builder toBuilder() {",
          "49280:       return this == DEFAULT_INSTANCE",
          "49281:           ? new Builder() : new Builder().mergeFrom(this);",
          "49284:     @java.lang.Override",
          "49285:     protected Builder newBuilderForType(",
          "49286:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "49287:       Builder builder = new Builder(parent);",
          "49288:       return builder;",
          "49297:     public static final class Builder extends",
          "49298:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "49300:         org.mlflow.api.proto.Service.FileInfoOrBuilder {",
          "49301:       public static final com.google.protobuf.Descriptors.Descriptor",
          "49302:           getDescriptor() {",
          "49303:         return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_descriptor;",
          "49306:       @java.lang.Override",
          "49307:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "49308:           internalGetFieldAccessorTable() {",
          "49309:         return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_fieldAccessorTable",
          "49310:             .ensureFieldAccessorsInitialized(",
          "49311:                 org.mlflow.api.proto.Service.FileInfo.class, org.mlflow.api.proto.Service.FileInfo.Builder.class);",
          "49312:       }",
          "49315:       private Builder() {",
          "49316:         maybeForceBuilderInitialization();",
          "49319:       private Builder(",
          "49320:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "49321:         super(parent);",
          "49322:         maybeForceBuilderInitialization();",
          "49323:       }",
          "49324:       private void maybeForceBuilderInitialization() {",
          "49325:         if (com.google.protobuf.GeneratedMessageV3",
          "49326:                 .alwaysUseFieldBuilders) {",
          "49327:         }",
          "49328:       }",
          "49330:       public Builder clear() {",
          "49331:         super.clear();",
          "49332:         path_ = \"\";",
          "49333:         bitField0_ = (bitField0_ & ~0x00000001);",
          "49334:         isDir_ = false;",
          "49335:         bitField0_ = (bitField0_ & ~0x00000002);",
          "49336:         fileSize_ = 0L;",
          "49337:         bitField0_ = (bitField0_ & ~0x00000004);",
          "49338:         return this;",
          "49342:       public com.google.protobuf.Descriptors.Descriptor",
          "49343:           getDescriptorForType() {",
          "49344:         return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_descriptor;",
          "49347:       @java.lang.Override",
          "49348:       public org.mlflow.api.proto.Service.FileInfo getDefaultInstanceForType() {",
          "49349:         return org.mlflow.api.proto.Service.FileInfo.getDefaultInstance();",
          "49350:       }",
          "49352:       @java.lang.Override",
          "49353:       public org.mlflow.api.proto.Service.FileInfo build() {",
          "49354:         org.mlflow.api.proto.Service.FileInfo result = buildPartial();",
          "49355:         if (!result.isInitialized()) {",
          "49356:           throw newUninitializedMessageException(result);",
          "49358:         return result;",
          "49359:       }",
          "49361:       @java.lang.Override",
          "49362:       public org.mlflow.api.proto.Service.FileInfo buildPartial() {",
          "49363:         org.mlflow.api.proto.Service.FileInfo result = new org.mlflow.api.proto.Service.FileInfo(this);",
          "49364:         int from_bitField0_ = bitField0_;",
          "49365:         int to_bitField0_ = 0;",
          "49366:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "49367:           to_bitField0_ |= 0x00000001;",
          "49368:         }",
          "49369:         result.path_ = path_;",
          "49370:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "49371:           result.isDir_ = isDir_;",
          "49372:           to_bitField0_ |= 0x00000002;",
          "49373:         }",
          "49374:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "49375:           result.fileSize_ = fileSize_;",
          "49376:           to_bitField0_ |= 0x00000004;",
          "49377:         }",
          "49378:         result.bitField0_ = to_bitField0_;",
          "49379:         onBuilt();",
          "49380:         return result;",
          "49381:       }",
          "49383:       @java.lang.Override",
          "49384:       public Builder clone() {",
          "49385:         return super.clone();",
          "49386:       }",
          "49387:       @java.lang.Override",
          "49388:       public Builder setField(",
          "49389:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "49390:           java.lang.Object value) {",
          "49391:         return super.setField(field, value);",
          "49392:       }",
          "49393:       @java.lang.Override",
          "49394:       public Builder clearField(",
          "49395:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "49396:         return super.clearField(field);",
          "49397:       }",
          "49398:       @java.lang.Override",
          "49399:       public Builder clearOneof(",
          "49400:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "49401:         return super.clearOneof(oneof);",
          "49402:       }",
          "49403:       @java.lang.Override",
          "49404:       public Builder setRepeatedField(",
          "49405:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "49406:           int index, java.lang.Object value) {",
          "49407:         return super.setRepeatedField(field, index, value);",
          "49408:       }",
          "49409:       @java.lang.Override",
          "49410:       public Builder addRepeatedField(",
          "49411:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "49412:           java.lang.Object value) {",
          "49413:         return super.addRepeatedField(field, value);",
          "49414:       }",
          "49415:       @java.lang.Override",
          "49416:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "49417:         if (other instanceof org.mlflow.api.proto.Service.FileInfo) {",
          "49418:           return mergeFrom((org.mlflow.api.proto.Service.FileInfo)other);",
          "49419:         } else {",
          "49420:           super.mergeFrom(other);",
          "49421:           return this;",
          "49425:       public Builder mergeFrom(org.mlflow.api.proto.Service.FileInfo other) {",
          "49426:         if (other == org.mlflow.api.proto.Service.FileInfo.getDefaultInstance()) return this;",
          "49427:         if (other.hasPath()) {",
          "49428:           bitField0_ |= 0x00000001;",
          "49429:           path_ = other.path_;",
          "49430:           onChanged();",
          "49431:         }",
          "49432:         if (other.hasIsDir()) {",
          "49433:           setIsDir(other.getIsDir());",
          "49434:         }",
          "49435:         if (other.hasFileSize()) {",
          "49436:           setFileSize(other.getFileSize());",
          "49437:         }",
          "49438:         this.mergeUnknownFields(other.unknownFields);",
          "49439:         onChanged();",
          "49440:         return this;",
          "49444:       public final boolean isInitialized() {",
          "49445:         return true;",
          "49448:       @java.lang.Override",
          "49449:       public Builder mergeFrom(",
          "49450:           com.google.protobuf.CodedInputStream input,",
          "49451:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49452:           throws java.io.IOException {",
          "49453:         org.mlflow.api.proto.Service.FileInfo parsedMessage = null;",
          "49454:         try {",
          "49455:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "49456:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "49457:           parsedMessage = (org.mlflow.api.proto.Service.FileInfo) e.getUnfinishedMessage();",
          "49458:           throw e.unwrapIOException();",
          "49459:         } finally {",
          "49460:           if (parsedMessage != null) {",
          "49461:             mergeFrom(parsedMessage);",
          "49462:           }",
          "49463:         }",
          "49464:         return this;",
          "49465:       }",
          "49468:       private java.lang.Object path_ = \"\";",
          "49477:       public boolean hasPath() {",
          "49488:       public java.lang.String getPath() {",
          "49489:         java.lang.Object ref = path_;",
          "49490:         if (!(ref instanceof java.lang.String)) {",
          "49491:           com.google.protobuf.ByteString bs =",
          "49495:             path_ = s;",
          "49498:         } else {",
          "49499:           return (java.lang.String) ref;",
          "49511:           getPathBytes() {",
          "49512:         java.lang.Object ref = path_;",
          "49513:         if (ref instanceof String) {",
          "49517:           path_ = b;",
          "49532:       public Builder setPath(",
          "49533:           java.lang.String value) {",
          "49534:         if (value == null) {",
          "49535:     throw new NullPointerException();",
          "49536:   }",
          "49537:   bitField0_ |= 0x00000001;",
          "49538:         path_ = value;",
          "49539:         onChanged();",
          "49540:         return this;",
          "49550:       public Builder clearPath() {",
          "49551:         bitField0_ = (bitField0_ & ~0x00000001);",
          "49552:         path_ = getDefaultInstance().getPath();",
          "49553:         onChanged();",
          "49554:         return this;",
          "49565:       public Builder setPathBytes(",
          "49566:           com.google.protobuf.ByteString value) {",
          "49567:         if (value == null) {",
          "49568:     throw new NullPointerException();",
          "49569:   }",
          "49570:   bitField0_ |= 0x00000001;",
          "49571:         path_ = value;",
          "49572:         onChanged();",
          "49573:         return this;",
          "49576:       private boolean isDir_ ;",
          "49586:       public boolean hasIsDir() {",
          "49587:         return ((bitField0_ & 0x00000002) != 0);",
          "49598:       public boolean getIsDir() {",
          "49599:         return isDir_;",
          "49610:       public Builder setIsDir(boolean value) {",
          "49611:         bitField0_ |= 0x00000002;",
          "49612:         isDir_ = value;",
          "49613:         onChanged();",
          "49614:         return this;",
          "49624:       public Builder clearIsDir() {",
          "49625:         bitField0_ = (bitField0_ & ~0x00000002);",
          "49626:         isDir_ = false;",
          "49627:         onChanged();",
          "49628:         return this;",
          "49631:       private long fileSize_ ;",
          "49641:       public boolean hasFileSize() {",
          "49642:         return ((bitField0_ & 0x00000004) != 0);",
          "49653:       public long getFileSize() {",
          "49654:         return fileSize_;",
          "49665:       public Builder setFileSize(long value) {",
          "49666:         bitField0_ |= 0x00000004;",
          "49667:         fileSize_ = value;",
          "49668:         onChanged();",
          "49669:         return this;",
          "49679:       public Builder clearFileSize() {",
          "49680:         bitField0_ = (bitField0_ & ~0x00000004);",
          "49681:         fileSize_ = 0L;",
          "49682:         onChanged();",
          "49683:         return this;",
          "49684:       }",
          "49685:       @java.lang.Override",
          "49686:       public final Builder setUnknownFields(",
          "49687:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "49688:         return super.setUnknownFields(unknownFields);",
          "49689:       }",
          "49691:       @java.lang.Override",
          "49692:       public final Builder mergeUnknownFields(",
          "49693:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "49694:         return super.mergeUnknownFields(unknownFields);",
          "49695:       }",
          "49699:     }",
          "49702:     private static final org.mlflow.api.proto.Service.FileInfo DEFAULT_INSTANCE;",
          "49703:     static {",
          "49704:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.FileInfo();",
          "49705:     }",
          "49707:     public static org.mlflow.api.proto.Service.FileInfo getDefaultInstance() {",
          "49708:       return DEFAULT_INSTANCE;",
          "49709:     }",
          "49711:     @java.lang.Deprecated public static final com.google.protobuf.Parser<FileInfo>",
          "49712:         PARSER = new com.google.protobuf.AbstractParser<FileInfo>() {",
          "49713:       @java.lang.Override",
          "49714:       public FileInfo parsePartialFrom(",
          "49715:           com.google.protobuf.CodedInputStream input,",
          "49716:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49717:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "49718:         return new FileInfo(input, extensionRegistry);",
          "49719:       }",
          "49720:     };",
          "49722:     public static com.google.protobuf.Parser<FileInfo> parser() {",
          "49723:       return PARSER;",
          "49724:     }",
          "49726:     @java.lang.Override",
          "49727:     public com.google.protobuf.Parser<FileInfo> getParserForType() {",
          "49728:       return PARSER;",
          "49729:     }",
          "49731:     @java.lang.Override",
          "49732:     public org.mlflow.api.proto.Service.FileInfo getDefaultInstanceForType() {",
          "49733:       return DEFAULT_INSTANCE;",
          "49734:     }",
          "49738:   public interface GetMetricHistoryOrBuilder extends",
          "49740:       com.google.protobuf.MessageOrBuilder {",
          "49750:     boolean hasRunId();",
          "49759:     java.lang.String getRunId();",
          "49768:     com.google.protobuf.ByteString",
          "49769:         getRunIdBytes();",
          "49780:     boolean hasRunUuid();",
          "49790:     java.lang.String getRunUuid();",
          "49800:     com.google.protobuf.ByteString",
          "49801:         getRunUuidBytes();",
          "49811:     boolean hasMetricKey();",
          "49820:     java.lang.String getMetricKey();",
          "49829:     com.google.protobuf.ByteString",
          "49830:         getMetricKeyBytes();",
          "49840:     boolean hasPageToken();",
          "49849:     java.lang.String getPageToken();",
          "49858:     com.google.protobuf.ByteString",
          "49859:         getPageTokenBytes();",
          "49872:     boolean hasMaxResults();",
          "49884:     int getMaxResults();",
          "49885:   }",
          "49889:   public static final class GetMetricHistory extends",
          "49890:       com.google.protobuf.GeneratedMessageV3 implements",
          "49892:       GetMetricHistoryOrBuilder {",
          "49893:   private static final long serialVersionUID = 0L;",
          "49895:     private GetMetricHistory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "49896:       super(builder);",
          "49897:     }",
          "49898:     private GetMetricHistory() {",
          "49899:       runId_ = \"\";",
          "49900:       runUuid_ = \"\";",
          "49901:       metricKey_ = \"\";",
          "49902:       pageToken_ = \"\";",
          "49903:     }",
          "49905:     @java.lang.Override",
          "49906:     @SuppressWarnings({\"unused\"})",
          "49907:     protected java.lang.Object newInstance(",
          "49908:         UnusedPrivateParameter unused) {",
          "49909:       return new GetMetricHistory();",
          "49910:     }",
          "49912:     @java.lang.Override",
          "49913:     public final com.google.protobuf.UnknownFieldSet",
          "49914:     getUnknownFields() {",
          "49915:       return this.unknownFields;",
          "49916:     }",
          "49917:     private GetMetricHistory(",
          "49918:         com.google.protobuf.CodedInputStream input,",
          "49919:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49920:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "49921:       this();",
          "49922:       if (extensionRegistry == null) {",
          "49923:         throw new java.lang.NullPointerException();",
          "49924:       }",
          "49925:       int mutable_bitField0_ = 0;",
          "49926:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "49927:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "49928:       try {",
          "49929:         boolean done = false;",
          "49930:         while (!done) {",
          "49931:           int tag = input.readTag();",
          "49932:           switch (tag) {",
          "49933:             case 0:",
          "49934:               done = true;",
          "49935:               break;",
          "49936:             case 10: {",
          "49937:               com.google.protobuf.ByteString bs = input.readBytes();",
          "49938:               bitField0_ |= 0x00000002;",
          "49939:               runUuid_ = bs;",
          "49940:               break;",
          "49942:             case 18: {",
          "49943:               com.google.protobuf.ByteString bs = input.readBytes();",
          "49944:               bitField0_ |= 0x00000004;",
          "49945:               metricKey_ = bs;",
          "49946:               break;",
          "49948:             case 26: {",
          "49949:               com.google.protobuf.ByteString bs = input.readBytes();",
          "49950:               bitField0_ |= 0x00000001;",
          "49951:               runId_ = bs;",
          "49952:               break;",
          "49954:             case 34: {",
          "49955:               com.google.protobuf.ByteString bs = input.readBytes();",
          "49956:               bitField0_ |= 0x00000008;",
          "49957:               pageToken_ = bs;",
          "49958:               break;",
          "49959:             }",
          "49960:             case 40: {",
          "49961:               bitField0_ |= 0x00000010;",
          "49962:               maxResults_ = input.readInt32();",
          "49963:               break;",
          "49964:             }",
          "49965:             default: {",
          "49966:               if (!parseUnknownField(",
          "49967:                   input, unknownFields, extensionRegistry, tag)) {",
          "49968:                 done = true;",
          "49969:               }",
          "49970:               break;",
          "49974:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "49975:         throw e.setUnfinishedMessage(this);",
          "49976:       } catch (java.io.IOException e) {",
          "49977:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "49978:             e).setUnfinishedMessage(this);",
          "49979:       } finally {",
          "49980:         this.unknownFields = unknownFields.build();",
          "49981:         makeExtensionsImmutable();",
          "49982:       }",
          "49983:     }",
          "49984:     public static final com.google.protobuf.Descriptors.Descriptor",
          "49985:         getDescriptor() {",
          "49986:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_descriptor;",
          "49987:     }",
          "49989:     @java.lang.Override",
          "49990:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "49991:         internalGetFieldAccessorTable() {",
          "49992:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_fieldAccessorTable",
          "49993:           .ensureFieldAccessorsInitialized(",
          "49994:               org.mlflow.api.proto.Service.GetMetricHistory.class, org.mlflow.api.proto.Service.GetMetricHistory.Builder.class);",
          "49995:     }",
          "49997:     public interface ResponseOrBuilder extends",
          "49999:         com.google.protobuf.MessageOrBuilder {",
          "50008:       java.util.List<org.mlflow.api.proto.Service.Metric>",
          "50009:           getMetricsList();",
          "50017:       org.mlflow.api.proto.Service.Metric getMetrics(int index);",
          "50025:       int getMetricsCount();",
          "50033:       java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "50034:           getMetricsOrBuilderList();",
          "50042:       org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "50043:           int index);",
          "50054:       boolean hasNextPageToken();",
          "50064:       java.lang.String getNextPageToken();",
          "50074:       com.google.protobuf.ByteString",
          "50075:           getNextPageTokenBytes();",
          "50076:     }",
          "50080:     public static final class Response extends",
          "50081:         com.google.protobuf.GeneratedMessageV3 implements",
          "50083:         ResponseOrBuilder {",
          "50084:     private static final long serialVersionUID = 0L;",
          "50086:       private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "50087:         super(builder);",
          "50089:       private Response() {",
          "50090:         metrics_ = java.util.Collections.emptyList();",
          "50091:         nextPageToken_ = \"\";",
          "50094:       @java.lang.Override",
          "50095:       @SuppressWarnings({\"unused\"})",
          "50096:       protected java.lang.Object newInstance(",
          "50097:           UnusedPrivateParameter unused) {",
          "50098:         return new Response();",
          "50101:       @java.lang.Override",
          "50102:       public final com.google.protobuf.UnknownFieldSet",
          "50103:       getUnknownFields() {",
          "50104:         return this.unknownFields;",
          "50105:       }",
          "50106:       private Response(",
          "50107:           com.google.protobuf.CodedInputStream input,",
          "50108:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50109:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50110:         this();",
          "50111:         if (extensionRegistry == null) {",
          "50112:           throw new java.lang.NullPointerException();",
          "50114:         int mutable_bitField0_ = 0;",
          "50115:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "50116:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "50117:         try {",
          "50118:           boolean done = false;",
          "50119:           while (!done) {",
          "50120:             int tag = input.readTag();",
          "50121:             switch (tag) {",
          "50122:               case 0:",
          "50123:                 done = true;",
          "50124:                 break;",
          "50125:               case 10: {",
          "50126:                 if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "50127:                   metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>();",
          "50128:                   mutable_bitField0_ |= 0x00000001;",
          "50129:                 }",
          "50130:                 metrics_.add(",
          "50131:                     input.readMessage(org.mlflow.api.proto.Service.Metric.PARSER, extensionRegistry));",
          "50132:                 break;",
          "50133:               }",
          "50134:               case 18: {",
          "50135:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "50136:                 bitField0_ |= 0x00000001;",
          "50137:                 nextPageToken_ = bs;",
          "50138:                 break;",
          "50139:               }",
          "50140:               default: {",
          "50141:                 if (!parseUnknownField(",
          "50142:                     input, unknownFields, extensionRegistry, tag)) {",
          "50143:                   done = true;",
          "50144:                 }",
          "50145:                 break;",
          "50146:               }",
          "50147:             }",
          "50148:           }",
          "50149:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "50150:           throw e.setUnfinishedMessage(this);",
          "50151:         } catch (java.io.IOException e) {",
          "50152:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "50153:               e).setUnfinishedMessage(this);",
          "50154:         } finally {",
          "50155:           if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "50156:             metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "50157:           }",
          "50158:           this.unknownFields = unknownFields.build();",
          "50159:           makeExtensionsImmutable();",
          "50160:         }",
          "50161:       }",
          "50162:       public static final com.google.protobuf.Descriptors.Descriptor",
          "50163:           getDescriptor() {",
          "50164:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_descriptor;",
          "50168:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "50169:           internalGetFieldAccessorTable() {",
          "50170:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_fieldAccessorTable",
          "50171:             .ensureFieldAccessorsInitialized(",
          "50172:                 org.mlflow.api.proto.Service.GetMetricHistory.Response.class, org.mlflow.api.proto.Service.GetMetricHistory.Response.Builder.class);",
          "50175:       private int bitField0_;",
          "50176:       public static final int METRICS_FIELD_NUMBER = 1;",
          "50177:       private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_;",
          "50186:       public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "50187:         return metrics_;",
          "50196:       @java.lang.Override",
          "50197:       public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "50198:           getMetricsOrBuilderList() {",
          "50199:         return metrics_;",
          "50208:       @java.lang.Override",
          "50209:       public int getMetricsCount() {",
          "50210:         return metrics_.size();",
          "50219:       @java.lang.Override",
          "50220:       public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "50221:         return metrics_.get(index);",
          "50230:       @java.lang.Override",
          "50231:       public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "50232:           int index) {",
          "50233:         return metrics_.get(index);",
          "50236:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;",
          "50237:       private volatile java.lang.Object nextPageToken_;",
          "50247:       @java.lang.Override",
          "50248:       public boolean hasNextPageToken() {",
          "50249:         return ((bitField0_ & 0x00000001) != 0);",
          "50250:       }",
          "50260:       @java.lang.Override",
          "50261:       public java.lang.String getNextPageToken() {",
          "50262:         java.lang.Object ref = nextPageToken_;",
          "50263:         if (ref instanceof java.lang.String) {",
          "50264:           return (java.lang.String) ref;",
          "50265:         } else {",
          "50266:           com.google.protobuf.ByteString bs =",
          "50267:               (com.google.protobuf.ByteString) ref;",
          "50268:           java.lang.String s = bs.toStringUtf8();",
          "50269:           if (bs.isValidUtf8()) {",
          "50270:             nextPageToken_ = s;",
          "50271:           }",
          "50272:           return s;",
          "50284:       @java.lang.Override",
          "50285:       public com.google.protobuf.ByteString",
          "50286:           getNextPageTokenBytes() {",
          "50287:         java.lang.Object ref = nextPageToken_;",
          "50288:         if (ref instanceof java.lang.String) {",
          "50289:           com.google.protobuf.ByteString b =",
          "50290:               com.google.protobuf.ByteString.copyFromUtf8(",
          "50291:                   (java.lang.String) ref);",
          "50292:           nextPageToken_ = b;",
          "50293:           return b;",
          "50294:         } else {",
          "50295:           return (com.google.protobuf.ByteString) ref;",
          "50296:         }",
          "50299:       private byte memoizedIsInitialized = -1;",
          "50300:       @java.lang.Override",
          "50301:       public final boolean isInitialized() {",
          "50302:         byte isInitialized = memoizedIsInitialized;",
          "50303:         if (isInitialized == 1) return true;",
          "50304:         if (isInitialized == 0) return false;",
          "50306:         memoizedIsInitialized = 1;",
          "50307:         return true;",
          "50308:       }",
          "50310:       @java.lang.Override",
          "50311:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "50312:                           throws java.io.IOException {",
          "50313:         for (int i = 0; i < metrics_.size(); i++) {",
          "50314:           output.writeMessage(1, metrics_.get(i));",
          "50316:         if (((bitField0_ & 0x00000001) != 0)) {",
          "50317:           com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);",
          "50318:         }",
          "50319:         unknownFields.writeTo(output);",
          "50322:       @java.lang.Override",
          "50323:       public int getSerializedSize() {",
          "50324:         int size = memoizedSize;",
          "50325:         if (size != -1) return size;",
          "50327:         size = 0;",
          "50328:         for (int i = 0; i < metrics_.size(); i++) {",
          "50329:           size += com.google.protobuf.CodedOutputStream",
          "50330:             .computeMessageSize(1, metrics_.get(i));",
          "50331:         }",
          "50332:         if (((bitField0_ & 0x00000001) != 0)) {",
          "50333:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);",
          "50334:         }",
          "50335:         size += unknownFields.getSerializedSize();",
          "50336:         memoizedSize = size;",
          "50337:         return size;",
          "50340:       @java.lang.Override",
          "50341:       public boolean equals(final java.lang.Object obj) {",
          "50342:         if (obj == this) {",
          "50343:          return true;",
          "50344:         }",
          "50345:         if (!(obj instanceof org.mlflow.api.proto.Service.GetMetricHistory.Response)) {",
          "50346:           return super.equals(obj);",
          "50347:         }",
          "50348:         org.mlflow.api.proto.Service.GetMetricHistory.Response other = (org.mlflow.api.proto.Service.GetMetricHistory.Response) obj;",
          "50350:         if (!getMetricsList()",
          "50351:             .equals(other.getMetricsList())) return false;",
          "50352:         if (hasNextPageToken() != other.hasNextPageToken()) return false;",
          "50353:         if (hasNextPageToken()) {",
          "50354:           if (!getNextPageToken()",
          "50355:               .equals(other.getNextPageToken())) return false;",
          "50356:         }",
          "50357:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "50358:         return true;",
          "50361:       @java.lang.Override",
          "50362:       public int hashCode() {",
          "50363:         if (memoizedHashCode != 0) {",
          "50364:           return memoizedHashCode;",
          "50365:         }",
          "50366:         int hash = 41;",
          "50367:         hash = (19 * hash) + getDescriptor().hashCode();",
          "50368:         if (getMetricsCount() > 0) {",
          "50369:           hash = (37 * hash) + METRICS_FIELD_NUMBER;",
          "50370:           hash = (53 * hash) + getMetricsList().hashCode();",
          "50371:         }",
          "50372:         if (hasNextPageToken()) {",
          "50373:           hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;",
          "50374:           hash = (53 * hash) + getNextPageToken().hashCode();",
          "50375:         }",
          "50376:         hash = (29 * hash) + unknownFields.hashCode();",
          "50377:         memoizedHashCode = hash;",
          "50378:         return hash;",
          "50381:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50382:           java.nio.ByteBuffer data)",
          "50383:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50384:         return PARSER.parseFrom(data);",
          "50386:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50387:           java.nio.ByteBuffer data,",
          "50388:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50389:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50390:         return PARSER.parseFrom(data, extensionRegistry);",
          "50392:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50393:           com.google.protobuf.ByteString data)",
          "50394:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50395:         return PARSER.parseFrom(data);",
          "50397:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50398:           com.google.protobuf.ByteString data,",
          "50399:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50400:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50401:         return PARSER.parseFrom(data, extensionRegistry);",
          "50403:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(byte[] data)",
          "50404:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50405:         return PARSER.parseFrom(data);",
          "50407:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50408:           byte[] data,",
          "50409:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50410:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50411:         return PARSER.parseFrom(data, extensionRegistry);",
          "50413:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(java.io.InputStream input)",
          "50414:           throws java.io.IOException {",
          "50415:         return com.google.protobuf.GeneratedMessageV3",
          "50416:             .parseWithIOException(PARSER, input);",
          "50418:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50419:           java.io.InputStream input,",
          "50420:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50421:           throws java.io.IOException {",
          "50422:         return com.google.protobuf.GeneratedMessageV3",
          "50423:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "50425:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseDelimitedFrom(java.io.InputStream input)",
          "50426:           throws java.io.IOException {",
          "50427:         return com.google.protobuf.GeneratedMessageV3",
          "50428:             .parseDelimitedWithIOException(PARSER, input);",
          "50430:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseDelimitedFrom(",
          "50431:           java.io.InputStream input,",
          "50432:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50433:           throws java.io.IOException {",
          "50434:         return com.google.protobuf.GeneratedMessageV3",
          "50435:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "50437:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50438:           com.google.protobuf.CodedInputStream input)",
          "50439:           throws java.io.IOException {",
          "50440:         return com.google.protobuf.GeneratedMessageV3",
          "50441:             .parseWithIOException(PARSER, input);",
          "50443:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "50444:           com.google.protobuf.CodedInputStream input,",
          "50445:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50446:           throws java.io.IOException {",
          "50447:         return com.google.protobuf.GeneratedMessageV3",
          "50448:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "50451:       @java.lang.Override",
          "50452:       public Builder newBuilderForType() { return newBuilder(); }",
          "50453:       public static Builder newBuilder() {",
          "50454:         return DEFAULT_INSTANCE.toBuilder();",
          "50456:       public static Builder newBuilder(org.mlflow.api.proto.Service.GetMetricHistory.Response prototype) {",
          "50457:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "50459:       @java.lang.Override",
          "50460:       public Builder toBuilder() {",
          "50461:         return this == DEFAULT_INSTANCE",
          "50462:             ? new Builder() : new Builder().mergeFrom(this);",
          "50465:       @java.lang.Override",
          "50466:       protected Builder newBuilderForType(",
          "50467:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "50468:         Builder builder = new Builder(parent);",
          "50469:         return builder;",
          "50474:       public static final class Builder extends",
          "50475:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "50477:           org.mlflow.api.proto.Service.GetMetricHistory.ResponseOrBuilder {",
          "50478:         public static final com.google.protobuf.Descriptors.Descriptor",
          "50479:             getDescriptor() {",
          "50480:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_descriptor;",
          "50481:         }",
          "50483:         @java.lang.Override",
          "50484:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "50485:             internalGetFieldAccessorTable() {",
          "50486:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_fieldAccessorTable",
          "50487:               .ensureFieldAccessorsInitialized(",
          "50488:                   org.mlflow.api.proto.Service.GetMetricHistory.Response.class, org.mlflow.api.proto.Service.GetMetricHistory.Response.Builder.class);",
          "50489:         }",
          "50492:         private Builder() {",
          "50493:           maybeForceBuilderInitialization();",
          "50494:         }",
          "50496:         private Builder(",
          "50497:             com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "50498:           super(parent);",
          "50499:           maybeForceBuilderInitialization();",
          "50500:         }",
          "50501:         private void maybeForceBuilderInitialization() {",
          "50502:           if (com.google.protobuf.GeneratedMessageV3",
          "50503:                   .alwaysUseFieldBuilders) {",
          "50504:             getMetricsFieldBuilder();",
          "50505:           }",
          "50506:         }",
          "50507:         @java.lang.Override",
          "50508:         public Builder clear() {",
          "50509:           super.clear();",
          "50510:           if (metricsBuilder_ == null) {",
          "50511:             metrics_ = java.util.Collections.emptyList();",
          "50512:             bitField0_ = (bitField0_ & ~0x00000001);",
          "50513:           } else {",
          "50514:             metricsBuilder_.clear();",
          "50515:           }",
          "50516:           nextPageToken_ = \"\";",
          "50517:           bitField0_ = (bitField0_ & ~0x00000002);",
          "50518:           return this;",
          "50519:         }",
          "50521:         @java.lang.Override",
          "50522:         public com.google.protobuf.Descriptors.Descriptor",
          "50523:             getDescriptorForType() {",
          "50524:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_descriptor;",
          "50525:         }",
          "50527:         @java.lang.Override",
          "50528:         public org.mlflow.api.proto.Service.GetMetricHistory.Response getDefaultInstanceForType() {",
          "50529:           return org.mlflow.api.proto.Service.GetMetricHistory.Response.getDefaultInstance();",
          "50530:         }",
          "50532:         @java.lang.Override",
          "50533:         public org.mlflow.api.proto.Service.GetMetricHistory.Response build() {",
          "50534:           org.mlflow.api.proto.Service.GetMetricHistory.Response result = buildPartial();",
          "50535:           if (!result.isInitialized()) {",
          "50536:             throw newUninitializedMessageException(result);",
          "50537:           }",
          "50538:           return result;",
          "50539:         }",
          "50541:         @java.lang.Override",
          "50542:         public org.mlflow.api.proto.Service.GetMetricHistory.Response buildPartial() {",
          "50543:           org.mlflow.api.proto.Service.GetMetricHistory.Response result = new org.mlflow.api.proto.Service.GetMetricHistory.Response(this);",
          "50544:           int from_bitField0_ = bitField0_;",
          "50545:           int to_bitField0_ = 0;",
          "50546:           if (metricsBuilder_ == null) {",
          "50547:             if (((bitField0_ & 0x00000001) != 0)) {",
          "50548:               metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "50549:               bitField0_ = (bitField0_ & ~0x00000001);",
          "50550:             }",
          "50551:             result.metrics_ = metrics_;",
          "50552:           } else {",
          "50553:             result.metrics_ = metricsBuilder_.build();",
          "50554:           }",
          "50555:           if (((from_bitField0_ & 0x00000002) != 0)) {",
          "50556:             to_bitField0_ |= 0x00000001;",
          "50557:           }",
          "50558:           result.nextPageToken_ = nextPageToken_;",
          "50559:           result.bitField0_ = to_bitField0_;",
          "50560:           onBuilt();",
          "50561:           return result;",
          "50562:         }",
          "50564:         @java.lang.Override",
          "50565:         public Builder clone() {",
          "50566:           return super.clone();",
          "50567:         }",
          "50568:         @java.lang.Override",
          "50569:         public Builder setField(",
          "50570:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "50571:             java.lang.Object value) {",
          "50572:           return super.setField(field, value);",
          "50573:         }",
          "50574:         @java.lang.Override",
          "50575:         public Builder clearField(",
          "50576:             com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "50577:           return super.clearField(field);",
          "50578:         }",
          "50579:         @java.lang.Override",
          "50580:         public Builder clearOneof(",
          "50581:             com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "50582:           return super.clearOneof(oneof);",
          "50583:         }",
          "50584:         @java.lang.Override",
          "50585:         public Builder setRepeatedField(",
          "50586:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "50587:             int index, java.lang.Object value) {",
          "50588:           return super.setRepeatedField(field, index, value);",
          "50589:         }",
          "50590:         @java.lang.Override",
          "50591:         public Builder addRepeatedField(",
          "50592:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "50593:             java.lang.Object value) {",
          "50594:           return super.addRepeatedField(field, value);",
          "50595:         }",
          "50596:         @java.lang.Override",
          "50597:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "50598:           if (other instanceof org.mlflow.api.proto.Service.GetMetricHistory.Response) {",
          "50599:             return mergeFrom((org.mlflow.api.proto.Service.GetMetricHistory.Response)other);",
          "50600:           } else {",
          "50601:             super.mergeFrom(other);",
          "50602:             return this;",
          "50603:           }",
          "50604:         }",
          "50606:         public Builder mergeFrom(org.mlflow.api.proto.Service.GetMetricHistory.Response other) {",
          "50607:           if (other == org.mlflow.api.proto.Service.GetMetricHistory.Response.getDefaultInstance()) return this;",
          "50608:           if (metricsBuilder_ == null) {",
          "50609:             if (!other.metrics_.isEmpty()) {",
          "50610:               if (metrics_.isEmpty()) {",
          "50611:                 metrics_ = other.metrics_;",
          "50612:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "50613:               } else {",
          "50614:                 ensureMetricsIsMutable();",
          "50615:                 metrics_.addAll(other.metrics_);",
          "50616:               }",
          "50617:               onChanged();",
          "50618:             }",
          "50619:           } else {",
          "50620:             if (!other.metrics_.isEmpty()) {",
          "50621:               if (metricsBuilder_.isEmpty()) {",
          "50622:                 metricsBuilder_.dispose();",
          "50623:                 metricsBuilder_ = null;",
          "50624:                 metrics_ = other.metrics_;",
          "50625:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "50626:                 metricsBuilder_ =",
          "50627:                   com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "50628:                      getMetricsFieldBuilder() : null;",
          "50629:               } else {",
          "50630:                 metricsBuilder_.addAllMessages(other.metrics_);",
          "50631:               }",
          "50632:             }",
          "50633:           }",
          "50634:           if (other.hasNextPageToken()) {",
          "50635:             bitField0_ |= 0x00000002;",
          "50636:             nextPageToken_ = other.nextPageToken_;",
          "50637:             onChanged();",
          "50638:           }",
          "50639:           this.mergeUnknownFields(other.unknownFields);",
          "50640:           onChanged();",
          "50641:           return this;",
          "50642:         }",
          "50644:         @java.lang.Override",
          "50645:         public final boolean isInitialized() {",
          "50646:           return true;",
          "50647:         }",
          "50649:         @java.lang.Override",
          "50650:         public Builder mergeFrom(",
          "50651:             com.google.protobuf.CodedInputStream input,",
          "50652:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50653:             throws java.io.IOException {",
          "50654:           org.mlflow.api.proto.Service.GetMetricHistory.Response parsedMessage = null;",
          "50655:           try {",
          "50656:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "50657:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "50658:             parsedMessage = (org.mlflow.api.proto.Service.GetMetricHistory.Response) e.getUnfinishedMessage();",
          "50659:             throw e.unwrapIOException();",
          "50660:           } finally {",
          "50661:             if (parsedMessage != null) {",
          "50662:               mergeFrom(parsedMessage);",
          "50663:             }",
          "50664:           }",
          "50665:           return this;",
          "50667:         private int bitField0_;",
          "50669:         private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_ =",
          "50670:           java.util.Collections.emptyList();",
          "50671:         private void ensureMetricsIsMutable() {",
          "50672:           if (!((bitField0_ & 0x00000001) != 0)) {",
          "50673:             metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>(metrics_);",
          "50674:             bitField0_ |= 0x00000001;",
          "50675:            }",
          "50676:         }",
          "50678:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "50679:             org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder> metricsBuilder_;",
          "50688:         public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "50689:           if (metricsBuilder_ == null) {",
          "50690:             return java.util.Collections.unmodifiableList(metrics_);",
          "50691:           } else {",
          "50692:             return metricsBuilder_.getMessageList();",
          "50693:           }",
          "50702:         public int getMetricsCount() {",
          "50703:           if (metricsBuilder_ == null) {",
          "50704:             return metrics_.size();",
          "50705:           } else {",
          "50706:             return metricsBuilder_.getCount();",
          "50707:           }",
          "50716:         public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "50717:           if (metricsBuilder_ == null) {",
          "50718:             return metrics_.get(index);",
          "50719:           } else {",
          "50720:             return metricsBuilder_.getMessage(index);",
          "50721:           }",
          "50730:         public Builder setMetrics(",
          "50731:             int index, org.mlflow.api.proto.Service.Metric value) {",
          "50732:           if (metricsBuilder_ == null) {",
          "50733:             if (value == null) {",
          "50734:               throw new NullPointerException();",
          "50735:             }",
          "50736:             ensureMetricsIsMutable();",
          "50737:             metrics_.set(index, value);",
          "50738:             onChanged();",
          "50739:           } else {",
          "50740:             metricsBuilder_.setMessage(index, value);",
          "50741:           }",
          "50742:           return this;",
          "50751:         public Builder setMetrics(",
          "50752:             int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "50753:           if (metricsBuilder_ == null) {",
          "50754:             ensureMetricsIsMutable();",
          "50755:             metrics_.set(index, builderForValue.build());",
          "50756:             onChanged();",
          "50757:           } else {",
          "50758:             metricsBuilder_.setMessage(index, builderForValue.build());",
          "50759:           }",
          "50760:           return this;",
          "50769:         public Builder addMetrics(org.mlflow.api.proto.Service.Metric value) {",
          "50770:           if (metricsBuilder_ == null) {",
          "50771:             if (value == null) {",
          "50772:               throw new NullPointerException();",
          "50773:             }",
          "50774:             ensureMetricsIsMutable();",
          "50775:             metrics_.add(value);",
          "50776:             onChanged();",
          "50777:           } else {",
          "50778:             metricsBuilder_.addMessage(value);",
          "50779:           }",
          "50789:         public Builder addMetrics(",
          "50790:             int index, org.mlflow.api.proto.Service.Metric value) {",
          "50791:           if (metricsBuilder_ == null) {",
          "50792:             if (value == null) {",
          "50793:               throw new NullPointerException();",
          "50794:             }",
          "50795:             ensureMetricsIsMutable();",
          "50796:             metrics_.add(index, value);",
          "50797:             onChanged();",
          "50798:           } else {",
          "50799:             metricsBuilder_.addMessage(index, value);",
          "50800:           }",
          "50801:           return this;",
          "50810:         public Builder addMetrics(",
          "50811:             org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "50812:           if (metricsBuilder_ == null) {",
          "50813:             ensureMetricsIsMutable();",
          "50814:             metrics_.add(builderForValue.build());",
          "50815:             onChanged();",
          "50816:           } else {",
          "50817:             metricsBuilder_.addMessage(builderForValue.build());",
          "50818:           }",
          "50819:           return this;",
          "50828:         public Builder addMetrics(",
          "50829:             int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "50830:           if (metricsBuilder_ == null) {",
          "50831:             ensureMetricsIsMutable();",
          "50832:             metrics_.add(index, builderForValue.build());",
          "50833:             onChanged();",
          "50834:           } else {",
          "50835:             metricsBuilder_.addMessage(index, builderForValue.build());",
          "50836:           }",
          "50837:           return this;",
          "50846:         public Builder addAllMetrics(",
          "50847:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.Metric> values) {",
          "50848:           if (metricsBuilder_ == null) {",
          "50849:             ensureMetricsIsMutable();",
          "50850:             com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "50851:                 values, metrics_);",
          "50852:             onChanged();",
          "50853:           } else {",
          "50854:             metricsBuilder_.addAllMessages(values);",
          "50855:           }",
          "50856:           return this;",
          "50865:         public Builder clearMetrics() {",
          "50866:           if (metricsBuilder_ == null) {",
          "50867:             metrics_ = java.util.Collections.emptyList();",
          "50868:             bitField0_ = (bitField0_ & ~0x00000001);",
          "50869:             onChanged();",
          "50870:           } else {",
          "50871:             metricsBuilder_.clear();",
          "50873:           return this;",
          "50882:         public Builder removeMetrics(int index) {",
          "50883:           if (metricsBuilder_ == null) {",
          "50884:             ensureMetricsIsMutable();",
          "50885:             metrics_.remove(index);",
          "50886:             onChanged();",
          "50887:           } else {",
          "50888:             metricsBuilder_.remove(index);",
          "50890:           return this;",
          "50899:         public org.mlflow.api.proto.Service.Metric.Builder getMetricsBuilder(",
          "50900:             int index) {",
          "50901:           return getMetricsFieldBuilder().getBuilder(index);",
          "50910:         public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "50911:             int index) {",
          "50912:           if (metricsBuilder_ == null) {",
          "50913:             return metrics_.get(index);  } else {",
          "50914:             return metricsBuilder_.getMessageOrBuilder(index);",
          "50915:           }",
          "50916:         }",
          "50924:         public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "50925:              getMetricsOrBuilderList() {",
          "50926:           if (metricsBuilder_ != null) {",
          "50927:             return metricsBuilder_.getMessageOrBuilderList();",
          "50928:           } else {",
          "50929:             return java.util.Collections.unmodifiableList(metrics_);",
          "50939:         public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder() {",
          "50940:           return getMetricsFieldBuilder().addBuilder(",
          "50941:               org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "50950:         public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder(",
          "50951:             int index) {",
          "50952:           return getMetricsFieldBuilder().addBuilder(",
          "50953:               index, org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "50962:         public java.util.List<org.mlflow.api.proto.Service.Metric.Builder>",
          "50963:              getMetricsBuilderList() {",
          "50964:           return getMetricsFieldBuilder().getBuilderList();",
          "50965:         }",
          "50966:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "50967:             org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>",
          "50968:             getMetricsFieldBuilder() {",
          "50969:           if (metricsBuilder_ == null) {",
          "50970:             metricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "50971:                 org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>(",
          "50972:                     metrics_,",
          "50973:                     ((bitField0_ & 0x00000001) != 0),",
          "50974:                     getParentForChildren(),",
          "50975:                     isClean());",
          "50976:             metrics_ = null;",
          "50977:           }",
          "50978:           return metricsBuilder_;",
          "50981:         private java.lang.Object nextPageToken_ = \"\";",
          "50991:         public boolean hasNextPageToken() {",
          "50992:           return ((bitField0_ & 0x00000002) != 0);",
          "50993:         }",
          "51003:         public java.lang.String getNextPageToken() {",
          "51004:           java.lang.Object ref = nextPageToken_;",
          "51005:           if (!(ref instanceof java.lang.String)) {",
          "51006:             com.google.protobuf.ByteString bs =",
          "51007:                 (com.google.protobuf.ByteString) ref;",
          "51008:             java.lang.String s = bs.toStringUtf8();",
          "51009:             if (bs.isValidUtf8()) {",
          "51010:               nextPageToken_ = s;",
          "51011:             }",
          "51012:             return s;",
          "51013:           } else {",
          "51014:             return (java.lang.String) ref;",
          "51026:         public com.google.protobuf.ByteString",
          "51027:             getNextPageTokenBytes() {",
          "51028:           java.lang.Object ref = nextPageToken_;",
          "51029:           if (ref instanceof String) {",
          "51030:             com.google.protobuf.ByteString b =",
          "51031:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "51032:                     (java.lang.String) ref);",
          "51033:             nextPageToken_ = b;",
          "51034:             return b;",
          "51035:           } else {",
          "51036:             return (com.google.protobuf.ByteString) ref;",
          "51037:           }",
          "51049:         public Builder setNextPageToken(",
          "51050:             java.lang.String value) {",
          "51051:           if (value == null) {",
          "51054:   bitField0_ |= 0x00000002;",
          "51055:           nextPageToken_ = value;",
          "51056:           onChanged();",
          "51057:           return this;",
          "51058:         }",
          "51068:         public Builder clearNextPageToken() {",
          "51069:           bitField0_ = (bitField0_ & ~0x00000002);",
          "51070:           nextPageToken_ = getDefaultInstance().getNextPageToken();",
          "51071:           onChanged();",
          "51072:           return this;",
          "51073:         }",
          "51084:         public Builder setNextPageTokenBytes(",
          "51085:             com.google.protobuf.ByteString value) {",
          "51086:           if (value == null) {",
          "51089:   bitField0_ |= 0x00000002;",
          "51090:           nextPageToken_ = value;",
          "51091:           onChanged();",
          "51092:           return this;",
          "51093:         }",
          "51094:         @java.lang.Override",
          "51095:         public final Builder setUnknownFields(",
          "51096:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "51097:           return super.setUnknownFields(unknownFields);",
          "51098:         }",
          "51100:         @java.lang.Override",
          "51101:         public final Builder mergeUnknownFields(",
          "51102:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "51103:           return super.mergeUnknownFields(unknownFields);",
          "51104:         }",
          "51108:       }",
          "51111:       private static final org.mlflow.api.proto.Service.GetMetricHistory.Response DEFAULT_INSTANCE;",
          "51112:       static {",
          "51113:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetMetricHistory.Response();",
          "51114:       }",
          "51116:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response getDefaultInstance() {",
          "51117:         return DEFAULT_INSTANCE;",
          "51120:       @java.lang.Deprecated public static final com.google.protobuf.Parser<Response>",
          "51121:           PARSER = new com.google.protobuf.AbstractParser<Response>() {",
          "51122:         @java.lang.Override",
          "51123:         public Response parsePartialFrom(",
          "51124:             com.google.protobuf.CodedInputStream input,",
          "51125:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "51126:             throws com.google.protobuf.InvalidProtocolBufferException {",
          "51127:           return new Response(input, extensionRegistry);",
          "51128:         }",
          "51129:       };",
          "51131:       public static com.google.protobuf.Parser<Response> parser() {",
          "51132:         return PARSER;",
          "51133:       }",
          "51135:       @java.lang.Override",
          "51136:       public com.google.protobuf.Parser<Response> getParserForType() {",
          "51137:         return PARSER;",
          "51138:       }",
          "51140:       @java.lang.Override",
          "51141:       public org.mlflow.api.proto.Service.GetMetricHistory.Response getDefaultInstanceForType() {",
          "51142:         return DEFAULT_INSTANCE;",
          "51143:       }",
          "51145:     }",
          "51147:     private int bitField0_;",
          "51148:     public static final int RUN_ID_FIELD_NUMBER = 3;",
          "51149:     private volatile java.lang.Object runId_;",
          "51158:     @java.lang.Override",
          "51159:     public boolean hasRunId() {",
          "51160:       return ((bitField0_ & 0x00000001) != 0);",
          "51161:     }",
          "51170:     @java.lang.Override",
          "51171:     public java.lang.String getRunId() {",
          "51172:       java.lang.Object ref = runId_;",
          "51173:       if (ref instanceof java.lang.String) {",
          "51174:         return (java.lang.String) ref;",
          "51175:       } else {",
          "51176:         com.google.protobuf.ByteString bs =",
          "51177:             (com.google.protobuf.ByteString) ref;",
          "51178:         java.lang.String s = bs.toStringUtf8();",
          "51179:         if (bs.isValidUtf8()) {",
          "51180:           runId_ = s;",
          "51181:         }",
          "51182:         return s;",
          "51183:       }",
          "51184:     }",
          "51193:     @java.lang.Override",
          "51194:     public com.google.protobuf.ByteString",
          "51195:         getRunIdBytes() {",
          "51196:       java.lang.Object ref = runId_;",
          "51197:       if (ref instanceof java.lang.String) {",
          "51198:         com.google.protobuf.ByteString b =",
          "51199:             com.google.protobuf.ByteString.copyFromUtf8(",
          "51200:                 (java.lang.String) ref);",
          "51201:         runId_ = b;",
          "51202:         return b;",
          "51203:       } else {",
          "51204:         return (com.google.protobuf.ByteString) ref;",
          "51205:       }",
          "51206:     }",
          "51208:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "51209:     private volatile java.lang.Object runUuid_;",
          "51219:     @java.lang.Override",
          "51220:     public boolean hasRunUuid() {",
          "51221:       return ((bitField0_ & 0x00000002) != 0);",
          "51222:     }",
          "51232:     @java.lang.Override",
          "51233:     public java.lang.String getRunUuid() {",
          "51234:       java.lang.Object ref = runUuid_;",
          "51235:       if (ref instanceof java.lang.String) {",
          "51236:         return (java.lang.String) ref;",
          "51237:       } else {",
          "51238:         com.google.protobuf.ByteString bs =",
          "51239:             (com.google.protobuf.ByteString) ref;",
          "51240:         java.lang.String s = bs.toStringUtf8();",
          "51241:         if (bs.isValidUtf8()) {",
          "51242:           runUuid_ = s;",
          "51243:         }",
          "51244:         return s;",
          "51245:       }",
          "51246:     }",
          "51257:     public com.google.protobuf.ByteString",
          "51258:         getRunUuidBytes() {",
          "51259:       java.lang.Object ref = runUuid_;",
          "51260:       if (ref instanceof java.lang.String) {",
          "51261:         com.google.protobuf.ByteString b =",
          "51262:             com.google.protobuf.ByteString.copyFromUtf8(",
          "51263:                 (java.lang.String) ref);",
          "51264:         runUuid_ = b;",
          "51265:         return b;",
          "51266:       } else {",
          "51267:         return (com.google.protobuf.ByteString) ref;",
          "51271:     public static final int METRIC_KEY_FIELD_NUMBER = 2;",
          "51272:     private volatile java.lang.Object metricKey_;",
          "51282:     public boolean hasMetricKey() {",
          "51283:       return ((bitField0_ & 0x00000004) != 0);",
          "51294:     public java.lang.String getMetricKey() {",
          "51295:       java.lang.Object ref = metricKey_;",
          "",
          "---------------",
          "--- Hunk 660 ---",
          "[Context before]",
          "43865:             (com.google.protobuf.ByteString) ref;",
          "43866:         java.lang.String s = bs.toStringUtf8();",
          "43867:         if (bs.isValidUtf8()) {",
          "43869:         }",
          "43870:         return s;",
          "43871:       }",
          "43872:     }",
          "43881:     @java.lang.Override",
          "43882:     public com.google.protobuf.ByteString",
          "43885:       if (ref instanceof java.lang.String) {",
          "43886:         com.google.protobuf.ByteString b =",
          "43887:             com.google.protobuf.ByteString.copyFromUtf8(",
          "43888:                 (java.lang.String) ref);",
          "43890:         return b;",
          "43891:       } else {",
          "43892:         return (com.google.protobuf.ByteString) ref;",
          "43893:       }",
          "43894:     }",
          "43906:     @java.lang.Override",
          "43909:     }",
          "43918:     @java.lang.Override",
          "43921:     }",
          "43933:     @java.lang.Override",
          "43936:     }",
          "43945:     @java.lang.Override",
          "43948:     }",
          "43950:     private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "43868:           path_ = s;",
          "43883:         getPathBytes() {",
          "43884:       java.lang.Object ref = path_;",
          "43889:         path_ = b;",
          "43896:     public static final int IS_DIR_FIELD_NUMBER = 2;",
          "43897:     private boolean isDir_;",
          "43907:     public boolean hasIsDir() {",
          "43908:       return ((bitField0_ & 0x00000002) != 0);",
          "43919:     public boolean getIsDir() {",
          "43920:       return isDir_;",
          "43923:     public static final int FILE_SIZE_FIELD_NUMBER = 3;",
          "43924:     private long fileSize_;",
          "43934:     public boolean hasFileSize() {",
          "43935:       return ((bitField0_ & 0x00000004) != 0);",
          "43946:     public long getFileSize() {",
          "43947:       return fileSize_;",
          "",
          "[Added Lines]",
          "51303:           metricKey_ = s;",
          "51318:         getMetricKeyBytes() {",
          "51319:       java.lang.Object ref = metricKey_;",
          "51324:         metricKey_ = b;",
          "51331:     public static final int PAGE_TOKEN_FIELD_NUMBER = 4;",
          "51332:     private volatile java.lang.Object pageToken_;",
          "51342:     public boolean hasPageToken() {",
          "51343:       return ((bitField0_ & 0x00000008) != 0);",
          "51354:     public java.lang.String getPageToken() {",
          "51355:       java.lang.Object ref = pageToken_;",
          "51356:       if (ref instanceof java.lang.String) {",
          "51357:         return (java.lang.String) ref;",
          "51358:       } else {",
          "51359:         com.google.protobuf.ByteString bs =",
          "51360:             (com.google.protobuf.ByteString) ref;",
          "51361:         java.lang.String s = bs.toStringUtf8();",
          "51362:         if (bs.isValidUtf8()) {",
          "51363:           pageToken_ = s;",
          "51364:         }",
          "51365:         return s;",
          "51366:       }",
          "51367:     }",
          "51376:     @java.lang.Override",
          "51377:     public com.google.protobuf.ByteString",
          "51378:         getPageTokenBytes() {",
          "51379:       java.lang.Object ref = pageToken_;",
          "51380:       if (ref instanceof java.lang.String) {",
          "51381:         com.google.protobuf.ByteString b =",
          "51382:             com.google.protobuf.ByteString.copyFromUtf8(",
          "51383:                 (java.lang.String) ref);",
          "51384:         pageToken_ = b;",
          "51385:         return b;",
          "51386:       } else {",
          "51387:         return (com.google.protobuf.ByteString) ref;",
          "51388:       }",
          "51391:     public static final int MAX_RESULTS_FIELD_NUMBER = 5;",
          "51392:     private int maxResults_;",
          "51405:     public boolean hasMaxResults() {",
          "51406:       return ((bitField0_ & 0x00000010) != 0);",
          "51420:     public int getMaxResults() {",
          "51421:       return maxResults_;",
          "",
          "---------------",
          "--- Hunk 661 ---",
          "[Context before]",
          "43961:     @java.lang.Override",
          "43962:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "43963:                         throws java.io.IOException {",
          "43967:       if (((bitField0_ & 0x00000002) != 0)) {",
          "43969:       }",
          "43970:       if (((bitField0_ & 0x00000004) != 0)) {",
          "43972:       }",
          "43973:       unknownFields.writeTo(output);",
          "43974:     }",
          "",
          "[Removed Lines]",
          "43964:       if (((bitField0_ & 0x00000001) != 0)) {",
          "43965:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);",
          "43966:       }",
          "43968:         output.writeBool(2, isDir_);",
          "43971:         output.writeInt64(3, fileSize_);",
          "",
          "[Added Lines]",
          "51439:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "51442:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, metricKey_);",
          "51443:       }",
          "51444:       if (((bitField0_ & 0x00000001) != 0)) {",
          "51445:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runId_);",
          "51446:       }",
          "51447:       if (((bitField0_ & 0x00000008) != 0)) {",
          "51448:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pageToken_);",
          "51449:       }",
          "51450:       if (((bitField0_ & 0x00000010) != 0)) {",
          "51451:         output.writeInt32(5, maxResults_);",
          "",
          "---------------",
          "--- Hunk 662 ---",
          "[Context before]",
          "43979:       if (size != -1) return size;",
          "43981:       size = 0;",
          "43985:       if (((bitField0_ & 0x00000002) != 0)) {",
          "43988:       }",
          "43989:       if (((bitField0_ & 0x00000004) != 0)) {",
          "43990:         size += com.google.protobuf.CodedOutputStream",
          "43992:       }",
          "43993:       size += unknownFields.getSerializedSize();",
          "43994:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "43982:       if (((bitField0_ & 0x00000001) != 0)) {",
          "43983:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);",
          "43984:       }",
          "43986:         size += com.google.protobuf.CodedOutputStream",
          "43987:           .computeBoolSize(2, isDir_);",
          "43991:           .computeInt64Size(3, fileSize_);",
          "",
          "[Added Lines]",
          "51463:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "51466:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, metricKey_);",
          "51467:       }",
          "51468:       if (((bitField0_ & 0x00000001) != 0)) {",
          "51469:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runId_);",
          "51470:       }",
          "51471:       if (((bitField0_ & 0x00000008) != 0)) {",
          "51472:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pageToken_);",
          "51473:       }",
          "51474:       if (((bitField0_ & 0x00000010) != 0)) {",
          "51476:           .computeInt32Size(5, maxResults_);",
          "",
          "---------------",
          "--- Hunk 663 ---",
          "[Context before]",
          "44000:       if (obj == this) {",
          "44001:        return true;",
          "44002:       }",
          "44004:         return super.equals(obj);",
          "44005:       }",
          "44012:       }",
          "44017:       }",
          "44022:       }",
          "44023:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "44024:       return true;",
          "",
          "[Removed Lines]",
          "44003:       if (!(obj instanceof org.mlflow.api.proto.Service.FileInfo)) {",
          "44006:       org.mlflow.api.proto.Service.FileInfo other = (org.mlflow.api.proto.Service.FileInfo) obj;",
          "44008:       if (hasPath() != other.hasPath()) return false;",
          "44009:       if (hasPath()) {",
          "44010:         if (!getPath()",
          "44011:             .equals(other.getPath())) return false;",
          "44013:       if (hasIsDir() != other.hasIsDir()) return false;",
          "44014:       if (hasIsDir()) {",
          "44015:         if (getIsDir()",
          "44016:             != other.getIsDir()) return false;",
          "44018:       if (hasFileSize() != other.hasFileSize()) return false;",
          "44019:       if (hasFileSize()) {",
          "44020:         if (getFileSize()",
          "44021:             != other.getFileSize()) return false;",
          "",
          "[Added Lines]",
          "51488:       if (!(obj instanceof org.mlflow.api.proto.Service.GetMetricHistory)) {",
          "51491:       org.mlflow.api.proto.Service.GetMetricHistory other = (org.mlflow.api.proto.Service.GetMetricHistory) obj;",
          "51493:       if (hasRunId() != other.hasRunId()) return false;",
          "51494:       if (hasRunId()) {",
          "51495:         if (!getRunId()",
          "51496:             .equals(other.getRunId())) return false;",
          "51498:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "51499:       if (hasRunUuid()) {",
          "51500:         if (!getRunUuid()",
          "51501:             .equals(other.getRunUuid())) return false;",
          "51503:       if (hasMetricKey() != other.hasMetricKey()) return false;",
          "51504:       if (hasMetricKey()) {",
          "51505:         if (!getMetricKey()",
          "51506:             .equals(other.getMetricKey())) return false;",
          "51507:       }",
          "51508:       if (hasPageToken() != other.hasPageToken()) return false;",
          "51509:       if (hasPageToken()) {",
          "51510:         if (!getPageToken()",
          "51511:             .equals(other.getPageToken())) return false;",
          "51512:       }",
          "51513:       if (hasMaxResults() != other.hasMaxResults()) return false;",
          "51514:       if (hasMaxResults()) {",
          "51515:         if (getMaxResults()",
          "51516:             != other.getMaxResults()) return false;",
          "",
          "---------------",
          "--- Hunk 664 ---",
          "[Context before]",
          "44031:       }",
          "44032:       int hash = 41;",
          "44033:       hash = (19 * hash) + getDescriptor().hashCode();",
          "44037:       }",
          "44042:       }",
          "44047:       }",
          "44048:       hash = (29 * hash) + unknownFields.hashCode();",
          "44049:       memoizedHashCode = hash;",
          "44050:       return hash;",
          "44051:     }",
          "44054:         java.nio.ByteBuffer data)",
          "44055:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "44056:       return PARSER.parseFrom(data);",
          "44057:     }",
          "44059:         java.nio.ByteBuffer data,",
          "44060:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44061:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "44062:       return PARSER.parseFrom(data, extensionRegistry);",
          "44063:     }",
          "44065:         com.google.protobuf.ByteString data)",
          "44066:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "44067:       return PARSER.parseFrom(data);",
          "44068:     }",
          "44070:         com.google.protobuf.ByteString data,",
          "44071:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44072:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "44073:       return PARSER.parseFrom(data, extensionRegistry);",
          "44074:     }",
          "44076:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "44077:       return PARSER.parseFrom(data);",
          "44078:     }",
          "44080:         byte[] data,",
          "44081:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44082:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "44083:       return PARSER.parseFrom(data, extensionRegistry);",
          "44084:     }",
          "44086:         throws java.io.IOException {",
          "44087:       return com.google.protobuf.GeneratedMessageV3",
          "44088:           .parseWithIOException(PARSER, input);",
          "44089:     }",
          "44091:         java.io.InputStream input,",
          "44092:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44093:         throws java.io.IOException {",
          "44094:       return com.google.protobuf.GeneratedMessageV3",
          "44095:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "44096:     }",
          "44098:         throws java.io.IOException {",
          "44099:       return com.google.protobuf.GeneratedMessageV3",
          "44100:           .parseDelimitedWithIOException(PARSER, input);",
          "44101:     }",
          "44103:         java.io.InputStream input,",
          "44104:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44105:         throws java.io.IOException {",
          "44106:       return com.google.protobuf.GeneratedMessageV3",
          "44107:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "44108:     }",
          "44110:         com.google.protobuf.CodedInputStream input)",
          "44111:         throws java.io.IOException {",
          "44112:       return com.google.protobuf.GeneratedMessageV3",
          "44113:           .parseWithIOException(PARSER, input);",
          "44114:     }",
          "44116:         com.google.protobuf.CodedInputStream input,",
          "44117:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44118:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "44034:       if (hasPath()) {",
          "44035:         hash = (37 * hash) + PATH_FIELD_NUMBER;",
          "44036:         hash = (53 * hash) + getPath().hashCode();",
          "44038:       if (hasIsDir()) {",
          "44039:         hash = (37 * hash) + IS_DIR_FIELD_NUMBER;",
          "44040:         hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(",
          "44041:             getIsDir());",
          "44043:       if (hasFileSize()) {",
          "44044:         hash = (37 * hash) + FILE_SIZE_FIELD_NUMBER;",
          "44045:         hash = (53 * hash) + com.google.protobuf.Internal.hashLong(",
          "44046:             getFileSize());",
          "44053:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "44058:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "44064:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "44069:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "44075:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(byte[] data)",
          "44079:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "44085:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(java.io.InputStream input)",
          "44090:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "44097:     public static org.mlflow.api.proto.Service.FileInfo parseDelimitedFrom(java.io.InputStream input)",
          "44102:     public static org.mlflow.api.proto.Service.FileInfo parseDelimitedFrom(",
          "44109:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "44115:     public static org.mlflow.api.proto.Service.FileInfo parseFrom(",
          "",
          "[Added Lines]",
          "51529:       if (hasRunId()) {",
          "51530:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "51531:         hash = (53 * hash) + getRunId().hashCode();",
          "51533:       if (hasRunUuid()) {",
          "51534:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "51535:         hash = (53 * hash) + getRunUuid().hashCode();",
          "51537:       if (hasMetricKey()) {",
          "51538:         hash = (37 * hash) + METRIC_KEY_FIELD_NUMBER;",
          "51539:         hash = (53 * hash) + getMetricKey().hashCode();",
          "51540:       }",
          "51541:       if (hasPageToken()) {",
          "51542:         hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;",
          "51543:         hash = (53 * hash) + getPageToken().hashCode();",
          "51544:       }",
          "51545:       if (hasMaxResults()) {",
          "51546:         hash = (37 * hash) + MAX_RESULTS_FIELD_NUMBER;",
          "51547:         hash = (53 * hash) + getMaxResults();",
          "51554:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "51559:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "51565:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "51570:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "51576:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(byte[] data)",
          "51580:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "51586:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(java.io.InputStream input)",
          "51591:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "51598:     public static org.mlflow.api.proto.Service.GetMetricHistory parseDelimitedFrom(java.io.InputStream input)",
          "51603:     public static org.mlflow.api.proto.Service.GetMetricHistory parseDelimitedFrom(",
          "51610:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "51616:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "",
          "---------------",
          "--- Hunk 665 ---",
          "[Context before]",
          "44125:     public static Builder newBuilder() {",
          "44126:       return DEFAULT_INSTANCE.toBuilder();",
          "44127:     }",
          "44129:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "44130:     }",
          "44131:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "44128:     public static Builder newBuilder(org.mlflow.api.proto.Service.FileInfo prototype) {",
          "",
          "[Added Lines]",
          "51629:     public static Builder newBuilder(org.mlflow.api.proto.Service.GetMetricHistory prototype) {",
          "",
          "---------------",
          "--- Hunk 666 ---",
          "[Context before]",
          "44141:       return builder;",
          "44142:     }",
          "44150:     public static final class Builder extends",
          "44151:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "44154:       public static final com.google.protobuf.Descriptors.Descriptor",
          "44155:           getDescriptor() {",
          "44157:       }",
          "44159:       @java.lang.Override",
          "44160:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "44161:           internalGetFieldAccessorTable() {",
          "44163:             .ensureFieldAccessorsInitialized(",
          "44165:       }",
          "44168:       private Builder() {",
          "44169:         maybeForceBuilderInitialization();",
          "44170:       }",
          "",
          "[Removed Lines]",
          "44153:         org.mlflow.api.proto.Service.FileInfoOrBuilder {",
          "44156:         return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_descriptor;",
          "44162:         return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_fieldAccessorTable",
          "44164:                 org.mlflow.api.proto.Service.FileInfo.class, org.mlflow.api.proto.Service.FileInfo.Builder.class);",
          "",
          "[Added Lines]",
          "51650:         org.mlflow.api.proto.Service.GetMetricHistoryOrBuilder {",
          "51653:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_descriptor;",
          "51659:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_fieldAccessorTable",
          "51661:                 org.mlflow.api.proto.Service.GetMetricHistory.class, org.mlflow.api.proto.Service.GetMetricHistory.Builder.class);",
          "",
          "---------------",
          "--- Hunk 667 ---",
          "[Context before]",
          "44182:       @java.lang.Override",
          "44183:       public Builder clear() {",
          "44184:         super.clear();",
          "44186:         bitField0_ = (bitField0_ & ~0x00000001);",
          "44188:         bitField0_ = (bitField0_ & ~0x00000002);",
          "44190:         bitField0_ = (bitField0_ & ~0x00000004);",
          "44191:         return this;",
          "44192:       }",
          "44194:       @java.lang.Override",
          "44195:       public com.google.protobuf.Descriptors.Descriptor",
          "44196:           getDescriptorForType() {",
          "44198:       }",
          "44200:       @java.lang.Override",
          "44203:       }",
          "44205:       @java.lang.Override",
          "44208:         if (!result.isInitialized()) {",
          "44209:           throw newUninitializedMessageException(result);",
          "44210:         }",
          "",
          "[Removed Lines]",
          "44185:         path_ = \"\";",
          "44187:         isDir_ = false;",
          "44189:         fileSize_ = 0L;",
          "44197:         return org.mlflow.api.proto.Service.internal_static_mlflow_FileInfo_descriptor;",
          "44201:       public org.mlflow.api.proto.Service.FileInfo getDefaultInstanceForType() {",
          "44202:         return org.mlflow.api.proto.Service.FileInfo.getDefaultInstance();",
          "44206:       public org.mlflow.api.proto.Service.FileInfo build() {",
          "44207:         org.mlflow.api.proto.Service.FileInfo result = buildPartial();",
          "",
          "[Added Lines]",
          "51682:         runId_ = \"\";",
          "51684:         runUuid_ = \"\";",
          "51686:         metricKey_ = \"\";",
          "51688:         pageToken_ = \"\";",
          "51689:         bitField0_ = (bitField0_ & ~0x00000008);",
          "51690:         maxResults_ = 0;",
          "51691:         bitField0_ = (bitField0_ & ~0x00000010);",
          "51698:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_descriptor;",
          "51702:       public org.mlflow.api.proto.Service.GetMetricHistory getDefaultInstanceForType() {",
          "51703:         return org.mlflow.api.proto.Service.GetMetricHistory.getDefaultInstance();",
          "51707:       public org.mlflow.api.proto.Service.GetMetricHistory build() {",
          "51708:         org.mlflow.api.proto.Service.GetMetricHistory result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 668 ---",
          "[Context before]",
          "44212:       }",
          "44214:       @java.lang.Override",
          "44217:         int from_bitField0_ = bitField0_;",
          "44218:         int to_bitField0_ = 0;",
          "44219:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "44220:           to_bitField0_ |= 0x00000001;",
          "44221:         }",
          "44223:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "44225:           to_bitField0_ |= 0x00000002;",
          "44226:         }",
          "44227:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "44229:           to_bitField0_ |= 0x00000004;",
          "44230:         }",
          "44231:         result.bitField0_ = to_bitField0_;",
          "44232:         onBuilt();",
          "44233:         return result;",
          "",
          "[Removed Lines]",
          "44215:       public org.mlflow.api.proto.Service.FileInfo buildPartial() {",
          "44216:         org.mlflow.api.proto.Service.FileInfo result = new org.mlflow.api.proto.Service.FileInfo(this);",
          "44222:         result.path_ = path_;",
          "44224:           result.isDir_ = isDir_;",
          "44228:           result.fileSize_ = fileSize_;",
          "",
          "[Added Lines]",
          "51716:       public org.mlflow.api.proto.Service.GetMetricHistory buildPartial() {",
          "51717:         org.mlflow.api.proto.Service.GetMetricHistory result = new org.mlflow.api.proto.Service.GetMetricHistory(this);",
          "51723:         result.runId_ = runId_;",
          "51727:         result.runUuid_ = runUuid_;",
          "51731:         result.metricKey_ = metricKey_;",
          "51732:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "51733:           to_bitField0_ |= 0x00000008;",
          "51734:         }",
          "51735:         result.pageToken_ = pageToken_;",
          "51736:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "51737:           result.maxResults_ = maxResults_;",
          "51738:           to_bitField0_ |= 0x00000010;",
          "51739:         }",
          "",
          "---------------",
          "--- Hunk 669 ---",
          "[Context before]",
          "44267:       }",
          "44268:       @java.lang.Override",
          "44269:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "44272:         } else {",
          "44273:           super.mergeFrom(other);",
          "44274:           return this;",
          "44275:         }",
          "44276:       }",
          "44281:           bitField0_ |= 0x00000001;",
          "44283:           onChanged();",
          "44284:         }",
          "44287:         }",
          "44290:         }",
          "44291:         this.mergeUnknownFields(other.unknownFields);",
          "44292:         onChanged();",
          "",
          "[Removed Lines]",
          "44270:         if (other instanceof org.mlflow.api.proto.Service.FileInfo) {",
          "44271:           return mergeFrom((org.mlflow.api.proto.Service.FileInfo)other);",
          "44278:       public Builder mergeFrom(org.mlflow.api.proto.Service.FileInfo other) {",
          "44279:         if (other == org.mlflow.api.proto.Service.FileInfo.getDefaultInstance()) return this;",
          "44280:         if (other.hasPath()) {",
          "44282:           path_ = other.path_;",
          "44285:         if (other.hasIsDir()) {",
          "44286:           setIsDir(other.getIsDir());",
          "44288:         if (other.hasFileSize()) {",
          "44289:           setFileSize(other.getFileSize());",
          "",
          "[Added Lines]",
          "51779:         if (other instanceof org.mlflow.api.proto.Service.GetMetricHistory) {",
          "51780:           return mergeFrom((org.mlflow.api.proto.Service.GetMetricHistory)other);",
          "51787:       public Builder mergeFrom(org.mlflow.api.proto.Service.GetMetricHistory other) {",
          "51788:         if (other == org.mlflow.api.proto.Service.GetMetricHistory.getDefaultInstance()) return this;",
          "51789:         if (other.hasRunId()) {",
          "51791:           runId_ = other.runId_;",
          "51794:         if (other.hasRunUuid()) {",
          "51795:           bitField0_ |= 0x00000002;",
          "51796:           runUuid_ = other.runUuid_;",
          "51797:           onChanged();",
          "51799:         if (other.hasMetricKey()) {",
          "51800:           bitField0_ |= 0x00000004;",
          "51801:           metricKey_ = other.metricKey_;",
          "51802:           onChanged();",
          "51803:         }",
          "51804:         if (other.hasPageToken()) {",
          "51805:           bitField0_ |= 0x00000008;",
          "51806:           pageToken_ = other.pageToken_;",
          "51807:           onChanged();",
          "51808:         }",
          "51809:         if (other.hasMaxResults()) {",
          "51810:           setMaxResults(other.getMaxResults());",
          "",
          "---------------",
          "--- Hunk 670 ---",
          "[Context before]",
          "44303:           com.google.protobuf.CodedInputStream input,",
          "44304:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44305:           throws java.io.IOException {",
          "44307:         try {",
          "44308:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "44309:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "44311:           throw e.unwrapIOException();",
          "44312:         } finally {",
          "44313:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "44306:         org.mlflow.api.proto.Service.FileInfo parsedMessage = null;",
          "44310:           parsedMessage = (org.mlflow.api.proto.Service.FileInfo) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "51827:         org.mlflow.api.proto.Service.GetMetricHistory parsedMessage = null;",
          "51831:           parsedMessage = (org.mlflow.api.proto.Service.GetMetricHistory) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 671 ---",
          "[Context before]",
          "44318:       }",
          "44319:       private int bitField0_;",
          "44331:         return ((bitField0_ & 0x00000001) != 0);",
          "44332:       }",
          "44343:         if (!(ref instanceof java.lang.String)) {",
          "44344:           com.google.protobuf.ByteString bs =",
          "44345:               (com.google.protobuf.ByteString) ref;",
          "44346:           java.lang.String s = bs.toStringUtf8();",
          "44347:           if (bs.isValidUtf8()) {",
          "44349:           }",
          "44350:           return s;",
          "44351:         } else {",
          "",
          "[Removed Lines]",
          "44321:       private java.lang.Object path_ = \"\";",
          "44330:       public boolean hasPath() {",
          "44341:       public java.lang.String getPath() {",
          "44342:         java.lang.Object ref = path_;",
          "44348:             path_ = s;",
          "",
          "[Added Lines]",
          "51842:       private java.lang.Object runId_ = \"\";",
          "51851:       public boolean hasRunId() {",
          "51862:       public java.lang.String getRunId() {",
          "51863:         java.lang.Object ref = runId_;",
          "51869:             runId_ = s;",
          "",
          "---------------",
          "--- Hunk 672 ---",
          "[Context before]",
          "44354:       }",
          "44363:       public com.google.protobuf.ByteString",
          "44366:         if (ref instanceof String) {",
          "44367:           com.google.protobuf.ByteString b =",
          "44368:               com.google.protobuf.ByteString.copyFromUtf8(",
          "44369:                   (java.lang.String) ref);",
          "44371:           return b;",
          "44372:         } else {",
          "44373:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "44364:           getPathBytes() {",
          "44365:         java.lang.Object ref = path_;",
          "44370:           path_ = b;",
          "",
          "[Added Lines]",
          "51885:           getRunIdBytes() {",
          "51886:         java.lang.Object ref = runId_;",
          "51891:           runId_ = b;",
          "",
          "---------------",
          "--- Hunk 673 ---",
          "[Context before]",
          "44375:       }",
          "44386:           java.lang.String value) {",
          "44387:         if (value == null) {",
          "44388:     throw new NullPointerException();",
          "44389:   }",
          "44390:   bitField0_ |= 0x00000001;",
          "44392:         onChanged();",
          "44393:         return this;",
          "44394:       }",
          "44404:         bitField0_ = (bitField0_ & ~0x00000001);",
          "44406:         onChanged();",
          "44407:         return this;",
          "44408:       }",
          "44419:           com.google.protobuf.ByteString value) {",
          "44420:         if (value == null) {",
          "44421:     throw new NullPointerException();",
          "44422:   }",
          "44423:   bitField0_ |= 0x00000001;",
          "44425:         onChanged();",
          "44426:         return this;",
          "44427:       }",
          "44440:         return ((bitField0_ & 0x00000002) != 0);",
          "44441:       }",
          "44453:       }",
          "44466:         onChanged();",
          "44467:         return this;",
          "44468:       }",
          "44478:         bitField0_ = (bitField0_ & ~0x00000002);",
          "44480:         onChanged();",
          "44481:         return this;",
          "44482:       }",
          "44495:         return ((bitField0_ & 0x00000004) != 0);",
          "44496:       }",
          "44508:       }",
          "44521:         onChanged();",
          "44522:         return this;",
          "44523:       }",
          "44533:         bitField0_ = (bitField0_ & ~0x00000004);",
          "44535:         onChanged();",
          "44536:         return this;",
          "44537:       }",
          "",
          "[Removed Lines]",
          "44385:       public Builder setPath(",
          "44391:         path_ = value;",
          "44403:       public Builder clearPath() {",
          "44405:         path_ = getDefaultInstance().getPath();",
          "44418:       public Builder setPathBytes(",
          "44424:         path_ = value;",
          "44429:       private boolean isDir_ ;",
          "44438:       @java.lang.Override",
          "44439:       public boolean hasIsDir() {",
          "44450:       @java.lang.Override",
          "44451:       public boolean getIsDir() {",
          "44452:         return isDir_;",
          "44463:       public Builder setIsDir(boolean value) {",
          "44464:         bitField0_ |= 0x00000002;",
          "44465:         isDir_ = value;",
          "44477:       public Builder clearIsDir() {",
          "44479:         isDir_ = false;",
          "44484:       private long fileSize_ ;",
          "44493:       @java.lang.Override",
          "44494:       public boolean hasFileSize() {",
          "44505:       @java.lang.Override",
          "44506:       public long getFileSize() {",
          "44507:         return fileSize_;",
          "44518:       public Builder setFileSize(long value) {",
          "44519:         bitField0_ |= 0x00000004;",
          "44520:         fileSize_ = value;",
          "44532:       public Builder clearFileSize() {",
          "44534:         fileSize_ = 0L;",
          "",
          "[Added Lines]",
          "51906:       public Builder setRunId(",
          "51912:         runId_ = value;",
          "51924:       public Builder clearRunId() {",
          "51926:         runId_ = getDefaultInstance().getRunId();",
          "51939:       public Builder setRunIdBytes(",
          "51945:         runId_ = value;",
          "51950:       private java.lang.Object runUuid_ = \"\";",
          "51960:       public boolean hasRunUuid() {",
          "51972:       public java.lang.String getRunUuid() {",
          "51973:         java.lang.Object ref = runUuid_;",
          "51974:         if (!(ref instanceof java.lang.String)) {",
          "51975:           com.google.protobuf.ByteString bs =",
          "51976:               (com.google.protobuf.ByteString) ref;",
          "51977:           java.lang.String s = bs.toStringUtf8();",
          "51978:           if (bs.isValidUtf8()) {",
          "51979:             runUuid_ = s;",
          "51980:           }",
          "51981:           return s;",
          "51982:         } else {",
          "51983:           return (java.lang.String) ref;",
          "51984:         }",
          "51995:       public com.google.protobuf.ByteString",
          "51996:           getRunUuidBytes() {",
          "51997:         java.lang.Object ref = runUuid_;",
          "51998:         if (ref instanceof String) {",
          "51999:           com.google.protobuf.ByteString b =",
          "52000:               com.google.protobuf.ByteString.copyFromUtf8(",
          "52001:                   (java.lang.String) ref);",
          "52002:           runUuid_ = b;",
          "52003:           return b;",
          "52004:         } else {",
          "52005:           return (com.google.protobuf.ByteString) ref;",
          "52006:         }",
          "52007:       }",
          "52018:       public Builder setRunUuid(",
          "52019:           java.lang.String value) {",
          "52020:         if (value == null) {",
          "52021:     throw new NullPointerException();",
          "52022:   }",
          "52023:   bitField0_ |= 0x00000002;",
          "52024:         runUuid_ = value;",
          "52037:       public Builder clearRunUuid() {",
          "52039:         runUuid_ = getDefaultInstance().getRunUuid();",
          "52040:         onChanged();",
          "52041:         return this;",
          "52042:       }",
          "52053:       public Builder setRunUuidBytes(",
          "52054:           com.google.protobuf.ByteString value) {",
          "52055:         if (value == null) {",
          "52056:     throw new NullPointerException();",
          "52057:   }",
          "52058:   bitField0_ |= 0x00000002;",
          "52059:         runUuid_ = value;",
          "52064:       private java.lang.Object metricKey_ = \"\";",
          "52073:       public boolean hasMetricKey() {",
          "52084:       public java.lang.String getMetricKey() {",
          "52085:         java.lang.Object ref = metricKey_;",
          "52086:         if (!(ref instanceof java.lang.String)) {",
          "52087:           com.google.protobuf.ByteString bs =",
          "52088:               (com.google.protobuf.ByteString) ref;",
          "52089:           java.lang.String s = bs.toStringUtf8();",
          "52090:           if (bs.isValidUtf8()) {",
          "52091:             metricKey_ = s;",
          "52092:           }",
          "52093:           return s;",
          "52094:         } else {",
          "52095:           return (java.lang.String) ref;",
          "52096:         }",
          "52106:       public com.google.protobuf.ByteString",
          "52107:           getMetricKeyBytes() {",
          "52108:         java.lang.Object ref = metricKey_;",
          "52109:         if (ref instanceof String) {",
          "52110:           com.google.protobuf.ByteString b =",
          "52111:               com.google.protobuf.ByteString.copyFromUtf8(",
          "52112:                   (java.lang.String) ref);",
          "52113:           metricKey_ = b;",
          "52114:           return b;",
          "52115:         } else {",
          "52116:           return (com.google.protobuf.ByteString) ref;",
          "52117:         }",
          "52118:       }",
          "52128:       public Builder setMetricKey(",
          "52129:           java.lang.String value) {",
          "52130:         if (value == null) {",
          "52131:     throw new NullPointerException();",
          "52132:   }",
          "52133:   bitField0_ |= 0x00000004;",
          "52134:         metricKey_ = value;",
          "52146:       public Builder clearMetricKey() {",
          "52148:         metricKey_ = getDefaultInstance().getMetricKey();",
          "52149:         onChanged();",
          "52150:         return this;",
          "52151:       }",
          "52161:       public Builder setMetricKeyBytes(",
          "52162:           com.google.protobuf.ByteString value) {",
          "52163:         if (value == null) {",
          "52164:     throw new NullPointerException();",
          "52165:   }",
          "52166:   bitField0_ |= 0x00000004;",
          "52167:         metricKey_ = value;",
          "52168:         onChanged();",
          "52169:         return this;",
          "52170:       }",
          "52172:       private java.lang.Object pageToken_ = \"\";",
          "52181:       public boolean hasPageToken() {",
          "52182:         return ((bitField0_ & 0x00000008) != 0);",
          "52183:       }",
          "52192:       public java.lang.String getPageToken() {",
          "52193:         java.lang.Object ref = pageToken_;",
          "52194:         if (!(ref instanceof java.lang.String)) {",
          "52195:           com.google.protobuf.ByteString bs =",
          "52196:               (com.google.protobuf.ByteString) ref;",
          "52197:           java.lang.String s = bs.toStringUtf8();",
          "52198:           if (bs.isValidUtf8()) {",
          "52199:             pageToken_ = s;",
          "52200:           }",
          "52201:           return s;",
          "52202:         } else {",
          "52203:           return (java.lang.String) ref;",
          "52204:         }",
          "52205:       }",
          "52214:       public com.google.protobuf.ByteString",
          "52215:           getPageTokenBytes() {",
          "52216:         java.lang.Object ref = pageToken_;",
          "52217:         if (ref instanceof String) {",
          "52218:           com.google.protobuf.ByteString b =",
          "52219:               com.google.protobuf.ByteString.copyFromUtf8(",
          "52220:                   (java.lang.String) ref);",
          "52221:           pageToken_ = b;",
          "52222:           return b;",
          "52223:         } else {",
          "52224:           return (com.google.protobuf.ByteString) ref;",
          "52225:         }",
          "52226:       }",
          "52236:       public Builder setPageToken(",
          "52237:           java.lang.String value) {",
          "52238:         if (value == null) {",
          "52239:     throw new NullPointerException();",
          "52240:   }",
          "52241:   bitField0_ |= 0x00000008;",
          "52242:         pageToken_ = value;",
          "52243:         onChanged();",
          "52244:         return this;",
          "52245:       }",
          "52254:       public Builder clearPageToken() {",
          "52255:         bitField0_ = (bitField0_ & ~0x00000008);",
          "52256:         pageToken_ = getDefaultInstance().getPageToken();",
          "52257:         onChanged();",
          "52258:         return this;",
          "52259:       }",
          "52269:       public Builder setPageTokenBytes(",
          "52270:           com.google.protobuf.ByteString value) {",
          "52271:         if (value == null) {",
          "52272:     throw new NullPointerException();",
          "52273:   }",
          "52274:   bitField0_ |= 0x00000008;",
          "52275:         pageToken_ = value;",
          "52276:         onChanged();",
          "52277:         return this;",
          "52278:       }",
          "52280:       private int maxResults_ ;",
          "52292:       @java.lang.Override",
          "52293:       public boolean hasMaxResults() {",
          "52294:         return ((bitField0_ & 0x00000010) != 0);",
          "52295:       }",
          "52307:       @java.lang.Override",
          "52308:       public int getMaxResults() {",
          "52309:         return maxResults_;",
          "52310:       }",
          "52323:       public Builder setMaxResults(int value) {",
          "52324:         bitField0_ |= 0x00000010;",
          "52325:         maxResults_ = value;",
          "52326:         onChanged();",
          "52327:         return this;",
          "52328:       }",
          "52340:       public Builder clearMaxResults() {",
          "52341:         bitField0_ = (bitField0_ & ~0x00000010);",
          "52342:         maxResults_ = 0;",
          "",
          "---------------",
          "--- Hunk 674 ---",
          "[Context before]",
          "44548:       }",
          "44552:     }",
          "44556:     static {",
          "44558:     }",
          "44561:       return DEFAULT_INSTANCE;",
          "44562:     }",
          "44566:       @java.lang.Override",
          "44568:           com.google.protobuf.CodedInputStream input,",
          "44569:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44570:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "44572:       }",
          "44573:     };",
          "44576:       return PARSER;",
          "44577:     }",
          "44579:     @java.lang.Override",
          "44581:       return PARSER;",
          "44582:     }",
          "44584:     @java.lang.Override",
          "44586:       return DEFAULT_INSTANCE;",
          "44587:     }",
          "44589:   }",
          "44593:       com.google.protobuf.MessageOrBuilder {",
          "44603:     boolean hasRunId();",
          "44612:     java.lang.String getRunId();",
          "44621:     com.google.protobuf.ByteString",
          "",
          "[Removed Lines]",
          "44555:     private static final org.mlflow.api.proto.Service.FileInfo DEFAULT_INSTANCE;",
          "44557:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.FileInfo();",
          "44560:     public static org.mlflow.api.proto.Service.FileInfo getDefaultInstance() {",
          "44564:     @java.lang.Deprecated public static final com.google.protobuf.Parser<FileInfo>",
          "44565:         PARSER = new com.google.protobuf.AbstractParser<FileInfo>() {",
          "44567:       public FileInfo parsePartialFrom(",
          "44571:         return new FileInfo(input, extensionRegistry);",
          "44575:     public static com.google.protobuf.Parser<FileInfo> parser() {",
          "44580:     public com.google.protobuf.Parser<FileInfo> getParserForType() {",
          "44585:     public org.mlflow.api.proto.Service.FileInfo getDefaultInstanceForType() {",
          "44591:   public interface GetMetricHistoryOrBuilder extends",
          "",
          "[Added Lines]",
          "52363:     private static final org.mlflow.api.proto.Service.GetMetricHistory DEFAULT_INSTANCE;",
          "52365:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetMetricHistory();",
          "52368:     public static org.mlflow.api.proto.Service.GetMetricHistory getDefaultInstance() {",
          "52372:     @java.lang.Deprecated public static final com.google.protobuf.Parser<GetMetricHistory>",
          "52373:         PARSER = new com.google.protobuf.AbstractParser<GetMetricHistory>() {",
          "52375:       public GetMetricHistory parsePartialFrom(",
          "52379:         return new GetMetricHistory(input, extensionRegistry);",
          "52383:     public static com.google.protobuf.Parser<GetMetricHistory> parser() {",
          "52388:     public com.google.protobuf.Parser<GetMetricHistory> getParserForType() {",
          "52393:     public org.mlflow.api.proto.Service.GetMetricHistory getDefaultInstanceForType() {",
          "52399:   public interface LogBatchOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 675 ---",
          "[Context before]",
          "44738:   }",
          "44743:       com.google.protobuf.GeneratedMessageV3 implements",
          "44746:   private static final long serialVersionUID = 0L;",
          "44749:       super(builder);",
          "44750:     }",
          "44752:       runId_ = \"\";",
          "44756:     }",
          "44758:     @java.lang.Override",
          "44759:     @SuppressWarnings({\"unused\"})",
          "44760:     protected java.lang.Object newInstance(",
          "44761:         UnusedPrivateParameter unused) {",
          "44763:     }",
          "44765:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "44633:     boolean hasRunUuid();",
          "44643:     java.lang.String getRunUuid();",
          "44653:     com.google.protobuf.ByteString",
          "44654:         getRunUuidBytes();",
          "44664:     boolean hasMetricKey();",
          "44673:     java.lang.String getMetricKey();",
          "44682:     com.google.protobuf.ByteString",
          "44683:         getMetricKeyBytes();",
          "44693:     boolean hasPageToken();",
          "44702:     java.lang.String getPageToken();",
          "44711:     com.google.protobuf.ByteString",
          "44712:         getPageTokenBytes();",
          "44725:     boolean hasMaxResults();",
          "44737:     int getMaxResults();",
          "44742:   public static final class GetMetricHistory extends",
          "44745:       GetMetricHistoryOrBuilder {",
          "44748:     private GetMetricHistory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "44751:     private GetMetricHistory() {",
          "44753:       runUuid_ = \"\";",
          "44754:       metricKey_ = \"\";",
          "44755:       pageToken_ = \"\";",
          "44762:       return new GetMetricHistory();",
          "",
          "[Added Lines]",
          "52440:     java.util.List<org.mlflow.api.proto.Service.Metric>",
          "52441:         getMetricsList();",
          "52450:     org.mlflow.api.proto.Service.Metric getMetrics(int index);",
          "52459:     int getMetricsCount();",
          "52468:     java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "52469:         getMetricsOrBuilderList();",
          "52478:     org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "52479:         int index);",
          "52489:     java.util.List<org.mlflow.api.proto.Service.Param>",
          "52490:         getParamsList();",
          "52499:     org.mlflow.api.proto.Service.Param getParams(int index);",
          "52508:     int getParamsCount();",
          "52517:     java.util.List<? extends org.mlflow.api.proto.Service.ParamOrBuilder>",
          "52518:         getParamsOrBuilderList();",
          "52527:     org.mlflow.api.proto.Service.ParamOrBuilder getParamsOrBuilder(",
          "52528:         int index);",
          "52538:     java.util.List<org.mlflow.api.proto.Service.RunTag>",
          "52539:         getTagsList();",
          "52548:     org.mlflow.api.proto.Service.RunTag getTags(int index);",
          "52557:     int getTagsCount();",
          "52566:     java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "52567:         getTagsOrBuilderList();",
          "52576:     org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "52577:         int index);",
          "52582:   public static final class LogBatch extends",
          "52585:       LogBatchOrBuilder {",
          "52588:     private LogBatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "52591:     private LogBatch() {",
          "52593:       metrics_ = java.util.Collections.emptyList();",
          "52594:       params_ = java.util.Collections.emptyList();",
          "52595:       tags_ = java.util.Collections.emptyList();",
          "52602:       return new LogBatch();",
          "",
          "---------------",
          "--- Hunk 676 ---",
          "[Context before]",
          "44767:     getUnknownFields() {",
          "44768:       return this.unknownFields;",
          "44769:     }",
          "44771:         com.google.protobuf.CodedInputStream input,",
          "44772:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "44773:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "44770:     private GetMetricHistory(",
          "",
          "[Added Lines]",
          "52610:     private LogBatch(",
          "",
          "---------------",
          "--- Hunk 677 ---",
          "[Context before]",
          "44788:               break;",
          "44789:             case 10: {",
          "44790:               com.google.protobuf.ByteString bs = input.readBytes();",
          "44793:               break;",
          "44794:             }",
          "44795:             case 18: {",
          "44799:               break;",
          "44800:             }",
          "44801:             case 26: {",
          "44805:               break;",
          "44806:             }",
          "44807:             case 34: {",
          "44816:               break;",
          "44817:             }",
          "44818:             default: {",
          "",
          "[Removed Lines]",
          "44791:               bitField0_ |= 0x00000002;",
          "44792:               runUuid_ = bs;",
          "44796:               com.google.protobuf.ByteString bs = input.readBytes();",
          "44797:               bitField0_ |= 0x00000004;",
          "44798:               metricKey_ = bs;",
          "44802:               com.google.protobuf.ByteString bs = input.readBytes();",
          "44803:               bitField0_ |= 0x00000001;",
          "44804:               runId_ = bs;",
          "44808:               com.google.protobuf.ByteString bs = input.readBytes();",
          "44809:               bitField0_ |= 0x00000008;",
          "44810:               pageToken_ = bs;",
          "44811:               break;",
          "44812:             }",
          "44813:             case 40: {",
          "44814:               bitField0_ |= 0x00000010;",
          "44815:               maxResults_ = input.readInt32();",
          "",
          "[Added Lines]",
          "52631:               bitField0_ |= 0x00000001;",
          "52632:               runId_ = bs;",
          "52636:               if (!((mutable_bitField0_ & 0x00000002) != 0)) {",
          "52637:                 metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>();",
          "52638:                 mutable_bitField0_ |= 0x00000002;",
          "52639:               }",
          "52640:               metrics_.add(",
          "52641:                   input.readMessage(org.mlflow.api.proto.Service.Metric.PARSER, extensionRegistry));",
          "52645:               if (!((mutable_bitField0_ & 0x00000004) != 0)) {",
          "52646:                 params_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Param>();",
          "52647:                 mutable_bitField0_ |= 0x00000004;",
          "52648:               }",
          "52649:               params_.add(",
          "52650:                   input.readMessage(org.mlflow.api.proto.Service.Param.PARSER, extensionRegistry));",
          "52654:               if (!((mutable_bitField0_ & 0x00000008) != 0)) {",
          "52655:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>();",
          "52656:                 mutable_bitField0_ |= 0x00000008;",
          "52657:               }",
          "52658:               tags_.add(",
          "52659:                   input.readMessage(org.mlflow.api.proto.Service.RunTag.PARSER, extensionRegistry));",
          "",
          "---------------",
          "--- Hunk 678 ---",
          "[Context before]",
          "44830:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "44831:             e).setUnfinishedMessage(this);",
          "44832:       } finally {",
          "44833:         this.unknownFields = unknownFields.build();",
          "44834:         makeExtensionsImmutable();",
          "44835:       }",
          "44836:     }",
          "44837:     public static final com.google.protobuf.Descriptors.Descriptor",
          "44838:         getDescriptor() {",
          "44840:     }",
          "44842:     @java.lang.Override",
          "44843:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "44844:         internalGetFieldAccessorTable() {",
          "44846:           .ensureFieldAccessorsInitialized(",
          "44848:     }",
          "44850:     public interface ResponseOrBuilder extends",
          "44852:         com.google.protobuf.MessageOrBuilder {",
          "44929:     }",
          "44933:     public static final class Response extends",
          "44934:         com.google.protobuf.GeneratedMessageV3 implements",
          "44936:         ResponseOrBuilder {",
          "44937:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "44839:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_descriptor;",
          "44845:       return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_fieldAccessorTable",
          "44847:               org.mlflow.api.proto.Service.GetMetricHistory.class, org.mlflow.api.proto.Service.GetMetricHistory.Builder.class);",
          "44861:       java.util.List<org.mlflow.api.proto.Service.Metric>",
          "44862:           getMetricsList();",
          "44870:       org.mlflow.api.proto.Service.Metric getMetrics(int index);",
          "44878:       int getMetricsCount();",
          "44886:       java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "44887:           getMetricsOrBuilderList();",
          "44895:       org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "44896:           int index);",
          "44907:       boolean hasNextPageToken();",
          "44917:       java.lang.String getNextPageToken();",
          "44927:       com.google.protobuf.ByteString",
          "44928:           getNextPageTokenBytes();",
          "",
          "[Added Lines]",
          "52677:         if (((mutable_bitField0_ & 0x00000002) != 0)) {",
          "52678:           metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "52679:         }",
          "52680:         if (((mutable_bitField0_ & 0x00000004) != 0)) {",
          "52681:           params_ = java.util.Collections.unmodifiableList(params_);",
          "52682:         }",
          "52683:         if (((mutable_bitField0_ & 0x00000008) != 0)) {",
          "52684:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "52685:         }",
          "52692:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_descriptor;",
          "52698:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_fieldAccessorTable",
          "52700:               org.mlflow.api.proto.Service.LogBatch.class, org.mlflow.api.proto.Service.LogBatch.Builder.class);",
          "",
          "---------------",
          "--- Hunk 679 ---",
          "[Context before]",
          "44940:         super(builder);",
          "44941:       }",
          "44942:       private Response() {",
          "44945:       }",
          "44947:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "44943:         metrics_ = java.util.Collections.emptyList();",
          "44944:         nextPageToken_ = \"\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 680 ---",
          "[Context before]",
          "44964:         if (extensionRegistry == null) {",
          "44965:           throw new java.lang.NullPointerException();",
          "44966:         }",
          "44968:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "44969:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "44970:         try {",
          "",
          "[Removed Lines]",
          "44967:         int mutable_bitField0_ = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 681 ---",
          "[Context before]",
          "44975:               case 0:",
          "44976:                 done = true;",
          "44977:                 break;",
          "44993:               default: {",
          "44994:                 if (!parseUnknownField(",
          "44995:                     input, unknownFields, extensionRegistry, tag)) {",
          "",
          "[Removed Lines]",
          "44978:               case 10: {",
          "44979:                 if (!((mutable_bitField0_ & 0x00000001) != 0)) {",
          "44980:                   metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>();",
          "44981:                   mutable_bitField0_ |= 0x00000001;",
          "44982:                 }",
          "44983:                 metrics_.add(",
          "44984:                     input.readMessage(org.mlflow.api.proto.Service.Metric.PARSER, extensionRegistry));",
          "44985:                 break;",
          "44986:               }",
          "44987:               case 18: {",
          "44988:                 com.google.protobuf.ByteString bs = input.readBytes();",
          "44989:                 bitField0_ |= 0x00000001;",
          "44990:                 nextPageToken_ = bs;",
          "44991:                 break;",
          "44992:               }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 682 ---",
          "[Context before]",
          "45005:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "45006:               e).setUnfinishedMessage(this);",
          "45007:         } finally {",
          "45011:           this.unknownFields = unknownFields.build();",
          "45012:           makeExtensionsImmutable();",
          "45013:         }",
          "45014:       }",
          "45015:       public static final com.google.protobuf.Descriptors.Descriptor",
          "45016:           getDescriptor() {",
          "45018:       }",
          "45020:       @java.lang.Override",
          "45021:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "45022:           internalGetFieldAccessorTable() {",
          "45024:             .ensureFieldAccessorsInitialized(",
          "45150:       }",
          "45152:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "45008:           if (((mutable_bitField0_ & 0x00000001) != 0)) {",
          "45009:             metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "45010:           }",
          "45017:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_descriptor;",
          "45023:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_fieldAccessorTable",
          "45025:                 org.mlflow.api.proto.Service.GetMetricHistory.Response.class, org.mlflow.api.proto.Service.GetMetricHistory.Response.Builder.class);",
          "45026:       }",
          "45028:       private int bitField0_;",
          "45029:       public static final int METRICS_FIELD_NUMBER = 1;",
          "45030:       private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_;",
          "45038:       @java.lang.Override",
          "45039:       public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "45040:         return metrics_;",
          "45041:       }",
          "45049:       @java.lang.Override",
          "45050:       public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "45051:           getMetricsOrBuilderList() {",
          "45052:         return metrics_;",
          "45053:       }",
          "45061:       @java.lang.Override",
          "45062:       public int getMetricsCount() {",
          "45063:         return metrics_.size();",
          "45064:       }",
          "45072:       @java.lang.Override",
          "45073:       public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "45074:         return metrics_.get(index);",
          "45075:       }",
          "45083:       @java.lang.Override",
          "45084:       public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "45085:           int index) {",
          "45086:         return metrics_.get(index);",
          "45087:       }",
          "45089:       public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;",
          "45090:       private volatile java.lang.Object nextPageToken_;",
          "45100:       @java.lang.Override",
          "45101:       public boolean hasNextPageToken() {",
          "45102:         return ((bitField0_ & 0x00000001) != 0);",
          "45103:       }",
          "45113:       @java.lang.Override",
          "45114:       public java.lang.String getNextPageToken() {",
          "45115:         java.lang.Object ref = nextPageToken_;",
          "45116:         if (ref instanceof java.lang.String) {",
          "45117:           return (java.lang.String) ref;",
          "45118:         } else {",
          "45119:           com.google.protobuf.ByteString bs =",
          "45120:               (com.google.protobuf.ByteString) ref;",
          "45121:           java.lang.String s = bs.toStringUtf8();",
          "45122:           if (bs.isValidUtf8()) {",
          "45123:             nextPageToken_ = s;",
          "45124:           }",
          "45125:           return s;",
          "45126:         }",
          "45127:       }",
          "45137:       @java.lang.Override",
          "45138:       public com.google.protobuf.ByteString",
          "45139:           getNextPageTokenBytes() {",
          "45140:         java.lang.Object ref = nextPageToken_;",
          "45141:         if (ref instanceof java.lang.String) {",
          "45142:           com.google.protobuf.ByteString b =",
          "45143:               com.google.protobuf.ByteString.copyFromUtf8(",
          "45144:                   (java.lang.String) ref);",
          "45145:           nextPageToken_ = b;",
          "45146:           return b;",
          "45147:         } else {",
          "45148:           return (com.google.protobuf.ByteString) ref;",
          "45149:         }",
          "",
          "[Added Lines]",
          "52773:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_descriptor;",
          "52779:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_fieldAccessorTable",
          "52781:                 org.mlflow.api.proto.Service.LogBatch.Response.class, org.mlflow.api.proto.Service.LogBatch.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 683 ---",
          "[Context before]",
          "45163:       @java.lang.Override",
          "45164:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "45165:                           throws java.io.IOException {",
          "45172:         unknownFields.writeTo(output);",
          "45173:       }",
          "",
          "[Removed Lines]",
          "45166:         for (int i = 0; i < metrics_.size(); i++) {",
          "45167:           output.writeMessage(1, metrics_.get(i));",
          "45168:         }",
          "45169:         if (((bitField0_ & 0x00000001) != 0)) {",
          "45170:           com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);",
          "45171:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 684 ---",
          "[Context before]",
          "45178:         if (size != -1) return size;",
          "45180:         size = 0;",
          "45188:         size += unknownFields.getSerializedSize();",
          "45189:         memoizedSize = size;",
          "45190:         return size;",
          "",
          "[Removed Lines]",
          "45181:         for (int i = 0; i < metrics_.size(); i++) {",
          "45182:           size += com.google.protobuf.CodedOutputStream",
          "45183:             .computeMessageSize(1, metrics_.get(i));",
          "45184:         }",
          "45185:         if (((bitField0_ & 0x00000001) != 0)) {",
          "45186:           size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);",
          "45187:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 685 ---",
          "[Context before]",
          "45195:         if (obj == this) {",
          "45196:          return true;",
          "45197:         }",
          "45199:           return super.equals(obj);",
          "45200:         }",
          "45210:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "45211:         return true;",
          "45212:       }",
          "",
          "[Removed Lines]",
          "45198:         if (!(obj instanceof org.mlflow.api.proto.Service.GetMetricHistory.Response)) {",
          "45201:         org.mlflow.api.proto.Service.GetMetricHistory.Response other = (org.mlflow.api.proto.Service.GetMetricHistory.Response) obj;",
          "45203:         if (!getMetricsList()",
          "45204:             .equals(other.getMetricsList())) return false;",
          "45205:         if (hasNextPageToken() != other.hasNextPageToken()) return false;",
          "45206:         if (hasNextPageToken()) {",
          "45207:           if (!getNextPageToken()",
          "45208:               .equals(other.getNextPageToken())) return false;",
          "45209:         }",
          "",
          "[Added Lines]",
          "52817:         if (!(obj instanceof org.mlflow.api.proto.Service.LogBatch.Response)) {",
          "52820:         org.mlflow.api.proto.Service.LogBatch.Response other = (org.mlflow.api.proto.Service.LogBatch.Response) obj;",
          "",
          "---------------",
          "--- Hunk 686 ---",
          "[Context before]",
          "45218:         }",
          "45219:         int hash = 41;",
          "45220:         hash = (19 * hash) + getDescriptor().hashCode();",
          "45229:         hash = (29 * hash) + unknownFields.hashCode();",
          "45230:         memoizedHashCode = hash;",
          "45231:         return hash;",
          "45232:       }",
          "45235:           java.nio.ByteBuffer data)",
          "45236:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "45237:         return PARSER.parseFrom(data);",
          "45238:       }",
          "45240:           java.nio.ByteBuffer data,",
          "45241:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45242:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "45243:         return PARSER.parseFrom(data, extensionRegistry);",
          "45244:       }",
          "45246:           com.google.protobuf.ByteString data)",
          "45247:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "45248:         return PARSER.parseFrom(data);",
          "45249:       }",
          "45251:           com.google.protobuf.ByteString data,",
          "45252:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45253:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "45254:         return PARSER.parseFrom(data, extensionRegistry);",
          "45255:       }",
          "45257:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "45258:         return PARSER.parseFrom(data);",
          "45259:       }",
          "45261:           byte[] data,",
          "45262:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45263:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "45264:         return PARSER.parseFrom(data, extensionRegistry);",
          "45265:       }",
          "45267:           throws java.io.IOException {",
          "45268:         return com.google.protobuf.GeneratedMessageV3",
          "45269:             .parseWithIOException(PARSER, input);",
          "45270:       }",
          "45272:           java.io.InputStream input,",
          "45273:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45274:           throws java.io.IOException {",
          "45275:         return com.google.protobuf.GeneratedMessageV3",
          "45276:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "45277:       }",
          "45279:           throws java.io.IOException {",
          "45280:         return com.google.protobuf.GeneratedMessageV3",
          "45281:             .parseDelimitedWithIOException(PARSER, input);",
          "45282:       }",
          "45284:           java.io.InputStream input,",
          "45285:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45286:           throws java.io.IOException {",
          "45287:         return com.google.protobuf.GeneratedMessageV3",
          "45288:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "45289:       }",
          "45291:           com.google.protobuf.CodedInputStream input)",
          "45292:           throws java.io.IOException {",
          "45293:         return com.google.protobuf.GeneratedMessageV3",
          "45294:             .parseWithIOException(PARSER, input);",
          "45295:       }",
          "45297:           com.google.protobuf.CodedInputStream input,",
          "45298:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45299:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "45221:         if (getMetricsCount() > 0) {",
          "45222:           hash = (37 * hash) + METRICS_FIELD_NUMBER;",
          "45223:           hash = (53 * hash) + getMetricsList().hashCode();",
          "45224:         }",
          "45225:         if (hasNextPageToken()) {",
          "45226:           hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;",
          "45227:           hash = (53 * hash) + getNextPageToken().hashCode();",
          "45228:         }",
          "45234:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "45239:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "45245:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "45250:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "45256:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(byte[] data)",
          "45260:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "45266:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(java.io.InputStream input)",
          "45271:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "45278:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseDelimitedFrom(java.io.InputStream input)",
          "45283:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseDelimitedFrom(",
          "45290:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "45296:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response parseFrom(",
          "",
          "[Added Lines]",
          "52838:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "52843:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "52849:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "52854:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "52860:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(byte[] data)",
          "52864:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "52870:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(java.io.InputStream input)",
          "52875:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "52882:       public static org.mlflow.api.proto.Service.LogBatch.Response parseDelimitedFrom(java.io.InputStream input)",
          "52887:       public static org.mlflow.api.proto.Service.LogBatch.Response parseDelimitedFrom(",
          "52894:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "52900:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 687 ---",
          "[Context before]",
          "45306:       public static Builder newBuilder() {",
          "45307:         return DEFAULT_INSTANCE.toBuilder();",
          "45308:       }",
          "45310:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "45311:       }",
          "45312:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "45309:       public static Builder newBuilder(org.mlflow.api.proto.Service.GetMetricHistory.Response prototype) {",
          "",
          "[Added Lines]",
          "52913:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogBatch.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 688 ---",
          "[Context before]",
          "45322:         return builder;",
          "45323:       }",
          "45327:       public static final class Builder extends",
          "45328:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "45331:         public static final com.google.protobuf.Descriptors.Descriptor",
          "45332:             getDescriptor() {",
          "45334:         }",
          "45336:         @java.lang.Override",
          "45337:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "45338:             internalGetFieldAccessorTable() {",
          "45340:               .ensureFieldAccessorsInitialized(",
          "45342:         }",
          "45345:         private Builder() {",
          "45346:           maybeForceBuilderInitialization();",
          "45347:         }",
          "",
          "[Removed Lines]",
          "45330:           org.mlflow.api.proto.Service.GetMetricHistory.ResponseOrBuilder {",
          "45333:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_descriptor;",
          "45339:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_fieldAccessorTable",
          "45341:                   org.mlflow.api.proto.Service.GetMetricHistory.Response.class, org.mlflow.api.proto.Service.GetMetricHistory.Response.Builder.class);",
          "",
          "[Added Lines]",
          "52934:           org.mlflow.api.proto.Service.LogBatch.ResponseOrBuilder {",
          "52937:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_descriptor;",
          "52943:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_fieldAccessorTable",
          "52945:                   org.mlflow.api.proto.Service.LogBatch.Response.class, org.mlflow.api.proto.Service.LogBatch.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 689 ---",
          "[Context before]",
          "45354:         private void maybeForceBuilderInitialization() {",
          "45355:           if (com.google.protobuf.GeneratedMessageV3",
          "45356:                   .alwaysUseFieldBuilders) {",
          "45358:           }",
          "45359:         }",
          "45360:         @java.lang.Override",
          "45361:         public Builder clear() {",
          "45362:           super.clear();",
          "45371:           return this;",
          "45372:         }",
          "45374:         @java.lang.Override",
          "45375:         public com.google.protobuf.Descriptors.Descriptor",
          "45376:             getDescriptorForType() {",
          "45378:         }",
          "45380:         @java.lang.Override",
          "45383:         }",
          "45385:         @java.lang.Override",
          "45388:           if (!result.isInitialized()) {",
          "45389:             throw newUninitializedMessageException(result);",
          "45390:           }",
          "",
          "[Removed Lines]",
          "45357:             getMetricsFieldBuilder();",
          "45363:           if (metricsBuilder_ == null) {",
          "45364:             metrics_ = java.util.Collections.emptyList();",
          "45365:             bitField0_ = (bitField0_ & ~0x00000001);",
          "45366:           } else {",
          "45367:             metricsBuilder_.clear();",
          "45368:           }",
          "45369:           nextPageToken_ = \"\";",
          "45370:           bitField0_ = (bitField0_ & ~0x00000002);",
          "45377:           return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_Response_descriptor;",
          "45381:         public org.mlflow.api.proto.Service.GetMetricHistory.Response getDefaultInstanceForType() {",
          "45382:           return org.mlflow.api.proto.Service.GetMetricHistory.Response.getDefaultInstance();",
          "45386:         public org.mlflow.api.proto.Service.GetMetricHistory.Response build() {",
          "45387:           org.mlflow.api.proto.Service.GetMetricHistory.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "52972:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_descriptor;",
          "52976:         public org.mlflow.api.proto.Service.LogBatch.Response getDefaultInstanceForType() {",
          "52977:           return org.mlflow.api.proto.Service.LogBatch.Response.getDefaultInstance();",
          "52981:         public org.mlflow.api.proto.Service.LogBatch.Response build() {",
          "52982:           org.mlflow.api.proto.Service.LogBatch.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 690 ---",
          "[Context before]",
          "45392:         }",
          "45394:         @java.lang.Override",
          "45413:           onBuilt();",
          "45414:           return result;",
          "45415:         }",
          "",
          "[Removed Lines]",
          "45395:         public org.mlflow.api.proto.Service.GetMetricHistory.Response buildPartial() {",
          "45396:           org.mlflow.api.proto.Service.GetMetricHistory.Response result = new org.mlflow.api.proto.Service.GetMetricHistory.Response(this);",
          "45397:           int from_bitField0_ = bitField0_;",
          "45398:           int to_bitField0_ = 0;",
          "45399:           if (metricsBuilder_ == null) {",
          "45400:             if (((bitField0_ & 0x00000001) != 0)) {",
          "45401:               metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "45402:               bitField0_ = (bitField0_ & ~0x00000001);",
          "45403:             }",
          "45404:             result.metrics_ = metrics_;",
          "45405:           } else {",
          "45406:             result.metrics_ = metricsBuilder_.build();",
          "45407:           }",
          "45408:           if (((from_bitField0_ & 0x00000002) != 0)) {",
          "45409:             to_bitField0_ |= 0x00000001;",
          "45410:           }",
          "45411:           result.nextPageToken_ = nextPageToken_;",
          "45412:           result.bitField0_ = to_bitField0_;",
          "",
          "[Added Lines]",
          "52990:         public org.mlflow.api.proto.Service.LogBatch.Response buildPartial() {",
          "52991:           org.mlflow.api.proto.Service.LogBatch.Response result = new org.mlflow.api.proto.Service.LogBatch.Response(this);",
          "",
          "---------------",
          "--- Hunk 691 ---",
          "[Context before]",
          "45442:         }",
          "45443:         @java.lang.Override",
          "45444:         public Builder addRepeatedField(",
          "45869:         }",
          "45888:           } else {",
          "45890:           }",
          "45891:         }",
          "45909:           onChanged();",
          "45910:           return this;",
          "45911:         }",
          "45926:         }",
          "45945:           return this;",
          "45946:         }",
          "45947:         @java.lang.Override",
          "",
          "[Removed Lines]",
          "45445:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "45446:             java.lang.Object value) {",
          "45447:           return super.addRepeatedField(field, value);",
          "45448:         }",
          "45449:         @java.lang.Override",
          "45450:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "45451:           if (other instanceof org.mlflow.api.proto.Service.GetMetricHistory.Response) {",
          "45452:             return mergeFrom((org.mlflow.api.proto.Service.GetMetricHistory.Response)other);",
          "45453:           } else {",
          "45454:             super.mergeFrom(other);",
          "45455:             return this;",
          "45456:           }",
          "45457:         }",
          "45459:         public Builder mergeFrom(org.mlflow.api.proto.Service.GetMetricHistory.Response other) {",
          "45460:           if (other == org.mlflow.api.proto.Service.GetMetricHistory.Response.getDefaultInstance()) return this;",
          "45461:           if (metricsBuilder_ == null) {",
          "45462:             if (!other.metrics_.isEmpty()) {",
          "45463:               if (metrics_.isEmpty()) {",
          "45464:                 metrics_ = other.metrics_;",
          "45465:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "45466:               } else {",
          "45467:                 ensureMetricsIsMutable();",
          "45468:                 metrics_.addAll(other.metrics_);",
          "45469:               }",
          "45470:               onChanged();",
          "45471:             }",
          "45472:           } else {",
          "45473:             if (!other.metrics_.isEmpty()) {",
          "45474:               if (metricsBuilder_.isEmpty()) {",
          "45475:                 metricsBuilder_.dispose();",
          "45476:                 metricsBuilder_ = null;",
          "45477:                 metrics_ = other.metrics_;",
          "45478:                 bitField0_ = (bitField0_ & ~0x00000001);",
          "45479:                 metricsBuilder_ =",
          "45480:                   com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "45481:                      getMetricsFieldBuilder() : null;",
          "45482:               } else {",
          "45483:                 metricsBuilder_.addAllMessages(other.metrics_);",
          "45484:               }",
          "45485:             }",
          "45486:           }",
          "45487:           if (other.hasNextPageToken()) {",
          "45488:             bitField0_ |= 0x00000002;",
          "45489:             nextPageToken_ = other.nextPageToken_;",
          "45490:             onChanged();",
          "45491:           }",
          "45492:           this.mergeUnknownFields(other.unknownFields);",
          "45493:           onChanged();",
          "45494:           return this;",
          "45495:         }",
          "45497:         @java.lang.Override",
          "45498:         public final boolean isInitialized() {",
          "45499:           return true;",
          "45500:         }",
          "45502:         @java.lang.Override",
          "45503:         public Builder mergeFrom(",
          "45504:             com.google.protobuf.CodedInputStream input,",
          "45505:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "45506:             throws java.io.IOException {",
          "45507:           org.mlflow.api.proto.Service.GetMetricHistory.Response parsedMessage = null;",
          "45508:           try {",
          "45509:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "45510:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "45511:             parsedMessage = (org.mlflow.api.proto.Service.GetMetricHistory.Response) e.getUnfinishedMessage();",
          "45512:             throw e.unwrapIOException();",
          "45513:           } finally {",
          "45514:             if (parsedMessage != null) {",
          "45515:               mergeFrom(parsedMessage);",
          "45516:             }",
          "45517:           }",
          "45518:           return this;",
          "45519:         }",
          "45520:         private int bitField0_;",
          "45522:         private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_ =",
          "45523:           java.util.Collections.emptyList();",
          "45524:         private void ensureMetricsIsMutable() {",
          "45525:           if (!((bitField0_ & 0x00000001) != 0)) {",
          "45526:             metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>(metrics_);",
          "45527:             bitField0_ |= 0x00000001;",
          "45528:            }",
          "45529:         }",
          "45531:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "45532:             org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder> metricsBuilder_;",
          "45541:         public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "45542:           if (metricsBuilder_ == null) {",
          "45543:             return java.util.Collections.unmodifiableList(metrics_);",
          "45544:           } else {",
          "45545:             return metricsBuilder_.getMessageList();",
          "45546:           }",
          "45547:         }",
          "45555:         public int getMetricsCount() {",
          "45556:           if (metricsBuilder_ == null) {",
          "45557:             return metrics_.size();",
          "45558:           } else {",
          "45559:             return metricsBuilder_.getCount();",
          "45560:           }",
          "45561:         }",
          "45569:         public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "45570:           if (metricsBuilder_ == null) {",
          "45571:             return metrics_.get(index);",
          "45572:           } else {",
          "45573:             return metricsBuilder_.getMessage(index);",
          "45574:           }",
          "45575:         }",
          "45583:         public Builder setMetrics(",
          "45584:             int index, org.mlflow.api.proto.Service.Metric value) {",
          "45585:           if (metricsBuilder_ == null) {",
          "45586:             if (value == null) {",
          "45587:               throw new NullPointerException();",
          "45588:             }",
          "45589:             ensureMetricsIsMutable();",
          "45590:             metrics_.set(index, value);",
          "45591:             onChanged();",
          "45592:           } else {",
          "45593:             metricsBuilder_.setMessage(index, value);",
          "45594:           }",
          "45595:           return this;",
          "45596:         }",
          "45604:         public Builder setMetrics(",
          "45605:             int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "45606:           if (metricsBuilder_ == null) {",
          "45607:             ensureMetricsIsMutable();",
          "45608:             metrics_.set(index, builderForValue.build());",
          "45609:             onChanged();",
          "45610:           } else {",
          "45611:             metricsBuilder_.setMessage(index, builderForValue.build());",
          "45612:           }",
          "45613:           return this;",
          "45614:         }",
          "45622:         public Builder addMetrics(org.mlflow.api.proto.Service.Metric value) {",
          "45623:           if (metricsBuilder_ == null) {",
          "45624:             if (value == null) {",
          "45625:               throw new NullPointerException();",
          "45626:             }",
          "45627:             ensureMetricsIsMutable();",
          "45628:             metrics_.add(value);",
          "45629:             onChanged();",
          "45630:           } else {",
          "45631:             metricsBuilder_.addMessage(value);",
          "45632:           }",
          "45633:           return this;",
          "45634:         }",
          "45642:         public Builder addMetrics(",
          "45643:             int index, org.mlflow.api.proto.Service.Metric value) {",
          "45644:           if (metricsBuilder_ == null) {",
          "45645:             if (value == null) {",
          "45646:               throw new NullPointerException();",
          "45647:             }",
          "45648:             ensureMetricsIsMutable();",
          "45649:             metrics_.add(index, value);",
          "45650:             onChanged();",
          "45651:           } else {",
          "45652:             metricsBuilder_.addMessage(index, value);",
          "45653:           }",
          "45654:           return this;",
          "45655:         }",
          "45663:         public Builder addMetrics(",
          "45664:             org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "45665:           if (metricsBuilder_ == null) {",
          "45666:             ensureMetricsIsMutable();",
          "45667:             metrics_.add(builderForValue.build());",
          "45668:             onChanged();",
          "45669:           } else {",
          "45670:             metricsBuilder_.addMessage(builderForValue.build());",
          "45671:           }",
          "45672:           return this;",
          "45673:         }",
          "45681:         public Builder addMetrics(",
          "45682:             int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "45683:           if (metricsBuilder_ == null) {",
          "45684:             ensureMetricsIsMutable();",
          "45685:             metrics_.add(index, builderForValue.build());",
          "45686:             onChanged();",
          "45687:           } else {",
          "45688:             metricsBuilder_.addMessage(index, builderForValue.build());",
          "45689:           }",
          "45690:           return this;",
          "45691:         }",
          "45699:         public Builder addAllMetrics(",
          "45700:             java.lang.Iterable<? extends org.mlflow.api.proto.Service.Metric> values) {",
          "45701:           if (metricsBuilder_ == null) {",
          "45702:             ensureMetricsIsMutable();",
          "45703:             com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "45704:                 values, metrics_);",
          "45705:             onChanged();",
          "45706:           } else {",
          "45707:             metricsBuilder_.addAllMessages(values);",
          "45708:           }",
          "45709:           return this;",
          "45710:         }",
          "45718:         public Builder clearMetrics() {",
          "45719:           if (metricsBuilder_ == null) {",
          "45720:             metrics_ = java.util.Collections.emptyList();",
          "45721:             bitField0_ = (bitField0_ & ~0x00000001);",
          "45722:             onChanged();",
          "45723:           } else {",
          "45724:             metricsBuilder_.clear();",
          "45725:           }",
          "45726:           return this;",
          "45727:         }",
          "45735:         public Builder removeMetrics(int index) {",
          "45736:           if (metricsBuilder_ == null) {",
          "45737:             ensureMetricsIsMutable();",
          "45738:             metrics_.remove(index);",
          "45739:             onChanged();",
          "45740:           } else {",
          "45741:             metricsBuilder_.remove(index);",
          "45742:           }",
          "45743:           return this;",
          "45744:         }",
          "45752:         public org.mlflow.api.proto.Service.Metric.Builder getMetricsBuilder(",
          "45753:             int index) {",
          "45754:           return getMetricsFieldBuilder().getBuilder(index);",
          "45755:         }",
          "45763:         public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "45764:             int index) {",
          "45765:           if (metricsBuilder_ == null) {",
          "45766:             return metrics_.get(index);  } else {",
          "45767:             return metricsBuilder_.getMessageOrBuilder(index);",
          "45768:           }",
          "45769:         }",
          "45777:         public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "45778:              getMetricsOrBuilderList() {",
          "45779:           if (metricsBuilder_ != null) {",
          "45780:             return metricsBuilder_.getMessageOrBuilderList();",
          "45781:           } else {",
          "45782:             return java.util.Collections.unmodifiableList(metrics_);",
          "45783:           }",
          "45784:         }",
          "45792:         public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder() {",
          "45793:           return getMetricsFieldBuilder().addBuilder(",
          "45794:               org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "45795:         }",
          "45803:         public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder(",
          "45804:             int index) {",
          "45805:           return getMetricsFieldBuilder().addBuilder(",
          "45806:               index, org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "45807:         }",
          "45815:         public java.util.List<org.mlflow.api.proto.Service.Metric.Builder>",
          "45816:              getMetricsBuilderList() {",
          "45817:           return getMetricsFieldBuilder().getBuilderList();",
          "45818:         }",
          "45819:         private com.google.protobuf.RepeatedFieldBuilderV3<",
          "45820:             org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>",
          "45821:             getMetricsFieldBuilder() {",
          "45822:           if (metricsBuilder_ == null) {",
          "45823:             metricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "45824:                 org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>(",
          "45825:                     metrics_,",
          "45826:                     ((bitField0_ & 0x00000001) != 0),",
          "45827:                     getParentForChildren(),",
          "45828:                     isClean());",
          "45829:             metrics_ = null;",
          "45830:           }",
          "45831:           return metricsBuilder_;",
          "45832:         }",
          "45834:         private java.lang.Object nextPageToken_ = \"\";",
          "45844:         public boolean hasNextPageToken() {",
          "45845:           return ((bitField0_ & 0x00000002) != 0);",
          "45846:         }",
          "45856:         public java.lang.String getNextPageToken() {",
          "45857:           java.lang.Object ref = nextPageToken_;",
          "45858:           if (!(ref instanceof java.lang.String)) {",
          "45859:             com.google.protobuf.ByteString bs =",
          "45860:                 (com.google.protobuf.ByteString) ref;",
          "45861:             java.lang.String s = bs.toStringUtf8();",
          "45862:             if (bs.isValidUtf8()) {",
          "45863:               nextPageToken_ = s;",
          "45864:             }",
          "45865:             return s;",
          "45866:           } else {",
          "45867:             return (java.lang.String) ref;",
          "45868:           }",
          "45879:         public com.google.protobuf.ByteString",
          "45880:             getNextPageTokenBytes() {",
          "45881:           java.lang.Object ref = nextPageToken_;",
          "45882:           if (ref instanceof String) {",
          "45883:             com.google.protobuf.ByteString b =",
          "45884:                 com.google.protobuf.ByteString.copyFromUtf8(",
          "45885:                     (java.lang.String) ref);",
          "45886:             nextPageToken_ = b;",
          "45887:             return b;",
          "45889:             return (com.google.protobuf.ByteString) ref;",
          "45902:         public Builder setNextPageToken(",
          "45903:             java.lang.String value) {",
          "45904:           if (value == null) {",
          "45905:     throw new NullPointerException();",
          "45906:   }",
          "45907:   bitField0_ |= 0x00000002;",
          "45908:           nextPageToken_ = value;",
          "45921:         public Builder clearNextPageToken() {",
          "45922:           bitField0_ = (bitField0_ & ~0x00000002);",
          "45923:           nextPageToken_ = getDefaultInstance().getNextPageToken();",
          "45924:           onChanged();",
          "45925:           return this;",
          "45937:         public Builder setNextPageTokenBytes(",
          "45938:             com.google.protobuf.ByteString value) {",
          "45939:           if (value == null) {",
          "45940:     throw new NullPointerException();",
          "45941:   }",
          "45942:   bitField0_ |= 0x00000002;",
          "45943:           nextPageToken_ = value;",
          "45944:           onChanged();",
          "",
          "[Added Lines]",
          "53024:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "53025:             java.lang.Object value) {",
          "53026:           return super.addRepeatedField(field, value);",
          "53028:         @java.lang.Override",
          "53029:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "53030:           if (other instanceof org.mlflow.api.proto.Service.LogBatch.Response) {",
          "53031:             return mergeFrom((org.mlflow.api.proto.Service.LogBatch.Response)other);",
          "53033:             super.mergeFrom(other);",
          "53034:             return this;",
          "53038:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogBatch.Response other) {",
          "53039:           if (other == org.mlflow.api.proto.Service.LogBatch.Response.getDefaultInstance()) return this;",
          "53040:           this.mergeUnknownFields(other.unknownFields);",
          "53045:         @java.lang.Override",
          "53046:         public final boolean isInitialized() {",
          "53047:           return true;",
          "53050:         @java.lang.Override",
          "53051:         public Builder mergeFrom(",
          "53052:             com.google.protobuf.CodedInputStream input,",
          "53053:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "53054:             throws java.io.IOException {",
          "53055:           org.mlflow.api.proto.Service.LogBatch.Response parsedMessage = null;",
          "53056:           try {",
          "53057:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "53058:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "53059:             parsedMessage = (org.mlflow.api.proto.Service.LogBatch.Response) e.getUnfinishedMessage();",
          "53060:             throw e.unwrapIOException();",
          "53061:           } finally {",
          "53062:             if (parsedMessage != null) {",
          "53063:               mergeFrom(parsedMessage);",
          "53064:             }",
          "53065:           }",
          "",
          "---------------",
          "--- Hunk 692 ---",
          "[Context before]",
          "45957:         }",
          "45961:       }",
          "45965:       static {",
          "45967:       }",
          "45970:         return DEFAULT_INSTANCE;",
          "45971:       }",
          "",
          "[Removed Lines]",
          "45964:       private static final org.mlflow.api.proto.Service.GetMetricHistory.Response DEFAULT_INSTANCE;",
          "45966:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetMetricHistory.Response();",
          "45969:       public static org.mlflow.api.proto.Service.GetMetricHistory.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "53085:       private static final org.mlflow.api.proto.Service.LogBatch.Response DEFAULT_INSTANCE;",
          "53087:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogBatch.Response();",
          "53090:       public static org.mlflow.api.proto.Service.LogBatch.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 693 ---",
          "[Context before]",
          "45991:       }",
          "45993:       @java.lang.Override",
          "45995:         return DEFAULT_INSTANCE;",
          "45996:       }",
          "45998:     }",
          "46000:     private int bitField0_;",
          "46002:     private volatile java.lang.Object runId_;",
          "46011:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "45994:       public org.mlflow.api.proto.Service.GetMetricHistory.Response getDefaultInstanceForType() {",
          "46001:     public static final int RUN_ID_FIELD_NUMBER = 3;",
          "",
          "[Added Lines]",
          "53115:       public org.mlflow.api.proto.Service.LogBatch.Response getDefaultInstanceForType() {",
          "53122:     public static final int RUN_ID_FIELD_NUMBER = 1;",
          "",
          "---------------",
          "--- Hunk 694 ---",
          "[Context before]",
          "46058:       }",
          "46059:     }",
          "46072:     @java.lang.Override",
          "46075:     }",
          "46085:     @java.lang.Override",
          "46099:     }",
          "46109:     @java.lang.Override",
          "46122:     }",
          "46134:     @java.lang.Override",
          "46137:     }",
          "46146:     @java.lang.Override",
          "46160:     }",
          "46169:     @java.lang.Override",
          "46182:     }",
          "46194:     @java.lang.Override",
          "46197:     }",
          "46206:     @java.lang.Override",
          "46220:     }",
          "46229:     @java.lang.Override",
          "46242:     }",
          "46257:     @java.lang.Override",
          "46260:     }",
          "46272:     @java.lang.Override",
          "46275:     }",
          "46277:     private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "46061:     public static final int RUN_UUID_FIELD_NUMBER = 1;",
          "46062:     private volatile java.lang.Object runUuid_;",
          "46073:     public boolean hasRunUuid() {",
          "46074:       return ((bitField0_ & 0x00000002) != 0);",
          "46086:     public java.lang.String getRunUuid() {",
          "46087:       java.lang.Object ref = runUuid_;",
          "46088:       if (ref instanceof java.lang.String) {",
          "46089:         return (java.lang.String) ref;",
          "46090:       } else {",
          "46091:         com.google.protobuf.ByteString bs =",
          "46092:             (com.google.protobuf.ByteString) ref;",
          "46093:         java.lang.String s = bs.toStringUtf8();",
          "46094:         if (bs.isValidUtf8()) {",
          "46095:           runUuid_ = s;",
          "46096:         }",
          "46097:         return s;",
          "46098:       }",
          "46110:     public com.google.protobuf.ByteString",
          "46111:         getRunUuidBytes() {",
          "46112:       java.lang.Object ref = runUuid_;",
          "46113:       if (ref instanceof java.lang.String) {",
          "46114:         com.google.protobuf.ByteString b =",
          "46115:             com.google.protobuf.ByteString.copyFromUtf8(",
          "46116:                 (java.lang.String) ref);",
          "46117:         runUuid_ = b;",
          "46118:         return b;",
          "46119:       } else {",
          "46120:         return (com.google.protobuf.ByteString) ref;",
          "46121:       }",
          "46124:     public static final int METRIC_KEY_FIELD_NUMBER = 2;",
          "46125:     private volatile java.lang.Object metricKey_;",
          "46135:     public boolean hasMetricKey() {",
          "46136:       return ((bitField0_ & 0x00000004) != 0);",
          "46147:     public java.lang.String getMetricKey() {",
          "46148:       java.lang.Object ref = metricKey_;",
          "46149:       if (ref instanceof java.lang.String) {",
          "46150:         return (java.lang.String) ref;",
          "46151:       } else {",
          "46152:         com.google.protobuf.ByteString bs =",
          "46153:             (com.google.protobuf.ByteString) ref;",
          "46154:         java.lang.String s = bs.toStringUtf8();",
          "46155:         if (bs.isValidUtf8()) {",
          "46156:           metricKey_ = s;",
          "46157:         }",
          "46158:         return s;",
          "46159:       }",
          "46170:     public com.google.protobuf.ByteString",
          "46171:         getMetricKeyBytes() {",
          "46172:       java.lang.Object ref = metricKey_;",
          "46173:       if (ref instanceof java.lang.String) {",
          "46174:         com.google.protobuf.ByteString b =",
          "46175:             com.google.protobuf.ByteString.copyFromUtf8(",
          "46176:                 (java.lang.String) ref);",
          "46177:         metricKey_ = b;",
          "46178:         return b;",
          "46179:       } else {",
          "46180:         return (com.google.protobuf.ByteString) ref;",
          "46181:       }",
          "46184:     public static final int PAGE_TOKEN_FIELD_NUMBER = 4;",
          "46185:     private volatile java.lang.Object pageToken_;",
          "46195:     public boolean hasPageToken() {",
          "46196:       return ((bitField0_ & 0x00000008) != 0);",
          "46207:     public java.lang.String getPageToken() {",
          "46208:       java.lang.Object ref = pageToken_;",
          "46209:       if (ref instanceof java.lang.String) {",
          "46210:         return (java.lang.String) ref;",
          "46211:       } else {",
          "46212:         com.google.protobuf.ByteString bs =",
          "46213:             (com.google.protobuf.ByteString) ref;",
          "46214:         java.lang.String s = bs.toStringUtf8();",
          "46215:         if (bs.isValidUtf8()) {",
          "46216:           pageToken_ = s;",
          "46217:         }",
          "46218:         return s;",
          "46219:       }",
          "46230:     public com.google.protobuf.ByteString",
          "46231:         getPageTokenBytes() {",
          "46232:       java.lang.Object ref = pageToken_;",
          "46233:       if (ref instanceof java.lang.String) {",
          "46234:         com.google.protobuf.ByteString b =",
          "46235:             com.google.protobuf.ByteString.copyFromUtf8(",
          "46236:                 (java.lang.String) ref);",
          "46237:         pageToken_ = b;",
          "46238:         return b;",
          "46239:       } else {",
          "46240:         return (com.google.protobuf.ByteString) ref;",
          "46241:       }",
          "46244:     public static final int MAX_RESULTS_FIELD_NUMBER = 5;",
          "46245:     private int maxResults_;",
          "46258:     public boolean hasMaxResults() {",
          "46259:       return ((bitField0_ & 0x00000010) != 0);",
          "46273:     public int getMaxResults() {",
          "46274:       return maxResults_;",
          "",
          "[Added Lines]",
          "53182:     public static final int METRICS_FIELD_NUMBER = 2;",
          "53183:     private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_;",
          "53193:     public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "53194:       return metrics_;",
          "53205:     public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "53206:         getMetricsOrBuilderList() {",
          "53207:       return metrics_;",
          "53218:     public int getMetricsCount() {",
          "53219:       return metrics_.size();",
          "53220:     }",
          "53229:     @java.lang.Override",
          "53230:     public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "53231:       return metrics_.get(index);",
          "53232:     }",
          "53241:     @java.lang.Override",
          "53242:     public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "53243:         int index) {",
          "53244:       return metrics_.get(index);",
          "53247:     public static final int PARAMS_FIELD_NUMBER = 3;",
          "53248:     private java.util.List<org.mlflow.api.proto.Service.Param> params_;",
          "53258:     public java.util.List<org.mlflow.api.proto.Service.Param> getParamsList() {",
          "53259:       return params_;",
          "53270:     public java.util.List<? extends org.mlflow.api.proto.Service.ParamOrBuilder>",
          "53271:         getParamsOrBuilderList() {",
          "53272:       return params_;",
          "53283:     public int getParamsCount() {",
          "53284:       return params_.size();",
          "53285:     }",
          "53294:     @java.lang.Override",
          "53295:     public org.mlflow.api.proto.Service.Param getParams(int index) {",
          "53296:       return params_.get(index);",
          "53297:     }",
          "53306:     @java.lang.Override",
          "53307:     public org.mlflow.api.proto.Service.ParamOrBuilder getParamsOrBuilder(",
          "53308:         int index) {",
          "53309:       return params_.get(index);",
          "53312:     public static final int TAGS_FIELD_NUMBER = 4;",
          "53313:     private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_;",
          "53323:     public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "53324:       return tags_;",
          "53335:     public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "53336:         getTagsOrBuilderList() {",
          "53337:       return tags_;",
          "53348:     public int getTagsCount() {",
          "53349:       return tags_.size();",
          "53360:     public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "53361:       return tags_.get(index);",
          "53372:     public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "53373:         int index) {",
          "53374:       return tags_.get(index);",
          "",
          "---------------",
          "--- Hunk 695 ---",
          "[Context before]",
          "46288:     @java.lang.Override",
          "46289:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "46290:                         throws java.io.IOException {",
          "46297:       if (((bitField0_ & 0x00000001) != 0)) {",
          "46299:       }",
          "46302:       }",
          "46305:       }",
          "46306:       unknownFields.writeTo(output);",
          "46307:     }",
          "",
          "[Removed Lines]",
          "46291:       if (((bitField0_ & 0x00000002) != 0)) {",
          "46292:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runUuid_);",
          "46293:       }",
          "46294:       if (((bitField0_ & 0x00000004) != 0)) {",
          "46295:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, metricKey_);",
          "46296:       }",
          "46298:         com.google.protobuf.GeneratedMessageV3.writeString(output, 3, runId_);",
          "46300:       if (((bitField0_ & 0x00000008) != 0)) {",
          "46301:         com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pageToken_);",
          "46303:       if (((bitField0_ & 0x00000010) != 0)) {",
          "46304:         output.writeInt32(5, maxResults_);",
          "",
          "[Added Lines]",
          "53392:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "53394:       for (int i = 0; i < metrics_.size(); i++) {",
          "53395:         output.writeMessage(2, metrics_.get(i));",
          "53397:       for (int i = 0; i < params_.size(); i++) {",
          "53398:         output.writeMessage(3, params_.get(i));",
          "53399:       }",
          "53400:       for (int i = 0; i < tags_.size(); i++) {",
          "53401:         output.writeMessage(4, tags_.get(i));",
          "",
          "---------------",
          "--- Hunk 696 ---",
          "[Context before]",
          "46312:       if (size != -1) return size;",
          "46314:       size = 0;",
          "46321:       if (((bitField0_ & 0x00000001) != 0)) {",
          "46323:       }",
          "46326:       }",
          "46328:         size += com.google.protobuf.CodedOutputStream",
          "46330:       }",
          "46331:       size += unknownFields.getSerializedSize();",
          "46332:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "46315:       if (((bitField0_ & 0x00000002) != 0)) {",
          "46316:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runUuid_);",
          "46317:       }",
          "46318:       if (((bitField0_ & 0x00000004) != 0)) {",
          "46319:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, metricKey_);",
          "46320:       }",
          "46322:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, runId_);",
          "46324:       if (((bitField0_ & 0x00000008) != 0)) {",
          "46325:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pageToken_);",
          "46327:       if (((bitField0_ & 0x00000010) != 0)) {",
          "46329:           .computeInt32Size(5, maxResults_);",
          "",
          "[Added Lines]",
          "53413:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "53415:       for (int i = 0; i < metrics_.size(); i++) {",
          "53416:         size += com.google.protobuf.CodedOutputStream",
          "53417:           .computeMessageSize(2, metrics_.get(i));",
          "53419:       for (int i = 0; i < params_.size(); i++) {",
          "53421:           .computeMessageSize(3, params_.get(i));",
          "53422:       }",
          "53423:       for (int i = 0; i < tags_.size(); i++) {",
          "53424:         size += com.google.protobuf.CodedOutputStream",
          "53425:           .computeMessageSize(4, tags_.get(i));",
          "",
          "---------------",
          "--- Hunk 697 ---",
          "[Context before]",
          "46338:       if (obj == this) {",
          "46339:        return true;",
          "46340:       }",
          "46342:         return super.equals(obj);",
          "46343:       }",
          "46346:       if (hasRunId() != other.hasRunId()) return false;",
          "46347:       if (hasRunId()) {",
          "46348:         if (!getRunId()",
          "46349:             .equals(other.getRunId())) return false;",
          "46350:       }",
          "46371:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "46372:       return true;",
          "46373:     }",
          "",
          "[Removed Lines]",
          "46341:       if (!(obj instanceof org.mlflow.api.proto.Service.GetMetricHistory)) {",
          "46344:       org.mlflow.api.proto.Service.GetMetricHistory other = (org.mlflow.api.proto.Service.GetMetricHistory) obj;",
          "46351:       if (hasRunUuid() != other.hasRunUuid()) return false;",
          "46352:       if (hasRunUuid()) {",
          "46353:         if (!getRunUuid()",
          "46354:             .equals(other.getRunUuid())) return false;",
          "46355:       }",
          "46356:       if (hasMetricKey() != other.hasMetricKey()) return false;",
          "46357:       if (hasMetricKey()) {",
          "46358:         if (!getMetricKey()",
          "46359:             .equals(other.getMetricKey())) return false;",
          "46360:       }",
          "46361:       if (hasPageToken() != other.hasPageToken()) return false;",
          "46362:       if (hasPageToken()) {",
          "46363:         if (!getPageToken()",
          "46364:             .equals(other.getPageToken())) return false;",
          "46365:       }",
          "46366:       if (hasMaxResults() != other.hasMaxResults()) return false;",
          "46367:       if (hasMaxResults()) {",
          "46368:         if (getMaxResults()",
          "46369:             != other.getMaxResults()) return false;",
          "46370:       }",
          "",
          "[Added Lines]",
          "53437:       if (!(obj instanceof org.mlflow.api.proto.Service.LogBatch)) {",
          "53440:       org.mlflow.api.proto.Service.LogBatch other = (org.mlflow.api.proto.Service.LogBatch) obj;",
          "53447:       if (!getMetricsList()",
          "53448:           .equals(other.getMetricsList())) return false;",
          "53449:       if (!getParamsList()",
          "53450:           .equals(other.getParamsList())) return false;",
          "53451:       if (!getTagsList()",
          "53452:           .equals(other.getTagsList())) return false;",
          "",
          "---------------",
          "--- Hunk 698 ---",
          "[Context before]",
          "46383:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "46384:         hash = (53 * hash) + getRunId().hashCode();",
          "46385:       }",
          "46393:       }",
          "46397:       }",
          "46401:       }",
          "46402:       hash = (29 * hash) + unknownFields.hashCode();",
          "46403:       memoizedHashCode = hash;",
          "46404:       return hash;",
          "46405:     }",
          "46408:         java.nio.ByteBuffer data)",
          "46409:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "46410:       return PARSER.parseFrom(data);",
          "46411:     }",
          "46413:         java.nio.ByteBuffer data,",
          "46414:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "46415:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "46416:       return PARSER.parseFrom(data, extensionRegistry);",
          "46417:     }",
          "46419:         com.google.protobuf.ByteString data)",
          "46420:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "46421:       return PARSER.parseFrom(data);",
          "46422:     }",
          "46424:         com.google.protobuf.ByteString data,",
          "46425:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "46426:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "46427:       return PARSER.parseFrom(data, extensionRegistry);",
          "46428:     }",
          "46430:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "46431:       return PARSER.parseFrom(data);",
          "46432:     }",
          "46434:         byte[] data,",
          "46435:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "46436:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "46437:       return PARSER.parseFrom(data, extensionRegistry);",
          "46438:     }",
          "46440:         throws java.io.IOException {",
          "46441:       return com.google.protobuf.GeneratedMessageV3",
          "46442:           .parseWithIOException(PARSER, input);",
          "46443:     }",
          "46445:         java.io.InputStream input,",
          "46446:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "46447:         throws java.io.IOException {",
          "46448:       return com.google.protobuf.GeneratedMessageV3",
          "46449:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "46450:     }",
          "46452:         throws java.io.IOException {",
          "46453:       return com.google.protobuf.GeneratedMessageV3",
          "46454:           .parseDelimitedWithIOException(PARSER, input);",
          "46455:     }",
          "46457:         java.io.InputStream input,",
          "46458:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "46459:         throws java.io.IOException {",
          "46460:       return com.google.protobuf.GeneratedMessageV3",
          "46461:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "46462:     }",
          "46464:         com.google.protobuf.CodedInputStream input)",
          "46465:         throws java.io.IOException {",
          "46466:       return com.google.protobuf.GeneratedMessageV3",
          "46467:           .parseWithIOException(PARSER, input);",
          "46468:     }",
          "46470:         com.google.protobuf.CodedInputStream input,",
          "46471:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "46472:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "46386:       if (hasRunUuid()) {",
          "46387:         hash = (37 * hash) + RUN_UUID_FIELD_NUMBER;",
          "46388:         hash = (53 * hash) + getRunUuid().hashCode();",
          "46389:       }",
          "46390:       if (hasMetricKey()) {",
          "46391:         hash = (37 * hash) + METRIC_KEY_FIELD_NUMBER;",
          "46392:         hash = (53 * hash) + getMetricKey().hashCode();",
          "46394:       if (hasPageToken()) {",
          "46395:         hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;",
          "46396:         hash = (53 * hash) + getPageToken().hashCode();",
          "46398:       if (hasMaxResults()) {",
          "46399:         hash = (37 * hash) + MAX_RESULTS_FIELD_NUMBER;",
          "46400:         hash = (53 * hash) + getMaxResults();",
          "46407:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "46412:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "46418:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "46423:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "46429:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(byte[] data)",
          "46433:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "46439:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(java.io.InputStream input)",
          "46444:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "46451:     public static org.mlflow.api.proto.Service.GetMetricHistory parseDelimitedFrom(java.io.InputStream input)",
          "46456:     public static org.mlflow.api.proto.Service.GetMetricHistory parseDelimitedFrom(",
          "46463:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "46469:     public static org.mlflow.api.proto.Service.GetMetricHistory parseFrom(",
          "",
          "[Added Lines]",
          "53468:       if (getMetricsCount() > 0) {",
          "53469:         hash = (37 * hash) + METRICS_FIELD_NUMBER;",
          "53470:         hash = (53 * hash) + getMetricsList().hashCode();",
          "53472:       if (getParamsCount() > 0) {",
          "53473:         hash = (37 * hash) + PARAMS_FIELD_NUMBER;",
          "53474:         hash = (53 * hash) + getParamsList().hashCode();",
          "53476:       if (getTagsCount() > 0) {",
          "53477:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "53478:         hash = (53 * hash) + getTagsList().hashCode();",
          "53485:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "53490:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "53496:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "53501:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "53507:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(byte[] data)",
          "53511:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "53517:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(java.io.InputStream input)",
          "53522:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "53529:     public static org.mlflow.api.proto.Service.LogBatch parseDelimitedFrom(java.io.InputStream input)",
          "53534:     public static org.mlflow.api.proto.Service.LogBatch parseDelimitedFrom(",
          "53541:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "53547:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "",
          "---------------",
          "--- Hunk 699 ---",
          "[Context before]",
          "46479:     public static Builder newBuilder() {",
          "46480:       return DEFAULT_INSTANCE.toBuilder();",
          "46481:     }",
          "46483:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "46484:     }",
          "46485:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "46482:     public static Builder newBuilder(org.mlflow.api.proto.Service.GetMetricHistory prototype) {",
          "",
          "[Added Lines]",
          "53560:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogBatch prototype) {",
          "",
          "---------------",
          "--- Hunk 700 ---",
          "[Context before]",
          "46495:       return builder;",
          "46496:     }",
          "46500:     public static final class Builder extends",
          "46501:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "46504:       public static final com.google.protobuf.Descriptors.Descriptor",
          "46505:           getDescriptor() {",
          "46507:       }",
          "46509:       @java.lang.Override",
          "46510:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "46511:           internalGetFieldAccessorTable() {",
          "46513:             .ensureFieldAccessorsInitialized(",
          "46515:       }",
          "46518:       private Builder() {",
          "46519:         maybeForceBuilderInitialization();",
          "46520:       }",
          "",
          "[Removed Lines]",
          "46503:         org.mlflow.api.proto.Service.GetMetricHistoryOrBuilder {",
          "46506:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_descriptor;",
          "46512:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_fieldAccessorTable",
          "46514:                 org.mlflow.api.proto.Service.GetMetricHistory.class, org.mlflow.api.proto.Service.GetMetricHistory.Builder.class);",
          "",
          "[Added Lines]",
          "53581:         org.mlflow.api.proto.Service.LogBatchOrBuilder {",
          "53584:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_descriptor;",
          "53590:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_fieldAccessorTable",
          "53592:                 org.mlflow.api.proto.Service.LogBatch.class, org.mlflow.api.proto.Service.LogBatch.Builder.class);",
          "",
          "---------------",
          "--- Hunk 701 ---",
          "[Context before]",
          "46527:       private void maybeForceBuilderInitialization() {",
          "46528:         if (com.google.protobuf.GeneratedMessageV3",
          "46529:                 .alwaysUseFieldBuilders) {",
          "46530:         }",
          "46531:       }",
          "46532:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53608:           getMetricsFieldBuilder();",
          "53609:           getParamsFieldBuilder();",
          "53610:           getTagsFieldBuilder();",
          "",
          "---------------",
          "--- Hunk 702 ---",
          "[Context before]",
          "46534:         super.clear();",
          "46535:         runId_ = \"\";",
          "46536:         bitField0_ = (bitField0_ & ~0x00000001);",
          "46545:         return this;",
          "46546:       }",
          "46548:       @java.lang.Override",
          "46549:       public com.google.protobuf.Descriptors.Descriptor",
          "46550:           getDescriptorForType() {",
          "46552:       }",
          "46554:       @java.lang.Override",
          "46557:       }",
          "46559:       @java.lang.Override",
          "46562:         if (!result.isInitialized()) {",
          "46563:           throw newUninitializedMessageException(result);",
          "46564:         }",
          "",
          "[Removed Lines]",
          "46537:         runUuid_ = \"\";",
          "46538:         bitField0_ = (bitField0_ & ~0x00000002);",
          "46539:         metricKey_ = \"\";",
          "46540:         bitField0_ = (bitField0_ & ~0x00000004);",
          "46541:         pageToken_ = \"\";",
          "46542:         bitField0_ = (bitField0_ & ~0x00000008);",
          "46543:         maxResults_ = 0;",
          "46544:         bitField0_ = (bitField0_ & ~0x00000010);",
          "46551:         return org.mlflow.api.proto.Service.internal_static_mlflow_GetMetricHistory_descriptor;",
          "46555:       public org.mlflow.api.proto.Service.GetMetricHistory getDefaultInstanceForType() {",
          "46556:         return org.mlflow.api.proto.Service.GetMetricHistory.getDefaultInstance();",
          "46560:       public org.mlflow.api.proto.Service.GetMetricHistory build() {",
          "46561:         org.mlflow.api.proto.Service.GetMetricHistory result = buildPartial();",
          "",
          "[Added Lines]",
          "53618:         if (metricsBuilder_ == null) {",
          "53619:           metrics_ = java.util.Collections.emptyList();",
          "53620:           bitField0_ = (bitField0_ & ~0x00000002);",
          "53621:         } else {",
          "53622:           metricsBuilder_.clear();",
          "53623:         }",
          "53624:         if (paramsBuilder_ == null) {",
          "53625:           params_ = java.util.Collections.emptyList();",
          "53626:           bitField0_ = (bitField0_ & ~0x00000004);",
          "53627:         } else {",
          "53628:           paramsBuilder_.clear();",
          "53629:         }",
          "53630:         if (tagsBuilder_ == null) {",
          "53631:           tags_ = java.util.Collections.emptyList();",
          "53632:           bitField0_ = (bitField0_ & ~0x00000008);",
          "53633:         } else {",
          "53634:           tagsBuilder_.clear();",
          "53635:         }",
          "53642:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_descriptor;",
          "53646:       public org.mlflow.api.proto.Service.LogBatch getDefaultInstanceForType() {",
          "53647:         return org.mlflow.api.proto.Service.LogBatch.getDefaultInstance();",
          "53651:       public org.mlflow.api.proto.Service.LogBatch build() {",
          "53652:         org.mlflow.api.proto.Service.LogBatch result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 703 ---",
          "[Context before]",
          "46566:       }",
          "46568:       @java.lang.Override",
          "46571:         int from_bitField0_ = bitField0_;",
          "46572:         int to_bitField0_ = 0;",
          "46573:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "46574:           to_bitField0_ |= 0x00000001;",
          "46575:         }",
          "46576:         result.runId_ = runId_;",
          "46583:         }",
          "46587:         }",
          "46592:         }",
          "46593:         result.bitField0_ = to_bitField0_;",
          "46594:         onBuilt();",
          "",
          "[Removed Lines]",
          "46569:       public org.mlflow.api.proto.Service.GetMetricHistory buildPartial() {",
          "46570:         org.mlflow.api.proto.Service.GetMetricHistory result = new org.mlflow.api.proto.Service.GetMetricHistory(this);",
          "46577:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "46578:           to_bitField0_ |= 0x00000002;",
          "46579:         }",
          "46580:         result.runUuid_ = runUuid_;",
          "46581:         if (((from_bitField0_ & 0x00000004) != 0)) {",
          "46582:           to_bitField0_ |= 0x00000004;",
          "46584:         result.metricKey_ = metricKey_;",
          "46585:         if (((from_bitField0_ & 0x00000008) != 0)) {",
          "46586:           to_bitField0_ |= 0x00000008;",
          "46588:         result.pageToken_ = pageToken_;",
          "46589:         if (((from_bitField0_ & 0x00000010) != 0)) {",
          "46590:           result.maxResults_ = maxResults_;",
          "46591:           to_bitField0_ |= 0x00000010;",
          "",
          "[Added Lines]",
          "53660:       public org.mlflow.api.proto.Service.LogBatch buildPartial() {",
          "53661:         org.mlflow.api.proto.Service.LogBatch result = new org.mlflow.api.proto.Service.LogBatch(this);",
          "53668:         if (metricsBuilder_ == null) {",
          "53669:           if (((bitField0_ & 0x00000002) != 0)) {",
          "53670:             metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "53671:             bitField0_ = (bitField0_ & ~0x00000002);",
          "53672:           }",
          "53673:           result.metrics_ = metrics_;",
          "53674:         } else {",
          "53675:           result.metrics_ = metricsBuilder_.build();",
          "53677:         if (paramsBuilder_ == null) {",
          "53678:           if (((bitField0_ & 0x00000004) != 0)) {",
          "53679:             params_ = java.util.Collections.unmodifiableList(params_);",
          "53680:             bitField0_ = (bitField0_ & ~0x00000004);",
          "53681:           }",
          "53682:           result.params_ = params_;",
          "53683:         } else {",
          "53684:           result.params_ = paramsBuilder_.build();",
          "53686:         if (tagsBuilder_ == null) {",
          "53687:           if (((bitField0_ & 0x00000008) != 0)) {",
          "53688:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "53689:             bitField0_ = (bitField0_ & ~0x00000008);",
          "53690:           }",
          "53691:           result.tags_ = tags_;",
          "53692:         } else {",
          "53693:           result.tags_ = tagsBuilder_.build();",
          "",
          "---------------",
          "--- Hunk 704 ---",
          "[Context before]",
          "46629:       }",
          "46630:       @java.lang.Override",
          "46631:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "46634:         } else {",
          "46635:           super.mergeFrom(other);",
          "46636:           return this;",
          "46637:         }",
          "46638:       }",
          "46642:         if (other.hasRunId()) {",
          "46643:           bitField0_ |= 0x00000001;",
          "46644:           runId_ = other.runId_;",
          "46645:           onChanged();",
          "46646:         }",
          "46656:         }",
          "46661:         }",
          "46664:         }",
          "46665:         this.mergeUnknownFields(other.unknownFields);",
          "46666:         onChanged();",
          "",
          "[Removed Lines]",
          "46632:         if (other instanceof org.mlflow.api.proto.Service.GetMetricHistory) {",
          "46633:           return mergeFrom((org.mlflow.api.proto.Service.GetMetricHistory)other);",
          "46640:       public Builder mergeFrom(org.mlflow.api.proto.Service.GetMetricHistory other) {",
          "46641:         if (other == org.mlflow.api.proto.Service.GetMetricHistory.getDefaultInstance()) return this;",
          "46647:         if (other.hasRunUuid()) {",
          "46648:           bitField0_ |= 0x00000002;",
          "46649:           runUuid_ = other.runUuid_;",
          "46650:           onChanged();",
          "46651:         }",
          "46652:         if (other.hasMetricKey()) {",
          "46653:           bitField0_ |= 0x00000004;",
          "46654:           metricKey_ = other.metricKey_;",
          "46655:           onChanged();",
          "46657:         if (other.hasPageToken()) {",
          "46658:           bitField0_ |= 0x00000008;",
          "46659:           pageToken_ = other.pageToken_;",
          "46660:           onChanged();",
          "46662:         if (other.hasMaxResults()) {",
          "46663:           setMaxResults(other.getMaxResults());",
          "",
          "[Added Lines]",
          "53734:         if (other instanceof org.mlflow.api.proto.Service.LogBatch) {",
          "53735:           return mergeFrom((org.mlflow.api.proto.Service.LogBatch)other);",
          "53742:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogBatch other) {",
          "53743:         if (other == org.mlflow.api.proto.Service.LogBatch.getDefaultInstance()) return this;",
          "53749:         if (metricsBuilder_ == null) {",
          "53750:           if (!other.metrics_.isEmpty()) {",
          "53751:             if (metrics_.isEmpty()) {",
          "53752:               metrics_ = other.metrics_;",
          "53753:               bitField0_ = (bitField0_ & ~0x00000002);",
          "53754:             } else {",
          "53755:               ensureMetricsIsMutable();",
          "53756:               metrics_.addAll(other.metrics_);",
          "53757:             }",
          "53758:             onChanged();",
          "53759:           }",
          "53760:         } else {",
          "53761:           if (!other.metrics_.isEmpty()) {",
          "53762:             if (metricsBuilder_.isEmpty()) {",
          "53763:               metricsBuilder_.dispose();",
          "53764:               metricsBuilder_ = null;",
          "53765:               metrics_ = other.metrics_;",
          "53766:               bitField0_ = (bitField0_ & ~0x00000002);",
          "53767:               metricsBuilder_ =",
          "53768:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "53769:                    getMetricsFieldBuilder() : null;",
          "53770:             } else {",
          "53771:               metricsBuilder_.addAllMessages(other.metrics_);",
          "53772:             }",
          "53773:           }",
          "53775:         if (paramsBuilder_ == null) {",
          "53776:           if (!other.params_.isEmpty()) {",
          "53777:             if (params_.isEmpty()) {",
          "53778:               params_ = other.params_;",
          "53779:               bitField0_ = (bitField0_ & ~0x00000004);",
          "53780:             } else {",
          "53781:               ensureParamsIsMutable();",
          "53782:               params_.addAll(other.params_);",
          "53783:             }",
          "53784:             onChanged();",
          "53785:           }",
          "53786:         } else {",
          "53787:           if (!other.params_.isEmpty()) {",
          "53788:             if (paramsBuilder_.isEmpty()) {",
          "53789:               paramsBuilder_.dispose();",
          "53790:               paramsBuilder_ = null;",
          "53791:               params_ = other.params_;",
          "53792:               bitField0_ = (bitField0_ & ~0x00000004);",
          "53793:               paramsBuilder_ =",
          "53794:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "53795:                    getParamsFieldBuilder() : null;",
          "53796:             } else {",
          "53797:               paramsBuilder_.addAllMessages(other.params_);",
          "53798:             }",
          "53799:           }",
          "53801:         if (tagsBuilder_ == null) {",
          "53802:           if (!other.tags_.isEmpty()) {",
          "53803:             if (tags_.isEmpty()) {",
          "53804:               tags_ = other.tags_;",
          "53805:               bitField0_ = (bitField0_ & ~0x00000008);",
          "53806:             } else {",
          "53807:               ensureTagsIsMutable();",
          "53808:               tags_.addAll(other.tags_);",
          "53809:             }",
          "53810:             onChanged();",
          "53811:           }",
          "53812:         } else {",
          "53813:           if (!other.tags_.isEmpty()) {",
          "53814:             if (tagsBuilder_.isEmpty()) {",
          "53815:               tagsBuilder_.dispose();",
          "53816:               tagsBuilder_ = null;",
          "53817:               tags_ = other.tags_;",
          "53818:               bitField0_ = (bitField0_ & ~0x00000008);",
          "53819:               tagsBuilder_ =",
          "53820:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "53821:                    getTagsFieldBuilder() : null;",
          "53822:             } else {",
          "53823:               tagsBuilder_.addAllMessages(other.tags_);",
          "53824:             }",
          "53825:           }",
          "",
          "---------------",
          "--- Hunk 705 ---",
          "[Context before]",
          "46677:           com.google.protobuf.CodedInputStream input,",
          "46678:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "46679:           throws java.io.IOException {",
          "46681:         try {",
          "46682:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "46683:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "46685:           throw e.unwrapIOException();",
          "46686:         } finally {",
          "46687:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "46680:         org.mlflow.api.proto.Service.GetMetricHistory parsedMessage = null;",
          "46684:           parsedMessage = (org.mlflow.api.proto.Service.GetMetricHistory) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "53842:         org.mlflow.api.proto.Service.LogBatch parsedMessage = null;",
          "53846:           parsedMessage = (org.mlflow.api.proto.Service.LogBatch) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 706 ---",
          "[Context before]",
          "46692:       }",
          "46693:       private int bitField0_;",
          "47036:       }",
          "47047:         if (!(ref instanceof java.lang.String)) {",
          "47048:           com.google.protobuf.ByteString bs =",
          "47049:               (com.google.protobuf.ByteString) ref;",
          "47050:           java.lang.String s = bs.toStringUtf8();",
          "47051:           if (bs.isValidUtf8()) {",
          "47053:           }",
          "47054:           return s;",
          "47055:         } else {",
          "",
          "[Removed Lines]",
          "46695:       private java.lang.Object runId_ = \"\";",
          "46704:       public boolean hasRunId() {",
          "46705:         return ((bitField0_ & 0x00000001) != 0);",
          "46706:       }",
          "46715:       public java.lang.String getRunId() {",
          "46716:         java.lang.Object ref = runId_;",
          "46717:         if (!(ref instanceof java.lang.String)) {",
          "46718:           com.google.protobuf.ByteString bs =",
          "46719:               (com.google.protobuf.ByteString) ref;",
          "46720:           java.lang.String s = bs.toStringUtf8();",
          "46721:           if (bs.isValidUtf8()) {",
          "46722:             runId_ = s;",
          "46723:           }",
          "46724:           return s;",
          "46725:         } else {",
          "46726:           return (java.lang.String) ref;",
          "46727:         }",
          "46728:       }",
          "46737:       public com.google.protobuf.ByteString",
          "46738:           getRunIdBytes() {",
          "46739:         java.lang.Object ref = runId_;",
          "46740:         if (ref instanceof String) {",
          "46741:           com.google.protobuf.ByteString b =",
          "46742:               com.google.protobuf.ByteString.copyFromUtf8(",
          "46743:                   (java.lang.String) ref);",
          "46744:           runId_ = b;",
          "46745:           return b;",
          "46746:         } else {",
          "46747:           return (com.google.protobuf.ByteString) ref;",
          "46748:         }",
          "46749:       }",
          "46759:       public Builder setRunId(",
          "46760:           java.lang.String value) {",
          "46761:         if (value == null) {",
          "46762:     throw new NullPointerException();",
          "46763:   }",
          "46764:   bitField0_ |= 0x00000001;",
          "46765:         runId_ = value;",
          "46766:         onChanged();",
          "46767:         return this;",
          "46768:       }",
          "46777:       public Builder clearRunId() {",
          "46778:         bitField0_ = (bitField0_ & ~0x00000001);",
          "46779:         runId_ = getDefaultInstance().getRunId();",
          "46780:         onChanged();",
          "46781:         return this;",
          "46782:       }",
          "46792:       public Builder setRunIdBytes(",
          "46793:           com.google.protobuf.ByteString value) {",
          "46794:         if (value == null) {",
          "46795:     throw new NullPointerException();",
          "46796:   }",
          "46797:   bitField0_ |= 0x00000001;",
          "46798:         runId_ = value;",
          "46799:         onChanged();",
          "46800:         return this;",
          "46801:       }",
          "46803:       private java.lang.Object runUuid_ = \"\";",
          "46813:       public boolean hasRunUuid() {",
          "46814:         return ((bitField0_ & 0x00000002) != 0);",
          "46815:       }",
          "46825:       public java.lang.String getRunUuid() {",
          "46826:         java.lang.Object ref = runUuid_;",
          "46827:         if (!(ref instanceof java.lang.String)) {",
          "46828:           com.google.protobuf.ByteString bs =",
          "46829:               (com.google.protobuf.ByteString) ref;",
          "46830:           java.lang.String s = bs.toStringUtf8();",
          "46831:           if (bs.isValidUtf8()) {",
          "46832:             runUuid_ = s;",
          "46833:           }",
          "46834:           return s;",
          "46835:         } else {",
          "46836:           return (java.lang.String) ref;",
          "46837:         }",
          "46838:       }",
          "46848:       public com.google.protobuf.ByteString",
          "46849:           getRunUuidBytes() {",
          "46850:         java.lang.Object ref = runUuid_;",
          "46851:         if (ref instanceof String) {",
          "46852:           com.google.protobuf.ByteString b =",
          "46853:               com.google.protobuf.ByteString.copyFromUtf8(",
          "46854:                   (java.lang.String) ref);",
          "46855:           runUuid_ = b;",
          "46856:           return b;",
          "46857:         } else {",
          "46858:           return (com.google.protobuf.ByteString) ref;",
          "46859:         }",
          "46860:       }",
          "46871:       public Builder setRunUuid(",
          "46872:           java.lang.String value) {",
          "46873:         if (value == null) {",
          "46874:     throw new NullPointerException();",
          "46875:   }",
          "46876:   bitField0_ |= 0x00000002;",
          "46877:         runUuid_ = value;",
          "46878:         onChanged();",
          "46879:         return this;",
          "46880:       }",
          "46890:       public Builder clearRunUuid() {",
          "46891:         bitField0_ = (bitField0_ & ~0x00000002);",
          "46892:         runUuid_ = getDefaultInstance().getRunUuid();",
          "46893:         onChanged();",
          "46894:         return this;",
          "46895:       }",
          "46906:       public Builder setRunUuidBytes(",
          "46907:           com.google.protobuf.ByteString value) {",
          "46908:         if (value == null) {",
          "46909:     throw new NullPointerException();",
          "46910:   }",
          "46911:   bitField0_ |= 0x00000002;",
          "46912:         runUuid_ = value;",
          "46913:         onChanged();",
          "46914:         return this;",
          "46915:       }",
          "46917:       private java.lang.Object metricKey_ = \"\";",
          "46926:       public boolean hasMetricKey() {",
          "46927:         return ((bitField0_ & 0x00000004) != 0);",
          "46928:       }",
          "46937:       public java.lang.String getMetricKey() {",
          "46938:         java.lang.Object ref = metricKey_;",
          "46939:         if (!(ref instanceof java.lang.String)) {",
          "46940:           com.google.protobuf.ByteString bs =",
          "46941:               (com.google.protobuf.ByteString) ref;",
          "46942:           java.lang.String s = bs.toStringUtf8();",
          "46943:           if (bs.isValidUtf8()) {",
          "46944:             metricKey_ = s;",
          "46945:           }",
          "46946:           return s;",
          "46947:         } else {",
          "46948:           return (java.lang.String) ref;",
          "46949:         }",
          "46950:       }",
          "46959:       public com.google.protobuf.ByteString",
          "46960:           getMetricKeyBytes() {",
          "46961:         java.lang.Object ref = metricKey_;",
          "46962:         if (ref instanceof String) {",
          "46963:           com.google.protobuf.ByteString b =",
          "46964:               com.google.protobuf.ByteString.copyFromUtf8(",
          "46965:                   (java.lang.String) ref);",
          "46966:           metricKey_ = b;",
          "46967:           return b;",
          "46968:         } else {",
          "46969:           return (com.google.protobuf.ByteString) ref;",
          "46970:         }",
          "46971:       }",
          "46981:       public Builder setMetricKey(",
          "46982:           java.lang.String value) {",
          "46983:         if (value == null) {",
          "46984:     throw new NullPointerException();",
          "46985:   }",
          "46986:   bitField0_ |= 0x00000004;",
          "46987:         metricKey_ = value;",
          "46988:         onChanged();",
          "46989:         return this;",
          "46990:       }",
          "46999:       public Builder clearMetricKey() {",
          "47000:         bitField0_ = (bitField0_ & ~0x00000004);",
          "47001:         metricKey_ = getDefaultInstance().getMetricKey();",
          "47002:         onChanged();",
          "47003:         return this;",
          "47004:       }",
          "47014:       public Builder setMetricKeyBytes(",
          "47015:           com.google.protobuf.ByteString value) {",
          "47016:         if (value == null) {",
          "47017:     throw new NullPointerException();",
          "47018:   }",
          "47019:   bitField0_ |= 0x00000004;",
          "47020:         metricKey_ = value;",
          "47021:         onChanged();",
          "47022:         return this;",
          "47023:       }",
          "47025:       private java.lang.Object pageToken_ = \"\";",
          "47034:       public boolean hasPageToken() {",
          "47035:         return ((bitField0_ & 0x00000008) != 0);",
          "47045:       public java.lang.String getPageToken() {",
          "47046:         java.lang.Object ref = pageToken_;",
          "47052:             pageToken_ = s;",
          "",
          "[Added Lines]",
          "53857:       private java.lang.Object runId_ = \"\";",
          "53866:       public boolean hasRunId() {",
          "53867:         return ((bitField0_ & 0x00000001) != 0);",
          "53877:       public java.lang.String getRunId() {",
          "53878:         java.lang.Object ref = runId_;",
          "53884:             runId_ = s;",
          "",
          "---------------",
          "--- Hunk 707 ---",
          "[Context before]",
          "47058:       }",
          "47067:       public com.google.protobuf.ByteString",
          "47070:         if (ref instanceof String) {",
          "47071:           com.google.protobuf.ByteString b =",
          "47072:               com.google.protobuf.ByteString.copyFromUtf8(",
          "47073:                   (java.lang.String) ref);",
          "47075:           return b;",
          "47076:         } else {",
          "47077:           return (com.google.protobuf.ByteString) ref;",
          "",
          "[Removed Lines]",
          "47068:           getPageTokenBytes() {",
          "47069:         java.lang.Object ref = pageToken_;",
          "47074:           pageToken_ = b;",
          "",
          "[Added Lines]",
          "53900:           getRunIdBytes() {",
          "53901:         java.lang.Object ref = runId_;",
          "53906:           runId_ = b;",
          "",
          "---------------",
          "--- Hunk 708 ---",
          "[Context before]",
          "47079:       }",
          "47090:           java.lang.String value) {",
          "47091:         if (value == null) {",
          "47092:     throw new NullPointerException();",
          "47093:   }",
          "47096:         onChanged();",
          "47097:         return this;",
          "47098:       }",
          "47110:         onChanged();",
          "47111:         return this;",
          "47112:       }",
          "47123:           com.google.protobuf.ByteString value) {",
          "47124:         if (value == null) {",
          "47125:     throw new NullPointerException();",
          "47126:   }",
          "47129:         onChanged();",
          "47130:         return this;",
          "47131:       }",
          "47148:       }",
          "47163:       }",
          "47181:       }",
          "47197:         return this;",
          "47198:       }",
          "47470:       }",
          "47522:           }",
          "47523:         }",
          "47532:         }",
          "47535:         }",
          "47538:         }",
          "47541:       }",
          "47571:       }",
          "47573:       }",
          "47580:       }",
          "47586:       }",
          "47594:         }",
          "47622:         }",
          "47623:       }",
          "47627:       }",
          "47635:       }",
          "47646:       }",
          "47652:       }",
          "47663:       }",
          "47669:         }",
          "47672:         }",
          "47677:       }",
          "47683:         }",
          "47701:       }",
          "47706:       }",
          "47712:       }",
          "47716:       }",
          "47722:       }",
          "47727:       }",
          "47734:       }",
          "47739:       }",
          "47746:       }",
          "47752:       }",
          "47759:       }",
          "47773:       }",
          "47799:         }",
          "47804:         }",
          "47810:         }",
          "47814:           }",
          "47815:         }",
          "47831:         }",
          "47838:           }",
          "47863:         }",
          "47868:         }",
          "47874:         }",
          "47880:         }",
          "47889:         }",
          "47894:           onChanged();",
          "47901:         }",
          "47920:         }",
          "47925:         }",
          "47931:         }",
          "47935:       }",
          "47941:       }",
          "47945:       }",
          "47955:         }",
          "47960:       }",
          "47962:       @java.lang.Override",
          "47965:       }",
          "47967:       @java.lang.Override",
          "47970:       }",
          "47972:     }",
          "47988:     }",
          "48011:     }",
          "48032:       }",
          "48098:     }",
          "48110:     @java.lang.Override",
          "48113:     }",
          "48122:     @java.lang.Override",
          "48126:     }",
          "48283:     }",
          "48308:     }",
          "48310:     @java.lang.Override",
          "48336:     }",
          "48363:     }",
          "48366:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48367:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "48399:     }",
          "48406:     }",
          "48408:     @java.lang.Override",
          "48420:     }",
          "48427:     }",
          "48438:       }",
          "48446:       }",
          "48451:       }",
          "48466:       @java.lang.Override",
          "48482:         }",
          "48488:         }",
          "48490:       }",
          "48496:       }",
          "48498:       @java.lang.Override",
          "48501:       }",
          "48503:       @java.lang.Override",
          "48551:       }",
          "48553:       @java.lang.Override",
          "48593:       }",
          "48683:       }",
          "48685:       @java.lang.Override",
          "48687:         return true;",
          "48688:       }",
          "48690:       @java.lang.Override",
          "48705:         }",
          "48707:       }",
          "48721:       }",
          "48743:       }",
          "48764:       }",
          "48783:       }",
          "48797:       }",
          "48816:       }",
          "48825:       }",
          "48844:       }",
          "48858:         }",
          "48873:         }",
          "48888:           }",
          "48894:         }",
          "48913:         }",
          "48928:           }",
          "48934:         }",
          "48950:           }",
          "48956:         }",
          "48972:           onChanged();",
          "48975:         }",
          "48994:         }",
          "49014:         }",
          "49016:       }",
          "49034:       }",
          "49050:         }",
          "49052:       }",
          "49064:       }",
          "49078:         }",
          "49079:       }",
          "49094:         }",
          "49095:       }",
          "49107:       }",
          "49120:       }",
          "49132:       }",
          "49146:       }",
          "49155:       }",
          "49174:       }",
          "49189:       }",
          "49204:       }",
          "49226:       }",
          "49245:       }",
          "49266:       }",
          "49288:       }",
          "49305:         }",
          "49307:       }",
          "49325:         return this;",
          "49326:       }",
          "49346:       }",
          "49364:       }",
          "49380:         }",
          "49394:       }",
          "49408:         }",
          "49424:         }",
          "49425:       }",
          "49450:       }",
          "49462:       }",
          "49476:       }",
          "49485:       }",
          "49504:       }",
          "49519:       }",
          "49531:         } else {",
          "49533:         }",
          "49534:       }",
          "49551:           onChanged();",
          "49554:         }",
          "49570:           onChanged();",
          "49573:         }",
          "49574:         return this;",
          "49575:       }",
          "49588:           }",
          "49594:         }",
          "49595:         return this;",
          "49596:       }",
          "49618:       }",
          "49633:         } else {",
          "49635:         }",
          "49637:       }",
          "49652:         } else {",
          "49654:         }",
          "49656:       }",
          "49675:         return this;",
          "49676:       }",
          "49693:         return this;",
          "49694:       }",
          "49711:         return this;",
          "49712:       }",
          "49724:       }",
          "49738:         }",
          "49739:       }",
          "49752:         } else {",
          "49754:         }",
          "49755:       }",
          "49767:       }",
          "49780:       }",
          "49806:       }",
          "49807:       @java.lang.Override",
          "49808:       public final Builder setUnknownFields(",
          "",
          "[Removed Lines]",
          "47089:       public Builder setPageToken(",
          "47094:   bitField0_ |= 0x00000008;",
          "47095:         pageToken_ = value;",
          "47107:       public Builder clearPageToken() {",
          "47108:         bitField0_ = (bitField0_ & ~0x00000008);",
          "47109:         pageToken_ = getDefaultInstance().getPageToken();",
          "47122:       public Builder setPageTokenBytes(",
          "47127:   bitField0_ |= 0x00000008;",
          "47128:         pageToken_ = value;",
          "47133:       private int maxResults_ ;",
          "47145:       @java.lang.Override",
          "47146:       public boolean hasMaxResults() {",
          "47147:         return ((bitField0_ & 0x00000010) != 0);",
          "47160:       @java.lang.Override",
          "47161:       public int getMaxResults() {",
          "47162:         return maxResults_;",
          "47176:       public Builder setMaxResults(int value) {",
          "47177:         bitField0_ |= 0x00000010;",
          "47178:         maxResults_ = value;",
          "47179:         onChanged();",
          "47180:         return this;",
          "47193:       public Builder clearMaxResults() {",
          "47194:         bitField0_ = (bitField0_ & ~0x00000010);",
          "47195:         maxResults_ = 0;",
          "47196:         onChanged();",
          "47199:       @java.lang.Override",
          "47200:       public final Builder setUnknownFields(",
          "47201:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "47202:         return super.setUnknownFields(unknownFields);",
          "47203:       }",
          "47205:       @java.lang.Override",
          "47206:       public final Builder mergeUnknownFields(",
          "47207:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "47208:         return super.mergeUnknownFields(unknownFields);",
          "47209:       }",
          "47213:     }",
          "47216:     private static final org.mlflow.api.proto.Service.GetMetricHistory DEFAULT_INSTANCE;",
          "47217:     static {",
          "47218:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.GetMetricHistory();",
          "47219:     }",
          "47221:     public static org.mlflow.api.proto.Service.GetMetricHistory getDefaultInstance() {",
          "47222:       return DEFAULT_INSTANCE;",
          "47223:     }",
          "47225:     @java.lang.Deprecated public static final com.google.protobuf.Parser<GetMetricHistory>",
          "47226:         PARSER = new com.google.protobuf.AbstractParser<GetMetricHistory>() {",
          "47227:       @java.lang.Override",
          "47228:       public GetMetricHistory parsePartialFrom(",
          "47229:           com.google.protobuf.CodedInputStream input,",
          "47230:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47231:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47232:         return new GetMetricHistory(input, extensionRegistry);",
          "47233:       }",
          "47234:     };",
          "47236:     public static com.google.protobuf.Parser<GetMetricHistory> parser() {",
          "47237:       return PARSER;",
          "47238:     }",
          "47240:     @java.lang.Override",
          "47241:     public com.google.protobuf.Parser<GetMetricHistory> getParserForType() {",
          "47242:       return PARSER;",
          "47243:     }",
          "47245:     @java.lang.Override",
          "47246:     public org.mlflow.api.proto.Service.GetMetricHistory getDefaultInstanceForType() {",
          "47247:       return DEFAULT_INSTANCE;",
          "47248:     }",
          "47250:   }",
          "47252:   public interface LogBatchOrBuilder extends",
          "47254:       com.google.protobuf.MessageOrBuilder {",
          "47264:     boolean hasRunId();",
          "47273:     java.lang.String getRunId();",
          "47282:     com.google.protobuf.ByteString",
          "47283:         getRunIdBytes();",
          "47293:     java.util.List<org.mlflow.api.proto.Service.Metric>",
          "47294:         getMetricsList();",
          "47303:     org.mlflow.api.proto.Service.Metric getMetrics(int index);",
          "47312:     int getMetricsCount();",
          "47321:     java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "47322:         getMetricsOrBuilderList();",
          "47331:     org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "47332:         int index);",
          "47342:     java.util.List<org.mlflow.api.proto.Service.Param>",
          "47343:         getParamsList();",
          "47352:     org.mlflow.api.proto.Service.Param getParams(int index);",
          "47361:     int getParamsCount();",
          "47370:     java.util.List<? extends org.mlflow.api.proto.Service.ParamOrBuilder>",
          "47371:         getParamsOrBuilderList();",
          "47380:     org.mlflow.api.proto.Service.ParamOrBuilder getParamsOrBuilder(",
          "47381:         int index);",
          "47391:     java.util.List<org.mlflow.api.proto.Service.RunTag>",
          "47392:         getTagsList();",
          "47401:     org.mlflow.api.proto.Service.RunTag getTags(int index);",
          "47410:     int getTagsCount();",
          "47419:     java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "47420:         getTagsOrBuilderList();",
          "47429:     org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "47430:         int index);",
          "47431:   }",
          "47435:   public static final class LogBatch extends",
          "47436:       com.google.protobuf.GeneratedMessageV3 implements",
          "47438:       LogBatchOrBuilder {",
          "47439:   private static final long serialVersionUID = 0L;",
          "47441:     private LogBatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "47442:       super(builder);",
          "47443:     }",
          "47444:     private LogBatch() {",
          "47445:       runId_ = \"\";",
          "47446:       metrics_ = java.util.Collections.emptyList();",
          "47447:       params_ = java.util.Collections.emptyList();",
          "47448:       tags_ = java.util.Collections.emptyList();",
          "47449:     }",
          "47451:     @java.lang.Override",
          "47452:     @SuppressWarnings({\"unused\"})",
          "47453:     protected java.lang.Object newInstance(",
          "47454:         UnusedPrivateParameter unused) {",
          "47455:       return new LogBatch();",
          "47456:     }",
          "47458:     @java.lang.Override",
          "47459:     public final com.google.protobuf.UnknownFieldSet",
          "47460:     getUnknownFields() {",
          "47461:       return this.unknownFields;",
          "47462:     }",
          "47463:     private LogBatch(",
          "47464:         com.google.protobuf.CodedInputStream input,",
          "47465:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47466:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "47467:       this();",
          "47468:       if (extensionRegistry == null) {",
          "47469:         throw new java.lang.NullPointerException();",
          "47471:       int mutable_bitField0_ = 0;",
          "47472:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "47473:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "47474:       try {",
          "47475:         boolean done = false;",
          "47476:         while (!done) {",
          "47477:           int tag = input.readTag();",
          "47478:           switch (tag) {",
          "47479:             case 0:",
          "47480:               done = true;",
          "47481:               break;",
          "47482:             case 10: {",
          "47483:               com.google.protobuf.ByteString bs = input.readBytes();",
          "47484:               bitField0_ |= 0x00000001;",
          "47485:               runId_ = bs;",
          "47486:               break;",
          "47487:             }",
          "47488:             case 18: {",
          "47489:               if (!((mutable_bitField0_ & 0x00000002) != 0)) {",
          "47490:                 metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>();",
          "47491:                 mutable_bitField0_ |= 0x00000002;",
          "47492:               }",
          "47493:               metrics_.add(",
          "47494:                   input.readMessage(org.mlflow.api.proto.Service.Metric.PARSER, extensionRegistry));",
          "47495:               break;",
          "47496:             }",
          "47497:             case 26: {",
          "47498:               if (!((mutable_bitField0_ & 0x00000004) != 0)) {",
          "47499:                 params_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Param>();",
          "47500:                 mutable_bitField0_ |= 0x00000004;",
          "47501:               }",
          "47502:               params_.add(",
          "47503:                   input.readMessage(org.mlflow.api.proto.Service.Param.PARSER, extensionRegistry));",
          "47504:               break;",
          "47505:             }",
          "47506:             case 34: {",
          "47507:               if (!((mutable_bitField0_ & 0x00000008) != 0)) {",
          "47508:                 tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>();",
          "47509:                 mutable_bitField0_ |= 0x00000008;",
          "47510:               }",
          "47511:               tags_.add(",
          "47512:                   input.readMessage(org.mlflow.api.proto.Service.RunTag.PARSER, extensionRegistry));",
          "47513:               break;",
          "47514:             }",
          "47515:             default: {",
          "47516:               if (!parseUnknownField(",
          "47517:                   input, unknownFields, extensionRegistry, tag)) {",
          "47518:                 done = true;",
          "47519:               }",
          "47520:               break;",
          "47521:             }",
          "47524:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "47525:         throw e.setUnfinishedMessage(this);",
          "47526:       } catch (java.io.IOException e) {",
          "47527:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "47528:             e).setUnfinishedMessage(this);",
          "47529:       } finally {",
          "47530:         if (((mutable_bitField0_ & 0x00000002) != 0)) {",
          "47531:           metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "47533:         if (((mutable_bitField0_ & 0x00000004) != 0)) {",
          "47534:           params_ = java.util.Collections.unmodifiableList(params_);",
          "47536:         if (((mutable_bitField0_ & 0x00000008) != 0)) {",
          "47537:           tags_ = java.util.Collections.unmodifiableList(tags_);",
          "47539:         this.unknownFields = unknownFields.build();",
          "47540:         makeExtensionsImmutable();",
          "47542:     }",
          "47543:     public static final com.google.protobuf.Descriptors.Descriptor",
          "47544:         getDescriptor() {",
          "47545:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_descriptor;",
          "47546:     }",
          "47548:     @java.lang.Override",
          "47549:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "47550:         internalGetFieldAccessorTable() {",
          "47551:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_fieldAccessorTable",
          "47552:           .ensureFieldAccessorsInitialized(",
          "47553:               org.mlflow.api.proto.Service.LogBatch.class, org.mlflow.api.proto.Service.LogBatch.Builder.class);",
          "47554:     }",
          "47556:     public interface ResponseOrBuilder extends",
          "47558:         com.google.protobuf.MessageOrBuilder {",
          "47559:     }",
          "47563:     public static final class Response extends",
          "47564:         com.google.protobuf.GeneratedMessageV3 implements",
          "47566:         ResponseOrBuilder {",
          "47567:     private static final long serialVersionUID = 0L;",
          "47569:       private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "47570:         super(builder);",
          "47572:       private Response() {",
          "47575:       @java.lang.Override",
          "47576:       @SuppressWarnings({\"unused\"})",
          "47577:       protected java.lang.Object newInstance(",
          "47578:           UnusedPrivateParameter unused) {",
          "47579:         return new Response();",
          "47582:       @java.lang.Override",
          "47583:       public final com.google.protobuf.UnknownFieldSet",
          "47584:       getUnknownFields() {",
          "47585:         return this.unknownFields;",
          "47587:       private Response(",
          "47588:           com.google.protobuf.CodedInputStream input,",
          "47589:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47590:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47591:         this();",
          "47592:         if (extensionRegistry == null) {",
          "47593:           throw new java.lang.NullPointerException();",
          "47595:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "47596:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "47597:         try {",
          "47598:           boolean done = false;",
          "47599:           while (!done) {",
          "47600:             int tag = input.readTag();",
          "47601:             switch (tag) {",
          "47602:               case 0:",
          "47603:                 done = true;",
          "47604:                 break;",
          "47605:               default: {",
          "47606:                 if (!parseUnknownField(",
          "47607:                     input, unknownFields, extensionRegistry, tag)) {",
          "47608:                   done = true;",
          "47609:                 }",
          "47610:                 break;",
          "47611:               }",
          "47612:             }",
          "47613:           }",
          "47614:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "47615:           throw e.setUnfinishedMessage(this);",
          "47616:         } catch (java.io.IOException e) {",
          "47617:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "47618:               e).setUnfinishedMessage(this);",
          "47619:         } finally {",
          "47620:           this.unknownFields = unknownFields.build();",
          "47621:           makeExtensionsImmutable();",
          "47624:       public static final com.google.protobuf.Descriptors.Descriptor",
          "47625:           getDescriptor() {",
          "47626:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_descriptor;",
          "47629:       @java.lang.Override",
          "47630:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "47631:           internalGetFieldAccessorTable() {",
          "47632:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_fieldAccessorTable",
          "47633:             .ensureFieldAccessorsInitialized(",
          "47634:                 org.mlflow.api.proto.Service.LogBatch.Response.class, org.mlflow.api.proto.Service.LogBatch.Response.Builder.class);",
          "47637:       private byte memoizedIsInitialized = -1;",
          "47638:       @java.lang.Override",
          "47639:       public final boolean isInitialized() {",
          "47640:         byte isInitialized = memoizedIsInitialized;",
          "47641:         if (isInitialized == 1) return true;",
          "47642:         if (isInitialized == 0) return false;",
          "47644:         memoizedIsInitialized = 1;",
          "47645:         return true;",
          "47648:       @java.lang.Override",
          "47649:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "47650:                           throws java.io.IOException {",
          "47651:         unknownFields.writeTo(output);",
          "47654:       @java.lang.Override",
          "47655:       public int getSerializedSize() {",
          "47656:         int size = memoizedSize;",
          "47657:         if (size != -1) return size;",
          "47659:         size = 0;",
          "47660:         size += unknownFields.getSerializedSize();",
          "47661:         memoizedSize = size;",
          "47662:         return size;",
          "47665:       @java.lang.Override",
          "47666:       public boolean equals(final java.lang.Object obj) {",
          "47667:         if (obj == this) {",
          "47668:          return true;",
          "47670:         if (!(obj instanceof org.mlflow.api.proto.Service.LogBatch.Response)) {",
          "47671:           return super.equals(obj);",
          "47673:         org.mlflow.api.proto.Service.LogBatch.Response other = (org.mlflow.api.proto.Service.LogBatch.Response) obj;",
          "47675:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "47676:         return true;",
          "47679:       @java.lang.Override",
          "47680:       public int hashCode() {",
          "47681:         if (memoizedHashCode != 0) {",
          "47682:           return memoizedHashCode;",
          "47684:         int hash = 41;",
          "47685:         hash = (19 * hash) + getDescriptor().hashCode();",
          "47686:         hash = (29 * hash) + unknownFields.hashCode();",
          "47687:         memoizedHashCode = hash;",
          "47688:         return hash;",
          "47689:       }",
          "47691:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47692:           java.nio.ByteBuffer data)",
          "47693:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47694:         return PARSER.parseFrom(data);",
          "47695:       }",
          "47696:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47697:           java.nio.ByteBuffer data,",
          "47698:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47699:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47700:         return PARSER.parseFrom(data, extensionRegistry);",
          "47702:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47703:           com.google.protobuf.ByteString data)",
          "47704:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47705:         return PARSER.parseFrom(data);",
          "47707:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47708:           com.google.protobuf.ByteString data,",
          "47709:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47710:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47711:         return PARSER.parseFrom(data, extensionRegistry);",
          "47713:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(byte[] data)",
          "47714:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47715:         return PARSER.parseFrom(data);",
          "47717:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47718:           byte[] data,",
          "47719:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47720:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "47721:         return PARSER.parseFrom(data, extensionRegistry);",
          "47723:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(java.io.InputStream input)",
          "47724:           throws java.io.IOException {",
          "47725:         return com.google.protobuf.GeneratedMessageV3",
          "47726:             .parseWithIOException(PARSER, input);",
          "47728:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47729:           java.io.InputStream input,",
          "47730:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47731:           throws java.io.IOException {",
          "47732:         return com.google.protobuf.GeneratedMessageV3",
          "47733:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "47735:       public static org.mlflow.api.proto.Service.LogBatch.Response parseDelimitedFrom(java.io.InputStream input)",
          "47736:           throws java.io.IOException {",
          "47737:         return com.google.protobuf.GeneratedMessageV3",
          "47738:             .parseDelimitedWithIOException(PARSER, input);",
          "47740:       public static org.mlflow.api.proto.Service.LogBatch.Response parseDelimitedFrom(",
          "47741:           java.io.InputStream input,",
          "47742:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47743:           throws java.io.IOException {",
          "47744:         return com.google.protobuf.GeneratedMessageV3",
          "47745:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "47747:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47748:           com.google.protobuf.CodedInputStream input)",
          "47749:           throws java.io.IOException {",
          "47750:         return com.google.protobuf.GeneratedMessageV3",
          "47751:             .parseWithIOException(PARSER, input);",
          "47753:       public static org.mlflow.api.proto.Service.LogBatch.Response parseFrom(",
          "47754:           com.google.protobuf.CodedInputStream input,",
          "47755:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47756:           throws java.io.IOException {",
          "47757:         return com.google.protobuf.GeneratedMessageV3",
          "47758:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "47761:       @java.lang.Override",
          "47762:       public Builder newBuilderForType() { return newBuilder(); }",
          "47763:       public static Builder newBuilder() {",
          "47764:         return DEFAULT_INSTANCE.toBuilder();",
          "47765:       }",
          "47766:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogBatch.Response prototype) {",
          "47767:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "47768:       }",
          "47769:       @java.lang.Override",
          "47770:       public Builder toBuilder() {",
          "47771:         return this == DEFAULT_INSTANCE",
          "47772:             ? new Builder() : new Builder().mergeFrom(this);",
          "47775:       @java.lang.Override",
          "47776:       protected Builder newBuilderForType(",
          "47777:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "47778:         Builder builder = new Builder(parent);",
          "47779:         return builder;",
          "47780:       }",
          "47784:       public static final class Builder extends",
          "47785:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "47787:           org.mlflow.api.proto.Service.LogBatch.ResponseOrBuilder {",
          "47788:         public static final com.google.protobuf.Descriptors.Descriptor",
          "47789:             getDescriptor() {",
          "47790:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_descriptor;",
          "47791:         }",
          "47793:         @java.lang.Override",
          "47794:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "47795:             internalGetFieldAccessorTable() {",
          "47796:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_fieldAccessorTable",
          "47797:               .ensureFieldAccessorsInitialized(",
          "47798:                   org.mlflow.api.proto.Service.LogBatch.Response.class, org.mlflow.api.proto.Service.LogBatch.Response.Builder.class);",
          "47802:         private Builder() {",
          "47803:           maybeForceBuilderInitialization();",
          "47806:         private Builder(",
          "47807:             com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "47808:           super(parent);",
          "47809:           maybeForceBuilderInitialization();",
          "47811:         private void maybeForceBuilderInitialization() {",
          "47812:           if (com.google.protobuf.GeneratedMessageV3",
          "47813:                   .alwaysUseFieldBuilders) {",
          "47816:         @java.lang.Override",
          "47817:         public Builder clear() {",
          "47818:           super.clear();",
          "47819:           return this;",
          "47820:         }",
          "47822:         @java.lang.Override",
          "47823:         public com.google.protobuf.Descriptors.Descriptor",
          "47824:             getDescriptorForType() {",
          "47825:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_Response_descriptor;",
          "47826:         }",
          "47828:         @java.lang.Override",
          "47829:         public org.mlflow.api.proto.Service.LogBatch.Response getDefaultInstanceForType() {",
          "47830:           return org.mlflow.api.proto.Service.LogBatch.Response.getDefaultInstance();",
          "47833:         @java.lang.Override",
          "47834:         public org.mlflow.api.proto.Service.LogBatch.Response build() {",
          "47835:           org.mlflow.api.proto.Service.LogBatch.Response result = buildPartial();",
          "47836:           if (!result.isInitialized()) {",
          "47837:             throw newUninitializedMessageException(result);",
          "47839:           return result;",
          "47840:         }",
          "47842:         @java.lang.Override",
          "47843:         public org.mlflow.api.proto.Service.LogBatch.Response buildPartial() {",
          "47844:           org.mlflow.api.proto.Service.LogBatch.Response result = new org.mlflow.api.proto.Service.LogBatch.Response(this);",
          "47845:           onBuilt();",
          "47846:           return result;",
          "47847:         }",
          "47849:         @java.lang.Override",
          "47850:         public Builder clone() {",
          "47851:           return super.clone();",
          "47852:         }",
          "47853:         @java.lang.Override",
          "47854:         public Builder setField(",
          "47855:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "47856:             java.lang.Object value) {",
          "47857:           return super.setField(field, value);",
          "47858:         }",
          "47859:         @java.lang.Override",
          "47860:         public Builder clearField(",
          "47861:             com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "47862:           return super.clearField(field);",
          "47864:         @java.lang.Override",
          "47865:         public Builder clearOneof(",
          "47866:             com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "47867:           return super.clearOneof(oneof);",
          "47869:         @java.lang.Override",
          "47870:         public Builder setRepeatedField(",
          "47871:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "47872:             int index, java.lang.Object value) {",
          "47873:           return super.setRepeatedField(field, index, value);",
          "47875:         @java.lang.Override",
          "47876:         public Builder addRepeatedField(",
          "47877:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "47878:             java.lang.Object value) {",
          "47879:           return super.addRepeatedField(field, value);",
          "47881:         @java.lang.Override",
          "47882:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "47883:           if (other instanceof org.mlflow.api.proto.Service.LogBatch.Response) {",
          "47884:             return mergeFrom((org.mlflow.api.proto.Service.LogBatch.Response)other);",
          "47885:           } else {",
          "47886:             super.mergeFrom(other);",
          "47887:             return this;",
          "47888:           }",
          "47891:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogBatch.Response other) {",
          "47892:           if (other == org.mlflow.api.proto.Service.LogBatch.Response.getDefaultInstance()) return this;",
          "47893:           this.mergeUnknownFields(other.unknownFields);",
          "47895:           return this;",
          "47896:         }",
          "47898:         @java.lang.Override",
          "47899:         public final boolean isInitialized() {",
          "47900:           return true;",
          "47903:         @java.lang.Override",
          "47904:         public Builder mergeFrom(",
          "47905:             com.google.protobuf.CodedInputStream input,",
          "47906:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47907:             throws java.io.IOException {",
          "47908:           org.mlflow.api.proto.Service.LogBatch.Response parsedMessage = null;",
          "47909:           try {",
          "47910:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "47911:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "47912:             parsedMessage = (org.mlflow.api.proto.Service.LogBatch.Response) e.getUnfinishedMessage();",
          "47913:             throw e.unwrapIOException();",
          "47914:           } finally {",
          "47915:             if (parsedMessage != null) {",
          "47916:               mergeFrom(parsedMessage);",
          "47917:             }",
          "47918:           }",
          "47919:           return this;",
          "47921:         @java.lang.Override",
          "47922:         public final Builder setUnknownFields(",
          "47923:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "47924:           return super.setUnknownFields(unknownFields);",
          "47927:         @java.lang.Override",
          "47928:         public final Builder mergeUnknownFields(",
          "47929:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "47930:           return super.mergeUnknownFields(unknownFields);",
          "47938:       private static final org.mlflow.api.proto.Service.LogBatch.Response DEFAULT_INSTANCE;",
          "47939:       static {",
          "47940:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogBatch.Response();",
          "47943:       public static org.mlflow.api.proto.Service.LogBatch.Response getDefaultInstance() {",
          "47944:         return DEFAULT_INSTANCE;",
          "47947:       @java.lang.Deprecated public static final com.google.protobuf.Parser<Response>",
          "47948:           PARSER = new com.google.protobuf.AbstractParser<Response>() {",
          "47949:         @java.lang.Override",
          "47950:         public Response parsePartialFrom(",
          "47951:             com.google.protobuf.CodedInputStream input,",
          "47952:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "47953:             throws com.google.protobuf.InvalidProtocolBufferException {",
          "47954:           return new Response(input, extensionRegistry);",
          "47956:       };",
          "47958:       public static com.google.protobuf.Parser<Response> parser() {",
          "47959:         return PARSER;",
          "47963:       public com.google.protobuf.Parser<Response> getParserForType() {",
          "47964:         return PARSER;",
          "47968:       public org.mlflow.api.proto.Service.LogBatch.Response getDefaultInstanceForType() {",
          "47969:         return DEFAULT_INSTANCE;",
          "47974:     private int bitField0_;",
          "47975:     public static final int RUN_ID_FIELD_NUMBER = 1;",
          "47976:     private volatile java.lang.Object runId_;",
          "47985:     @java.lang.Override",
          "47986:     public boolean hasRunId() {",
          "47987:       return ((bitField0_ & 0x00000001) != 0);",
          "47997:     @java.lang.Override",
          "47998:     public java.lang.String getRunId() {",
          "47999:       java.lang.Object ref = runId_;",
          "48000:       if (ref instanceof java.lang.String) {",
          "48001:         return (java.lang.String) ref;",
          "48002:       } else {",
          "48003:         com.google.protobuf.ByteString bs =",
          "48004:             (com.google.protobuf.ByteString) ref;",
          "48005:         java.lang.String s = bs.toStringUtf8();",
          "48006:         if (bs.isValidUtf8()) {",
          "48007:           runId_ = s;",
          "48008:         }",
          "48009:         return s;",
          "48010:       }",
          "48020:     @java.lang.Override",
          "48021:     public com.google.protobuf.ByteString",
          "48022:         getRunIdBytes() {",
          "48023:       java.lang.Object ref = runId_;",
          "48024:       if (ref instanceof java.lang.String) {",
          "48025:         com.google.protobuf.ByteString b =",
          "48026:             com.google.protobuf.ByteString.copyFromUtf8(",
          "48027:                 (java.lang.String) ref);",
          "48028:         runId_ = b;",
          "48029:         return b;",
          "48030:       } else {",
          "48031:         return (com.google.protobuf.ByteString) ref;",
          "48033:     }",
          "48035:     public static final int METRICS_FIELD_NUMBER = 2;",
          "48036:     private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_;",
          "48045:     @java.lang.Override",
          "48046:     public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "48047:       return metrics_;",
          "48048:     }",
          "48057:     @java.lang.Override",
          "48058:     public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "48059:         getMetricsOrBuilderList() {",
          "48060:       return metrics_;",
          "48061:     }",
          "48070:     @java.lang.Override",
          "48071:     public int getMetricsCount() {",
          "48072:       return metrics_.size();",
          "48073:     }",
          "48082:     @java.lang.Override",
          "48083:     public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "48084:       return metrics_.get(index);",
          "48085:     }",
          "48094:     @java.lang.Override",
          "48095:     public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "48096:         int index) {",
          "48097:       return metrics_.get(index);",
          "48100:     public static final int PARAMS_FIELD_NUMBER = 3;",
          "48101:     private java.util.List<org.mlflow.api.proto.Service.Param> params_;",
          "48111:     public java.util.List<org.mlflow.api.proto.Service.Param> getParamsList() {",
          "48112:       return params_;",
          "48123:     public java.util.List<? extends org.mlflow.api.proto.Service.ParamOrBuilder>",
          "48124:         getParamsOrBuilderList() {",
          "48125:       return params_;",
          "48135:     @java.lang.Override",
          "48136:     public int getParamsCount() {",
          "48137:       return params_.size();",
          "48138:     }",
          "48147:     @java.lang.Override",
          "48148:     public org.mlflow.api.proto.Service.Param getParams(int index) {",
          "48149:       return params_.get(index);",
          "48150:     }",
          "48159:     @java.lang.Override",
          "48160:     public org.mlflow.api.proto.Service.ParamOrBuilder getParamsOrBuilder(",
          "48161:         int index) {",
          "48162:       return params_.get(index);",
          "48163:     }",
          "48165:     public static final int TAGS_FIELD_NUMBER = 4;",
          "48166:     private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_;",
          "48175:     @java.lang.Override",
          "48176:     public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "48177:       return tags_;",
          "48178:     }",
          "48187:     @java.lang.Override",
          "48188:     public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "48189:         getTagsOrBuilderList() {",
          "48190:       return tags_;",
          "48191:     }",
          "48200:     @java.lang.Override",
          "48201:     public int getTagsCount() {",
          "48202:       return tags_.size();",
          "48203:     }",
          "48212:     @java.lang.Override",
          "48213:     public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "48214:       return tags_.get(index);",
          "48215:     }",
          "48224:     @java.lang.Override",
          "48225:     public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "48226:         int index) {",
          "48227:       return tags_.get(index);",
          "48228:     }",
          "48230:     private byte memoizedIsInitialized = -1;",
          "48231:     @java.lang.Override",
          "48232:     public final boolean isInitialized() {",
          "48233:       byte isInitialized = memoizedIsInitialized;",
          "48234:       if (isInitialized == 1) return true;",
          "48235:       if (isInitialized == 0) return false;",
          "48237:       memoizedIsInitialized = 1;",
          "48238:       return true;",
          "48239:     }",
          "48241:     @java.lang.Override",
          "48242:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "48243:                         throws java.io.IOException {",
          "48244:       if (((bitField0_ & 0x00000001) != 0)) {",
          "48245:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "48246:       }",
          "48247:       for (int i = 0; i < metrics_.size(); i++) {",
          "48248:         output.writeMessage(2, metrics_.get(i));",
          "48249:       }",
          "48250:       for (int i = 0; i < params_.size(); i++) {",
          "48251:         output.writeMessage(3, params_.get(i));",
          "48252:       }",
          "48253:       for (int i = 0; i < tags_.size(); i++) {",
          "48254:         output.writeMessage(4, tags_.get(i));",
          "48255:       }",
          "48256:       unknownFields.writeTo(output);",
          "48257:     }",
          "48259:     @java.lang.Override",
          "48260:     public int getSerializedSize() {",
          "48261:       int size = memoizedSize;",
          "48262:       if (size != -1) return size;",
          "48264:       size = 0;",
          "48265:       if (((bitField0_ & 0x00000001) != 0)) {",
          "48266:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "48267:       }",
          "48268:       for (int i = 0; i < metrics_.size(); i++) {",
          "48269:         size += com.google.protobuf.CodedOutputStream",
          "48270:           .computeMessageSize(2, metrics_.get(i));",
          "48271:       }",
          "48272:       for (int i = 0; i < params_.size(); i++) {",
          "48273:         size += com.google.protobuf.CodedOutputStream",
          "48274:           .computeMessageSize(3, params_.get(i));",
          "48275:       }",
          "48276:       for (int i = 0; i < tags_.size(); i++) {",
          "48277:         size += com.google.protobuf.CodedOutputStream",
          "48278:           .computeMessageSize(4, tags_.get(i));",
          "48279:       }",
          "48280:       size += unknownFields.getSerializedSize();",
          "48281:       memoizedSize = size;",
          "48282:       return size;",
          "48285:     @java.lang.Override",
          "48286:     public boolean equals(final java.lang.Object obj) {",
          "48287:       if (obj == this) {",
          "48288:        return true;",
          "48289:       }",
          "48290:       if (!(obj instanceof org.mlflow.api.proto.Service.LogBatch)) {",
          "48291:         return super.equals(obj);",
          "48292:       }",
          "48293:       org.mlflow.api.proto.Service.LogBatch other = (org.mlflow.api.proto.Service.LogBatch) obj;",
          "48295:       if (hasRunId() != other.hasRunId()) return false;",
          "48296:       if (hasRunId()) {",
          "48297:         if (!getRunId()",
          "48298:             .equals(other.getRunId())) return false;",
          "48299:       }",
          "48300:       if (!getMetricsList()",
          "48301:           .equals(other.getMetricsList())) return false;",
          "48302:       if (!getParamsList()",
          "48303:           .equals(other.getParamsList())) return false;",
          "48304:       if (!getTagsList()",
          "48305:           .equals(other.getTagsList())) return false;",
          "48306:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "48307:       return true;",
          "48311:     public int hashCode() {",
          "48312:       if (memoizedHashCode != 0) {",
          "48313:         return memoizedHashCode;",
          "48314:       }",
          "48315:       int hash = 41;",
          "48316:       hash = (19 * hash) + getDescriptor().hashCode();",
          "48317:       if (hasRunId()) {",
          "48318:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "48319:         hash = (53 * hash) + getRunId().hashCode();",
          "48320:       }",
          "48321:       if (getMetricsCount() > 0) {",
          "48322:         hash = (37 * hash) + METRICS_FIELD_NUMBER;",
          "48323:         hash = (53 * hash) + getMetricsList().hashCode();",
          "48324:       }",
          "48325:       if (getParamsCount() > 0) {",
          "48326:         hash = (37 * hash) + PARAMS_FIELD_NUMBER;",
          "48327:         hash = (53 * hash) + getParamsList().hashCode();",
          "48328:       }",
          "48329:       if (getTagsCount() > 0) {",
          "48330:         hash = (37 * hash) + TAGS_FIELD_NUMBER;",
          "48331:         hash = (53 * hash) + getTagsList().hashCode();",
          "48332:       }",
          "48333:       hash = (29 * hash) + unknownFields.hashCode();",
          "48334:       memoizedHashCode = hash;",
          "48335:       return hash;",
          "48338:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48339:         java.nio.ByteBuffer data)",
          "48340:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "48341:       return PARSER.parseFrom(data);",
          "48342:     }",
          "48343:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48344:         java.nio.ByteBuffer data,",
          "48345:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48346:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "48347:       return PARSER.parseFrom(data, extensionRegistry);",
          "48348:     }",
          "48349:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48350:         com.google.protobuf.ByteString data)",
          "48351:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "48352:       return PARSER.parseFrom(data);",
          "48353:     }",
          "48354:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48355:         com.google.protobuf.ByteString data,",
          "48356:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48357:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "48358:       return PARSER.parseFrom(data, extensionRegistry);",
          "48359:     }",
          "48360:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(byte[] data)",
          "48361:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "48362:       return PARSER.parseFrom(data);",
          "48364:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48365:         byte[] data,",
          "48368:       return PARSER.parseFrom(data, extensionRegistry);",
          "48369:     }",
          "48370:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(java.io.InputStream input)",
          "48371:         throws java.io.IOException {",
          "48372:       return com.google.protobuf.GeneratedMessageV3",
          "48373:           .parseWithIOException(PARSER, input);",
          "48374:     }",
          "48375:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48376:         java.io.InputStream input,",
          "48377:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48378:         throws java.io.IOException {",
          "48379:       return com.google.protobuf.GeneratedMessageV3",
          "48380:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "48381:     }",
          "48382:     public static org.mlflow.api.proto.Service.LogBatch parseDelimitedFrom(java.io.InputStream input)",
          "48383:         throws java.io.IOException {",
          "48384:       return com.google.protobuf.GeneratedMessageV3",
          "48385:           .parseDelimitedWithIOException(PARSER, input);",
          "48386:     }",
          "48387:     public static org.mlflow.api.proto.Service.LogBatch parseDelimitedFrom(",
          "48388:         java.io.InputStream input,",
          "48389:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48390:         throws java.io.IOException {",
          "48391:       return com.google.protobuf.GeneratedMessageV3",
          "48392:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "48393:     }",
          "48394:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48395:         com.google.protobuf.CodedInputStream input)",
          "48396:         throws java.io.IOException {",
          "48397:       return com.google.protobuf.GeneratedMessageV3",
          "48398:           .parseWithIOException(PARSER, input);",
          "48400:     public static org.mlflow.api.proto.Service.LogBatch parseFrom(",
          "48401:         com.google.protobuf.CodedInputStream input,",
          "48402:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48403:         throws java.io.IOException {",
          "48404:       return com.google.protobuf.GeneratedMessageV3",
          "48405:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "48409:     public Builder newBuilderForType() { return newBuilder(); }",
          "48410:     public static Builder newBuilder() {",
          "48411:       return DEFAULT_INSTANCE.toBuilder();",
          "48412:     }",
          "48413:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogBatch prototype) {",
          "48414:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "48415:     }",
          "48416:     @java.lang.Override",
          "48417:     public Builder toBuilder() {",
          "48418:       return this == DEFAULT_INSTANCE",
          "48419:           ? new Builder() : new Builder().mergeFrom(this);",
          "48422:     @java.lang.Override",
          "48423:     protected Builder newBuilderForType(",
          "48424:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "48425:       Builder builder = new Builder(parent);",
          "48426:       return builder;",
          "48431:     public static final class Builder extends",
          "48432:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "48434:         org.mlflow.api.proto.Service.LogBatchOrBuilder {",
          "48435:       public static final com.google.protobuf.Descriptors.Descriptor",
          "48436:           getDescriptor() {",
          "48437:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_descriptor;",
          "48440:       @java.lang.Override",
          "48441:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "48442:           internalGetFieldAccessorTable() {",
          "48443:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_fieldAccessorTable",
          "48444:             .ensureFieldAccessorsInitialized(",
          "48445:                 org.mlflow.api.proto.Service.LogBatch.class, org.mlflow.api.proto.Service.LogBatch.Builder.class);",
          "48449:       private Builder() {",
          "48450:         maybeForceBuilderInitialization();",
          "48453:       private Builder(",
          "48454:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "48455:         super(parent);",
          "48456:         maybeForceBuilderInitialization();",
          "48457:       }",
          "48458:       private void maybeForceBuilderInitialization() {",
          "48459:         if (com.google.protobuf.GeneratedMessageV3",
          "48460:                 .alwaysUseFieldBuilders) {",
          "48461:           getMetricsFieldBuilder();",
          "48462:           getParamsFieldBuilder();",
          "48463:           getTagsFieldBuilder();",
          "48464:         }",
          "48465:       }",
          "48467:       public Builder clear() {",
          "48468:         super.clear();",
          "48469:         runId_ = \"\";",
          "48470:         bitField0_ = (bitField0_ & ~0x00000001);",
          "48471:         if (metricsBuilder_ == null) {",
          "48472:           metrics_ = java.util.Collections.emptyList();",
          "48473:           bitField0_ = (bitField0_ & ~0x00000002);",
          "48474:         } else {",
          "48475:           metricsBuilder_.clear();",
          "48476:         }",
          "48477:         if (paramsBuilder_ == null) {",
          "48478:           params_ = java.util.Collections.emptyList();",
          "48479:           bitField0_ = (bitField0_ & ~0x00000004);",
          "48480:         } else {",
          "48481:           paramsBuilder_.clear();",
          "48483:         if (tagsBuilder_ == null) {",
          "48484:           tags_ = java.util.Collections.emptyList();",
          "48485:           bitField0_ = (bitField0_ & ~0x00000008);",
          "48486:         } else {",
          "48487:           tagsBuilder_.clear();",
          "48489:         return this;",
          "48492:       @java.lang.Override",
          "48493:       public com.google.protobuf.Descriptors.Descriptor",
          "48494:           getDescriptorForType() {",
          "48495:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogBatch_descriptor;",
          "48499:       public org.mlflow.api.proto.Service.LogBatch getDefaultInstanceForType() {",
          "48500:         return org.mlflow.api.proto.Service.LogBatch.getDefaultInstance();",
          "48504:       public org.mlflow.api.proto.Service.LogBatch build() {",
          "48505:         org.mlflow.api.proto.Service.LogBatch result = buildPartial();",
          "48506:         if (!result.isInitialized()) {",
          "48507:           throw newUninitializedMessageException(result);",
          "48508:         }",
          "48509:         return result;",
          "48510:       }",
          "48512:       @java.lang.Override",
          "48513:       public org.mlflow.api.proto.Service.LogBatch buildPartial() {",
          "48514:         org.mlflow.api.proto.Service.LogBatch result = new org.mlflow.api.proto.Service.LogBatch(this);",
          "48515:         int from_bitField0_ = bitField0_;",
          "48516:         int to_bitField0_ = 0;",
          "48517:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "48518:           to_bitField0_ |= 0x00000001;",
          "48519:         }",
          "48520:         result.runId_ = runId_;",
          "48521:         if (metricsBuilder_ == null) {",
          "48522:           if (((bitField0_ & 0x00000002) != 0)) {",
          "48523:             metrics_ = java.util.Collections.unmodifiableList(metrics_);",
          "48524:             bitField0_ = (bitField0_ & ~0x00000002);",
          "48525:           }",
          "48526:           result.metrics_ = metrics_;",
          "48527:         } else {",
          "48528:           result.metrics_ = metricsBuilder_.build();",
          "48529:         }",
          "48530:         if (paramsBuilder_ == null) {",
          "48531:           if (((bitField0_ & 0x00000004) != 0)) {",
          "48532:             params_ = java.util.Collections.unmodifiableList(params_);",
          "48533:             bitField0_ = (bitField0_ & ~0x00000004);",
          "48534:           }",
          "48535:           result.params_ = params_;",
          "48536:         } else {",
          "48537:           result.params_ = paramsBuilder_.build();",
          "48538:         }",
          "48539:         if (tagsBuilder_ == null) {",
          "48540:           if (((bitField0_ & 0x00000008) != 0)) {",
          "48541:             tags_ = java.util.Collections.unmodifiableList(tags_);",
          "48542:             bitField0_ = (bitField0_ & ~0x00000008);",
          "48543:           }",
          "48544:           result.tags_ = tags_;",
          "48545:         } else {",
          "48546:           result.tags_ = tagsBuilder_.build();",
          "48547:         }",
          "48548:         result.bitField0_ = to_bitField0_;",
          "48549:         onBuilt();",
          "48550:         return result;",
          "48554:       public Builder clone() {",
          "48555:         return super.clone();",
          "48556:       }",
          "48557:       @java.lang.Override",
          "48558:       public Builder setField(",
          "48559:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "48560:           java.lang.Object value) {",
          "48561:         return super.setField(field, value);",
          "48562:       }",
          "48563:       @java.lang.Override",
          "48564:       public Builder clearField(",
          "48565:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "48566:         return super.clearField(field);",
          "48567:       }",
          "48568:       @java.lang.Override",
          "48569:       public Builder clearOneof(",
          "48570:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "48571:         return super.clearOneof(oneof);",
          "48572:       }",
          "48573:       @java.lang.Override",
          "48574:       public Builder setRepeatedField(",
          "48575:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "48576:           int index, java.lang.Object value) {",
          "48577:         return super.setRepeatedField(field, index, value);",
          "48578:       }",
          "48579:       @java.lang.Override",
          "48580:       public Builder addRepeatedField(",
          "48581:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "48582:           java.lang.Object value) {",
          "48583:         return super.addRepeatedField(field, value);",
          "48584:       }",
          "48585:       @java.lang.Override",
          "48586:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "48587:         if (other instanceof org.mlflow.api.proto.Service.LogBatch) {",
          "48588:           return mergeFrom((org.mlflow.api.proto.Service.LogBatch)other);",
          "48589:         } else {",
          "48590:           super.mergeFrom(other);",
          "48591:           return this;",
          "48592:         }",
          "48595:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogBatch other) {",
          "48596:         if (other == org.mlflow.api.proto.Service.LogBatch.getDefaultInstance()) return this;",
          "48597:         if (other.hasRunId()) {",
          "48598:           bitField0_ |= 0x00000001;",
          "48599:           runId_ = other.runId_;",
          "48600:           onChanged();",
          "48601:         }",
          "48602:         if (metricsBuilder_ == null) {",
          "48603:           if (!other.metrics_.isEmpty()) {",
          "48604:             if (metrics_.isEmpty()) {",
          "48605:               metrics_ = other.metrics_;",
          "48606:               bitField0_ = (bitField0_ & ~0x00000002);",
          "48607:             } else {",
          "48608:               ensureMetricsIsMutable();",
          "48609:               metrics_.addAll(other.metrics_);",
          "48610:             }",
          "48611:             onChanged();",
          "48612:           }",
          "48613:         } else {",
          "48614:           if (!other.metrics_.isEmpty()) {",
          "48615:             if (metricsBuilder_.isEmpty()) {",
          "48616:               metricsBuilder_.dispose();",
          "48617:               metricsBuilder_ = null;",
          "48618:               metrics_ = other.metrics_;",
          "48619:               bitField0_ = (bitField0_ & ~0x00000002);",
          "48620:               metricsBuilder_ =",
          "48621:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "48622:                    getMetricsFieldBuilder() : null;",
          "48623:             } else {",
          "48624:               metricsBuilder_.addAllMessages(other.metrics_);",
          "48625:             }",
          "48626:           }",
          "48627:         }",
          "48628:         if (paramsBuilder_ == null) {",
          "48629:           if (!other.params_.isEmpty()) {",
          "48630:             if (params_.isEmpty()) {",
          "48631:               params_ = other.params_;",
          "48632:               bitField0_ = (bitField0_ & ~0x00000004);",
          "48633:             } else {",
          "48634:               ensureParamsIsMutable();",
          "48635:               params_.addAll(other.params_);",
          "48636:             }",
          "48637:             onChanged();",
          "48638:           }",
          "48639:         } else {",
          "48640:           if (!other.params_.isEmpty()) {",
          "48641:             if (paramsBuilder_.isEmpty()) {",
          "48642:               paramsBuilder_.dispose();",
          "48643:               paramsBuilder_ = null;",
          "48644:               params_ = other.params_;",
          "48645:               bitField0_ = (bitField0_ & ~0x00000004);",
          "48646:               paramsBuilder_ =",
          "48647:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "48648:                    getParamsFieldBuilder() : null;",
          "48649:             } else {",
          "48650:               paramsBuilder_.addAllMessages(other.params_);",
          "48651:             }",
          "48652:           }",
          "48653:         }",
          "48654:         if (tagsBuilder_ == null) {",
          "48655:           if (!other.tags_.isEmpty()) {",
          "48656:             if (tags_.isEmpty()) {",
          "48657:               tags_ = other.tags_;",
          "48658:               bitField0_ = (bitField0_ & ~0x00000008);",
          "48659:             } else {",
          "48660:               ensureTagsIsMutable();",
          "48661:               tags_.addAll(other.tags_);",
          "48662:             }",
          "48663:             onChanged();",
          "48664:           }",
          "48665:         } else {",
          "48666:           if (!other.tags_.isEmpty()) {",
          "48667:             if (tagsBuilder_.isEmpty()) {",
          "48668:               tagsBuilder_.dispose();",
          "48669:               tagsBuilder_ = null;",
          "48670:               tags_ = other.tags_;",
          "48671:               bitField0_ = (bitField0_ & ~0x00000008);",
          "48672:               tagsBuilder_ =",
          "48673:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "48674:                    getTagsFieldBuilder() : null;",
          "48675:             } else {",
          "48676:               tagsBuilder_.addAllMessages(other.tags_);",
          "48677:             }",
          "48678:           }",
          "48679:         }",
          "48680:         this.mergeUnknownFields(other.unknownFields);",
          "48681:         onChanged();",
          "48682:         return this;",
          "48686:       public final boolean isInitialized() {",
          "48691:       public Builder mergeFrom(",
          "48692:           com.google.protobuf.CodedInputStream input,",
          "48693:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "48694:           throws java.io.IOException {",
          "48695:         org.mlflow.api.proto.Service.LogBatch parsedMessage = null;",
          "48696:         try {",
          "48697:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "48698:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "48699:           parsedMessage = (org.mlflow.api.proto.Service.LogBatch) e.getUnfinishedMessage();",
          "48700:           throw e.unwrapIOException();",
          "48701:         } finally {",
          "48702:           if (parsedMessage != null) {",
          "48703:             mergeFrom(parsedMessage);",
          "48704:           }",
          "48706:         return this;",
          "48708:       private int bitField0_;",
          "48710:       private java.lang.Object runId_ = \"\";",
          "48719:       public boolean hasRunId() {",
          "48720:         return ((bitField0_ & 0x00000001) != 0);",
          "48730:       public java.lang.String getRunId() {",
          "48731:         java.lang.Object ref = runId_;",
          "48732:         if (!(ref instanceof java.lang.String)) {",
          "48733:           com.google.protobuf.ByteString bs =",
          "48734:               (com.google.protobuf.ByteString) ref;",
          "48735:           java.lang.String s = bs.toStringUtf8();",
          "48736:           if (bs.isValidUtf8()) {",
          "48737:             runId_ = s;",
          "48738:           }",
          "48739:           return s;",
          "48740:         } else {",
          "48741:           return (java.lang.String) ref;",
          "48742:         }",
          "48752:       public com.google.protobuf.ByteString",
          "48753:           getRunIdBytes() {",
          "48754:         java.lang.Object ref = runId_;",
          "48755:         if (ref instanceof String) {",
          "48756:           com.google.protobuf.ByteString b =",
          "48757:               com.google.protobuf.ByteString.copyFromUtf8(",
          "48758:                   (java.lang.String) ref);",
          "48759:           runId_ = b;",
          "48760:           return b;",
          "48761:         } else {",
          "48762:           return (com.google.protobuf.ByteString) ref;",
          "48763:         }",
          "48774:       public Builder setRunId(",
          "48775:           java.lang.String value) {",
          "48776:         if (value == null) {",
          "48777:     throw new NullPointerException();",
          "48778:   }",
          "48779:   bitField0_ |= 0x00000001;",
          "48780:         runId_ = value;",
          "48781:         onChanged();",
          "48782:         return this;",
          "48792:       public Builder clearRunId() {",
          "48793:         bitField0_ = (bitField0_ & ~0x00000001);",
          "48794:         runId_ = getDefaultInstance().getRunId();",
          "48795:         onChanged();",
          "48796:         return this;",
          "48807:       public Builder setRunIdBytes(",
          "48808:           com.google.protobuf.ByteString value) {",
          "48809:         if (value == null) {",
          "48810:     throw new NullPointerException();",
          "48811:   }",
          "48812:   bitField0_ |= 0x00000001;",
          "48813:         runId_ = value;",
          "48814:         onChanged();",
          "48815:         return this;",
          "48818:       private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_ =",
          "48819:         java.util.Collections.emptyList();",
          "48820:       private void ensureMetricsIsMutable() {",
          "48821:         if (!((bitField0_ & 0x00000002) != 0)) {",
          "48822:           metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>(metrics_);",
          "48823:           bitField0_ |= 0x00000002;",
          "48824:          }",
          "48827:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "48828:           org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder> metricsBuilder_;",
          "48838:       public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "48839:         if (metricsBuilder_ == null) {",
          "48840:           return java.util.Collections.unmodifiableList(metrics_);",
          "48841:         } else {",
          "48842:           return metricsBuilder_.getMessageList();",
          "48843:         }",
          "48853:       public int getMetricsCount() {",
          "48854:         if (metricsBuilder_ == null) {",
          "48855:           return metrics_.size();",
          "48856:         } else {",
          "48857:           return metricsBuilder_.getCount();",
          "48859:       }",
          "48868:       public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "48869:         if (metricsBuilder_ == null) {",
          "48870:           return metrics_.get(index);",
          "48871:         } else {",
          "48872:           return metricsBuilder_.getMessage(index);",
          "48874:       }",
          "48883:       public Builder setMetrics(",
          "48884:           int index, org.mlflow.api.proto.Service.Metric value) {",
          "48885:         if (metricsBuilder_ == null) {",
          "48886:           if (value == null) {",
          "48887:             throw new NullPointerException();",
          "48889:           ensureMetricsIsMutable();",
          "48890:           metrics_.set(index, value);",
          "48891:           onChanged();",
          "48892:         } else {",
          "48893:           metricsBuilder_.setMessage(index, value);",
          "48895:         return this;",
          "48896:       }",
          "48905:       public Builder setMetrics(",
          "48906:           int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "48907:         if (metricsBuilder_ == null) {",
          "48908:           ensureMetricsIsMutable();",
          "48909:           metrics_.set(index, builderForValue.build());",
          "48910:           onChanged();",
          "48911:         } else {",
          "48912:           metricsBuilder_.setMessage(index, builderForValue.build());",
          "48914:         return this;",
          "48915:       }",
          "48924:       public Builder addMetrics(org.mlflow.api.proto.Service.Metric value) {",
          "48925:         if (metricsBuilder_ == null) {",
          "48926:           if (value == null) {",
          "48927:             throw new NullPointerException();",
          "48929:           ensureMetricsIsMutable();",
          "48930:           metrics_.add(value);",
          "48931:           onChanged();",
          "48932:         } else {",
          "48933:           metricsBuilder_.addMessage(value);",
          "48935:         return this;",
          "48936:       }",
          "48945:       public Builder addMetrics(",
          "48946:           int index, org.mlflow.api.proto.Service.Metric value) {",
          "48947:         if (metricsBuilder_ == null) {",
          "48948:           if (value == null) {",
          "48949:             throw new NullPointerException();",
          "48951:           ensureMetricsIsMutable();",
          "48952:           metrics_.add(index, value);",
          "48953:           onChanged();",
          "48954:         } else {",
          "48955:           metricsBuilder_.addMessage(index, value);",
          "48957:         return this;",
          "48958:       }",
          "48967:       public Builder addMetrics(",
          "48968:           org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "48969:         if (metricsBuilder_ == null) {",
          "48970:           ensureMetricsIsMutable();",
          "48971:           metrics_.add(builderForValue.build());",
          "48973:         } else {",
          "48974:           metricsBuilder_.addMessage(builderForValue.build());",
          "48976:         return this;",
          "48977:       }",
          "48986:       public Builder addMetrics(",
          "48987:           int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "48988:         if (metricsBuilder_ == null) {",
          "48989:           ensureMetricsIsMutable();",
          "48990:           metrics_.add(index, builderForValue.build());",
          "48991:           onChanged();",
          "48992:         } else {",
          "48993:           metricsBuilder_.addMessage(index, builderForValue.build());",
          "48995:         return this;",
          "48996:       }",
          "49005:       public Builder addAllMetrics(",
          "49006:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.Metric> values) {",
          "49007:         if (metricsBuilder_ == null) {",
          "49008:           ensureMetricsIsMutable();",
          "49009:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "49010:               values, metrics_);",
          "49011:           onChanged();",
          "49012:         } else {",
          "49013:           metricsBuilder_.addAllMessages(values);",
          "49015:         return this;",
          "49025:       public Builder clearMetrics() {",
          "49026:         if (metricsBuilder_ == null) {",
          "49027:           metrics_ = java.util.Collections.emptyList();",
          "49028:           bitField0_ = (bitField0_ & ~0x00000002);",
          "49029:           onChanged();",
          "49030:         } else {",
          "49031:           metricsBuilder_.clear();",
          "49032:         }",
          "49033:         return this;",
          "49043:       public Builder removeMetrics(int index) {",
          "49044:         if (metricsBuilder_ == null) {",
          "49045:           ensureMetricsIsMutable();",
          "49046:           metrics_.remove(index);",
          "49047:           onChanged();",
          "49048:         } else {",
          "49049:           metricsBuilder_.remove(index);",
          "49051:         return this;",
          "49061:       public org.mlflow.api.proto.Service.Metric.Builder getMetricsBuilder(",
          "49062:           int index) {",
          "49063:         return getMetricsFieldBuilder().getBuilder(index);",
          "49073:       public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "49074:           int index) {",
          "49075:         if (metricsBuilder_ == null) {",
          "49076:           return metrics_.get(index);  } else {",
          "49077:           return metricsBuilder_.getMessageOrBuilder(index);",
          "49088:       public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "49089:            getMetricsOrBuilderList() {",
          "49090:         if (metricsBuilder_ != null) {",
          "49091:           return metricsBuilder_.getMessageOrBuilderList();",
          "49092:         } else {",
          "49093:           return java.util.Collections.unmodifiableList(metrics_);",
          "49104:       public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder() {",
          "49105:         return getMetricsFieldBuilder().addBuilder(",
          "49106:             org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "49116:       public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder(",
          "49117:           int index) {",
          "49118:         return getMetricsFieldBuilder().addBuilder(",
          "49119:             index, org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "49129:       public java.util.List<org.mlflow.api.proto.Service.Metric.Builder>",
          "49130:            getMetricsBuilderList() {",
          "49131:         return getMetricsFieldBuilder().getBuilderList();",
          "49133:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "49134:           org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>",
          "49135:           getMetricsFieldBuilder() {",
          "49136:         if (metricsBuilder_ == null) {",
          "49137:           metricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "49138:               org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>(",
          "49139:                   metrics_,",
          "49140:                   ((bitField0_ & 0x00000002) != 0),",
          "49141:                   getParentForChildren(),",
          "49142:                   isClean());",
          "49143:           metrics_ = null;",
          "49144:         }",
          "49145:         return metricsBuilder_;",
          "49148:       private java.util.List<org.mlflow.api.proto.Service.Param> params_ =",
          "49149:         java.util.Collections.emptyList();",
          "49150:       private void ensureParamsIsMutable() {",
          "49151:         if (!((bitField0_ & 0x00000004) != 0)) {",
          "49152:           params_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Param>(params_);",
          "49153:           bitField0_ |= 0x00000004;",
          "49154:          }",
          "49157:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "49158:           org.mlflow.api.proto.Service.Param, org.mlflow.api.proto.Service.Param.Builder, org.mlflow.api.proto.Service.ParamOrBuilder> paramsBuilder_;",
          "49168:       public java.util.List<org.mlflow.api.proto.Service.Param> getParamsList() {",
          "49169:         if (paramsBuilder_ == null) {",
          "49170:           return java.util.Collections.unmodifiableList(params_);",
          "49171:         } else {",
          "49172:           return paramsBuilder_.getMessageList();",
          "49173:         }",
          "49183:       public int getParamsCount() {",
          "49184:         if (paramsBuilder_ == null) {",
          "49185:           return params_.size();",
          "49186:         } else {",
          "49187:           return paramsBuilder_.getCount();",
          "49188:         }",
          "49198:       public org.mlflow.api.proto.Service.Param getParams(int index) {",
          "49199:         if (paramsBuilder_ == null) {",
          "49200:           return params_.get(index);",
          "49201:         } else {",
          "49202:           return paramsBuilder_.getMessage(index);",
          "49203:         }",
          "49213:       public Builder setParams(",
          "49214:           int index, org.mlflow.api.proto.Service.Param value) {",
          "49215:         if (paramsBuilder_ == null) {",
          "49216:           if (value == null) {",
          "49217:             throw new NullPointerException();",
          "49218:           }",
          "49219:           ensureParamsIsMutable();",
          "49220:           params_.set(index, value);",
          "49221:           onChanged();",
          "49222:         } else {",
          "49223:           paramsBuilder_.setMessage(index, value);",
          "49224:         }",
          "49225:         return this;",
          "49235:       public Builder setParams(",
          "49236:           int index, org.mlflow.api.proto.Service.Param.Builder builderForValue) {",
          "49237:         if (paramsBuilder_ == null) {",
          "49238:           ensureParamsIsMutable();",
          "49239:           params_.set(index, builderForValue.build());",
          "49240:           onChanged();",
          "49241:         } else {",
          "49242:           paramsBuilder_.setMessage(index, builderForValue.build());",
          "49243:         }",
          "49244:         return this;",
          "49254:       public Builder addParams(org.mlflow.api.proto.Service.Param value) {",
          "49255:         if (paramsBuilder_ == null) {",
          "49256:           if (value == null) {",
          "49257:             throw new NullPointerException();",
          "49258:           }",
          "49259:           ensureParamsIsMutable();",
          "49260:           params_.add(value);",
          "49261:           onChanged();",
          "49262:         } else {",
          "49263:           paramsBuilder_.addMessage(value);",
          "49264:         }",
          "49265:         return this;",
          "49275:       public Builder addParams(",
          "49276:           int index, org.mlflow.api.proto.Service.Param value) {",
          "49277:         if (paramsBuilder_ == null) {",
          "49278:           if (value == null) {",
          "49279:             throw new NullPointerException();",
          "49280:           }",
          "49281:           ensureParamsIsMutable();",
          "49282:           params_.add(index, value);",
          "49283:           onChanged();",
          "49284:         } else {",
          "49285:           paramsBuilder_.addMessage(index, value);",
          "49286:         }",
          "49287:         return this;",
          "49297:       public Builder addParams(",
          "49298:           org.mlflow.api.proto.Service.Param.Builder builderForValue) {",
          "49299:         if (paramsBuilder_ == null) {",
          "49300:           ensureParamsIsMutable();",
          "49301:           params_.add(builderForValue.build());",
          "49302:           onChanged();",
          "49303:         } else {",
          "49304:           paramsBuilder_.addMessage(builderForValue.build());",
          "49306:         return this;",
          "49316:       public Builder addParams(",
          "49317:           int index, org.mlflow.api.proto.Service.Param.Builder builderForValue) {",
          "49318:         if (paramsBuilder_ == null) {",
          "49319:           ensureParamsIsMutable();",
          "49320:           params_.add(index, builderForValue.build());",
          "49321:           onChanged();",
          "49322:         } else {",
          "49323:           paramsBuilder_.addMessage(index, builderForValue.build());",
          "49324:         }",
          "49335:       public Builder addAllParams(",
          "49336:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.Param> values) {",
          "49337:         if (paramsBuilder_ == null) {",
          "49338:           ensureParamsIsMutable();",
          "49339:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "49340:               values, params_);",
          "49341:           onChanged();",
          "49342:         } else {",
          "49343:           paramsBuilder_.addAllMessages(values);",
          "49344:         }",
          "49345:         return this;",
          "49355:       public Builder clearParams() {",
          "49356:         if (paramsBuilder_ == null) {",
          "49357:           params_ = java.util.Collections.emptyList();",
          "49358:           bitField0_ = (bitField0_ & ~0x00000004);",
          "49359:           onChanged();",
          "49360:         } else {",
          "49361:           paramsBuilder_.clear();",
          "49362:         }",
          "49363:         return this;",
          "49373:       public Builder removeParams(int index) {",
          "49374:         if (paramsBuilder_ == null) {",
          "49375:           ensureParamsIsMutable();",
          "49376:           params_.remove(index);",
          "49377:           onChanged();",
          "49378:         } else {",
          "49379:           paramsBuilder_.remove(index);",
          "49381:         return this;",
          "49382:       }",
          "49391:       public org.mlflow.api.proto.Service.Param.Builder getParamsBuilder(",
          "49392:           int index) {",
          "49393:         return getParamsFieldBuilder().getBuilder(index);",
          "49403:       public org.mlflow.api.proto.Service.ParamOrBuilder getParamsOrBuilder(",
          "49404:           int index) {",
          "49405:         if (paramsBuilder_ == null) {",
          "49406:           return params_.get(index);  } else {",
          "49407:           return paramsBuilder_.getMessageOrBuilder(index);",
          "49409:       }",
          "49418:       public java.util.List<? extends org.mlflow.api.proto.Service.ParamOrBuilder>",
          "49419:            getParamsOrBuilderList() {",
          "49420:         if (paramsBuilder_ != null) {",
          "49421:           return paramsBuilder_.getMessageOrBuilderList();",
          "49422:         } else {",
          "49423:           return java.util.Collections.unmodifiableList(params_);",
          "49434:       public org.mlflow.api.proto.Service.Param.Builder addParamsBuilder() {",
          "49435:         return getParamsFieldBuilder().addBuilder(",
          "49436:             org.mlflow.api.proto.Service.Param.getDefaultInstance());",
          "49437:       }",
          "49446:       public org.mlflow.api.proto.Service.Param.Builder addParamsBuilder(",
          "49447:           int index) {",
          "49448:         return getParamsFieldBuilder().addBuilder(",
          "49449:             index, org.mlflow.api.proto.Service.Param.getDefaultInstance());",
          "49459:       public java.util.List<org.mlflow.api.proto.Service.Param.Builder>",
          "49460:            getParamsBuilderList() {",
          "49461:         return getParamsFieldBuilder().getBuilderList();",
          "49463:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "49464:           org.mlflow.api.proto.Service.Param, org.mlflow.api.proto.Service.Param.Builder, org.mlflow.api.proto.Service.ParamOrBuilder>",
          "49465:           getParamsFieldBuilder() {",
          "49466:         if (paramsBuilder_ == null) {",
          "49467:           paramsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "49468:               org.mlflow.api.proto.Service.Param, org.mlflow.api.proto.Service.Param.Builder, org.mlflow.api.proto.Service.ParamOrBuilder>(",
          "49469:                   params_,",
          "49470:                   ((bitField0_ & 0x00000004) != 0),",
          "49471:                   getParentForChildren(),",
          "49472:                   isClean());",
          "49473:           params_ = null;",
          "49474:         }",
          "49475:         return paramsBuilder_;",
          "49478:       private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_ =",
          "49479:         java.util.Collections.emptyList();",
          "49480:       private void ensureTagsIsMutable() {",
          "49481:         if (!((bitField0_ & 0x00000008) != 0)) {",
          "49482:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>(tags_);",
          "49483:           bitField0_ |= 0x00000008;",
          "49484:          }",
          "49487:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "49488:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder> tagsBuilder_;",
          "49498:       public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "49499:         if (tagsBuilder_ == null) {",
          "49500:           return java.util.Collections.unmodifiableList(tags_);",
          "49501:         } else {",
          "49502:           return tagsBuilder_.getMessageList();",
          "49503:         }",
          "49513:       public int getTagsCount() {",
          "49514:         if (tagsBuilder_ == null) {",
          "49515:           return tags_.size();",
          "49516:         } else {",
          "49517:           return tagsBuilder_.getCount();",
          "49518:         }",
          "49528:       public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "49529:         if (tagsBuilder_ == null) {",
          "49530:           return tags_.get(index);",
          "49532:           return tagsBuilder_.getMessage(index);",
          "49543:       public Builder setTags(",
          "49544:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "49545:         if (tagsBuilder_ == null) {",
          "49546:           if (value == null) {",
          "49547:             throw new NullPointerException();",
          "49548:           }",
          "49549:           ensureTagsIsMutable();",
          "49550:           tags_.set(index, value);",
          "49552:         } else {",
          "49553:           tagsBuilder_.setMessage(index, value);",
          "49555:         return this;",
          "49556:       }",
          "49565:       public Builder setTags(",
          "49566:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "49567:         if (tagsBuilder_ == null) {",
          "49568:           ensureTagsIsMutable();",
          "49569:           tags_.set(index, builderForValue.build());",
          "49571:         } else {",
          "49572:           tagsBuilder_.setMessage(index, builderForValue.build());",
          "49584:       public Builder addTags(org.mlflow.api.proto.Service.RunTag value) {",
          "49585:         if (tagsBuilder_ == null) {",
          "49586:           if (value == null) {",
          "49587:             throw new NullPointerException();",
          "49589:           ensureTagsIsMutable();",
          "49590:           tags_.add(value);",
          "49591:           onChanged();",
          "49592:         } else {",
          "49593:           tagsBuilder_.addMessage(value);",
          "49605:       public Builder addTags(",
          "49606:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "49607:         if (tagsBuilder_ == null) {",
          "49608:           if (value == null) {",
          "49609:             throw new NullPointerException();",
          "49610:           }",
          "49611:           ensureTagsIsMutable();",
          "49612:           tags_.add(index, value);",
          "49613:           onChanged();",
          "49614:         } else {",
          "49615:           tagsBuilder_.addMessage(index, value);",
          "49616:         }",
          "49617:         return this;",
          "49627:       public Builder addTags(",
          "49628:           org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "49629:         if (tagsBuilder_ == null) {",
          "49630:           ensureTagsIsMutable();",
          "49631:           tags_.add(builderForValue.build());",
          "49632:           onChanged();",
          "49634:           tagsBuilder_.addMessage(builderForValue.build());",
          "49636:         return this;",
          "49646:       public Builder addTags(",
          "49647:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "49648:         if (tagsBuilder_ == null) {",
          "49649:           ensureTagsIsMutable();",
          "49650:           tags_.add(index, builderForValue.build());",
          "49651:           onChanged();",
          "49653:           tagsBuilder_.addMessage(index, builderForValue.build());",
          "49655:         return this;",
          "49665:       public Builder addAllTags(",
          "49666:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.RunTag> values) {",
          "49667:         if (tagsBuilder_ == null) {",
          "49668:           ensureTagsIsMutable();",
          "49669:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "49670:               values, tags_);",
          "49671:           onChanged();",
          "49672:         } else {",
          "49673:           tagsBuilder_.addAllMessages(values);",
          "49674:         }",
          "49685:       public Builder clearTags() {",
          "49686:         if (tagsBuilder_ == null) {",
          "49687:           tags_ = java.util.Collections.emptyList();",
          "49688:           bitField0_ = (bitField0_ & ~0x00000008);",
          "49689:           onChanged();",
          "49690:         } else {",
          "49691:           tagsBuilder_.clear();",
          "49692:         }",
          "49703:       public Builder removeTags(int index) {",
          "49704:         if (tagsBuilder_ == null) {",
          "49705:           ensureTagsIsMutable();",
          "49706:           tags_.remove(index);",
          "49707:           onChanged();",
          "49708:         } else {",
          "49709:           tagsBuilder_.remove(index);",
          "49710:         }",
          "49721:       public org.mlflow.api.proto.Service.RunTag.Builder getTagsBuilder(",
          "49722:           int index) {",
          "49723:         return getTagsFieldBuilder().getBuilder(index);",
          "49733:       public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "49734:           int index) {",
          "49735:         if (tagsBuilder_ == null) {",
          "49736:           return tags_.get(index);  } else {",
          "49737:           return tagsBuilder_.getMessageOrBuilder(index);",
          "49748:       public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "49749:            getTagsOrBuilderList() {",
          "49750:         if (tagsBuilder_ != null) {",
          "49751:           return tagsBuilder_.getMessageOrBuilderList();",
          "49753:           return java.util.Collections.unmodifiableList(tags_);",
          "49764:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder() {",
          "49765:         return getTagsFieldBuilder().addBuilder(",
          "49766:             org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "49776:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder(",
          "49777:           int index) {",
          "49778:         return getTagsFieldBuilder().addBuilder(",
          "49779:             index, org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "49789:       public java.util.List<org.mlflow.api.proto.Service.RunTag.Builder>",
          "49790:            getTagsBuilderList() {",
          "49791:         return getTagsFieldBuilder().getBuilderList();",
          "49792:       }",
          "49793:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "49794:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "49795:           getTagsFieldBuilder() {",
          "49796:         if (tagsBuilder_ == null) {",
          "49797:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "49798:               org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>(",
          "49799:                   tags_,",
          "49800:                   ((bitField0_ & 0x00000008) != 0),",
          "49801:                   getParentForChildren(),",
          "49802:                   isClean());",
          "49803:           tags_ = null;",
          "49804:         }",
          "49805:         return tagsBuilder_;",
          "",
          "[Added Lines]",
          "53921:       public Builder setRunId(",
          "53926:   bitField0_ |= 0x00000001;",
          "53927:         runId_ = value;",
          "53939:       public Builder clearRunId() {",
          "53940:         bitField0_ = (bitField0_ & ~0x00000001);",
          "53941:         runId_ = getDefaultInstance().getRunId();",
          "53954:       public Builder setRunIdBytes(",
          "53959:   bitField0_ |= 0x00000001;",
          "53960:         runId_ = value;",
          "53965:       private java.util.List<org.mlflow.api.proto.Service.Metric> metrics_ =",
          "53966:         java.util.Collections.emptyList();",
          "53967:       private void ensureMetricsIsMutable() {",
          "53968:         if (!((bitField0_ & 0x00000002) != 0)) {",
          "53969:           metrics_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Metric>(metrics_);",
          "53970:           bitField0_ |= 0x00000002;",
          "53971:          }",
          "53972:       }",
          "53974:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "53975:           org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder> metricsBuilder_;",
          "53985:       public java.util.List<org.mlflow.api.proto.Service.Metric> getMetricsList() {",
          "53986:         if (metricsBuilder_ == null) {",
          "53987:           return java.util.Collections.unmodifiableList(metrics_);",
          "53988:         } else {",
          "53989:           return metricsBuilder_.getMessageList();",
          "53990:         }",
          "54000:       public int getMetricsCount() {",
          "54001:         if (metricsBuilder_ == null) {",
          "54002:           return metrics_.size();",
          "54003:         } else {",
          "54004:           return metricsBuilder_.getCount();",
          "54005:         }",
          "54015:       public org.mlflow.api.proto.Service.Metric getMetrics(int index) {",
          "54016:         if (metricsBuilder_ == null) {",
          "54017:           return metrics_.get(index);",
          "54018:         } else {",
          "54019:           return metricsBuilder_.getMessage(index);",
          "54020:         }",
          "54030:       public Builder setMetrics(",
          "54031:           int index, org.mlflow.api.proto.Service.Metric value) {",
          "54032:         if (metricsBuilder_ == null) {",
          "54033:           if (value == null) {",
          "54034:             throw new NullPointerException();",
          "54035:           }",
          "54036:           ensureMetricsIsMutable();",
          "54037:           metrics_.set(index, value);",
          "54038:           onChanged();",
          "54039:         } else {",
          "54040:           metricsBuilder_.setMessage(index, value);",
          "54041:         }",
          "54052:       public Builder setMetrics(",
          "54053:           int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "54054:         if (metricsBuilder_ == null) {",
          "54055:           ensureMetricsIsMutable();",
          "54056:           metrics_.set(index, builderForValue.build());",
          "54057:           onChanged();",
          "54058:         } else {",
          "54059:           metricsBuilder_.setMessage(index, builderForValue.build());",
          "54060:         }",
          "54061:         return this;",
          "54071:       public Builder addMetrics(org.mlflow.api.proto.Service.Metric value) {",
          "54072:         if (metricsBuilder_ == null) {",
          "54073:           if (value == null) {",
          "54074:             throw new NullPointerException();",
          "54076:           ensureMetricsIsMutable();",
          "54077:           metrics_.add(value);",
          "54078:           onChanged();",
          "54079:         } else {",
          "54080:           metricsBuilder_.addMessage(value);",
          "54082:         return this;",
          "54083:       }",
          "54092:       public Builder addMetrics(",
          "54093:           int index, org.mlflow.api.proto.Service.Metric value) {",
          "54094:         if (metricsBuilder_ == null) {",
          "54095:           if (value == null) {",
          "54096:             throw new NullPointerException();",
          "54097:           }",
          "54098:           ensureMetricsIsMutable();",
          "54099:           metrics_.add(index, value);",
          "54100:           onChanged();",
          "54101:         } else {",
          "54102:           metricsBuilder_.addMessage(index, value);",
          "54104:         return this;",
          "54105:       }",
          "54114:       public Builder addMetrics(",
          "54115:           org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "54116:         if (metricsBuilder_ == null) {",
          "54117:           ensureMetricsIsMutable();",
          "54118:           metrics_.add(builderForValue.build());",
          "54119:           onChanged();",
          "54120:         } else {",
          "54121:           metricsBuilder_.addMessage(builderForValue.build());",
          "54123:         return this;",
          "54124:       }",
          "54133:       public Builder addMetrics(",
          "54134:           int index, org.mlflow.api.proto.Service.Metric.Builder builderForValue) {",
          "54135:         if (metricsBuilder_ == null) {",
          "54136:           ensureMetricsIsMutable();",
          "54137:           metrics_.add(index, builderForValue.build());",
          "54138:           onChanged();",
          "54139:         } else {",
          "54140:           metricsBuilder_.addMessage(index, builderForValue.build());",
          "54142:         return this;",
          "54152:       public Builder addAllMetrics(",
          "54153:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.Metric> values) {",
          "54154:         if (metricsBuilder_ == null) {",
          "54155:           ensureMetricsIsMutable();",
          "54156:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "54157:               values, metrics_);",
          "54158:           onChanged();",
          "54159:         } else {",
          "54160:           metricsBuilder_.addAllMessages(values);",
          "54161:         }",
          "54162:         return this;",
          "54172:       public Builder clearMetrics() {",
          "54173:         if (metricsBuilder_ == null) {",
          "54174:           metrics_ = java.util.Collections.emptyList();",
          "54175:           bitField0_ = (bitField0_ & ~0x00000002);",
          "54176:           onChanged();",
          "54177:         } else {",
          "54178:           metricsBuilder_.clear();",
          "54179:         }",
          "54180:         return this;",
          "54190:       public Builder removeMetrics(int index) {",
          "54191:         if (metricsBuilder_ == null) {",
          "54192:           ensureMetricsIsMutable();",
          "54193:           metrics_.remove(index);",
          "54194:           onChanged();",
          "54195:         } else {",
          "54196:           metricsBuilder_.remove(index);",
          "54197:         }",
          "54198:         return this;",
          "54208:       public org.mlflow.api.proto.Service.Metric.Builder getMetricsBuilder(",
          "54209:           int index) {",
          "54210:         return getMetricsFieldBuilder().getBuilder(index);",
          "54220:       public org.mlflow.api.proto.Service.MetricOrBuilder getMetricsOrBuilder(",
          "54221:           int index) {",
          "54222:         if (metricsBuilder_ == null) {",
          "54223:           return metrics_.get(index);  } else {",
          "54224:           return metricsBuilder_.getMessageOrBuilder(index);",
          "54226:       }",
          "54235:       public java.util.List<? extends org.mlflow.api.proto.Service.MetricOrBuilder>",
          "54236:            getMetricsOrBuilderList() {",
          "54237:         if (metricsBuilder_ != null) {",
          "54238:           return metricsBuilder_.getMessageOrBuilderList();",
          "54239:         } else {",
          "54240:           return java.util.Collections.unmodifiableList(metrics_);",
          "54251:       public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder() {",
          "54252:         return getMetricsFieldBuilder().addBuilder(",
          "54253:             org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "54263:       public org.mlflow.api.proto.Service.Metric.Builder addMetricsBuilder(",
          "54264:           int index) {",
          "54265:         return getMetricsFieldBuilder().addBuilder(",
          "54266:             index, org.mlflow.api.proto.Service.Metric.getDefaultInstance());",
          "54276:       public java.util.List<org.mlflow.api.proto.Service.Metric.Builder>",
          "54277:            getMetricsBuilderList() {",
          "54278:         return getMetricsFieldBuilder().getBuilderList();",
          "54279:       }",
          "54280:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "54281:           org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>",
          "54282:           getMetricsFieldBuilder() {",
          "54283:         if (metricsBuilder_ == null) {",
          "54284:           metricsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "54285:               org.mlflow.api.proto.Service.Metric, org.mlflow.api.proto.Service.Metric.Builder, org.mlflow.api.proto.Service.MetricOrBuilder>(",
          "54286:                   metrics_,",
          "54287:                   ((bitField0_ & 0x00000002) != 0),",
          "54288:                   getParentForChildren(),",
          "54289:                   isClean());",
          "54290:           metrics_ = null;",
          "54291:         }",
          "54292:         return metricsBuilder_;",
          "54295:       private java.util.List<org.mlflow.api.proto.Service.Param> params_ =",
          "54296:         java.util.Collections.emptyList();",
          "54297:       private void ensureParamsIsMutable() {",
          "54298:         if (!((bitField0_ & 0x00000004) != 0)) {",
          "54299:           params_ = new java.util.ArrayList<org.mlflow.api.proto.Service.Param>(params_);",
          "54300:           bitField0_ |= 0x00000004;",
          "54301:          }",
          "54304:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "54305:           org.mlflow.api.proto.Service.Param, org.mlflow.api.proto.Service.Param.Builder, org.mlflow.api.proto.Service.ParamOrBuilder> paramsBuilder_;",
          "54315:       public java.util.List<org.mlflow.api.proto.Service.Param> getParamsList() {",
          "54316:         if (paramsBuilder_ == null) {",
          "54317:           return java.util.Collections.unmodifiableList(params_);",
          "54318:         } else {",
          "54319:           return paramsBuilder_.getMessageList();",
          "54320:         }",
          "54330:       public int getParamsCount() {",
          "54331:         if (paramsBuilder_ == null) {",
          "54332:           return params_.size();",
          "54333:         } else {",
          "54334:           return paramsBuilder_.getCount();",
          "54336:       }",
          "54345:       public org.mlflow.api.proto.Service.Param getParams(int index) {",
          "54346:         if (paramsBuilder_ == null) {",
          "54347:           return params_.get(index);",
          "54348:         } else {",
          "54349:           return paramsBuilder_.getMessage(index);",
          "54360:       public Builder setParams(",
          "54361:           int index, org.mlflow.api.proto.Service.Param value) {",
          "54362:         if (paramsBuilder_ == null) {",
          "54363:           if (value == null) {",
          "54364:             throw new NullPointerException();",
          "54365:           }",
          "54366:           ensureParamsIsMutable();",
          "54367:           params_.set(index, value);",
          "54368:           onChanged();",
          "54369:         } else {",
          "54370:           paramsBuilder_.setMessage(index, value);",
          "54371:         }",
          "54372:         return this;",
          "54373:       }",
          "54382:       public Builder setParams(",
          "54383:           int index, org.mlflow.api.proto.Service.Param.Builder builderForValue) {",
          "54384:         if (paramsBuilder_ == null) {",
          "54385:           ensureParamsIsMutable();",
          "54386:           params_.set(index, builderForValue.build());",
          "54387:           onChanged();",
          "54388:         } else {",
          "54389:           paramsBuilder_.setMessage(index, builderForValue.build());",
          "54390:         }",
          "54391:         return this;",
          "54392:       }",
          "54401:       public Builder addParams(org.mlflow.api.proto.Service.Param value) {",
          "54402:         if (paramsBuilder_ == null) {",
          "54403:           if (value == null) {",
          "54404:             throw new NullPointerException();",
          "54405:           }",
          "54406:           ensureParamsIsMutable();",
          "54407:           params_.add(value);",
          "54408:           onChanged();",
          "54409:         } else {",
          "54410:           paramsBuilder_.addMessage(value);",
          "54411:         }",
          "54412:         return this;",
          "54413:       }",
          "54422:       public Builder addParams(",
          "54423:           int index, org.mlflow.api.proto.Service.Param value) {",
          "54424:         if (paramsBuilder_ == null) {",
          "54425:           if (value == null) {",
          "54426:             throw new NullPointerException();",
          "54427:           }",
          "54428:           ensureParamsIsMutable();",
          "54429:           params_.add(index, value);",
          "54430:           onChanged();",
          "54431:         } else {",
          "54432:           paramsBuilder_.addMessage(index, value);",
          "54433:         }",
          "54434:         return this;",
          "54435:       }",
          "54444:       public Builder addParams(",
          "54445:           org.mlflow.api.proto.Service.Param.Builder builderForValue) {",
          "54446:         if (paramsBuilder_ == null) {",
          "54447:           ensureParamsIsMutable();",
          "54448:           params_.add(builderForValue.build());",
          "54449:           onChanged();",
          "54450:         } else {",
          "54451:           paramsBuilder_.addMessage(builderForValue.build());",
          "54452:         }",
          "54453:         return this;",
          "54454:       }",
          "54463:       public Builder addParams(",
          "54464:           int index, org.mlflow.api.proto.Service.Param.Builder builderForValue) {",
          "54465:         if (paramsBuilder_ == null) {",
          "54466:           ensureParamsIsMutable();",
          "54467:           params_.add(index, builderForValue.build());",
          "54468:           onChanged();",
          "54469:         } else {",
          "54470:           paramsBuilder_.addMessage(index, builderForValue.build());",
          "54472:         return this;",
          "54482:       public Builder addAllParams(",
          "54483:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.Param> values) {",
          "54484:         if (paramsBuilder_ == null) {",
          "54485:           ensureParamsIsMutable();",
          "54486:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "54487:               values, params_);",
          "54488:           onChanged();",
          "54489:         } else {",
          "54490:           paramsBuilder_.addAllMessages(values);",
          "54491:         }",
          "54492:         return this;",
          "54502:       public Builder clearParams() {",
          "54503:         if (paramsBuilder_ == null) {",
          "54504:           params_ = java.util.Collections.emptyList();",
          "54505:           bitField0_ = (bitField0_ & ~0x00000004);",
          "54506:           onChanged();",
          "54507:         } else {",
          "54508:           paramsBuilder_.clear();",
          "54509:         }",
          "54510:         return this;",
          "54520:       public Builder removeParams(int index) {",
          "54521:         if (paramsBuilder_ == null) {",
          "54522:           ensureParamsIsMutable();",
          "54523:           params_.remove(index);",
          "54524:           onChanged();",
          "54525:         } else {",
          "54526:           paramsBuilder_.remove(index);",
          "54527:         }",
          "54528:         return this;",
          "54538:       public org.mlflow.api.proto.Service.Param.Builder getParamsBuilder(",
          "54539:           int index) {",
          "54540:         return getParamsFieldBuilder().getBuilder(index);",
          "54550:       public org.mlflow.api.proto.Service.ParamOrBuilder getParamsOrBuilder(",
          "54551:           int index) {",
          "54552:         if (paramsBuilder_ == null) {",
          "54553:           return params_.get(index);  } else {",
          "54554:           return paramsBuilder_.getMessageOrBuilder(index);",
          "54555:         }",
          "54565:       public java.util.List<? extends org.mlflow.api.proto.Service.ParamOrBuilder>",
          "54566:            getParamsOrBuilderList() {",
          "54567:         if (paramsBuilder_ != null) {",
          "54568:           return paramsBuilder_.getMessageOrBuilderList();",
          "54569:         } else {",
          "54570:           return java.util.Collections.unmodifiableList(params_);",
          "54571:         }",
          "54581:       public org.mlflow.api.proto.Service.Param.Builder addParamsBuilder() {",
          "54582:         return getParamsFieldBuilder().addBuilder(",
          "54583:             org.mlflow.api.proto.Service.Param.getDefaultInstance());",
          "54593:       public org.mlflow.api.proto.Service.Param.Builder addParamsBuilder(",
          "54594:           int index) {",
          "54595:         return getParamsFieldBuilder().addBuilder(",
          "54596:             index, org.mlflow.api.proto.Service.Param.getDefaultInstance());",
          "54606:       public java.util.List<org.mlflow.api.proto.Service.Param.Builder>",
          "54607:            getParamsBuilderList() {",
          "54608:         return getParamsFieldBuilder().getBuilderList();",
          "54610:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "54611:           org.mlflow.api.proto.Service.Param, org.mlflow.api.proto.Service.Param.Builder, org.mlflow.api.proto.Service.ParamOrBuilder>",
          "54612:           getParamsFieldBuilder() {",
          "54613:         if (paramsBuilder_ == null) {",
          "54614:           paramsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "54615:               org.mlflow.api.proto.Service.Param, org.mlflow.api.proto.Service.Param.Builder, org.mlflow.api.proto.Service.ParamOrBuilder>(",
          "54616:                   params_,",
          "54617:                   ((bitField0_ & 0x00000004) != 0),",
          "54618:                   getParentForChildren(),",
          "54619:                   isClean());",
          "54620:           params_ = null;",
          "54621:         }",
          "54622:         return paramsBuilder_;",
          "54625:       private java.util.List<org.mlflow.api.proto.Service.RunTag> tags_ =",
          "54626:         java.util.Collections.emptyList();",
          "54627:       private void ensureTagsIsMutable() {",
          "54628:         if (!((bitField0_ & 0x00000008) != 0)) {",
          "54629:           tags_ = new java.util.ArrayList<org.mlflow.api.proto.Service.RunTag>(tags_);",
          "54630:           bitField0_ |= 0x00000008;",
          "54631:          }",
          "54634:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "54635:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder> tagsBuilder_;",
          "54645:       public java.util.List<org.mlflow.api.proto.Service.RunTag> getTagsList() {",
          "54646:         if (tagsBuilder_ == null) {",
          "54647:           return java.util.Collections.unmodifiableList(tags_);",
          "54648:         } else {",
          "54649:           return tagsBuilder_.getMessageList();",
          "54651:       }",
          "54660:       public int getTagsCount() {",
          "54661:         if (tagsBuilder_ == null) {",
          "54662:           return tags_.size();",
          "54663:         } else {",
          "54664:           return tagsBuilder_.getCount();",
          "54666:       }",
          "54675:       public org.mlflow.api.proto.Service.RunTag getTags(int index) {",
          "54676:         if (tagsBuilder_ == null) {",
          "54677:           return tags_.get(index);",
          "54678:         } else {",
          "54679:           return tagsBuilder_.getMessage(index);",
          "54681:       }",
          "54690:       public Builder setTags(",
          "54691:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "54692:         if (tagsBuilder_ == null) {",
          "54693:           if (value == null) {",
          "54694:             throw new NullPointerException();",
          "54696:           ensureTagsIsMutable();",
          "54697:           tags_.set(index, value);",
          "54698:           onChanged();",
          "54699:         } else {",
          "54700:           tagsBuilder_.setMessage(index, value);",
          "54702:         return this;",
          "54703:       }",
          "54712:       public Builder setTags(",
          "54713:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "54714:         if (tagsBuilder_ == null) {",
          "54715:           ensureTagsIsMutable();",
          "54716:           tags_.set(index, builderForValue.build());",
          "54717:           onChanged();",
          "54718:         } else {",
          "54719:           tagsBuilder_.setMessage(index, builderForValue.build());",
          "54721:         return this;",
          "54722:       }",
          "54731:       public Builder addTags(org.mlflow.api.proto.Service.RunTag value) {",
          "54732:         if (tagsBuilder_ == null) {",
          "54733:           if (value == null) {",
          "54734:             throw new NullPointerException();",
          "54736:           ensureTagsIsMutable();",
          "54737:           tags_.add(value);",
          "54738:           onChanged();",
          "54739:         } else {",
          "54740:           tagsBuilder_.addMessage(value);",
          "54742:         return this;",
          "54743:       }",
          "54752:       public Builder addTags(",
          "54753:           int index, org.mlflow.api.proto.Service.RunTag value) {",
          "54754:         if (tagsBuilder_ == null) {",
          "54755:           if (value == null) {",
          "54756:             throw new NullPointerException();",
          "54757:           }",
          "54758:           ensureTagsIsMutable();",
          "54759:           tags_.add(index, value);",
          "54760:           onChanged();",
          "54761:         } else {",
          "54762:           tagsBuilder_.addMessage(index, value);",
          "54764:         return this;",
          "54765:       }",
          "54774:       public Builder addTags(",
          "54775:           org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "54776:         if (tagsBuilder_ == null) {",
          "54777:           ensureTagsIsMutable();",
          "54778:           tags_.add(builderForValue.build());",
          "54779:           onChanged();",
          "54780:         } else {",
          "54781:           tagsBuilder_.addMessage(builderForValue.build());",
          "54783:         return this;",
          "54784:       }",
          "54793:       public Builder addTags(",
          "54794:           int index, org.mlflow.api.proto.Service.RunTag.Builder builderForValue) {",
          "54795:         if (tagsBuilder_ == null) {",
          "54796:           ensureTagsIsMutable();",
          "54797:           tags_.add(index, builderForValue.build());",
          "54798:           onChanged();",
          "54799:         } else {",
          "54800:           tagsBuilder_.addMessage(index, builderForValue.build());",
          "54802:         return this;",
          "54803:       }",
          "54812:       public Builder addAllTags(",
          "54813:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.RunTag> values) {",
          "54814:         if (tagsBuilder_ == null) {",
          "54815:           ensureTagsIsMutable();",
          "54816:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "54817:               values, tags_);",
          "54818:           onChanged();",
          "54819:         } else {",
          "54820:           tagsBuilder_.addAllMessages(values);",
          "54822:         return this;",
          "54823:       }",
          "54832:       public Builder clearTags() {",
          "54833:         if (tagsBuilder_ == null) {",
          "54834:           tags_ = java.util.Collections.emptyList();",
          "54835:           bitField0_ = (bitField0_ & ~0x00000008);",
          "54837:         } else {",
          "54838:           tagsBuilder_.clear();",
          "54840:         return this;",
          "54841:       }",
          "54850:       public Builder removeTags(int index) {",
          "54851:         if (tagsBuilder_ == null) {",
          "54852:           ensureTagsIsMutable();",
          "54853:           tags_.remove(index);",
          "54854:           onChanged();",
          "54855:         } else {",
          "54856:           tagsBuilder_.remove(index);",
          "54858:         return this;",
          "54859:       }",
          "54868:       public org.mlflow.api.proto.Service.RunTag.Builder getTagsBuilder(",
          "54869:           int index) {",
          "54870:         return getTagsFieldBuilder().getBuilder(index);",
          "54871:       }",
          "54880:       public org.mlflow.api.proto.Service.RunTagOrBuilder getTagsOrBuilder(",
          "54881:           int index) {",
          "54882:         if (tagsBuilder_ == null) {",
          "54883:           return tags_.get(index);  } else {",
          "54884:           return tagsBuilder_.getMessageOrBuilder(index);",
          "54886:       }",
          "54895:       public java.util.List<? extends org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "54896:            getTagsOrBuilderList() {",
          "54897:         if (tagsBuilder_ != null) {",
          "54898:           return tagsBuilder_.getMessageOrBuilderList();",
          "54899:         } else {",
          "54900:           return java.util.Collections.unmodifiableList(tags_);",
          "54911:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder() {",
          "54912:         return getTagsFieldBuilder().addBuilder(",
          "54913:             org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "54923:       public org.mlflow.api.proto.Service.RunTag.Builder addTagsBuilder(",
          "54924:           int index) {",
          "54925:         return getTagsFieldBuilder().addBuilder(",
          "54926:             index, org.mlflow.api.proto.Service.RunTag.getDefaultInstance());",
          "54936:       public java.util.List<org.mlflow.api.proto.Service.RunTag.Builder>",
          "54937:            getTagsBuilderList() {",
          "54938:         return getTagsFieldBuilder().getBuilderList();",
          "54939:       }",
          "54940:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "54941:           org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>",
          "54942:           getTagsFieldBuilder() {",
          "54943:         if (tagsBuilder_ == null) {",
          "54944:           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "54945:               org.mlflow.api.proto.Service.RunTag, org.mlflow.api.proto.Service.RunTag.Builder, org.mlflow.api.proto.Service.RunTagOrBuilder>(",
          "54946:                   tags_,",
          "54947:                   ((bitField0_ & 0x00000008) != 0),",
          "54948:                   getParentForChildren(),",
          "54949:                   isClean());",
          "54950:           tags_ = null;",
          "54952:         return tagsBuilder_;",
          "54955:       public final Builder setUnknownFields(",
          "54956:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "54957:         return super.setUnknownFields(unknownFields);",
          "54961:       public final Builder mergeUnknownFields(",
          "54962:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "54963:         return super.mergeUnknownFields(unknownFields);",
          "54971:     private static final org.mlflow.api.proto.Service.LogBatch DEFAULT_INSTANCE;",
          "54972:     static {",
          "54973:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogBatch();",
          "54976:     public static org.mlflow.api.proto.Service.LogBatch getDefaultInstance() {",
          "54977:       return DEFAULT_INSTANCE;",
          "54980:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogBatch>",
          "54981:         PARSER = new com.google.protobuf.AbstractParser<LogBatch>() {",
          "54982:       @java.lang.Override",
          "54983:       public LogBatch parsePartialFrom(",
          "54984:           com.google.protobuf.CodedInputStream input,",
          "54985:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "54986:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "54987:         return new LogBatch(input, extensionRegistry);",
          "54989:     };",
          "54991:     public static com.google.protobuf.Parser<LogBatch> parser() {",
          "54992:       return PARSER;",
          "54996:     public com.google.protobuf.Parser<LogBatch> getParserForType() {",
          "54997:       return PARSER;",
          "55001:     public org.mlflow.api.proto.Service.LogBatch getDefaultInstanceForType() {",
          "55002:       return DEFAULT_INSTANCE;",
          "55005:   }",
          "55007:   public interface LogModelOrBuilder extends",
          "55009:       com.google.protobuf.MessageOrBuilder {",
          "55019:     boolean hasRunId();",
          "55028:     java.lang.String getRunId();",
          "55037:     com.google.protobuf.ByteString",
          "55038:         getRunIdBytes();",
          "55048:     boolean hasModelJson();",
          "55057:     java.lang.String getModelJson();",
          "55066:     com.google.protobuf.ByteString",
          "55067:         getModelJsonBytes();",
          "55068:   }",
          "55072:   public static final class LogModel extends",
          "55073:       com.google.protobuf.GeneratedMessageV3 implements",
          "55075:       LogModelOrBuilder {",
          "55076:   private static final long serialVersionUID = 0L;",
          "55078:     private LogModel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "55079:       super(builder);",
          "55081:     private LogModel() {",
          "55082:       runId_ = \"\";",
          "55083:       modelJson_ = \"\";",
          "55087:     @SuppressWarnings({\"unused\"})",
          "55088:     protected java.lang.Object newInstance(",
          "55089:         UnusedPrivateParameter unused) {",
          "55090:       return new LogModel();",
          "55093:     @java.lang.Override",
          "55094:     public final com.google.protobuf.UnknownFieldSet",
          "55095:     getUnknownFields() {",
          "55096:       return this.unknownFields;",
          "55098:     private LogModel(",
          "55099:         com.google.protobuf.CodedInputStream input,",
          "55102:       this();",
          "55103:       if (extensionRegistry == null) {",
          "55104:         throw new java.lang.NullPointerException();",
          "55105:       }",
          "55106:       int mutable_bitField0_ = 0;",
          "55107:       com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "55108:           com.google.protobuf.UnknownFieldSet.newBuilder();",
          "55109:       try {",
          "55110:         boolean done = false;",
          "55111:         while (!done) {",
          "55112:           int tag = input.readTag();",
          "55113:           switch (tag) {",
          "55114:             case 0:",
          "55115:               done = true;",
          "55116:               break;",
          "55117:             case 10: {",
          "55118:               com.google.protobuf.ByteString bs = input.readBytes();",
          "55119:               bitField0_ |= 0x00000001;",
          "55120:               runId_ = bs;",
          "55121:               break;",
          "55122:             }",
          "55123:             case 18: {",
          "55124:               com.google.protobuf.ByteString bs = input.readBytes();",
          "55125:               bitField0_ |= 0x00000002;",
          "55126:               modelJson_ = bs;",
          "55127:               break;",
          "55128:             }",
          "55129:             default: {",
          "55130:               if (!parseUnknownField(",
          "55131:                   input, unknownFields, extensionRegistry, tag)) {",
          "55132:                 done = true;",
          "55133:               }",
          "55134:               break;",
          "55135:             }",
          "55136:           }",
          "55137:         }",
          "55138:       } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "55139:         throw e.setUnfinishedMessage(this);",
          "55140:       } catch (java.io.IOException e) {",
          "55141:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "55142:             e).setUnfinishedMessage(this);",
          "55143:       } finally {",
          "55144:         this.unknownFields = unknownFields.build();",
          "55145:         makeExtensionsImmutable();",
          "55146:       }",
          "55148:     public static final com.google.protobuf.Descriptors.Descriptor",
          "55149:         getDescriptor() {",
          "55150:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_descriptor;",
          "55154:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "55155:         internalGetFieldAccessorTable() {",
          "55156:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_fieldAccessorTable",
          "55157:           .ensureFieldAccessorsInitialized(",
          "55158:               org.mlflow.api.proto.Service.LogModel.class, org.mlflow.api.proto.Service.LogModel.Builder.class);",
          "55161:     public interface ResponseOrBuilder extends",
          "55163:         com.google.protobuf.MessageOrBuilder {",
          "55168:     public static final class Response extends",
          "55169:         com.google.protobuf.GeneratedMessageV3 implements",
          "55171:         ResponseOrBuilder {",
          "55172:     private static final long serialVersionUID = 0L;",
          "55174:       private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "55175:         super(builder);",
          "55177:       private Response() {",
          "55180:       @java.lang.Override",
          "55181:       @SuppressWarnings({\"unused\"})",
          "55182:       protected java.lang.Object newInstance(",
          "55183:           UnusedPrivateParameter unused) {",
          "55184:         return new Response();",
          "55188:       public final com.google.protobuf.UnknownFieldSet",
          "55189:       getUnknownFields() {",
          "55190:         return this.unknownFields;",
          "55191:       }",
          "55192:       private Response(",
          "55193:           com.google.protobuf.CodedInputStream input,",
          "55194:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55195:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "55196:         this();",
          "55197:         if (extensionRegistry == null) {",
          "55198:           throw new java.lang.NullPointerException();",
          "55200:         com.google.protobuf.UnknownFieldSet.Builder unknownFields =",
          "55201:             com.google.protobuf.UnknownFieldSet.newBuilder();",
          "55202:         try {",
          "55203:           boolean done = false;",
          "55204:           while (!done) {",
          "55205:             int tag = input.readTag();",
          "55206:             switch (tag) {",
          "55207:               case 0:",
          "55208:                 done = true;",
          "55209:                 break;",
          "55210:               default: {",
          "55211:                 if (!parseUnknownField(",
          "55212:                     input, unknownFields, extensionRegistry, tag)) {",
          "55213:                   done = true;",
          "55214:                 }",
          "55215:                 break;",
          "55216:               }",
          "55217:             }",
          "55218:           }",
          "55219:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "55220:           throw e.setUnfinishedMessage(this);",
          "55221:         } catch (java.io.IOException e) {",
          "55222:           throw new com.google.protobuf.InvalidProtocolBufferException(",
          "55223:               e).setUnfinishedMessage(this);",
          "55224:         } finally {",
          "55225:           this.unknownFields = unknownFields.build();",
          "55226:           makeExtensionsImmutable();",
          "55229:       public static final com.google.protobuf.Descriptors.Descriptor",
          "55230:           getDescriptor() {",
          "55231:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_descriptor;",
          "55235:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "55236:           internalGetFieldAccessorTable() {",
          "55237:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_fieldAccessorTable",
          "55238:             .ensureFieldAccessorsInitialized(",
          "55239:                 org.mlflow.api.proto.Service.LogModel.Response.class, org.mlflow.api.proto.Service.LogModel.Response.Builder.class);",
          "55242:       private byte memoizedIsInitialized = -1;",
          "55244:       public final boolean isInitialized() {",
          "55245:         byte isInitialized = memoizedIsInitialized;",
          "55246:         if (isInitialized == 1) return true;",
          "55247:         if (isInitialized == 0) return false;",
          "55249:         memoizedIsInitialized = 1;",
          "55250:         return true;",
          "55254:       public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "55255:                           throws java.io.IOException {",
          "55256:         unknownFields.writeTo(output);",
          "55259:       @java.lang.Override",
          "55260:       public int getSerializedSize() {",
          "55261:         int size = memoizedSize;",
          "55262:         if (size != -1) return size;",
          "55264:         size = 0;",
          "55265:         size += unknownFields.getSerializedSize();",
          "55266:         memoizedSize = size;",
          "55267:         return size;",
          "55271:       public boolean equals(final java.lang.Object obj) {",
          "55272:         if (obj == this) {",
          "55273:          return true;",
          "55274:         }",
          "55275:         if (!(obj instanceof org.mlflow.api.proto.Service.LogModel.Response)) {",
          "55276:           return super.equals(obj);",
          "55277:         }",
          "55278:         org.mlflow.api.proto.Service.LogModel.Response other = (org.mlflow.api.proto.Service.LogModel.Response) obj;",
          "55280:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "55285:       public int hashCode() {",
          "55286:         if (memoizedHashCode != 0) {",
          "55287:           return memoizedHashCode;",
          "55289:         int hash = 41;",
          "55290:         hash = (19 * hash) + getDescriptor().hashCode();",
          "55291:         hash = (29 * hash) + unknownFields.hashCode();",
          "55292:         memoizedHashCode = hash;",
          "55293:         return hash;",
          "55296:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55297:           java.nio.ByteBuffer data)",
          "55298:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "55299:         return PARSER.parseFrom(data);",
          "55301:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55302:           java.nio.ByteBuffer data,",
          "55303:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55304:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "55305:         return PARSER.parseFrom(data, extensionRegistry);",
          "55307:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55308:           com.google.protobuf.ByteString data)",
          "55309:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "55310:         return PARSER.parseFrom(data);",
          "55312:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55313:           com.google.protobuf.ByteString data,",
          "55314:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55315:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "55316:         return PARSER.parseFrom(data, extensionRegistry);",
          "55318:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(byte[] data)",
          "55319:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "55320:         return PARSER.parseFrom(data);",
          "55322:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55323:           byte[] data,",
          "55324:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55325:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "55326:         return PARSER.parseFrom(data, extensionRegistry);",
          "55328:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(java.io.InputStream input)",
          "55329:           throws java.io.IOException {",
          "55330:         return com.google.protobuf.GeneratedMessageV3",
          "55331:             .parseWithIOException(PARSER, input);",
          "55332:       }",
          "55333:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55334:           java.io.InputStream input,",
          "55335:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55336:           throws java.io.IOException {",
          "55337:         return com.google.protobuf.GeneratedMessageV3",
          "55338:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "55339:       }",
          "55340:       public static org.mlflow.api.proto.Service.LogModel.Response parseDelimitedFrom(java.io.InputStream input)",
          "55341:           throws java.io.IOException {",
          "55342:         return com.google.protobuf.GeneratedMessageV3",
          "55343:             .parseDelimitedWithIOException(PARSER, input);",
          "55344:       }",
          "55345:       public static org.mlflow.api.proto.Service.LogModel.Response parseDelimitedFrom(",
          "55346:           java.io.InputStream input,",
          "55347:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55348:           throws java.io.IOException {",
          "55349:         return com.google.protobuf.GeneratedMessageV3",
          "55350:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "55351:       }",
          "55352:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55353:           com.google.protobuf.CodedInputStream input)",
          "55354:           throws java.io.IOException {",
          "55355:         return com.google.protobuf.GeneratedMessageV3",
          "55356:             .parseWithIOException(PARSER, input);",
          "55357:       }",
          "55358:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "55359:           com.google.protobuf.CodedInputStream input,",
          "55360:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55361:           throws java.io.IOException {",
          "55362:         return com.google.protobuf.GeneratedMessageV3",
          "55363:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "55366:       @java.lang.Override",
          "55367:       public Builder newBuilderForType() { return newBuilder(); }",
          "55368:       public static Builder newBuilder() {",
          "55369:         return DEFAULT_INSTANCE.toBuilder();",
          "55370:       }",
          "55371:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogModel.Response prototype) {",
          "55372:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "55373:       }",
          "55374:       @java.lang.Override",
          "55375:       public Builder toBuilder() {",
          "55376:         return this == DEFAULT_INSTANCE",
          "55377:             ? new Builder() : new Builder().mergeFrom(this);",
          "55378:       }",
          "55380:       @java.lang.Override",
          "55381:       protected Builder newBuilderForType(",
          "55382:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "55383:         Builder builder = new Builder(parent);",
          "55384:         return builder;",
          "55389:       public static final class Builder extends",
          "55390:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "55392:           org.mlflow.api.proto.Service.LogModel.ResponseOrBuilder {",
          "55393:         public static final com.google.protobuf.Descriptors.Descriptor",
          "55394:             getDescriptor() {",
          "55395:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_descriptor;",
          "55398:         @java.lang.Override",
          "55399:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "55400:             internalGetFieldAccessorTable() {",
          "55401:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_fieldAccessorTable",
          "55402:               .ensureFieldAccessorsInitialized(",
          "55403:                   org.mlflow.api.proto.Service.LogModel.Response.class, org.mlflow.api.proto.Service.LogModel.Response.Builder.class);",
          "55407:         private Builder() {",
          "55408:           maybeForceBuilderInitialization();",
          "55409:         }",
          "55411:         private Builder(",
          "55412:             com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "55413:           super(parent);",
          "55414:           maybeForceBuilderInitialization();",
          "55415:         }",
          "55416:         private void maybeForceBuilderInitialization() {",
          "55417:           if (com.google.protobuf.GeneratedMessageV3",
          "55418:                   .alwaysUseFieldBuilders) {",
          "55421:         @java.lang.Override",
          "55422:         public Builder clear() {",
          "55423:           super.clear();",
          "55424:           return this;",
          "55427:         @java.lang.Override",
          "55428:         public com.google.protobuf.Descriptors.Descriptor",
          "55429:             getDescriptorForType() {",
          "55430:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_descriptor;",
          "55431:         }",
          "55433:         @java.lang.Override",
          "55434:         public org.mlflow.api.proto.Service.LogModel.Response getDefaultInstanceForType() {",
          "55435:           return org.mlflow.api.proto.Service.LogModel.Response.getDefaultInstance();",
          "55436:         }",
          "55438:         @java.lang.Override",
          "55439:         public org.mlflow.api.proto.Service.LogModel.Response build() {",
          "55440:           org.mlflow.api.proto.Service.LogModel.Response result = buildPartial();",
          "55441:           if (!result.isInitialized()) {",
          "55442:             throw newUninitializedMessageException(result);",
          "55444:           return result;",
          "55447:         @java.lang.Override",
          "55448:         public org.mlflow.api.proto.Service.LogModel.Response buildPartial() {",
          "55449:           org.mlflow.api.proto.Service.LogModel.Response result = new org.mlflow.api.proto.Service.LogModel.Response(this);",
          "55450:           onBuilt();",
          "55451:           return result;",
          "55452:         }",
          "55454:         @java.lang.Override",
          "55455:         public Builder clone() {",
          "55456:           return super.clone();",
          "55457:         }",
          "55458:         @java.lang.Override",
          "55459:         public Builder setField(",
          "55460:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "55461:             java.lang.Object value) {",
          "55462:           return super.setField(field, value);",
          "55463:         }",
          "55464:         @java.lang.Override",
          "55465:         public Builder clearField(",
          "55466:             com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "55467:           return super.clearField(field);",
          "55468:         }",
          "55469:         @java.lang.Override",
          "55470:         public Builder clearOneof(",
          "55471:             com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "55472:           return super.clearOneof(oneof);",
          "55473:         }",
          "55474:         @java.lang.Override",
          "55475:         public Builder setRepeatedField(",
          "55476:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "55477:             int index, java.lang.Object value) {",
          "55478:           return super.setRepeatedField(field, index, value);",
          "55479:         }",
          "55480:         @java.lang.Override",
          "55481:         public Builder addRepeatedField(",
          "55482:             com.google.protobuf.Descriptors.FieldDescriptor field,",
          "55483:             java.lang.Object value) {",
          "55484:           return super.addRepeatedField(field, value);",
          "55485:         }",
          "55486:         @java.lang.Override",
          "55487:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "55488:           if (other instanceof org.mlflow.api.proto.Service.LogModel.Response) {",
          "55489:             return mergeFrom((org.mlflow.api.proto.Service.LogModel.Response)other);",
          "55490:           } else {",
          "55491:             super.mergeFrom(other);",
          "55492:             return this;",
          "55496:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogModel.Response other) {",
          "55497:           if (other == org.mlflow.api.proto.Service.LogModel.Response.getDefaultInstance()) return this;",
          "55498:           this.mergeUnknownFields(other.unknownFields);",
          "55500:           return this;",
          "55503:         @java.lang.Override",
          "55504:         public final boolean isInitialized() {",
          "55505:           return true;",
          "55506:         }",
          "55508:         @java.lang.Override",
          "55509:         public Builder mergeFrom(",
          "55510:             com.google.protobuf.CodedInputStream input,",
          "55511:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55512:             throws java.io.IOException {",
          "55513:           org.mlflow.api.proto.Service.LogModel.Response parsedMessage = null;",
          "55514:           try {",
          "55515:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "55516:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "55517:             parsedMessage = (org.mlflow.api.proto.Service.LogModel.Response) e.getUnfinishedMessage();",
          "55518:             throw e.unwrapIOException();",
          "55519:           } finally {",
          "55520:             if (parsedMessage != null) {",
          "55521:               mergeFrom(parsedMessage);",
          "55522:             }",
          "55523:           }",
          "55524:           return this;",
          "55525:         }",
          "55526:         @java.lang.Override",
          "55527:         public final Builder setUnknownFields(",
          "55528:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "55529:           return super.setUnknownFields(unknownFields);",
          "55532:         @java.lang.Override",
          "55533:         public final Builder mergeUnknownFields(",
          "55534:             final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "55535:           return super.mergeUnknownFields(unknownFields);",
          "55543:       private static final org.mlflow.api.proto.Service.LogModel.Response DEFAULT_INSTANCE;",
          "55544:       static {",
          "55545:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogModel.Response();",
          "55548:       public static org.mlflow.api.proto.Service.LogModel.Response getDefaultInstance() {",
          "55549:         return DEFAULT_INSTANCE;",
          "55550:       }",
          "55552:       @java.lang.Deprecated public static final com.google.protobuf.Parser<Response>",
          "55553:           PARSER = new com.google.protobuf.AbstractParser<Response>() {",
          "55554:         @java.lang.Override",
          "55555:         public Response parsePartialFrom(",
          "55556:             com.google.protobuf.CodedInputStream input,",
          "55557:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55558:             throws com.google.protobuf.InvalidProtocolBufferException {",
          "55559:           return new Response(input, extensionRegistry);",
          "55561:       };",
          "55563:       public static com.google.protobuf.Parser<Response> parser() {",
          "55564:         return PARSER;",
          "55567:       @java.lang.Override",
          "55568:       public com.google.protobuf.Parser<Response> getParserForType() {",
          "55569:         return PARSER;",
          "55572:       @java.lang.Override",
          "55573:       public org.mlflow.api.proto.Service.LogModel.Response getDefaultInstanceForType() {",
          "55574:         return DEFAULT_INSTANCE;",
          "55575:       }",
          "55577:     }",
          "55579:     private int bitField0_;",
          "55580:     public static final int RUN_ID_FIELD_NUMBER = 1;",
          "55581:     private volatile java.lang.Object runId_;",
          "55590:     @java.lang.Override",
          "55591:     public boolean hasRunId() {",
          "55592:       return ((bitField0_ & 0x00000001) != 0);",
          "55593:     }",
          "55602:     @java.lang.Override",
          "55603:     public java.lang.String getRunId() {",
          "55604:       java.lang.Object ref = runId_;",
          "55605:       if (ref instanceof java.lang.String) {",
          "55606:         return (java.lang.String) ref;",
          "55607:       } else {",
          "55608:         com.google.protobuf.ByteString bs =",
          "55609:             (com.google.protobuf.ByteString) ref;",
          "55610:         java.lang.String s = bs.toStringUtf8();",
          "55611:         if (bs.isValidUtf8()) {",
          "55612:           runId_ = s;",
          "55614:         return s;",
          "55616:     }",
          "55625:     @java.lang.Override",
          "55626:     public com.google.protobuf.ByteString",
          "55627:         getRunIdBytes() {",
          "55628:       java.lang.Object ref = runId_;",
          "55629:       if (ref instanceof java.lang.String) {",
          "55630:         com.google.protobuf.ByteString b =",
          "55631:             com.google.protobuf.ByteString.copyFromUtf8(",
          "55632:                 (java.lang.String) ref);",
          "55633:         runId_ = b;",
          "55634:         return b;",
          "55635:       } else {",
          "55636:         return (com.google.protobuf.ByteString) ref;",
          "55637:       }",
          "55638:     }",
          "55640:     public static final int MODEL_JSON_FIELD_NUMBER = 2;",
          "55641:     private volatile java.lang.Object modelJson_;",
          "55650:     @java.lang.Override",
          "55651:     public boolean hasModelJson() {",
          "55652:       return ((bitField0_ & 0x00000002) != 0);",
          "55653:     }",
          "55662:     @java.lang.Override",
          "55663:     public java.lang.String getModelJson() {",
          "55664:       java.lang.Object ref = modelJson_;",
          "55665:       if (ref instanceof java.lang.String) {",
          "55666:         return (java.lang.String) ref;",
          "55667:       } else {",
          "55668:         com.google.protobuf.ByteString bs =",
          "55669:             (com.google.protobuf.ByteString) ref;",
          "55670:         java.lang.String s = bs.toStringUtf8();",
          "55671:         if (bs.isValidUtf8()) {",
          "55672:           modelJson_ = s;",
          "55674:         return s;",
          "55676:     }",
          "55685:     @java.lang.Override",
          "55686:     public com.google.protobuf.ByteString",
          "55687:         getModelJsonBytes() {",
          "55688:       java.lang.Object ref = modelJson_;",
          "55689:       if (ref instanceof java.lang.String) {",
          "55690:         com.google.protobuf.ByteString b =",
          "55691:             com.google.protobuf.ByteString.copyFromUtf8(",
          "55692:                 (java.lang.String) ref);",
          "55693:         modelJson_ = b;",
          "55694:         return b;",
          "55695:       } else {",
          "55696:         return (com.google.protobuf.ByteString) ref;",
          "55698:     }",
          "55700:     private byte memoizedIsInitialized = -1;",
          "55701:     @java.lang.Override",
          "55702:     public final boolean isInitialized() {",
          "55703:       byte isInitialized = memoizedIsInitialized;",
          "55704:       if (isInitialized == 1) return true;",
          "55705:       if (isInitialized == 0) return false;",
          "55707:       memoizedIsInitialized = 1;",
          "55708:       return true;",
          "55709:     }",
          "55711:     @java.lang.Override",
          "55712:     public void writeTo(com.google.protobuf.CodedOutputStream output)",
          "55713:                         throws java.io.IOException {",
          "55714:       if (((bitField0_ & 0x00000001) != 0)) {",
          "55715:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "55717:       if (((bitField0_ & 0x00000002) != 0)) {",
          "55718:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, modelJson_);",
          "55720:       unknownFields.writeTo(output);",
          "55721:     }",
          "55723:     @java.lang.Override",
          "55724:     public int getSerializedSize() {",
          "55725:       int size = memoizedSize;",
          "55726:       if (size != -1) return size;",
          "55728:       size = 0;",
          "55729:       if (((bitField0_ & 0x00000001) != 0)) {",
          "55730:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "55732:       if (((bitField0_ & 0x00000002) != 0)) {",
          "55733:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, modelJson_);",
          "55734:       }",
          "55735:       size += unknownFields.getSerializedSize();",
          "55736:       memoizedSize = size;",
          "55737:       return size;",
          "55738:     }",
          "55740:     @java.lang.Override",
          "55741:     public boolean equals(final java.lang.Object obj) {",
          "55742:       if (obj == this) {",
          "55743:        return true;",
          "55744:       }",
          "55745:       if (!(obj instanceof org.mlflow.api.proto.Service.LogModel)) {",
          "55746:         return super.equals(obj);",
          "55748:       org.mlflow.api.proto.Service.LogModel other = (org.mlflow.api.proto.Service.LogModel) obj;",
          "55750:       if (hasRunId() != other.hasRunId()) return false;",
          "55751:       if (hasRunId()) {",
          "55752:         if (!getRunId()",
          "55753:             .equals(other.getRunId())) return false;",
          "55754:       }",
          "55755:       if (hasModelJson() != other.hasModelJson()) return false;",
          "55756:       if (hasModelJson()) {",
          "55757:         if (!getModelJson()",
          "55758:             .equals(other.getModelJson())) return false;",
          "55759:       }",
          "55760:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "55761:       return true;",
          "55762:     }",
          "55764:     @java.lang.Override",
          "55765:     public int hashCode() {",
          "55766:       if (memoizedHashCode != 0) {",
          "55767:         return memoizedHashCode;",
          "55769:       int hash = 41;",
          "55770:       hash = (19 * hash) + getDescriptor().hashCode();",
          "55771:       if (hasRunId()) {",
          "55772:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "55773:         hash = (53 * hash) + getRunId().hashCode();",
          "55775:       if (hasModelJson()) {",
          "55776:         hash = (37 * hash) + MODEL_JSON_FIELD_NUMBER;",
          "55777:         hash = (53 * hash) + getModelJson().hashCode();",
          "55779:       hash = (29 * hash) + unknownFields.hashCode();",
          "55780:       memoizedHashCode = hash;",
          "55781:       return hash;",
          "55782:     }",
          "55784:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55785:         java.nio.ByteBuffer data)",
          "55786:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "55787:       return PARSER.parseFrom(data);",
          "55788:     }",
          "55789:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55790:         java.nio.ByteBuffer data,",
          "55791:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55792:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "55793:       return PARSER.parseFrom(data, extensionRegistry);",
          "55794:     }",
          "55795:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55796:         com.google.protobuf.ByteString data)",
          "55797:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "55798:       return PARSER.parseFrom(data);",
          "55799:     }",
          "55800:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55801:         com.google.protobuf.ByteString data,",
          "55802:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55803:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "55804:       return PARSER.parseFrom(data, extensionRegistry);",
          "55805:     }",
          "55806:     public static org.mlflow.api.proto.Service.LogModel parseFrom(byte[] data)",
          "55807:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "55808:       return PARSER.parseFrom(data);",
          "55809:     }",
          "55810:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55811:         byte[] data,",
          "55812:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55813:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "55814:       return PARSER.parseFrom(data, extensionRegistry);",
          "55815:     }",
          "55816:     public static org.mlflow.api.proto.Service.LogModel parseFrom(java.io.InputStream input)",
          "55817:         throws java.io.IOException {",
          "55818:       return com.google.protobuf.GeneratedMessageV3",
          "55819:           .parseWithIOException(PARSER, input);",
          "55820:     }",
          "55821:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55822:         java.io.InputStream input,",
          "55823:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55824:         throws java.io.IOException {",
          "55825:       return com.google.protobuf.GeneratedMessageV3",
          "55826:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "55827:     }",
          "55828:     public static org.mlflow.api.proto.Service.LogModel parseDelimitedFrom(java.io.InputStream input)",
          "55829:         throws java.io.IOException {",
          "55830:       return com.google.protobuf.GeneratedMessageV3",
          "55831:           .parseDelimitedWithIOException(PARSER, input);",
          "55832:     }",
          "55833:     public static org.mlflow.api.proto.Service.LogModel parseDelimitedFrom(",
          "55834:         java.io.InputStream input,",
          "55835:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55836:         throws java.io.IOException {",
          "55837:       return com.google.protobuf.GeneratedMessageV3",
          "55838:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "55839:     }",
          "55840:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55841:         com.google.protobuf.CodedInputStream input)",
          "55842:         throws java.io.IOException {",
          "55843:       return com.google.protobuf.GeneratedMessageV3",
          "55844:           .parseWithIOException(PARSER, input);",
          "55845:     }",
          "55846:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "55847:         com.google.protobuf.CodedInputStream input,",
          "55848:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "55849:         throws java.io.IOException {",
          "55850:       return com.google.protobuf.GeneratedMessageV3",
          "55851:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "55852:     }",
          "55854:     @java.lang.Override",
          "55855:     public Builder newBuilderForType() { return newBuilder(); }",
          "55856:     public static Builder newBuilder() {",
          "55857:       return DEFAULT_INSTANCE.toBuilder();",
          "55858:     }",
          "55859:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogModel prototype) {",
          "55860:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "55861:     }",
          "55862:     @java.lang.Override",
          "55863:     public Builder toBuilder() {",
          "55864:       return this == DEFAULT_INSTANCE",
          "55865:           ? new Builder() : new Builder().mergeFrom(this);",
          "55866:     }",
          "55868:     @java.lang.Override",
          "55869:     protected Builder newBuilderForType(",
          "55870:         com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "55871:       Builder builder = new Builder(parent);",
          "55872:       return builder;",
          "55873:     }",
          "55877:     public static final class Builder extends",
          "55878:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "55880:         org.mlflow.api.proto.Service.LogModelOrBuilder {",
          "55881:       public static final com.google.protobuf.Descriptors.Descriptor",
          "55882:           getDescriptor() {",
          "55883:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_descriptor;",
          "55886:       @java.lang.Override",
          "55887:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "55888:           internalGetFieldAccessorTable() {",
          "55889:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_fieldAccessorTable",
          "55890:             .ensureFieldAccessorsInitialized(",
          "55891:                 org.mlflow.api.proto.Service.LogModel.class, org.mlflow.api.proto.Service.LogModel.Builder.class);",
          "55895:       private Builder() {",
          "55896:         maybeForceBuilderInitialization();",
          "55899:       private Builder(",
          "55900:           com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {",
          "55901:         super(parent);",
          "55902:         maybeForceBuilderInitialization();",
          "55904:       private void maybeForceBuilderInitialization() {",
          "55905:         if (com.google.protobuf.GeneratedMessageV3",
          "55906:                 .alwaysUseFieldBuilders) {",
          "55909:       @java.lang.Override",
          "55910:       public Builder clear() {",
          "55911:         super.clear();",
          "55912:         runId_ = \"\";",
          "55913:         bitField0_ = (bitField0_ & ~0x00000001);",
          "55914:         modelJson_ = \"\";",
          "55915:         bitField0_ = (bitField0_ & ~0x00000002);",
          "55919:       @java.lang.Override",
          "55920:       public com.google.protobuf.Descriptors.Descriptor",
          "55921:           getDescriptorForType() {",
          "55922:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_descriptor;",
          "55925:       @java.lang.Override",
          "55926:       public org.mlflow.api.proto.Service.LogModel getDefaultInstanceForType() {",
          "55927:         return org.mlflow.api.proto.Service.LogModel.getDefaultInstance();",
          "55930:       @java.lang.Override",
          "55931:       public org.mlflow.api.proto.Service.LogModel build() {",
          "55932:         org.mlflow.api.proto.Service.LogModel result = buildPartial();",
          "55933:         if (!result.isInitialized()) {",
          "55934:           throw newUninitializedMessageException(result);",
          "55936:         return result;",
          "55939:       @java.lang.Override",
          "55940:       public org.mlflow.api.proto.Service.LogModel buildPartial() {",
          "55941:         org.mlflow.api.proto.Service.LogModel result = new org.mlflow.api.proto.Service.LogModel(this);",
          "55942:         int from_bitField0_ = bitField0_;",
          "55943:         int to_bitField0_ = 0;",
          "55944:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "55945:           to_bitField0_ |= 0x00000001;",
          "55947:         result.runId_ = runId_;",
          "55948:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "55949:           to_bitField0_ |= 0x00000002;",
          "55951:         result.modelJson_ = modelJson_;",
          "55952:         result.bitField0_ = to_bitField0_;",
          "55953:         onBuilt();",
          "55954:         return result;",
          "55957:       @java.lang.Override",
          "55958:       public Builder clone() {",
          "55959:         return super.clone();",
          "55961:       @java.lang.Override",
          "55962:       public Builder setField(",
          "55963:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "55964:           java.lang.Object value) {",
          "55965:         return super.setField(field, value);",
          "55967:       @java.lang.Override",
          "55968:       public Builder clearField(",
          "55969:           com.google.protobuf.Descriptors.FieldDescriptor field) {",
          "55970:         return super.clearField(field);",
          "55972:       @java.lang.Override",
          "55973:       public Builder clearOneof(",
          "55974:           com.google.protobuf.Descriptors.OneofDescriptor oneof) {",
          "55975:         return super.clearOneof(oneof);",
          "55977:       @java.lang.Override",
          "55978:       public Builder setRepeatedField(",
          "55979:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "55980:           int index, java.lang.Object value) {",
          "55981:         return super.setRepeatedField(field, index, value);",
          "55983:       @java.lang.Override",
          "55984:       public Builder addRepeatedField(",
          "55985:           com.google.protobuf.Descriptors.FieldDescriptor field,",
          "55986:           java.lang.Object value) {",
          "55987:         return super.addRepeatedField(field, value);",
          "55989:       @java.lang.Override",
          "55990:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "55991:         if (other instanceof org.mlflow.api.proto.Service.LogModel) {",
          "55992:           return mergeFrom((org.mlflow.api.proto.Service.LogModel)other);",
          "55994:           super.mergeFrom(other);",
          "55995:           return this;",
          "55999:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogModel other) {",
          "56000:         if (other == org.mlflow.api.proto.Service.LogModel.getDefaultInstance()) return this;",
          "56001:         if (other.hasRunId()) {",
          "56002:           bitField0_ |= 0x00000001;",
          "56003:           runId_ = other.runId_;",
          "56006:         if (other.hasModelJson()) {",
          "56007:           bitField0_ |= 0x00000002;",
          "56008:           modelJson_ = other.modelJson_;",
          "56011:         this.mergeUnknownFields(other.unknownFields);",
          "56012:         onChanged();",
          "56016:       @java.lang.Override",
          "56017:       public final boolean isInitialized() {",
          "56018:         return true;",
          "56019:       }",
          "56021:       @java.lang.Override",
          "56022:       public Builder mergeFrom(",
          "56023:           com.google.protobuf.CodedInputStream input,",
          "56024:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "56025:           throws java.io.IOException {",
          "56026:         org.mlflow.api.proto.Service.LogModel parsedMessage = null;",
          "56027:         try {",
          "56028:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "56029:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "56030:           parsedMessage = (org.mlflow.api.proto.Service.LogModel) e.getUnfinishedMessage();",
          "56031:           throw e.unwrapIOException();",
          "56032:         } finally {",
          "56033:           if (parsedMessage != null) {",
          "56034:             mergeFrom(parsedMessage);",
          "56039:       private int bitField0_;",
          "56041:       private java.lang.Object runId_ = \"\";",
          "56050:       public boolean hasRunId() {",
          "56051:         return ((bitField0_ & 0x00000001) != 0);",
          "56061:       public java.lang.String getRunId() {",
          "56062:         java.lang.Object ref = runId_;",
          "56063:         if (!(ref instanceof java.lang.String)) {",
          "56064:           com.google.protobuf.ByteString bs =",
          "56065:               (com.google.protobuf.ByteString) ref;",
          "56066:           java.lang.String s = bs.toStringUtf8();",
          "56067:           if (bs.isValidUtf8()) {",
          "56068:             runId_ = s;",
          "56069:           }",
          "56070:           return s;",
          "56072:           return (java.lang.String) ref;",
          "56083:       public com.google.protobuf.ByteString",
          "56084:           getRunIdBytes() {",
          "56085:         java.lang.Object ref = runId_;",
          "56086:         if (ref instanceof String) {",
          "56087:           com.google.protobuf.ByteString b =",
          "56088:               com.google.protobuf.ByteString.copyFromUtf8(",
          "56089:                   (java.lang.String) ref);",
          "56090:           runId_ = b;",
          "56091:           return b;",
          "56093:           return (com.google.protobuf.ByteString) ref;",
          "56105:       public Builder setRunId(",
          "56106:           java.lang.String value) {",
          "56107:         if (value == null) {",
          "56108:     throw new NullPointerException();",
          "56109:   }",
          "56110:   bitField0_ |= 0x00000001;",
          "56111:         runId_ = value;",
          "56112:         onChanged();",
          "56123:       public Builder clearRunId() {",
          "56124:         bitField0_ = (bitField0_ & ~0x00000001);",
          "56125:         runId_ = getDefaultInstance().getRunId();",
          "56126:         onChanged();",
          "56138:       public Builder setRunIdBytes(",
          "56139:           com.google.protobuf.ByteString value) {",
          "56140:         if (value == null) {",
          "56141:     throw new NullPointerException();",
          "56142:   }",
          "56143:   bitField0_ |= 0x00000001;",
          "56144:         runId_ = value;",
          "56145:         onChanged();",
          "56149:       private java.lang.Object modelJson_ = \"\";",
          "56158:       public boolean hasModelJson() {",
          "56159:         return ((bitField0_ & 0x00000002) != 0);",
          "56169:       public java.lang.String getModelJson() {",
          "56170:         java.lang.Object ref = modelJson_;",
          "56171:         if (!(ref instanceof java.lang.String)) {",
          "56172:           com.google.protobuf.ByteString bs =",
          "56173:               (com.google.protobuf.ByteString) ref;",
          "56174:           java.lang.String s = bs.toStringUtf8();",
          "56175:           if (bs.isValidUtf8()) {",
          "56176:             modelJson_ = s;",
          "56177:           }",
          "56178:           return s;",
          "56179:         } else {",
          "56180:           return (java.lang.String) ref;",
          "56191:       public com.google.protobuf.ByteString",
          "56192:           getModelJsonBytes() {",
          "56193:         java.lang.Object ref = modelJson_;",
          "56194:         if (ref instanceof String) {",
          "56195:           com.google.protobuf.ByteString b =",
          "56196:               com.google.protobuf.ByteString.copyFromUtf8(",
          "56197:                   (java.lang.String) ref);",
          "56198:           modelJson_ = b;",
          "56199:           return b;",
          "56201:           return (com.google.protobuf.ByteString) ref;",
          "56213:       public Builder setModelJson(",
          "56214:           java.lang.String value) {",
          "56215:         if (value == null) {",
          "56216:     throw new NullPointerException();",
          "56217:   }",
          "56218:   bitField0_ |= 0x00000002;",
          "56219:         modelJson_ = value;",
          "56220:         onChanged();",
          "56221:         return this;",
          "56231:       public Builder clearModelJson() {",
          "56232:         bitField0_ = (bitField0_ & ~0x00000002);",
          "56233:         modelJson_ = getDefaultInstance().getModelJson();",
          "56234:         onChanged();",
          "56235:         return this;",
          "56246:       public Builder setModelJsonBytes(",
          "56247:           com.google.protobuf.ByteString value) {",
          "56248:         if (value == null) {",
          "56249:     throw new NullPointerException();",
          "56250:   }",
          "56251:   bitField0_ |= 0x00000002;",
          "56252:         modelJson_ = value;",
          "56253:         onChanged();",
          "56254:         return this;",
          "",
          "---------------",
          "--- Hunk 709 ---",
          "[Context before]",
          "49817:       }",
          "49821:     }",
          "49825:     static {",
          "49827:     }",
          "49830:       return DEFAULT_INSTANCE;",
          "49831:     }",
          "49835:       @java.lang.Override",
          "49837:           com.google.protobuf.CodedInputStream input,",
          "49838:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49839:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "49841:       }",
          "49842:     };",
          "49845:       return PARSER;",
          "49846:     }",
          "49848:     @java.lang.Override",
          "49850:       return PARSER;",
          "49851:     }",
          "49853:     @java.lang.Override",
          "49855:       return DEFAULT_INSTANCE;",
          "49856:     }",
          "49858:   }",
          "49862:       com.google.protobuf.MessageOrBuilder {",
          "",
          "[Removed Lines]",
          "49824:     private static final org.mlflow.api.proto.Service.LogBatch DEFAULT_INSTANCE;",
          "49826:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogBatch();",
          "49829:     public static org.mlflow.api.proto.Service.LogBatch getDefaultInstance() {",
          "49833:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogBatch>",
          "49834:         PARSER = new com.google.protobuf.AbstractParser<LogBatch>() {",
          "49836:       public LogBatch parsePartialFrom(",
          "49840:         return new LogBatch(input, extensionRegistry);",
          "49844:     public static com.google.protobuf.Parser<LogBatch> parser() {",
          "49849:     public com.google.protobuf.Parser<LogBatch> getParserForType() {",
          "49854:     public org.mlflow.api.proto.Service.LogBatch getDefaultInstanceForType() {",
          "49860:   public interface LogModelOrBuilder extends",
          "",
          "[Added Lines]",
          "56273:     private static final org.mlflow.api.proto.Service.LogModel DEFAULT_INSTANCE;",
          "56275:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogModel();",
          "56278:     public static org.mlflow.api.proto.Service.LogModel getDefaultInstance() {",
          "56282:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogModel>",
          "56283:         PARSER = new com.google.protobuf.AbstractParser<LogModel>() {",
          "56285:       public LogModel parsePartialFrom(",
          "56289:         return new LogModel(input, extensionRegistry);",
          "56293:     public static com.google.protobuf.Parser<LogModel> parser() {",
          "56298:     public com.google.protobuf.Parser<LogModel> getParserForType() {",
          "56303:     public org.mlflow.api.proto.Service.LogModel getDefaultInstanceForType() {",
          "56309:   public interface LogInputsOrBuilder extends",
          "",
          "---------------",
          "--- Hunk 710 ---",
          "[Context before]",
          "49921:   }",
          "49926:       com.google.protobuf.GeneratedMessageV3 implements",
          "49929:   private static final long serialVersionUID = 0L;",
          "49932:       super(builder);",
          "49933:     }",
          "49935:       runId_ = \"\";",
          "49937:     }",
          "49939:     @java.lang.Override",
          "49940:     @SuppressWarnings({\"unused\"})",
          "49941:     protected java.lang.Object newInstance(",
          "49942:         UnusedPrivateParameter unused) {",
          "49944:     }",
          "49946:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "49901:     boolean hasModelJson();",
          "49910:     java.lang.String getModelJson();",
          "49919:     com.google.protobuf.ByteString",
          "49920:         getModelJsonBytes();",
          "49925:   public static final class LogModel extends",
          "49928:       LogModelOrBuilder {",
          "49931:     private LogModel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "49934:     private LogModel() {",
          "49936:       modelJson_ = \"\";",
          "49943:       return new LogModel();",
          "",
          "[Added Lines]",
          "56349:     java.util.List<org.mlflow.api.proto.Service.DatasetInput>",
          "56350:         getDatasetsList();",
          "56358:     org.mlflow.api.proto.Service.DatasetInput getDatasets(int index);",
          "56366:     int getDatasetsCount();",
          "56374:     java.util.List<? extends org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "56375:         getDatasetsOrBuilderList();",
          "56383:     org.mlflow.api.proto.Service.DatasetInputOrBuilder getDatasetsOrBuilder(",
          "56384:         int index);",
          "56394:   public static final class LogInputs extends",
          "56397:       LogInputsOrBuilder {",
          "56400:     private LogInputs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {",
          "56403:     private LogInputs() {",
          "56405:       datasets_ = java.util.Collections.emptyList();",
          "56412:       return new LogInputs();",
          "",
          "---------------",
          "--- Hunk 711 ---",
          "[Context before]",
          "49948:     getUnknownFields() {",
          "49949:       return this.unknownFields;",
          "49950:     }",
          "49952:         com.google.protobuf.CodedInputStream input,",
          "49953:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "49954:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "",
          "[Removed Lines]",
          "49951:     private LogModel(",
          "",
          "[Added Lines]",
          "56420:     private LogInputs(",
          "",
          "---------------",
          "--- Hunk 712 ---",
          "[Context before]",
          "49974:               break;",
          "49975:             }",
          "49976:             case 18: {",
          "49980:               break;",
          "49981:             }",
          "49982:             default: {",
          "",
          "[Removed Lines]",
          "49977:               com.google.protobuf.ByteString bs = input.readBytes();",
          "49978:               bitField0_ |= 0x00000002;",
          "49979:               modelJson_ = bs;",
          "",
          "[Added Lines]",
          "56446:               if (!((mutable_bitField0_ & 0x00000002) != 0)) {",
          "56447:                 datasets_ = new java.util.ArrayList<org.mlflow.api.proto.Service.DatasetInput>();",
          "56448:                 mutable_bitField0_ |= 0x00000002;",
          "56449:               }",
          "56450:               datasets_.add(",
          "56451:                   input.readMessage(org.mlflow.api.proto.Service.DatasetInput.PARSER, extensionRegistry));",
          "",
          "---------------",
          "--- Hunk 713 ---",
          "[Context before]",
          "49994:         throw new com.google.protobuf.InvalidProtocolBufferException(",
          "49995:             e).setUnfinishedMessage(this);",
          "49996:       } finally {",
          "49997:         this.unknownFields = unknownFields.build();",
          "49998:         makeExtensionsImmutable();",
          "49999:       }",
          "50000:     }",
          "50001:     public static final com.google.protobuf.Descriptors.Descriptor",
          "50002:         getDescriptor() {",
          "50004:     }",
          "50006:     @java.lang.Override",
          "50007:     protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "50008:         internalGetFieldAccessorTable() {",
          "50010:           .ensureFieldAccessorsInitialized(",
          "50012:     }",
          "50014:     public interface ResponseOrBuilder extends",
          "50016:         com.google.protobuf.MessageOrBuilder {",
          "50017:     }",
          "50021:     public static final class Response extends",
          "50022:         com.google.protobuf.GeneratedMessageV3 implements",
          "50024:         ResponseOrBuilder {",
          "50025:     private static final long serialVersionUID = 0L;",
          "",
          "[Removed Lines]",
          "50003:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_descriptor;",
          "50009:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_fieldAccessorTable",
          "50011:               org.mlflow.api.proto.Service.LogModel.class, org.mlflow.api.proto.Service.LogModel.Builder.class);",
          "",
          "[Added Lines]",
          "56469:         if (((mutable_bitField0_ & 0x00000002) != 0)) {",
          "56470:           datasets_ = java.util.Collections.unmodifiableList(datasets_);",
          "56471:         }",
          "56478:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_descriptor;",
          "56484:       return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_fieldAccessorTable",
          "56486:               org.mlflow.api.proto.Service.LogInputs.class, org.mlflow.api.proto.Service.LogInputs.Builder.class);",
          "",
          "---------------",
          "--- Hunk 714 ---",
          "[Context before]",
          "50081:       }",
          "50082:       public static final com.google.protobuf.Descriptors.Descriptor",
          "50083:           getDescriptor() {",
          "50085:       }",
          "50087:       @java.lang.Override",
          "50088:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "50089:           internalGetFieldAccessorTable() {",
          "50091:             .ensureFieldAccessorsInitialized(",
          "50093:       }",
          "50095:       private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "50084:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_descriptor;",
          "50090:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_fieldAccessorTable",
          "50092:                 org.mlflow.api.proto.Service.LogModel.Response.class, org.mlflow.api.proto.Service.LogModel.Response.Builder.class);",
          "",
          "[Added Lines]",
          "56559:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_Response_descriptor;",
          "56565:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_Response_fieldAccessorTable",
          "56567:                 org.mlflow.api.proto.Service.LogInputs.Response.class, org.mlflow.api.proto.Service.LogInputs.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 715 ---",
          "[Context before]",
          "50125:         if (obj == this) {",
          "50126:          return true;",
          "50127:         }",
          "50129:           return super.equals(obj);",
          "50130:         }",
          "50133:         if (!unknownFields.equals(other.unknownFields)) return false;",
          "50134:         return true;",
          "",
          "[Removed Lines]",
          "50128:         if (!(obj instanceof org.mlflow.api.proto.Service.LogModel.Response)) {",
          "50131:         org.mlflow.api.proto.Service.LogModel.Response other = (org.mlflow.api.proto.Service.LogModel.Response) obj;",
          "",
          "[Added Lines]",
          "56603:         if (!(obj instanceof org.mlflow.api.proto.Service.LogInputs.Response)) {",
          "56606:         org.mlflow.api.proto.Service.LogInputs.Response other = (org.mlflow.api.proto.Service.LogInputs.Response) obj;",
          "",
          "---------------",
          "--- Hunk 716 ---",
          "[Context before]",
          "50146:         return hash;",
          "50147:       }",
          "50150:           java.nio.ByteBuffer data)",
          "50151:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50152:         return PARSER.parseFrom(data);",
          "50153:       }",
          "50155:           java.nio.ByteBuffer data,",
          "50156:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50157:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50158:         return PARSER.parseFrom(data, extensionRegistry);",
          "50159:       }",
          "50161:           com.google.protobuf.ByteString data)",
          "50162:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50163:         return PARSER.parseFrom(data);",
          "50164:       }",
          "50166:           com.google.protobuf.ByteString data,",
          "50167:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50168:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50169:         return PARSER.parseFrom(data, extensionRegistry);",
          "50170:       }",
          "50172:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50173:         return PARSER.parseFrom(data);",
          "50174:       }",
          "50176:           byte[] data,",
          "50177:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50178:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "50179:         return PARSER.parseFrom(data, extensionRegistry);",
          "50180:       }",
          "50182:           throws java.io.IOException {",
          "50183:         return com.google.protobuf.GeneratedMessageV3",
          "50184:             .parseWithIOException(PARSER, input);",
          "50185:       }",
          "50187:           java.io.InputStream input,",
          "50188:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50189:           throws java.io.IOException {",
          "50190:         return com.google.protobuf.GeneratedMessageV3",
          "50191:             .parseWithIOException(PARSER, input, extensionRegistry);",
          "50192:       }",
          "50194:           throws java.io.IOException {",
          "50195:         return com.google.protobuf.GeneratedMessageV3",
          "50196:             .parseDelimitedWithIOException(PARSER, input);",
          "50197:       }",
          "50199:           java.io.InputStream input,",
          "50200:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50201:           throws java.io.IOException {",
          "50202:         return com.google.protobuf.GeneratedMessageV3",
          "50203:             .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "50204:       }",
          "50206:           com.google.protobuf.CodedInputStream input)",
          "50207:           throws java.io.IOException {",
          "50208:         return com.google.protobuf.GeneratedMessageV3",
          "50209:             .parseWithIOException(PARSER, input);",
          "50210:       }",
          "50212:           com.google.protobuf.CodedInputStream input,",
          "50213:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50214:           throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "50149:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "50154:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "50160:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "50165:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "50171:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(byte[] data)",
          "50175:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "50181:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(java.io.InputStream input)",
          "50186:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "50193:       public static org.mlflow.api.proto.Service.LogModel.Response parseDelimitedFrom(java.io.InputStream input)",
          "50198:       public static org.mlflow.api.proto.Service.LogModel.Response parseDelimitedFrom(",
          "50205:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "50211:       public static org.mlflow.api.proto.Service.LogModel.Response parseFrom(",
          "",
          "[Added Lines]",
          "56624:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "56629:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "56635:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "56640:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "56646:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(byte[] data)",
          "56650:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "56656:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(java.io.InputStream input)",
          "56661:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "56668:       public static org.mlflow.api.proto.Service.LogInputs.Response parseDelimitedFrom(java.io.InputStream input)",
          "56673:       public static org.mlflow.api.proto.Service.LogInputs.Response parseDelimitedFrom(",
          "56680:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "56686:       public static org.mlflow.api.proto.Service.LogInputs.Response parseFrom(",
          "",
          "---------------",
          "--- Hunk 717 ---",
          "[Context before]",
          "50221:       public static Builder newBuilder() {",
          "50222:         return DEFAULT_INSTANCE.toBuilder();",
          "50223:       }",
          "50225:         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "50226:       }",
          "50227:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "50224:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogModel.Response prototype) {",
          "",
          "[Added Lines]",
          "56699:       public static Builder newBuilder(org.mlflow.api.proto.Service.LogInputs.Response prototype) {",
          "",
          "---------------",
          "--- Hunk 718 ---",
          "[Context before]",
          "50237:         return builder;",
          "50238:       }",
          "50242:       public static final class Builder extends",
          "50243:           com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "50246:         public static final com.google.protobuf.Descriptors.Descriptor",
          "50247:             getDescriptor() {",
          "50249:         }",
          "50251:         @java.lang.Override",
          "50252:         protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "50253:             internalGetFieldAccessorTable() {",
          "50255:               .ensureFieldAccessorsInitialized(",
          "50257:         }",
          "50260:         private Builder() {",
          "50261:           maybeForceBuilderInitialization();",
          "50262:         }",
          "",
          "[Removed Lines]",
          "50245:           org.mlflow.api.proto.Service.LogModel.ResponseOrBuilder {",
          "50248:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_descriptor;",
          "50254:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_fieldAccessorTable",
          "50256:                   org.mlflow.api.proto.Service.LogModel.Response.class, org.mlflow.api.proto.Service.LogModel.Response.Builder.class);",
          "",
          "[Added Lines]",
          "56720:           org.mlflow.api.proto.Service.LogInputs.ResponseOrBuilder {",
          "56723:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_Response_descriptor;",
          "56729:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_Response_fieldAccessorTable",
          "56731:                   org.mlflow.api.proto.Service.LogInputs.Response.class, org.mlflow.api.proto.Service.LogInputs.Response.Builder.class);",
          "",
          "---------------",
          "--- Hunk 719 ---",
          "[Context before]",
          "50280:         @java.lang.Override",
          "50281:         public com.google.protobuf.Descriptors.Descriptor",
          "50282:             getDescriptorForType() {",
          "50284:         }",
          "50286:         @java.lang.Override",
          "50289:         }",
          "50291:         @java.lang.Override",
          "50294:           if (!result.isInitialized()) {",
          "50295:             throw newUninitializedMessageException(result);",
          "50296:           }",
          "",
          "[Removed Lines]",
          "50283:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_Response_descriptor;",
          "50287:         public org.mlflow.api.proto.Service.LogModel.Response getDefaultInstanceForType() {",
          "50288:           return org.mlflow.api.proto.Service.LogModel.Response.getDefaultInstance();",
          "50292:         public org.mlflow.api.proto.Service.LogModel.Response build() {",
          "50293:           org.mlflow.api.proto.Service.LogModel.Response result = buildPartial();",
          "",
          "[Added Lines]",
          "56758:           return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_Response_descriptor;",
          "56762:         public org.mlflow.api.proto.Service.LogInputs.Response getDefaultInstanceForType() {",
          "56763:           return org.mlflow.api.proto.Service.LogInputs.Response.getDefaultInstance();",
          "56767:         public org.mlflow.api.proto.Service.LogInputs.Response build() {",
          "56768:           org.mlflow.api.proto.Service.LogInputs.Response result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 720 ---",
          "[Context before]",
          "50298:         }",
          "50300:         @java.lang.Override",
          "50303:           onBuilt();",
          "50304:           return result;",
          "50305:         }",
          "",
          "[Removed Lines]",
          "50301:         public org.mlflow.api.proto.Service.LogModel.Response buildPartial() {",
          "50302:           org.mlflow.api.proto.Service.LogModel.Response result = new org.mlflow.api.proto.Service.LogModel.Response(this);",
          "",
          "[Added Lines]",
          "56776:         public org.mlflow.api.proto.Service.LogInputs.Response buildPartial() {",
          "56777:           org.mlflow.api.proto.Service.LogInputs.Response result = new org.mlflow.api.proto.Service.LogInputs.Response(this);",
          "",
          "---------------",
          "--- Hunk 721 ---",
          "[Context before]",
          "50338:         }",
          "50339:         @java.lang.Override",
          "50340:         public Builder mergeFrom(com.google.protobuf.Message other) {",
          "50343:           } else {",
          "50344:             super.mergeFrom(other);",
          "50345:             return this;",
          "50346:           }",
          "50347:         }",
          "50351:           this.mergeUnknownFields(other.unknownFields);",
          "50352:           onChanged();",
          "50353:           return this;",
          "",
          "[Removed Lines]",
          "50341:           if (other instanceof org.mlflow.api.proto.Service.LogModel.Response) {",
          "50342:             return mergeFrom((org.mlflow.api.proto.Service.LogModel.Response)other);",
          "50349:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogModel.Response other) {",
          "50350:           if (other == org.mlflow.api.proto.Service.LogModel.Response.getDefaultInstance()) return this;",
          "",
          "[Added Lines]",
          "56816:           if (other instanceof org.mlflow.api.proto.Service.LogInputs.Response) {",
          "56817:             return mergeFrom((org.mlflow.api.proto.Service.LogInputs.Response)other);",
          "56824:         public Builder mergeFrom(org.mlflow.api.proto.Service.LogInputs.Response other) {",
          "56825:           if (other == org.mlflow.api.proto.Service.LogInputs.Response.getDefaultInstance()) return this;",
          "",
          "---------------",
          "--- Hunk 722 ---",
          "[Context before]",
          "50363:             com.google.protobuf.CodedInputStream input,",
          "50364:             com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50365:             throws java.io.IOException {",
          "50367:           try {",
          "50368:             parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "50369:           } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "50371:             throw e.unwrapIOException();",
          "50372:           } finally {",
          "50373:             if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "50366:           org.mlflow.api.proto.Service.LogModel.Response parsedMessage = null;",
          "50370:             parsedMessage = (org.mlflow.api.proto.Service.LogModel.Response) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "56841:           org.mlflow.api.proto.Service.LogInputs.Response parsedMessage = null;",
          "56845:             parsedMessage = (org.mlflow.api.proto.Service.LogInputs.Response) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 723 ---",
          "[Context before]",
          "50389:         }",
          "50393:       }",
          "50397:       static {",
          "50399:       }",
          "50402:         return DEFAULT_INSTANCE;",
          "50403:       }",
          "",
          "[Removed Lines]",
          "50396:       private static final org.mlflow.api.proto.Service.LogModel.Response DEFAULT_INSTANCE;",
          "50398:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogModel.Response();",
          "50401:       public static org.mlflow.api.proto.Service.LogModel.Response getDefaultInstance() {",
          "",
          "[Added Lines]",
          "56871:       private static final org.mlflow.api.proto.Service.LogInputs.Response DEFAULT_INSTANCE;",
          "56873:         DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogInputs.Response();",
          "56876:       public static org.mlflow.api.proto.Service.LogInputs.Response getDefaultInstance() {",
          "",
          "---------------",
          "--- Hunk 724 ---",
          "[Context before]",
          "50423:       }",
          "50425:       @java.lang.Override",
          "50427:         return DEFAULT_INSTANCE;",
          "50428:       }",
          "",
          "[Removed Lines]",
          "50426:       public org.mlflow.api.proto.Service.LogModel.Response getDefaultInstanceForType() {",
          "",
          "[Added Lines]",
          "56901:       public org.mlflow.api.proto.Service.LogInputs.Response getDefaultInstanceForType() {",
          "",
          "---------------",
          "--- Hunk 725 ---",
          "[Context before]",
          "50490:       }",
          "50491:     }",
          "50503:     @java.lang.Override",
          "50506:     }",
          "50515:     @java.lang.Override",
          "50529:     }",
          "50538:     @java.lang.Override",
          "50551:     }",
          "50553:     private byte memoizedIsInitialized = -1;",
          "",
          "[Removed Lines]",
          "50493:     public static final int MODEL_JSON_FIELD_NUMBER = 2;",
          "50494:     private volatile java.lang.Object modelJson_;",
          "50504:     public boolean hasModelJson() {",
          "50505:       return ((bitField0_ & 0x00000002) != 0);",
          "50516:     public java.lang.String getModelJson() {",
          "50517:       java.lang.Object ref = modelJson_;",
          "50518:       if (ref instanceof java.lang.String) {",
          "50519:         return (java.lang.String) ref;",
          "50520:       } else {",
          "50521:         com.google.protobuf.ByteString bs =",
          "50522:             (com.google.protobuf.ByteString) ref;",
          "50523:         java.lang.String s = bs.toStringUtf8();",
          "50524:         if (bs.isValidUtf8()) {",
          "50525:           modelJson_ = s;",
          "50526:         }",
          "50527:         return s;",
          "50528:       }",
          "50539:     public com.google.protobuf.ByteString",
          "50540:         getModelJsonBytes() {",
          "50541:       java.lang.Object ref = modelJson_;",
          "50542:       if (ref instanceof java.lang.String) {",
          "50543:         com.google.protobuf.ByteString b =",
          "50544:             com.google.protobuf.ByteString.copyFromUtf8(",
          "50545:                 (java.lang.String) ref);",
          "50546:         modelJson_ = b;",
          "50547:         return b;",
          "50548:       } else {",
          "50549:         return (com.google.protobuf.ByteString) ref;",
          "50550:       }",
          "",
          "[Added Lines]",
          "56968:     public static final int DATASETS_FIELD_NUMBER = 2;",
          "56969:     private java.util.List<org.mlflow.api.proto.Service.DatasetInput> datasets_;",
          "56978:     public java.util.List<org.mlflow.api.proto.Service.DatasetInput> getDatasetsList() {",
          "56979:       return datasets_;",
          "56989:     public java.util.List<? extends org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "56990:         getDatasetsOrBuilderList() {",
          "56991:       return datasets_;",
          "57001:     public int getDatasetsCount() {",
          "57002:       return datasets_.size();",
          "57003:     }",
          "57011:     @java.lang.Override",
          "57012:     public org.mlflow.api.proto.Service.DatasetInput getDatasets(int index) {",
          "57013:       return datasets_.get(index);",
          "57014:     }",
          "57022:     @java.lang.Override",
          "57023:     public org.mlflow.api.proto.Service.DatasetInputOrBuilder getDatasetsOrBuilder(",
          "57024:         int index) {",
          "57025:       return datasets_.get(index);",
          "",
          "---------------",
          "--- Hunk 726 ---",
          "[Context before]",
          "50567:       if (((bitField0_ & 0x00000001) != 0)) {",
          "50568:         com.google.protobuf.GeneratedMessageV3.writeString(output, 1, runId_);",
          "50569:       }",
          "50572:       }",
          "50573:       unknownFields.writeTo(output);",
          "50574:     }",
          "",
          "[Removed Lines]",
          "50570:       if (((bitField0_ & 0x00000002) != 0)) {",
          "50571:         com.google.protobuf.GeneratedMessageV3.writeString(output, 2, modelJson_);",
          "",
          "[Added Lines]",
          "57045:       for (int i = 0; i < datasets_.size(); i++) {",
          "57046:         output.writeMessage(2, datasets_.get(i));",
          "",
          "---------------",
          "--- Hunk 727 ---",
          "[Context before]",
          "50582:       if (((bitField0_ & 0x00000001) != 0)) {",
          "50583:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, runId_);",
          "50584:       }",
          "50587:       }",
          "50588:       size += unknownFields.getSerializedSize();",
          "50589:       memoizedSize = size;",
          "",
          "[Removed Lines]",
          "50585:       if (((bitField0_ & 0x00000002) != 0)) {",
          "50586:         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, modelJson_);",
          "",
          "[Added Lines]",
          "57060:       for (int i = 0; i < datasets_.size(); i++) {",
          "57061:         size += com.google.protobuf.CodedOutputStream",
          "57062:           .computeMessageSize(2, datasets_.get(i));",
          "",
          "---------------",
          "--- Hunk 728 ---",
          "[Context before]",
          "50595:       if (obj == this) {",
          "50596:        return true;",
          "50597:       }",
          "50599:         return super.equals(obj);",
          "50600:       }",
          "50603:       if (hasRunId() != other.hasRunId()) return false;",
          "50604:       if (hasRunId()) {",
          "50605:         if (!getRunId()",
          "50606:             .equals(other.getRunId())) return false;",
          "50607:       }",
          "50613:       if (!unknownFields.equals(other.unknownFields)) return false;",
          "50614:       return true;",
          "50615:     }",
          "",
          "[Removed Lines]",
          "50598:       if (!(obj instanceof org.mlflow.api.proto.Service.LogModel)) {",
          "50601:       org.mlflow.api.proto.Service.LogModel other = (org.mlflow.api.proto.Service.LogModel) obj;",
          "50608:       if (hasModelJson() != other.hasModelJson()) return false;",
          "50609:       if (hasModelJson()) {",
          "50610:         if (!getModelJson()",
          "50611:             .equals(other.getModelJson())) return false;",
          "50612:       }",
          "",
          "[Added Lines]",
          "57074:       if (!(obj instanceof org.mlflow.api.proto.Service.LogInputs)) {",
          "57077:       org.mlflow.api.proto.Service.LogInputs other = (org.mlflow.api.proto.Service.LogInputs) obj;",
          "57084:       if (!getDatasetsList()",
          "57085:           .equals(other.getDatasetsList())) return false;",
          "",
          "---------------",
          "--- Hunk 729 ---",
          "[Context before]",
          "50625:         hash = (37 * hash) + RUN_ID_FIELD_NUMBER;",
          "50626:         hash = (53 * hash) + getRunId().hashCode();",
          "50627:       }",
          "50631:       }",
          "50632:       hash = (29 * hash) + unknownFields.hashCode();",
          "50633:       memoizedHashCode = hash;",
          "50634:       return hash;",
          "50635:     }",
          "50638:         java.nio.ByteBuffer data)",
          "50639:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "50640:       return PARSER.parseFrom(data);",
          "50641:     }",
          "50643:         java.nio.ByteBuffer data,",
          "50644:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50645:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "50646:       return PARSER.parseFrom(data, extensionRegistry);",
          "50647:     }",
          "50649:         com.google.protobuf.ByteString data)",
          "50650:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "50651:       return PARSER.parseFrom(data);",
          "50652:     }",
          "50654:         com.google.protobuf.ByteString data,",
          "50655:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50656:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "50657:       return PARSER.parseFrom(data, extensionRegistry);",
          "50658:     }",
          "50660:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "50661:       return PARSER.parseFrom(data);",
          "50662:     }",
          "50664:         byte[] data,",
          "50665:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50666:         throws com.google.protobuf.InvalidProtocolBufferException {",
          "50667:       return PARSER.parseFrom(data, extensionRegistry);",
          "50668:     }",
          "50670:         throws java.io.IOException {",
          "50671:       return com.google.protobuf.GeneratedMessageV3",
          "50672:           .parseWithIOException(PARSER, input);",
          "50673:     }",
          "50675:         java.io.InputStream input,",
          "50676:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50677:         throws java.io.IOException {",
          "50678:       return com.google.protobuf.GeneratedMessageV3",
          "50679:           .parseWithIOException(PARSER, input, extensionRegistry);",
          "50680:     }",
          "50682:         throws java.io.IOException {",
          "50683:       return com.google.protobuf.GeneratedMessageV3",
          "50684:           .parseDelimitedWithIOException(PARSER, input);",
          "50685:     }",
          "50687:         java.io.InputStream input,",
          "50688:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50689:         throws java.io.IOException {",
          "50690:       return com.google.protobuf.GeneratedMessageV3",
          "50691:           .parseDelimitedWithIOException(PARSER, input, extensionRegistry);",
          "50692:     }",
          "50694:         com.google.protobuf.CodedInputStream input)",
          "50695:         throws java.io.IOException {",
          "50696:       return com.google.protobuf.GeneratedMessageV3",
          "50697:           .parseWithIOException(PARSER, input);",
          "50698:     }",
          "50700:         com.google.protobuf.CodedInputStream input,",
          "50701:         com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50702:         throws java.io.IOException {",
          "",
          "[Removed Lines]",
          "50628:       if (hasModelJson()) {",
          "50629:         hash = (37 * hash) + MODEL_JSON_FIELD_NUMBER;",
          "50630:         hash = (53 * hash) + getModelJson().hashCode();",
          "50637:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "50642:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "50648:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "50653:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "50659:     public static org.mlflow.api.proto.Service.LogModel parseFrom(byte[] data)",
          "50663:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "50669:     public static org.mlflow.api.proto.Service.LogModel parseFrom(java.io.InputStream input)",
          "50674:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "50681:     public static org.mlflow.api.proto.Service.LogModel parseDelimitedFrom(java.io.InputStream input)",
          "50686:     public static org.mlflow.api.proto.Service.LogModel parseDelimitedFrom(",
          "50693:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "50699:     public static org.mlflow.api.proto.Service.LogModel parseFrom(",
          "",
          "[Added Lines]",
          "57101:       if (getDatasetsCount() > 0) {",
          "57102:         hash = (37 * hash) + DATASETS_FIELD_NUMBER;",
          "57103:         hash = (53 * hash) + getDatasetsList().hashCode();",
          "57110:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "57115:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "57121:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "57126:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "57132:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(byte[] data)",
          "57136:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "57142:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(java.io.InputStream input)",
          "57147:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "57154:     public static org.mlflow.api.proto.Service.LogInputs parseDelimitedFrom(java.io.InputStream input)",
          "57159:     public static org.mlflow.api.proto.Service.LogInputs parseDelimitedFrom(",
          "57166:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "57172:     public static org.mlflow.api.proto.Service.LogInputs parseFrom(",
          "",
          "---------------",
          "--- Hunk 730 ---",
          "[Context before]",
          "50709:     public static Builder newBuilder() {",
          "50710:       return DEFAULT_INSTANCE.toBuilder();",
          "50711:     }",
          "50713:       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);",
          "50714:     }",
          "50715:     @java.lang.Override",
          "",
          "[Removed Lines]",
          "50712:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogModel prototype) {",
          "",
          "[Added Lines]",
          "57185:     public static Builder newBuilder(org.mlflow.api.proto.Service.LogInputs prototype) {",
          "",
          "---------------",
          "--- Hunk 731 ---",
          "[Context before]",
          "50725:       return builder;",
          "50726:     }",
          "50730:     public static final class Builder extends",
          "50731:         com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements",
          "50734:       public static final com.google.protobuf.Descriptors.Descriptor",
          "50735:           getDescriptor() {",
          "50737:       }",
          "50739:       @java.lang.Override",
          "50740:       protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "50741:           internalGetFieldAccessorTable() {",
          "50743:             .ensureFieldAccessorsInitialized(",
          "50745:       }",
          "50748:       private Builder() {",
          "50749:         maybeForceBuilderInitialization();",
          "50750:       }",
          "",
          "[Removed Lines]",
          "50733:         org.mlflow.api.proto.Service.LogModelOrBuilder {",
          "50736:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_descriptor;",
          "50742:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_fieldAccessorTable",
          "50744:                 org.mlflow.api.proto.Service.LogModel.class, org.mlflow.api.proto.Service.LogModel.Builder.class);",
          "",
          "[Added Lines]",
          "57211:         org.mlflow.api.proto.Service.LogInputsOrBuilder {",
          "57214:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_descriptor;",
          "57220:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_fieldAccessorTable",
          "57222:                 org.mlflow.api.proto.Service.LogInputs.class, org.mlflow.api.proto.Service.LogInputs.Builder.class);",
          "",
          "---------------",
          "--- Hunk 732 ---",
          "[Context before]",
          "50757:       private void maybeForceBuilderInitialization() {",
          "50758:         if (com.google.protobuf.GeneratedMessageV3",
          "50759:                 .alwaysUseFieldBuilders) {",
          "50760:         }",
          "50761:       }",
          "50762:       @java.lang.Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57238:           getDatasetsFieldBuilder();",
          "",
          "---------------",
          "--- Hunk 733 ---",
          "[Context before]",
          "50764:         super.clear();",
          "50765:         runId_ = \"\";",
          "50766:         bitField0_ = (bitField0_ & ~0x00000001);",
          "50769:         return this;",
          "50770:       }",
          "50772:       @java.lang.Override",
          "50773:       public com.google.protobuf.Descriptors.Descriptor",
          "50774:           getDescriptorForType() {",
          "50776:       }",
          "50778:       @java.lang.Override",
          "50781:       }",
          "50783:       @java.lang.Override",
          "50786:         if (!result.isInitialized()) {",
          "50787:           throw newUninitializedMessageException(result);",
          "50788:         }",
          "",
          "[Removed Lines]",
          "50767:         modelJson_ = \"\";",
          "50768:         bitField0_ = (bitField0_ & ~0x00000002);",
          "50775:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogModel_descriptor;",
          "50779:       public org.mlflow.api.proto.Service.LogModel getDefaultInstanceForType() {",
          "50780:         return org.mlflow.api.proto.Service.LogModel.getDefaultInstance();",
          "50784:       public org.mlflow.api.proto.Service.LogModel build() {",
          "50785:         org.mlflow.api.proto.Service.LogModel result = buildPartial();",
          "",
          "[Added Lines]",
          "57246:         if (datasetsBuilder_ == null) {",
          "57247:           datasets_ = java.util.Collections.emptyList();",
          "57248:           bitField0_ = (bitField0_ & ~0x00000002);",
          "57249:         } else {",
          "57250:           datasetsBuilder_.clear();",
          "57251:         }",
          "57258:         return org.mlflow.api.proto.Service.internal_static_mlflow_LogInputs_descriptor;",
          "57262:       public org.mlflow.api.proto.Service.LogInputs getDefaultInstanceForType() {",
          "57263:         return org.mlflow.api.proto.Service.LogInputs.getDefaultInstance();",
          "57267:       public org.mlflow.api.proto.Service.LogInputs build() {",
          "57268:         org.mlflow.api.proto.Service.LogInputs result = buildPartial();",
          "",
          "---------------",
          "--- Hunk 734 ---",
          "[Context before]",
          "50790:       }",
          "50792:       @java.lang.Override",
          "50795:         int from_bitField0_ = bitField0_;",
          "50796:         int to_bitField0_ = 0;",
          "50797:         if (((from_bitField0_ & 0x00000001) != 0)) {",
          "50798:           to_bitField0_ |= 0x00000001;",
          "50799:         }",
          "50800:         result.runId_ = runId_;",
          "50803:         }",
          "50805:         result.bitField0_ = to_bitField0_;",
          "50806:         onBuilt();",
          "50807:         return result;",
          "",
          "[Removed Lines]",
          "50793:       public org.mlflow.api.proto.Service.LogModel buildPartial() {",
          "50794:         org.mlflow.api.proto.Service.LogModel result = new org.mlflow.api.proto.Service.LogModel(this);",
          "50801:         if (((from_bitField0_ & 0x00000002) != 0)) {",
          "50802:           to_bitField0_ |= 0x00000002;",
          "50804:         result.modelJson_ = modelJson_;",
          "",
          "[Added Lines]",
          "57276:       public org.mlflow.api.proto.Service.LogInputs buildPartial() {",
          "57277:         org.mlflow.api.proto.Service.LogInputs result = new org.mlflow.api.proto.Service.LogInputs(this);",
          "57284:         if (datasetsBuilder_ == null) {",
          "57285:           if (((bitField0_ & 0x00000002) != 0)) {",
          "57286:             datasets_ = java.util.Collections.unmodifiableList(datasets_);",
          "57287:             bitField0_ = (bitField0_ & ~0x00000002);",
          "57288:           }",
          "57289:           result.datasets_ = datasets_;",
          "57290:         } else {",
          "57291:           result.datasets_ = datasetsBuilder_.build();",
          "",
          "---------------",
          "--- Hunk 735 ---",
          "[Context before]",
          "50841:       }",
          "50842:       @java.lang.Override",
          "50843:       public Builder mergeFrom(com.google.protobuf.Message other) {",
          "50846:         } else {",
          "50847:           super.mergeFrom(other);",
          "50848:           return this;",
          "50849:         }",
          "50850:       }",
          "50854:         if (other.hasRunId()) {",
          "50855:           bitField0_ |= 0x00000001;",
          "50856:           runId_ = other.runId_;",
          "50857:           onChanged();",
          "50858:         }",
          "50863:         }",
          "50864:         this.mergeUnknownFields(other.unknownFields);",
          "50865:         onChanged();",
          "",
          "[Removed Lines]",
          "50844:         if (other instanceof org.mlflow.api.proto.Service.LogModel) {",
          "50845:           return mergeFrom((org.mlflow.api.proto.Service.LogModel)other);",
          "50852:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogModel other) {",
          "50853:         if (other == org.mlflow.api.proto.Service.LogModel.getDefaultInstance()) return this;",
          "50859:         if (other.hasModelJson()) {",
          "50860:           bitField0_ |= 0x00000002;",
          "50861:           modelJson_ = other.modelJson_;",
          "50862:           onChanged();",
          "",
          "[Added Lines]",
          "57332:         if (other instanceof org.mlflow.api.proto.Service.LogInputs) {",
          "57333:           return mergeFrom((org.mlflow.api.proto.Service.LogInputs)other);",
          "57340:       public Builder mergeFrom(org.mlflow.api.proto.Service.LogInputs other) {",
          "57341:         if (other == org.mlflow.api.proto.Service.LogInputs.getDefaultInstance()) return this;",
          "57347:         if (datasetsBuilder_ == null) {",
          "57348:           if (!other.datasets_.isEmpty()) {",
          "57349:             if (datasets_.isEmpty()) {",
          "57350:               datasets_ = other.datasets_;",
          "57351:               bitField0_ = (bitField0_ & ~0x00000002);",
          "57352:             } else {",
          "57353:               ensureDatasetsIsMutable();",
          "57354:               datasets_.addAll(other.datasets_);",
          "57355:             }",
          "57356:             onChanged();",
          "57357:           }",
          "57358:         } else {",
          "57359:           if (!other.datasets_.isEmpty()) {",
          "57360:             if (datasetsBuilder_.isEmpty()) {",
          "57361:               datasetsBuilder_.dispose();",
          "57362:               datasetsBuilder_ = null;",
          "57363:               datasets_ = other.datasets_;",
          "57364:               bitField0_ = (bitField0_ & ~0x00000002);",
          "57365:               datasetsBuilder_ =",
          "57366:                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?",
          "57367:                    getDatasetsFieldBuilder() : null;",
          "57368:             } else {",
          "57369:               datasetsBuilder_.addAllMessages(other.datasets_);",
          "57370:             }",
          "57371:           }",
          "",
          "---------------",
          "--- Hunk 736 ---",
          "[Context before]",
          "50876:           com.google.protobuf.CodedInputStream input,",
          "50877:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "50878:           throws java.io.IOException {",
          "50880:         try {",
          "50881:           parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);",
          "50882:         } catch (com.google.protobuf.InvalidProtocolBufferException e) {",
          "50884:           throw e.unwrapIOException();",
          "50885:         } finally {",
          "50886:           if (parsedMessage != null) {",
          "",
          "[Removed Lines]",
          "50879:         org.mlflow.api.proto.Service.LogModel parsedMessage = null;",
          "50883:           parsedMessage = (org.mlflow.api.proto.Service.LogModel) e.getUnfinishedMessage();",
          "",
          "[Added Lines]",
          "57388:         org.mlflow.api.proto.Service.LogInputs parsedMessage = null;",
          "57392:           parsedMessage = (org.mlflow.api.proto.Service.LogInputs) e.getUnfinishedMessage();",
          "",
          "---------------",
          "--- Hunk 737 ---",
          "[Context before]",
          "50999:         return this;",
          "51000:       }",
          "51013:       }",
          "51030:           }",
          "51032:         } else {",
          "51034:         }",
          "51035:       }",
          "51053:         } else {",
          "51055:         }",
          "51056:       }",
          "51074:         return this;",
          "51075:       }",
          "51088:         return this;",
          "51089:       }",
          "51107:         return this;",
          "51108:       }",
          "51109:       @java.lang.Override",
          "51110:       public final Builder setUnknownFields(",
          "51111:           final com.google.protobuf.UnknownFieldSet unknownFields) {",
          "",
          "[Removed Lines]",
          "51002:       private java.lang.Object modelJson_ = \"\";",
          "51011:       public boolean hasModelJson() {",
          "51012:         return ((bitField0_ & 0x00000002) != 0);",
          "51022:       public java.lang.String getModelJson() {",
          "51023:         java.lang.Object ref = modelJson_;",
          "51024:         if (!(ref instanceof java.lang.String)) {",
          "51025:           com.google.protobuf.ByteString bs =",
          "51026:               (com.google.protobuf.ByteString) ref;",
          "51027:           java.lang.String s = bs.toStringUtf8();",
          "51028:           if (bs.isValidUtf8()) {",
          "51029:             modelJson_ = s;",
          "51031:           return s;",
          "51033:           return (java.lang.String) ref;",
          "51044:       public com.google.protobuf.ByteString",
          "51045:           getModelJsonBytes() {",
          "51046:         java.lang.Object ref = modelJson_;",
          "51047:         if (ref instanceof String) {",
          "51048:           com.google.protobuf.ByteString b =",
          "51049:               com.google.protobuf.ByteString.copyFromUtf8(",
          "51050:                   (java.lang.String) ref);",
          "51051:           modelJson_ = b;",
          "51052:           return b;",
          "51054:           return (com.google.protobuf.ByteString) ref;",
          "51066:       public Builder setModelJson(",
          "51067:           java.lang.String value) {",
          "51068:         if (value == null) {",
          "51069:     throw new NullPointerException();",
          "51070:   }",
          "51071:   bitField0_ |= 0x00000002;",
          "51072:         modelJson_ = value;",
          "51073:         onChanged();",
          "51084:       public Builder clearModelJson() {",
          "51085:         bitField0_ = (bitField0_ & ~0x00000002);",
          "51086:         modelJson_ = getDefaultInstance().getModelJson();",
          "51087:         onChanged();",
          "51099:       public Builder setModelJsonBytes(",
          "51100:           com.google.protobuf.ByteString value) {",
          "51101:         if (value == null) {",
          "51102:     throw new NullPointerException();",
          "51103:   }",
          "51104:   bitField0_ |= 0x00000002;",
          "51105:         modelJson_ = value;",
          "51106:         onChanged();",
          "",
          "[Added Lines]",
          "57511:       private java.util.List<org.mlflow.api.proto.Service.DatasetInput> datasets_ =",
          "57512:         java.util.Collections.emptyList();",
          "57513:       private void ensureDatasetsIsMutable() {",
          "57514:         if (!((bitField0_ & 0x00000002) != 0)) {",
          "57515:           datasets_ = new java.util.ArrayList<org.mlflow.api.proto.Service.DatasetInput>(datasets_);",
          "57516:           bitField0_ |= 0x00000002;",
          "57517:          }",
          "57518:       }",
          "57520:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "57521:           org.mlflow.api.proto.Service.DatasetInput, org.mlflow.api.proto.Service.DatasetInput.Builder, org.mlflow.api.proto.Service.DatasetInputOrBuilder> datasetsBuilder_;",
          "57530:       public java.util.List<org.mlflow.api.proto.Service.DatasetInput> getDatasetsList() {",
          "57531:         if (datasetsBuilder_ == null) {",
          "57532:           return java.util.Collections.unmodifiableList(datasets_);",
          "57533:         } else {",
          "57534:           return datasetsBuilder_.getMessageList();",
          "57535:         }",
          "57544:       public int getDatasetsCount() {",
          "57545:         if (datasetsBuilder_ == null) {",
          "57546:           return datasets_.size();",
          "57547:         } else {",
          "57548:           return datasetsBuilder_.getCount();",
          "57549:         }",
          "57550:       }",
          "57558:       public org.mlflow.api.proto.Service.DatasetInput getDatasets(int index) {",
          "57559:         if (datasetsBuilder_ == null) {",
          "57560:           return datasets_.get(index);",
          "57561:         } else {",
          "57562:           return datasetsBuilder_.getMessage(index);",
          "57563:         }",
          "57564:       }",
          "57572:       public Builder setDatasets(",
          "57573:           int index, org.mlflow.api.proto.Service.DatasetInput value) {",
          "57574:         if (datasetsBuilder_ == null) {",
          "57575:           if (value == null) {",
          "57576:             throw new NullPointerException();",
          "57578:           ensureDatasetsIsMutable();",
          "57579:           datasets_.set(index, value);",
          "57580:           onChanged();",
          "57582:           datasetsBuilder_.setMessage(index, value);",
          "57584:         return this;",
          "57593:       public Builder setDatasets(",
          "57594:           int index, org.mlflow.api.proto.Service.DatasetInput.Builder builderForValue) {",
          "57595:         if (datasetsBuilder_ == null) {",
          "57596:           ensureDatasetsIsMutable();",
          "57597:           datasets_.set(index, builderForValue.build());",
          "57598:           onChanged();",
          "57600:           datasetsBuilder_.setMessage(index, builderForValue.build());",
          "57602:         return this;",
          "57611:       public Builder addDatasets(org.mlflow.api.proto.Service.DatasetInput value) {",
          "57612:         if (datasetsBuilder_ == null) {",
          "57613:           if (value == null) {",
          "57614:             throw new NullPointerException();",
          "57615:           }",
          "57616:           ensureDatasetsIsMutable();",
          "57617:           datasets_.add(value);",
          "57618:           onChanged();",
          "57619:         } else {",
          "57620:           datasetsBuilder_.addMessage(value);",
          "57621:         }",
          "57631:       public Builder addDatasets(",
          "57632:           int index, org.mlflow.api.proto.Service.DatasetInput value) {",
          "57633:         if (datasetsBuilder_ == null) {",
          "57634:           if (value == null) {",
          "57635:             throw new NullPointerException();",
          "57636:           }",
          "57637:           ensureDatasetsIsMutable();",
          "57638:           datasets_.add(index, value);",
          "57639:           onChanged();",
          "57640:         } else {",
          "57641:           datasetsBuilder_.addMessage(index, value);",
          "57642:         }",
          "57652:       public Builder addDatasets(",
          "57653:           org.mlflow.api.proto.Service.DatasetInput.Builder builderForValue) {",
          "57654:         if (datasetsBuilder_ == null) {",
          "57655:           ensureDatasetsIsMutable();",
          "57656:           datasets_.add(builderForValue.build());",
          "57657:           onChanged();",
          "57658:         } else {",
          "57659:           datasetsBuilder_.addMessage(builderForValue.build());",
          "57660:         }",
          "57661:         return this;",
          "57662:       }",
          "57670:       public Builder addDatasets(",
          "57671:           int index, org.mlflow.api.proto.Service.DatasetInput.Builder builderForValue) {",
          "57672:         if (datasetsBuilder_ == null) {",
          "57673:           ensureDatasetsIsMutable();",
          "57674:           datasets_.add(index, builderForValue.build());",
          "57675:           onChanged();",
          "57676:         } else {",
          "57677:           datasetsBuilder_.addMessage(index, builderForValue.build());",
          "57678:         }",
          "57679:         return this;",
          "57680:       }",
          "57688:       public Builder addAllDatasets(",
          "57689:           java.lang.Iterable<? extends org.mlflow.api.proto.Service.DatasetInput> values) {",
          "57690:         if (datasetsBuilder_ == null) {",
          "57691:           ensureDatasetsIsMutable();",
          "57692:           com.google.protobuf.AbstractMessageLite.Builder.addAll(",
          "57693:               values, datasets_);",
          "57694:           onChanged();",
          "57695:         } else {",
          "57696:           datasetsBuilder_.addAllMessages(values);",
          "57697:         }",
          "57698:         return this;",
          "57699:       }",
          "57707:       public Builder clearDatasets() {",
          "57708:         if (datasetsBuilder_ == null) {",
          "57709:           datasets_ = java.util.Collections.emptyList();",
          "57710:           bitField0_ = (bitField0_ & ~0x00000002);",
          "57711:           onChanged();",
          "57712:         } else {",
          "57713:           datasetsBuilder_.clear();",
          "57714:         }",
          "57724:       public Builder removeDatasets(int index) {",
          "57725:         if (datasetsBuilder_ == null) {",
          "57726:           ensureDatasetsIsMutable();",
          "57727:           datasets_.remove(index);",
          "57728:           onChanged();",
          "57729:         } else {",
          "57730:           datasetsBuilder_.remove(index);",
          "57731:         }",
          "57732:         return this;",
          "57733:       }",
          "57741:       public org.mlflow.api.proto.Service.DatasetInput.Builder getDatasetsBuilder(",
          "57742:           int index) {",
          "57743:         return getDatasetsFieldBuilder().getBuilder(index);",
          "57744:       }",
          "57752:       public org.mlflow.api.proto.Service.DatasetInputOrBuilder getDatasetsOrBuilder(",
          "57753:           int index) {",
          "57754:         if (datasetsBuilder_ == null) {",
          "57755:           return datasets_.get(index);  } else {",
          "57756:           return datasetsBuilder_.getMessageOrBuilder(index);",
          "57757:         }",
          "57758:       }",
          "57766:       public java.util.List<? extends org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "57767:            getDatasetsOrBuilderList() {",
          "57768:         if (datasetsBuilder_ != null) {",
          "57769:           return datasetsBuilder_.getMessageOrBuilderList();",
          "57770:         } else {",
          "57771:           return java.util.Collections.unmodifiableList(datasets_);",
          "57772:         }",
          "57773:       }",
          "57781:       public org.mlflow.api.proto.Service.DatasetInput.Builder addDatasetsBuilder() {",
          "57782:         return getDatasetsFieldBuilder().addBuilder(",
          "57783:             org.mlflow.api.proto.Service.DatasetInput.getDefaultInstance());",
          "57784:       }",
          "57792:       public org.mlflow.api.proto.Service.DatasetInput.Builder addDatasetsBuilder(",
          "57793:           int index) {",
          "57794:         return getDatasetsFieldBuilder().addBuilder(",
          "57795:             index, org.mlflow.api.proto.Service.DatasetInput.getDefaultInstance());",
          "57796:       }",
          "57804:       public java.util.List<org.mlflow.api.proto.Service.DatasetInput.Builder>",
          "57805:            getDatasetsBuilderList() {",
          "57806:         return getDatasetsFieldBuilder().getBuilderList();",
          "57807:       }",
          "57808:       private com.google.protobuf.RepeatedFieldBuilderV3<",
          "57809:           org.mlflow.api.proto.Service.DatasetInput, org.mlflow.api.proto.Service.DatasetInput.Builder, org.mlflow.api.proto.Service.DatasetInputOrBuilder>",
          "57810:           getDatasetsFieldBuilder() {",
          "57811:         if (datasetsBuilder_ == null) {",
          "57812:           datasetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<",
          "57813:               org.mlflow.api.proto.Service.DatasetInput, org.mlflow.api.proto.Service.DatasetInput.Builder, org.mlflow.api.proto.Service.DatasetInputOrBuilder>(",
          "57814:                   datasets_,",
          "57815:                   ((bitField0_ & 0x00000002) != 0),",
          "57816:                   getParentForChildren(),",
          "57817:                   isClean());",
          "57818:           datasets_ = null;",
          "57819:         }",
          "57820:         return datasetsBuilder_;",
          "57821:       }",
          "",
          "---------------",
          "--- Hunk 738 ---",
          "[Context before]",
          "51119:       }",
          "51123:     }",
          "51127:     static {",
          "51129:     }",
          "51132:       return DEFAULT_INSTANCE;",
          "51133:     }",
          "51137:       @java.lang.Override",
          "51139:           com.google.protobuf.CodedInputStream input,",
          "51140:           com.google.protobuf.ExtensionRegistryLite extensionRegistry)",
          "51141:           throws com.google.protobuf.InvalidProtocolBufferException {",
          "51143:       }",
          "51144:     };",
          "51147:       return PARSER;",
          "51148:     }",
          "51150:     @java.lang.Override",
          "51152:       return PARSER;",
          "51153:     }",
          "51155:     @java.lang.Override",
          "51157:       return DEFAULT_INSTANCE;",
          "51158:     }",
          "",
          "[Removed Lines]",
          "51126:     private static final org.mlflow.api.proto.Service.LogModel DEFAULT_INSTANCE;",
          "51128:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogModel();",
          "51131:     public static org.mlflow.api.proto.Service.LogModel getDefaultInstance() {",
          "51135:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogModel>",
          "51136:         PARSER = new com.google.protobuf.AbstractParser<LogModel>() {",
          "51138:       public LogModel parsePartialFrom(",
          "51142:         return new LogModel(input, extensionRegistry);",
          "51146:     public static com.google.protobuf.Parser<LogModel> parser() {",
          "51151:     public com.google.protobuf.Parser<LogModel> getParserForType() {",
          "51156:     public org.mlflow.api.proto.Service.LogModel getDefaultInstanceForType() {",
          "",
          "[Added Lines]",
          "57839:     private static final org.mlflow.api.proto.Service.LogInputs DEFAULT_INSTANCE;",
          "57841:       DEFAULT_INSTANCE = new org.mlflow.api.proto.Service.LogInputs();",
          "57844:     public static org.mlflow.api.proto.Service.LogInputs getDefaultInstance() {",
          "57848:     @java.lang.Deprecated public static final com.google.protobuf.Parser<LogInputs>",
          "57849:         PARSER = new com.google.protobuf.AbstractParser<LogInputs>() {",
          "57851:       public LogInputs parsePartialFrom(",
          "57855:         return new LogInputs(input, extensionRegistry);",
          "57859:     public static com.google.protobuf.Parser<LogInputs> parser() {",
          "57864:     public com.google.protobuf.Parser<LogInputs> getParserForType() {",
          "57869:     public org.mlflow.api.proto.Service.LogInputs getDefaultInstanceForType() {",
          "",
          "---------------",
          "--- Hunk 739 ---",
          "[Context before]",
          "52525:   private static final",
          "52526:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "52527:       internal_static_mlflow_RunData_fieldAccessorTable;",
          "52528:   private static final com.google.protobuf.Descriptors.Descriptor",
          "52529:     internal_static_mlflow_RunTag_descriptor;",
          "52530:   private static final",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59241:   private static final com.google.protobuf.Descriptors.Descriptor",
          "59242:     internal_static_mlflow_RunInputs_descriptor;",
          "59243:   private static final",
          "59244:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "59245:       internal_static_mlflow_RunInputs_fieldAccessorTable;",
          "",
          "---------------",
          "--- Hunk 740 ---",
          "[Context before]",
          "52545:   private static final",
          "52546:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "52547:       internal_static_mlflow_Experiment_fieldAccessorTable;",
          "52548:   private static final com.google.protobuf.Descriptors.Descriptor",
          "52549:     internal_static_mlflow_CreateExperiment_descriptor;",
          "52550:   private static final",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59266:   private static final com.google.protobuf.Descriptors.Descriptor",
          "59267:     internal_static_mlflow_DatasetInput_descriptor;",
          "59268:   private static final",
          "59269:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "59270:       internal_static_mlflow_DatasetInput_fieldAccessorTable;",
          "59271:   private static final com.google.protobuf.Descriptors.Descriptor",
          "59272:     internal_static_mlflow_InputTag_descriptor;",
          "59273:   private static final",
          "59274:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "59275:       internal_static_mlflow_InputTag_fieldAccessorTable;",
          "59276:   private static final com.google.protobuf.Descriptors.Descriptor",
          "59277:     internal_static_mlflow_Dataset_descriptor;",
          "59278:   private static final",
          "59279:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "59280:       internal_static_mlflow_Dataset_fieldAccessorTable;",
          "",
          "---------------",
          "--- Hunk 741 ---",
          "[Context before]",
          "52760:   private static final",
          "52761:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "52762:       internal_static_mlflow_LogModel_Response_fieldAccessorTable;",
          "52763:   private static final com.google.protobuf.Descriptors.Descriptor",
          "52764:     internal_static_mlflow_GetExperimentByName_descriptor;",
          "52765:   private static final",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59496:   private static final com.google.protobuf.Descriptors.Descriptor",
          "59497:     internal_static_mlflow_LogInputs_descriptor;",
          "59498:   private static final",
          "59499:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "59500:       internal_static_mlflow_LogInputs_fieldAccessorTable;",
          "59501:   private static final com.google.protobuf.Descriptors.Descriptor",
          "59502:     internal_static_mlflow_LogInputs_Response_descriptor;",
          "59503:   private static final",
          "59504:     com.google.protobuf.GeneratedMessageV3.FieldAccessorTable",
          "59505:       internal_static_mlflow_LogInputs_Response_fieldAccessorTable;",
          "",
          "---------------",
          "--- Hunk 742 ---",
          "[Context before]",
          "52783:       \".proto\\032\\020databricks.proto\\\"H\\n\\006Metric\\022\\013\\n\\003ke\" +",
          "52784:       \"y\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\\002 \\001(\\001\\022\\021\\n\\ttimestamp\\030\\003 \\001(\" +",
          "52785:       \"\\003\\022\\017\\n\\004step\\030\\004 \\001(\\003:\\0010\\\"#\\n\\005Param\\022\\013\\n\\003key\\030\\001 \\001(\\t\" +",
          "52787:       \"lflow.RunInfo\\022\\035\\n\\004data\\030\\002 \\001(\\0132\\017.mlflow.Run\" +",
          "52819:       \"\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.databricks.rpc.R\" +",
          "52934:       \"Run.Response\\\"5\\362\\206\\0311\\n!\\n\\004POST\\022\\023/mlflow/runs\" +",
          "52974:     };",
          "52975:     descriptor = com.google.protobuf.Descriptors.FileDescriptor",
          "52976:       .internalBuildGeneratedFileFrom(descriptorData,",
          "",
          "[Removed Lines]",
          "52786:       \"\\022\\r\\n\\005value\\030\\002 \\001(\\t\\\"C\\n\\003Run\\022\\035\\n\\004info\\030\\001 \\001(\\0132\\017.m\" +",
          "52788:       \"Data\\\"g\\n\\007RunData\\022\\037\\n\\007metrics\\030\\001 \\003(\\0132\\016.mlflo\" +",
          "52789:       \"w.Metric\\022\\035\\n\\006params\\030\\002 \\003(\\0132\\r.mlflow.Param\\022\" +",
          "52790:       \"\\034\\n\\004tags\\030\\003 \\003(\\0132\\016.mlflow.RunTag\\\"$\\n\\006RunTag\\022\" +",
          "52791:       \"\\013\\n\\003key\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\\002 \\001(\\t\\\"+\\n\\rExperimen\" +",
          "52792:       \"tTag\\022\\013\\n\\003key\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\\002 \\001(\\t\\\"\\335\\001\\n\\007Run\" +",
          "52793:       \"Info\\022\\016\\n\\006run_id\\030\\017 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\022\\020\" +",
          "52794:       \"\\n\\010run_name\\030\\003 \\001(\\t\\022\\025\\n\\rexperiment_id\\030\\002 \\001(\\t\\022\" +",
          "52795:       \"\\017\\n\\007user_id\\030\\006 \\001(\\t\\022!\\n\\006status\\030\\007 \\001(\\0162\\021.mlflo\" +",
          "52796:       \"w.RunStatus\\022\\022\\n\\nstart_time\\030\\010 \\001(\\003\\022\\020\\n\\010end_t\" +",
          "52797:       \"ime\\030\\t \\001(\\003\\022\\024\\n\\014artifact_uri\\030\\r \\001(\\t\\022\\027\\n\\017lifec\" +",
          "52798:       \"ycle_stage\\030\\016 \\001(\\t\\\"\\273\\001\\n\\nExperiment\\022\\025\\n\\rexper\" +",
          "52799:       \"iment_id\\030\\001 \\001(\\t\\022\\014\\n\\004name\\030\\002 \\001(\\t\\022\\031\\n\\021artifact\" +",
          "52800:       \"_location\\030\\003 \\001(\\t\\022\\027\\n\\017lifecycle_stage\\030\\004 \\001(\\t\" +",
          "52801:       \"\\022\\030\\n\\020last_update_time\\030\\005 \\001(\\003\\022\\025\\n\\rcreation_t\" +",
          "52802:       \"ime\\030\\006 \\001(\\003\\022#\\n\\004tags\\030\\007 \\003(\\0132\\025.mlflow.Experim\" +",
          "52803:       \"entTag\\\"\\266\\001\\n\\020CreateExperiment\\022\\022\\n\\004name\\030\\001 \\001(\" +",
          "52804:       \"\\tB\\004\\370\\206\\031\\001\\022\\031\\n\\021artifact_location\\030\\002 \\001(\\t\\022#\\n\\004ta\" +",
          "52805:       \"gs\\030\\003 \\003(\\0132\\025.mlflow.ExperimentTag\\032!\\n\\010Respo\" +",
          "52806:       \"nse\\022\\025\\n\\rexperiment_id\\030\\001 \\001(\\t:+\\342?(\\n&com.dat\" +",
          "52807:       \"abricks.rpc.RPC[$this.Response]\\\"\\376\\001\\n\\021Sear\" +",
          "52808:       \"chExperiments\\022\\023\\n\\013max_results\\030\\001 \\001(\\003\\022\\022\\n\\npa\" +",
          "52809:       \"ge_token\\030\\002 \\001(\\t\\022\\016\\n\\006filter\\030\\003 \\001(\\t\\022\\020\\n\\010order_\" +",
          "52810:       \"by\\030\\004 \\003(\\t\\022#\\n\\tview_type\\030\\005 \\001(\\0162\\020.mlflow.Vie\" +",
          "52811:       \"wType\\032L\\n\\010Response\\022\\'\\n\\013experiments\\030\\001 \\003(\\0132\\022\" +",
          "52812:       \".mlflow.Experiment\\022\\027\\n\\017next_page_token\\030\\002 \" +",
          "52813:       \"\\001(\\t:+\\342?(\\n&com.databricks.rpc.RPC[$this.R\" +",
          "52814:       \"esponse]\\\"\\215\\001\\n\\rGetExperiment\\022\\033\\n\\rexperiment\" +",
          "52815:       \"_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\0322\\n\\010Response\\022&\\n\\nexperimen\" +",
          "52816:       \"t\\030\\001 \\001(\\0132\\022.mlflow.Experiment:+\\342?(\\n&com.da\" +",
          "52817:       \"tabricks.rpc.RPC[$this.Response]\\\"h\\n\\020Dele\" +",
          "52818:       \"teExperiment\\022\\033\\n\\rexperiment_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\" +",
          "52820:       \"PC[$this.Response]\\\"i\\n\\021RestoreExperiment\\022\" +",
          "52821:       \"\\033\\n\\rexperiment_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Response\" +",
          "52822:       \":+\\342?(\\n&com.databricks.rpc.RPC[$this.Resp\" +",
          "52823:       \"onse]\\\"z\\n\\020UpdateExperiment\\022\\033\\n\\rexperiment_\" +",
          "52824:       \"id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\020\\n\\010new_name\\030\\002 \\001(\\t\\032\\n\\n\\010Resp\" +",
          "52825:       \"onse:+\\342?(\\n&com.databricks.rpc.RPC[$this.\" +",
          "52826:       \"Response]\\\"\\312\\001\\n\\tCreateRun\\022\\025\\n\\rexperiment_id\" +",
          "52827:       \"\\030\\001 \\001(\\t\\022\\017\\n\\007user_id\\030\\002 \\001(\\t\\022\\020\\n\\010run_name\\030\\003 \\001(\" +",
          "52828:       \"\\t\\022\\022\\n\\nstart_time\\030\\007 \\001(\\003\\022\\034\\n\\004tags\\030\\t \\003(\\0132\\016.ml\" +",
          "52829:       \"flow.RunTag\\032$\\n\\010Response\\022\\030\\n\\003run\\030\\001 \\001(\\0132\\013.m\" +",
          "52830:       \"lflow.Run:+\\342?(\\n&com.databricks.rpc.RPC[$\" +",
          "52831:       \"this.Response]\\\"\\320\\001\\n\\tUpdateRun\\022\\016\\n\\006run_id\\030\\004\" +",
          "52832:       \" \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\022!\\n\\006status\\030\\002 \\001(\\0162\\021\" +",
          "52833:       \".mlflow.RunStatus\\022\\020\\n\\010end_time\\030\\003 \\001(\\003\\022\\020\\n\\010r\" +",
          "52834:       \"un_name\\030\\005 \\001(\\t\\032-\\n\\010Response\\022!\\n\\010run_info\\030\\001 \" +",
          "52835:       \"\\001(\\0132\\017.mlflow.RunInfo:+\\342?(\\n&com.databrick\" +",
          "52836:       \"s.rpc.RPC[$this.Response]\\\"Z\\n\\tDeleteRun\\022\\024\" +",
          "52837:       \"\\n\\006run_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&c\" +",
          "52838:       \"om.databricks.rpc.RPC[$this.Response]\\\"[\\n\" +",
          "52839:       \"\\nRestoreRun\\022\\024\\n\\006run_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Res\" +",
          "52840:       \"ponse:+\\342?(\\n&com.databricks.rpc.RPC[$this\" +",
          "52841:       \".Response]\\\"\\270\\001\\n\\tLogMetric\\022\\016\\n\\006run_id\\030\\006 \\001(\\t\" +",
          "52842:       \"\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\022\\021\\n\\003key\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\022\\023\\n\" +",
          "52843:       \"\\005value\\030\\003 \\001(\\001B\\004\\370\\206\\031\\001\\022\\027\\n\\ttimestamp\\030\\004 \\001(\\003B\\004\\370\" +",
          "52844:       \"\\206\\031\\001\\022\\017\\n\\004step\\030\\005 \\001(\\003:\\0010\\032\\n\\n\\010Response:+\\342?(\\n&c\" +",
          "52845:       \"om.databricks.rpc.RPC[$this.Response]\\\"\\215\\001\" +",
          "52846:       \"\\n\\010LogParam\\022\\016\\n\\006run_id\\030\\004 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001\" +",
          "52847:       \" \\001(\\t\\022\\021\\n\\003key\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\022\\023\\n\\005value\\030\\003 \\001(\\tB\\004\" +",
          "52848:       \"\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.databricks.rp\" +",
          "52849:       \"c.RPC[$this.Response]\\\"\\220\\001\\n\\020SetExperimentT\" +",
          "52850:       \"ag\\022\\033\\n\\rexperiment_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\021\\n\\003key\\030\\002\" +",
          "52851:       \" \\001(\\tB\\004\\370\\206\\031\\001\\022\\023\\n\\005value\\030\\003 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Respo\" +",
          "52852:       \"nse:+\\342?(\\n&com.databricks.rpc.RPC[$this.R\" +",
          "52853:       \"esponse]\\\"\\213\\001\\n\\006SetTag\\022\\016\\n\\006run_id\\030\\004 \\001(\\t\\022\\020\\n\\010r\" +",
          "52854:       \"un_uuid\\030\\001 \\001(\\t\\022\\021\\n\\003key\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\022\\023\\n\\005valu\" +",
          "52855:       \"e\\030\\003 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.data\" +",
          "52856:       \"bricks.rpc.RPC[$this.Response]\\\"m\\n\\tDelete\" +",
          "52857:       \"Tag\\022\\024\\n\\006run_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\021\\n\\003key\\030\\002 \\001(\\tB\\004\" +",
          "52858:       \"\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.databricks.rp\" +",
          "52859:       \"c.RPC[$this.Response]\\\"}\\n\\006GetRun\\022\\016\\n\\006run_i\" +",
          "52860:       \"d\\030\\002 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\032$\\n\\010Response\\022\\030\\n\" +",
          "52861:       \"\\003run\\030\\001 \\001(\\0132\\013.mlflow.Run:+\\342?(\\n&com.databr\" +",
          "52862:       \"icks.rpc.RPC[$this.Response]\\\"\\230\\002\\n\\nSearchR\" +",
          "52863:       \"uns\\022\\026\\n\\016experiment_ids\\030\\001 \\003(\\t\\022\\016\\n\\006filter\\030\\004 \" +",
          "52864:       \"\\001(\\t\\0224\\n\\rrun_view_type\\030\\003 \\001(\\0162\\020.mlflow.View\" +",
          "52865:       \"Type:\\013ACTIVE_ONLY\\022\\031\\n\\013max_results\\030\\005 \\001(\\005:\\004\" +",
          "52866:       \"1000\\022\\020\\n\\010order_by\\030\\006 \\003(\\t\\022\\022\\n\\npage_token\\030\\007 \\001\" +",
          "52867:       \"(\\t\\032>\\n\\010Response\\022\\031\\n\\004runs\\030\\001 \\003(\\0132\\013.mlflow.Ru\" +",
          "52868:       \"n\\022\\027\\n\\017next_page_token\\030\\002 \\001(\\t:+\\342?(\\n&com.dat\" +",
          "52869:       \"abricks.rpc.RPC[$this.Response]\\\"\\330\\001\\n\\rList\" +",
          "52870:       \"Artifacts\\022\\016\\n\\006run_id\\030\\003 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \" +",
          "52871:       \"\\001(\\t\\022\\014\\n\\004path\\030\\002 \\001(\\t\\022\\022\\n\\npage_token\\030\\004 \\001(\\t\\032V\\n\" +",
          "52872:       \"\\010Response\\022\\020\\n\\010root_uri\\030\\001 \\001(\\t\\022\\037\\n\\005files\\030\\002 \\003\" +",
          "52873:       \"(\\0132\\020.mlflow.FileInfo\\022\\027\\n\\017next_page_token\\030\" +",
          "52874:       \"\\003 \\001(\\t:+\\342?(\\n&com.databricks.rpc.RPC[$this\" +",
          "52875:       \".Response]\\\";\\n\\010FileInfo\\022\\014\\n\\004path\\030\\001 \\001(\\t\\022\\016\\n\\006\" +",
          "52876:       \"is_dir\\030\\002 \\001(\\010\\022\\021\\n\\tfile_size\\030\\003 \\001(\\003\\\"\\352\\001\\n\\020GetM\" +",
          "52877:       \"etricHistory\\022\\016\\n\\006run_id\\030\\003 \\001(\\t\\022\\020\\n\\010run_uuid\" +",
          "52878:       \"\\030\\001 \\001(\\t\\022\\030\\n\\nmetric_key\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\022\\022\\n\\npage\" +",
          "52879:       \"_token\\030\\004 \\001(\\t\\022\\023\\n\\013max_results\\030\\005 \\001(\\005\\032D\\n\\010Res\" +",
          "52880:       \"ponse\\022\\037\\n\\007metrics\\030\\001 \\003(\\0132\\016.mlflow.Metric\\022\\027\" +",
          "52881:       \"\\n\\017next_page_token\\030\\002 \\001(\\t:+\\342?(\\n&com.databr\" +",
          "52882:       \"icks.rpc.RPC[$this.Response]\\\"\\261\\001\\n\\010LogBatc\" +",
          "52883:       \"h\\022\\016\\n\\006run_id\\030\\001 \\001(\\t\\022\\037\\n\\007metrics\\030\\002 \\003(\\0132\\016.mlf\" +",
          "52884:       \"low.Metric\\022\\035\\n\\006params\\030\\003 \\003(\\0132\\r.mlflow.Para\" +",
          "52885:       \"m\\022\\034\\n\\004tags\\030\\004 \\003(\\0132\\016.mlflow.RunTag\\032\\n\\n\\010Respo\" +",
          "52886:       \"nse:+\\342?(\\n&com.databricks.rpc.RPC[$this.R\" +",
          "52887:       \"esponse]\\\"g\\n\\010LogModel\\022\\016\\n\\006run_id\\030\\001 \\001(\\t\\022\\022\\n\\n\" +",
          "52888:       \"model_json\\030\\002 \\001(\\t\\032\\n\\n\\010Response:+\\342?(\\n&com.d\" +",
          "52889:       \"atabricks.rpc.RPC[$this.Response]\\\"\\225\\001\\n\\023Ge\" +",
          "52890:       \"tExperimentByName\\022\\035\\n\\017experiment_name\\030\\001 \\001\" +",
          "52891:       \"(\\tB\\004\\370\\206\\031\\001\\0322\\n\\010Response\\022&\\n\\nexperiment\\030\\001 \\001(\\013\" +",
          "52892:       \"2\\022.mlflow.Experiment:+\\342?(\\n&com.databrick\" +",
          "52893:       \"s.rpc.RPC[$this.Response]*6\\n\\010ViewType\\022\\017\\n\" +",
          "52894:       \"\\013ACTIVE_ONLY\\020\\001\\022\\020\\n\\014DELETED_ONLY\\020\\002\\022\\007\\n\\003ALL\\020\" +",
          "52895:       \"\\003*I\\n\\nSourceType\\022\\014\\n\\010NOTEBOOK\\020\\001\\022\\007\\n\\003JOB\\020\\002\\022\\013\" +",
          "52896:       \"\\n\\007PROJECT\\020\\003\\022\\t\\n\\005LOCAL\\020\\004\\022\\014\\n\\007UNKNOWN\\020\\350\\007*M\\n\\t\" +",
          "52897:       \"RunStatus\\022\\013\\n\\007RUNNING\\020\\001\\022\\r\\n\\tSCHEDULED\\020\\002\\022\\014\\n\" +",
          "52898:       \"\\010FINISHED\\020\\003\\022\\n\\n\\006FAILED\\020\\004\\022\\n\\n\\006KILLED\\020\\0052\\201\\027\\n\\r\" +",
          "52899:       \"MlflowService\\022\\246\\001\\n\\023getExperimentByName\\022\\033.\" +",
          "52900:       \"mlflow.GetExperimentByName\\032$.mlflow.GetE\" +",
          "52901:       \"xperimentByName.Response\\\"L\\362\\206\\031H\\n,\\n\\003GET\\022\\037/\" +",
          "52902:       \"mlflow/experiments/get-by-name\\032\\004\\010\\002\\020\\000\\020\\001*\\026\" +",
          "52903:       \"Get Experiment By Name\\022\\224\\001\\n\\020createExperim\" +",
          "52904:       \"ent\\022\\030.mlflow.CreateExperiment\\032!.mlflow.C\" +",
          "52905:       \"reateExperiment.Response\\\"C\\362\\206\\031?\\n(\\n\\004POST\\022\\032\" +",
          "52906:       \"/mlflow/experiments/create\\032\\004\\010\\002\\020\\000\\020\\001*\\021Crea\" +",
          "52907:       \"te Experiment\\022\\301\\001\\n\\021searchExperiments\\022\\031.ml\" +",
          "52908:       \"flow.SearchExperiments\\032\\\".mlflow.SearchEx\" +",
          "52909:       \"periments.Response\\\"m\\362\\206\\031i\\n(\\n\\004POST\\022\\032/mlflo\" +",
          "52910:       \"w/experiments/search\\032\\004\\010\\002\\020\\000\\n\\'\\n\\003GET\\022\\032/mlfl\" +",
          "52911:       \"ow/experiments/search\\032\\004\\010\\002\\020\\000\\020\\001*\\022Search Ex\" +",
          "52912:       \"periments\\022\\204\\001\\n\\rgetExperiment\\022\\025.mlflow.Get\" +",
          "52913:       \"Experiment\\032\\036.mlflow.GetExperiment.Respon\" +",
          "52914:       \"se\\\"<\\362\\206\\0318\\n$\\n\\003GET\\022\\027/mlflow/experiments/get\" +",
          "52915:       \"\\032\\004\\010\\002\\020\\000\\020\\001*\\016Get Experiment\\022\\224\\001\\n\\020deleteExper\" +",
          "52916:       \"iment\\022\\030.mlflow.DeleteExperiment\\032!.mlflow\" +",
          "52917:       \".DeleteExperiment.Response\\\"C\\362\\206\\031?\\n(\\n\\004POST\" +",
          "52918:       \"\\022\\032/mlflow/experiments/delete\\032\\004\\010\\002\\020\\000\\020\\001*\\021De\" +",
          "52919:       \"lete Experiment\\022\\231\\001\\n\\021restoreExperiment\\022\\031.\" +",
          "52920:       \"mlflow.RestoreExperiment\\032\\\".mlflow.Restor\" +",
          "52921:       \"eExperiment.Response\\\"E\\362\\206\\031A\\n)\\n\\004POST\\022\\033/mlf\" +",
          "52922:       \"low/experiments/restore\\032\\004\\010\\002\\020\\000\\020\\001*\\022Restore\" +",
          "52923:       \" Experiment\\022\\224\\001\\n\\020updateExperiment\\022\\030.mlflo\" +",
          "52924:       \"w.UpdateExperiment\\032!.mlflow.UpdateExperi\" +",
          "52925:       \"ment.Response\\\"C\\362\\206\\031?\\n(\\n\\004POST\\022\\032/mlflow/exp\" +",
          "52926:       \"eriments/update\\032\\004\\010\\002\\020\\000\\020\\001*\\021Update Experime\" +",
          "52927:       \"nt\\022q\\n\\tcreateRun\\022\\021.mlflow.CreateRun\\032\\032.mlf\" +",
          "52928:       \"low.CreateRun.Response\\\"5\\362\\206\\0311\\n!\\n\\004POST\\022\\023/m\" +",
          "52929:       \"lflow/runs/create\\032\\004\\010\\002\\020\\000\\020\\001*\\nCreate Run\\022q\\n\" +",
          "52930:       \"\\tupdateRun\\022\\021.mlflow.UpdateRun\\032\\032.mlflow.U\" +",
          "52931:       \"pdateRun.Response\\\"5\\362\\206\\0311\\n!\\n\\004POST\\022\\023/mlflow\" +",
          "52932:       \"/runs/update\\032\\004\\010\\002\\020\\000\\020\\001*\\nUpdate Run\\022q\\n\\tdele\" +",
          "52933:       \"teRun\\022\\021.mlflow.DeleteRun\\032\\032.mlflow.Delete\" +",
          "52935:       \"/delete\\032\\004\\010\\002\\020\\000\\020\\001*\\nDelete Run\\022v\\n\\nrestoreRu\" +",
          "52936:       \"n\\022\\022.mlflow.RestoreRun\\032\\033.mlflow.RestoreRu\" +",
          "52937:       \"n.Response\\\"7\\362\\206\\0313\\n\\\"\\n\\004POST\\022\\024/mlflow/runs/r\" +",
          "52938:       \"estore\\032\\004\\010\\002\\020\\000\\020\\001*\\013Restore Run\\022u\\n\\tlogMetric\" +",
          "52939:       \"\\022\\021.mlflow.LogMetric\\032\\032.mlflow.LogMetric.R\" +",
          "52940:       \"esponse\\\"9\\362\\206\\0315\\n%\\n\\004POST\\022\\027/mlflow/runs/log-\" +",
          "52941:       \"metric\\032\\004\\010\\002\\020\\000\\020\\001*\\nLog Metric\\022t\\n\\010logParam\\022\\020\" +",
          "52942:       \".mlflow.LogParam\\032\\031.mlflow.LogParam.Respo\" +",
          "52943:       \"nse\\\";\\362\\206\\0317\\n(\\n\\004POST\\022\\032/mlflow/runs/log-para\" +",
          "52944:       \"meter\\032\\004\\010\\002\\020\\000\\020\\001*\\tLog Param\\022\\241\\001\\n\\020setExperime\" +",
          "52945:       \"ntTag\\022\\030.mlflow.SetExperimentTag\\032!.mlflow\" +",
          "52946:       \".SetExperimentTag.Response\\\"P\\362\\206\\031L\\n4\\n\\004POST\" +",
          "52947:       \"\\022&/mlflow/experiments/set-experiment-tag\" +",
          "52948:       \"\\032\\004\\010\\002\\020\\000\\020\\001*\\022Set Experiment Tag\\022f\\n\\006setTag\\022\\016\" +",
          "52949:       \".mlflow.SetTag\\032\\027.mlflow.SetTag.Response\\\"\" +",
          "52950:       \"3\\362\\206\\031/\\n\\\"\\n\\004POST\\022\\024/mlflow/runs/set-tag\\032\\004\\010\\002\\020\" +",
          "52951:       \"\\000\\020\\001*\\007Set Tag\\022u\\n\\tdeleteTag\\022\\021.mlflow.Delet\" +",
          "52952:       \"eTag\\032\\032.mlflow.DeleteTag.Response\\\"9\\362\\206\\0315\\n%\" +",
          "52953:       \"\\n\\004POST\\022\\027/mlflow/runs/delete-tag\\032\\004\\010\\002\\020\\000\\020\\001*\" +",
          "52954:       \"\\nDelete Tag\\022a\\n\\006getRun\\022\\016.mlflow.GetRun\\032\\027.\" +",
          "52955:       \"mlflow.GetRun.Response\\\".\\362\\206\\031*\\n\\035\\n\\003GET\\022\\020/ml\" +",
          "52956:       \"flow/runs/get\\032\\004\\010\\002\\020\\000\\020\\001*\\007Get Run\\022u\\n\\nsearch\" +",
          "52957:       \"Runs\\022\\022.mlflow.SearchRuns\\032\\033.mlflow.Search\" +",
          "52958:       \"Runs.Response\\\"6\\362\\206\\0312\\n!\\n\\004POST\\022\\023/mlflow/run\" +",
          "52959:       \"s/search\\032\\004\\010\\002\\020\\000\\020\\001*\\013Search Runs\\022\\203\\001\\n\\rlistAr\" +",
          "52960:       \"tifacts\\022\\025.mlflow.ListArtifacts\\032\\036.mlflow.\" +",
          "52961:       \"ListArtifacts.Response\\\";\\362\\206\\0317\\n#\\n\\003GET\\022\\026/ml\" +",
          "52962:       \"flow/artifacts/list\\032\\004\\010\\002\\020\\000\\020\\001*\\016List Artifa\" +",
          "52963:       \"cts\\022\\225\\001\\n\\020getMetricHistory\\022\\030.mlflow.GetMet\" +",
          "52964:       \"ricHistory\\032!.mlflow.GetMetricHistory.Res\" +",
          "52965:       \"ponse\\\"D\\362\\206\\031@\\n(\\n\\003GET\\022\\033/mlflow/metrics/get-\" +",
          "52966:       \"history\\032\\004\\010\\002\\020\\000\\020\\001*\\022Get Metric History\\022p\\n\\010l\" +",
          "52967:       \"ogBatch\\022\\020.mlflow.LogBatch\\032\\031.mlflow.LogBa\" +",
          "52968:       \"tch.Response\\\"7\\362\\206\\0313\\n$\\n\\004POST\\022\\026/mlflow/runs\" +",
          "52969:       \"/log-batch\\032\\004\\010\\002\\020\\000\\020\\001*\\tLog Batch\\022p\\n\\010logMode\" +",
          "52970:       \"l\\022\\020.mlflow.LogModel\\032\\031.mlflow.LogModel.Re\" +",
          "52971:       \"sponse\\\"7\\362\\206\\0313\\n$\\n\\004POST\\022\\026/mlflow/runs/log-m\" +",
          "52972:       \"odel\\032\\004\\010\\002\\020\\000\\020\\001*\\tLog ModelB\\036\\n\\024org.mlflow.ap\" +",
          "52973:       \"i.proto\\220\\001\\001\\342?\\002\\020\\001\"",
          "",
          "[Added Lines]",
          "59529:       \"\\022\\r\\n\\005value\\030\\002 \\001(\\t\\\"f\\n\\003Run\\022\\035\\n\\004info\\030\\001 \\001(\\0132\\017.m\" +",
          "59531:       \"Data\\022!\\n\\006inputs\\030\\003 \\001(\\0132\\021.mlflow.RunInputs\\\"\" +",
          "59532:       \"g\\n\\007RunData\\022\\037\\n\\007metrics\\030\\001 \\003(\\0132\\016.mlflow.Met\" +",
          "59533:       \"ric\\022\\035\\n\\006params\\030\\002 \\003(\\0132\\r.mlflow.Param\\022\\034\\n\\004ta\" +",
          "59534:       \"gs\\030\\003 \\003(\\0132\\016.mlflow.RunTag\\\"9\\n\\tRunInputs\\022,\\n\" +",
          "59535:       \"\\016dataset_inputs\\030\\001 \\003(\\0132\\024.mlflow.DatasetIn\" +",
          "59536:       \"put\\\"$\\n\\006RunTag\\022\\013\\n\\003key\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\\002 \\001(\" +",
          "59537:       \"\\t\\\"+\\n\\rExperimentTag\\022\\013\\n\\003key\\030\\001 \\001(\\t\\022\\r\\n\\005value\" +",
          "59538:       \"\\030\\002 \\001(\\t\\\"\\335\\001\\n\\007RunInfo\\022\\016\\n\\006run_id\\030\\017 \\001(\\t\\022\\020\\n\\010ru\" +",
          "59539:       \"n_uuid\\030\\001 \\001(\\t\\022\\020\\n\\010run_name\\030\\003 \\001(\\t\\022\\025\\n\\rexperi\" +",
          "59540:       \"ment_id\\030\\002 \\001(\\t\\022\\017\\n\\007user_id\\030\\006 \\001(\\t\\022!\\n\\006status\" +",
          "59541:       \"\\030\\007 \\001(\\0162\\021.mlflow.RunStatus\\022\\022\\n\\nstart_time\\030\" +",
          "59542:       \"\\010 \\001(\\003\\022\\020\\n\\010end_time\\030\\t \\001(\\003\\022\\024\\n\\014artifact_uri\\030\" +",
          "59543:       \"\\r \\001(\\t\\022\\027\\n\\017lifecycle_stage\\030\\016 \\001(\\t\\\"\\273\\001\\n\\nExper\" +",
          "59544:       \"iment\\022\\025\\n\\rexperiment_id\\030\\001 \\001(\\t\\022\\014\\n\\004name\\030\\002 \\001\" +",
          "59545:       \"(\\t\\022\\031\\n\\021artifact_location\\030\\003 \\001(\\t\\022\\027\\n\\017lifecyc\" +",
          "59546:       \"le_stage\\030\\004 \\001(\\t\\022\\030\\n\\020last_update_time\\030\\005 \\001(\\003\" +",
          "59547:       \"\\022\\025\\n\\rcreation_time\\030\\006 \\001(\\003\\022#\\n\\004tags\\030\\007 \\003(\\0132\\025.\" +",
          "59548:       \"mlflow.ExperimentTag\\\"V\\n\\014DatasetInput\\022\\036\\n\\004\" +",
          "59549:       \"tags\\030\\001 \\003(\\0132\\020.mlflow.InputTag\\022&\\n\\007dataset\\030\" +",
          "59550:       \"\\002 \\001(\\0132\\017.mlflow.DatasetB\\004\\370\\206\\031\\001\\\"2\\n\\010InputTag\" +",
          "59551:       \"\\022\\021\\n\\003key\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\023\\n\\005value\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\" +",
          "59552:       \"\\\"\\205\\001\\n\\007Dataset\\022\\022\\n\\004name\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\024\\n\\006dige\" +",
          "59553:       \"st\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\022\\031\\n\\013source_type\\030\\003 \\001(\\tB\\004\\370\\206\\031\" +",
          "59554:       \"\\001\\022\\024\\n\\006source\\030\\004 \\001(\\tB\\004\\370\\206\\031\\001\\022\\016\\n\\006schema\\030\\005 \\001(\\t\\022\" +",
          "59555:       \"\\017\\n\\007profile\\030\\006 \\001(\\t\\\"\\266\\001\\n\\020CreateExperiment\\022\\022\\n\" +",
          "59556:       \"\\004name\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\031\\n\\021artifact_location\\030\\002\" +",
          "59557:       \" \\001(\\t\\022#\\n\\004tags\\030\\003 \\003(\\0132\\025.mlflow.ExperimentTa\" +",
          "59558:       \"g\\032!\\n\\010Response\\022\\025\\n\\rexperiment_id\\030\\001 \\001(\\t:+\\342?\" +",
          "59559:       \"(\\n&com.databricks.rpc.RPC[$this.Response\" +",
          "59560:       \"]\\\"\\376\\001\\n\\021SearchExperiments\\022\\023\\n\\013max_results\\030\\001\" +",
          "59561:       \" \\001(\\003\\022\\022\\n\\npage_token\\030\\002 \\001(\\t\\022\\016\\n\\006filter\\030\\003 \\001(\\t\" +",
          "59562:       \"\\022\\020\\n\\010order_by\\030\\004 \\003(\\t\\022#\\n\\tview_type\\030\\005 \\001(\\0162\\020.\" +",
          "59563:       \"mlflow.ViewType\\032L\\n\\010Response\\022\\'\\n\\013experimen\" +",
          "59564:       \"ts\\030\\001 \\003(\\0132\\022.mlflow.Experiment\\022\\027\\n\\017next_pag\" +",
          "59565:       \"e_token\\030\\002 \\001(\\t:+\\342?(\\n&com.databricks.rpc.R\" +",
          "59566:       \"PC[$this.Response]\\\"\\215\\001\\n\\rGetExperiment\\022\\033\\n\\r\" +",
          "59567:       \"experiment_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\0322\\n\\010Response\\022&\\n\" +",
          "59568:       \"\\nexperiment\\030\\001 \\001(\\0132\\022.mlflow.Experiment:+\\342\" +",
          "59569:       \"?(\\n&com.databricks.rpc.RPC[$this.Respons\" +",
          "59570:       \"e]\\\"h\\n\\020DeleteExperiment\\022\\033\\n\\rexperiment_id\\030\" +",
          "59571:       \"\\001 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.databr\" +",
          "59572:       \"icks.rpc.RPC[$this.Response]\\\"i\\n\\021RestoreE\" +",
          "59573:       \"xperiment\\022\\033\\n\\rexperiment_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\" +",
          "59574:       \"\\n\\010Response:+\\342?(\\n&com.databricks.rpc.RPC[\" +",
          "59575:       \"$this.Response]\\\"z\\n\\020UpdateExperiment\\022\\033\\n\\re\" +",
          "59576:       \"xperiment_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\020\\n\\010new_name\\030\\002 \\001\" +",
          "59577:       \"(\\t\\032\\n\\n\\010Response:+\\342?(\\n&com.databricks.rpc.\" +",
          "59578:       \"RPC[$this.Response]\\\"\\312\\001\\n\\tCreateRun\\022\\025\\n\\rexp\" +",
          "59579:       \"eriment_id\\030\\001 \\001(\\t\\022\\017\\n\\007user_id\\030\\002 \\001(\\t\\022\\020\\n\\010run\" +",
          "59580:       \"_name\\030\\003 \\001(\\t\\022\\022\\n\\nstart_time\\030\\007 \\001(\\003\\022\\034\\n\\004tags\\030\" +",
          "59581:       \"\\t \\003(\\0132\\016.mlflow.RunTag\\032$\\n\\010Response\\022\\030\\n\\003run\" +",
          "59582:       \"\\030\\001 \\001(\\0132\\013.mlflow.Run:+\\342?(\\n&com.databricks\" +",
          "59583:       \".rpc.RPC[$this.Response]\\\"\\320\\001\\n\\tUpdateRun\\022\\016\" +",
          "59584:       \"\\n\\006run_id\\030\\004 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\022!\\n\\006stat\" +",
          "59585:       \"us\\030\\002 \\001(\\0162\\021.mlflow.RunStatus\\022\\020\\n\\010end_time\\030\" +",
          "59586:       \"\\003 \\001(\\003\\022\\020\\n\\010run_name\\030\\005 \\001(\\t\\032-\\n\\010Response\\022!\\n\\010r\" +",
          "59587:       \"un_info\\030\\001 \\001(\\0132\\017.mlflow.RunInfo:+\\342?(\\n&com\" +",
          "59588:       \".databricks.rpc.RPC[$this.Response]\\\"Z\\n\\tD\" +",
          "59589:       \"eleteRun\\022\\024\\n\\006run_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Respon\" +",
          "59590:       \"se:+\\342?(\\n&com.databricks.rpc.RPC[$this.Re\" +",
          "59591:       \"sponse]\\\"[\\n\\nRestoreRun\\022\\024\\n\\006run_id\\030\\001 \\001(\\tB\\004\\370\" +",
          "59592:       \"\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.databricks.rpc\" +",
          "59593:       \".RPC[$this.Response]\\\"\\270\\001\\n\\tLogMetric\\022\\016\\n\\006ru\" +",
          "59594:       \"n_id\\030\\006 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\022\\021\\n\\003key\\030\\002 \\001(\" +",
          "59595:       \"\\tB\\004\\370\\206\\031\\001\\022\\023\\n\\005value\\030\\003 \\001(\\001B\\004\\370\\206\\031\\001\\022\\027\\n\\ttimestam\" +",
          "59596:       \"p\\030\\004 \\001(\\003B\\004\\370\\206\\031\\001\\022\\017\\n\\004step\\030\\005 \\001(\\003:\\0010\\032\\n\\n\\010Respon\" +",
          "59597:       \"se:+\\342?(\\n&com.databricks.rpc.RPC[$this.Re\" +",
          "59598:       \"sponse]\\\"\\215\\001\\n\\010LogParam\\022\\016\\n\\006run_id\\030\\004 \\001(\\t\\022\\020\\n\\010\" +",
          "59599:       \"run_uuid\\030\\001 \\001(\\t\\022\\021\\n\\003key\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\022\\023\\n\\005val\" +",
          "59600:       \"ue\\030\\003 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.dat\" +",
          "59601:       \"abricks.rpc.RPC[$this.Response]\\\"\\220\\001\\n\\020SetE\" +",
          "59602:       \"xperimentTag\\022\\033\\n\\rexperiment_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\" +",
          "59603:       \"\\001\\022\\021\\n\\003key\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\022\\023\\n\\005value\\030\\003 \\001(\\tB\\004\\370\\206\\031\" +",
          "59605:       \"PC[$this.Response]\\\"\\213\\001\\n\\006SetTag\\022\\016\\n\\006run_id\\030\" +",
          "59606:       \"\\004 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\022\\021\\n\\003key\\030\\002 \\001(\\tB\\004\\370\\206\" +",
          "59607:       \"\\031\\001\\022\\023\\n\\005value\\030\\003 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\" +",
          "59608:       \"\\n&com.databricks.rpc.RPC[$this.Response]\" +",
          "59609:       \"\\\"m\\n\\tDeleteTag\\022\\024\\n\\006run_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\\021\\n\\003k\" +",
          "59610:       \"ey\\030\\002 \\001(\\tB\\004\\370\\206\\031\\001\\032\\n\\n\\010Response:+\\342?(\\n&com.dat\" +",
          "59611:       \"abricks.rpc.RPC[$this.Response]\\\"}\\n\\006GetRu\" +",
          "59612:       \"n\\022\\016\\n\\006run_id\\030\\002 \\001(\\t\\022\\020\\n\\010run_uuid\\030\\001 \\001(\\t\\032$\\n\\010R\" +",
          "59613:       \"esponse\\022\\030\\n\\003run\\030\\001 \\001(\\0132\\013.mlflow.Run:+\\342?(\\n&\" +",
          "59614:       \"com.databricks.rpc.RPC[$this.Response]\\\"\\230\" +",
          "59615:       \"\\002\\n\\nSearchRuns\\022\\026\\n\\016experiment_ids\\030\\001 \\003(\\t\\022\\016\\n\" +",
          "59616:       \"\\006filter\\030\\004 \\001(\\t\\0224\\n\\rrun_view_type\\030\\003 \\001(\\0162\\020.m\" +",
          "59617:       \"lflow.ViewType:\\013ACTIVE_ONLY\\022\\031\\n\\013max_resul\" +",
          "59618:       \"ts\\030\\005 \\001(\\005:\\0041000\\022\\020\\n\\010order_by\\030\\006 \\003(\\t\\022\\022\\n\\npage\" +",
          "59619:       \"_token\\030\\007 \\001(\\t\\032>\\n\\010Response\\022\\031\\n\\004runs\\030\\001 \\003(\\0132\\013\" +",
          "59620:       \".mlflow.Run\\022\\027\\n\\017next_page_token\\030\\002 \\001(\\t:+\\342?\" +",
          "59621:       \"(\\n&com.databricks.rpc.RPC[$this.Response\" +",
          "59622:       \"]\\\"\\330\\001\\n\\rListArtifacts\\022\\016\\n\\006run_id\\030\\003 \\001(\\t\\022\\020\\n\\010r\" +",
          "59623:       \"un_uuid\\030\\001 \\001(\\t\\022\\014\\n\\004path\\030\\002 \\001(\\t\\022\\022\\n\\npage_toke\" +",
          "59624:       \"n\\030\\004 \\001(\\t\\032V\\n\\010Response\\022\\020\\n\\010root_uri\\030\\001 \\001(\\t\\022\\037\\n\" +",
          "59625:       \"\\005files\\030\\002 \\003(\\0132\\020.mlflow.FileInfo\\022\\027\\n\\017next_p\" +",
          "59626:       \"age_token\\030\\003 \\001(\\t:+\\342?(\\n&com.databricks.rpc\" +",
          "59627:       \".RPC[$this.Response]\\\";\\n\\010FileInfo\\022\\014\\n\\004path\" +",
          "59628:       \"\\030\\001 \\001(\\t\\022\\016\\n\\006is_dir\\030\\002 \\001(\\010\\022\\021\\n\\tfile_size\\030\\003 \\001(\" +",
          "59629:       \"\\003\\\"\\352\\001\\n\\020GetMetricHistory\\022\\016\\n\\006run_id\\030\\003 \\001(\\t\\022\\020\" +",
          "59630:       \"\\n\\010run_uuid\\030\\001 \\001(\\t\\022\\030\\n\\nmetric_key\\030\\002 \\001(\\tB\\004\\370\\206\" +",
          "59631:       \"\\031\\001\\022\\022\\n\\npage_token\\030\\004 \\001(\\t\\022\\023\\n\\013max_results\\030\\005 \" +",
          "59632:       \"\\001(\\005\\032D\\n\\010Response\\022\\037\\n\\007metrics\\030\\001 \\003(\\0132\\016.mlflo\" +",
          "59633:       \"w.Metric\\022\\027\\n\\017next_page_token\\030\\002 \\001(\\t:+\\342?(\\n&\" +",
          "59634:       \"com.databricks.rpc.RPC[$this.Response]\\\"\\261\" +",
          "59635:       \"\\001\\n\\010LogBatch\\022\\016\\n\\006run_id\\030\\001 \\001(\\t\\022\\037\\n\\007metrics\\030\\002\" +",
          "59636:       \" \\003(\\0132\\016.mlflow.Metric\\022\\035\\n\\006params\\030\\003 \\003(\\0132\\r.m\" +",
          "59637:       \"lflow.Param\\022\\034\\n\\004tags\\030\\004 \\003(\\0132\\016.mlflow.RunTa\" +",
          "59638:       \"g\\032\\n\\n\\010Response:+\\342?(\\n&com.databricks.rpc.R\" +",
          "59639:       \"PC[$this.Response]\\\"g\\n\\010LogModel\\022\\016\\n\\006run_id\" +",
          "59640:       \"\\030\\001 \\001(\\t\\022\\022\\n\\nmodel_json\\030\\002 \\001(\\t\\032\\n\\n\\010Response:+\" +",
          "59641:       \"\\342?(\\n&com.databricks.rpc.RPC[$this.Respon\" +",
          "59642:       \"se]\\\"\\266\\001\\n\\tLogInputs\\022\\024\\n\\006run_id\\030\\001 \\001(\\tB\\004\\370\\206\\031\\001\\022\" +",
          "59643:       \"&\\n\\010datasets\\030\\002 \\003(\\0132\\024.mlflow.DatasetInput\\032\" +",
          "59644:       \"\\n\\n\\010Response:_\\342?(\\n&com.databricks.rpc.RPC\" +",
          "59645:       \"[$this.Response]\\342?1\\n/com.databricks.mlfl\" +",
          "59646:       \"ow.api.MlflowTrackingMessage\\\"\\225\\001\\n\\023GetExpe\" +",
          "59647:       \"rimentByName\\022\\035\\n\\017experiment_name\\030\\001 \\001(\\tB\\004\\370\" +",
          "59648:       \"\\206\\031\\001\\0322\\n\\010Response\\022&\\n\\nexperiment\\030\\001 \\001(\\0132\\022.ml\" +",
          "59649:       \"flow.Experiment:+\\342?(\\n&com.databricks.rpc\" +",
          "59650:       \".RPC[$this.Response]*6\\n\\010ViewType\\022\\017\\n\\013ACTI\" +",
          "59651:       \"VE_ONLY\\020\\001\\022\\020\\n\\014DELETED_ONLY\\020\\002\\022\\007\\n\\003ALL\\020\\003*I\\n\\n\" +",
          "59652:       \"SourceType\\022\\014\\n\\010NOTEBOOK\\020\\001\\022\\007\\n\\003JOB\\020\\002\\022\\013\\n\\007PRO\" +",
          "59653:       \"JECT\\020\\003\\022\\t\\n\\005LOCAL\\020\\004\\022\\014\\n\\007UNKNOWN\\020\\350\\007*M\\n\\tRunSt\" +",
          "59654:       \"atus\\022\\013\\n\\007RUNNING\\020\\001\\022\\r\\n\\tSCHEDULED\\020\\002\\022\\014\\n\\010FINI\" +",
          "59655:       \"SHED\\020\\003\\022\\n\\n\\006FAILED\\020\\004\\022\\n\\n\\006KILLED\\020\\0052\\370\\027\\n\\rMlflo\" +",
          "59656:       \"wService\\022\\246\\001\\n\\023getExperimentByName\\022\\033.mlflo\" +",
          "59657:       \"w.GetExperimentByName\\032$.mlflow.GetExperi\" +",
          "59658:       \"mentByName.Response\\\"L\\362\\206\\031H\\n,\\n\\003GET\\022\\037/mlflo\" +",
          "59659:       \"w/experiments/get-by-name\\032\\004\\010\\002\\020\\000\\020\\001*\\026Get E\" +",
          "59660:       \"xperiment By Name\\022\\224\\001\\n\\020createExperiment\\022\\030\" +",
          "59661:       \".mlflow.CreateExperiment\\032!.mlflow.Create\" +",
          "59662:       \"Experiment.Response\\\"C\\362\\206\\031?\\n(\\n\\004POST\\022\\032/mlfl\" +",
          "59663:       \"ow/experiments/create\\032\\004\\010\\002\\020\\000\\020\\001*\\021Create Ex\" +",
          "59664:       \"periment\\022\\301\\001\\n\\021searchExperiments\\022\\031.mlflow.\" +",
          "59665:       \"SearchExperiments\\032\\\".mlflow.SearchExperim\" +",
          "59666:       \"ents.Response\\\"m\\362\\206\\031i\\n(\\n\\004POST\\022\\032/mlflow/exp\" +",
          "59667:       \"eriments/search\\032\\004\\010\\002\\020\\000\\n\\'\\n\\003GET\\022\\032/mlflow/ex\" +",
          "59668:       \"periments/search\\032\\004\\010\\002\\020\\000\\020\\001*\\022Search Experim\" +",
          "59669:       \"ents\\022\\204\\001\\n\\rgetExperiment\\022\\025.mlflow.GetExper\" +",
          "59670:       \"iment\\032\\036.mlflow.GetExperiment.Response\\\"<\\362\" +",
          "59671:       \"\\206\\0318\\n$\\n\\003GET\\022\\027/mlflow/experiments/get\\032\\004\\010\\002\\020\" +",
          "59672:       \"\\000\\020\\001*\\016Get Experiment\\022\\224\\001\\n\\020deleteExperiment\" +",
          "59673:       \"\\022\\030.mlflow.DeleteExperiment\\032!.mlflow.Dele\" +",
          "59674:       \"teExperiment.Response\\\"C\\362\\206\\031?\\n(\\n\\004POST\\022\\032/ml\" +",
          "59675:       \"flow/experiments/delete\\032\\004\\010\\002\\020\\000\\020\\001*\\021Delete \" +",
          "59676:       \"Experiment\\022\\231\\001\\n\\021restoreExperiment\\022\\031.mlflo\" +",
          "59677:       \"w.RestoreExperiment\\032\\\".mlflow.RestoreExpe\" +",
          "59678:       \"riment.Response\\\"E\\362\\206\\031A\\n)\\n\\004POST\\022\\033/mlflow/e\" +",
          "59679:       \"xperiments/restore\\032\\004\\010\\002\\020\\000\\020\\001*\\022Restore Expe\" +",
          "59680:       \"riment\\022\\224\\001\\n\\020updateExperiment\\022\\030.mlflow.Upd\" +",
          "59681:       \"ateExperiment\\032!.mlflow.UpdateExperiment.\" +",
          "59682:       \"Response\\\"C\\362\\206\\031?\\n(\\n\\004POST\\022\\032/mlflow/experime\" +",
          "59683:       \"nts/update\\032\\004\\010\\002\\020\\000\\020\\001*\\021Update Experiment\\022q\\n\" +",
          "59684:       \"\\tcreateRun\\022\\021.mlflow.CreateRun\\032\\032.mlflow.C\" +",
          "59685:       \"reateRun.Response\\\"5\\362\\206\\0311\\n!\\n\\004POST\\022\\023/mlflow\" +",
          "59686:       \"/runs/create\\032\\004\\010\\002\\020\\000\\020\\001*\\nCreate Run\\022q\\n\\tupda\" +",
          "59687:       \"teRun\\022\\021.mlflow.UpdateRun\\032\\032.mlflow.Update\" +",
          "59689:       \"/update\\032\\004\\010\\002\\020\\000\\020\\001*\\nUpdate Run\\022q\\n\\tdeleteRun\" +",
          "59690:       \"\\022\\021.mlflow.DeleteRun\\032\\032.mlflow.DeleteRun.R\" +",
          "59691:       \"esponse\\\"5\\362\\206\\0311\\n!\\n\\004POST\\022\\023/mlflow/runs/dele\" +",
          "59692:       \"te\\032\\004\\010\\002\\020\\000\\020\\001*\\nDelete Run\\022v\\n\\nrestoreRun\\022\\022.m\" +",
          "59693:       \"lflow.RestoreRun\\032\\033.mlflow.RestoreRun.Res\" +",
          "59694:       \"ponse\\\"7\\362\\206\\0313\\n\\\"\\n\\004POST\\022\\024/mlflow/runs/restor\" +",
          "59695:       \"e\\032\\004\\010\\002\\020\\000\\020\\001*\\013Restore Run\\022u\\n\\tlogMetric\\022\\021.ml\" +",
          "59696:       \"flow.LogMetric\\032\\032.mlflow.LogMetric.Respon\" +",
          "59697:       \"se\\\"9\\362\\206\\0315\\n%\\n\\004POST\\022\\027/mlflow/runs/log-metri\" +",
          "59698:       \"c\\032\\004\\010\\002\\020\\000\\020\\001*\\nLog Metric\\022t\\n\\010logParam\\022\\020.mlfl\" +",
          "59699:       \"ow.LogParam\\032\\031.mlflow.LogParam.Response\\\";\" +",
          "59700:       \"\\362\\206\\0317\\n(\\n\\004POST\\022\\032/mlflow/runs/log-parameter\" +",
          "59701:       \"\\032\\004\\010\\002\\020\\000\\020\\001*\\tLog Param\\022\\241\\001\\n\\020setExperimentTag\" +",
          "59702:       \"\\022\\030.mlflow.SetExperimentTag\\032!.mlflow.SetE\" +",
          "59703:       \"xperimentTag.Response\\\"P\\362\\206\\031L\\n4\\n\\004POST\\022&/ml\" +",
          "59704:       \"flow/experiments/set-experiment-tag\\032\\004\\010\\002\\020\" +",
          "59705:       \"\\000\\020\\001*\\022Set Experiment Tag\\022f\\n\\006setTag\\022\\016.mlfl\" +",
          "59706:       \"ow.SetTag\\032\\027.mlflow.SetTag.Response\\\"3\\362\\206\\031/\" +",
          "59707:       \"\\n\\\"\\n\\004POST\\022\\024/mlflow/runs/set-tag\\032\\004\\010\\002\\020\\000\\020\\001*\\007\" +",
          "59708:       \"Set Tag\\022u\\n\\tdeleteTag\\022\\021.mlflow.DeleteTag\\032\" +",
          "59709:       \"\\032.mlflow.DeleteTag.Response\\\"9\\362\\206\\0315\\n%\\n\\004POS\" +",
          "59710:       \"T\\022\\027/mlflow/runs/delete-tag\\032\\004\\010\\002\\020\\000\\020\\001*\\nDele\" +",
          "59711:       \"te Tag\\022a\\n\\006getRun\\022\\016.mlflow.GetRun\\032\\027.mlflo\" +",
          "59712:       \"w.GetRun.Response\\\".\\362\\206\\031*\\n\\035\\n\\003GET\\022\\020/mlflow/\" +",
          "59713:       \"runs/get\\032\\004\\010\\002\\020\\000\\020\\001*\\007Get Run\\022u\\n\\nsearchRuns\\022\" +",
          "59714:       \"\\022.mlflow.SearchRuns\\032\\033.mlflow.SearchRuns.\" +",
          "59715:       \"Response\\\"6\\362\\206\\0312\\n!\\n\\004POST\\022\\023/mlflow/runs/sea\" +",
          "59716:       \"rch\\032\\004\\010\\002\\020\\000\\020\\001*\\013Search Runs\\022\\203\\001\\n\\rlistArtifac\" +",
          "59717:       \"ts\\022\\025.mlflow.ListArtifacts\\032\\036.mlflow.ListA\" +",
          "59718:       \"rtifacts.Response\\\";\\362\\206\\0317\\n#\\n\\003GET\\022\\026/mlflow/\" +",
          "59719:       \"artifacts/list\\032\\004\\010\\002\\020\\000\\020\\001*\\016List Artifacts\\022\\225\" +",
          "59720:       \"\\001\\n\\020getMetricHistory\\022\\030.mlflow.GetMetricHi\" +",
          "59721:       \"story\\032!.mlflow.GetMetricHistory.Response\" +",
          "59722:       \"\\\"D\\362\\206\\031@\\n(\\n\\003GET\\022\\033/mlflow/metrics/get-histo\" +",
          "59723:       \"ry\\032\\004\\010\\002\\020\\000\\020\\001*\\022Get Metric History\\022p\\n\\010logBat\" +",
          "59724:       \"ch\\022\\020.mlflow.LogBatch\\032\\031.mlflow.LogBatch.R\" +",
          "59725:       \"esponse\\\"7\\362\\206\\0313\\n$\\n\\004POST\\022\\026/mlflow/runs/log-\" +",
          "59726:       \"batch\\032\\004\\010\\002\\020\\000\\020\\001*\\tLog Batch\\022p\\n\\010logModel\\022\\020.m\" +",
          "59727:       \"lflow.LogModel\\032\\031.mlflow.LogModel.Respons\" +",
          "59728:       \"e\\\"7\\362\\206\\0313\\n$\\n\\004POST\\022\\026/mlflow/runs/log-model\\032\" +",
          "59729:       \"\\004\\010\\002\\020\\000\\020\\001*\\tLog Model\\022u\\n\\tlogInputs\\022\\021.mlflow\" +",
          "59730:       \".LogInputs\\032\\032.mlflow.LogInputs.Response\\\"9\" +",
          "59731:       \"\\362\\206\\0315\\n%\\n\\004POST\\022\\027/mlflow/runs/log-inputs\\032\\004\\010\" +",
          "59732:       \"\\002\\020\\000\\020\\001*\\nLog InputsB\\036\\n\\024org.mlflow.api.prot\" +",
          "59733:       \"o\\220\\001\\001\\342?\\002\\020\\001\"",
          "",
          "---------------",
          "--- Hunk 743 ---",
          "[Context before]",
          "52995:     internal_static_mlflow_Run_fieldAccessorTable = new",
          "52996:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "52997:         internal_static_mlflow_Run_descriptor,",
          "52999:     internal_static_mlflow_RunData_descriptor =",
          "53000:       getDescriptor().getMessageTypes().get(3);",
          "53001:     internal_static_mlflow_RunData_fieldAccessorTable = new",
          "53002:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53003:         internal_static_mlflow_RunData_descriptor,",
          "53004:         new java.lang.String[] { \"Metrics\", \"Params\", \"Tags\", });",
          "53006:       getDescriptor().getMessageTypes().get(4);",
          "53007:     internal_static_mlflow_RunTag_fieldAccessorTable = new",
          "53008:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53009:         internal_static_mlflow_RunTag_descriptor,",
          "53010:         new java.lang.String[] { \"Key\", \"Value\", });",
          "53011:     internal_static_mlflow_ExperimentTag_descriptor =",
          "53013:     internal_static_mlflow_ExperimentTag_fieldAccessorTable = new",
          "53014:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53015:         internal_static_mlflow_ExperimentTag_descriptor,",
          "53016:         new java.lang.String[] { \"Key\", \"Value\", });",
          "53017:     internal_static_mlflow_RunInfo_descriptor =",
          "53019:     internal_static_mlflow_RunInfo_fieldAccessorTable = new",
          "53020:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53021:         internal_static_mlflow_RunInfo_descriptor,",
          "53022:         new java.lang.String[] { \"RunId\", \"RunUuid\", \"RunName\", \"ExperimentId\", \"UserId\", \"Status\", \"StartTime\", \"EndTime\", \"ArtifactUri\", \"LifecycleStage\", });",
          "53023:     internal_static_mlflow_Experiment_descriptor =",
          "53025:     internal_static_mlflow_Experiment_fieldAccessorTable = new",
          "53026:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53027:         internal_static_mlflow_Experiment_descriptor,",
          "53028:         new java.lang.String[] { \"ExperimentId\", \"Name\", \"ArtifactLocation\", \"LifecycleStage\", \"LastUpdateTime\", \"CreationTime\", \"Tags\", });",
          "53029:     internal_static_mlflow_CreateExperiment_descriptor =",
          "53031:     internal_static_mlflow_CreateExperiment_fieldAccessorTable = new",
          "53032:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53033:         internal_static_mlflow_CreateExperiment_descriptor,",
          "",
          "[Removed Lines]",
          "52998:         new java.lang.String[] { \"Info\", \"Data\", });",
          "53005:     internal_static_mlflow_RunTag_descriptor =",
          "53012:       getDescriptor().getMessageTypes().get(5);",
          "53018:       getDescriptor().getMessageTypes().get(6);",
          "53024:       getDescriptor().getMessageTypes().get(7);",
          "53030:       getDescriptor().getMessageTypes().get(8);",
          "",
          "[Added Lines]",
          "59758:         new java.lang.String[] { \"Info\", \"Data\", \"Inputs\", });",
          "59765:     internal_static_mlflow_RunInputs_descriptor =",
          "59767:     internal_static_mlflow_RunInputs_fieldAccessorTable = new",
          "59768:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "59769:         internal_static_mlflow_RunInputs_descriptor,",
          "59770:         new java.lang.String[] { \"DatasetInputs\", });",
          "59771:     internal_static_mlflow_RunTag_descriptor =",
          "59772:       getDescriptor().getMessageTypes().get(5);",
          "59778:       getDescriptor().getMessageTypes().get(6);",
          "59784:       getDescriptor().getMessageTypes().get(7);",
          "59790:       getDescriptor().getMessageTypes().get(8);",
          "59795:     internal_static_mlflow_DatasetInput_descriptor =",
          "59796:       getDescriptor().getMessageTypes().get(9);",
          "59797:     internal_static_mlflow_DatasetInput_fieldAccessorTable = new",
          "59798:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "59799:         internal_static_mlflow_DatasetInput_descriptor,",
          "59800:         new java.lang.String[] { \"Tags\", \"Dataset\", });",
          "59801:     internal_static_mlflow_InputTag_descriptor =",
          "59802:       getDescriptor().getMessageTypes().get(10);",
          "59803:     internal_static_mlflow_InputTag_fieldAccessorTable = new",
          "59804:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "59805:         internal_static_mlflow_InputTag_descriptor,",
          "59806:         new java.lang.String[] { \"Key\", \"Value\", });",
          "59807:     internal_static_mlflow_Dataset_descriptor =",
          "59808:       getDescriptor().getMessageTypes().get(11);",
          "59809:     internal_static_mlflow_Dataset_fieldAccessorTable = new",
          "59810:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "59811:         internal_static_mlflow_Dataset_descriptor,",
          "59812:         new java.lang.String[] { \"Name\", \"Digest\", \"SourceType\", \"Source\", \"Schema\", \"Profile\", });",
          "59814:       getDescriptor().getMessageTypes().get(12);",
          "",
          "---------------",
          "--- Hunk 744 ---",
          "[Context before]",
          "53039:         internal_static_mlflow_CreateExperiment_Response_descriptor,",
          "53040:         new java.lang.String[] { \"ExperimentId\", });",
          "53041:     internal_static_mlflow_SearchExperiments_descriptor =",
          "53043:     internal_static_mlflow_SearchExperiments_fieldAccessorTable = new",
          "53044:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53045:         internal_static_mlflow_SearchExperiments_descriptor,",
          "",
          "[Removed Lines]",
          "53042:       getDescriptor().getMessageTypes().get(9);",
          "",
          "[Added Lines]",
          "59826:       getDescriptor().getMessageTypes().get(13);",
          "",
          "---------------",
          "--- Hunk 745 ---",
          "[Context before]",
          "53051:         internal_static_mlflow_SearchExperiments_Response_descriptor,",
          "53052:         new java.lang.String[] { \"Experiments\", \"NextPageToken\", });",
          "53053:     internal_static_mlflow_GetExperiment_descriptor =",
          "53055:     internal_static_mlflow_GetExperiment_fieldAccessorTable = new",
          "53056:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53057:         internal_static_mlflow_GetExperiment_descriptor,",
          "",
          "[Removed Lines]",
          "53054:       getDescriptor().getMessageTypes().get(10);",
          "",
          "[Added Lines]",
          "59838:       getDescriptor().getMessageTypes().get(14);",
          "",
          "---------------",
          "--- Hunk 746 ---",
          "[Context before]",
          "53063:         internal_static_mlflow_GetExperiment_Response_descriptor,",
          "53064:         new java.lang.String[] { \"Experiment\", });",
          "53065:     internal_static_mlflow_DeleteExperiment_descriptor =",
          "53067:     internal_static_mlflow_DeleteExperiment_fieldAccessorTable = new",
          "53068:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53069:         internal_static_mlflow_DeleteExperiment_descriptor,",
          "",
          "[Removed Lines]",
          "53066:       getDescriptor().getMessageTypes().get(11);",
          "",
          "[Added Lines]",
          "59850:       getDescriptor().getMessageTypes().get(15);",
          "",
          "---------------",
          "--- Hunk 747 ---",
          "[Context before]",
          "53075:         internal_static_mlflow_DeleteExperiment_Response_descriptor,",
          "53076:         new java.lang.String[] { });",
          "53077:     internal_static_mlflow_RestoreExperiment_descriptor =",
          "53079:     internal_static_mlflow_RestoreExperiment_fieldAccessorTable = new",
          "53080:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53081:         internal_static_mlflow_RestoreExperiment_descriptor,",
          "",
          "[Removed Lines]",
          "53078:       getDescriptor().getMessageTypes().get(12);",
          "",
          "[Added Lines]",
          "59862:       getDescriptor().getMessageTypes().get(16);",
          "",
          "---------------",
          "--- Hunk 748 ---",
          "[Context before]",
          "53087:         internal_static_mlflow_RestoreExperiment_Response_descriptor,",
          "53088:         new java.lang.String[] { });",
          "53089:     internal_static_mlflow_UpdateExperiment_descriptor =",
          "53091:     internal_static_mlflow_UpdateExperiment_fieldAccessorTable = new",
          "53092:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53093:         internal_static_mlflow_UpdateExperiment_descriptor,",
          "",
          "[Removed Lines]",
          "53090:       getDescriptor().getMessageTypes().get(13);",
          "",
          "[Added Lines]",
          "59874:       getDescriptor().getMessageTypes().get(17);",
          "",
          "---------------",
          "--- Hunk 749 ---",
          "[Context before]",
          "53099:         internal_static_mlflow_UpdateExperiment_Response_descriptor,",
          "53100:         new java.lang.String[] { });",
          "53101:     internal_static_mlflow_CreateRun_descriptor =",
          "53103:     internal_static_mlflow_CreateRun_fieldAccessorTable = new",
          "53104:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53105:         internal_static_mlflow_CreateRun_descriptor,",
          "",
          "[Removed Lines]",
          "53102:       getDescriptor().getMessageTypes().get(14);",
          "",
          "[Added Lines]",
          "59886:       getDescriptor().getMessageTypes().get(18);",
          "",
          "---------------",
          "--- Hunk 750 ---",
          "[Context before]",
          "53111:         internal_static_mlflow_CreateRun_Response_descriptor,",
          "53112:         new java.lang.String[] { \"Run\", });",
          "53113:     internal_static_mlflow_UpdateRun_descriptor =",
          "53115:     internal_static_mlflow_UpdateRun_fieldAccessorTable = new",
          "53116:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53117:         internal_static_mlflow_UpdateRun_descriptor,",
          "",
          "[Removed Lines]",
          "53114:       getDescriptor().getMessageTypes().get(15);",
          "",
          "[Added Lines]",
          "59898:       getDescriptor().getMessageTypes().get(19);",
          "",
          "---------------",
          "--- Hunk 751 ---",
          "[Context before]",
          "53123:         internal_static_mlflow_UpdateRun_Response_descriptor,",
          "53124:         new java.lang.String[] { \"RunInfo\", });",
          "53125:     internal_static_mlflow_DeleteRun_descriptor =",
          "53127:     internal_static_mlflow_DeleteRun_fieldAccessorTable = new",
          "53128:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53129:         internal_static_mlflow_DeleteRun_descriptor,",
          "",
          "[Removed Lines]",
          "53126:       getDescriptor().getMessageTypes().get(16);",
          "",
          "[Added Lines]",
          "59910:       getDescriptor().getMessageTypes().get(20);",
          "",
          "---------------",
          "--- Hunk 752 ---",
          "[Context before]",
          "53135:         internal_static_mlflow_DeleteRun_Response_descriptor,",
          "53136:         new java.lang.String[] { });",
          "53137:     internal_static_mlflow_RestoreRun_descriptor =",
          "53139:     internal_static_mlflow_RestoreRun_fieldAccessorTable = new",
          "53140:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53141:         internal_static_mlflow_RestoreRun_descriptor,",
          "",
          "[Removed Lines]",
          "53138:       getDescriptor().getMessageTypes().get(17);",
          "",
          "[Added Lines]",
          "59922:       getDescriptor().getMessageTypes().get(21);",
          "",
          "---------------",
          "--- Hunk 753 ---",
          "[Context before]",
          "53147:         internal_static_mlflow_RestoreRun_Response_descriptor,",
          "53148:         new java.lang.String[] { });",
          "53149:     internal_static_mlflow_LogMetric_descriptor =",
          "53151:     internal_static_mlflow_LogMetric_fieldAccessorTable = new",
          "53152:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53153:         internal_static_mlflow_LogMetric_descriptor,",
          "",
          "[Removed Lines]",
          "53150:       getDescriptor().getMessageTypes().get(18);",
          "",
          "[Added Lines]",
          "59934:       getDescriptor().getMessageTypes().get(22);",
          "",
          "---------------",
          "--- Hunk 754 ---",
          "[Context before]",
          "53159:         internal_static_mlflow_LogMetric_Response_descriptor,",
          "53160:         new java.lang.String[] { });",
          "53161:     internal_static_mlflow_LogParam_descriptor =",
          "53163:     internal_static_mlflow_LogParam_fieldAccessorTable = new",
          "53164:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53165:         internal_static_mlflow_LogParam_descriptor,",
          "",
          "[Removed Lines]",
          "53162:       getDescriptor().getMessageTypes().get(19);",
          "",
          "[Added Lines]",
          "59946:       getDescriptor().getMessageTypes().get(23);",
          "",
          "---------------",
          "--- Hunk 755 ---",
          "[Context before]",
          "53171:         internal_static_mlflow_LogParam_Response_descriptor,",
          "53172:         new java.lang.String[] { });",
          "53173:     internal_static_mlflow_SetExperimentTag_descriptor =",
          "53175:     internal_static_mlflow_SetExperimentTag_fieldAccessorTable = new",
          "53176:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53177:         internal_static_mlflow_SetExperimentTag_descriptor,",
          "",
          "[Removed Lines]",
          "53174:       getDescriptor().getMessageTypes().get(20);",
          "",
          "[Added Lines]",
          "59958:       getDescriptor().getMessageTypes().get(24);",
          "",
          "---------------",
          "--- Hunk 756 ---",
          "[Context before]",
          "53183:         internal_static_mlflow_SetExperimentTag_Response_descriptor,",
          "53184:         new java.lang.String[] { });",
          "53185:     internal_static_mlflow_SetTag_descriptor =",
          "53187:     internal_static_mlflow_SetTag_fieldAccessorTable = new",
          "53188:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53189:         internal_static_mlflow_SetTag_descriptor,",
          "",
          "[Removed Lines]",
          "53186:       getDescriptor().getMessageTypes().get(21);",
          "",
          "[Added Lines]",
          "59970:       getDescriptor().getMessageTypes().get(25);",
          "",
          "---------------",
          "--- Hunk 757 ---",
          "[Context before]",
          "53195:         internal_static_mlflow_SetTag_Response_descriptor,",
          "53196:         new java.lang.String[] { });",
          "53197:     internal_static_mlflow_DeleteTag_descriptor =",
          "53199:     internal_static_mlflow_DeleteTag_fieldAccessorTable = new",
          "53200:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53201:         internal_static_mlflow_DeleteTag_descriptor,",
          "",
          "[Removed Lines]",
          "53198:       getDescriptor().getMessageTypes().get(22);",
          "",
          "[Added Lines]",
          "59982:       getDescriptor().getMessageTypes().get(26);",
          "",
          "---------------",
          "--- Hunk 758 ---",
          "[Context before]",
          "53207:         internal_static_mlflow_DeleteTag_Response_descriptor,",
          "53208:         new java.lang.String[] { });",
          "53209:     internal_static_mlflow_GetRun_descriptor =",
          "53211:     internal_static_mlflow_GetRun_fieldAccessorTable = new",
          "53212:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53213:         internal_static_mlflow_GetRun_descriptor,",
          "",
          "[Removed Lines]",
          "53210:       getDescriptor().getMessageTypes().get(23);",
          "",
          "[Added Lines]",
          "59994:       getDescriptor().getMessageTypes().get(27);",
          "",
          "---------------",
          "--- Hunk 759 ---",
          "[Context before]",
          "53219:         internal_static_mlflow_GetRun_Response_descriptor,",
          "53220:         new java.lang.String[] { \"Run\", });",
          "53221:     internal_static_mlflow_SearchRuns_descriptor =",
          "53223:     internal_static_mlflow_SearchRuns_fieldAccessorTable = new",
          "53224:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53225:         internal_static_mlflow_SearchRuns_descriptor,",
          "",
          "[Removed Lines]",
          "53222:       getDescriptor().getMessageTypes().get(24);",
          "",
          "[Added Lines]",
          "60006:       getDescriptor().getMessageTypes().get(28);",
          "",
          "---------------",
          "--- Hunk 760 ---",
          "[Context before]",
          "53231:         internal_static_mlflow_SearchRuns_Response_descriptor,",
          "53232:         new java.lang.String[] { \"Runs\", \"NextPageToken\", });",
          "53233:     internal_static_mlflow_ListArtifacts_descriptor =",
          "53235:     internal_static_mlflow_ListArtifacts_fieldAccessorTable = new",
          "53236:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53237:         internal_static_mlflow_ListArtifacts_descriptor,",
          "",
          "[Removed Lines]",
          "53234:       getDescriptor().getMessageTypes().get(25);",
          "",
          "[Added Lines]",
          "60018:       getDescriptor().getMessageTypes().get(29);",
          "",
          "---------------",
          "--- Hunk 761 ---",
          "[Context before]",
          "53243:         internal_static_mlflow_ListArtifacts_Response_descriptor,",
          "53244:         new java.lang.String[] { \"RootUri\", \"Files\", \"NextPageToken\", });",
          "53245:     internal_static_mlflow_FileInfo_descriptor =",
          "53247:     internal_static_mlflow_FileInfo_fieldAccessorTable = new",
          "53248:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53249:         internal_static_mlflow_FileInfo_descriptor,",
          "53250:         new java.lang.String[] { \"Path\", \"IsDir\", \"FileSize\", });",
          "53251:     internal_static_mlflow_GetMetricHistory_descriptor =",
          "53253:     internal_static_mlflow_GetMetricHistory_fieldAccessorTable = new",
          "53254:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53255:         internal_static_mlflow_GetMetricHistory_descriptor,",
          "",
          "[Removed Lines]",
          "53246:       getDescriptor().getMessageTypes().get(26);",
          "53252:       getDescriptor().getMessageTypes().get(27);",
          "",
          "[Added Lines]",
          "60030:       getDescriptor().getMessageTypes().get(30);",
          "60036:       getDescriptor().getMessageTypes().get(31);",
          "",
          "---------------",
          "--- Hunk 762 ---",
          "[Context before]",
          "53261:         internal_static_mlflow_GetMetricHistory_Response_descriptor,",
          "53262:         new java.lang.String[] { \"Metrics\", \"NextPageToken\", });",
          "53263:     internal_static_mlflow_LogBatch_descriptor =",
          "53265:     internal_static_mlflow_LogBatch_fieldAccessorTable = new",
          "53266:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53267:         internal_static_mlflow_LogBatch_descriptor,",
          "",
          "[Removed Lines]",
          "53264:       getDescriptor().getMessageTypes().get(28);",
          "",
          "[Added Lines]",
          "60048:       getDescriptor().getMessageTypes().get(32);",
          "",
          "---------------",
          "--- Hunk 763 ---",
          "[Context before]",
          "53273:         internal_static_mlflow_LogBatch_Response_descriptor,",
          "53274:         new java.lang.String[] { });",
          "53275:     internal_static_mlflow_LogModel_descriptor =",
          "53277:     internal_static_mlflow_LogModel_fieldAccessorTable = new",
          "53278:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53279:         internal_static_mlflow_LogModel_descriptor,",
          "",
          "[Removed Lines]",
          "53276:       getDescriptor().getMessageTypes().get(29);",
          "",
          "[Added Lines]",
          "60060:       getDescriptor().getMessageTypes().get(33);",
          "",
          "---------------",
          "--- Hunk 764 ---",
          "[Context before]",
          "53284:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53285:         internal_static_mlflow_LogModel_Response_descriptor,",
          "53286:         new java.lang.String[] { });",
          "53287:     internal_static_mlflow_GetExperimentByName_descriptor =",
          "53289:     internal_static_mlflow_GetExperimentByName_fieldAccessorTable = new",
          "53290:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "53291:         internal_static_mlflow_GetExperimentByName_descriptor,",
          "",
          "[Removed Lines]",
          "53288:       getDescriptor().getMessageTypes().get(30);",
          "",
          "[Added Lines]",
          "60071:     internal_static_mlflow_LogInputs_descriptor =",
          "60072:       getDescriptor().getMessageTypes().get(34);",
          "60073:     internal_static_mlflow_LogInputs_fieldAccessorTable = new",
          "60074:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "60075:         internal_static_mlflow_LogInputs_descriptor,",
          "60076:         new java.lang.String[] { \"RunId\", \"Datasets\", });",
          "60077:     internal_static_mlflow_LogInputs_Response_descriptor =",
          "60078:       internal_static_mlflow_LogInputs_descriptor.getNestedTypes().get(0);",
          "60079:     internal_static_mlflow_LogInputs_Response_fieldAccessorTable = new",
          "60080:       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(",
          "60081:         internal_static_mlflow_LogInputs_Response_descriptor,",
          "60082:         new java.lang.String[] { });",
          "60084:       getDescriptor().getMessageTypes().get(35);",
          "",
          "---------------"
        ],
        "mlflow/java/client/src/main/java/org/mlflow/internal/proto/Internal.java||mlflow/java/client/src/main/java/org/mlflow/internal/proto/Internal.java": [
          "File: mlflow/java/client/src/main/java/org/mlflow/internal/proto/Internal.java -> mlflow/java/client/src/main/java/org/mlflow/internal/proto/Internal.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: package org.mlflow.internal.proto;",
          "6: public final class Internal {",
          "7:   private Internal() {}",
          "8:   public static void registerAllExtensions(",
          "9:       com.google.protobuf.ExtensionRegistryLite registry) {",
          "10:   }",
          "12:   public static void registerAllExtensions(",
          "13:       com.google.protobuf.ExtensionRegistry registry) {",
          "14:     registerAllExtensions(",
          "15:         (com.google.protobuf.ExtensionRegistryLite) registry);",
          "16:   }",
          "25:   public enum InputVertexType",
          "26:       implements com.google.protobuf.ProtocolMessageEnum {",
          "30:     RUN(1),",
          "34:     DATASET(2),",
          "35:     ;",
          "40:     public static final int RUN_VALUE = 1;",
          "44:     public static final int DATASET_VALUE = 2;",
          "47:     public final int getNumber() {",
          "48:       return value;",
          "49:     }",
          "56:     @java.lang.Deprecated",
          "57:     public static InputVertexType valueOf(int value) {",
          "58:       return forNumber(value);",
          "59:     }",
          "65:     public static InputVertexType forNumber(int value) {",
          "66:       switch (value) {",
          "67:         case 1: return RUN;",
          "68:         case 2: return DATASET;",
          "69:         default: return null;",
          "70:       }",
          "71:     }",
          "73:     public static com.google.protobuf.Internal.EnumLiteMap<InputVertexType>",
          "74:         internalGetValueMap() {",
          "75:       return internalValueMap;",
          "76:     }",
          "77:     private static final com.google.protobuf.Internal.EnumLiteMap<",
          "78:         InputVertexType> internalValueMap =",
          "79:           new com.google.protobuf.Internal.EnumLiteMap<InputVertexType>() {",
          "80:             public InputVertexType findValueByNumber(int number) {",
          "81:               return InputVertexType.forNumber(number);",
          "82:             }",
          "83:           };",
          "85:     public final com.google.protobuf.Descriptors.EnumValueDescriptor",
          "86:         getValueDescriptor() {",
          "87:       return getDescriptor().getValues().get(ordinal());",
          "88:     }",
          "89:     public final com.google.protobuf.Descriptors.EnumDescriptor",
          "90:         getDescriptorForType() {",
          "91:       return getDescriptor();",
          "92:     }",
          "93:     public static final com.google.protobuf.Descriptors.EnumDescriptor",
          "94:         getDescriptor() {",
          "95:       return org.mlflow.internal.proto.Internal.getDescriptor().getEnumTypes().get(0);",
          "96:     }",
          "98:     private static final InputVertexType[] VALUES = values();",
          "100:     public static InputVertexType valueOf(",
          "101:         com.google.protobuf.Descriptors.EnumValueDescriptor desc) {",
          "102:       if (desc.getType() != getDescriptor()) {",
          "103:         throw new java.lang.IllegalArgumentException(",
          "104:           \"EnumValueDescriptor is not for this type.\");",
          "105:       }",
          "106:       return VALUES[desc.getIndex()];",
          "107:     }",
          "109:     private final int value;",
          "111:     private InputVertexType(int value) {",
          "112:       this.value = value;",
          "113:     }",
          "116:   }",
          "119:   public static com.google.protobuf.Descriptors.FileDescriptor",
          "120:       getDescriptor() {",
          "121:     return descriptor;",
          "122:   }",
          "123:   private static  com.google.protobuf.Descriptors.FileDescriptor",
          "124:       descriptor;",
          "125:   static {",
          "126:     java.lang.String[] descriptorData = {",
          "127:       \"\\n\\016internal.proto\\022\\017mlflow.internal\\032\\025scala\" +",
          "128:       \"pb/scalapb.proto*\\'\\n\\017InputVertexType\\022\\007\\n\\003R\" +",
          "129:       \"UN\\020\\001\\022\\013\\n\\007DATASET\\020\\002B#\\n\\031org.mlflow.internal\" +",
          "130:       \".proto\\220\\001\\001\\342?\\002\\020\\001\"",
          "131:     };",
          "132:     descriptor = com.google.protobuf.Descriptors.FileDescriptor",
          "133:       .internalBuildGeneratedFileFrom(descriptorData,",
          "134:         new com.google.protobuf.Descriptors.FileDescriptor[] {",
          "135:           org.mlflow.scalapb_interface.Scalapb.getDescriptor(),",
          "136:         });",
          "137:     com.google.protobuf.ExtensionRegistry registry =",
          "138:         com.google.protobuf.ExtensionRegistry.newInstance();",
          "139:     registry.add(org.mlflow.scalapb_interface.Scalapb.options);",
          "140:     com.google.protobuf.Descriptors.FileDescriptor",
          "141:         .internalUpdateFileDescriptor(descriptor, registry);",
          "142:     org.mlflow.scalapb_interface.Scalapb.getDescriptor();",
          "143:   }",
          "146: }",
          "",
          "---------------"
        ],
        "mlflow/lightgbm.py||mlflow/lightgbm.py": [
          "File: mlflow/lightgbm.py -> mlflow/lightgbm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: import mlflow",
          "31: from mlflow import pyfunc",
          "32: from mlflow.models import Model, infer_signature",
          "33: from mlflow.models.model import MLMODEL_FILE_NAME",
          "34: from mlflow.models.signature import ModelSignature",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "33: from mlflow.data.numpy_dataset import from_numpy",
          "34: from mlflow.data.pandas_dataset import from_pandas",
          "35: from mlflow.entities.dataset_input import DatasetInput",
          "36: from mlflow.entities.input_tag import InputTag",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     _PYTHON_ENV_FILE_NAME,",
          "47:     _PythonEnv,",
          "48: )",
          "49: from mlflow.utils.requirements_utils import _get_pinned_requirement",
          "50: from mlflow.utils.file_utils import write_to",
          "51: from mlflow.utils.docstring_utils import format_docstring, LOG_MODEL_PARAM_DOCS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: from mlflow.utils.mlflow_tags import (",
          "55:     MLFLOW_DATASET_CONTEXT,",
          "56: )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     MlflowAutologgingQueueingClient,",
          "70: )",
          "71: from mlflow.tracking._model_registry import DEFAULT_AWAIT_MAX_SLEEP_SECONDS",
          "72: from mlflow.sklearn import _SklearnTrainingSession",
          "74: FLAVOR_NAME = \"lightgbm\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: from mlflow.tracking.context import registry as context_registry",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "520:     log_input_examples=False,",
          "521:     log_model_signatures=True,",
          "522:     log_models=True,",
          "523:     disable=False,",
          "524:     exclusive=False,",
          "525:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "532:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "556:                        If ``False``, trained models are not logged.",
          "557:                        Input examples and model signatures, which are attributes of MLflow models,",
          "558:                        are also omitted when ``log_models`` is ``False``.",
          "559:     :param disable: If ``True``, disables the LightGBM autologging integration. If ``False``,",
          "560:                     enables the LightGBM autologging integration.",
          "561:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "569:     :param log_datasets: If ``True``, train and validation dataset information is logged to MLflow",
          "570:                          Tracking if applicable. If ``False``, dataset information is not logged.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "662:         original(self, *args, **kwargs)",
          "665:         def record_eval_results(eval_results, metrics_logger):",
          "666:             \"\"\"",
          "667:             Create a callback function that records evaluation results.",
          "",
          "[Removed Lines]",
          "664:     def train_impl(_log_models, original, *args, **kwargs):",
          "",
          "[Added Lines]",
          "676:     def train_impl(_log_models, _log_datasets, original, *args, **kwargs):",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "746:         eval_results = []",
          "747:         callbacks_index = all_arg_names.index(\"callbacks\")",
          "748:         run_id = mlflow.active_run().info.run_id",
          "749:         with batch_metrics_logger(run_id) as metrics_logger:",
          "750:             callback = record_eval_results(eval_results, metrics_logger)",
          "751:             if num_pos_args >= callbacks_index + 1:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "762:         train_set = args[1] if len(args) > 1 else kwargs.get(\"train_set\")",
          "764:         # Whether to automatically log the training dataset as a dataset artifact.",
          "765:         if _log_datasets and train_set:",
          "766:             try:",
          "767:                 context_tags = context_registry.resolve_tags()",
          "768:                 source = CodeDatasetSource(tags=context_tags)",
          "770:                 _log_lightgbm_dataset(train_set, source, \"train\", autologging_client)",
          "772:                 valid_sets = kwargs.get(\"valid_sets\")",
          "773:                 if valid_sets is not None:",
          "774:                     valid_names = kwargs.get(\"valid_names\")",
          "775:                     if valid_names is None:",
          "776:                         for valid_set in valid_sets:",
          "777:                             _log_lightgbm_dataset(valid_set, source, \"eval\", autologging_client)",
          "778:                     else:",
          "779:                         for valid_set, valid_name in zip(valid_sets, valid_names):",
          "780:                             _log_lightgbm_dataset(",
          "781:                                 valid_set, source, \"eval\", autologging_client, name=valid_name",
          "782:                             )",
          "784:                 dataset_logging_operations = autologging_client.flush(synchronous=False)",
          "785:                 dataset_logging_operations.await_completion()",
          "786:             except Exception as e:",
          "787:                 _logger.warning(",
          "788:                     \"Failed to log dataset information to MLflow Tracking. Reason: %s\", e",
          "789:                 )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "805:                 shutil.rmtree(tmpdir)",
          "807:         # train_set must exist as the original train function already ran successfully",
          "810:         # it is possible that the dataset was constructed before the patched",
          "811:         #   constructor was applied, so we cannot assume the input_example_info exists",
          "812:         input_example_info = getattr(train_set, \"input_example_info\", None)",
          "",
          "[Removed Lines]",
          "808:         train_set = args[1] if len(args) > 1 else kwargs.get(\"train_set\")",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "849:         return model",
          "852:         with _SklearnTrainingSession(estimator=lightgbm.train, allow_children=False) as t:",
          "853:             if t.should_log():",
          "855:             else:",
          "856:                 return original(*args, **kwargs)",
          "858:     safe_patch(FLAVOR_NAME, lightgbm.Dataset, \"__init__\", __init__)",
          "859:     safe_patch(",
          "861:     )",
          "862:     # The `train()` method logs LightGBM models as Booster objects. When using LightGBM",
          "863:     # scikit-learn models, we want to save / log models as their model classes. So we turn",
          "",
          "[Removed Lines]",
          "851:     def train(_log_models, original, *args, **kwargs):",
          "854:                 return train_impl(_log_models, original, *args, **kwargs)",
          "860:         FLAVOR_NAME, lightgbm, \"train\", functools.partial(train, log_models), manage_run=True",
          "",
          "[Added Lines]",
          "891:     def train(_log_models, _log_datasets, original, *args, **kwargs):",
          "894:                 return train_impl(_log_models, _log_datasets, original, *args, **kwargs)",
          "900:         FLAVOR_NAME,",
          "901:         lightgbm,",
          "902:         \"train\",",
          "903:         functools.partial(train, log_models, log_datasets),",
          "904:         manage_run=True,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "866:     # in `mlflow.sklearn._autolog()`, where models are logged as LightGBM scikit-learn models",
          "867:     # after the `fit()` method returns.",
          "868:     safe_patch(",
          "870:     )",
          "872:     # enable LightGBM scikit-learn estimators autologging",
          "",
          "[Removed Lines]",
          "869:         FLAVOR_NAME, lightgbm.sklearn, \"train\", functools.partial(train, False), manage_run=True",
          "",
          "[Added Lines]",
          "913:         FLAVOR_NAME,",
          "914:         lightgbm.sklearn,",
          "915:         \"train\",",
          "916:         functools.partial(train, False, log_datasets),",
          "917:         manage_run=True,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "877:         log_input_examples=log_input_examples,",
          "878:         log_model_signatures=log_model_signatures,",
          "879:         log_models=log_models,",
          "880:         disable=disable,",
          "881:         exclusive=exclusive,",
          "882:         disable_for_unsupported_versions=disable_for_unsupported_versions,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "928:         log_datasets=log_datasets,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "884:         max_tuning_runs=None,",
          "885:         log_post_training_metrics=True,",
          "886:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "938: def _log_lightgbm_dataset(lgb_dataset, source, context, autologging_client, name=None):",
          "939:     import pandas as pd",
          "940:     import numpy as np",
          "941:     from scipy.sparse import issparse",
          "943:     data = lgb_dataset.data",
          "944:     label = lgb_dataset.label",
          "945:     if isinstance(data, pd.DataFrame):",
          "946:         dataset = from_pandas(df=data, source=source, name=name)",
          "947:     elif issparse(data):",
          "948:         arr_data = data.toarray() if issparse(data) else data",
          "949:         dataset = from_numpy(features=arr_data, targets=label, source=source, name=name)",
          "950:     elif isinstance(data, np.ndarray):",
          "951:         dataset = from_numpy(features=data, targets=label, source=source, name=name)",
          "952:     else:",
          "953:         _logger.warning(\"Unrecognized dataset type %s. Dataset logging skipped.\", type(data))",
          "954:         return",
          "955:     tags = [InputTag(key=MLFLOW_DATASET_CONTEXT, value=context)]",
          "956:     dataset_input = DatasetInput(dataset=dataset._to_mlflow_entity(), tags=tags)",
          "958:     # log the dataset",
          "959:     autologging_client.log_inputs(run_id=mlflow.active_run().info.run_id, datasets=[dataset_input])",
          "",
          "---------------"
        ],
        "mlflow/models/evaluation/base.py||mlflow/models/evaluation/base.py": [
          "File: mlflow/models/evaluation/base.py -> mlflow/models/evaluation/base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import json",
          "6: import os",
          "7: import signal",
          "8: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "9: from mlflow.tracking.client import MlflowClient",
          "10: from contextlib import contextmanager",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: from mlflow.entities.dataset_input import DatasetInput",
          "9: from mlflow.entities.input_tag import InputTag",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: from mlflow.utils import _get_fully_qualified_class_name",
          "16: from mlflow.utils.annotations import developer_stable",
          "17: from mlflow.utils.class_utils import _get_class_from_string",
          "18: from mlflow.utils.string_utils import generate_feature_name_if_not_string",
          "19: from mlflow.utils.proto_json_utils import NumpyEncoder",
          "20: from mlflow.models.evaluation.validation import (",
          "21:     _MetricValidationResult,",
          "22:     MetricThreshold,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: from mlflow.utils.mlflow_tags import MLFLOW_DATASET_CONTEXT",
          "23: from mlflow.data.dataset import Dataset",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1190:                    are regarded as feature columns. If it is Spark DataFrame, only the first 10000",
          "1191:                    rows in the Spark DataFrame will be used as evaluation data.",
          "1193:     :param targets: If ``data`` is a numpy array or list, a numpy array or list of evaluation",
          "1194:                     labels. If ``data`` is a DataFrame, the string name of a column from ``data``",
          "1195:                     that contains evaluation labels. Required for classifier and regressor models,",
          "1198:     :param model_type: A string describing the model type. The default evaluator",
          "1199:                        supports the following model types:",
          "",
          "[Removed Lines]",
          "1196:                     but optional for question-answering, text-summarization, and text models.",
          "",
          "[Added Lines]",
          "1197:                  - A :py:class`mlflow.data.dataset.Dataset` instance containing evaluation features",
          "1198:                    and labels.",
          "1203:                     but optional for question-answering, text-summarization, and text models. If",
          "1204:                     ``data`` is a :py:class`mlflow.data.dataset.Dataset` that defines targets,",
          "1205:                     then ``targets`` is optional.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1381:     _EnvManager.validate(env_manager)",
          "1389:     if isinstance(model, str):",
          "1390:         model = _load_model_or_server(model, env_manager)",
          "",
          "[Removed Lines]",
          "1383:     if model_type in [_ModelType.REGRESSOR, _ModelType.CLASSIFIER] and targets is None:",
          "1384:         raise MlflowException(",
          "1385:             f\"The targets argument must be specified for {model_type} models.\",",
          "1386:             error_code=INVALID_PARAMETER_VALUE,",
          "1387:         )",
          "",
          "[Added Lines]",
          "1392:     if model_type in [_ModelType.REGRESSOR, _ModelType.CLASSIFIER]:",
          "1393:         if isinstance(data, Dataset):",
          "1394:             if getattr(data, \"targets\", None) is not None:",
          "1395:                 targets = data.targets",
          "1396:             else:",
          "1397:                 raise MlflowException(",
          "1398:                     message=\"The targets argument is required when data is a Dataset and does not \"",
          "1399:                     \"define targets.\",",
          "1400:                     error_code=INVALID_PARAMETER_VALUE,",
          "1401:                 )",
          "1402:         else:",
          "1403:             if targets is None:",
          "1404:                 raise MlflowException(",
          "1405:                     f\"The targets argument must be specified for {model_type} models.\",",
          "1406:                     error_code=INVALID_PARAMETER_VALUE,",
          "1407:                 )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1438:         evaluator_name_to_conf_map,",
          "1439:     ) = _normalize_evaluators_and_evaluator_config_args(evaluators, evaluator_config)",
          "1448:     with _start_run_or_reuse_active_run() as run_id:",
          "1449:         try:",
          "1450:             evaluate_result = _evaluate(",
          "1451:                 model=model,",
          "",
          "[Removed Lines]",
          "1441:     dataset = EvaluationDataset(",
          "1442:         data,",
          "1443:         targets=targets,",
          "1444:         path=dataset_path,",
          "1445:         feature_names=feature_names,",
          "1446:     )",
          "",
          "[Added Lines]",
          "1462:         from mlflow.data.pyfunc_dataset_mixin import PyFuncConvertibleDatasetMixin",
          "1464:         if isinstance(data, Dataset) and issubclass(data.__class__, PyFuncConvertibleDatasetMixin):",
          "1465:             dataset = data.to_evaluation_dataset(dataset_path, feature_names)",
          "1466:             if evaluator_name_to_conf_map and \"default\" in evaluator_name_to_conf_map:",
          "1467:                 context = evaluator_name_to_conf_map[\"default\"].get(\"metric_prefix\", None)",
          "1468:             else:",
          "1469:                 context = None",
          "1470:             client = MlflowClient()",
          "1471:             tags = [InputTag(key=MLFLOW_DATASET_CONTEXT, value=context)] if context else []",
          "1472:             dataset_input = DatasetInput(dataset=data._to_mlflow_entity(), tags=tags)",
          "1473:             client.log_inputs(run_id, [dataset_input])",
          "1474:         else:",
          "1475:             dataset = EvaluationDataset(",
          "1476:                 data,",
          "1477:                 targets=targets,",
          "1478:                 path=dataset_path,",
          "1479:                 feature_names=feature_names,",
          "1480:             )",
          "",
          "---------------"
        ],
        "mlflow/protos/internal.proto||mlflow/protos/internal.proto": [
          "File: mlflow/protos/internal.proto -> mlflow/protos/internal.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: syntax = \"proto2\";",
          "6: package mlflow.internal;",
          "8: import \"scalapb/scalapb.proto\";",
          "10: option java_package = \"org.mlflow.internal.proto\";",
          "11: option py_generic_services = true;",
          "12: option (scalapb.options) = {",
          "13:   flat_package: true,",
          "14: };",
          "19: enum InputVertexType {",
          "20:   RUN = 1;",
          "22:   DATASET = 2;",
          "23: }",
          "",
          "---------------"
        ],
        "mlflow/protos/internal_pb2.py||mlflow/protos/internal_pb2.py": [
          "File: mlflow/protos/internal_pb2.py -> mlflow/protos/internal_pb2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # -*- coding: utf-8 -*-",
          "2: # Generated by the protocol buffer compiler.  DO NOT EDIT!",
          "3: # source: internal.proto",
          "4: \"\"\"Generated protocol buffer code.\"\"\"",
          "5: from google.protobuf.internal import enum_type_wrapper",
          "6: from google.protobuf import descriptor as _descriptor",
          "7: from google.protobuf import descriptor_pool as _descriptor_pool",
          "8: from google.protobuf import message as _message",
          "9: from google.protobuf import reflection as _reflection",
          "10: from google.protobuf import symbol_database as _symbol_database",
          "11: # @@protoc_insertion_point(imports)",
          "13: _sym_db = _symbol_database.Default()",
          "16: from .scalapb import scalapb_pb2 as scalapb_dot_scalapb__pb2",
          "19: DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\x0einternal.proto\\x12\\x0fmlflow.internal\\x1a\\x15scalapb/scalapb.proto*\\'\\n\\x0fInputVertexType\\x12\\x07\\n\\x03RUN\\x10\\x01\\x12\\x0b\\n\\x07\\x44\\x41TASET\\x10\\x02\\x42#\\n\\x19org.mlflow.internal.proto\\x90\\x01\\x01\\xe2?\\x02\\x10\\x01')",
          "21: _INPUTVERTEXTYPE = DESCRIPTOR.enum_types_by_name['InputVertexType']",
          "22: InputVertexType = enum_type_wrapper.EnumTypeWrapper(_INPUTVERTEXTYPE)",
          "23: RUN = 1",
          "24: DATASET = 2",
          "27: if _descriptor._USE_C_DESCRIPTORS == False:",
          "29:   DESCRIPTOR._options = None",
          "30:   DESCRIPTOR._serialized_options = b'\\n\\031org.mlflow.internal.proto\\220\\001\\001\\342?\\002\\020\\001'",
          "31:   _INPUTVERTEXTYPE._serialized_start=58",
          "32:   _INPUTVERTEXTYPE._serialized_end=97",
          "33: # @@protoc_insertion_point(module_scope)",
          "",
          "---------------"
        ],
        "mlflow/protos/service.proto||mlflow/protos/service.proto": [
          "File: mlflow/protos/service.proto -> mlflow/protos/service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "403:       rpc_doc_title: \"Log Model\",",
          "404:     };",
          "405:   }",
          "406: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "409:   rpc logInputs (LogInputs) returns (LogInputs.Response) {",
          "410:     option (rpc) = {",
          "411:       endpoints: [{",
          "412:         method: \"POST\",",
          "413:         path: \"/mlflow/runs/log-inputs\"",
          "414:         since { major: 2, minor: 0 },",
          "415:       }],",
          "416:       visibility: PUBLIC,",
          "417:       rpc_doc_title: \"Log Inputs\",",
          "418:     };",
          "419:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "483:   optional RunInfo info = 1;",
          "485:   optional RunData data = 2;",
          "486: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "501:   optional RunInputs inputs = 3;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "496:   repeated RunTag tags = 3;",
          "497: }",
          "500: message RunTag {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518: message RunInputs {",
          "520:   repeated DatasetInput dataset_inputs = 1;",
          "521: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "576:   repeated ExperimentTag tags = 7;",
          "577: }",
          "579: message CreateExperiment {",
          "580:   option (scalapb.message).extends = \"com.databricks.rpc.RPC[$this.Response]\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606: message DatasetInput {",
          "608:   repeated InputTag tags = 1;",
          "611:   optional Dataset dataset = 2 [(validate_required) = true];",
          "612: }",
          "617: message InputTag {",
          "619:   optional string key = 1 [(validate_required) = true];",
          "621:   optional string value = 2 [(validate_required) = true];",
          "622: }",
          "628: message Dataset {",
          "630:   optional string name = 1 [(validate_required) = true];",
          "634:   optional string digest = 2 [(validate_required) = true];",
          "638:   optional string source_type = 3 [(validate_required) = true];",
          "641:   optional string source = 4 [(validate_required) = true];",
          "645:   optional string schema = 5;",
          "650:   optional string profile = 6;",
          "651: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1026:   }",
          "1027: }",
          "1029: message GetExperimentByName {",
          "1030:   option (scalapb.message).extends = \"com.databricks.rpc.RPC[$this.Response]\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1105: message LogInputs {",
          "1106:   option (scalapb.message).extends = \"com.databricks.rpc.RPC[$this.Response]\";",
          "1107:   option (scalapb.message).extends = \"com.databricks.mlflow.api.MlflowTrackingMessage\";",
          "1109:   optional string run_id = 1 [(validate_required) = true];",
          "1112:   repeated DatasetInput datasets = 2;",
          "1114:   message Response {",
          "1115:   }",
          "1116: }",
          "",
          "---------------"
        ],
        "mlflow/protos/service_pb2.py||mlflow/protos/service_pb2.py": [
          "File: mlflow/protos/service_pb2.py -> mlflow/protos/service_pb2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from . import databricks_pb2 as databricks__pb2",
          "24: _VIEWTYPE = DESCRIPTOR.enum_types_by_name['ViewType']",
          "25: ViewType = enum_type_wrapper.EnumTypeWrapper(_VIEWTYPE)",
          "",
          "[Removed Lines]",
          "22: DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\rservice.proto\\x12\\x06mlflow\\x1a\\x15scalapb/scalapb.proto\\x1a\\x10\\x64\\x61tabricks.proto\\\"H\\n\\x06Metric\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\x01\\x12\\x11\\n\\ttimestamp\\x18\\x03 \\x01(\\x03\\x12\\x0f\\n\\x04step\\x18\\x04 \\x01(\\x03:\\x01\\x30\\\"#\\n\\x05Param\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"C\\n\\x03Run\\x12\\x1d\\n\\x04info\\x18\\x01 \\x01(\\x0b\\x32\\x0f.mlflow.RunInfo\\x12\\x1d\\n\\x04\\x64\\x61ta\\x18\\x02 \\x01(\\x0b\\x32\\x0f.mlflow.RunData\\\"g\\n\\x07RunData\\x12\\x1f\\n\\x07metrics\\x18\\x01 \\x03(\\x0b\\x32\\x0e.mlflow.Metric\\x12\\x1d\\n\\x06params\\x18\\x02 \\x03(\\x0b\\x32\\r.mlflow.Param\\x12\\x1c\\n\\x04tags\\x18\\x03 \\x03(\\x0b\\x32\\x0e.mlflow.RunTag\\\"$\\n\\x06RunTag\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"+\\n\\rExperimentTag\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"\\xdd\\x01\\n\\x07RunInfo\\x12\\x0e\\n\\x06run_id\\x18\\x0f \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x10\\n\\x08run_name\\x18\\x03 \\x01(\\t\\x12\\x15\\n\\rexperiment_id\\x18\\x02 \\x01(\\t\\x12\\x0f\\n\\x07user_id\\x18\\x06 \\x01(\\t\\x12!\\n\\x06status\\x18\\x07 \\x01(\\x0e\\x32\\x11.mlflow.RunStatus\\x12\\x12\\n\\nstart_time\\x18\\x08 \\x01(\\x03\\x12\\x10\\n\\x08\\x65nd_time\\x18\\t \\x01(\\x03\\x12\\x14\\n\\x0c\\x61rtifact_uri\\x18\\r \\x01(\\t\\x12\\x17\\n\\x0flifecycle_stage\\x18\\x0e \\x01(\\t\\\"\\xbb\\x01\\n\\nExperiment\\x12\\x15\\n\\rexperiment_id\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04name\\x18\\x02 \\x01(\\t\\x12\\x19\\n\\x11\\x61rtifact_location\\x18\\x03 \\x01(\\t\\x12\\x17\\n\\x0flifecycle_stage\\x18\\x04 \\x01(\\t\\x12\\x18\\n\\x10last_update_time\\x18\\x05 \\x01(\\x03\\x12\\x15\\n\\rcreation_time\\x18\\x06 \\x01(\\x03\\x12#\\n\\x04tags\\x18\\x07 \\x03(\\x0b\\x32\\x15.mlflow.ExperimentTag\\\"\\xb6\\x01\\n\\x10\\x43reateExperiment\\x12\\x12\\n\\x04name\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x19\\n\\x11\\x61rtifact_location\\x18\\x02 \\x01(\\t\\x12#\\n\\x04tags\\x18\\x03 \\x03(\\x0b\\x32\\x15.mlflow.ExperimentTag\\x1a!\\n\\x08Response\\x12\\x15\\n\\rexperiment_id\\x18\\x01 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xfe\\x01\\n\\x11SearchExperiments\\x12\\x13\\n\\x0bmax_results\\x18\\x01 \\x01(\\x03\\x12\\x12\\n\\npage_token\\x18\\x02 \\x01(\\t\\x12\\x0e\\n\\x06\\x66ilter\\x18\\x03 \\x01(\\t\\x12\\x10\\n\\x08order_by\\x18\\x04 \\x03(\\t\\x12#\\n\\tview_type\\x18\\x05 \\x01(\\x0e\\x32\\x10.mlflow.ViewType\\x1aL\\n\\x08Response\\x12\\'\\n\\x0b\\x65xperiments\\x18\\x01 \\x03(\\x0b\\x32\\x12.mlflow.Experiment\\x12\\x17\\n\\x0fnext_page_token\\x18\\x02 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x8d\\x01\\n\\rGetExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\x32\\n\\x08Response\\x12&\\n\\nexperiment\\x18\\x01 \\x01(\\x0b\\x32\\x12.mlflow.Experiment:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"h\\n\\x10\\x44\\x65leteExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"i\\n\\x11RestoreExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"z\\n\\x10UpdateExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x10\\n\\x08new_name\\x18\\x02 \\x01(\\t\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xca\\x01\\n\\tCreateRun\\x12\\x15\\n\\rexperiment_id\\x18\\x01 \\x01(\\t\\x12\\x0f\\n\\x07user_id\\x18\\x02 \\x01(\\t\\x12\\x10\\n\\x08run_name\\x18\\x03 \\x01(\\t\\x12\\x12\\n\\nstart_time\\x18\\x07 \\x01(\\x03\\x12\\x1c\\n\\x04tags\\x18\\t \\x03(\\x0b\\x32\\x0e.mlflow.RunTag\\x1a$\\n\\x08Response\\x12\\x18\\n\\x03run\\x18\\x01 \\x01(\\x0b\\x32\\x0b.mlflow.Run:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xd0\\x01\\n\\tUpdateRun\\x12\\x0e\\n\\x06run_id\\x18\\x04 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12!\\n\\x06status\\x18\\x02 \\x01(\\x0e\\x32\\x11.mlflow.RunStatus\\x12\\x10\\n\\x08\\x65nd_time\\x18\\x03 \\x01(\\x03\\x12\\x10\\n\\x08run_name\\x18\\x05 \\x01(\\t\\x1a-\\n\\x08Response\\x12!\\n\\x08run_info\\x18\\x01 \\x01(\\x0b\\x32\\x0f.mlflow.RunInfo:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"Z\\n\\tDeleteRun\\x12\\x14\\n\\x06run_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"[\\n\\nRestoreRun\\x12\\x14\\n\\x06run_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xb8\\x01\\n\\tLogMetric\\x12\\x0e\\n\\x06run_id\\x18\\x06 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\x01\\x42\\x04\\xf8\\x86\\x19\\x01\\x12\\x17\\n\\ttimestamp\\x18\\x04 \\x01(\\x03\\x42\\x04\\xf8\\x86\\x19\\x01\\x12\\x0f\\n\\x04step\\x18\\x05 \\x01(\\x03:\\x01\\x30\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x8d\\x01\\n\\x08LogParam\\x12\\x0e\\n\\x06run_id\\x18\\x04 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x90\\x01\\n\\x10SetExperimentTag\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x8b\\x01\\n\\x06SetTag\\x12\\x0e\\n\\x06run_id\\x18\\x04 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"m\\n\\tDeleteTag\\x12\\x14\\n\\x06run_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"}\\n\\x06GetRun\\x12\\x0e\\n\\x06run_id\\x18\\x02 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x1a$\\n\\x08Response\\x12\\x18\\n\\x03run\\x18\\x01 \\x01(\\x0b\\x32\\x0b.mlflow.Run:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x98\\x02\\n\\nSearchRuns\\x12\\x16\\n\\x0e\\x65xperiment_ids\\x18\\x01 \\x03(\\t\\x12\\x0e\\n\\x06\\x66ilter\\x18\\x04 \\x01(\\t\\x12\\x34\\n\\rrun_view_type\\x18\\x03 \\x01(\\x0e\\x32\\x10.mlflow.ViewType:\\x0b\\x41\\x43TIVE_ONLY\\x12\\x19\\n\\x0bmax_results\\x18\\x05 \\x01(\\x05:\\x04\\x31\\x30\\x30\\x30\\x12\\x10\\n\\x08order_by\\x18\\x06 \\x03(\\t\\x12\\x12\\n\\npage_token\\x18\\x07 \\x01(\\t\\x1a>\\n\\x08Response\\x12\\x19\\n\\x04runs\\x18\\x01 \\x03(\\x0b\\x32\\x0b.mlflow.Run\\x12\\x17\\n\\x0fnext_page_token\\x18\\x02 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xd8\\x01\\n\\rListArtifacts\\x12\\x0e\\n\\x06run_id\\x18\\x03 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04path\\x18\\x02 \\x01(\\t\\x12\\x12\\n\\npage_token\\x18\\x04 \\x01(\\t\\x1aV\\n\\x08Response\\x12\\x10\\n\\x08root_uri\\x18\\x01 \\x01(\\t\\x12\\x1f\\n\\x05\\x66iles\\x18\\x02 \\x03(\\x0b\\x32\\x10.mlflow.FileInfo\\x12\\x17\\n\\x0fnext_page_token\\x18\\x03 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\";\\n\\x08\\x46ileInfo\\x12\\x0c\\n\\x04path\\x18\\x01 \\x01(\\t\\x12\\x0e\\n\\x06is_dir\\x18\\x02 \\x01(\\x08\\x12\\x11\\n\\tfile_size\\x18\\x03 \\x01(\\x03\\\"\\xea\\x01\\n\\x10GetMetricHistory\\x12\\x0e\\n\\x06run_id\\x18\\x03 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x18\\n\\nmetric_key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x12\\n\\npage_token\\x18\\x04 \\x01(\\t\\x12\\x13\\n\\x0bmax_results\\x18\\x05 \\x01(\\x05\\x1a\\x44\\n\\x08Response\\x12\\x1f\\n\\x07metrics\\x18\\x01 \\x03(\\x0b\\x32\\x0e.mlflow.Metric\\x12\\x17\\n\\x0fnext_page_token\\x18\\x02 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xb1\\x01\\n\\x08LogBatch\\x12\\x0e\\n\\x06run_id\\x18\\x01 \\x01(\\t\\x12\\x1f\\n\\x07metrics\\x18\\x02 \\x03(\\x0b\\x32\\x0e.mlflow.Metric\\x12\\x1d\\n\\x06params\\x18\\x03 \\x03(\\x0b\\x32\\r.mlflow.Param\\x12\\x1c\\n\\x04tags\\x18\\x04 \\x03(\\x0b\\x32\\x0e.mlflow.RunTag\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"g\\n\\x08LogModel\\x12\\x0e\\n\\x06run_id\\x18\\x01 \\x01(\\t\\x12\\x12\\n\\nmodel_json\\x18\\x02 \\x01(\\t\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x95\\x01\\n\\x13GetExperimentByName\\x12\\x1d\\n\\x0f\\x65xperiment_name\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\x32\\n\\x08Response\\x12&\\n\\nexperiment\\x18\\x01 \\x01(\\x0b\\x32\\x12.mlflow.Experiment:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]*6\\n\\x08ViewType\\x12\\x0f\\n\\x0b\\x41\\x43TIVE_ONLY\\x10\\x01\\x12\\x10\\n\\x0c\\x44\\x45LETED_ONLY\\x10\\x02\\x12\\x07\\n\\x03\\x41LL\\x10\\x03*I\\n\\nSourceType\\x12\\x0c\\n\\x08NOTEBOOK\\x10\\x01\\x12\\x07\\n\\x03JOB\\x10\\x02\\x12\\x0b\\n\\x07PROJECT\\x10\\x03\\x12\\t\\n\\x05LOCAL\\x10\\x04\\x12\\x0c\\n\\x07UNKNOWN\\x10\\xe8\\x07*M\\n\\tRunStatus\\x12\\x0b\\n\\x07RUNNING\\x10\\x01\\x12\\r\\n\\tSCHEDULED\\x10\\x02\\x12\\x0c\\n\\x08\\x46INISHED\\x10\\x03\\x12\\n\\n\\x06\\x46\\x41ILED\\x10\\x04\\x12\\n\\n\\x06KILLED\\x10\\x05\\x32\\x81\\x17\\n\\rMlflowService\\x12\\xa6\\x01\\n\\x13getExperimentByName\\x12\\x1b.mlflow.GetExperimentByName\\x1a$.mlflow.GetExperimentByName.Response\\\"L\\xf2\\x86\\x19H\\n,\\n\\x03GET\\x12\\x1f/mlflow/experiments/get-by-name\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x16Get Experiment By Name\\x12\\x94\\x01\\n\\x10\\x63reateExperiment\\x12\\x18.mlflow.CreateExperiment\\x1a!.mlflow.CreateExperiment.Response\\\"C\\xf2\\x86\\x19?\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/create\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x11\\x43reate Experiment\\x12\\xc1\\x01\\n\\x11searchExperiments\\x12\\x19.mlflow.SearchExperiments\\x1a\\\".mlflow.SearchExperiments.Response\\\"m\\xf2\\x86\\x19i\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/search\\x1a\\x04\\x08\\x02\\x10\\x00\\n\\'\\n\\x03GET\\x12\\x1a/mlflow/experiments/search\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Search Experiments\\x12\\x84\\x01\\n\\rgetExperiment\\x12\\x15.mlflow.GetExperiment\\x1a\\x1e.mlflow.GetExperiment.Response\\\"<\\xf2\\x86\\x19\\x38\\n$\\n\\x03GET\\x12\\x17/mlflow/experiments/get\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0eGet Experiment\\x12\\x94\\x01\\n\\x10\\x64\\x65leteExperiment\\x12\\x18.mlflow.DeleteExperiment\\x1a!.mlflow.DeleteExperiment.Response\\\"C\\xf2\\x86\\x19?\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/delete\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x11\\x44\\x65lete Experiment\\x12\\x99\\x01\\n\\x11restoreExperiment\\x12\\x19.mlflow.RestoreExperiment\\x1a\\\".mlflow.RestoreExperiment.Response\\\"E\\xf2\\x86\\x19\\x41\\n)\\n\\x04POST\\x12\\x1b/mlflow/experiments/restore\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Restore Experiment\\x12\\x94\\x01\\n\\x10updateExperiment\\x12\\x18.mlflow.UpdateExperiment\\x1a!.mlflow.UpdateExperiment.Response\\\"C\\xf2\\x86\\x19?\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/update\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x11Update Experiment\\x12q\\n\\tcreateRun\\x12\\x11.mlflow.CreateRun\\x1a\\x1a.mlflow.CreateRun.Response\\\"5\\xf2\\x86\\x19\\x31\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/create\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nCreate Run\\x12q\\n\\tupdateRun\\x12\\x11.mlflow.UpdateRun\\x1a\\x1a.mlflow.UpdateRun.Response\\\"5\\xf2\\x86\\x19\\x31\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/update\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nUpdate Run\\x12q\\n\\tdeleteRun\\x12\\x11.mlflow.DeleteRun\\x1a\\x1a.mlflow.DeleteRun.Response\\\"5\\xf2\\x86\\x19\\x31\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/delete\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nDelete Run\\x12v\\n\\nrestoreRun\\x12\\x12.mlflow.RestoreRun\\x1a\\x1b.mlflow.RestoreRun.Response\\\"7\\xf2\\x86\\x19\\x33\\n\\\"\\n\\x04POST\\x12\\x14/mlflow/runs/restore\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0bRestore Run\\x12u\\n\\tlogMetric\\x12\\x11.mlflow.LogMetric\\x1a\\x1a.mlflow.LogMetric.Response\\\"9\\xf2\\x86\\x19\\x35\\n%\\n\\x04POST\\x12\\x17/mlflow/runs/log-metric\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nLog Metric\\x12t\\n\\x08logParam\\x12\\x10.mlflow.LogParam\\x1a\\x19.mlflow.LogParam.Response\\\";\\xf2\\x86\\x19\\x37\\n(\\n\\x04POST\\x12\\x1a/mlflow/runs/log-parameter\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\tLog Param\\x12\\xa1\\x01\\n\\x10setExperimentTag\\x12\\x18.mlflow.SetExperimentTag\\x1a!.mlflow.SetExperimentTag.Response\\\"P\\xf2\\x86\\x19L\\n4\\n\\x04POST\\x12&/mlflow/experiments/set-experiment-tag\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Set Experiment Tag\\x12\\x66\\n\\x06setTag\\x12\\x0e.mlflow.SetTag\\x1a\\x17.mlflow.SetTag.Response\\\"3\\xf2\\x86\\x19/\\n\\\"\\n\\x04POST\\x12\\x14/mlflow/runs/set-tag\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x07Set Tag\\x12u\\n\\tdeleteTag\\x12\\x11.mlflow.DeleteTag\\x1a\\x1a.mlflow.DeleteTag.Response\\\"9\\xf2\\x86\\x19\\x35\\n%\\n\\x04POST\\x12\\x17/mlflow/runs/delete-tag\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nDelete Tag\\x12\\x61\\n\\x06getRun\\x12\\x0e.mlflow.GetRun\\x1a\\x17.mlflow.GetRun.Response\\\".\\xf2\\x86\\x19*\\n\\x1d\\n\\x03GET\\x12\\x10/mlflow/runs/get\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x07Get Run\\x12u\\n\\nsearchRuns\\x12\\x12.mlflow.SearchRuns\\x1a\\x1b.mlflow.SearchRuns.Response\\\"6\\xf2\\x86\\x19\\x32\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/search\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0bSearch Runs\\x12\\x83\\x01\\n\\rlistArtifacts\\x12\\x15.mlflow.ListArtifacts\\x1a\\x1e.mlflow.ListArtifacts.Response\\\";\\xf2\\x86\\x19\\x37\\n#\\n\\x03GET\\x12\\x16/mlflow/artifacts/list\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0eList Artifacts\\x12\\x95\\x01\\n\\x10getMetricHistory\\x12\\x18.mlflow.GetMetricHistory\\x1a!.mlflow.GetMetricHistory.Response\\\"D\\xf2\\x86\\x19@\\n(\\n\\x03GET\\x12\\x1b/mlflow/metrics/get-history\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Get Metric History\\x12p\\n\\x08logBatch\\x12\\x10.mlflow.LogBatch\\x1a\\x19.mlflow.LogBatch.Response\\\"7\\xf2\\x86\\x19\\x33\\n$\\n\\x04POST\\x12\\x16/mlflow/runs/log-batch\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\tLog Batch\\x12p\\n\\x08logModel\\x12\\x10.mlflow.LogModel\\x1a\\x19.mlflow.LogModel.Response\\\"7\\xf2\\x86\\x19\\x33\\n$\\n\\x04POST\\x12\\x16/mlflow/runs/log-model\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\tLog ModelB\\x1e\\n\\x14org.mlflow.api.proto\\x90\\x01\\x01\\xe2?\\x02\\x10\\x01')",
          "",
          "[Added Lines]",
          "22: DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\rservice.proto\\x12\\x06mlflow\\x1a\\x15scalapb/scalapb.proto\\x1a\\x10\\x64\\x61tabricks.proto\\\"H\\n\\x06Metric\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\x01\\x12\\x11\\n\\ttimestamp\\x18\\x03 \\x01(\\x03\\x12\\x0f\\n\\x04step\\x18\\x04 \\x01(\\x03:\\x01\\x30\\\"#\\n\\x05Param\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"f\\n\\x03Run\\x12\\x1d\\n\\x04info\\x18\\x01 \\x01(\\x0b\\x32\\x0f.mlflow.RunInfo\\x12\\x1d\\n\\x04\\x64\\x61ta\\x18\\x02 \\x01(\\x0b\\x32\\x0f.mlflow.RunData\\x12!\\n\\x06inputs\\x18\\x03 \\x01(\\x0b\\x32\\x11.mlflow.RunInputs\\\"g\\n\\x07RunData\\x12\\x1f\\n\\x07metrics\\x18\\x01 \\x03(\\x0b\\x32\\x0e.mlflow.Metric\\x12\\x1d\\n\\x06params\\x18\\x02 \\x03(\\x0b\\x32\\r.mlflow.Param\\x12\\x1c\\n\\x04tags\\x18\\x03 \\x03(\\x0b\\x32\\x0e.mlflow.RunTag\\\"9\\n\\tRunInputs\\x12,\\n\\x0e\\x64\\x61taset_inputs\\x18\\x01 \\x03(\\x0b\\x32\\x14.mlflow.DatasetInput\\\"$\\n\\x06RunTag\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"+\\n\\rExperimentTag\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05value\\x18\\x02 \\x01(\\t\\\"\\xdd\\x01\\n\\x07RunInfo\\x12\\x0e\\n\\x06run_id\\x18\\x0f \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x10\\n\\x08run_name\\x18\\x03 \\x01(\\t\\x12\\x15\\n\\rexperiment_id\\x18\\x02 \\x01(\\t\\x12\\x0f\\n\\x07user_id\\x18\\x06 \\x01(\\t\\x12!\\n\\x06status\\x18\\x07 \\x01(\\x0e\\x32\\x11.mlflow.RunStatus\\x12\\x12\\n\\nstart_time\\x18\\x08 \\x01(\\x03\\x12\\x10\\n\\x08\\x65nd_time\\x18\\t \\x01(\\x03\\x12\\x14\\n\\x0c\\x61rtifact_uri\\x18\\r \\x01(\\t\\x12\\x17\\n\\x0flifecycle_stage\\x18\\x0e \\x01(\\t\\\"\\xbb\\x01\\n\\nExperiment\\x12\\x15\\n\\rexperiment_id\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04name\\x18\\x02 \\x01(\\t\\x12\\x19\\n\\x11\\x61rtifact_location\\x18\\x03 \\x01(\\t\\x12\\x17\\n\\x0flifecycle_stage\\x18\\x04 \\x01(\\t\\x12\\x18\\n\\x10last_update_time\\x18\\x05 \\x01(\\x03\\x12\\x15\\n\\rcreation_time\\x18\\x06 \\x01(\\x03\\x12#\\n\\x04tags\\x18\\x07 \\x03(\\x0b\\x32\\x15.mlflow.ExperimentTag\\\"V\\n\\x0c\\x44\\x61tasetInput\\x12\\x1e\\n\\x04tags\\x18\\x01 \\x03(\\x0b\\x32\\x10.mlflow.InputTag\\x12&\\n\\x07\\x64\\x61taset\\x18\\x02 \\x01(\\x0b\\x32\\x0f.mlflow.DatasetB\\x04\\xf8\\x86\\x19\\x01\\\"2\\n\\x08InputTag\\x12\\x11\\n\\x03key\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\\"\\x85\\x01\\n\\x07\\x44\\x61taset\\x12\\x12\\n\\x04name\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x14\\n\\x06\\x64igest\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x19\\n\\x0bsource_type\\x18\\x03 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x14\\n\\x06source\\x18\\x04 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x0e\\n\\x06schema\\x18\\x05 \\x01(\\t\\x12\\x0f\\n\\x07profile\\x18\\x06 \\x01(\\t\\\"\\xb6\\x01\\n\\x10\\x43reateExperiment\\x12\\x12\\n\\x04name\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x19\\n\\x11\\x61rtifact_location\\x18\\x02 \\x01(\\t\\x12#\\n\\x04tags\\x18\\x03 \\x03(\\x0b\\x32\\x15.mlflow.ExperimentTag\\x1a!\\n\\x08Response\\x12\\x15\\n\\rexperiment_id\\x18\\x01 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xfe\\x01\\n\\x11SearchExperiments\\x12\\x13\\n\\x0bmax_results\\x18\\x01 \\x01(\\x03\\x12\\x12\\n\\npage_token\\x18\\x02 \\x01(\\t\\x12\\x0e\\n\\x06\\x66ilter\\x18\\x03 \\x01(\\t\\x12\\x10\\n\\x08order_by\\x18\\x04 \\x03(\\t\\x12#\\n\\tview_type\\x18\\x05 \\x01(\\x0e\\x32\\x10.mlflow.ViewType\\x1aL\\n\\x08Response\\x12\\'\\n\\x0b\\x65xperiments\\x18\\x01 \\x03(\\x0b\\x32\\x12.mlflow.Experiment\\x12\\x17\\n\\x0fnext_page_token\\x18\\x02 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x8d\\x01\\n\\rGetExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\x32\\n\\x08Response\\x12&\\n\\nexperiment\\x18\\x01 \\x01(\\x0b\\x32\\x12.mlflow.Experiment:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"h\\n\\x10\\x44\\x65leteExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"i\\n\\x11RestoreExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"z\\n\\x10UpdateExperiment\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x10\\n\\x08new_name\\x18\\x02 \\x01(\\t\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xca\\x01\\n\\tCreateRun\\x12\\x15\\n\\rexperiment_id\\x18\\x01 \\x01(\\t\\x12\\x0f\\n\\x07user_id\\x18\\x02 \\x01(\\t\\x12\\x10\\n\\x08run_name\\x18\\x03 \\x01(\\t\\x12\\x12\\n\\nstart_time\\x18\\x07 \\x01(\\x03\\x12\\x1c\\n\\x04tags\\x18\\t \\x03(\\x0b\\x32\\x0e.mlflow.RunTag\\x1a$\\n\\x08Response\\x12\\x18\\n\\x03run\\x18\\x01 \\x01(\\x0b\\x32\\x0b.mlflow.Run:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xd0\\x01\\n\\tUpdateRun\\x12\\x0e\\n\\x06run_id\\x18\\x04 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12!\\n\\x06status\\x18\\x02 \\x01(\\x0e\\x32\\x11.mlflow.RunStatus\\x12\\x10\\n\\x08\\x65nd_time\\x18\\x03 \\x01(\\x03\\x12\\x10\\n\\x08run_name\\x18\\x05 \\x01(\\t\\x1a-\\n\\x08Response\\x12!\\n\\x08run_info\\x18\\x01 \\x01(\\x0b\\x32\\x0f.mlflow.RunInfo:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"Z\\n\\tDeleteRun\\x12\\x14\\n\\x06run_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"[\\n\\nRestoreRun\\x12\\x14\\n\\x06run_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xb8\\x01\\n\\tLogMetric\\x12\\x0e\\n\\x06run_id\\x18\\x06 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\x01\\x42\\x04\\xf8\\x86\\x19\\x01\\x12\\x17\\n\\ttimestamp\\x18\\x04 \\x01(\\x03\\x42\\x04\\xf8\\x86\\x19\\x01\\x12\\x0f\\n\\x04step\\x18\\x05 \\x01(\\x03:\\x01\\x30\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x8d\\x01\\n\\x08LogParam\\x12\\x0e\\n\\x06run_id\\x18\\x04 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x90\\x01\\n\\x10SetExperimentTag\\x12\\x1b\\n\\rexperiment_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x8b\\x01\\n\\x06SetTag\\x12\\x0e\\n\\x06run_id\\x18\\x04 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x13\\n\\x05value\\x18\\x03 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"m\\n\\tDeleteTag\\x12\\x14\\n\\x06run_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x11\\n\\x03key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"}\\n\\x06GetRun\\x12\\x0e\\n\\x06run_id\\x18\\x02 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x1a$\\n\\x08Response\\x12\\x18\\n\\x03run\\x18\\x01 \\x01(\\x0b\\x32\\x0b.mlflow.Run:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\x98\\x02\\n\\nSearchRuns\\x12\\x16\\n\\x0e\\x65xperiment_ids\\x18\\x01 \\x03(\\t\\x12\\x0e\\n\\x06\\x66ilter\\x18\\x04 \\x01(\\t\\x12\\x34\\n\\rrun_view_type\\x18\\x03 \\x01(\\x0e\\x32\\x10.mlflow.ViewType:\\x0b\\x41\\x43TIVE_ONLY\\x12\\x19\\n\\x0bmax_results\\x18\\x05 \\x01(\\x05:\\x04\\x31\\x30\\x30\\x30\\x12\\x10\\n\\x08order_by\\x18\\x06 \\x03(\\t\\x12\\x12\\n\\npage_token\\x18\\x07 \\x01(\\t\\x1a>\\n\\x08Response\\x12\\x19\\n\\x04runs\\x18\\x01 \\x03(\\x0b\\x32\\x0b.mlflow.Run\\x12\\x17\\n\\x0fnext_page_token\\x18\\x02 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xd8\\x01\\n\\rListArtifacts\\x12\\x0e\\n\\x06run_id\\x18\\x03 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04path\\x18\\x02 \\x01(\\t\\x12\\x12\\n\\npage_token\\x18\\x04 \\x01(\\t\\x1aV\\n\\x08Response\\x12\\x10\\n\\x08root_uri\\x18\\x01 \\x01(\\t\\x12\\x1f\\n\\x05\\x66iles\\x18\\x02 \\x03(\\x0b\\x32\\x10.mlflow.FileInfo\\x12\\x17\\n\\x0fnext_page_token\\x18\\x03 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\";\\n\\x08\\x46ileInfo\\x12\\x0c\\n\\x04path\\x18\\x01 \\x01(\\t\\x12\\x0e\\n\\x06is_dir\\x18\\x02 \\x01(\\x08\\x12\\x11\\n\\tfile_size\\x18\\x03 \\x01(\\x03\\\"\\xea\\x01\\n\\x10GetMetricHistory\\x12\\x0e\\n\\x06run_id\\x18\\x03 \\x01(\\t\\x12\\x10\\n\\x08run_uuid\\x18\\x01 \\x01(\\t\\x12\\x18\\n\\nmetric_key\\x18\\x02 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12\\x12\\n\\npage_token\\x18\\x04 \\x01(\\t\\x12\\x13\\n\\x0bmax_results\\x18\\x05 \\x01(\\x05\\x1a\\x44\\n\\x08Response\\x12\\x1f\\n\\x07metrics\\x18\\x01 \\x03(\\x0b\\x32\\x0e.mlflow.Metric\\x12\\x17\\n\\x0fnext_page_token\\x18\\x02 \\x01(\\t:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xb1\\x01\\n\\x08LogBatch\\x12\\x0e\\n\\x06run_id\\x18\\x01 \\x01(\\t\\x12\\x1f\\n\\x07metrics\\x18\\x02 \\x03(\\x0b\\x32\\x0e.mlflow.Metric\\x12\\x1d\\n\\x06params\\x18\\x03 \\x03(\\x0b\\x32\\r.mlflow.Param\\x12\\x1c\\n\\x04tags\\x18\\x04 \\x03(\\x0b\\x32\\x0e.mlflow.RunTag\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"g\\n\\x08LogModel\\x12\\x0e\\n\\x06run_id\\x18\\x01 \\x01(\\t\\x12\\x12\\n\\nmodel_json\\x18\\x02 \\x01(\\t\\x1a\\n\\n\\x08Response:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\\"\\xb6\\x01\\n\\tLogInputs\\x12\\x14\\n\\x06run_id\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x12&\\n\\x08\\x64\\x61tasets\\x18\\x02 \\x03(\\x0b\\x32\\x14.mlflow.DatasetInput\\x1a\\n\\n\\x08Response:_\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]\\xe2?1\\n/com.databricks.mlflow.api.MlflowTrackingMessage\\\"\\x95\\x01\\n\\x13GetExperimentByName\\x12\\x1d\\n\\x0f\\x65xperiment_name\\x18\\x01 \\x01(\\tB\\x04\\xf8\\x86\\x19\\x01\\x1a\\x32\\n\\x08Response\\x12&\\n\\nexperiment\\x18\\x01 \\x01(\\x0b\\x32\\x12.mlflow.Experiment:+\\xe2?(\\n&com.databricks.rpc.RPC[$this.Response]*6\\n\\x08ViewType\\x12\\x0f\\n\\x0b\\x41\\x43TIVE_ONLY\\x10\\x01\\x12\\x10\\n\\x0c\\x44\\x45LETED_ONLY\\x10\\x02\\x12\\x07\\n\\x03\\x41LL\\x10\\x03*I\\n\\nSourceType\\x12\\x0c\\n\\x08NOTEBOOK\\x10\\x01\\x12\\x07\\n\\x03JOB\\x10\\x02\\x12\\x0b\\n\\x07PROJECT\\x10\\x03\\x12\\t\\n\\x05LOCAL\\x10\\x04\\x12\\x0c\\n\\x07UNKNOWN\\x10\\xe8\\x07*M\\n\\tRunStatus\\x12\\x0b\\n\\x07RUNNING\\x10\\x01\\x12\\r\\n\\tSCHEDULED\\x10\\x02\\x12\\x0c\\n\\x08\\x46INISHED\\x10\\x03\\x12\\n\\n\\x06\\x46\\x41ILED\\x10\\x04\\x12\\n\\n\\x06KILLED\\x10\\x05\\x32\\xf8\\x17\\n\\rMlflowService\\x12\\xa6\\x01\\n\\x13getExperimentByName\\x12\\x1b.mlflow.GetExperimentByName\\x1a$.mlflow.GetExperimentByName.Response\\\"L\\xf2\\x86\\x19H\\n,\\n\\x03GET\\x12\\x1f/mlflow/experiments/get-by-name\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x16Get Experiment By Name\\x12\\x94\\x01\\n\\x10\\x63reateExperiment\\x12\\x18.mlflow.CreateExperiment\\x1a!.mlflow.CreateExperiment.Response\\\"C\\xf2\\x86\\x19?\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/create\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x11\\x43reate Experiment\\x12\\xc1\\x01\\n\\x11searchExperiments\\x12\\x19.mlflow.SearchExperiments\\x1a\\\".mlflow.SearchExperiments.Response\\\"m\\xf2\\x86\\x19i\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/search\\x1a\\x04\\x08\\x02\\x10\\x00\\n\\'\\n\\x03GET\\x12\\x1a/mlflow/experiments/search\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Search Experiments\\x12\\x84\\x01\\n\\rgetExperiment\\x12\\x15.mlflow.GetExperiment\\x1a\\x1e.mlflow.GetExperiment.Response\\\"<\\xf2\\x86\\x19\\x38\\n$\\n\\x03GET\\x12\\x17/mlflow/experiments/get\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0eGet Experiment\\x12\\x94\\x01\\n\\x10\\x64\\x65leteExperiment\\x12\\x18.mlflow.DeleteExperiment\\x1a!.mlflow.DeleteExperiment.Response\\\"C\\xf2\\x86\\x19?\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/delete\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x11\\x44\\x65lete Experiment\\x12\\x99\\x01\\n\\x11restoreExperiment\\x12\\x19.mlflow.RestoreExperiment\\x1a\\\".mlflow.RestoreExperiment.Response\\\"E\\xf2\\x86\\x19\\x41\\n)\\n\\x04POST\\x12\\x1b/mlflow/experiments/restore\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Restore Experiment\\x12\\x94\\x01\\n\\x10updateExperiment\\x12\\x18.mlflow.UpdateExperiment\\x1a!.mlflow.UpdateExperiment.Response\\\"C\\xf2\\x86\\x19?\\n(\\n\\x04POST\\x12\\x1a/mlflow/experiments/update\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x11Update Experiment\\x12q\\n\\tcreateRun\\x12\\x11.mlflow.CreateRun\\x1a\\x1a.mlflow.CreateRun.Response\\\"5\\xf2\\x86\\x19\\x31\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/create\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nCreate Run\\x12q\\n\\tupdateRun\\x12\\x11.mlflow.UpdateRun\\x1a\\x1a.mlflow.UpdateRun.Response\\\"5\\xf2\\x86\\x19\\x31\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/update\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nUpdate Run\\x12q\\n\\tdeleteRun\\x12\\x11.mlflow.DeleteRun\\x1a\\x1a.mlflow.DeleteRun.Response\\\"5\\xf2\\x86\\x19\\x31\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/delete\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nDelete Run\\x12v\\n\\nrestoreRun\\x12\\x12.mlflow.RestoreRun\\x1a\\x1b.mlflow.RestoreRun.Response\\\"7\\xf2\\x86\\x19\\x33\\n\\\"\\n\\x04POST\\x12\\x14/mlflow/runs/restore\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0bRestore Run\\x12u\\n\\tlogMetric\\x12\\x11.mlflow.LogMetric\\x1a\\x1a.mlflow.LogMetric.Response\\\"9\\xf2\\x86\\x19\\x35\\n%\\n\\x04POST\\x12\\x17/mlflow/runs/log-metric\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nLog Metric\\x12t\\n\\x08logParam\\x12\\x10.mlflow.LogParam\\x1a\\x19.mlflow.LogParam.Response\\\";\\xf2\\x86\\x19\\x37\\n(\\n\\x04POST\\x12\\x1a/mlflow/runs/log-parameter\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\tLog Param\\x12\\xa1\\x01\\n\\x10setExperimentTag\\x12\\x18.mlflow.SetExperimentTag\\x1a!.mlflow.SetExperimentTag.Response\\\"P\\xf2\\x86\\x19L\\n4\\n\\x04POST\\x12&/mlflow/experiments/set-experiment-tag\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Set Experiment Tag\\x12\\x66\\n\\x06setTag\\x12\\x0e.mlflow.SetTag\\x1a\\x17.mlflow.SetTag.Response\\\"3\\xf2\\x86\\x19/\\n\\\"\\n\\x04POST\\x12\\x14/mlflow/runs/set-tag\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x07Set Tag\\x12u\\n\\tdeleteTag\\x12\\x11.mlflow.DeleteTag\\x1a\\x1a.mlflow.DeleteTag.Response\\\"9\\xf2\\x86\\x19\\x35\\n%\\n\\x04POST\\x12\\x17/mlflow/runs/delete-tag\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nDelete Tag\\x12\\x61\\n\\x06getRun\\x12\\x0e.mlflow.GetRun\\x1a\\x17.mlflow.GetRun.Response\\\".\\xf2\\x86\\x19*\\n\\x1d\\n\\x03GET\\x12\\x10/mlflow/runs/get\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x07Get Run\\x12u\\n\\nsearchRuns\\x12\\x12.mlflow.SearchRuns\\x1a\\x1b.mlflow.SearchRuns.Response\\\"6\\xf2\\x86\\x19\\x32\\n!\\n\\x04POST\\x12\\x13/mlflow/runs/search\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0bSearch Runs\\x12\\x83\\x01\\n\\rlistArtifacts\\x12\\x15.mlflow.ListArtifacts\\x1a\\x1e.mlflow.ListArtifacts.Response\\\";\\xf2\\x86\\x19\\x37\\n#\\n\\x03GET\\x12\\x16/mlflow/artifacts/list\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x0eList Artifacts\\x12\\x95\\x01\\n\\x10getMetricHistory\\x12\\x18.mlflow.GetMetricHistory\\x1a!.mlflow.GetMetricHistory.Response\\\"D\\xf2\\x86\\x19@\\n(\\n\\x03GET\\x12\\x1b/mlflow/metrics/get-history\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\x12Get Metric History\\x12p\\n\\x08logBatch\\x12\\x10.mlflow.LogBatch\\x1a\\x19.mlflow.LogBatch.Response\\\"7\\xf2\\x86\\x19\\x33\\n$\\n\\x04POST\\x12\\x16/mlflow/runs/log-batch\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\tLog Batch\\x12p\\n\\x08logModel\\x12\\x10.mlflow.LogModel\\x1a\\x19.mlflow.LogModel.Response\\\"7\\xf2\\x86\\x19\\x33\\n$\\n\\x04POST\\x12\\x16/mlflow/runs/log-model\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\tLog Model\\x12u\\n\\tlogInputs\\x12\\x11.mlflow.LogInputs\\x1a\\x1a.mlflow.LogInputs.Response\\\"9\\xf2\\x86\\x19\\x35\\n%\\n\\x04POST\\x12\\x17/mlflow/runs/log-inputs\\x1a\\x04\\x08\\x02\\x10\\x00\\x10\\x01*\\nLog InputsB\\x1e\\n\\x14org.mlflow.api.proto\\x90\\x01\\x01\\xe2?\\x02\\x10\\x01')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: _PARAM = DESCRIPTOR.message_types_by_name['Param']",
          "47: _RUN = DESCRIPTOR.message_types_by_name['Run']",
          "48: _RUNDATA = DESCRIPTOR.message_types_by_name['RunData']",
          "49: _RUNTAG = DESCRIPTOR.message_types_by_name['RunTag']",
          "50: _EXPERIMENTTAG = DESCRIPTOR.message_types_by_name['ExperimentTag']",
          "51: _RUNINFO = DESCRIPTOR.message_types_by_name['RunInfo']",
          "52: _EXPERIMENT = DESCRIPTOR.message_types_by_name['Experiment']",
          "53: _CREATEEXPERIMENT = DESCRIPTOR.message_types_by_name['CreateExperiment']",
          "54: _CREATEEXPERIMENT_RESPONSE = _CREATEEXPERIMENT.nested_types_by_name['Response']",
          "55: _SEARCHEXPERIMENTS = DESCRIPTOR.message_types_by_name['SearchExperiments']",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: _RUNINPUTS = DESCRIPTOR.message_types_by_name['RunInputs']",
          "54: _DATASETINPUT = DESCRIPTOR.message_types_by_name['DatasetInput']",
          "55: _INPUTTAG = DESCRIPTOR.message_types_by_name['InputTag']",
          "56: _DATASET = DESCRIPTOR.message_types_by_name['Dataset']",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93: _LOGBATCH_RESPONSE = _LOGBATCH.nested_types_by_name['Response']",
          "94: _LOGMODEL = DESCRIPTOR.message_types_by_name['LogModel']",
          "95: _LOGMODEL_RESPONSE = _LOGMODEL.nested_types_by_name['Response']",
          "96: _GETEXPERIMENTBYNAME = DESCRIPTOR.message_types_by_name['GetExperimentByName']",
          "97: _GETEXPERIMENTBYNAME_RESPONSE = _GETEXPERIMENTBYNAME.nested_types_by_name['Response']",
          "98: Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100: _LOGINPUTS = DESCRIPTOR.message_types_by_name['LogInputs']",
          "101: _LOGINPUTS_RESPONSE = _LOGINPUTS.nested_types_by_name['Response']",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "123:   })",
          "124: _sym_db.RegisterMessage(RunData)",
          "126: RunTag = _reflection.GeneratedProtocolMessageType('RunTag', (_message.Message,), {",
          "127:   'DESCRIPTOR' : _RUNTAG,",
          "128:   '__module__' : 'service_pb2'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132: RunInputs = _reflection.GeneratedProtocolMessageType('RunInputs', (_message.Message,), {",
          "133:   'DESCRIPTOR' : _RUNINPUTS,",
          "134:   '__module__' : 'service_pb2'",
          "135:   # @@protoc_insertion_point(class_scope:mlflow.RunInputs)",
          "136:   })",
          "137: _sym_db.RegisterMessage(RunInputs)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "151:   })",
          "152: _sym_db.RegisterMessage(Experiment)",
          "154: CreateExperiment = _reflection.GeneratedProtocolMessageType('CreateExperiment', (_message.Message,), {",
          "156:   'Response' : _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167: DatasetInput = _reflection.GeneratedProtocolMessageType('DatasetInput', (_message.Message,), {",
          "168:   'DESCRIPTOR' : _DATASETINPUT,",
          "169:   '__module__' : 'service_pb2'",
          "170:   # @@protoc_insertion_point(class_scope:mlflow.DatasetInput)",
          "171:   })",
          "172: _sym_db.RegisterMessage(DatasetInput)",
          "174: InputTag = _reflection.GeneratedProtocolMessageType('InputTag', (_message.Message,), {",
          "175:   'DESCRIPTOR' : _INPUTTAG,",
          "176:   '__module__' : 'service_pb2'",
          "177:   # @@protoc_insertion_point(class_scope:mlflow.InputTag)",
          "178:   })",
          "179: _sym_db.RegisterMessage(InputTag)",
          "181: Dataset = _reflection.GeneratedProtocolMessageType('Dataset', (_message.Message,), {",
          "182:   'DESCRIPTOR' : _DATASET,",
          "183:   '__module__' : 'service_pb2'",
          "184:   # @@protoc_insertion_point(class_scope:mlflow.Dataset)",
          "185:   })",
          "186: _sym_db.RegisterMessage(Dataset)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "473: _sym_db.RegisterMessage(LogModel)",
          "474: _sym_db.RegisterMessage(LogModel.Response)",
          "476: GetExperimentByName = _reflection.GeneratedProtocolMessageType('GetExperimentByName', (_message.Message,), {",
          "478:   'Response' : _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "510: LogInputs = _reflection.GeneratedProtocolMessageType('LogInputs', (_message.Message,), {",
          "512:   'Response' : _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {",
          "513:     'DESCRIPTOR' : _LOGINPUTS_RESPONSE,",
          "514:     '__module__' : 'service_pb2'",
          "515:     # @@protoc_insertion_point(class_scope:mlflow.LogInputs.Response)",
          "516:     })",
          "517:   ,",
          "518:   'DESCRIPTOR' : _LOGINPUTS,",
          "519:   '__module__' : 'service_pb2'",
          "520:   # @@protoc_insertion_point(class_scope:mlflow.LogInputs)",
          "521:   })",
          "522: _sym_db.RegisterMessage(LogInputs)",
          "523: _sym_db.RegisterMessage(LogInputs.Response)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "494:   DESCRIPTOR._options = None",
          "495:   DESCRIPTOR._serialized_options = b'\\n\\024org.mlflow.api.proto\\220\\001\\001\\342?\\002\\020\\001'",
          "496:   _CREATEEXPERIMENT.fields_by_name['name']._options = None",
          "497:   _CREATEEXPERIMENT.fields_by_name['name']._serialized_options = b'\\370\\206\\031\\001'",
          "498:   _CREATEEXPERIMENT._options = None",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545:   _DATASETINPUT.fields_by_name['dataset']._options = None",
          "546:   _DATASETINPUT.fields_by_name['dataset']._serialized_options = b'\\370\\206\\031\\001'",
          "547:   _INPUTTAG.fields_by_name['key']._options = None",
          "548:   _INPUTTAG.fields_by_name['key']._serialized_options = b'\\370\\206\\031\\001'",
          "549:   _INPUTTAG.fields_by_name['value']._options = None",
          "550:   _INPUTTAG.fields_by_name['value']._serialized_options = b'\\370\\206\\031\\001'",
          "551:   _DATASET.fields_by_name['name']._options = None",
          "552:   _DATASET.fields_by_name['name']._serialized_options = b'\\370\\206\\031\\001'",
          "553:   _DATASET.fields_by_name['digest']._options = None",
          "554:   _DATASET.fields_by_name['digest']._serialized_options = b'\\370\\206\\031\\001'",
          "555:   _DATASET.fields_by_name['source_type']._options = None",
          "556:   _DATASET.fields_by_name['source_type']._serialized_options = b'\\370\\206\\031\\001'",
          "557:   _DATASET.fields_by_name['source']._options = None",
          "558:   _DATASET.fields_by_name['source']._serialized_options = b'\\370\\206\\031\\001'",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "575:   _LOGBATCH._serialized_options = b'\\342?(\\n&com.databricks.rpc.RPC[$this.Response]'",
          "576:   _LOGMODEL._options = None",
          "577:   _LOGMODEL._serialized_options = b'\\342?(\\n&com.databricks.rpc.RPC[$this.Response]'",
          "578:   _GETEXPERIMENTBYNAME.fields_by_name['experiment_name']._options = None",
          "579:   _GETEXPERIMENTBYNAME.fields_by_name['experiment_name']._serialized_options = b'\\370\\206\\031\\001'",
          "580:   _GETEXPERIMENTBYNAME._options = None",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "641:   _LOGINPUTS.fields_by_name['run_id']._options = None",
          "642:   _LOGINPUTS.fields_by_name['run_id']._serialized_options = b'\\370\\206\\031\\001'",
          "643:   _LOGINPUTS._options = None",
          "644:   _LOGINPUTS._serialized_options = b'\\342?(\\n&com.databricks.rpc.RPC[$this.Response]\\342?1\\n/com.databricks.mlflow.api.MlflowTrackingMessage'",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "623:   _MLFLOWSERVICE.methods_by_name['logBatch']._serialized_options = b'\\362\\206\\0313\\n$\\n\\004POST\\022\\026/mlflow/runs/log-batch\\032\\004\\010\\002\\020\\000\\020\\001*\\tLog Batch'",
          "624:   _MLFLOWSERVICE.methods_by_name['logModel']._options = None",
          "625:   _MLFLOWSERVICE.methods_by_name['logModel']._serialized_options = b'\\362\\206\\0313\\n$\\n\\004POST\\022\\026/mlflow/runs/log-model\\032\\004\\010\\002\\020\\000\\020\\001*\\tLog Model'",
          "632:   _METRIC._serialized_start=66",
          "633:   _METRIC._serialized_end=138",
          "634:   _PARAM._serialized_start=140",
          "635:   _PARAM._serialized_end=175",
          "636:   _RUN._serialized_start=177",
          "740: MlflowService = service_reflection.GeneratedServiceType('MlflowService', (_service.Service,), dict(",
          "741:   DESCRIPTOR = _MLFLOWSERVICE,",
          "742:   __module__ = 'service_pb2'",
          "",
          "[Removed Lines]",
          "626:   _VIEWTYPE._serialized_start=4467",
          "627:   _VIEWTYPE._serialized_end=4521",
          "628:   _SOURCETYPE._serialized_start=4523",
          "629:   _SOURCETYPE._serialized_end=4596",
          "630:   _RUNSTATUS._serialized_start=4598",
          "631:   _RUNSTATUS._serialized_end=4675",
          "637:   _RUN._serialized_end=244",
          "638:   _RUNDATA._serialized_start=246",
          "639:   _RUNDATA._serialized_end=349",
          "640:   _RUNTAG._serialized_start=351",
          "641:   _RUNTAG._serialized_end=387",
          "642:   _EXPERIMENTTAG._serialized_start=389",
          "643:   _EXPERIMENTTAG._serialized_end=432",
          "644:   _RUNINFO._serialized_start=435",
          "645:   _RUNINFO._serialized_end=656",
          "646:   _EXPERIMENT._serialized_start=659",
          "647:   _EXPERIMENT._serialized_end=846",
          "648:   _CREATEEXPERIMENT._serialized_start=849",
          "649:   _CREATEEXPERIMENT._serialized_end=1031",
          "650:   _CREATEEXPERIMENT_RESPONSE._serialized_start=953",
          "651:   _CREATEEXPERIMENT_RESPONSE._serialized_end=986",
          "652:   _SEARCHEXPERIMENTS._serialized_start=1034",
          "653:   _SEARCHEXPERIMENTS._serialized_end=1288",
          "654:   _SEARCHEXPERIMENTS_RESPONSE._serialized_start=1167",
          "655:   _SEARCHEXPERIMENTS_RESPONSE._serialized_end=1243",
          "656:   _GETEXPERIMENT._serialized_start=1291",
          "657:   _GETEXPERIMENT._serialized_end=1432",
          "658:   _GETEXPERIMENT_RESPONSE._serialized_start=1337",
          "659:   _GETEXPERIMENT_RESPONSE._serialized_end=1387",
          "660:   _DELETEEXPERIMENT._serialized_start=1434",
          "661:   _DELETEEXPERIMENT._serialized_end=1538",
          "662:   _DELETEEXPERIMENT_RESPONSE._serialized_start=953",
          "663:   _DELETEEXPERIMENT_RESPONSE._serialized_end=963",
          "664:   _RESTOREEXPERIMENT._serialized_start=1540",
          "665:   _RESTOREEXPERIMENT._serialized_end=1645",
          "666:   _RESTOREEXPERIMENT_RESPONSE._serialized_start=953",
          "667:   _RESTOREEXPERIMENT_RESPONSE._serialized_end=963",
          "668:   _UPDATEEXPERIMENT._serialized_start=1647",
          "669:   _UPDATEEXPERIMENT._serialized_end=1769",
          "670:   _UPDATEEXPERIMENT_RESPONSE._serialized_start=953",
          "671:   _UPDATEEXPERIMENT_RESPONSE._serialized_end=963",
          "672:   _CREATERUN._serialized_start=1772",
          "673:   _CREATERUN._serialized_end=1974",
          "674:   _CREATERUN_RESPONSE._serialized_start=1893",
          "675:   _CREATERUN_RESPONSE._serialized_end=1929",
          "676:   _UPDATERUN._serialized_start=1977",
          "677:   _UPDATERUN._serialized_end=2185",
          "678:   _UPDATERUN_RESPONSE._serialized_start=2095",
          "679:   _UPDATERUN_RESPONSE._serialized_end=2140",
          "680:   _DELETERUN._serialized_start=2187",
          "681:   _DELETERUN._serialized_end=2277",
          "682:   _DELETERUN_RESPONSE._serialized_start=953",
          "683:   _DELETERUN_RESPONSE._serialized_end=963",
          "684:   _RESTORERUN._serialized_start=2279",
          "685:   _RESTORERUN._serialized_end=2370",
          "686:   _RESTORERUN_RESPONSE._serialized_start=953",
          "687:   _RESTORERUN_RESPONSE._serialized_end=963",
          "688:   _LOGMETRIC._serialized_start=2373",
          "689:   _LOGMETRIC._serialized_end=2557",
          "690:   _LOGMETRIC_RESPONSE._serialized_start=953",
          "691:   _LOGMETRIC_RESPONSE._serialized_end=963",
          "692:   _LOGPARAM._serialized_start=2560",
          "693:   _LOGPARAM._serialized_end=2701",
          "694:   _LOGPARAM_RESPONSE._serialized_start=953",
          "695:   _LOGPARAM_RESPONSE._serialized_end=963",
          "696:   _SETEXPERIMENTTAG._serialized_start=2704",
          "697:   _SETEXPERIMENTTAG._serialized_end=2848",
          "698:   _SETEXPERIMENTTAG_RESPONSE._serialized_start=953",
          "699:   _SETEXPERIMENTTAG_RESPONSE._serialized_end=963",
          "700:   _SETTAG._serialized_start=2851",
          "701:   _SETTAG._serialized_end=2990",
          "702:   _SETTAG_RESPONSE._serialized_start=953",
          "703:   _SETTAG_RESPONSE._serialized_end=963",
          "704:   _DELETETAG._serialized_start=2992",
          "705:   _DELETETAG._serialized_end=3101",
          "706:   _DELETETAG_RESPONSE._serialized_start=953",
          "707:   _DELETETAG_RESPONSE._serialized_end=963",
          "708:   _GETRUN._serialized_start=3103",
          "709:   _GETRUN._serialized_end=3228",
          "710:   _GETRUN_RESPONSE._serialized_start=1893",
          "711:   _GETRUN_RESPONSE._serialized_end=1929",
          "712:   _SEARCHRUNS._serialized_start=3231",
          "713:   _SEARCHRUNS._serialized_end=3511",
          "714:   _SEARCHRUNS_RESPONSE._serialized_start=3404",
          "715:   _SEARCHRUNS_RESPONSE._serialized_end=3466",
          "716:   _LISTARTIFACTS._serialized_start=3514",
          "717:   _LISTARTIFACTS._serialized_end=3730",
          "718:   _LISTARTIFACTS_RESPONSE._serialized_start=3599",
          "719:   _LISTARTIFACTS_RESPONSE._serialized_end=3685",
          "720:   _FILEINFO._serialized_start=3732",
          "721:   _FILEINFO._serialized_end=3791",
          "722:   _GETMETRICHISTORY._serialized_start=3794",
          "723:   _GETMETRICHISTORY._serialized_end=4028",
          "724:   _GETMETRICHISTORY_RESPONSE._serialized_start=3915",
          "725:   _GETMETRICHISTORY_RESPONSE._serialized_end=3983",
          "726:   _LOGBATCH._serialized_start=4031",
          "727:   _LOGBATCH._serialized_end=4208",
          "728:   _LOGBATCH_RESPONSE._serialized_start=953",
          "729:   _LOGBATCH_RESPONSE._serialized_end=963",
          "730:   _LOGMODEL._serialized_start=4210",
          "731:   _LOGMODEL._serialized_end=4313",
          "732:   _LOGMODEL_RESPONSE._serialized_start=953",
          "733:   _LOGMODEL_RESPONSE._serialized_end=963",
          "734:   _GETEXPERIMENTBYNAME._serialized_start=4316",
          "735:   _GETEXPERIMENTBYNAME._serialized_end=4465",
          "736:   _GETEXPERIMENTBYNAME_RESPONSE._serialized_start=1337",
          "737:   _GETEXPERIMENTBYNAME_RESPONSE._serialized_end=1387",
          "738:   _MLFLOWSERVICE._serialized_start=4678",
          "739:   _MLFLOWSERVICE._serialized_end=7623",
          "",
          "[Added Lines]",
          "693:   _MLFLOWSERVICE.methods_by_name['logInputs']._options = None",
          "694:   _MLFLOWSERVICE.methods_by_name['logInputs']._serialized_options = b'\\362\\206\\0315\\n%\\n\\004POST\\022\\027/mlflow/runs/log-inputs\\032\\004\\010\\002\\020\\000\\020\\001*\\nLog Inputs'",
          "695:   _VIEWTYPE._serialized_start=5022",
          "696:   _VIEWTYPE._serialized_end=5076",
          "697:   _SOURCETYPE._serialized_start=5078",
          "698:   _SOURCETYPE._serialized_end=5151",
          "699:   _RUNSTATUS._serialized_start=5153",
          "700:   _RUNSTATUS._serialized_end=5230",
          "706:   _RUN._serialized_end=279",
          "707:   _RUNDATA._serialized_start=281",
          "708:   _RUNDATA._serialized_end=384",
          "709:   _RUNINPUTS._serialized_start=386",
          "710:   _RUNINPUTS._serialized_end=443",
          "711:   _RUNTAG._serialized_start=445",
          "712:   _RUNTAG._serialized_end=481",
          "713:   _EXPERIMENTTAG._serialized_start=483",
          "714:   _EXPERIMENTTAG._serialized_end=526",
          "715:   _RUNINFO._serialized_start=529",
          "716:   _RUNINFO._serialized_end=750",
          "717:   _EXPERIMENT._serialized_start=753",
          "718:   _EXPERIMENT._serialized_end=940",
          "719:   _DATASETINPUT._serialized_start=942",
          "720:   _DATASETINPUT._serialized_end=1028",
          "721:   _INPUTTAG._serialized_start=1030",
          "722:   _INPUTTAG._serialized_end=1080",
          "723:   _DATASET._serialized_start=1083",
          "724:   _DATASET._serialized_end=1216",
          "725:   _CREATEEXPERIMENT._serialized_start=1219",
          "726:   _CREATEEXPERIMENT._serialized_end=1401",
          "727:   _CREATEEXPERIMENT_RESPONSE._serialized_start=1323",
          "728:   _CREATEEXPERIMENT_RESPONSE._serialized_end=1356",
          "729:   _SEARCHEXPERIMENTS._serialized_start=1404",
          "730:   _SEARCHEXPERIMENTS._serialized_end=1658",
          "731:   _SEARCHEXPERIMENTS_RESPONSE._serialized_start=1537",
          "732:   _SEARCHEXPERIMENTS_RESPONSE._serialized_end=1613",
          "733:   _GETEXPERIMENT._serialized_start=1661",
          "734:   _GETEXPERIMENT._serialized_end=1802",
          "735:   _GETEXPERIMENT_RESPONSE._serialized_start=1707",
          "736:   _GETEXPERIMENT_RESPONSE._serialized_end=1757",
          "737:   _DELETEEXPERIMENT._serialized_start=1804",
          "738:   _DELETEEXPERIMENT._serialized_end=1908",
          "739:   _DELETEEXPERIMENT_RESPONSE._serialized_start=1323",
          "740:   _DELETEEXPERIMENT_RESPONSE._serialized_end=1333",
          "741:   _RESTOREEXPERIMENT._serialized_start=1910",
          "742:   _RESTOREEXPERIMENT._serialized_end=2015",
          "743:   _RESTOREEXPERIMENT_RESPONSE._serialized_start=1323",
          "744:   _RESTOREEXPERIMENT_RESPONSE._serialized_end=1333",
          "745:   _UPDATEEXPERIMENT._serialized_start=2017",
          "746:   _UPDATEEXPERIMENT._serialized_end=2139",
          "747:   _UPDATEEXPERIMENT_RESPONSE._serialized_start=1323",
          "748:   _UPDATEEXPERIMENT_RESPONSE._serialized_end=1333",
          "749:   _CREATERUN._serialized_start=2142",
          "750:   _CREATERUN._serialized_end=2344",
          "751:   _CREATERUN_RESPONSE._serialized_start=2263",
          "752:   _CREATERUN_RESPONSE._serialized_end=2299",
          "753:   _UPDATERUN._serialized_start=2347",
          "754:   _UPDATERUN._serialized_end=2555",
          "755:   _UPDATERUN_RESPONSE._serialized_start=2465",
          "756:   _UPDATERUN_RESPONSE._serialized_end=2510",
          "757:   _DELETERUN._serialized_start=2557",
          "758:   _DELETERUN._serialized_end=2647",
          "759:   _DELETERUN_RESPONSE._serialized_start=1323",
          "760:   _DELETERUN_RESPONSE._serialized_end=1333",
          "761:   _RESTORERUN._serialized_start=2649",
          "762:   _RESTORERUN._serialized_end=2740",
          "763:   _RESTORERUN_RESPONSE._serialized_start=1323",
          "764:   _RESTORERUN_RESPONSE._serialized_end=1333",
          "765:   _LOGMETRIC._serialized_start=2743",
          "766:   _LOGMETRIC._serialized_end=2927",
          "767:   _LOGMETRIC_RESPONSE._serialized_start=1323",
          "768:   _LOGMETRIC_RESPONSE._serialized_end=1333",
          "769:   _LOGPARAM._serialized_start=2930",
          "770:   _LOGPARAM._serialized_end=3071",
          "771:   _LOGPARAM_RESPONSE._serialized_start=1323",
          "772:   _LOGPARAM_RESPONSE._serialized_end=1333",
          "773:   _SETEXPERIMENTTAG._serialized_start=3074",
          "774:   _SETEXPERIMENTTAG._serialized_end=3218",
          "775:   _SETEXPERIMENTTAG_RESPONSE._serialized_start=1323",
          "776:   _SETEXPERIMENTTAG_RESPONSE._serialized_end=1333",
          "777:   _SETTAG._serialized_start=3221",
          "778:   _SETTAG._serialized_end=3360",
          "779:   _SETTAG_RESPONSE._serialized_start=1323",
          "780:   _SETTAG_RESPONSE._serialized_end=1333",
          "781:   _DELETETAG._serialized_start=3362",
          "782:   _DELETETAG._serialized_end=3471",
          "783:   _DELETETAG_RESPONSE._serialized_start=1323",
          "784:   _DELETETAG_RESPONSE._serialized_end=1333",
          "785:   _GETRUN._serialized_start=3473",
          "786:   _GETRUN._serialized_end=3598",
          "787:   _GETRUN_RESPONSE._serialized_start=2263",
          "788:   _GETRUN_RESPONSE._serialized_end=2299",
          "789:   _SEARCHRUNS._serialized_start=3601",
          "790:   _SEARCHRUNS._serialized_end=3881",
          "791:   _SEARCHRUNS_RESPONSE._serialized_start=3774",
          "792:   _SEARCHRUNS_RESPONSE._serialized_end=3836",
          "793:   _LISTARTIFACTS._serialized_start=3884",
          "794:   _LISTARTIFACTS._serialized_end=4100",
          "795:   _LISTARTIFACTS_RESPONSE._serialized_start=3969",
          "796:   _LISTARTIFACTS_RESPONSE._serialized_end=4055",
          "797:   _FILEINFO._serialized_start=4102",
          "798:   _FILEINFO._serialized_end=4161",
          "799:   _GETMETRICHISTORY._serialized_start=4164",
          "800:   _GETMETRICHISTORY._serialized_end=4398",
          "801:   _GETMETRICHISTORY_RESPONSE._serialized_start=4285",
          "802:   _GETMETRICHISTORY_RESPONSE._serialized_end=4353",
          "803:   _LOGBATCH._serialized_start=4401",
          "804:   _LOGBATCH._serialized_end=4578",
          "805:   _LOGBATCH_RESPONSE._serialized_start=1323",
          "806:   _LOGBATCH_RESPONSE._serialized_end=1333",
          "807:   _LOGMODEL._serialized_start=4580",
          "808:   _LOGMODEL._serialized_end=4683",
          "809:   _LOGMODEL_RESPONSE._serialized_start=1323",
          "810:   _LOGMODEL_RESPONSE._serialized_end=1333",
          "811:   _LOGINPUTS._serialized_start=4686",
          "812:   _LOGINPUTS._serialized_end=4868",
          "813:   _LOGINPUTS_RESPONSE._serialized_start=1323",
          "814:   _LOGINPUTS_RESPONSE._serialized_end=1333",
          "815:   _GETEXPERIMENTBYNAME._serialized_start=4871",
          "816:   _GETEXPERIMENTBYNAME._serialized_end=5020",
          "817:   _GETEXPERIMENTBYNAME_RESPONSE._serialized_start=1707",
          "818:   _GETEXPERIMENTBYNAME_RESPONSE._serialized_end=1757",
          "819:   _MLFLOWSERVICE._serialized_start=5233",
          "820:   _MLFLOWSERVICE._serialized_end=8297",
          "",
          "---------------"
        ],
        "mlflow/pyspark/ml/__init__.py||mlflow/pyspark/ml/__init__.py": [
          "File: mlflow/pyspark/ml/__init__.py -> mlflow/pyspark/ml/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import json",
          "10: from itertools import zip_longest",
          "11: import mlflow",
          "12: from mlflow.tracking.client import MlflowClient",
          "13: from mlflow.entities import Metric, Param",
          "14: from mlflow.exceptions import MlflowException",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "13: from mlflow.data.spark_dataset import SparkDataset",
          "14: from mlflow.entities.dataset_input import DatasetInput",
          "15: from mlflow.entities.input_tag import InputTag",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26: )",
          "27: from mlflow.utils.autologging_utils import get_method_call_arg_value",
          "28: from mlflow.utils.file_utils import TempDir",
          "30: from mlflow.utils.rest_utils import (",
          "31:     augmented_raise_for_status,",
          "32:     http_request,",
          "",
          "[Removed Lines]",
          "29: from mlflow.utils.mlflow_tags import MLFLOW_AUTOLOGGING, MLFLOW_PARENT_RUN_ID",
          "",
          "[Added Lines]",
          "33: from mlflow.utils.mlflow_tags import (",
          "34:     MLFLOW_AUTOLOGGING,",
          "35:     MLFLOW_DATASET_CONTEXT,",
          "36:     MLFLOW_PARENT_RUN_ID,",
          "37: )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "761: @autologging_integration(AUTOLOGGING_INTEGRATION_NAME)",
          "762: def autolog(",
          "763:     log_models=True,",
          "764:     disable=False,",
          "765:     exclusive=False,",
          "766:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "772:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "870:                        newline-delimited list of fully-qualified estimator classnames, and set",
          "871:                        the \"spark.mlflow.pysparkml.autolog.logModelAllowlistFile\" Spark config",
          "872:                        to the path of your allowlist file.",
          "873:     :param disable: If ``True``, disables the scikit-learn autologging integration. If ``False``,",
          "874:                     enables the pyspark ML autologging integration.",
          "875:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "882:     :param log_datasets: If ``True``, dataset information is logged to MLflow Tracking.",
          "883:                          If ``False``, dataset information is not logged.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "920:     else:",
          "921:         _log_model_allowlist = _read_log_model_allowlist()",
          "924:         if params and isinstance(params, dict):",
          "925:             estimator = estimator.copy(params)",
          "",
          "[Removed Lines]",
          "923:     def _log_pretraining_metadata(estimator, params):",
          "",
          "[Added Lines]",
          "934:     def _log_pretraining_metadata(estimator, params, input_df):",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "960:         mlflow.set_tags(_get_estimator_info_tags(estimator))",
          "962:     def _log_posttraining_metadata(estimator, spark_model, params, input_df):",
          "963:         if _is_parameter_search_estimator(estimator):",
          "964:             try:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "973:         if log_datasets:",
          "974:             try:",
          "975:                 context_tags = context_registry.resolve_tags()",
          "976:                 code_source = CodeDatasetSource(context_tags)",
          "977:                 dataset = SparkDataset(",
          "978:                     df=input_df,",
          "979:                     source=code_source,",
          "980:                 )",
          "981:                 mlflow.log_input(dataset, \"train\")",
          "982:             except Exception as e:",
          "983:                 _logger.warning(",
          "984:                     \"Failed to log training dataset information to MLflow Tracking. Reason: %s\", e",
          "985:                 )",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1093:             from pyspark.storagelevel import StorageLevel",
          "1095:             estimator = self.copy(params) if params is not None else self",
          "1097:             input_training_df = args[0].persist(StorageLevel.MEMORY_AND_DISK)",
          "1098:             spark_model = original(self, *args, **kwargs)",
          "1099:             _log_posttraining_metadata(estimator, spark_model, params, input_training_df)",
          "1100:             input_training_df.unpersist()",
          "",
          "[Removed Lines]",
          "1096:             _log_pretraining_metadata(estimator, params)",
          "",
          "[Added Lines]",
          "1122:             _log_pretraining_metadata(estimator, params, input_training_df)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1161:                     _AUTOLOGGING_METRICS_MANAGER.log_post_training_metric(",
          "1162:                         run_id, metric_key, metric",
          "1163:                     )",
          "1164:             return metric",
          "1165:         else:",
          "1166:             return original(self, *args, **kwargs)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1189:                     if log_datasets:",
          "1190:                         try:",
          "1191:                             context_tags = context_registry.resolve_tags()",
          "1192:                             code_source = CodeDatasetSource(context_tags)",
          "1194:                             dataset = SparkDataset(",
          "1195:                                 df=pred_result_dataset,",
          "1196:                                 source=code_source,",
          "1197:                             )",
          "1198:                             tags = [InputTag(key=MLFLOW_DATASET_CONTEXT, value=\"eval\")]",
          "1199:                             dataset_input = DatasetInput(",
          "1200:                                 dataset=dataset._to_mlflow_entity(), tags=tags",
          "1201:                             )",
          "1202:                             client = MlflowClient()",
          "1203:                             client.log_inputs(run_id, [dataset_input])",
          "1204:                         except Exception as e:",
          "1205:                             _logger.warning(",
          "1206:                                 \"Failed to log evaluation dataset information to MLflow Tracking. \"",
          "1207:                                 \"Reason: %s\",",
          "1208:                                 e,",
          "1209:                             )",
          "",
          "---------------"
        ],
        "mlflow/pytorch/__init__.py||mlflow/pytorch/__init__.py": [
          "File: mlflow/pytorch/__init__.py -> mlflow/pytorch/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "911:     log_every_n_epoch=1,",
          "912:     log_every_n_step=None,",
          "913:     log_models=True,",
          "914:     disable=False,",
          "915:     exclusive=False,",
          "916:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "914:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "950:                        cause performance issues and is not recommended.",
          "951:     :param log_models: If ``True``, trained models are logged as MLflow model artifacts.",
          "952:                        If ``False``, trained models are not logged.",
          "953:     :param disable: If ``True``, disables the PyTorch Lightning autologging integration.",
          "954:                     If ``False``, enables the PyTorch Lightning autologging integration.",
          "955:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "954:     :param log_datasets: If ``True``, dataset information is logged to MLflow Tracking.",
          "955:                          If ``False``, dataset information is not logged.",
          "",
          "---------------"
        ],
        "mlflow/server/handlers.py||mlflow/server/handlers.py": [
          "File: mlflow/server/handlers.py -> mlflow/server/handlers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: from google.protobuf import descriptor",
          "15: from google.protobuf.json_format import ParseError",
          "18: from mlflow.entities.model_registry import RegisteredModelTag, ModelVersionTag",
          "19: from mlflow.exceptions import MlflowException",
          "20: from mlflow.models import Model",
          "",
          "[Removed Lines]",
          "17: from mlflow.entities import Metric, Param, RunTag, ViewType, ExperimentTag, FileInfo",
          "",
          "[Added Lines]",
          "17: from mlflow.entities import Metric, Param, RunTag, ViewType, ExperimentTag, FileInfo, DatasetInput",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     SetExperimentTag,",
          "44:     GetExperimentByName,",
          "45:     LogModel,",
          "46: )",
          "47: from mlflow.protos.model_registry_pb2 import (",
          "48:     ModelRegistryService,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     LogInputs,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "791:     return response",
          "794: @catch_mlflow_exception",
          "795: @_disable_if_artifacts_only",
          "796: def _set_experiment_tag():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "795: @catch_mlflow_exception",
          "796: @_disable_if_artifacts_only",
          "797: def _log_inputs():",
          "798:     request_message = _get_request_message(",
          "799:         LogInputs(),",
          "800:         schema={",
          "801:             \"run_id\": [_assert_required, _assert_string],",
          "802:             \"datasets\": [_assert_required, _assert_array],",
          "803:         },",
          "804:     )",
          "805:     run_id = request_message.run_id",
          "806:     datasets = [",
          "807:         DatasetInput.from_proto(proto_dataset_input)",
          "808:         for proto_dataset_input in request_message.datasets",
          "809:     ]",
          "811:     _get_tracking_store().log_inputs(run_id, datasets=datasets)",
          "812:     response_message = LogInputs.Response()",
          "813:     response = Response(mimetype=\"application/json\")",
          "814:     response.set_data(message_to_json(response_message))",
          "815:     return response",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1815:     ListArtifacts: _list_artifacts,",
          "1816:     GetMetricHistory: _get_metric_history,",
          "1817:     SearchExperiments: _search_experiments,",
          "1818:     # Model Registry APIs",
          "1819:     CreateRegisteredModel: _create_registered_model,",
          "1820:     GetRegisteredModel: _get_registered_model,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1842:     LogInputs: _log_inputs,",
          "",
          "---------------"
        ],
        "mlflow/sklearn/__init__.py||mlflow/sklearn/__init__.py": [
          "File: mlflow/sklearn/__init__.py -> mlflow/sklearn/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import mlflow",
          "26: from mlflow import pyfunc",
          "27: from mlflow.tracking.client import MlflowClient",
          "28: from mlflow.exceptions import MlflowException",
          "29: from mlflow.models import Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "28: from mlflow.data.numpy_dataset import from_numpy",
          "29: from mlflow.data.pandas_dataset import from_pandas",
          "30: from mlflow.entities.dataset_input import DatasetInput",
          "31: from mlflow.entities.input_tag import InputTag",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: from mlflow.utils.requirements_utils import _get_pinned_requirement",
          "50: from mlflow.utils.file_utils import write_to",
          "51: from mlflow.utils.docstring_utils import format_docstring, LOG_MODEL_PARAM_DOCS",
          "53: from mlflow.utils.model_utils import (",
          "54:     _get_flavor_configuration,",
          "55:     _validate_and_copy_code_paths,",
          "",
          "[Removed Lines]",
          "52: from mlflow.utils.mlflow_tags import MLFLOW_AUTOLOGGING",
          "",
          "[Added Lines]",
          "57: from mlflow.utils.mlflow_tags import (",
          "58:     MLFLOW_AUTOLOGGING,",
          "59:     MLFLOW_DATASET_CONTEXT,",
          "60: )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "950:     log_input_examples=False,",
          "951:     log_model_signatures=True,",
          "952:     log_models=True,",
          "953:     disable=False,",
          "954:     exclusive=False,",
          "955:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "961:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1189:                        If ``False``, trained models are not logged.",
          "1190:                        Input examples and model signatures, which are attributes of MLflow models,",
          "1191:                        are also omitted when ``log_models`` is ``False``.",
          "1192:     :param disable: If ``True``, disables the scikit-learn autologging integration. If ``False``,",
          "1193:                     enables the scikit-learn autologging integration.",
          "1194:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1201:     :param log_datasets: If ``True``, train and validation dataset information is logged to MLflow",
          "1202:                          Tracking if applicable. If ``False``, dataset information is not logged.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1230:         log_input_examples=log_input_examples,",
          "1231:         log_model_signatures=log_model_signatures,",
          "1232:         log_models=log_models,",
          "1233:         disable=disable,",
          "1234:         exclusive=exclusive,",
          "1235:         disable_for_unsupported_versions=disable_for_unsupported_versions,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1244:         log_datasets=log_datasets,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1246:     log_input_examples=False,",
          "1247:     log_model_signatures=True,",
          "1248:     log_models=True,",
          "1249:     disable=False,",
          "1250:     exclusive=False,",
          "1251:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1261:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1367:         # attempt to infer input examples on data that was mutated during training",
          "1368:         (X, y_true, sample_weight) = _get_X_y_and_sample_weight(self.fit, args, kwargs)",
          "1369:         autologging_client = MlflowAutologgingQueueingClient()",
          "1371:         params_logging_future = autologging_client.flush(synchronous=False)",
          "1372:         fit_output = original(self, *args, **kwargs)",
          "1373:         _log_posttraining_metadata(autologging_client, self, X, y_true, sample_weight)",
          "",
          "[Removed Lines]",
          "1370:         _log_pretraining_metadata(autologging_client, self, *args, **kwargs)",
          "",
          "[Added Lines]",
          "1383:         _log_pretraining_metadata(autologging_client, self, X, y_true)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1376:         return fit_output",
          "1378:     def _log_pretraining_metadata(",
          "1380:     ):  # pylint: disable=unused-argument",
          "1381:         \"\"\"",
          "1382:         Records metadata (e.g., params and tags) for a scikit-learn estimator prior to training.",
          "",
          "[Removed Lines]",
          "1379:         autologging_client, estimator, *args, **kwargs",
          "",
          "[Added Lines]",
          "1392:         autologging_client, estimator, X, y",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1387:         :param autologging_client: An instance of `MlflowAutologgingQueueingClient` used for",
          "1388:                                    efficiently logging run data to MLflow Tracking.",
          "1389:         :param estimator: The scikit-learn estimator for which to log metadata.",
          "1393:         \"\"\"",
          "1394:         # Deep parameter logging includes parameters from children of a given",
          "1395:         # estimator. For some meta estimators (e.g., pipelines), recording",
          "",
          "[Removed Lines]",
          "1390:         :param args: The arguments passed to the scikit-learn training routine (e.g.,",
          "1391:                      `fit()`, `fit_transform()`, ...).",
          "1392:         :param kwargs: The keyword arguments passed to the scikit-learn training routine.",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1408:             tags=_get_estimator_info_tags(estimator),",
          "1409:         )",
          "1411:     def _log_posttraining_metadata(autologging_client, estimator, X, y, sample_weight):",
          "1412:         \"\"\"",
          "1413:         Records metadata for a scikit-learn estimator after training has completed.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1421:         if log_datasets:",
          "1422:             try:",
          "1423:                 context_tags = context_registry.resolve_tags()",
          "1424:                 source = CodeDatasetSource(context_tags)",
          "1426:                 dataset = _create_dataset(X, source, y)",
          "1427:                 if dataset:",
          "1428:                     tags = [InputTag(key=MLFLOW_DATASET_CONTEXT, value=\"train\")]",
          "1429:                     dataset_input = DatasetInput(dataset=dataset._to_mlflow_entity(), tags=tags)",
          "1431:                     autologging_client.log_inputs(",
          "1432:                         run_id=mlflow.active_run().info.run_id, datasets=[dataset_input]",
          "1433:                     )",
          "1434:             except Exception as e:",
          "1435:                 _logger.warning(",
          "1436:                     \"Failed to log training dataset information to MLflow Tracking. Reason: %s\", e",
          "1437:                 )",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1616:             _AUTOLOGGING_METRICS_MANAGER.register_prediction_result(",
          "1617:                 run_id, eval_dataset_name, predict_result",
          "1618:             )",
          "1619:             return predict_result",
          "1620:         else:",
          "1621:             return original(self, *args, **kwargs)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1647:             if log_datasets:",
          "1648:                 try:",
          "1649:                     context_tags = context_registry.resolve_tags()",
          "1650:                     source = CodeDatasetSource(context_tags)",
          "1652:                     dataset = _create_dataset(eval_dataset, source)",
          "1654:                     # log the dataset",
          "1655:                     if dataset:",
          "1656:                         tags = [InputTag(key=MLFLOW_DATASET_CONTEXT, value=\"eval\")]",
          "1657:                         dataset_input = DatasetInput(dataset=dataset._to_mlflow_entity(), tags=tags)",
          "1659:                         # log the dataset",
          "1660:                         client = mlflow.MlflowClient()",
          "1661:                         client.log_inputs(run_id=run_id, datasets=[dataset_input])",
          "1662:                 except Exception as e:",
          "1663:                     _logger.warning(",
          "1664:                         \"Failed to log evaluation dataset information to \"",
          "1665:                         \"MLflow Tracking. Reason: %s\",",
          "1666:                         e,",
          "1667:                     )",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1807:             patched_fn_with_autolog_disabled,",
          "1808:             manage_run=False,",
          "1809:         )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1860:     def _create_dataset(X, source, y=None, dataset_name=None):",
          "1861:         # create a dataset",
          "1862:         from scipy.sparse import issparse",
          "1864:         if isinstance(X, pd.DataFrame):",
          "1865:             dataset = from_pandas(df=X, source=source)",
          "1866:         elif issparse(X):",
          "1867:             arr_X = X.toarray()",
          "1868:             if y is not None:",
          "1869:                 arr_y = y.toarray()",
          "1870:                 dataset = from_numpy(",
          "1871:                     features=arr_X, targets=arr_y, source=source, name=dataset_name",
          "1872:                 )",
          "1873:             else:",
          "1874:                 dataset = from_numpy(features=arr_X, source=source, name=dataset_name)",
          "1875:         elif isinstance(X, np.ndarray):",
          "1876:             if y is not None:",
          "1877:                 dataset = from_numpy(features=X, targets=y, source=source, name=dataset_name)",
          "1878:             else:",
          "1879:                 dataset = from_numpy(features=X, source=source, name=dataset_name)",
          "1880:         else:",
          "1881:             _logger.warning(\"Unrecognized dataset type %s. Dataset logging skipped.\", type(X))",
          "1882:             return None",
          "1883:         return dataset",
          "",
          "---------------"
        ],
        "mlflow/statsmodels.py||mlflow/statsmodels.py": [
          "File: mlflow/statsmodels.py -> mlflow/statsmodels.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "431: @autologging_integration(FLAVOR_NAME)",
          "432: def autolog(",
          "433:     log_models=True,",
          "434:     disable=False,",
          "435:     exclusive=False,",
          "436:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "434:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "451:                        If ``False``, trained models are not logged.",
          "452:                        Input examples and model signatures, which are attributes of MLflow models,",
          "453:                        are also omitted when ``log_models`` is ``False``.",
          "454:     :param disable: If ``True``, disables the statsmodels autologging integration. If ``False``,",
          "455:                     enables the statsmodels autologging integration.",
          "456:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "455:     :param log_datasets: If ``True``, dataset information is logged to MLflow Tracking.",
          "456:                          If ``False``, dataset information is not logged.",
          "",
          "---------------"
        ],
        "mlflow/store/artifact/artifact_repository_registry.py||mlflow/store/artifact/artifact_repository_registry.py": [
          "File: mlflow/store/artifact/artifact_repository_registry.py -> mlflow/store/artifact/artifact_repository_registry.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:             )",
          "72:         return repository(artifact_uri)",
          "75: _artifact_repository_registry = ArtifactRepositoryRegistry()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     def get_registered_artifact_repositories(self):",
          "75:         \"\"\"",
          "76:         Get all registered artifact repositories.",
          "78:         :return: A dictionary mapping string artifact URI schemes to artifact repositories.",
          "79:         \"\"\"",
          "80:         return self._registry",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:              requirements.",
          "105:     \"\"\"",
          "106:     return _artifact_repository_registry.get_artifact_repository(artifact_uri)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: def get_registered_artifact_repositories():",
          "118:     \"\"\"",
          "119:     Get all registered artifact repositories.",
          "121:     :return: A dictionary mapping string artifact URI schemes to artifact repositories.",
          "122:     \"\"\"",
          "123:     return _artifact_repository_registry.get_registered_artifact_repositories()",
          "",
          "---------------"
        ],
        "mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py||mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py": [
          "File: mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py -> mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"add datasets inputs input_tags tables",
          "3: Revision ID: 7f2a7d5fae7d",
          "4: Revises: 3500859a5d39",
          "5: Create Date: 2023-03-23 09:48:27.775166",
          "7: \"\"\"",
          "8: from alembic import op",
          "9: import sqlalchemy as sa",
          "10: from sqlalchemy.dialects.mysql import MEDIUMTEXT",
          "11: from mlflow.store.tracking.dbmodels.models import SqlDataset, SqlInputTag, SqlInput",
          "13: # revision identifiers, used by Alembic.",
          "14: revision = \"7f2a7d5fae7d\"",
          "15: down_revision = \"3500859a5d39\"",
          "16: branch_labels = None",
          "17: depends_on = None",
          "20: def upgrade():",
          "21:     op.create_table(",
          "22:         SqlDataset.__tablename__,",
          "23:         sa.Column(\"dataset_uuid\", sa.String(length=36), nullable=False),",
          "24:         sa.Column(",
          "25:             \"experiment_id\",",
          "26:             sa.Integer(),",
          "27:             sa.ForeignKey(\"experiments.experiment_id\"),",
          "28:             primary_key=True,",
          "29:             nullable=False,",
          "30:         ),",
          "31:         sa.Column(\"name\", sa.String(length=500), primary_key=True, nullable=False),",
          "32:         sa.Column(\"digest\", sa.String(length=36), primary_key=True, nullable=False),",
          "33:         sa.Column(\"dataset_source_type\", sa.String(length=36), nullable=False),",
          "34:         sa.Column(\"dataset_source\", sa.Text(), nullable=False),",
          "35:         sa.Column(\"dataset_schema\", sa.Text(), nullable=True),",
          "36:         sa.Column(\"dataset_profile\", sa.Text().with_variant(MEDIUMTEXT, \"mysql\"), nullable=True),",
          "37:         sa.PrimaryKeyConstraint(\"experiment_id\", \"name\", \"digest\", name=\"dataset_pk\"),",
          "38:         sa.Index(f\"index_{SqlDataset.__tablename__}_dataset_uuid\", \"dataset_uuid\", unique=False),",
          "39:         sa.Index(",
          "40:             f\"index_{SqlDataset.__tablename__}_experiment_id_dataset_source_type\",",
          "41:             \"experiment_id\",",
          "42:             \"dataset_source_type\",",
          "43:             unique=False,",
          "44:         ),",
          "45:     )",
          "46:     op.create_table(",
          "47:         SqlInput.__tablename__,",
          "48:         sa.Column(\"input_uuid\", sa.String(length=36), nullable=False),",
          "49:         sa.Column(\"source_type\", sa.String(length=36), primary_key=True, nullable=False),",
          "50:         sa.Column(\"source_id\", sa.String(length=36), primary_key=True, nullable=False),",
          "51:         sa.Column(\"destination_type\", sa.String(length=36), primary_key=True, nullable=False),",
          "52:         sa.Column(\"destination_id\", sa.String(length=36), primary_key=True, nullable=False),",
          "53:         sa.PrimaryKeyConstraint(",
          "54:             \"source_type\", \"source_id\", \"destination_type\", \"destination_id\", name=\"inputs_pk\"",
          "55:         ),",
          "56:         sa.Index(f\"index_{SqlInput.__tablename__}_input_uuid\", \"input_uuid\", unique=False),",
          "57:         sa.Index(",
          "58:             f\"index_{SqlInput.__tablename__}_destination_type_destination_id_source_type\",",
          "59:             \"destination_type\",",
          "60:             \"destination_id\",",
          "61:             \"source_type\",",
          "62:             unique=False,",
          "63:         ),",
          "64:     )",
          "65:     op.create_table(",
          "66:         SqlInputTag.__tablename__,",
          "67:         sa.Column(",
          "68:             \"input_uuid\",",
          "69:             sa.String(length=36),",
          "70:             primary_key=True,",
          "71:             nullable=False,",
          "72:         ),",
          "73:         sa.Column(\"name\", sa.String(length=255), primary_key=True, nullable=False),",
          "74:         sa.Column(\"value\", sa.String(length=500), nullable=False),",
          "75:         sa.PrimaryKeyConstraint(\"input_uuid\", \"name\", name=\"input_tags_pk\"),",
          "76:     )",
          "79: def downgrade():",
          "80:     pass",
          "",
          "---------------"
        ],
        "mlflow/store/tracking/abstract_store.py||mlflow/store/tracking/abstract_store.py": [
          "File: mlflow/store/tracking/abstract_store.py -> mlflow/store/tracking/abstract_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from abc import abstractmethod, ABCMeta",
          "4: from mlflow.store.entities.paged_list import PagedList",
          "5: from mlflow.store.tracking import SEARCH_MAX_RESULTS_DEFAULT",
          "9: @developer_stable",
          "",
          "[Removed Lines]",
          "3: from mlflow.entities import ViewType",
          "6: from mlflow.utils.annotations import developer_stable",
          "",
          "[Added Lines]",
          "2: from typing import List, Optional",
          "4: from mlflow.entities import ViewType, DatasetInput",
          "7: from mlflow.utils.annotations import developer_stable, experimental",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "347:         :return: None.",
          "348:         \"\"\"",
          "349:         pass",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:     @abstractmethod",
          "353:     @experimental",
          "354:     def log_inputs(self, run_id: str, datasets: Optional[List[DatasetInput]] = None):",
          "355:         \"\"\"",
          "356:         Log inputs, such as datasets, to the specified run.",
          "358:         :param run_id: String id for the run",
          "359:         :param datasets: List of :py:class:`mlflow.entities.DatasetInput` instances to log",
          "360:                          as inputs to the run.",
          "362:         :return: None.",
          "363:         \"\"\"",
          "364:         pass",
          "",
          "---------------"
        ],
        "mlflow/store/tracking/dbmodels/models.py||mlflow/store/tracking/dbmodels/models.py": [
          "File: mlflow/store/tracking/dbmodels/models.py -> mlflow/store/tracking/dbmodels/models.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: from sqlalchemy import (",
          "4:     Column,",
          "5:     String,",
          "6:     ForeignKey,",
          "7:     Integer,",
          "8:     CheckConstraint,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:     UnicodeText,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:     Run,",
          "24:     ViewType,",
          "25:     ExperimentTag,",
          "26: )",
          "27: from mlflow.entities.lifecycle_stage import LifecycleStage",
          "28: from mlflow.store.db.base_sql_model import Base",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:     Dataset,",
          "28:     InputTag,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "463:         :return: :py:class:`mlflow.entities.Param`.",
          "464:         \"\"\"",
          "465:         return Param(key=self.key, value=self.value)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471: class SqlDataset(Base):",
          "472:     __tablename__ = \"datasets\"",
          "473:     __table_args__ = (",
          "474:         PrimaryKeyConstraint(\"experiment_id\", \"name\", \"digest\", name=\"dataset_pk\"),",
          "475:         Index(f\"index_{__tablename__}_dataset_uuid\", \"dataset_uuid\"),",
          "476:         Index(",
          "477:             f\"index_{__tablename__}_experiment_id_dataset_source_type\",",
          "478:             \"experiment_id\",",
          "479:             \"dataset_source_type\",",
          "480:         ),",
          "481:     )",
          "483:     dataset_uuid = Column(String(36), nullable=False)",
          "484:     \"\"\"",
          "485:     Dataset UUID: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "486:     Part of *Primary Key* for ``datasets`` table.",
          "487:     \"\"\"",
          "488:     experiment_id = Column(Integer, ForeignKey(\"experiments.experiment_id\"))",
          "489:     \"\"\"",
          "490:     Experiment ID to which this dataset belongs: *Foreign Key* into ``experiments`` table.",
          "491:     \"\"\"",
          "492:     name = Column(String(500), nullable=False)",
          "493:     \"\"\"",
          "494:     Param name: `String` (limit 500 characters). Defined as *Non-null* in schema.",
          "495:     Part of *Primary Key* for ``datasets`` table.",
          "496:     \"\"\"",
          "497:     digest = Column(String(36), nullable=False)",
          "498:     \"\"\"",
          "499:     Param digest: `String` (limit 500 characters). Defined as *Non-null* in schema.",
          "500:     Part of *Primary Key* for ``datasets`` table.",
          "501:     \"\"\"",
          "502:     dataset_source_type = Column(String(36), nullable=False)",
          "503:     \"\"\"",
          "504:     Param dataset_source_type: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "505:     \"\"\"",
          "506:     dataset_source = Column(UnicodeText, nullable=False)",
          "507:     \"\"\"",
          "508:     Param dataset_source: `UnicodeText`. Defined as *Non-null* in schema.",
          "509:     \"\"\"",
          "510:     dataset_schema = Column(UnicodeText, nullable=True)",
          "511:     \"\"\"",
          "512:     Param dataset_schema: `UnicodeText`.",
          "513:     \"\"\"",
          "514:     dataset_profile = Column(UnicodeText, nullable=True)",
          "515:     \"\"\"",
          "516:     Param dataset_profile: `UnicodeText`.",
          "517:     \"\"\"",
          "519:     def __repr__(self):",
          "520:         return \"<SqlDataset ({}, {}, {}, {}, {}, {}, {}, {})>\".format(",
          "521:             self.dataset_uuid,",
          "522:             self.experiment_id,",
          "523:             self.name,",
          "524:             self.digest,",
          "525:             self.dataset_source_type,",
          "526:             self.dataset_source,",
          "527:             self.dataset_schema,",
          "528:             self.dataset_profile,",
          "529:         )",
          "531:     def to_mlflow_entity(self):",
          "532:         \"\"\"",
          "533:         Convert DB model to corresponding MLflow entity.",
          "535:         :return: :py:class:`mlflow.entities.Dataset`.",
          "536:         \"\"\"",
          "537:         return Dataset(",
          "538:             name=self.name,",
          "539:             digest=self.digest,",
          "540:             source_type=self.dataset_source_type,",
          "541:             source=self.dataset_source,",
          "542:             schema=self.dataset_schema,",
          "543:             profile=self.dataset_profile,",
          "544:         )",
          "547: class SqlInput(Base):",
          "548:     __tablename__ = \"inputs\"",
          "549:     __table_args__ = (",
          "550:         PrimaryKeyConstraint(",
          "551:             \"source_type\", \"source_id\", \"destination_type\", \"destination_id\", name=\"inputs_pk\"",
          "552:         ),",
          "553:         Index(f\"index_{__tablename__}_input_uuid\", \"input_uuid\"),",
          "554:         Index(",
          "555:             f\"index_{__tablename__}_destination_type_destination_id_source_type\",",
          "556:             \"destination_type\",",
          "557:             \"destination_id\",",
          "558:             \"source_type\",",
          "559:         ),",
          "560:     )",
          "562:     input_uuid = Column(String(36), nullable=False)",
          "563:     \"\"\"",
          "564:     Input UUID: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "565:     \"\"\"",
          "566:     source_type = Column(String(36), nullable=False)",
          "567:     \"\"\"",
          "568:     Source type: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "569:     Part of *Primary Key* for ``inputs`` table.",
          "570:     \"\"\"",
          "571:     source_id = Column(String(36), nullable=False)",
          "572:     \"\"\"",
          "573:     Source Id: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "574:     Part of *Primary Key* for ``inputs`` table.",
          "575:     \"\"\"",
          "576:     destination_type = Column(String(36), nullable=False)",
          "577:     \"\"\"",
          "578:     Destination type: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "579:     Part of *Primary Key* for ``inputs`` table.",
          "580:     \"\"\"",
          "581:     destination_id = Column(String(36), nullable=False)",
          "582:     \"\"\"",
          "583:     Destination Id: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "584:     Part of *Primary Key* for ``inputs`` table.",
          "585:     \"\"\"",
          "587:     def __repr__(self):",
          "588:         return \"<SqlInput ({}, {}, {}, {}, {})>\".format(",
          "589:             self.input_uuid,",
          "590:             self.source_type,",
          "591:             self.source_id,",
          "592:             self.destination_type,",
          "593:             self.destination_id,",
          "594:         )",
          "597: class SqlInputTag(Base):",
          "598:     __tablename__ = \"input_tags\"",
          "599:     __table_args__ = (PrimaryKeyConstraint(\"input_uuid\", \"name\", name=\"input_tags_pk\"),)",
          "601:     input_uuid = Column(String(36), ForeignKey(\"inputs.input_uuid\"), nullable=False)",
          "602:     \"\"\"",
          "603:     Input UUID: `String` (limit 36 characters). Defined as *Non-null* in schema.",
          "605:     \"\"\"",
          "606:     name = Column(String(255), nullable=False)",
          "607:     \"\"\"",
          "608:     Param name: `String` (limit 255 characters). Defined as *Non-null* in schema.",
          "609:     Part of *Primary Key* for ``input_tags`` table.",
          "610:     \"\"\"",
          "611:     value = Column(String(500), nullable=False)",
          "612:     \"\"\"",
          "613:     Param value: `String` (limit 500 characters). Defined as *Non-null* in schema.",
          "614:     Part of *Primary Key* for ``input_tags`` table.",
          "615:     \"\"\"",
          "617:     def __repr__(self):",
          "618:         return \"<SqlInputTag ({}, {}, {})>\".format(self.input_uuid, self.name, self.value)",
          "620:     def to_mlflow_entity(self):",
          "621:         \"\"\"",
          "622:         Convert DB model to corresponding MLflow entity.",
          "624:         :return: :py:class:`mlflow.entities.InputTag`.",
          "625:         \"\"\"",
          "626:         return InputTag(key=self.name, value=self.value)",
          "",
          "---------------"
        ],
        "mlflow/store/tracking/file_store.py||mlflow/store/tracking/file_store.py": [
          "File: mlflow/store/tracking/file_store.py -> mlflow/store/tracking/file_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import json",
          "2: import logging",
          "3: import time",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import hashlib",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6: import shutil",
          "8: import uuid",
          "10: from mlflow.entities import (",
          "11:     Experiment,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: from typing import List, Dict, NamedTuple, Optional",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "19:     ViewType,",
          "20:     SourceType,",
          "21:     ExperimentTag,",
          "22: )",
          "23: from mlflow.entities.lifecycle_stage import LifecycleStage",
          "24: from mlflow.entities.run_info import check_run_is_active",
          "25: from mlflow.exceptions import MlflowException, MissingConfigException",
          "26: from mlflow.protos import databricks_pb2",
          "27: from mlflow.protos.databricks_pb2 import (",
          "28:     INTERNAL_ERROR,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     Dataset,",
          "25:     DatasetInput,",
          "26:     InputTag,",
          "27:     RunInputs,",
          "32: from mlflow.protos.internal_pb2 import InputVertexType",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "140:     PARAMS_FOLDER_NAME = \"params\"",
          "141:     TAGS_FOLDER_NAME = \"tags\"",
          "142:     EXPERIMENT_TAGS_FOLDER_NAME = \"tags\"",
          "144:     META_DATA_FILE_NAME = \"meta.yaml\"",
          "145:     DEFAULT_EXPERIMENT_ID = \"0\"",
          "",
          "[Removed Lines]",
          "143:     RESERVED_EXPERIMENT_FOLDERS = [EXPERIMENT_TAGS_FOLDER_NAME]",
          "",
          "[Added Lines]",
          "150:     DATASETS_FOLDER_NAME = \"datasets\"",
          "151:     INPUTS_FOLDER_NAME = \"inputs\"",
          "152:     RESERVED_EXPERIMENT_FOLDERS = [EXPERIMENT_TAGS_FOLDER_NAME, DATASETS_FOLDER_NAME]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "655:         metrics = self._get_all_metrics(run_info)",
          "656:         params = self._get_all_params(run_info)",
          "657:         tags = self._get_all_tags(run_info)",
          "658:         if not run_info.run_name:",
          "659:             run_name = _get_run_name_from_tags(tags)",
          "660:             if run_name:",
          "661:                 run_info._set_run_name(run_name)",
          "664:     def _get_run_info(self, run_uuid):",
          "665:         \"\"\"",
          "",
          "[Removed Lines]",
          "662:         return Run(run_info, RunData(metrics, params, tags))",
          "",
          "[Added Lines]",
          "667:         inputs: RunInputs = self._get_all_inputs(run_info)",
          "672:         return Run(run_info, RunData(metrics, params, tags), inputs)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1072:         except Exception as e:",
          "1073:             raise MlflowException(e, INTERNAL_ERROR)",
          "1075:     @staticmethod",
          "1076:     def _read_yaml(root, file_name, retries=2):",
          "1077:         \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1085:     def log_inputs(self, run_id: str, datasets: Optional[List[DatasetInput]] = None):",
          "1086:         \"\"\"",
          "1087:         Log inputs, such as datasets, to the specified run.",
          "1089:         :param run_id: String id for the run",
          "1090:         :param datasets: List of :py:class:`mlflow.entities.DatasetInput` instances to log",
          "1091:                          as inputs to the run.",
          "1093:         :return: None.",
          "1094:         \"\"\"",
          "1095:         _validate_run_id(run_id)",
          "1096:         run_info = self._get_run_info(run_id)",
          "1097:         check_run_is_active(run_info)",
          "1099:         if datasets is None:",
          "1100:             return",
          "1102:         experiment_dir = self._get_experiment_path(run_info.experiment_id, assert_exists=True)",
          "1103:         run_dir = self._get_run_dir(run_info.experiment_id, run_id)",
          "1105:         for dataset_input in datasets:",
          "1106:             dataset = dataset_input.dataset",
          "1107:             dataset_id = FileStore._get_dataset_id(",
          "1108:                 dataset_name=dataset.name, dataset_digest=dataset.digest",
          "1109:             )",
          "1110:             dataset_dir = os.path.join(experiment_dir, FileStore.DATASETS_FOLDER_NAME, dataset_id)",
          "1111:             if not os.path.exists(dataset_dir):",
          "1112:                 os.makedirs(dataset_dir, exist_ok=True)",
          "1113:                 write_yaml(dataset_dir, FileStore.META_DATA_FILE_NAME, dict(dataset))",
          "1115:             input_id = FileStore._get_input_id(dataset_id=dataset_id, run_id=run_id)",
          "1116:             input_dir = os.path.join(run_dir, FileStore.INPUTS_FOLDER_NAME, input_id)",
          "1117:             if not os.path.exists(input_dir):",
          "1118:                 os.makedirs(input_dir, exist_ok=True)",
          "1119:                 fs_input = FileStore._FileStoreInput(",
          "1120:                     source_type=InputVertexType.DATASET,",
          "1121:                     source_id=dataset_id,",
          "1122:                     destination_type=InputVertexType.RUN,",
          "1123:                     destination_id=run_id,",
          "1124:                     tags={tag.key: tag.value for tag in dataset_input.tags},",
          "1125:                 )",
          "1126:                 fs_input.write_yaml(input_dir, FileStore.META_DATA_FILE_NAME)",
          "1128:     @staticmethod",
          "1129:     def _get_dataset_id(dataset_name: str, dataset_digest: str) -> str:",
          "1130:         md5 = hashlib.md5(dataset_name.encode(\"utf-8\"))",
          "1131:         md5.update(dataset_digest.encode(\"utf-8\"))",
          "1132:         return md5.hexdigest()",
          "1134:     @staticmethod",
          "1135:     def _get_input_id(dataset_id: str, run_id: str) -> str:",
          "1136:         md5 = hashlib.md5(dataset_id.encode(\"utf-8\"))",
          "1137:         md5.update(run_id.encode(\"utf-8\"))",
          "1138:         return md5.hexdigest()",
          "1140:     class _FileStoreInput(NamedTuple):",
          "1141:         source_type: int",
          "1142:         source_id: str",
          "1143:         destination_type: int",
          "1144:         destination_id: str",
          "1145:         tags: Dict[str, str]",
          "1147:         def write_yaml(self, root: str, file_name: str):",
          "1148:             dict_for_yaml = {",
          "1149:                 \"source_type\": InputVertexType.Name(self.source_type),",
          "1150:                 \"source_id\": self.source_id,",
          "1151:                 \"destination_type\": InputVertexType.Name(self.destination_type),",
          "1152:                 \"destination_id\": self.source_id,",
          "1153:                 \"tags\": self.tags,",
          "1154:             }",
          "1155:             write_yaml(root, file_name, dict_for_yaml)",
          "1157:         @classmethod",
          "1158:         def from_yaml(cls, root, file_name):",
          "1159:             dict_from_yaml = FileStore._read_yaml(root, file_name)",
          "1160:             return cls(",
          "1161:                 source_type=InputVertexType.Value(dict_from_yaml[\"source_type\"]),",
          "1162:                 source_id=dict_from_yaml[\"source_id\"],",
          "1163:                 destination_type=InputVertexType.Value(dict_from_yaml[\"destination_type\"]),",
          "1164:                 destination_id=dict_from_yaml[\"destination_id\"],",
          "1165:                 tags=dict_from_yaml[\"tags\"],",
          "1166:             )",
          "1168:     def _get_all_inputs(self, run_info: RunInfo) -> RunInputs:",
          "1169:         run_dir = self._get_run_dir(run_info.experiment_id, run_info.run_id)",
          "1170:         inputs_parent_path = os.path.join(run_dir, FileStore.INPUTS_FOLDER_NAME)",
          "1171:         experiment_dir = self._get_experiment_path(run_info.experiment_id, assert_exists=True)",
          "1172:         datasets_parent_path = os.path.join(experiment_dir, FileStore.DATASETS_FOLDER_NAME)",
          "1173:         if not os.path.exists(inputs_parent_path) or not os.path.exists(datasets_parent_path):",
          "1174:             return RunInputs(dataset_inputs=[])",
          "1176:         dataset_dirs = os.listdir(datasets_parent_path)",
          "1177:         dataset_inputs = []",
          "1178:         for input_dir in os.listdir(inputs_parent_path):",
          "1179:             input_dir_full_path = os.path.join(inputs_parent_path, input_dir)",
          "1180:             fs_input = FileStore._FileStoreInput.from_yaml(",
          "1181:                 input_dir_full_path, FileStore.META_DATA_FILE_NAME",
          "1182:             )",
          "1183:             if fs_input.source_type != InputVertexType.DATASET:",
          "1184:                 logging.warning(",
          "1185:                     f\"Encountered invalid run input source type '{fs_input.source_type}'. Skipping.\"",
          "1186:                 )",
          "1187:                 continue",
          "1189:             matching_dataset_dirs = [d for d in dataset_dirs if d == fs_input.source_id]",
          "1190:             if not matching_dataset_dirs:",
          "1191:                 logging.warning(",
          "1192:                     f\"Failed to find dataset with ID '{fs_input.source_id}' referenced as an input\"",
          "1193:                     f\" of the run with ID '{run_info.run_id}'. Skipping.\"",
          "1194:                 )",
          "1195:                 continue",
          "1196:             elif len(matching_dataset_dirs) > 1:",
          "1197:                 logging.warning(",
          "1198:                     f\"Found multiple datasets with ID '{fs_input.source_id}'. Using the first one.\"",
          "1199:                 )",
          "1201:             dataset_dir = matching_dataset_dirs[0]",
          "1202:             dataset = FileStore._get_dataset_from_dir(datasets_parent_path, dataset_dir)",
          "1203:             dataset_input = DatasetInput(",
          "1204:                 dataset=dataset,",
          "1205:                 tags=[InputTag(key=key, value=value) for key, value in fs_input.tags.items()],",
          "1206:             )",
          "1207:             dataset_inputs.append(dataset_input)",
          "1209:         return RunInputs(dataset_inputs=dataset_inputs)",
          "1211:     @staticmethod",
          "1212:     def _get_dataset_from_dir(parent_path, dataset_dir) -> Dataset:",
          "1213:         dataset_dict = FileStore._read_yaml(",
          "1214:             os.path.join(parent_path, dataset_dir), FileStore.META_DATA_FILE_NAME",
          "1215:         )",
          "1216:         return Dataset.from_dictionary(dataset_dict)",
          "",
          "---------------"
        ],
        "mlflow/store/tracking/rest_store.py||mlflow/store/tracking/rest_store.py": [
          "File: mlflow/store/tracking/rest_store.py -> mlflow/store/tracking/rest_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: from mlflow.exceptions import MlflowException",
          "3: from mlflow.protos import databricks_pb2",
          "4: from mlflow.protos.service_pb2 import (",
          "",
          "[Removed Lines]",
          "1: from mlflow.entities import Experiment, Run, RunInfo, Metric, ViewType",
          "",
          "[Added Lines]",
          "1: from typing import List, Optional",
          "3: from mlflow.entities import Experiment, Run, RunInfo, Metric, ViewType, DatasetInput",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     DeleteTag,",
          "25:     SetExperimentTag,",
          "26:     GetExperimentByName,",
          "27: )",
          "28: from mlflow.store.tracking.abstract_store import AbstractStore",
          "29: from mlflow.store.entities.paged_list import PagedList",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:     LogInputs,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "323:     def record_logged_model(self, run_id, mlflow_model):",
          "324:         req_body = message_to_json(LogModel(run_id=run_id, model_json=mlflow_model.to_json()))",
          "325:         self._call_endpoint(LogModel, req_body)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:     def log_inputs(self, run_id: str, datasets: Optional[List[DatasetInput]] = None):",
          "331:         \"\"\"",
          "332:         Log inputs, such as datasets, to the specified run.",
          "334:         :param run_id: String id for the run",
          "335:         :param datasets: List of :py:class:`mlflow.entities.DatasetInput` instances to log",
          "336:                          as inputs to the run.",
          "338:         :return: None.",
          "339:         \"\"\"",
          "340:         datasets_protos = [dataset.to_proto() for dataset in datasets]",
          "341:         req_body = message_to_json(LogInputs(run_id=run_id, datasets=datasets_protos))",
          "342:         self._call_endpoint(LogInputs, req_body)",
          "",
          "---------------"
        ],
        "mlflow/store/tracking/sqlalchemy_store.py||mlflow/store/tracking/sqlalchemy_store.py": [
          "File: mlflow/store/tracking/sqlalchemy_store.py -> mlflow/store/tracking/sqlalchemy_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import uuid",
          "6: import threading",
          "7: from functools import reduce",
          "9: import math",
          "10: import sqlalchemy",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: from typing import List, Optional",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12: from sqlalchemy import sql",
          "13: from sqlalchemy.future import select",
          "16: from mlflow.entities.lifecycle_stage import LifecycleStage",
          "17: from mlflow.store.tracking import SEARCH_MAX_RESULTS_DEFAULT, SEARCH_MAX_RESULTS_THRESHOLD",
          "18: from mlflow.store.db.db_types import MYSQL, MSSQL",
          "",
          "[Removed Lines]",
          "15: from mlflow.entities import RunTag, Metric",
          "",
          "[Added Lines]",
          "16: from mlflow.entities import RunTag, Metric, DatasetInput",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "25:     SqlTag,",
          "26:     SqlExperimentTag,",
          "27:     SqlLatestMetric,",
          "28: )",
          "29: from mlflow.store.db.base_sql_model import Base",
          "31: from mlflow.store.tracking.abstract_store import AbstractStore",
          "32: from mlflow.store.entities.paged_list import PagedList",
          "33: from mlflow.entities import ViewType",
          "",
          "[Removed Lines]",
          "30: from mlflow.entities import RunStatus, SourceType, Experiment",
          "",
          "[Added Lines]",
          "29:     SqlDataset,",
          "30:     SqlInput,",
          "31:     SqlInputTag,",
          "34: from mlflow.entities import RunStatus, SourceType, Experiment, Run, RunInputs",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "48: from mlflow.utils.validation import (",
          "49:     _validate_batch_log_limits,",
          "50:     _validate_batch_log_data,",
          "51:     _validate_run_id,",
          "52:     _validate_metric,",
          "53:     _validate_experiment_tag,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:     _validate_dataset_inputs,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "516:         return runs[0]",
          "518:     @staticmethod",
          "519:     def _get_eager_run_query_options():",
          "520:         \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "523:     def _get_run_inputs(self, session, run_uuids):",
          "524:         datasets = (",
          "525:             session.query(",
          "526:                 SqlInput.input_uuid, SqlInput.destination_id.label(\"run_uuid\"), SqlDataset",
          "527:             )",
          "528:             .select_from(SqlDataset)",
          "529:             .join(SqlInput, SqlInput.source_id == SqlDataset.dataset_uuid)",
          "530:             .filter(SqlInput.destination_type == \"RUN\", SqlInput.destination_id.in_(run_uuids))",
          "531:             .order_by(\"run_uuid\")",
          "532:         ).all()",
          "533:         input_uuids = [dataset.input_uuid for dataset in datasets]",
          "534:         input_tags = (",
          "535:             session.query(",
          "536:                 SqlInput.input_uuid, SqlInput.destination_id.label(\"run_uuid\"), SqlInputTag",
          "537:             )",
          "538:             .join(SqlInput, (SqlInput.input_uuid == SqlInputTag.input_uuid))",
          "539:             .filter(SqlInput.input_uuid.in_(input_uuids))",
          "540:             .order_by(\"run_uuid\")",
          "541:         ).all()",
          "543:         all_dataset_inputs = []",
          "544:         for run_uuid in run_uuids:",
          "545:             dataset_inputs = []",
          "546:             for input_uuid, dataset_run_uuid, dataset_sql in datasets:",
          "547:                 if run_uuid == dataset_run_uuid:",
          "548:                     dataset_entity = dataset_sql.to_mlflow_entity()",
          "549:                     tags = []",
          "550:                     for tag_input_uuid, tag_run_uuid, tag_sql in input_tags:",
          "551:                         if input_uuid == tag_input_uuid and run_uuid == tag_run_uuid:",
          "552:                             tags.append(tag_sql.to_mlflow_entity())",
          "553:                     dataset_input_entity = DatasetInput(dataset=dataset_entity, tags=tags)",
          "554:                     dataset_inputs.append(dataset_input_entity)",
          "555:             all_dataset_inputs.append(dataset_inputs)",
          "556:         return all_dataset_inputs",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "585:             # ``run.to_mlflow_entity()``, so eager loading helps avoid additional database queries",
          "586:             # that are otherwise executed at attribute access time under a lazy loading model.",
          "587:             run = self._get_run(run_uuid=run_id, session=session, eager=True)",
          "590:     def restore_run(self, run_id):",
          "591:         with self.ManagedSessionMaker() as session:",
          "",
          "[Removed Lines]",
          "588:             return run.to_mlflow_entity()",
          "",
          "[Added Lines]",
          "628:             mlflow_run = run.to_mlflow_entity()",
          "629:             # Get the run inputs and add to the run",
          "630:             inputs = self._get_run_inputs(run_uuids=[run_id], session=session)[0]",
          "631:             return Run(mlflow_run.info, mlflow_run.data, RunInputs(dataset_inputs=inputs))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1196:             queried_runs = session.execute(stmt).scalars(SqlRun).all()",
          "1198:             runs = [run.to_mlflow_entity() for run in queried_runs]",
          "1203:     def log_batch(self, run_id, metrics, params, tags):",
          "1204:         _validate_run_id(run_id)",
          "",
          "[Removed Lines]",
          "1199:             next_page_token = compute_next_token(len(runs))",
          "1201:         return runs, next_page_token",
          "",
          "[Added Lines]",
          "1242:             run_ids = [run.info.run_id for run in runs]",
          "1244:             # add inputs to runs",
          "1245:             inputs = self._get_run_inputs(run_uuids=run_ids, session=session)",
          "1246:             runs_with_inputs = []",
          "1247:             for i, run in enumerate(runs):",
          "1248:                 runs_with_inputs.append(",
          "1249:                     Run(run.info, run.data, RunInputs(dataset_inputs=inputs[i]))",
          "1250:                 )",
          "1252:             next_page_token = compute_next_token(len(runs_with_inputs))",
          "1254:         return runs_with_inputs, next_page_token",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1239:             _validate_tag(MLFLOW_LOGGED_MODELS, value)",
          "1240:             session.merge(SqlTag(key=MLFLOW_LOGGED_MODELS, value=value, run_uuid=run_id))",
          "1243: def _get_attributes_filtering_clauses(parsed, dialect):",
          "1244:     clauses = []",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295:     def log_inputs(self, run_id: str, datasets: Optional[List[DatasetInput]] = None):",
          "1296:         \"\"\"",
          "1297:         Log inputs, such as datasets, to the specified run.",
          "1299:         :param run_id: String id for the run",
          "1300:         :param datasets: List of :py:class:`mlflow.entities.DatasetInput` instances to log",
          "1301:                          as inputs to the run.",
          "1303:         :return: None.",
          "1304:         \"\"\"",
          "1305:         _validate_run_id(run_id)",
          "1306:         if datasets is not None:",
          "1307:             if not isinstance(datasets, list):",
          "1308:                 raise TypeError(",
          "1309:                     \"Argument 'datasets' should be a list, got '{}'\".format(type(datasets))",
          "1310:                 )",
          "1311:             _validate_dataset_inputs(datasets)",
          "1313:         with self.ManagedSessionMaker() as session:",
          "1314:             run = self._get_run(run_uuid=run_id, session=session)",
          "1315:             experiment_id = run.experiment_id",
          "1316:             self._check_run_is_active(run)",
          "1317:             try:",
          "1318:                 self._log_inputs_impl(experiment_id, run_id, datasets)",
          "1319:             except MlflowException as e:",
          "1320:                 raise e",
          "1321:             except Exception as e:",
          "1322:                 raise MlflowException(e, INTERNAL_ERROR)",
          "1324:     def _log_inputs_impl(",
          "1325:         self, experiment_id, run_id, dataset_inputs: Optional[List[DatasetInput]] = None",
          "1326:     ):",
          "1327:         if dataset_inputs is None or len(dataset_inputs) == 0:",
          "1328:             return",
          "1329:         for dataset_input in dataset_inputs:",
          "1330:             if dataset_input.dataset is None:",
          "1331:                 raise MlflowException(",
          "1332:                     \"Dataset input must have a dataset associated with it.\", INTERNAL_ERROR",
          "1333:                 )",
          "1335:         # dedup dataset_inputs list if two dataset inputs have the same name and digest",
          "1336:         # keeping the first occurrence",
          "1337:         name_digest_keys = {}",
          "1338:         for dataset_input in dataset_inputs:",
          "1339:             key = (dataset_input.dataset.name, dataset_input.dataset.digest)",
          "1340:             if key not in name_digest_keys:",
          "1341:                 name_digest_keys[key] = dataset_input",
          "1342:         dataset_inputs = list(name_digest_keys.values())",
          "1344:         with self.ManagedSessionMaker() as session:",
          "1345:             dataset_names_to_check = [",
          "1346:                 dataset_input.dataset.name for dataset_input in dataset_inputs",
          "1347:             ]",
          "1348:             dataset_digests_to_check = [",
          "1349:                 dataset_input.dataset.digest for dataset_input in dataset_inputs",
          "1350:             ]",
          "1351:             # find all datasets with the same name and digest",
          "1352:             # if the dataset already exists, use the existing dataset uuid",
          "1353:             existing_datasets = (",
          "1354:                 session.query(SqlDataset)",
          "1355:                 .filter(SqlDataset.name.in_(dataset_names_to_check))",
          "1356:                 .filter(SqlDataset.digest.in_(dataset_digests_to_check))",
          "1357:                 .all()",
          "1358:             )",
          "1359:             dataset_uuids = {}",
          "1360:             for existing_dataset in existing_datasets:",
          "1361:                 dataset_uuids[",
          "1362:                     (existing_dataset.name, existing_dataset.digest)",
          "1363:                 ] = existing_dataset.dataset_uuid",
          "1365:             # collect all objects to write to DB in a single list",
          "1366:             objs_to_write = []",
          "1368:             # add datasets to objs_to_write",
          "1369:             for dataset_input in dataset_inputs:",
          "1370:                 if (dataset_input.dataset.name, dataset_input.dataset.digest) not in dataset_uuids:",
          "1371:                     new_dataset_uuid = uuid.uuid4().hex",
          "1372:                     dataset_uuids[",
          "1373:                         (dataset_input.dataset.name, dataset_input.dataset.digest)",
          "1374:                     ] = new_dataset_uuid",
          "1375:                     objs_to_write.append(",
          "1376:                         SqlDataset(",
          "1377:                             dataset_uuid=new_dataset_uuid,",
          "1378:                             experiment_id=experiment_id,",
          "1379:                             name=dataset_input.dataset.name,",
          "1380:                             digest=dataset_input.dataset.digest,",
          "1381:                             dataset_source_type=dataset_input.dataset.source_type,",
          "1382:                             dataset_source=dataset_input.dataset.source,",
          "1383:                             dataset_schema=dataset_input.dataset.schema,",
          "1384:                             dataset_profile=dataset_input.dataset.profile,",
          "1385:                         )",
          "1386:                     )",
          "1388:             # find all inputs with the same source_id and destination_id",
          "1389:             # if the input already exists, use the existing input uuid",
          "1390:             existing_inputs = (",
          "1391:                 session.query(SqlInput)",
          "1392:                 .filter(SqlInput.source_type == \"DATASET\")",
          "1393:                 .filter(SqlInput.source_id.in_(dataset_uuids.values()))",
          "1394:                 .filter(SqlInput.destination_type == \"RUN\")",
          "1395:                 .filter(SqlInput.destination_id == run_id)",
          "1396:                 .all()",
          "1397:             )",
          "1398:             input_uuids = {}",
          "1399:             for existing_input in existing_inputs:",
          "1400:                 input_uuids[",
          "1401:                     (existing_input.source_id, existing_input.destination_id)",
          "1402:                 ] = existing_input.input_uuid",
          "1404:             # add input edges to objs_to_write",
          "1405:             for dataset_input in dataset_inputs:",
          "1406:                 dataset_uuid = dataset_uuids[",
          "1407:                     (dataset_input.dataset.name, dataset_input.dataset.digest)",
          "1408:                 ]",
          "1409:                 if (dataset_uuid, run_id) not in input_uuids:",
          "1410:                     new_input_uuid = uuid.uuid4().hex",
          "1411:                     input_uuids[",
          "1412:                         (dataset_input.dataset.name, dataset_input.dataset.digest)",
          "1413:                     ] = new_input_uuid",
          "1414:                     objs_to_write.append(",
          "1415:                         SqlInput(",
          "1416:                             input_uuid=new_input_uuid,",
          "1417:                             source_type=\"DATASET\",",
          "1418:                             source_id=dataset_uuid,",
          "1419:                             destination_type=\"RUN\",",
          "1420:                             destination_id=run_id,",
          "1421:                         )",
          "1422:                     )",
          "1423:                     # add input tags to objs_to_write",
          "1424:                     for input_tag in dataset_input.tags:",
          "1425:                         objs_to_write.append(",
          "1426:                             SqlInputTag(",
          "1427:                                 input_uuid=new_input_uuid,",
          "1428:                                 name=input_tag.key,",
          "1429:                                 value=input_tag.value,",
          "1430:                             )",
          "1431:                         )",
          "1433:             self._save_to_db(session, objs_to_write)",
          "",
          "---------------"
        ],
        "mlflow/tensorflow/__init__.py||mlflow/tensorflow/__init__.py": [
          "File: mlflow/tensorflow/__init__.py -> mlflow/tensorflow/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import mlflow",
          "27: from mlflow import pyfunc",
          "28: from mlflow.types.schema import TensorSpec",
          "29: from mlflow.tracking.client import MlflowClient",
          "30: from mlflow.exceptions import MlflowException",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "29: from mlflow.data.numpy_dataset import from_numpy",
          "30: from mlflow.data.tensorflow_dataset import from_tensorflow",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67: from mlflow.utils.time_utils import get_current_time_millis",
          "68: from mlflow.entities import Metric",
          "69: from mlflow.tracking._model_registry import DEFAULT_AWAIT_MAX_SLEEP_SECONDS",
          "70: from mlflow.models import infer_signature",
          "71: from mlflow.exceptions import INVALID_PARAMETER_VALUE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73: from mlflow.tracking.context import registry as context_registry",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "979: def autolog(",
          "980:     every_n_iter=1,",
          "981:     log_models=True,",
          "982:     disable=False,",
          "983:     exclusive=False,",
          "984:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "986:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1026:                          100 will log metrics at step 0, 100, 200, etc.",
          "1027:     :param log_models: If ``True``, trained models are logged as MLflow model artifacts.",
          "1028:                        If ``False``, trained models are not logged.",
          "1029:     :param disable: If ``True``, disables the TensorFlow autologging integration. If ``False``,",
          "1030:                     enables the TensorFlow integration autologging integration.",
          "1031:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1034:     :param log_datasets: If ``True``, dataset information is logged to MLflow Tracking.",
          "1035:                          If ``False``, dataset information is not logged.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1252:                 early_stop_callback = _get_early_stop_callback(callbacks)",
          "1253:                 _log_early_stop_callback_params(early_stop_callback)",
          "1255:                 history = original(inst, *args, **kwargs)",
          "1257:                 if log_models:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1262:                 if log_datasets:",
          "1263:                     try:",
          "1264:                         context_tags = context_registry.resolve_tags()",
          "1265:                         source = CodeDatasetSource(tags=context_tags)",
          "1267:                         x = kwargs[\"x\"] if \"x\" in kwargs else args[0]",
          "1268:                         if \"y\" in kwargs:",
          "1269:                             y = kwargs[\"y\"]",
          "1270:                         elif len(args) >= 2:",
          "1271:                             y = args[1]",
          "1272:                         else:",
          "1273:                             y = None",
          "1275:                         if \"validation_data\" in kwargs:",
          "1276:                             validation_data = kwargs[\"validation_data\"]",
          "1277:                         elif len(args) >= 8:",
          "1278:                             validation_data = args[7]",
          "1279:                         else:",
          "1280:                             validation_data = None",
          "1281:                         _log_tensorflow_dataset(x, source, \"train\", targets=y)",
          "1282:                         if validation_data is not None:",
          "1283:                             _log_tensorflow_dataset(validation_data, source, \"eval\")",
          "1285:                     except Exception as e:",
          "1286:                         _logger.warning(",
          "1287:                             \"Failed to log training dataset information to \"",
          "1288:                             \"MLflow Tracking. Reason: %s\",",
          "1289:                             e,",
          "1290:                         )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1287:     for p in managed:",
          "1288:         safe_patch(FLAVOR_NAME, *p, manage_run=True)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1328: def _log_tensorflow_dataset(tensorflow_dataset, source, context, name=None, targets=None):",
          "1329:     import tensorflow",
          "1331:     # create a dataset",
          "1332:     if isinstance(tensorflow_dataset, np.ndarray):",
          "1333:         dataset = from_numpy(features=tensorflow_dataset, targets=targets, source=source, name=name)",
          "1334:     elif isinstance(tensorflow_dataset, tensorflow.Tensor):",
          "1335:         dataset = from_tensorflow(",
          "1336:             features=tensorflow_dataset, targets=targets, source=source, name=name",
          "1337:         )",
          "1338:     elif isinstance(tensorflow_dataset, tensorflow.data.Dataset):",
          "1339:         dataset = from_tensorflow(features=tensorflow_dataset, source=source, name=name)",
          "1340:     elif isinstance(tensorflow_dataset, tuple):",
          "1341:         x = tensorflow_dataset[0]",
          "1342:         y = tensorflow_dataset[1]",
          "1343:         # check if x and y are tensors",
          "1344:         if isinstance(x, tensorflow.Tensor) and isinstance(y, tensorflow.Tensor):",
          "1345:             dataset = from_tensorflow(features=x, source=source, targets=y, name=name)",
          "1346:         else:",
          "1347:             dataset = from_numpy(features=x, targets=y, source=source, name=name)",
          "1348:     else:",
          "1349:         _logger.warning(",
          "1350:             \"Unrecognized dataset type %s. Dataset logging skipped.\", type(tensorflow_dataset)",
          "1351:         )",
          "1352:         return",
          "1354:     mlflow.log_input(dataset, context)",
          "",
          "---------------"
        ],
        "mlflow/tracking/_tracking_service/client.py||mlflow/tracking/_tracking_service/client.py": [
          "File: mlflow/tracking/_tracking_service/client.py -> mlflow/tracking/_tracking_service/client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import os",
          "8: from itertools import zip_longest",
          "10: from mlflow.store.tracking import SEARCH_MAX_RESULTS_DEFAULT, GET_METRIC_HISTORY_MAX_RESULTS",
          "11: from mlflow.tracking._tracking_service import utils",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: from typing import List, Optional",
          "10: from mlflow.entities.dataset_input import DatasetInput",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "393:         for metrics_batch in chunk_list(metrics, chunk_size=MAX_METRICS_PER_BATCH):",
          "394:             self.store.log_batch(run_id=run_id, metrics=metrics_batch, params=[], tags=[])",
          "396:     def _record_logged_model(self, run_id, mlflow_model):",
          "397:         from mlflow.models import Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:     def log_inputs(self, run_id: str, datasets: Optional[List[DatasetInput]] = None):",
          "399:         \"\"\"",
          "400:         Log one or more dataset inputs to a run.",
          "402:         :param run_id: String ID of the run",
          "403:         :param datasets: List of :py:class:`mlflow.entities.DatasetInput` instances to log.",
          "405:         Raises an MlflowException if any errors occur.",
          "406:         :return: None",
          "407:         \"\"\"",
          "408:         if datasets is None or len(datasets) == 0:",
          "409:             return",
          "411:         self.store.log_inputs(run_id=run_id, datasets=datasets)",
          "",
          "---------------"
        ],
        "mlflow/tracking/client.py||mlflow/tracking/client.py": [
          "File: mlflow/tracking/client.py -> mlflow/tracking/client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: import yaml",
          "15: from typing import Any, Dict, Sequence, List, Optional, Union, TYPE_CHECKING",
          "18: from mlflow.store.entities.paged_list import PagedList",
          "19: from mlflow.entities.model_registry import RegisteredModel, ModelVersion",
          "20: from mlflow.entities.model_registry.model_version_stages import ALL_STAGES",
          "",
          "[Removed Lines]",
          "17: from mlflow.entities import Experiment, Run, Param, Metric, RunTag, FileInfo, ViewType",
          "",
          "[Added Lines]",
          "17: from mlflow.entities import Experiment, Run, Param, Metric, RunTag, FileInfo, ViewType, DatasetInput",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: from mlflow.tracking._tracking_service.client import TrackingServiceClient",
          "33: from mlflow.tracking.artifact_utils import _upload_artifacts_to_databricks",
          "34: from mlflow.tracking.registry import UnsupportedModelRegistryStoreURIException",
          "36: from mlflow.utils.databricks_utils import get_databricks_run_url",
          "37: from mlflow.utils.logging_utils import eprint",
          "38: from mlflow.utils.uri import is_databricks_uri, is_databricks_unity_catalog_uri",
          "",
          "[Removed Lines]",
          "35: from mlflow.utils.annotations import deprecated",
          "",
          "[Added Lines]",
          "35: from mlflow.utils.annotations import deprecated, experimental",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:     MLFLOW_LOGGED_ARTIFACTS,",
          "47:     MLFLOW_PARENT_RUN_ID,",
          "48: )",
          "51: if TYPE_CHECKING:",
          "52:     import pandas  # pylint: disable=unused-import",
          "",
          "[Removed Lines]",
          "49: from mlflow.utils.annotations import experimental",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:         Fetch the run from backend store. The resulting :py:class:`Run <mlflow.entities.Run>`",
          "130:         contains a collection of run metadata -- :py:class:`RunInfo <mlflow.entities.RunInfo>`,",
          "131:         as well as a collection of run parameters, tags, and metrics --",
          "136:         :param run_id: Unique identifier for the run.",
          "",
          "[Removed Lines]",
          "132:         :py:class:`RunData <mlflow.entities.RunData>`. In the case where multiple metrics with the",
          "133:         same key are logged for the run, the :py:class:`RunData <mlflow.entities.RunData>` contains",
          "134:         the most recently logged value at the largest step for each metric.",
          "",
          "[Added Lines]",
          "131:         :py:class:`RunData <mlflow.entities.RunData>`. It also contains a collection of run",
          "132:         inputs (experimental), including information about datasets used by the run --",
          "133:         :py:class:`RunInputs <mlflow.entities.RunInputs>`. In the case where multiple metrics with",
          "134:         the same key are logged for the run, the :py:class:`RunData <mlflow.entities.RunData>`",
          "135:         contains the most recently logged value at the largest step for each metric.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1035:         \"\"\"",
          "1036:         self._tracking_client.log_batch(run_id, metrics, params, tags)",
          "1038:     def log_artifact(self, run_id, local_path, artifact_path=None) -> None:",
          "1039:         \"\"\"",
          "1040:         Write a local file or directory to the remote ``artifact_uri``.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1039:     @experimental",
          "1040:     def log_inputs(",
          "1041:         self,",
          "1042:         run_id: str,",
          "1043:         datasets: Optional[Sequence[DatasetInput]] = None,",
          "1044:     ) -> None:",
          "1045:         \"\"\"",
          "1046:         Log one or more dataset inputs to a run.",
          "1048:         :param run_id: String ID of the run",
          "1049:         :param datasets: List of :py:class:`mlflow.entities.DatasetInput` instances to log.",
          "1051:         Raises an MlflowException if any errors occur.",
          "1052:         :return: None",
          "1053:         \"\"\"",
          "1054:         self._tracking_client.log_inputs(run_id, datasets)",
          "",
          "---------------"
        ],
        "mlflow/tracking/fluent.py||mlflow/tracking/fluent.py": [
          "File: mlflow/tracking/fluent.py -> mlflow/tracking/fluent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: from copy import deepcopy",
          "11: from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING",
          "14: from mlflow.entities.lifecycle_stage import LifecycleStage",
          "15: from mlflow.exceptions import MlflowException",
          "16: from mlflow.protos.databricks_pb2 import (",
          "",
          "[Removed Lines]",
          "13: from mlflow.entities import Experiment, Run, RunStatus, Param, RunTag, Metric, ViewType",
          "",
          "[Added Lines]",
          "13: from mlflow.data.dataset import Dataset",
          "14: from mlflow.entities import (",
          "15:     Experiment,",
          "16:     Run,",
          "17:     RunStatus,",
          "18:     Param,",
          "19:     RunTag,",
          "20:     Metric,",
          "21:     ViewType,",
          "22:     InputTag,",
          "23:     DatasetInput,",
          "24: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23: from mlflow.tracking.default_experiment import registry as default_experiment_registry",
          "24: from mlflow.store.tracking import SEARCH_MAX_RESULTS_DEFAULT",
          "25: from mlflow.utils import env, get_results_from_paginated_fn",
          "26: from mlflow.utils.autologging_utils import (",
          "27:     is_testing,",
          "28:     autologging_integration,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: from mlflow.utils.annotations import experimental",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32: )",
          "33: from mlflow.utils.import_hooks import register_post_import_hook",
          "34: from mlflow.utils.mlflow_tags import (",
          "35:     MLFLOW_PARENT_RUN_ID,",
          "36:     MLFLOW_RUN_NAME,",
          "37:     MLFLOW_RUN_NOTE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:     MLFLOW_DATASET_CONTEXT,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "41: from mlflow.utils.validation import _validate_run_id, _validate_experiment_id_type",
          "42: from mlflow.utils.time_utils import get_current_time_millis",
          "43: from mlflow.utils.databricks_utils import is_in_databricks_runtime",
          "47: if TYPE_CHECKING:",
          "48:     import pandas  # pylint: disable=unused-import",
          "",
          "[Removed Lines]",
          "44: from mlflow.utils.annotations import experimental",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "487:     Fetch the run from backend store. The resulting :py:class:`Run <mlflow.entities.Run>`",
          "488:     contains a collection of run metadata -- :py:class:`RunInfo <mlflow.entities.RunInfo>`,",
          "489:     as well as a collection of run parameters, tags, and metrics --",
          "494:     :param run_id: Unique identifier for the run.",
          "",
          "[Removed Lines]",
          "490:     :py:class:`RunData <mlflow.entities.RunData>`. In the case where multiple metrics with the",
          "491:     same key are logged for the run, the :py:class:`RunData <mlflow.entities.RunData>` contains",
          "492:     the most recently logged value at the largest step for each metric.",
          "",
          "[Added Lines]",
          "501:     :py:class:`RunData <mlflow.entities.RunData>`. It also contains a collection of run",
          "502:     inputs (experimental), including information about datasets used by the run --",
          "503:     :py:class:`RunInputs <mlflow.entities.RunInputs>`. In the case where multiple metrics with the",
          "504:     same key are logged for the run, the :py:class:`RunData <mlflow.entities.RunData>` contains the",
          "505:     most recently logged value at the largest step for each metric.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "737:     MlflowClient().log_batch(run_id=run_id, metrics=[], params=params_arr, tags=[])",
          "740: def set_experiment_tags(tags: Dict[str, Any]) -> None:",
          "741:     \"\"\"",
          "742:     Set tags for the current active experiment.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "753: @experimental",
          "754: def log_input(",
          "755:     dataset: Dataset, context: Optional[str] = None, tags: Optional[Dict[str, str]] = None",
          "756: ) -> None:",
          "757:     \"\"\"",
          "758:     Log a dataset used in the current run.",
          "760:     :param dataset: :py:class:`mlflow.data.dataset.Dataset` object to be logged.",
          "761:     :param context: Context in which the dataset is used. For example: \"training\", \"testing\".",
          "762:                     This will be set as an input tag with key `mlflow.data.context`.",
          "763:     :param tags: Tags to be associated with the dataset. Dictionary of tag_key -> tag_value.",
          "764:     :returns: None",
          "766:     .. test-code-block:: python",
          "767:         :caption: Example",
          "769:         import numpy as np",
          "770:         import mlflow",
          "772:         array = np.asarray([[1, 2, 3], [4, 5, 6], [7, 8, 9]])",
          "773:         dataset = mlflow.data.from_numpy(array, source=\"data.csv\")",
          "775:         # Log an input dataset used for training",
          "776:         with mlflow.start_run():",
          "777:             mlflow.log_input(dataset, context=\"training\")",
          "778:     \"\"\"",
          "779:     run_id = _get_or_start_run().info.run_id",
          "780:     tags_to_log = []",
          "781:     if tags:",
          "782:         tags_to_log.extend([InputTag(key=key, value=value) for key, value in tags.items()])",
          "783:     if context:",
          "784:         tags_to_log.append(InputTag(key=MLFLOW_DATASET_CONTEXT, value=context))",
          "786:     dataset_input = DatasetInput(dataset=dataset._to_mlflow_entity(), tags=tags_to_log)",
          "788:     MlflowClient().log_inputs(run_id=run_id, datasets=[dataset_input])",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1680:     log_input_examples: bool = False,",
          "1681:     log_model_signatures: bool = True,",
          "1682:     log_models: bool = True,",
          "1683:     disable: bool = False,",
          "1684:     exclusive: bool = False,",
          "1685:     disable_for_unsupported_versions: bool = False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1734:     log_datasets: bool = True,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1738:                        If ``False``, trained models are not logged.",
          "1739:                        Input examples and model signatures, which are attributes of MLflow models,",
          "1740:                        are also omitted when ``log_models`` is ``False``.",
          "1741:     :param disable: If ``True``, disables all supported autologging integrations. If ``False``,",
          "1742:                     enables all supported autologging integrations.",
          "1743:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1793:     :param log_datasets: If ``True``, dataset information is logged to MLflow Tracking.",
          "1794:                          If ``False``, dataset information is not logged.",
          "",
          "---------------"
        ],
        "mlflow/transformers.py||mlflow/transformers.py": [
          "File: mlflow/transformers.py -> mlflow/transformers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2453:     log_input_examples=False,",
          "2454:     log_model_signatures=False,",
          "2455:     log_models=False,",
          "2456:     disable=False,",
          "2457:     exclusive=False,",
          "2458:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2456:     log_datasets=False,",
          "",
          "---------------"
        ],
        "mlflow/utils/autologging_utils/client.py||mlflow/utils/autologging_utils/client.py": [
          "File: mlflow/utils/autologging_utils/client.py -> mlflow/utils/autologging_utils/client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: from collections import namedtuple",
          "14: from concurrent.futures import ThreadPoolExecutor",
          "15: from itertools import zip_longest",
          "18: from mlflow.entities import Param, RunTag, Metric",
          "19: from mlflow.exceptions import MlflowException",
          "20: from mlflow.tracking.client import MlflowClient",
          "21: from mlflow.utils import chunk_list, _truncate_dict",
          "",
          "[Removed Lines]",
          "16: from typing import Any, Dict, Optional, Union",
          "",
          "[Added Lines]",
          "16: from typing import Any, Dict, List, Optional, Union",
          "19: from mlflow.entities.dataset_input import DatasetInput",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:     MAX_PARAM_VAL_LENGTH,",
          "27:     MAX_PARAMS_TAGS_PER_BATCH,",
          "28:     MAX_METRICS_PER_BATCH,",
          "29: )",
          "30: from mlflow.utils.time_utils import get_current_time_millis",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:     MAX_DATASETS_PER_BATCH,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "187:         params_arr = [Param(key, str(value)) for key, value in params.items()]",
          "188:         self._get_pending_operations(run_id).enqueue(params=params_arr)",
          "190:     def log_metrics(",
          "191:         self,",
          "192:         run_id: Union[str, PendingRunId],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:     def log_inputs(",
          "193:         self, run_id: Union[str, PendingRunId], datasets: Optional[List[DatasetInput]]",
          "194:     ) -> None:",
          "195:         \"\"\"",
          "196:         Enqueues a collection of Dataset to be logged to the run specified by `run_id`.",
          "197:         \"\"\"",
          "198:         if datasets is None or len(datasets) == 0:",
          "199:             return",
          "200:         self._get_pending_operations(run_id).enqueue(datasets=datasets)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "332:                 self._try_operation(self._client.log_batch, run_id=run_id, metrics=metrics_batch)",
          "333:             )",
          "335:         if pending_operations.set_terminated:",
          "336:             operation_results.append(",
          "337:                 self._try_operation(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "347:         for datasets_batch in chunk_list(",
          "348:             pending_operations.datasets_queue, chunk_size=MAX_DATASETS_PER_BATCH",
          "349:         ):",
          "350:             operation_results.append(",
          "351:                 self._try_operation(self._client.log_inputs, run_id=run_id, datasets=datasets_batch)",
          "352:             )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "364:         self.params_queue = []",
          "365:         self.tags_queue = []",
          "366:         self.metrics_queue = []",
          "369:         \"\"\"",
          "370:         Enqueues a new pending logging operation for the associated MLflow Run.",
          "371:         \"\"\"",
          "",
          "[Removed Lines]",
          "368:     def enqueue(self, params=None, tags=None, metrics=None, create_run=None, set_terminated=None):",
          "",
          "[Added Lines]",
          "386:         self.datasets_queue = []",
          "388:     def enqueue(",
          "389:         self,",
          "390:         params=None,",
          "391:         tags=None,",
          "392:         metrics=None,",
          "393:         datasets=None,",
          "394:         create_run=None,",
          "395:         set_terminated=None,",
          "396:     ):",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "379:         self.params_queue += params or []",
          "380:         self.tags_queue += tags or []",
          "381:         self.metrics_queue += metrics or []",
          "384: __all__ = [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "410:         self.datasets_queue += datasets or []",
          "",
          "---------------"
        ],
        "mlflow/utils/mlflow_tags.py||mlflow/utils/mlflow_tags.py": [
          "File: mlflow/utils/mlflow_tags.py -> mlflow/utils/mlflow_tags.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: MLFLOW_DATABRICKS_GIT_REPO_REFERENCE_TYPE = \"mlflow.databricks.gitRepoReferenceType\"",
          "60: MLFLOW_DATABRICKS_GIT_REPO_STATUS = \"mlflow.databricks.gitRepoStatus\"",
          "62: MLFLOW_PROJECT_BACKEND = \"mlflow.project.backend\"",
          "64: # The following legacy tags are deprecated and will be removed by MLflow 1.0.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: # For MLflow Dataset tracking",
          "63: MLFLOW_DATASET_CONTEXT = \"mlflow.data.context\"",
          "",
          "---------------"
        ],
        "mlflow/utils/uri.py||mlflow/utils/uri.py": [
          "File: mlflow/utils/uri.py -> mlflow/utils/uri.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: _DATABRICKS_UNITY_CATALOG_SCHEME = \"databricks-uc\"",
          "25:         return False",
          "27:     if is_windows() and uri.startswith(\"\\\\\\\\\"):",
          "",
          "[Removed Lines]",
          "22: def is_local_uri(uri):",
          "23:     \"\"\"Returns true if this is a local file path (/foo or file:/foo).\"\"\"",
          "24:     if uri == \"databricks\":",
          "",
          "[Added Lines]",
          "22: def is_local_uri(uri, is_tracking_or_registry_uri=True):",
          "23:     \"\"\"",
          "24:     Returns true if the specified URI is a local file path (/foo or file:/foo).",
          "26:     :param uri: The URI.",
          "27:     :param is_tracking_uri: Whether or not the specified URI is an MLflow Tracking or MLflow",
          "28:                             Model Registry URI. Examples of other URIs are MLflow artifact URIs,",
          "29:                             filesystem paths, etc.",
          "30:     \"\"\"",
          "31:     if uri == \"databricks\" and is_tracking_or_registry_uri:",
          "",
          "---------------"
        ],
        "mlflow/utils/validation.py||mlflow/utils/validation.py": [
          "File: mlflow/utils/validation.py -> mlflow/utils/validation.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import posixpath",
          "6: import re",
          "8: from mlflow.exceptions import MlflowException",
          "9: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "10: from mlflow.store.db.db_types import DATABASE_ENGINES",
          "11: from mlflow.utils.string_utils import is_string_type",
          "13: # Regex for valid param and metric names: may only contain slashes, alphanumerics,",
          "14: # underscores, periods, dashes, and spaces.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: from typing import List",
          "14: from mlflow.entities import DatasetInput, Dataset, InputTag",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: MAX_PARAMS_TAGS_PER_BATCH = 100",
          "43: MAX_METRICS_PER_BATCH = 1000",
          "44: MAX_ENTITIES_PER_BATCH = 1000",
          "45: MAX_BATCH_LOG_REQUEST_SIZE = int(1e6)",
          "46: MAX_PARAM_VAL_LENGTH = 500",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: MAX_DATASETS_PER_BATCH = 1000",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51: MAX_MODEL_REGISTRY_TAG_KEY_LENGTH = 250",
          "52: MAX_MODEL_REGISTRY_TAG_VALUE_LENGTH = 5000",
          "53: MAX_EXPERIMENTS_LISTED_PER_PAGE = 50000",
          "54: MAX_REGISTERED_MODEL_ALIAS_LENGTH = 255",
          "56: _UNSUPPORTED_DB_TYPE_MSG = \"Supported database engines are {%s}\" % \", \".join(DATABASE_ENGINES)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: MAX_DATASET_NAME_SIZE = 500",
          "59: MAX_DATASET_DIGEST_SIZE = 36",
          "60: MAX_DATASET_SCHEMA_SIZE = 65535  # 64KB -1 (the db limit for TEXT column)",
          "61: MAX_DATASET_SOURCE_SIZE = 65535  # 64KB -1 (the db limit for TEXT column)",
          "62: MAX_DATASET_PROFILE_SIZE = 16777215  # 16MB -1 (the db limit for MEDIUMTEXT column)",
          "63: MAX_INPUT_TAG_KEY_SIZE = 255",
          "64: MAX_INPUT_TAG_VALUE_SIZE = 500",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "419:         raise MlflowException(\"Tag value cannot be None\", INVALID_PARAMETER_VALUE)",
          "422: def _validate_username(username):",
          "423:     if username is None or username == \"\":",
          "424:         raise MlflowException(\"Username cannot be empty.\", INVALID_PARAMETER_VALUE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "433: def _validate_dataset_inputs(dataset_inputs: List[DatasetInput]):",
          "434:     for dataset_input in dataset_inputs:",
          "435:         _validate_dataset(dataset_input.dataset)",
          "436:         _validate_input_tags(dataset_input.tags)",
          "439: def _validate_dataset(dataset: Dataset):",
          "440:     if dataset is None:",
          "441:         raise MlflowException(\"Dataset cannot be None\", INVALID_PARAMETER_VALUE)",
          "442:     if dataset.name is None:",
          "443:         raise MlflowException(\"Dataset name cannot be None\", INVALID_PARAMETER_VALUE)",
          "444:     if dataset.digest is None:",
          "445:         raise MlflowException(\"Dataset digest cannot be None\", INVALID_PARAMETER_VALUE)",
          "446:     if dataset.source_type is None:",
          "447:         raise MlflowException(\"Dataset source_type cannot be None\", INVALID_PARAMETER_VALUE)",
          "448:     if dataset.source is None:",
          "449:         raise MlflowException(\"Dataset source cannot be None\", INVALID_PARAMETER_VALUE)",
          "450:     if len(dataset.name) > MAX_DATASET_NAME_SIZE:",
          "451:         raise MlflowException(",
          "452:             f\"Dataset name exceeds the maximum length of {MAX_DATASET_NAME_SIZE}\",",
          "453:             INVALID_PARAMETER_VALUE,",
          "454:         )",
          "455:     if len(dataset.digest) > MAX_DATASET_DIGEST_SIZE:",
          "456:         raise MlflowException(",
          "457:             f\"Dataset digest exceeds the maximum length of {MAX_DATASET_DIGEST_SIZE}\",",
          "458:             INVALID_PARAMETER_VALUE,",
          "459:         )",
          "460:     if len(dataset.source) > MAX_DATASET_SOURCE_SIZE:",
          "461:         raise MlflowException(",
          "462:             f\"Dataset source exceeds the maximum length of {MAX_DATASET_SOURCE_SIZE}\",",
          "463:             INVALID_PARAMETER_VALUE,",
          "464:         )",
          "465:     if dataset.schema is not None and len(dataset.schema) > MAX_DATASET_SCHEMA_SIZE:",
          "466:         raise MlflowException(",
          "467:             f\"Dataset schema exceeds the maximum length of {MAX_DATASET_SCHEMA_SIZE}\",",
          "468:             INVALID_PARAMETER_VALUE,",
          "469:         )",
          "470:     if dataset.profile is not None and len(dataset.profile) > MAX_DATASET_PROFILE_SIZE:",
          "471:         raise MlflowException(",
          "472:             f\"Dataset profile exceeds the maximum length of {MAX_DATASET_PROFILE_SIZE}\",",
          "473:             INVALID_PARAMETER_VALUE,",
          "474:         )",
          "477: def _validate_input_tags(input_tags: List[InputTag]):",
          "478:     for input_tag in input_tags:",
          "479:         _validate_input_tag(input_tag)",
          "482: def _validate_input_tag(input_tag: InputTag):",
          "483:     if input_tag is None:",
          "484:         raise MlflowException(\"InputTag cannot be None\", INVALID_PARAMETER_VALUE)",
          "485:     if input_tag.key is None:",
          "486:         raise MlflowException(\"InputTag key cannot be None\", INVALID_PARAMETER_VALUE)",
          "487:     if input_tag.value is None:",
          "488:         raise MlflowException(\"InputTag value cannot be None\", INVALID_PARAMETER_VALUE)",
          "489:     if len(input_tag.key) > MAX_INPUT_TAG_KEY_SIZE:",
          "490:         raise MlflowException(",
          "491:             f\"InputTag key exceeds the maximum length of {MAX_INPUT_TAG_KEY_SIZE}\",",
          "492:             INVALID_PARAMETER_VALUE,",
          "493:         )",
          "494:     if len(input_tag.value) > MAX_INPUT_TAG_VALUE_SIZE:",
          "495:         raise MlflowException(",
          "496:             f\"InputTag value exceeds the maximum length of {MAX_INPUT_TAG_VALUE_SIZE}\",",
          "497:             INVALID_PARAMETER_VALUE,",
          "498:         )",
          "",
          "---------------"
        ],
        "mlflow/xgboost/__init__.py||mlflow/xgboost/__init__.py": [
          "File: mlflow/xgboost/__init__.py -> mlflow/xgboost/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import logging",
          "25: import functools",
          "26: from copy import deepcopy",
          "28: import mlflow",
          "29: from mlflow import pyfunc",
          "30: from mlflow.models import Model, ModelInputExample, infer_signature",
          "31: from mlflow.models.model import MLMODEL_FILE_NAME",
          "32: from mlflow.models.signature import ModelSignature",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: from packaging.version import Version",
          "31: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "32: from mlflow.data.numpy_dataset import from_numpy",
          "33: from mlflow.data.pandas_dataset import from_pandas",
          "34: from mlflow.entities.dataset_input import DatasetInput",
          "35: from mlflow.entities.input_tag import InputTag",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     _PythonEnv,",
          "46: )",
          "47: from mlflow.utils.class_utils import _get_class_from_string",
          "48: from mlflow.utils.requirements_utils import _get_pinned_requirement",
          "49: from mlflow.utils.file_utils import write_to",
          "50: from mlflow.utils.model_utils import (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: from mlflow.utils.mlflow_tags import (",
          "55:     MLFLOW_DATASET_CONTEXT,",
          "56: )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "70: )",
          "72: from mlflow.tracking._model_registry import DEFAULT_AWAIT_MAX_SLEEP_SECONDS",
          "73: from mlflow.sklearn import _SklearnTrainingSession",
          "75: FLAVOR_NAME = \"xgboost\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: from mlflow.tracking.context import registry as context_registry",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "380:     log_input_examples=False,",
          "381:     log_model_signatures=True,",
          "382:     log_models=True,",
          "383:     disable=False,",
          "384:     exclusive=False,",
          "385:     disable_for_unsupported_versions=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "393:     log_datasets=True,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "417:                        If ``False``, trained models are not logged.",
          "418:                        Input examples and model signatures, which are attributes of MLflow models,",
          "419:                        are also omitted when ``log_models`` is ``False``.",
          "420:     :param disable: If ``True``, disables the XGBoost autologging integration. If ``False``,",
          "421:                     enables the XGBoost autologging integration.",
          "422:     :param exclusive: If ``True``, autologged content is not logged to user-created fluent runs.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "431:     :param log_datasets: If ``True``, train and validation dataset information is logged to MLflow",
          "432:                          Tracking if applicable. If ``False``, dataset information is not logged.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "464:         original(self, *args, **kwargs)",
          "467:         def record_eval_results(eval_results, metrics_logger):",
          "468:             \"\"\"",
          "469:             Create a callback function that records evaluation results.",
          "",
          "[Removed Lines]",
          "466:     def train_impl(_log_models, original, *args, **kwargs):",
          "",
          "[Added Lines]",
          "479:     def train_impl(_log_models, _log_datasets, original, *args, **kwargs):",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "617:         callbacks_index = all_arg_names.index(\"callbacks\")",
          "619:         run_id = mlflow.active_run().info.run_id",
          "620:         with batch_metrics_logger(run_id) as metrics_logger:",
          "621:             callback = record_eval_results(eval_results, metrics_logger)",
          "622:             if num_pos_args >= callbacks_index + 1:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634:         dtrain = args[1] if len(args) > 1 else kwargs.get(\"dtrain\")",
          "636:         # Whether to automatically log the training dataset as a dataset artifact.",
          "637:         if _log_datasets and dtrain is not None:",
          "638:             try:",
          "639:                 context_tags = context_registry.resolve_tags()",
          "640:                 source = CodeDatasetSource(context_tags)",
          "642:                 _log_xgboost_dataset(dtrain, source, \"train\", autologging_client)",
          "643:                 evals = kwargs.get(\"evals\")",
          "644:                 if evals is not None:",
          "645:                     for d, name in evals:",
          "646:                         _log_xgboost_dataset(d, source, \"eval\", autologging_client, name)",
          "647:                 dataset_logging_operations = autologging_client.flush(synchronous=False)",
          "648:                 dataset_logging_operations.await_completion()",
          "649:             except Exception as e:",
          "650:                 _logger.warning(",
          "651:                     \"Failed to log dataset information to MLflow Tracking. Reason: %s\", e",
          "652:                 )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "677:                     shutil.rmtree(tmpdir)",
          "679:         # dtrain must exist as the original train function already ran successfully",
          "682:         # it is possible that the dataset was constructed before the patched",
          "683:         #   constructor was applied, so we cannot assume the input_example_info exists",
          "684:         input_example_info = getattr(dtrain, \"input_example_info\", None)",
          "",
          "[Removed Lines]",
          "680:         dtrain = args[1] if len(args) > 1 else kwargs.get(\"dtrain\")",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "725:         return model",
          "728:         current_sklearn_session = _SklearnTrainingSession.get_current_session()",
          "729:         if current_sklearn_session is None or current_sklearn_session.should_log():",
          "731:         else:",
          "732:             return original(*args, **kwargs)",
          "735:     # The `train()` method logs XGBoost models as Booster objects. When using XGBoost",
          "736:     # scikit-learn models, we want to save / log models as their model classes. So we turn",
          "737:     # off the log_models functionality in the `train()` method patched to `xgboost.sklearn`.",
          "738:     # Instead the model logging is handled in `fit_mlflow_sklearn()` in `mlflow.sklearn._autolog()`,",
          "739:     # where models are logged as XGBoost scikit-learn models after the `fit()` method returns.",
          "740:     safe_patch(",
          "742:     )",
          "743:     safe_patch(FLAVOR_NAME, xgboost.DMatrix, \"__init__\", __init__)",
          "",
          "[Removed Lines]",
          "727:     def train(_log_models, original, *args, **kwargs):",
          "730:             return train_impl(_log_models, original, *args, **kwargs)",
          "734:     safe_patch(FLAVOR_NAME, xgboost, \"train\", functools.partial(train, log_models), manage_run=True)",
          "741:         FLAVOR_NAME, xgboost.sklearn, \"train\", functools.partial(train, False), manage_run=True",
          "",
          "[Added Lines]",
          "759:     def train(_log_models, _log_datasets, original, *args, **kwargs):",
          "762:             return train_impl(_log_models, _log_datasets, original, *args, **kwargs)",
          "766:     safe_patch(",
          "767:         FLAVOR_NAME,",
          "768:         xgboost,",
          "769:         \"train\",",
          "770:         functools.partial(train, log_models, log_datasets),",
          "771:         manage_run=True,",
          "772:     )",
          "779:         FLAVOR_NAME,",
          "780:         xgboost.sklearn,",
          "781:         \"train\",",
          "782:         functools.partial(train, False, log_datasets),",
          "783:         manage_run=True,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "750:         log_input_examples=log_input_examples,",
          "751:         log_model_signatures=log_model_signatures,",
          "752:         log_models=log_models,",
          "753:         disable=disable,",
          "754:         exclusive=exclusive,",
          "755:         disable_for_unsupported_versions=disable_for_unsupported_versions,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "795:         log_datasets=log_datasets,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "757:         max_tuning_runs=None,",
          "758:         log_post_training_metrics=True,",
          "759:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "805: def _log_xgboost_dataset(xgb_dataset, source, context, autologging_client, name=None):",
          "806:     import numpy as np",
          "807:     import pandas as pd",
          "808:     import xgboost as xgb",
          "809:     from scipy.sparse import issparse",
          "811:     # dmatrix has a get_data method added in 1.7. skip for earlier versions.",
          "812:     if Version(xgb.__version__) >= Version(\"1.7.0\"):",
          "813:         data = xgb_dataset.get_data()",
          "814:         if isinstance(xgb_dataset, pd.DataFrame):",
          "815:             dataset = from_pandas(df=data, source=source, name=name)",
          "816:         elif issparse(data):",
          "817:             arr_data = data.toarray() if issparse(data) else data",
          "818:             dataset = from_numpy(features=arr_data, source=source, name=name)",
          "819:         elif isinstance(data, np.ndarray):",
          "820:             dataset = from_numpy(features=data, source=source, name=name)",
          "821:         else:",
          "822:             _logger.warning(\"Unrecognized dataset type %s. Dataset logging skipped.\", type(data))",
          "823:             return",
          "825:         tags = [InputTag(key=MLFLOW_DATASET_CONTEXT, value=context)]",
          "826:         dataset_input = DatasetInput(dataset=dataset._to_mlflow_entity(), tags=tags)",
          "828:         autologging_client.log_inputs(",
          "829:             run_id=mlflow.active_run().info.run_id, datasets=[dataset_input]",
          "830:         )",
          "831:     else:",
          "832:         _logger.warning(",
          "833:             \"Unable to log dataset information to MLflow Tracking.\"",
          "834:             \"XGBoost version must be >= 1.7.0\"",
          "835:         )",
          "",
          "---------------"
        ],
        "tests/data/test_artifact_dataset_sources.py||tests/data/test_artifact_dataset_sources.py": [
          "File: tests/data/test_artifact_dataset_sources.py -> tests/data/test_artifact_dataset_sources.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import os",
          "4: import pytest",
          "5: from unittest import mock",
          "7: from mlflow.data.filesystem_dataset_source import FileSystemDatasetSource",
          "8: from mlflow.data.dataset_source_registry import resolve_dataset_source, get_dataset_source_from_json",
          "9: from mlflow.store.artifact.s3_artifact_repo import S3ArtifactRepository",
          "12: @pytest.mark.parametrize(",
          "13:     (\"source_uri\", \"source_type\", \"source_class_name\"),",
          "14:     [",
          "15:         (\"/tmp/path/to/my/local/file.txt\", \"local\", \"LocalArtifactDatasetSource\"),",
          "16:         (\"file:///tmp/path/to/my/local/directory\", \"local\", \"LocalArtifactDatasetSource\"),",
          "17:         (\"s3://mybucket/path/to/my/file.txt\", \"s3\", \"S3ArtifactDatasetSource\"),",
          "18:         (\"gs://mybucket/path/to/my/dir\", \"gs\", \"GCSArtifactDatasetSource\"),",
          "19:         (\"wasbs://user@host.blob.core.windows.net/dir\", \"wasbs\", \"AzureBlobArtifactDatasetSource\"),",
          "20:         (\"ftp://mysite.com/path/to/my/file.txt\", \"ftp\", \"FTPArtifactDatasetSource\"),",
          "21:         (\"sftp://mysite.com/path/to/my/dir\", \"sftp\", \"SFTPArtifactDatasetSource\"),",
          "22:         (\"hdfs://host_name:8020/hdfs/path/to/my/file.txt\", \"hdfs\", \"HdfsArtifactDatasetSource\"),",
          "23:         (\"viewfs://host_name:8020/path/to/my/dir\", \"viewfs\", \"HdfsArtifactDatasetSource\"),",
          "24:     ],",
          "25: )",
          "26: def test_expected_artifact_dataset_sources_are_registered_and_resolvable(",
          "27:     source_uri, source_type, source_class_name",
          "28: ):",
          "29:     dataset_source = resolve_dataset_source(source_uri)",
          "30:     assert isinstance(dataset_source, FileSystemDatasetSource)",
          "31:     assert dataset_source._get_source_type() == source_type",
          "32:     assert type(dataset_source).__name__ == source_class_name",
          "33:     assert type(dataset_source).__qualname__ == source_class_name",
          "34:     assert dataset_source.uri == source_uri",
          "37: @pytest.mark.parametrize(",
          "38:     (\"source_uri\", \"source_type\"),",
          "39:     [",
          "40:         (\"/tmp/path/to/my/local/file.txt\", \"local\"),",
          "41:         (\"file:///tmp/path/to/my/local/directory\", \"local\"),",
          "42:         (\"s3://mybucket/path/to/my/file.txt\", \"s3\"),",
          "43:         (\"gs://mybucket/path/to/my/dir\", \"gs\"),",
          "44:         (\"wasbs://user@host.blob.core.windows.net/dir\", \"wasbs\"),",
          "45:         (\"ftp://mysite.com/path/to/my/file.txt\", \"ftp\"),",
          "46:         (\"sftp://mysite.com/path/to/my/dir\", \"sftp\"),",
          "47:         (\"hdfs://host_name:8020/hdfs/path/to/my/file.txt\", \"hdfs\"),",
          "48:         (\"viewfs://host_name:8020/path/to/my/dir\", \"viewfs\"),",
          "49:     ],",
          "50: )",
          "51: def test_to_and_from_json(source_uri, source_type):",
          "52:     dataset_source = resolve_dataset_source(source_uri)",
          "53:     assert dataset_source._get_source_type() == source_type",
          "54:     source_json = dataset_source.to_json()",
          "56:     parsed_source_json = json.loads(source_json)",
          "57:     assert parsed_source_json[\"uri\"] == source_uri",
          "59:     reloaded_source = get_dataset_source_from_json(",
          "60:         source_json, source_type=dataset_source._get_source_type()",
          "61:     )",
          "62:     assert isinstance(reloaded_source, FileSystemDatasetSource)",
          "63:     assert type(dataset_source) == type(reloaded_source)",
          "64:     assert reloaded_source.uri == dataset_source.uri",
          "67: @pytest.mark.parametrize(",
          "68:     (\"source_uri\", \"source_type\"),",
          "69:     [",
          "70:         (\"/tmp/path/to/my/local/file.txt\", \"local\"),",
          "71:         (\"file:///tmp/path/to/my/local/directory\", \"local\"),",
          "72:         (\"s3://mybucket/path/to/my/file.txt\", \"s3\"),",
          "73:         (\"gs://mybucket/path/to/my/dir\", \"gs\"),",
          "74:         (\"wasbs://user@host.blob.core.windows.net/dir\", \"wasbs\"),",
          "75:         (\"ftp://mysite.com/path/to/my/file.txt\", \"ftp\"),",
          "76:         (\"sftp://mysite.com/path/to/my/dir\", \"sftp\"),",
          "77:         (\"hdfs://host_name:8020/hdfs/path/to/my/file.txt\", \"hdfs\"),",
          "78:         (\"viewfs://host_name:8020/path/to/my/dir\", \"viewfs\"),",
          "79:     ],",
          "80: )",
          "81: def test_load_makes_expected_mlflow_artifacts_download_call(source_uri, source_type, tmp_path):",
          "82:     dataset_source = resolve_dataset_source(source_uri)",
          "83:     assert dataset_source._get_source_type() == source_type",
          "85:     with mock.patch(\"mlflow.data.artifact_dataset_sources.download_artifacts\") as download_imp_mock:",
          "86:         dataset_source.load()",
          "87:         download_imp_mock.assert_called_once_with(artifact_uri=source_uri, dst_path=None)",
          "89:     with mock.patch(\"mlflow.data.artifact_dataset_sources.download_artifacts\") as download_imp_mock:",
          "90:         dataset_source.load(dst_path=str(tmp_path))",
          "91:         download_imp_mock.assert_called_once_with(artifact_uri=source_uri, dst_path=str(tmp_path))",
          "94: @pytest.mark.parametrize(\"dst_path\", [None, \"dst\"])",
          "95: def test_local_load(dst_path, tmp_path):",
          "96:     if dst_path is not None:",
          "97:         dst_path = str(tmp_path / dst_path)",
          "99:     # Test string file paths",
          "100:     file_path = str(tmp_path / \"myfile.txt\")",
          "101:     with open(file_path, \"w\") as f:",
          "102:         f.write(\"text\")",
          "104:     file_dataset_source = resolve_dataset_source(file_path)",
          "105:     assert file_dataset_source._get_source_type() == \"local\"",
          "106:     assert file_dataset_source.load(dst_path=dst_path) == dst_path or file_path",
          "107:     with open(file_path, \"r\") as f:",
          "108:         assert f.read() == \"text\"",
          "110:     # Test directory paths with pathlib.Path",
          "111:     dir_path = tmp_path / \"mydir\"",
          "112:     os.makedirs(dir_path)",
          "114:     dir_dataset_source = resolve_dataset_source(dir_path)",
          "115:     assert file_dataset_source._get_source_type() == \"local\"",
          "116:     assert dir_dataset_source.load() == dst_path or str(dir_path)",
          "119: @pytest.mark.parametrize(\"dst_path\", [None, \"dst\"])",
          "120: def test_s3_load(mock_s3_bucket, dst_path, tmp_path):",
          "121:     if dst_path is not None:",
          "122:         dst_path = str(tmp_path / dst_path)",
          "124:     file_path = str(tmp_path / \"myfile.txt\")",
          "125:     with open(file_path, \"w\") as f:",
          "126:         f.write(\"text\")",
          "128:     S3ArtifactRepository(f\"s3://{mock_s3_bucket}\").log_artifact(file_path)",
          "130:     s3_source_uri = f\"s3://{mock_s3_bucket}/myfile.txt\"",
          "131:     s3_dataset_source = resolve_dataset_source(s3_source_uri)",
          "132:     assert s3_dataset_source._get_source_type() == \"s3\"",
          "133:     downloaded_source = s3_dataset_source.load(dst_path=dst_path)",
          "134:     if dst_path is not None:",
          "135:         assert downloaded_source == os.path.join(dst_path, \"myfile.txt\")",
          "136:     with open(downloaded_source, \"r\") as f:",
          "137:         assert f.read() == \"text\"",
          "",
          "---------------"
        ],
        "tests/data/test_code_dataset_source.py||tests/data/test_code_dataset_source.py": [
          "File: tests/data/test_code_dataset_source.py -> tests/data/test_code_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "4: def test_code_dataset_source_from_path():",
          "5:     tags = {",
          "6:         \"mlflow_source_type\": \"NOTEBOOK\",",
          "7:         \"mlflow_source_name\": \"some_random_notebook_path\",",
          "8:     }",
          "9:     code_datasource = CodeDatasetSource(tags)",
          "10:     assert code_datasource._to_dict() == {",
          "11:         \"tags\": tags,",
          "12:     }",
          "15: def test_code_datasource_type():",
          "16:     assert CodeDatasetSource._get_source_type() == \"code\"",
          "",
          "---------------"
        ],
        "tests/data/test_dataset.py||tests/data/test_dataset.py": [
          "File: tests/data/test_dataset.py -> tests/data/test_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "3: from mlflow.types.schema import Schema",
          "5: from tests.resources.data.dataset_source import TestDatasetSource",
          "6: from tests.resources.data.dataset import TestDataset",
          "9: def test_conversion_to_json():",
          "10:     source_uri = \"test:/my/test/uri\"",
          "11:     source = TestDatasetSource._resolve(source_uri)",
          "12:     dataset = TestDataset(data_list=[1, 2, 3], source=source, name=\"testname\")",
          "14:     dataset_json = dataset.to_json()",
          "15:     parsed_json = json.loads(dataset_json)",
          "16:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "17:     assert parsed_json[\"name\"] == dataset.name",
          "18:     assert parsed_json[\"digest\"] == dataset.digest",
          "19:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "20:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "21:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "23:     schema_json = json.dumps(json.loads(parsed_json[\"schema\"])[\"mlflow_colspec\"])",
          "24:     assert Schema.from_json(schema_json) == dataset.schema",
          "27: def test_digest_property_has_expected_value():",
          "28:     source_uri = \"test:/my/test/uri\"",
          "29:     source = TestDatasetSource._resolve(source_uri)",
          "30:     dataset = TestDataset(data_list=[1, 2, 3], source=source, name=\"testname\")",
          "31:     assert dataset.digest == dataset._compute_digest()",
          "34: def test_expected_name_is_used():",
          "35:     source_uri = \"test:/my/test/uri\"",
          "36:     source = TestDatasetSource._resolve(source_uri)",
          "38:     dataset_without_name = TestDataset(data_list=[1, 2, 3], source=source)",
          "39:     assert dataset_without_name.name == \"dataset\"",
          "41:     dataset_with_name = TestDataset(data_list=[1, 2, 3], source=source, name=\"testname\")",
          "42:     assert dataset_with_name.name == \"testname\"",
          "",
          "---------------"
        ],
        "tests/data/test_dataset_registry.py||tests/data/test_dataset_registry.py": [
          "File: tests/data/test_dataset_registry.py -> tests/data/test_dataset_registry.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from typing import Optional",
          "3: import pytest",
          "4: from unittest import mock",
          "6: import mlflow.data",
          "7: from mlflow.data.dataset import Dataset",
          "8: from mlflow.data.dataset_registry import DatasetRegistry, register_constructor",
          "9: from mlflow.data.dataset_source_registry import resolve_dataset_source, DatasetSourceRegistry",
          "10: from mlflow.exceptions import MlflowException",
          "12: from tests.resources.data.dataset import TestDataset",
          "13: from tests.resources.data.dataset_source import TestDatasetSource",
          "16: @pytest.fixture",
          "17: def dataset_source_registry():",
          "18:     registry = DatasetSourceRegistry()",
          "19:     with mock.patch(\"mlflow.data.dataset_source_registry._dataset_source_registry\", wraps=registry):",
          "20:         yield registry",
          "23: @pytest.fixture",
          "24: def dataset_registry():",
          "25:     registry = DatasetRegistry()",
          "26:     with mock.patch(\"mlflow.data.dataset_registry._dataset_registry\", wraps=registry):",
          "27:         yield registry",
          "30: def test_register_constructor_function_performs_validation():",
          "31:     registry = DatasetRegistry()",
          "33:     def from_good_function(",
          "34:         path: str, name: Optional[str] = None, digest: Optional[str] = None",
          "35:     ) -> Dataset:",
          "36:         pass",
          "38:     registry.register_constructor(from_good_function)",
          "40:     def bad_name_fn(name: Optional[str] = None, digest: Optional[str] = None) -> Dataset:",
          "41:         pass",
          "43:     with pytest.raises(MlflowException, match=\"Constructor name must start with\"):",
          "44:         registry.register_constructor(bad_name_fn)",
          "46:     with pytest.raises(MlflowException, match=\"Constructor name must start with\"):",
          "47:         registry.register_constructor(",
          "48:             constructor_fn=from_good_function, constructor_name=\"bad_name\"",
          "49:         )",
          "51:     def from_no_name_fn(digest: Optional[str] = None) -> Dataset:",
          "52:         pass",
          "54:     with pytest.raises(MlflowException, match=\"must define an optional parameter named 'name'\"):",
          "55:         registry.register_constructor(from_no_name_fn)",
          "57:     def from_no_digest_fn(name: Optional[str] = None) -> Dataset:",
          "58:         pass",
          "60:     with pytest.raises(MlflowException, match=\"must define an optional parameter named 'digest'\"):",
          "61:         registry.register_constructor(from_no_digest_fn)",
          "63:     def from_bad_return_type_fn(",
          "64:         path: str, name: Optional[str] = None, digest: Optional[str] = None",
          "65:     ) -> str:",
          "66:         pass",
          "68:     with pytest.raises(MlflowException, match=\"must have a return type annotation.*Dataset\"):",
          "69:         registry.register_constructor(from_bad_return_type_fn)",
          "71:     def from_no_return_type_fn(path: str, name: Optional[str] = None, digest: Optional[str] = None):",
          "72:         pass",
          "74:     with pytest.raises(MlflowException, match=\"must have a return type annotation.*Dataset\"):",
          "75:         registry.register_constructor(from_no_return_type_fn)",
          "78: def test_register_constructor_from_entrypoints_and_call(dataset_registry, tmp_path):",
          "79:     \"\"\"This test requires the package in tests/resources/mlflow-test-plugin to be installed\"\"\"",
          "81:     from mlflow_test_plugin.dummy_dataset import DummyDataset",
          "83:     dataset_registry.register_entrypoints()",
          "85:     dataset = mlflow.data.from_dummy(",
          "86:         data_list=[1, 2, 3],",
          "87:         # Use a DummyDatasetSource URI from mlflow_test_plugin.dummy_dataset_source, which",
          "88:         # is registered as an entrypoint whenever mlflow-test-plugin is installed",
          "89:         source=\"dummy:\" + str(tmp_path),",
          "90:         name=\"dataset_name\",",
          "91:         digest=\"foo\",",
          "92:     )",
          "93:     assert isinstance(dataset, DummyDataset)",
          "94:     assert dataset.data_list == [1, 2, 3]",
          "95:     assert dataset.name == \"dataset_name\"",
          "96:     assert dataset.digest == \"foo\"",
          "99: def test_register_constructor_and_call(dataset_registry, dataset_source_registry, tmp_path):",
          "100:     dataset_source_registry.register(TestDatasetSource)",
          "102:     def from_test(data_list, source, name=None, digest=None) -> TestDataset:",
          "103:         resolved_source: TestDatasetSource = resolve_dataset_source(",
          "104:             source, candidate_sources=[TestDatasetSource]",
          "105:         )",
          "106:         return TestDataset(data_list=data_list, source=resolved_source, name=name, digest=digest)",
          "108:     register_constructor(constructor_fn=from_test)",
          "109:     register_constructor(constructor_name=\"from_test_2\", constructor_fn=from_test)",
          "111:     dataset1 = mlflow.data.from_test(",
          "112:         data_list=[1, 2, 3],",
          "113:         # Use a TestDatasetSourceURI",
          "114:         source=\"test:\" + str(tmp_path),",
          "115:         name=\"name1\",",
          "116:         digest=\"digest1\",",
          "117:     )",
          "118:     assert isinstance(dataset1, TestDataset)",
          "119:     assert dataset1.data_list == [1, 2, 3]",
          "120:     assert dataset1.name == \"name1\"",
          "121:     assert dataset1.digest == \"digest1\"",
          "123:     dataset2 = mlflow.data.from_test_2(",
          "124:         data_list=[4, 5, 6],",
          "125:         # Use a TestDatasetSourceURI",
          "126:         source=\"test:\" + str(tmp_path),",
          "127:         name=\"name2\",",
          "128:         digest=\"digest2\",",
          "129:     )",
          "130:     assert isinstance(dataset2, TestDataset)",
          "131:     assert dataset2.data_list == [4, 5, 6]",
          "132:     assert dataset2.name == \"name2\"",
          "133:     assert dataset2.digest == \"digest2\"",
          "",
          "---------------"
        ],
        "tests/data/test_dataset_source.py||tests/data/test_dataset_source.py": [
          "File: tests/data/test_dataset_source.py -> tests/data/test_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "3: import pandas as pd",
          "4: import pytest",
          "6: import mlflow.data",
          "7: from mlflow.exceptions import MlflowException",
          "9: from tests.resources.data.dataset_source import TestDatasetSource",
          "12: def test_load(tmp_path):",
          "13:     assert TestDatasetSource(\"test:\" + str(tmp_path)).load() == str(tmp_path)",
          "16: def test_conversion_to_json_and_back():",
          "17:     uri = \"test:/my/test/uri\"",
          "18:     source = TestDatasetSource._resolve(uri)",
          "19:     source_json = source.to_json()",
          "20:     assert json.loads(source_json)[\"uri\"] == uri",
          "21:     reloaded_source = TestDatasetSource.from_json(source_json)",
          "22:     assert reloaded_source.uri == source.uri",
          "25: def test_get_source_obtains_expected_file_source(tmp_path):",
          "26:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "27:     path = tmp_path / \"temp.csv\"",
          "28:     df.to_csv(path)",
          "29:     pandas_ds = mlflow.data.from_pandas(df, source=path)",
          "31:     source1 = mlflow.data.get_source(pandas_ds)",
          "32:     assert json.loads(source1.to_json()) == json.loads(pandas_ds.source.to_json())",
          "34:     with mlflow.start_run() as r:",
          "35:         mlflow.log_input(pandas_ds)",
          "37:     run = mlflow.get_run(r.info.run_id)",
          "39:     ds_input = run.inputs.dataset_inputs[0]",
          "40:     source2 = mlflow.data.get_source(ds_input)",
          "41:     assert json.loads(source2.to_json()) == json.loads(pandas_ds.source.to_json())",
          "43:     ds_entity = run.inputs.dataset_inputs[0].dataset",
          "44:     source3 = mlflow.data.get_source(ds_entity)",
          "45:     assert json.loads(source3.to_json()) == json.loads(pandas_ds.source.to_json())",
          "47:     assert source1.load() == source2.load() == source3.load() == str(path)",
          "50: def test_get_source_obtains_expected_code_source():",
          "51:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "52:     pandas_ds = mlflow.data.from_pandas(df)",
          "54:     source1 = mlflow.data.get_source(pandas_ds)",
          "55:     assert json.loads(source1.to_json()) == json.loads(pandas_ds.source.to_json())",
          "57:     with mlflow.start_run() as r:",
          "58:         mlflow.log_input(pandas_ds)",
          "60:     run = mlflow.get_run(r.info.run_id)",
          "62:     ds_input = run.inputs.dataset_inputs[0]",
          "63:     source2 = mlflow.data.get_source(ds_input)",
          "64:     assert json.loads(source2.to_json()) == json.loads(pandas_ds.source.to_json())",
          "66:     ds_entity = run.inputs.dataset_inputs[0].dataset",
          "67:     source3 = mlflow.data.get_source(ds_entity)",
          "68:     assert json.loads(source3.to_json()) == json.loads(pandas_ds.source.to_json())",
          "71: def test_get_source_throws_for_invalid_input(tmp_path):",
          "72:     with pytest.raises(MlflowException, match=\"Unrecognized dataset type.*str\"):",
          "73:         mlflow.data.get_source(str(tmp_path))",
          "",
          "---------------"
        ],
        "tests/data/test_dataset_source_registry.py||tests/data/test_dataset_source_registry.py": [
          "File: tests/data/test_dataset_source_registry.py -> tests/data/test_dataset_source_registry.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from typing import Any",
          "3: import pytest",
          "4: from unittest import mock",
          "6: from mlflow.data.dataset_source_registry import DatasetSourceRegistry",
          "7: from mlflow.exceptions import MlflowException",
          "9: from tests.resources.data.dataset_source import TestDatasetSource",
          "12: def test_register_entrypoints_and_resolve(tmp_path):",
          "13:     \"\"\"This test requires the package in tests/resources/mlflow-test-plugin to be installed\"\"\"",
          "15:     from mlflow_test_plugin.dummy_dataset_source import DummyDatasetSource",
          "17:     registry = DatasetSourceRegistry()",
          "18:     registry.register_entrypoints()",
          "20:     uri = \"dummy:\" + str(tmp_path)",
          "21:     resolved_source = registry.resolve(uri)",
          "22:     assert isinstance(resolved_source, DummyDatasetSource)",
          "23:     # Verify that the DummyDatasetSource is constructed with the correct URI",
          "24:     assert resolved_source.uri == uri",
          "27: def test_register_dataset_source_and_resolve(tmp_path):",
          "28:     registry = DatasetSourceRegistry()",
          "29:     registry.register(TestDatasetSource)",
          "31:     uri = \"test:\" + str(tmp_path)",
          "32:     resolved_source = registry.resolve(uri)",
          "33:     assert isinstance(resolved_source, TestDatasetSource)",
          "34:     # Verify that the TestDatasetSource is constructed with the correct URI",
          "35:     assert resolved_source.uri == uri",
          "38: def test_register_dataset_source_and_load_from_json(tmp_path):",
          "39:     registry = DatasetSourceRegistry()",
          "40:     registry.register(TestDatasetSource)",
          "41:     resolved_source = registry.resolve(\"test:\" + str(tmp_path))",
          "42:     resolved_source_json = resolved_source.to_json()",
          "43:     source_from_json = registry.get_source_from_json(",
          "44:         source_json=resolved_source_json, source_type=\"test\"",
          "45:     )",
          "46:     assert source_from_json.uri == resolved_source.uri",
          "49: def test_load_from_json_throws_for_unrecognized_source_type(tmp_path):",
          "50:     registry = DatasetSourceRegistry()",
          "51:     registry.register(TestDatasetSource)",
          "53:     with pytest.raises(MlflowException, match=\"unrecognized source type: foo\"):",
          "54:         registry.get_source_from_json(source_json='{\"bar\": \"123\"}', source_type=\"foo\")",
          "56:     class CandidateDatasetSource1(TestDatasetSource):",
          "57:         @staticmethod",
          "58:         def _get_source_type() -> str:",
          "59:             return \"candidate1\"",
          "61:         @staticmethod",
          "62:         def _can_resolve(raw_source: Any) -> bool:",
          "63:             return raw_source.startswith(\"candidate1\")",
          "65:     class CandidateDatasetSource2(CandidateDatasetSource1):",
          "66:         @staticmethod",
          "67:         def _get_source_type() -> str:",
          "68:             return \"candidate2\"",
          "70:         @staticmethod",
          "71:         def _can_resolve(raw_source: Any) -> bool:",
          "72:             return raw_source.startswith(\"candidate2\")",
          "74:     registry = DatasetSourceRegistry()",
          "75:     registry.register(TestDatasetSource)",
          "76:     registry.register(CandidateDatasetSource1)",
          "77:     registry.register(CandidateDatasetSource2)",
          "79:     registry.resolve(\"test:\" + str(tmp_path))",
          "80:     registry.resolve(\"test:\" + str(tmp_path), candidate_sources=[TestDatasetSource])",
          "81:     with pytest.raises(MlflowException, match=\"Could not find a source information resolver\"):",
          "82:         # TestDatasetSource is the only source that can resolve raw sources with scheme \"test\",",
          "83:         # and TestDatasetSource is not a subclass of CandidateDatasetSource1",
          "84:         registry.resolve(\"test:\" + str(tmp_path), candidate_sources=[CandidateDatasetSource1])",
          "86:     registry.resolve(\"candidate1:\" + str(tmp_path))",
          "87:     registry.resolve(\"candidate1:\" + str(tmp_path), candidate_sources=[CandidateDatasetSource1])",
          "88:     # CandidateDatasetSource1 is a subclass of TestDatasetSource and is therefore considered",
          "89:     # as a candidate for resolution",
          "90:     registry.resolve(\"candidate1:\" + str(tmp_path), candidate_sources=[TestDatasetSource])",
          "91:     with pytest.raises(MlflowException, match=\"Could not find a source information resolver\"):",
          "92:         # CandidateDatasetSource2 is not a superclass of CandidateDatasetSource1 or",
          "93:         # TestDatasetSource and cannot resolve raw sources with scheme \"candidate1\"",
          "94:         registry.resolve(\"candidate1:\" + str(tmp_path), candidate_sources=[CandidateDatasetSource2])",
          "97: def test_resolve_dataset_source_maintains_consistent_order_and_uses_last_registered_match(tmp_path):",
          "98:     \"\"\"This test requires the package in tests/resources/mlflow-test-plugin to be installed\"\"\"",
          "100:     from mlflow_test_plugin.dummy_dataset_source import DummyDatasetSource",
          "102:     class TestDatasetSourceCopy1(TestDatasetSource):",
          "103:         pass",
          "105:     class TestDatasetSourceCopy2(TestDatasetSource):",
          "106:         pass",
          "108:     registry1 = DatasetSourceRegistry()",
          "109:     registry1.register(TestDatasetSource)",
          "110:     registry1.register(TestDatasetSourceCopy1)",
          "111:     registry1.register(TestDatasetSourceCopy2)",
          "112:     source1 = registry1.resolve(\"test:/\" + str(tmp_path))",
          "113:     assert isinstance(source1, TestDatasetSourceCopy2)",
          "115:     registry2 = DatasetSourceRegistry()",
          "116:     registry2.register(TestDatasetSource)",
          "117:     registry2.register(TestDatasetSourceCopy2)",
          "118:     registry2.register(TestDatasetSourceCopy1)",
          "119:     source2 = registry2.resolve(\"test:/\" + str(tmp_path))",
          "120:     assert isinstance(source2, TestDatasetSourceCopy1)",
          "122:     # Verify that a different matching dataset source can still be resolved via `candidates`",
          "123:     source3 = registry2.resolve(",
          "124:         \"test:/\" + str(tmp_path), candidate_sources=[TestDatasetSourceCopy2]",
          "125:     )",
          "126:     assert isinstance(source3, TestDatasetSourceCopy2)",
          "128:     # Verify that last registered order applies to entrypoints too",
          "129:     class DummyDatasetSourceCopy(DummyDatasetSource):",
          "130:         pass",
          "132:     registry3 = DatasetSourceRegistry()",
          "133:     registry3.register(DummyDatasetSourceCopy)",
          "134:     source4 = registry3.resolve(\"dummy:/\" + str(tmp_path))",
          "135:     assert isinstance(source4, DummyDatasetSourceCopy)",
          "136:     registry3.register_entrypoints()",
          "137:     source5 = registry3.resolve(\"dummy:/\" + str(tmp_path))",
          "138:     assert isinstance(source5, DummyDatasetSource)",
          "141: def test_resolve_dataset_source_warns_when_multiple_matching_sources_found(tmp_path):",
          "142:     class TestDatasetSourceCopy1(TestDatasetSource):",
          "143:         pass",
          "145:     class TestDatasetSourceCopy2(TestDatasetSource):",
          "146:         pass",
          "148:     registry1 = DatasetSourceRegistry()",
          "149:     registry1.register(TestDatasetSource)",
          "150:     registry1.register(TestDatasetSourceCopy1)",
          "151:     registry1.register(TestDatasetSourceCopy2)",
          "153:     with mock.patch(\"mlflow.data.dataset_source_registry.warnings.warn\") as mock_warn:",
          "154:         registry1.resolve(\"test:/\" + str(tmp_path))",
          "155:         mock_warn.assert_called_once()",
          "156:         call_args, _ = mock_warn.call_args",
          "157:         multiple_match_msg = call_args[0]",
          "158:         assert (",
          "159:             \"The specified dataset source can be interpreted in multiple ways\" in multiple_match_msg",
          "160:         )",
          "161:         assert (",
          "162:             \"TestDatasetSource, TestDatasetSourceCopy1, TestDatasetSourceCopy2\"",
          "163:             in multiple_match_msg",
          "164:         )",
          "165:         assert (",
          "166:             \"MLflow will assume that this is a TestDatasetSourceCopy2 source\" in multiple_match_msg",
          "167:         )",
          "170: def test_dataset_sources_are_importable_from_sources_module(tmp_path):",
          "171:     from mlflow.data.sources import LocalArtifactDatasetSource",
          "173:     src = LocalArtifactDatasetSource(tmp_path)",
          "174:     assert src._get_source_type() == \"local\"",
          "175:     assert src.uri == tmp_path",
          "177:     from mlflow.data.sources import DeltaDatasetSource",
          "179:     src = DeltaDatasetSource(path=tmp_path)",
          "180:     assert src._get_source_type() == \"delta_table\"",
          "181:     assert src.path == tmp_path",
          "",
          "---------------"
        ],
        "tests/data/test_delta_dataset_source.py||tests/data/test_delta_dataset_source.py": [
          "File: tests/data/test_delta_dataset_source.py -> tests/data/test_delta_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import pytest",
          "3: import pandas as pd",
          "5: from mlflow.data.dataset_source_registry import get_dataset_source_from_json",
          "6: from mlflow.data.delta_dataset_source import DeltaDatasetSource",
          "7: from mlflow.exceptions import MlflowException",
          "10: @pytest.fixture(scope=\"class\", autouse=True)",
          "11: def spark_session():",
          "12:     from pyspark.sql import SparkSession",
          "14:     session = (",
          "15:         SparkSession.builder.master(\"local[*]\")",
          "16:         .config(\"spark.jars.packages\", \"io.delta:delta-core_2.12:2.4.0\")",
          "17:         .config(\"spark.sql.extensions\", \"io.delta.sql.DeltaSparkSessionExtension\")",
          "18:         .config(",
          "19:             \"spark.sql.catalog.spark_catalog\", \"org.apache.spark.sql.delta.catalog.DeltaCatalog\"",
          "20:         )",
          "21:         .getOrCreate()",
          "22:     )",
          "23:     yield session",
          "24:     session.stop()",
          "27: def test_delta_dataset_source_from_path(spark_session, tmp_path):",
          "28:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "29:     df_spark = spark_session.createDataFrame(df)",
          "30:     path = str(tmp_path / \"temp.delta\")",
          "31:     df_spark.write.format(\"delta\").mode(\"overwrite\").save(path)",
          "33:     delta_datasource = DeltaDatasetSource(path=path)",
          "34:     loaded_df_spark = delta_datasource.load()",
          "35:     assert loaded_df_spark.count() == df_spark.count()",
          "36:     assert delta_datasource.to_json() == json.dumps(",
          "37:         {",
          "38:             \"path\": path,",
          "39:         }",
          "40:     )",
          "42:     reloaded_source = get_dataset_source_from_json(",
          "43:         delta_datasource.to_json(), source_type=delta_datasource._get_source_type()",
          "44:     )",
          "45:     assert isinstance(reloaded_source, DeltaDatasetSource)",
          "46:     assert type(delta_datasource) == type(reloaded_source)",
          "47:     assert reloaded_source.to_json() == delta_datasource.to_json()",
          "50: def test_delta_dataset_source_from_table(spark_session, tmp_path):",
          "51:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "52:     df_spark = spark_session.createDataFrame(df)",
          "53:     df_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(",
          "54:         \"default.temp_delta\", path=tmp_path",
          "55:     )",
          "57:     delta_datasource = DeltaDatasetSource(delta_table_name=\"temp_delta\")",
          "58:     loaded_df_spark = delta_datasource.load()",
          "59:     assert loaded_df_spark.count() == df_spark.count()",
          "60:     assert delta_datasource.to_json() == json.dumps(",
          "61:         {",
          "62:             \"delta_table_name\": \"temp_delta\",",
          "63:         }",
          "64:     )",
          "66:     reloaded_source = get_dataset_source_from_json(",
          "67:         delta_datasource.to_json(), source_type=delta_datasource._get_source_type()",
          "68:     )",
          "69:     assert isinstance(reloaded_source, DeltaDatasetSource)",
          "70:     assert type(delta_datasource) == type(reloaded_source)",
          "71:     assert reloaded_source.to_json() == delta_datasource.to_json()",
          "74: def test_delta_dataset_source_from_table_versioned(spark_session, tmp_path):",
          "75:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "76:     df_spark = spark_session.createDataFrame(df)",
          "77:     df_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(",
          "78:         \"default.temp_delta_versioned\", path=tmp_path",
          "79:     )",
          "81:     df2 = pd.DataFrame([[1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "82:     df2_spark = spark_session.createDataFrame(df2)",
          "83:     df2_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(",
          "84:         \"default.temp_delta_versioned\", path=tmp_path",
          "85:     )",
          "87:     delta_datasource = DeltaDatasetSource(",
          "88:         delta_table_name=\"temp_delta_versioned\", delta_table_version=1",
          "89:     )",
          "90:     loaded_df_spark = delta_datasource.load()",
          "91:     assert loaded_df_spark.count() == df2_spark.count()",
          "92:     assert delta_datasource.to_json() == json.dumps(",
          "93:         {",
          "94:             \"delta_table_name\": \"temp_delta_versioned\",",
          "95:             \"delta_table_version\": 1,",
          "96:         }",
          "97:     )",
          "99:     reloaded_source = get_dataset_source_from_json(",
          "100:         delta_datasource.to_json(), source_type=delta_datasource._get_source_type()",
          "101:     )",
          "102:     assert isinstance(reloaded_source, DeltaDatasetSource)",
          "103:     assert type(delta_datasource) == type(reloaded_source)",
          "104:     assert reloaded_source.to_json() == delta_datasource.to_json()",
          "107: def test_delta_dataset_source_too_many_inputs(spark_session, tmp_path):",
          "108:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "109:     df_spark = spark_session.createDataFrame(df)",
          "110:     df_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(",
          "111:         \"default.temp_delta_too_many_inputs\", path=tmp_path",
          "112:     )",
          "114:     with pytest.raises(MlflowException, match='Must specify exactly one of \"path\" or \"table_name\"'):",
          "115:         DeltaDatasetSource(path=tmp_path, delta_table_name=\"temp_delta_too_many_inputs\")",
          "",
          "---------------"
        ],
        "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py": [
          "File: tests/data/test_http_dataset_source.py -> tests/data/test_http_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import os",
          "3: import pytest",
          "4: from unittest import mock",
          "6: import pandas as pd",
          "8: from mlflow.data.dataset_source_registry import resolve_dataset_source, get_dataset_source_from_json",
          "9: from mlflow.data.http_dataset_source import HTTPDatasetSource",
          "10: from mlflow.exceptions import MlflowException",
          "11: from mlflow.utils.rest_utils import cloud_storage_http_request",
          "14: def test_source_to_and_from_json():",
          "15:     url = \"http://mywebsite.com/path/to/my/dataset.txt\"",
          "16:     source = HTTPDatasetSource(url)",
          "17:     assert source.to_json() == json.dumps({\"url\": url})",
          "19:     reloaded_source = get_dataset_source_from_json(",
          "20:         source.to_json(), source_type=source._get_source_type()",
          "21:     )",
          "22:     assert isinstance(reloaded_source, HTTPDatasetSource)",
          "23:     assert type(source) == type(reloaded_source)",
          "24:     assert source.url == reloaded_source.url == url",
          "27: def test_http_dataset_source_is_registered_and_resolvable():",
          "28:     source1 = resolve_dataset_source(",
          "29:         \"http://mywebsite.com/path/to/my/dataset.txt\", candidate_sources=[HTTPDatasetSource]",
          "30:     )",
          "31:     assert isinstance(source1, HTTPDatasetSource)",
          "32:     assert source1.url == \"http://mywebsite.com/path/to/my/dataset.txt\"",
          "34:     source2 = resolve_dataset_source(",
          "35:         \"https://otherwebsite.net\", candidate_sources=[HTTPDatasetSource]",
          "36:     )",
          "37:     assert isinstance(source2, HTTPDatasetSource)",
          "38:     assert source2.url == \"https://otherwebsite.net\"",
          "40:     with pytest.raises(MlflowException, match=\"Could not find a source information resolver\"):",
          "41:         resolve_dataset_source(\"s3://mybucket\", candidate_sources=[HTTPDatasetSource])",
          "43:     with pytest.raises(MlflowException, match=\"Could not find a source information resolver\"):",
          "44:         resolve_dataset_source(\"otherscheme://mybucket\", candidate_sources=[HTTPDatasetSource])",
          "46:     with pytest.raises(MlflowException, match=\"Could not find a source information resolver\"):",
          "47:         resolve_dataset_source(\"htp://mybucket\", candidate_sources=[HTTPDatasetSource])",
          "50: def test_source_load(tmp_path):",
          "51:     source1 = HTTPDatasetSource(",
          "52:         \"https://raw.githubusercontent.com/mlflow/mlflow/master/tests/datasets/winequality-red.csv\"",
          "53:     )",
          "55:     loaded1 = source1.load()",
          "56:     parsed1 = pd.read_csv(loaded1, sep=\";\")",
          "57:     # Verify that the expected data was downloaded by checking for an expected column and asserting",
          "58:     # that several rows are present",
          "59:     assert \"fixed acidity\" in parsed1.columns",
          "60:     assert len(parsed1) > 10",
          "62:     loaded2 = source1.load(dst_path=tmp_path)",
          "63:     assert loaded2 == str(tmp_path / \"winequality-red.csv\")",
          "64:     parsed2 = pd.read_csv(loaded2, sep=\";\")",
          "65:     # Verify that the expected data was downloaded by checking for an expected column and asserting",
          "66:     # that several rows are present",
          "67:     assert \"fixed acidity\" in parsed2.columns",
          "68:     assert len(parsed1) > 10",
          "70:     source2 = HTTPDatasetSource(",
          "71:         \"https://raw.githubusercontent.com/mlflow/mlflow/master/tests/datasets/winequality-red.csv#foo?query=param\"",
          "72:     )",
          "73:     loaded3 = source2.load(dst_path=tmp_path)",
          "74:     assert loaded3 == str(tmp_path / \"winequality-red.csv\")",
          "75:     parsed3 = pd.read_csv(loaded3, sep=\";\")",
          "76:     assert \"fixed acidity\" in parsed3.columns",
          "77:     assert len(parsed1) > 10",
          "79:     source3 = HTTPDatasetSource(\"https://github.com/\")",
          "80:     loaded4 = source3.load()",
          "81:     assert os.path.exists(loaded4)",
          "82:     assert os.path.basename(loaded4) == \"dataset_source\"",
          "84:     source4 = HTTPDatasetSource(\"https://github.com\")",
          "85:     loaded5 = source4.load()",
          "86:     assert os.path.exists(loaded5)",
          "87:     assert os.path.basename(loaded5) == \"dataset_source\"",
          "89:     def cloud_storage_http_request_with_fast_fail(*args, **kwargs):",
          "90:         kwargs[\"max_retries\"] = 1",
          "91:         kwargs[\"timeout\"] = 5",
          "92:         return cloud_storage_http_request(*args, **kwargs)",
          "94:     source5 = HTTPDatasetSource(\"https://nonexistentwebsitebuiltbythemlflowteam112312.com\")",
          "95:     with mock.patch(",
          "96:         \"mlflow.data.http_dataset_source.cloud_storage_http_request\",",
          "97:         side_effect=cloud_storage_http_request_with_fast_fail,",
          "98:     ), pytest.raises(Exception, match=\"Max retries exceeded with url\"):",
          "99:         source5.load()",
          "102: @pytest.mark.parametrize(",
          "103:     (\"attachment_filename\", \"expected_filename\"),",
          "104:     [",
          "105:         (\"testfile.txt\", \"testfile.txt\"),",
          "106:         ('\"testfile.txt\"', \"testfile.txt\"),",
          "107:         (\"'testfile.txt'\", \"testfile.txt\"),",
          "108:         (None, \"winequality-red.csv\"),",
          "109:     ],",
          "110: )",
          "111: def test_source_load_with_content_disposition_header(attachment_filename, expected_filename):",
          "112:     def download_with_mock_content_disposition_headers(*args, **kwargs):",
          "113:         response = cloud_storage_http_request(*args, **kwargs)",
          "114:         if attachment_filename is not None:",
          "115:             response.headers[\"Content-Disposition\"] = f\"attachment; filename={attachment_filename}\"",
          "116:         else:",
          "117:             response.headers[\"Content-Disposition\"] = \"attachment\"",
          "118:         return response",
          "120:     with mock.patch(",
          "121:         \"mlflow.data.http_dataset_source.cloud_storage_http_request\",",
          "122:         side_effect=download_with_mock_content_disposition_headers,",
          "123:     ):",
          "124:         source = HTTPDatasetSource(",
          "125:             \"https://raw.githubusercontent.com/mlflow/mlflow/master/tests/datasets/winequality-red.csv\"",
          "126:         )",
          "127:         source.load()",
          "128:         loaded = source.load()",
          "129:         assert os.path.exists(loaded)",
          "130:         assert os.path.basename(loaded) == expected_filename",
          "",
          "---------------"
        ],
        "tests/data/test_huggingface_dataset_and_source.py||tests/data/test_huggingface_dataset_and_source.py": [
          "File: tests/data/test_huggingface_dataset_and_source.py -> tests/data/test_huggingface_dataset_and_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import os",
          "4: import datasets",
          "5: import pandas as pd",
          "6: import pytest",
          "8: import mlflow.data",
          "9: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "10: import mlflow.data.huggingface_dataset",
          "11: from mlflow.data.dataset_source_registry import get_dataset_source_from_json",
          "12: from mlflow.data.huggingface_dataset import HuggingFaceDataset",
          "13: from mlflow.data.huggingface_dataset_source import HuggingFaceDatasetSource",
          "14: from mlflow.exceptions import MlflowException",
          "15: from mlflow.models.evaluation.base import EvaluationDataset",
          "16: from mlflow.types.schema import Schema",
          "17: from mlflow.types.utils import _infer_schema",
          "20: def test_from_huggingface_dataset_constructs_expected_dataset():",
          "21:     ds = datasets.load_dataset(\"rotten_tomatoes\", split=\"train\")",
          "22:     mlflow_ds = mlflow.data.from_huggingface(ds, path=\"rotten_tomatoes\")",
          "24:     assert isinstance(mlflow_ds, HuggingFaceDataset)",
          "25:     assert mlflow_ds.ds == ds",
          "26:     assert mlflow_ds.schema == _infer_schema(ds.to_pandas())",
          "27:     assert mlflow_ds.profile == {",
          "28:         \"num_rows\": ds.num_rows,",
          "29:         \"dataset_size\": ds.dataset_size,",
          "30:         \"size_in_bytes\": ds.size_in_bytes,",
          "31:     }",
          "33:     assert isinstance(mlflow_ds.source, HuggingFaceDatasetSource)",
          "34:     reloaded_ds = mlflow_ds.source.load()",
          "35:     assert reloaded_ds.builder_name == ds.builder_name",
          "36:     assert reloaded_ds.config_name == ds.config_name",
          "37:     assert reloaded_ds.split == ds.split == \"train\"",
          "38:     assert reloaded_ds.num_rows == ds.num_rows",
          "40:     reloaded_mlflow_ds = mlflow.data.from_huggingface(reloaded_ds, path=\"rotten_tomatoes\")",
          "41:     assert reloaded_mlflow_ds.digest == mlflow_ds.digest",
          "44: def test_from_huggingface_dataset_constructs_expected_dataset_with_revision():",
          "45:     ds_new = datasets.load_dataset(",
          "46:         \"rotten_tomatoes\", split=\"train\", revision=\"c33cbf965006dba64f134f7bef69c53d5d0d285d\"",
          "47:     )",
          "48:     # NB: Newer versions of the rotten tomatoes dataset define a text-classification task template",
          "49:     assert ds_new.task_templates",
          "51:     ds_old = datasets.load_dataset(",
          "52:         \"rotten_tomatoes\", split=\"train\", revision=\"8ca2693371541a5ba2b23981de4222be3bef149f\"",
          "53:     )",
          "54:     # NB: Older versions of the rotten tomatoes dataset don't define any task templates",
          "55:     assert not ds_old.task_templates",
          "57:     mlflow_ds_new = mlflow.data.from_huggingface(",
          "58:         ds_new, path=\"rotten_tomatoes\", revision=\"c33cbf965006dba64f134f7bef69c53d5d0d285d\"",
          "59:     )",
          "60:     reloaded_ds_new = mlflow_ds_new.source.load()",
          "61:     assert reloaded_ds_new.task_templates",
          "63:     mlflow_ds_old = mlflow.data.from_huggingface(",
          "64:         ds_old, path=\"rotten_tomatoes\", revision=\"8ca2693371541a5ba2b23981de4222be3bef149f\"",
          "65:     )",
          "66:     reloaded_ds_old = mlflow_ds_old.source.load()",
          "67:     assert not reloaded_ds_old.task_templates",
          "70: def test_from_huggingface_dataset_constructs_expected_dataset_with_task():",
          "71:     ds_text_class = datasets.load_dataset(",
          "72:         \"rotten_tomatoes\", split=\"train\", task=\"text-classification\"",
          "73:     )",
          "74:     # NB: Specifying the 'text-classification' task transforms the \"label\" column of the",
          "75:     # dataset features and renames it to \"labels\"",
          "76:     assert \"labels\" in ds_text_class.features",
          "78:     ds_no_text_class = datasets.load_dataset(\"rotten_tomatoes\", split=\"train\")",
          "79:     assert \"labels\" not in ds_no_text_class.features",
          "81:     mlflow_ds_text_class = mlflow.data.from_huggingface(",
          "82:         ds_text_class, path=\"rotten_tomatoes\", task=\"text-classification\"",
          "83:     )",
          "84:     reloaded_ds_text_class = mlflow_ds_text_class.source.load()",
          "85:     assert \"labels\" in reloaded_ds_text_class.features",
          "87:     mlflow_ds_no_text_class = mlflow.data.from_huggingface(ds_text_class, path=\"rotten_tomatoes\")",
          "88:     reloaded_ds_no_text_class = mlflow_ds_no_text_class.source.load()",
          "89:     assert \"labels\" not in reloaded_ds_no_text_class.features",
          "92: def test_from_huggingface_dataset_constructs_expected_dataset_with_data_files():",
          "93:     data_files = {\"validation\": \"en/c4-validation.00001-of-00008.json.gz\"}",
          "94:     ds = datasets.load_dataset(\"allenai/c4\", data_files=data_files, split=\"validation\")",
          "95:     mlflow_ds = mlflow.data.from_huggingface(ds, path=\"allenai/c4\", data_files=data_files)",
          "97:     assert isinstance(mlflow_ds, HuggingFaceDataset)",
          "98:     assert mlflow_ds.ds == ds",
          "99:     assert mlflow_ds.schema == _infer_schema(ds.to_pandas())",
          "100:     assert mlflow_ds.profile == {",
          "101:         \"num_rows\": ds.num_rows,",
          "102:         \"dataset_size\": ds.dataset_size,",
          "103:         \"size_in_bytes\": ds.size_in_bytes,",
          "104:     }",
          "106:     assert isinstance(mlflow_ds.source, HuggingFaceDatasetSource)",
          "107:     reloaded_ds = mlflow_ds.source.load()",
          "108:     assert reloaded_ds.builder_name == ds.builder_name",
          "109:     assert reloaded_ds.config_name == ds.config_name",
          "110:     assert reloaded_ds.split == ds.split == \"validation\"",
          "111:     assert reloaded_ds.num_rows == ds.num_rows",
          "113:     reloaded_mlflow_ds = mlflow.data.from_huggingface(",
          "114:         reloaded_ds, path=\"allenai/c4\", data_files=data_files",
          "115:     )",
          "116:     assert reloaded_mlflow_ds.digest == mlflow_ds.digest",
          "119: def test_from_huggingface_dataset_constructs_expected_dataset_with_data_dir(tmp_path):",
          "120:     df = pd.DataFrame.from_dict({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})",
          "121:     data_dir = \"data\"",
          "122:     os.makedirs(tmp_path / data_dir)",
          "123:     df.to_csv(tmp_path / data_dir / \"my_data.csv\")",
          "124:     ds = datasets.load_dataset(str(tmp_path), data_dir=data_dir, name=\"csv\", split=\"train\")",
          "125:     mlflow_ds = mlflow.data.from_huggingface(ds, path=str(tmp_path), data_dir=data_dir)",
          "127:     assert mlflow_ds.ds == ds",
          "128:     assert mlflow_ds.schema == _infer_schema(ds.to_pandas())",
          "129:     assert mlflow_ds.profile == {",
          "130:         \"num_rows\": ds.num_rows,",
          "131:         \"dataset_size\": ds.dataset_size,",
          "132:         \"size_in_bytes\": ds.size_in_bytes,",
          "133:     }",
          "135:     assert isinstance(mlflow_ds.source, HuggingFaceDatasetSource)",
          "136:     reloaded_ds = mlflow_ds.source.load()",
          "137:     assert reloaded_ds.builder_name == ds.builder_name",
          "138:     assert reloaded_ds.config_name == ds.config_name",
          "139:     assert reloaded_ds.split == ds.split == \"train\"",
          "140:     assert reloaded_ds.num_rows == ds.num_rows",
          "142:     reloaded_mlflow_ds = mlflow.data.from_huggingface(",
          "143:         reloaded_ds, path=str(tmp_path), data_dir=data_dir",
          "144:     )",
          "145:     assert reloaded_mlflow_ds.digest == mlflow_ds.digest",
          "148: def test_from_huggingface_dataset_respects_user_specified_name_and_digest():",
          "149:     ds = datasets.load_dataset(\"rotten_tomatoes\", split=\"train\")",
          "150:     mlflow_ds = mlflow.data.from_huggingface(",
          "151:         ds, path=\"rotten_tomatoes\", name=\"myname\", digest=\"mydigest\"",
          "152:     )",
          "153:     assert mlflow_ds.name == \"myname\"",
          "154:     assert mlflow_ds.digest == \"mydigest\"",
          "157: def test_from_huggingface_dataset_digest_is_consistent_for_large_ordered_datasets(tmp_path):",
          "158:     assert (",
          "159:         mlflow.data.huggingface_dataset._MAX_ROWS_FOR_DIGEST_COMPUTATION_AND_SCHEMA_INFERENCE",
          "160:         < 200000",
          "161:     )",
          "163:     df = pd.DataFrame.from_dict(",
          "164:         {",
          "165:             \"a\": list(range(200000)),",
          "166:             \"b\": list(range(200000)),",
          "167:         }",
          "168:     )",
          "169:     data_dir = \"data\"",
          "170:     os.makedirs(tmp_path / data_dir)",
          "171:     df.to_csv(tmp_path / data_dir / \"my_data.csv\")",
          "173:     ds = datasets.load_dataset(str(tmp_path), data_dir=data_dir, name=\"csv\", split=\"train\")",
          "174:     mlflow_ds = mlflow.data.from_huggingface(ds, path=str(tmp_path), data_dir=data_dir)",
          "175:     assert mlflow_ds.digest == \"1dda4ce8\"",
          "178: def test_from_huggingface_dataset_throws_for_dataset_dict():",
          "179:     ds = datasets.load_dataset(\"rotten_tomatoes\")",
          "180:     assert isinstance(ds, datasets.DatasetDict)",
          "182:     with pytest.raises(",
          "183:         MlflowException, match=\"must be an instance of ``datasets.Dataset``.*DatasetDict\"",
          "184:     ):",
          "185:         mlflow.data.from_huggingface(ds, path=\"rotten_tomatoes\")",
          "188: def test_from_huggingface_dataset_no_source_specified():",
          "189:     ds = datasets.load_dataset(\"rotten_tomatoes\", split=\"train\")",
          "190:     mlflow_ds = mlflow.data.from_huggingface(ds)",
          "192:     assert isinstance(mlflow_ds, HuggingFaceDataset)",
          "194:     assert isinstance(mlflow_ds.source, CodeDatasetSource)",
          "195:     assert \"mlflow.source.name\" in mlflow_ds.source.to_json()",
          "198: def test_dataset_conversion_to_json():",
          "199:     ds = datasets.load_dataset(\"rotten_tomatoes\", split=\"train\")",
          "200:     mlflow_ds = mlflow.data.from_huggingface(ds, path=\"rotten_tomatoes\")",
          "202:     dataset_json = mlflow_ds.to_json()",
          "203:     parsed_json = json.loads(dataset_json)",
          "204:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "205:     assert parsed_json[\"name\"] == mlflow_ds.name",
          "206:     assert parsed_json[\"digest\"] == mlflow_ds.digest",
          "207:     assert parsed_json[\"source\"] == mlflow_ds.source.to_json()",
          "208:     assert parsed_json[\"source_type\"] == mlflow_ds.source._get_source_type()",
          "209:     assert parsed_json[\"profile\"] == json.dumps(mlflow_ds.profile)",
          "211:     schema_json = json.dumps(json.loads(parsed_json[\"schema\"])[\"mlflow_colspec\"])",
          "212:     assert Schema.from_json(schema_json) == mlflow_ds.schema",
          "215: def test_dataset_source_conversion_to_json():",
          "216:     ds = datasets.load_dataset(",
          "217:         \"rotten_tomatoes\",",
          "218:         split=\"train\",",
          "219:         revision=\"c33cbf965006dba64f134f7bef69c53d5d0d285d\",",
          "220:         task=\"text-classification\",",
          "221:     )",
          "222:     mlflow_ds = mlflow.data.from_huggingface(",
          "223:         ds,",
          "224:         path=\"rotten_tomatoes\",",
          "225:         revision=\"c33cbf965006dba64f134f7bef69c53d5d0d285d\",",
          "226:         task=\"text-classification\",",
          "227:     )",
          "228:     source = mlflow_ds.source",
          "230:     source_json = source.to_json()",
          "231:     parsed_source = json.loads(source_json)",
          "232:     assert parsed_source[\"revision\"] == \"c33cbf965006dba64f134f7bef69c53d5d0d285d\"",
          "233:     assert parsed_source[\"task\"] == \"text-classification\"",
          "234:     assert parsed_source[\"split\"] == \"train\"",
          "235:     assert parsed_source[\"config_name\"] == \"default\"",
          "236:     assert parsed_source[\"path\"] == \"rotten_tomatoes\"",
          "237:     assert not parsed_source[\"data_dir\"]",
          "238:     assert not parsed_source[\"data_files\"]",
          "240:     reloaded_source = HuggingFaceDatasetSource.from_json(source_json)",
          "241:     assert json.loads(reloaded_source.to_json()) == parsed_source",
          "243:     reloaded_source = get_dataset_source_from_json(",
          "244:         source_json, source_type=source._get_source_type()",
          "245:     )",
          "246:     assert isinstance(reloaded_source, HuggingFaceDatasetSource)",
          "247:     assert type(source) == type(reloaded_source)",
          "248:     assert reloaded_source.to_json() == source.to_json()",
          "251: def test_to_evaluation_dataset():",
          "252:     import numpy as np",
          "254:     ds = datasets.load_dataset(\"rotten_tomatoes\", split=\"train\")",
          "255:     dataset = mlflow.data.from_huggingface(ds, path=\"rotten_tomatoes\", targets=\"label\")",
          "257:     evaluation_dataset = dataset.to_evaluation_dataset()",
          "258:     assert isinstance(evaluation_dataset, EvaluationDataset)",
          "259:     assert evaluation_dataset.features_data.equals(dataset.ds.to_pandas().drop(\"label\", axis=1))",
          "260:     assert np.array_equal(evaluation_dataset.labels_data, dataset.ds.to_pandas()[\"label\"].values)",
          "",
          "---------------"
        ],
        "tests/data/test_numpy_dataset.py||tests/data/test_numpy_dataset.py": [
          "File: tests/data/test_numpy_dataset.py -> tests/data/test_numpy_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import numpy as np",
          "3: import pandas as pd",
          "5: import mlflow.data",
          "6: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "7: from mlflow.data.filesystem_dataset_source import FileSystemDatasetSource",
          "8: from mlflow.data.numpy_dataset import NumpyDataset",
          "9: from mlflow.data.pyfunc_dataset_mixin import PyFuncInputsOutputs",
          "10: from mlflow.data.schema import TensorDatasetSchema",
          "11: from mlflow.models.evaluation.base import EvaluationDataset",
          "12: from mlflow.types.utils import _infer_schema",
          "14: import pytest",
          "15: from tests.resources.data.dataset_source import TestDatasetSource",
          "18: def test_conversion_to_json():",
          "19:     source_uri = \"test:/my/test/uri\"",
          "20:     source = TestDatasetSource._resolve(source_uri)",
          "21:     dataset = NumpyDataset(features=np.array([1, 2, 3]), source=source, name=\"testname\")",
          "23:     dataset_json = dataset.to_json()",
          "24:     parsed_json = json.loads(dataset_json)",
          "25:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "26:     assert parsed_json[\"name\"] == dataset.name",
          "27:     assert parsed_json[\"digest\"] == dataset.digest",
          "28:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "29:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "30:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "32:     parsed_schema = json.loads(parsed_json[\"schema\"])",
          "33:     assert TensorDatasetSchema.from_dict(parsed_schema) == dataset.schema",
          "36: @pytest.mark.parametrize(",
          "37:     (\"features\", \"targets\"),",
          "38:     [",
          "39:         (",
          "40:             {",
          "41:                 \"a\": np.array([1, 2, 3]),",
          "42:                 \"b\": np.array([[4, 5]]),",
          "43:             },",
          "44:             {",
          "45:                 \"c\": np.array([1]),",
          "46:                 \"d\": np.array([[[2]]]),",
          "47:             },",
          "48:         ),",
          "49:         (",
          "50:             np.array([1, 2, 3]),",
          "51:             {",
          "52:                 \"c\": np.array([1]),",
          "53:                 \"d\": np.array([[[2]]]),",
          "54:             },",
          "55:         ),",
          "56:         (",
          "57:             {",
          "58:                 \"a\": np.array([1, 2, 3]),",
          "59:                 \"b\": np.array([[4, 5]]),",
          "60:             },",
          "61:             np.array([1, 2, 3]),",
          "62:         ),",
          "63:     ],",
          "64: )",
          "65: def test_conversion_to_json_with_multi_tensor_features_and_targets(features, targets):",
          "66:     source_uri = \"test:/my/test/uri\"",
          "67:     source = TestDatasetSource._resolve(source_uri)",
          "68:     dataset = NumpyDataset(features=features, targets=targets, source=source)",
          "70:     dataset_json = dataset.to_json()",
          "71:     parsed_json = json.loads(dataset_json)",
          "72:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "73:     assert parsed_json[\"name\"] == dataset.name",
          "74:     assert parsed_json[\"digest\"] == dataset.digest",
          "75:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "76:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "77:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "78:     parsed_schema = json.loads(parsed_json[\"schema\"])",
          "79:     assert TensorDatasetSchema.from_dict(parsed_schema) == dataset.schema",
          "82: @pytest.mark.parametrize(",
          "83:     (\"features\", \"targets\"),",
          "84:     [",
          "85:         (",
          "86:             {",
          "87:                 \"a\": np.array([1, 2, 3]),",
          "88:                 \"b\": np.array([[4, 5]]),",
          "89:             },",
          "90:             {",
          "91:                 \"c\": np.array([1]),",
          "92:                 \"d\": np.array([[[2]]]),",
          "93:             },",
          "94:         ),",
          "95:         (",
          "96:             np.array([1, 2, 3]),",
          "97:             {",
          "98:                 \"c\": np.array([1]),",
          "99:                 \"d\": np.array([[[2]]]),",
          "100:             },",
          "101:         ),",
          "102:         (",
          "103:             {",
          "104:                 \"a\": np.array([1, 2, 3]),",
          "105:                 \"b\": np.array([[4, 5]]),",
          "106:             },",
          "107:             np.array([1, 2, 3]),",
          "108:         ),",
          "109:     ],",
          "110: )",
          "111: def test_schema_and_profile_with_multi_tensor_features_and_targets(features, targets):",
          "112:     source_uri = \"test:/my/test/uri\"",
          "113:     source = TestDatasetSource._resolve(source_uri)",
          "114:     dataset = NumpyDataset(features=features, targets=targets, source=source)",
          "116:     assert isinstance(dataset.schema, TensorDatasetSchema)",
          "117:     assert dataset.schema.features == _infer_schema(features)",
          "118:     assert dataset.schema.targets == _infer_schema(targets)",
          "120:     if isinstance(features, dict):",
          "121:         assert {",
          "122:             \"features_shape\": {key: array.shape for key, array in features.items()},",
          "123:             \"features_size\": {key: array.size for key, array in features.items()},",
          "124:             \"features_nbytes\": {key: array.nbytes for key, array in features.items()},",
          "125:         }.items() <= dataset.profile.items()",
          "126:     else:",
          "127:         assert {",
          "128:             \"features_shape\": features.shape,",
          "129:             \"features_size\": features.size,",
          "130:             \"features_nbytes\": features.nbytes,",
          "131:         }.items() <= dataset.profile.items()",
          "133:     if isinstance(targets, dict):",
          "134:         assert {",
          "135:             \"targets_shape\": {key: array.shape for key, array in targets.items()},",
          "136:             \"targets_size\": {key: array.size for key, array in targets.items()},",
          "137:             \"targets_nbytes\": {key: array.nbytes for key, array in targets.items()},",
          "138:         }.items() <= dataset.profile.items()",
          "139:     else:",
          "140:         assert {",
          "141:             \"targets_shape\": targets.shape,",
          "142:             \"targets_size\": targets.size,",
          "143:             \"targets_nbytes\": targets.nbytes,",
          "144:         }.items() <= dataset.profile.items()",
          "147: def test_digest_property_has_expected_value():",
          "148:     source_uri = \"test:/my/test/uri\"",
          "149:     source = TestDatasetSource._resolve(source_uri)",
          "150:     features = np.array([1, 2, 3])",
          "151:     targets = np.array([4, 5, 6])",
          "152:     dataset_with_features = NumpyDataset(features=features, source=source, name=\"testname\")",
          "153:     assert dataset_with_features.digest == dataset_with_features._compute_digest()",
          "154:     assert dataset_with_features.digest == \"fdf1765f\"",
          "155:     dataset_with_features_and_targets = NumpyDataset(",
          "156:         features=features, targets=targets, source=source, name=\"testname\"",
          "157:     )",
          "158:     assert (",
          "159:         dataset_with_features_and_targets.digest",
          "160:         == dataset_with_features_and_targets._compute_digest()",
          "161:     )",
          "162:     assert dataset_with_features_and_targets.digest == \"1387de76\"",
          "165: def test_features_property():",
          "166:     source_uri = \"test:/my/test/uri\"",
          "167:     source = TestDatasetSource._resolve(source_uri)",
          "168:     features = np.array([1, 2, 3])",
          "169:     dataset = NumpyDataset(features=features, source=source, name=\"testname\")",
          "170:     assert np.array_equal(dataset.features, features)",
          "173: def test_targets_property():",
          "174:     source_uri = \"test:/my/test/uri\"",
          "175:     source = TestDatasetSource._resolve(source_uri)",
          "176:     features = np.array([1, 2, 3])",
          "177:     targets = np.array([4, 5, 6])",
          "178:     dataset_with_targets = NumpyDataset(",
          "179:         features=features, targets=targets, source=source, name=\"testname\"",
          "180:     )",
          "181:     assert np.array_equal(dataset_with_targets.targets, targets)",
          "182:     dataset_without_targets = NumpyDataset(features=features, source=source, name=\"testname\")",
          "183:     assert dataset_without_targets.targets is None",
          "186: def test_to_pyfunc():",
          "187:     source_uri = \"test:/my/test/uri\"",
          "188:     source = TestDatasetSource._resolve(source_uri)",
          "189:     features = np.array([1, 2, 3])",
          "190:     dataset = NumpyDataset(features=features, source=source, name=\"testname\")",
          "191:     assert isinstance(dataset.to_pyfunc(), PyFuncInputsOutputs)",
          "194: def test_to_evaluation_dataset():",
          "195:     source_uri = \"test:/my/test/uri\"",
          "196:     source = TestDatasetSource._resolve(source_uri)",
          "197:     features = np.array([[1, 2], [3, 4]])",
          "198:     targets = np.array([0, 1])",
          "199:     dataset = NumpyDataset(features=features, targets=targets, source=source, name=\"testname\")",
          "200:     evaluation_dataset = dataset.to_evaluation_dataset()",
          "201:     assert isinstance(evaluation_dataset, EvaluationDataset)",
          "202:     assert np.array_equal(evaluation_dataset.features_data, features)",
          "203:     assert np.array_equal(evaluation_dataset.labels_data, targets)",
          "206: def test_from_numpy_features_only(tmp_path):",
          "207:     features = np.array([1, 2, 3])",
          "208:     path = tmp_path / \"temp.csv\"",
          "209:     pd.DataFrame(features).to_csv(path)",
          "210:     mlflow_features = mlflow.data.from_numpy(features, source=path)",
          "212:     assert isinstance(mlflow_features, NumpyDataset)",
          "213:     assert np.array_equal(mlflow_features.features, features)",
          "214:     assert mlflow_features.schema == TensorDatasetSchema(features=_infer_schema(features))",
          "215:     assert mlflow_features.profile == {",
          "216:         \"features_shape\": features.shape,",
          "217:         \"features_size\": features.size,",
          "218:         \"features_nbytes\": features.nbytes,",
          "219:     }",
          "221:     assert isinstance(mlflow_features.source, FileSystemDatasetSource)",
          "224: def test_from_numpy_features_and_targets(tmp_path):",
          "225:     features = np.array([[1, 2, 3], [3, 2, 1], [2, 3, 1]])",
          "226:     targets = np.array([4, 5, 6])",
          "227:     path = tmp_path / \"temp.csv\"",
          "228:     pd.DataFrame(features).to_csv(path)",
          "229:     mlflow_ds = mlflow.data.from_numpy(features, targets=targets, source=path)",
          "231:     assert isinstance(mlflow_ds, NumpyDataset)",
          "232:     assert np.array_equal(mlflow_ds.features, features)",
          "233:     assert np.array_equal(mlflow_ds.targets, targets)",
          "234:     assert mlflow_ds.schema == TensorDatasetSchema(",
          "235:         features=_infer_schema(features), targets=_infer_schema(targets)",
          "236:     )",
          "237:     assert mlflow_ds.profile == {",
          "238:         \"features_shape\": features.shape,",
          "239:         \"features_size\": features.size,",
          "240:         \"features_nbytes\": features.nbytes,",
          "241:         \"targets_shape\": targets.shape,",
          "242:         \"targets_size\": targets.size,",
          "243:         \"targets_nbytes\": targets.nbytes,",
          "244:     }",
          "246:     assert isinstance(mlflow_ds.source, FileSystemDatasetSource)",
          "249: def test_from_numpy_no_source_specified():",
          "250:     features = np.array([1, 2, 3])",
          "251:     mlflow_features = mlflow.data.from_numpy(features)",
          "253:     assert isinstance(mlflow_features, NumpyDataset)",
          "255:     assert isinstance(mlflow_features.source, CodeDatasetSource)",
          "256:     assert \"mlflow.source.name\" in mlflow_features.source.to_json()",
          "",
          "---------------"
        ],
        "tests/data/test_pandas_dataset.py||tests/data/test_pandas_dataset.py": [
          "File: tests/data/test_pandas_dataset.py -> tests/data/test_pandas_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import pandas as pd",
          "3: import pytest",
          "4: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "5: from mlflow.models.evaluation.base import EvaluationDataset",
          "7: from tests.resources.data.dataset_source import TestDatasetSource",
          "9: import mlflow.data",
          "10: from mlflow.data.pandas_dataset import PandasDataset",
          "11: from mlflow.data.pyfunc_dataset_mixin import PyFuncInputsOutputs",
          "12: from mlflow.data.filesystem_dataset_source import FileSystemDatasetSource",
          "13: from mlflow.data.spark_dataset_source import SparkDatasetSource",
          "14: from mlflow.data.delta_dataset_source import DeltaDatasetSource",
          "15: from mlflow.exceptions import MlflowException",
          "16: from mlflow.types.schema import Schema",
          "17: from mlflow.types.utils import _infer_schema",
          "20: @pytest.fixture(scope=\"class\", autouse=True)",
          "21: def spark_session():",
          "22:     from pyspark.sql import SparkSession",
          "24:     session = (",
          "25:         SparkSession.builder.master(\"local[*]\")",
          "26:         .config(\"spark.jars.packages\", \"io.delta:delta-core_2.12:2.4.0\")",
          "27:         .config(\"spark.sql.extensions\", \"io.delta.sql.DeltaSparkSessionExtension\")",
          "28:         .config(",
          "29:             \"spark.sql.catalog.spark_catalog\", \"org.apache.spark.sql.delta.catalog.DeltaCatalog\"",
          "30:         )",
          "31:         .getOrCreate()",
          "32:     )",
          "33:     yield session",
          "34:     session.stop()",
          "37: def test_conversion_to_json():",
          "38:     source_uri = \"test:/my/test/uri\"",
          "39:     source = TestDatasetSource._resolve(source_uri)",
          "41:     dataset = PandasDataset(",
          "42:         df=pd.DataFrame([1, 2, 3], columns=[\"Numbers\"]),",
          "43:         source=source,",
          "44:         name=\"testname\",",
          "45:     )",
          "47:     dataset_json = dataset.to_json()",
          "48:     parsed_json = json.loads(dataset_json)",
          "49:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "50:     assert parsed_json[\"name\"] == dataset.name",
          "51:     assert parsed_json[\"digest\"] == dataset.digest",
          "52:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "53:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "54:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "56:     schema_json = json.dumps(json.loads(parsed_json[\"schema\"])[\"mlflow_colspec\"])",
          "57:     assert Schema.from_json(schema_json) == dataset.schema",
          "60: def test_digest_property_has_expected_value():",
          "61:     source_uri = \"test:/my/test/uri\"",
          "62:     source = TestDatasetSource._resolve(source_uri)",
          "63:     dataset = PandasDataset(",
          "64:         df=pd.DataFrame([1, 2, 3], columns=[\"Numbers\"]),",
          "65:         source=source,",
          "66:         name=\"testname\",",
          "67:     )",
          "68:     assert dataset.digest == dataset._compute_digest()",
          "69:     assert dataset.digest == \"31ccce44\"",
          "72: def test_df_property():",
          "73:     source_uri = \"test:/my/test/uri\"",
          "74:     source = TestDatasetSource._resolve(source_uri)",
          "75:     df = pd.DataFrame([1, 2, 3], columns=[\"Numbers\"])",
          "76:     dataset = PandasDataset(",
          "77:         df=df,",
          "78:         source=source,",
          "79:         name=\"testname\",",
          "80:     )",
          "81:     assert dataset.df.equals(df)",
          "84: def test_targets_property():",
          "85:     source_uri = \"test:/my/test/uri\"",
          "86:     source = TestDatasetSource._resolve(source_uri)",
          "87:     df_no_targets = pd.DataFrame([1, 2, 3], columns=[\"Numbers\"])",
          "88:     dataset_no_targets = PandasDataset(",
          "89:         df=df_no_targets,",
          "90:         source=source,",
          "91:         name=\"testname\",",
          "92:     )",
          "93:     assert dataset_no_targets._targets is None",
          "94:     df_with_targets = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "95:     dataset_with_targets = PandasDataset(",
          "96:         df=df_with_targets,",
          "97:         source=source,",
          "98:         targets=\"c\",",
          "99:         name=\"testname\",",
          "100:     )",
          "101:     assert dataset_with_targets._targets == \"c\"",
          "104: def test_with_invalid_targets():",
          "105:     source_uri = \"test:/my/test/uri\"",
          "106:     source = TestDatasetSource._resolve(source_uri)",
          "107:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "108:     with pytest.raises(",
          "109:         MlflowException,",
          "110:         match=\"The specified pandas DataFrame does not contain the specified targets column 'd'.\",",
          "111:     ):",
          "112:         PandasDataset(",
          "113:             df=df,",
          "114:             source=source,",
          "115:             targets=\"d\",",
          "116:             name=\"testname\",",
          "117:         )",
          "120: def test_to_pyfunc():",
          "121:     source_uri = \"test:/my/test/uri\"",
          "122:     source = TestDatasetSource._resolve(source_uri)",
          "123:     df = pd.DataFrame([1, 2, 3], columns=[\"Numbers\"])",
          "124:     dataset = PandasDataset(",
          "125:         df=df,",
          "126:         source=source,",
          "127:         name=\"testname\",",
          "128:     )",
          "129:     assert isinstance(dataset.to_pyfunc(), PyFuncInputsOutputs)",
          "132: def test_to_pyfunc_with_outputs():",
          "133:     source_uri = \"test:/my/test/uri\"",
          "134:     source = TestDatasetSource._resolve(source_uri)",
          "135:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "136:     dataset = PandasDataset(",
          "137:         df=df,",
          "138:         source=source,",
          "139:         targets=\"c\",",
          "140:         name=\"testname\",",
          "141:     )",
          "142:     input_outputs = dataset.to_pyfunc()",
          "143:     assert isinstance(input_outputs, PyFuncInputsOutputs)",
          "144:     assert input_outputs.inputs.equals(pd.DataFrame([[1, 2], [1, 2]], columns=[\"a\", \"b\"]))",
          "145:     assert input_outputs.outputs.equals(pd.Series([3, 3], name=\"c\"))",
          "148: def test_from_pandas_with_targets(tmp_path):",
          "149:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "150:     path = tmp_path / \"temp.csv\"",
          "151:     df.to_csv(path)",
          "152:     dataset = mlflow.data.from_pandas(df, targets=\"c\", source=path)",
          "153:     input_outputs = dataset.to_pyfunc()",
          "154:     assert isinstance(input_outputs, PyFuncInputsOutputs)",
          "155:     assert input_outputs.inputs.equals(pd.DataFrame([[1, 2], [1, 2]], columns=[\"a\", \"b\"]))",
          "156:     assert input_outputs.outputs.equals(pd.Series([3, 3], name=\"c\"))",
          "159: def test_from_pandas_file_system_datasource(tmp_path):",
          "160:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "161:     path = tmp_path / \"temp.csv\"",
          "162:     df.to_csv(path)",
          "163:     mlflow_df = mlflow.data.from_pandas(df, source=path)",
          "165:     assert isinstance(mlflow_df, PandasDataset)",
          "166:     assert mlflow_df.df.equals(df)",
          "167:     assert mlflow_df.schema == _infer_schema(df)",
          "168:     assert mlflow_df.profile == {",
          "169:         \"num_rows\": len(df),",
          "170:         \"num_elements\": df.size,",
          "171:     }",
          "173:     assert isinstance(mlflow_df.source, FileSystemDatasetSource)",
          "176: def test_from_pandas_spark_datasource(spark_session, tmp_path):",
          "177:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "178:     df_spark = spark_session.createDataFrame(df)",
          "179:     path = str(tmp_path / \"temp.parquet\")",
          "180:     df_spark.write.parquet(path)",
          "182:     spark_datasource = SparkDatasetSource(path=path)",
          "183:     mlflow_df = mlflow.data.from_pandas(df, source=spark_datasource)",
          "185:     assert isinstance(mlflow_df, PandasDataset)",
          "186:     assert mlflow_df.df.equals(df)",
          "187:     assert mlflow_df.schema == _infer_schema(df)",
          "188:     assert mlflow_df.profile == {",
          "189:         \"num_rows\": len(df),",
          "190:         \"num_elements\": df.size,",
          "191:     }",
          "193:     assert isinstance(mlflow_df.source, SparkDatasetSource)",
          "196: def test_from_pandas_delta_datasource(spark_session, tmp_path):",
          "197:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "198:     df_spark = spark_session.createDataFrame(df)",
          "199:     path = str(tmp_path / \"temp.delta\")",
          "200:     df_spark.write.format(\"delta\").mode(\"overwrite\").save(path)",
          "202:     delta_datasource = DeltaDatasetSource(path=path)",
          "203:     mlflow_df = mlflow.data.from_pandas(df, source=delta_datasource)",
          "205:     assert isinstance(mlflow_df, PandasDataset)",
          "206:     assert mlflow_df.df.equals(df)",
          "207:     assert mlflow_df.schema == _infer_schema(df)",
          "208:     assert mlflow_df.profile == {",
          "209:         \"num_rows\": len(df),",
          "210:         \"num_elements\": df.size,",
          "211:     }",
          "213:     assert isinstance(mlflow_df.source, DeltaDatasetSource)",
          "216: def test_from_pandas_no_source_specified():",
          "217:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "218:     mlflow_df = mlflow.data.from_pandas(df)",
          "220:     assert isinstance(mlflow_df, PandasDataset)",
          "222:     assert isinstance(mlflow_df.source, CodeDatasetSource)",
          "223:     assert \"mlflow.source.name\" in mlflow_df.source.to_json()",
          "226: def test_to_evaluation_dataset():",
          "227:     import numpy as np",
          "229:     source_uri = \"test:/my/test/uri\"",
          "230:     source = TestDatasetSource._resolve(source_uri)",
          "231:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "232:     dataset = PandasDataset(",
          "233:         df=df,",
          "234:         source=source,",
          "235:         targets=\"c\",",
          "236:         name=\"testname\",",
          "237:     )",
          "238:     evaluation_dataset = dataset.to_evaluation_dataset()",
          "239:     assert isinstance(evaluation_dataset, EvaluationDataset)",
          "240:     assert evaluation_dataset.features_data.equals(df.drop(\"c\", axis=1))",
          "241:     assert np.array_equal(evaluation_dataset.labels_data, df[\"c\"].to_numpy())",
          "",
          "---------------"
        ],
        "tests/data/test_spark_dataset.py||tests/data/test_spark_dataset.py": [
          "File: tests/data/test_spark_dataset.py -> tests/data/test_spark_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import os",
          "3: import pytest",
          "4: import pandas as pd",
          "5: import mlflow.data",
          "6: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "7: from mlflow.data.spark_dataset import SparkDataset",
          "8: from mlflow.data.spark_dataset_source import SparkDatasetSource",
          "9: from mlflow.data.delta_dataset_source import DeltaDatasetSource",
          "10: from mlflow.exceptions import MlflowException",
          "11: from mlflow.models.evaluation.base import EvaluationDataset",
          "12: from mlflow.types.schema import Schema",
          "13: from mlflow.types.utils import _infer_schema",
          "16: @pytest.fixture",
          "17: def spark_session(tmp_path):",
          "18:     from pyspark.sql import SparkSession",
          "20:     session = (",
          "21:         SparkSession.builder.master(\"local[*]\")",
          "22:         .config(\"spark.jars.packages\", \"io.delta:delta-core_2.12:2.4.0\")",
          "23:         .config(\"spark.sql.extensions\", \"io.delta.sql.DeltaSparkSessionExtension\")",
          "24:         .config(",
          "25:             \"spark.sql.catalog.spark_catalog\", \"org.apache.spark.sql.delta.catalog.DeltaCatalog\"",
          "26:         )",
          "27:         .config(\"spark.sql.warehouse.dir\", tmp_path)",
          "28:         .getOrCreate()",
          "29:     )",
          "30:     yield session",
          "31:     session.stop()",
          "34: @pytest.fixture",
          "35: def df():",
          "36:     return pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "39: def _assert_dataframes_equal(df1, df2):",
          "40:     if df1.schema == df2.schema:",
          "41:         diff = df1.exceptAll(df2)",
          "42:         assert diff.rdd.isEmpty()",
          "43:     else:",
          "44:         assert False",
          "47: def _check_spark_dataset(dataset, original_df, df_spark, expected_source_type, expected_name=None):",
          "48:     assert isinstance(dataset, SparkDataset)",
          "49:     _assert_dataframes_equal(dataset.df, df_spark)",
          "50:     assert dataset.schema == _infer_schema(original_df)",
          "51:     assert isinstance(dataset.profile, dict)",
          "52:     approx_count = dataset.profile.get(\"approx_count\")",
          "53:     assert isinstance(approx_count, int) or approx_count == \"unknown\"",
          "54:     assert isinstance(dataset.source, expected_source_type)",
          "55:     # NB: In real-world scenarios, Spark dataset sources may not match Spark DataFrames precisely.",
          "56:     # For example, users may transform Spark DataFrames after loading contents from source files.",
          "57:     # To ensure that source loading works properly for the purpose of the test cases in this suite,",
          "58:     # we require the source to match the DataFrame and make the following equality assertion",
          "59:     _assert_dataframes_equal(dataset.source.load(), df_spark)",
          "60:     if expected_name is not None:",
          "61:         assert dataset.name == expected_name",
          "64: def test_conversion_to_json_spark_dataset_source(spark_session, tmp_path, df):",
          "65:     df_spark = spark_session.createDataFrame(df)",
          "66:     path = str(tmp_path / \"temp.parquet\")",
          "67:     df_spark.write.parquet(path)",
          "69:     source = SparkDatasetSource(path=path)",
          "71:     dataset = SparkDataset(",
          "72:         df=df_spark,",
          "73:         source=source,",
          "74:         name=\"testname\",",
          "75:     )",
          "77:     dataset_json = dataset.to_json()",
          "78:     parsed_json = json.loads(dataset_json)",
          "79:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "80:     assert parsed_json[\"name\"] == dataset.name",
          "81:     assert parsed_json[\"digest\"] == dataset.digest",
          "82:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "83:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "84:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "86:     schema_json = json.dumps(json.loads(parsed_json[\"schema\"])[\"mlflow_colspec\"])",
          "87:     assert Schema.from_json(schema_json) == dataset.schema",
          "90: def test_conversion_to_json_delta_dataset_source(spark_session, tmp_path, df):",
          "91:     df_spark = spark_session.createDataFrame(df)",
          "92:     path = str(tmp_path / \"temp.parquet\")",
          "93:     df_spark.write.format(\"delta\").save(path)",
          "95:     source = DeltaDatasetSource(path=path)",
          "97:     dataset = SparkDataset(",
          "98:         df=df_spark,",
          "99:         source=source,",
          "100:         name=\"testname\",",
          "101:     )",
          "103:     dataset_json = dataset.to_json()",
          "104:     parsed_json = json.loads(dataset_json)",
          "105:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "106:     assert parsed_json[\"name\"] == dataset.name",
          "107:     assert parsed_json[\"digest\"] == dataset.digest",
          "108:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "109:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "110:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "112:     schema_json = json.dumps(json.loads(parsed_json[\"schema\"])[\"mlflow_colspec\"])",
          "113:     assert Schema.from_json(schema_json) == dataset.schema",
          "116: def test_digest_property_has_expected_value(spark_session, tmp_path, df):",
          "117:     df_spark = spark_session.createDataFrame(df)",
          "118:     path = str(tmp_path / \"temp.parquet\")",
          "119:     df_spark.write.parquet(path)",
          "121:     source = SparkDatasetSource(path=path)",
          "123:     dataset = SparkDataset(",
          "124:         df=df_spark,",
          "125:         source=source,",
          "126:         name=\"testname\",",
          "127:     )",
          "128:     assert dataset.digest == dataset._compute_digest()",
          "129:     # Note that digests are stable within a session, but may not be stable across sessions",
          "130:     # Hence we are not checking the digest value here",
          "133: def test_df_property_has_expected_value(spark_session, tmp_path, df):",
          "134:     df_spark = spark_session.createDataFrame(df)",
          "135:     path = str(tmp_path / \"temp.parquet\")",
          "136:     df_spark.write.parquet(path)",
          "138:     source = SparkDatasetSource(path=path)",
          "140:     dataset = SparkDataset(",
          "141:         df=df_spark,",
          "142:         source=source,",
          "143:         name=\"testname\",",
          "144:     )",
          "145:     assert dataset.df == df_spark",
          "148: def test_targets_property(spark_session, tmp_path, df):",
          "149:     df_spark = spark_session.createDataFrame(df)",
          "150:     path = str(tmp_path / \"temp.parquet\")",
          "151:     df_spark.write.parquet(path)",
          "153:     source = SparkDatasetSource(path=path)",
          "154:     dataset_no_targets = SparkDataset(",
          "155:         df=df_spark,",
          "156:         source=source,",
          "157:         name=\"testname\",",
          "158:     )",
          "159:     assert dataset_no_targets.targets is None",
          "160:     dataset_with_targets = SparkDataset(",
          "161:         df=df_spark,",
          "162:         source=source,",
          "163:         targets=\"c\",",
          "164:         name=\"testname\",",
          "165:     )",
          "166:     assert dataset_with_targets.targets == \"c\"",
          "169: def test_from_spark_no_source_specified(spark_session, df):",
          "170:     df_spark = spark_session.createDataFrame(df)",
          "171:     mlflow_df = mlflow.data.from_spark(df_spark)",
          "173:     assert isinstance(mlflow_df, SparkDataset)",
          "175:     assert isinstance(mlflow_df.source, CodeDatasetSource)",
          "176:     assert \"mlflow.source.name\" in mlflow_df.source.to_json()",
          "179: def test_from_spark_with_sql_and_version(spark_session, tmp_path, df):",
          "180:     df_spark = spark_session.createDataFrame(df)",
          "181:     path = str(tmp_path / \"temp.parquet\")",
          "182:     df_spark.write.parquet(path)",
          "183:     with pytest.raises(",
          "184:         MlflowException,",
          "185:         match=\"`version` may not be specified when `sql` is specified. `version` may only be\"",
          "186:         \" specified when `table_name` or `path` is specified.\",",
          "187:     ):",
          "188:         # pylint: disable=unused-variable",
          "189:         mlflow_df = mlflow.data.from_spark(df_spark, sql=\"SELECT * FROM table\", version=1)",
          "192: def test_from_spark_path(spark_session, tmp_path, df):",
          "193:     df_spark = spark_session.createDataFrame(df)",
          "194:     dir_path = str(tmp_path / \"df_dir\")",
          "195:     df_spark.write.parquet(dir_path)",
          "196:     assert os.path.isdir(dir_path)",
          "198:     mlflow_df_from_dir = mlflow.data.from_spark(df_spark, path=dir_path)",
          "199:     _check_spark_dataset(mlflow_df_from_dir, df, df_spark, SparkDatasetSource)",
          "201:     file_path = str(tmp_path / \"df.parquet\")",
          "202:     df_spark.toPandas().to_parquet(file_path)",
          "203:     assert not os.path.isdir(file_path)",
          "205:     mlflow_df_from_file = mlflow.data.from_spark(df_spark, path=file_path)",
          "206:     _check_spark_dataset(mlflow_df_from_file, df, df_spark, SparkDatasetSource)",
          "209: def test_from_spark_delta_path(spark_session, tmp_path, df):",
          "210:     df_spark = spark_session.createDataFrame(df)",
          "211:     path = str(tmp_path / \"temp.delta\")",
          "212:     df_spark.write.format(\"delta\").save(path)",
          "214:     mlflow_df = mlflow.data.from_spark(df_spark, path=path)",
          "216:     _check_spark_dataset(mlflow_df, df, df_spark, DeltaDatasetSource)",
          "219: def test_from_spark_sql(spark_session, tmp_path, df):",
          "220:     df_spark = spark_session.createDataFrame(df)",
          "221:     df_spark.createOrReplaceTempView(\"table\")",
          "223:     mlflow_df = mlflow.data.from_spark(df_spark, sql=\"SELECT * FROM table\")",
          "225:     _check_spark_dataset(mlflow_df, df, df_spark, SparkDatasetSource)",
          "228: def test_from_spark_table_name(spark_session, tmp_path, df):",
          "229:     df_spark = spark_session.createDataFrame(df)",
          "230:     df_spark.createOrReplaceTempView(\"my_spark_table\")",
          "232:     mlflow_df = mlflow.data.from_spark(df_spark, table_name=\"my_spark_table\")",
          "234:     _check_spark_dataset(mlflow_df, df, df_spark, SparkDatasetSource)",
          "237: def test_from_spark_table_name_with_version(spark_session, tmp_path, df):",
          "238:     df_spark = spark_session.createDataFrame(df)",
          "239:     df_spark.createOrReplaceTempView(\"my_spark_table\")",
          "241:     with pytest.raises(",
          "242:         MlflowException,",
          "243:         match=\"Version '1' was specified, but could not find a Delta table \"",
          "244:         \"with name 'my_spark_table'\",",
          "245:     ):",
          "246:         # pylint: disable=unused-variable",
          "247:         mlflow_df = mlflow.data.from_spark(df_spark, table_name=\"my_spark_table\", version=1)",
          "250: def test_from_spark_delta_table_name(spark_session, tmp_path, df):",
          "251:     df_spark = spark_session.createDataFrame(df)",
          "252:     # write to delta table",
          "253:     df_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"my_delta_table\")",
          "255:     mlflow_df = mlflow.data.from_spark(df_spark, table_name=\"my_delta_table\")",
          "257:     _check_spark_dataset(mlflow_df, df, df_spark, DeltaDatasetSource)",
          "260: def test_from_spark_delta_table_name_and_version(spark_session, tmp_path, df):",
          "261:     df_spark = spark_session.createDataFrame(df)",
          "262:     # write to delta table",
          "263:     df_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"my_delta_table\")",
          "265:     mlflow_df = mlflow.data.from_spark(df_spark, table_name=\"my_delta_table\", version=0)",
          "267:     _check_spark_dataset(mlflow_df, df, df_spark, DeltaDatasetSource)",
          "270: def test_load_delta_with_no_source_info(spark_session, tmp_path):",
          "271:     with pytest.raises(",
          "272:         MlflowException,",
          "273:         match=\"Must specify exactly one of `table_name` or `path`.\",",
          "274:     ):",
          "275:         # pylint: disable=unused-variable",
          "276:         mlflow_df = mlflow.data.load_delta()",
          "279: def test_load_delta_with_both_table_name_and_path(spark_session, tmp_path):",
          "280:     with pytest.raises(",
          "281:         MlflowException,",
          "282:         match=\"Must specify exactly one of `table_name` or `path`.\",",
          "283:     ):",
          "284:         # pylint: disable=unused-variable",
          "285:         mlflow_df = mlflow.data.load_delta(table_name=\"my_table\", path=\"my_path\")",
          "288: def test_load_delta_path(spark_session, tmp_path, df):",
          "289:     df_spark = spark_session.createDataFrame(df)",
          "290:     path = str(tmp_path / \"temp.delta\")",
          "291:     df_spark.write.format(\"delta\").mode(\"overwrite\").save(path)",
          "293:     mlflow_df = mlflow.data.load_delta(path=path)",
          "295:     _check_spark_dataset(mlflow_df, df, df_spark, DeltaDatasetSource)",
          "298: def test_load_delta_path_with_version(spark_session, tmp_path, df):",
          "299:     path = str(tmp_path / \"temp.delta\")",
          "301:     df_v0 = pd.DataFrame([[4, 5, 6], [4, 5, 6]], columns=[\"a\", \"b\", \"c\"])",
          "302:     assert not df_v0.equals(df)",
          "303:     df_v0_spark = spark_session.createDataFrame(df_v0)",
          "304:     df_v0_spark.write.format(\"delta\").mode(\"overwrite\").save(path)",
          "306:     # write again to create a new version",
          "307:     df_v1_spark = spark_session.createDataFrame(df)",
          "308:     df_v1_spark.write.format(\"delta\").mode(\"overwrite\").save(path)",
          "310:     mlflow_df = mlflow.data.load_delta(path=path, version=1)",
          "311:     _check_spark_dataset(mlflow_df, df, df_v1_spark, DeltaDatasetSource)",
          "314: def test_load_delta_table_name(spark_session, df):",
          "315:     df_spark = spark_session.createDataFrame(df)",
          "316:     # write to delta table",
          "317:     df_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"my_delta_table\")",
          "319:     mlflow_df = mlflow.data.load_delta(table_name=\"my_delta_table\")",
          "321:     _check_spark_dataset(mlflow_df, df, df_spark, DeltaDatasetSource, \"my_delta_table@v0\")",
          "324: def test_load_delta_table_name_with_version(spark_session, df):",
          "325:     df_spark = spark_session.createDataFrame(df)",
          "326:     df_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"my_delta_table_versioned\")",
          "328:     df2 = pd.DataFrame([[4, 5, 6], [4, 5, 6]], columns=[\"a\", \"b\", \"c\"])",
          "329:     assert not df2.equals(df)",
          "330:     df2_spark = spark_session.createDataFrame(df2)",
          "331:     df2_spark.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"my_delta_table_versioned\")",
          "333:     mlflow_df = mlflow.data.load_delta(table_name=\"my_delta_table_versioned\", version=1)",
          "335:     _check_spark_dataset(",
          "336:         mlflow_df, df2, df2_spark, DeltaDatasetSource, \"my_delta_table_versioned@v1\"",
          "337:     )",
          "338:     pd.testing.assert_frame_equal(mlflow_df.df.toPandas(), df2)",
          "341: def test_to_evaluation_dataset(spark_session, tmp_path, df):",
          "342:     import numpy as np",
          "344:     df_spark = spark_session.createDataFrame(df)",
          "345:     path = str(tmp_path / \"temp.parquet\")",
          "346:     df_spark.write.parquet(path)",
          "348:     source = SparkDatasetSource(path=path)",
          "350:     dataset = SparkDataset(",
          "351:         df=df_spark,",
          "352:         source=source,",
          "353:         targets=\"c\",",
          "354:         name=\"testname\",",
          "355:     )",
          "356:     evaluation_dataset = dataset.to_evaluation_dataset()",
          "357:     assert isinstance(evaluation_dataset, EvaluationDataset)",
          "358:     assert evaluation_dataset.features_data.equals(df_spark.toPandas().drop(columns=[\"c\"]))",
          "359:     assert np.array_equal(evaluation_dataset.labels_data, df_spark.toPandas()[\"c\"].values)",
          "",
          "---------------"
        ],
        "tests/data/test_spark_dataset_source.py||tests/data/test_spark_dataset_source.py": [
          "File: tests/data/test_spark_dataset_source.py -> tests/data/test_spark_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import pytest",
          "3: import pandas as pd",
          "5: from mlflow.data.dataset_source_registry import get_dataset_source_from_json",
          "6: from mlflow.data.spark_dataset_source import SparkDatasetSource",
          "7: from mlflow.exceptions import MlflowException",
          "10: @pytest.fixture(scope=\"class\", autouse=True)",
          "11: def spark_session():",
          "12:     from pyspark.sql import SparkSession",
          "14:     session = (",
          "15:         SparkSession.builder.master(\"local[*]\")",
          "16:         .config(\"spark.jars.packages\", \"io.delta:delta-core_2.12:2.4.0\")",
          "17:         .config(\"spark.sql.extensions\", \"io.delta.sql.DeltaSparkSessionExtension\")",
          "18:         .config(",
          "19:             \"spark.sql.catalog.spark_catalog\", \"org.apache.spark.sql.delta.catalog.DeltaCatalog\"",
          "20:         )",
          "21:         .getOrCreate()",
          "22:     )",
          "23:     yield session",
          "24:     session.stop()",
          "27: def test_spark_dataset_source_from_path(spark_session, tmp_path):",
          "28:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "29:     df_spark = spark_session.createDataFrame(df)",
          "30:     path = str(tmp_path / \"temp.parquet\")",
          "31:     df_spark.write.parquet(path)",
          "33:     spark_datasource = SparkDatasetSource(path=path)",
          "34:     assert spark_datasource.to_json() == json.dumps({\"path\": path})",
          "35:     loaded_df_spark = spark_datasource.load()",
          "36:     assert loaded_df_spark.count() == df_spark.count()",
          "38:     reloaded_source = get_dataset_source_from_json(",
          "39:         spark_datasource.to_json(), source_type=spark_datasource._get_source_type()",
          "40:     )",
          "41:     assert isinstance(reloaded_source, SparkDatasetSource)",
          "42:     assert type(spark_datasource) == type(reloaded_source)",
          "43:     assert reloaded_source.to_json() == spark_datasource.to_json()",
          "46: def test_spark_dataset_source_from_table(spark_session, tmp_path):",
          "47:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "48:     df_spark = spark_session.createDataFrame(df)",
          "49:     df_spark.write.mode(\"overwrite\").saveAsTable(\"temp\", path=tmp_path)",
          "51:     spark_datasource = SparkDatasetSource(table_name=\"temp\")",
          "52:     assert spark_datasource.to_json() == json.dumps({\"table_name\": \"temp\"})",
          "53:     loaded_df_spark = spark_datasource.load()",
          "54:     assert loaded_df_spark.count() == df_spark.count()",
          "56:     reloaded_source = get_dataset_source_from_json(",
          "57:         spark_datasource.to_json(), source_type=spark_datasource._get_source_type()",
          "58:     )",
          "59:     assert isinstance(reloaded_source, SparkDatasetSource)",
          "60:     assert type(spark_datasource) == type(reloaded_source)",
          "61:     assert reloaded_source.to_json() == spark_datasource.to_json()",
          "64: def test_spark_dataset_source_from_sql(spark_session, tmp_path):",
          "65:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "66:     df_spark = spark_session.createDataFrame(df)",
          "67:     df_spark.write.mode(\"overwrite\").saveAsTable(\"temp_sql\", path=tmp_path)",
          "69:     spark_datasource = SparkDatasetSource(sql=\"SELECT * FROM temp_sql\")",
          "70:     assert spark_datasource.to_json() == json.dumps({\"sql\": \"SELECT * FROM temp_sql\"})",
          "71:     loaded_df_spark = spark_datasource.load()",
          "72:     assert loaded_df_spark.count() == df_spark.count()",
          "74:     reloaded_source = get_dataset_source_from_json(",
          "75:         spark_datasource.to_json(), source_type=spark_datasource._get_source_type()",
          "76:     )",
          "77:     assert isinstance(reloaded_source, SparkDatasetSource)",
          "78:     assert type(spark_datasource) == type(reloaded_source)",
          "79:     assert reloaded_source.to_json() == spark_datasource.to_json()",
          "82: def test_spark_dataset_source_too_many_inputs(spark_session, tmp_path):",
          "83:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "84:     df_spark = spark_session.createDataFrame(df)",
          "85:     df_spark.write.mode(\"overwrite\").saveAsTable(\"temp\", path=tmp_path)",
          "87:     with pytest.raises(",
          "88:         MlflowException, match='Must specify exactly one of \"path\", \"table_name\", or \"sql\"'",
          "89:     ):",
          "90:         SparkDatasetSource(path=tmp_path, table_name=\"temp\")",
          "",
          "---------------"
        ],
        "tests/data/test_tensorflow_dataset.py||tests/data/test_tensorflow_dataset.py": [
          "File: tests/data/test_tensorflow_dataset.py -> tests/data/test_tensorflow_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: import numpy as np",
          "3: import pytest",
          "5: import mlflow.data",
          "6: from mlflow.data.code_dataset_source import CodeDatasetSource",
          "7: from mlflow.data.pyfunc_dataset_mixin import PyFuncInputsOutputs",
          "8: from mlflow.data.tensorflow_dataset import TensorFlowDataset",
          "9: from mlflow.exceptions import MlflowException",
          "10: from mlflow.models.evaluation.base import EvaluationDataset",
          "11: from mlflow.data.schema import TensorDatasetSchema",
          "12: from mlflow.types.utils import _infer_schema",
          "14: import tensorflow as tf",
          "16: from tests.resources.data.dataset_source import TestDatasetSource",
          "19: def test_dataset_construction_validates_features_and_targets():",
          "20:     x = np.random.sample((100, 2))",
          "21:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "22:     tf_tensor = tf.convert_to_tensor(x)",
          "24:     with pytest.raises(",
          "25:         MlflowException,",
          "26:         match=\"features' must be an instance of tf.data.Dataset or a TensorFlow Tensor.*NoneType\",",
          "27:     ):",
          "28:         mlflow.data.from_tensorflow(features=None)",
          "29:     with pytest.raises(",
          "30:         MlflowException,",
          "31:         match=\"features' must be an instance of tf.data.Dataset or a TensorFlow Tensor.*str\",",
          "32:     ):",
          "33:         mlflow.data.from_tensorflow(features=\"foo\")",
          "34:     with pytest.raises(",
          "35:         MlflowException,",
          "36:         match=\"features' must be an instance of tf.data.Dataset or a TensorFlow Tensor.*str\",",
          "37:     ):",
          "38:         mlflow.data.from_tensorflow(features=\"foo\", targets=tf_tensor)",
          "40:     mlflow.data.from_tensorflow(features=tf_tensor, targets=tf_tensor)",
          "41:     mlflow.data.from_tensorflow(features=tf_tensor, targets=None)",
          "42:     with pytest.raises(",
          "43:         MlflowException,",
          "44:         match=(",
          "45:             \"If 'features' is a TensorFlow Tensor, then 'targets' must also be a TensorFlow\"",
          "46:             \" Tensor.*str\"",
          "47:         ),",
          "48:     ):",
          "49:         mlflow.data.from_tensorflow(features=tf_tensor, targets=\"foo\")",
          "50:     with pytest.raises(",
          "51:         MlflowException,",
          "52:         match=(",
          "53:             \"If 'features' is a TensorFlow Tensor, then 'targets' must also be a TensorFlow\"",
          "54:             \" Tensor.*Dataset\"",
          "55:         ),",
          "56:     ):",
          "57:         mlflow.data.from_tensorflow(features=tf_tensor, targets=tf_dataset)",
          "59:     mlflow.data.from_tensorflow(features=tf_dataset, targets=tf_dataset)",
          "60:     mlflow.data.from_tensorflow(features=tf_dataset, targets=None)",
          "61:     with pytest.raises(",
          "62:         MlflowException,",
          "63:         match=(",
          "64:             \"If 'features' is an instance of tf.data.Dataset, then 'targets' must also be an\"",
          "65:             \" instance of tf.data.Dataset.*str\"",
          "66:         ),",
          "67:     ):",
          "68:         mlflow.data.from_tensorflow(features=tf_dataset, targets=\"foo\")",
          "69:     with pytest.raises(",
          "70:         MlflowException,",
          "71:         match=(",
          "72:             \"If 'features' is an instance of tf.data.Dataset, then 'targets' must also be an\"",
          "73:             \" instance of tf.data.Dataset.*Tensor\"",
          "74:         ),",
          "75:     ):",
          "76:         mlflow.data.from_tensorflow(features=tf_dataset, targets=tf_tensor)",
          "79: def test_conversion_to_json():",
          "80:     source_uri = \"test:/my/test/uri\"",
          "81:     x = np.random.sample((100, 2))",
          "82:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "83:     source = TestDatasetSource._resolve(source_uri)",
          "84:     dataset = TensorFlowDataset(features=tf_dataset, source=source, name=\"testname\")",
          "86:     dataset_json = dataset.to_json()",
          "87:     parsed_json = json.loads(dataset_json)",
          "88:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "89:     assert parsed_json[\"name\"] == dataset.name",
          "90:     assert parsed_json[\"digest\"] == dataset.digest",
          "91:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "92:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "93:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "95:     parsed_schema = json.loads(parsed_json[\"schema\"])",
          "96:     assert TensorDatasetSchema.from_dict(parsed_schema) == dataset.schema",
          "99: @pytest.mark.parametrize(",
          "100:     (\"features\", \"targets\"),",
          "101:     [",
          "102:         (",
          "103:             tf.data.Dataset.from_tensors(",
          "104:                 {\"a\": np.random.sample((100, 2)), \"b\": np.random.sample((100, 4))}",
          "105:             ),",
          "106:             tf.data.Dataset.from_tensors(",
          "107:                 {\"c\": np.random.sample((100, 1)), \"d\": np.random.sample((100,))}",
          "108:             ),",
          "109:         ),",
          "110:         (",
          "111:             tf.data.Dataset.from_tensors(",
          "112:                 (",
          "113:                     np.random.sample((100, 2)),",
          "114:                     np.random.sample((100, 4)),",
          "115:                 )",
          "116:             ),",
          "117:             tf.data.Dataset.from_tensors(",
          "118:                 (",
          "119:                     np.random.sample((100, 1)),",
          "120:                     np.random.sample((100,)),",
          "121:                 )",
          "122:             ),",
          "123:         ),",
          "124:         (",
          "125:             tf.data.Dataset.from_tensors(",
          "126:                 (",
          "127:                     np.random.sample((100, 2)),",
          "128:                     np.random.sample((100, 4)),",
          "129:                 )",
          "130:             ),",
          "131:             tf.data.Dataset.from_tensors(",
          "132:                 {\"c\": np.random.sample((100, 1)), \"d\": np.random.sample((100,))}",
          "133:             ),",
          "134:         ),",
          "135:         (",
          "136:             tf.data.Dataset.from_tensors(",
          "137:                 (",
          "138:                     np.random.sample((100, 2)),",
          "139:                     np.random.sample((100, 4)),",
          "140:                 )",
          "141:             ),",
          "142:             None,",
          "143:         ),",
          "144:     ],",
          "145: )",
          "146: def test_conversion_to_json_with_multi_tensor_datasets(features, targets):",
          "147:     source_uri = \"test:/my/test/uri\"",
          "148:     source = TestDatasetSource._resolve(source_uri)",
          "149:     dataset = TensorFlowDataset(features=features, targets=targets, source=source, name=\"testname\")",
          "151:     dataset_json = dataset.to_json()",
          "152:     parsed_json = json.loads(dataset_json)",
          "153:     assert parsed_json.keys() <= {\"name\", \"digest\", \"source\", \"source_type\", \"schema\", \"profile\"}",
          "154:     assert parsed_json[\"name\"] == dataset.name",
          "155:     assert parsed_json[\"digest\"] == dataset.digest",
          "156:     assert parsed_json[\"source\"] == dataset.source.to_json()",
          "157:     assert parsed_json[\"source_type\"] == dataset.source._get_source_type()",
          "158:     assert parsed_json[\"profile\"] == json.dumps(dataset.profile)",
          "160:     parsed_schema = json.loads(parsed_json[\"schema\"])",
          "161:     assert TensorDatasetSchema.from_dict(parsed_schema) == dataset.schema",
          "164: def test_schema_and_profile_with_multi_tensor_tuple_datasets():",
          "165:     features_dataset = tf.data.Dataset.from_tensors(",
          "166:         (",
          "167:             np.random.sample((100, 2)),",
          "168:             np.random.sample((100, 4)),",
          "169:         )",
          "170:     )",
          "171:     targets_dataset = tf.data.Dataset.from_tensors(",
          "172:         (",
          "173:             np.random.sample((100, 1)),",
          "174:             np.random.sample((100,)),",
          "175:         )",
          "176:     )",
          "177:     source_uri = \"test:/my/test/uri\"",
          "178:     source = TestDatasetSource._resolve(source_uri)",
          "179:     dataset = TensorFlowDataset(",
          "180:         features=features_dataset, targets=targets_dataset, source=source, name=\"testname\"",
          "181:     )",
          "182:     assert dataset.schema.features == _infer_schema(",
          "183:         {",
          "184:             \"0\": np.random.sample((100, 2)),",
          "185:             \"1\": np.random.sample((100, 4)),",
          "186:         }",
          "187:     )",
          "188:     assert dataset.schema.targets == _infer_schema(",
          "189:         {",
          "190:             \"0\": np.random.sample((100, 1)),",
          "191:             \"1\": np.random.sample((100,)),",
          "192:         }",
          "193:     )",
          "194:     assert dataset.profile == {",
          "195:         \"features_cardinality\": 1,",
          "196:         \"targets_cardinality\": 1,",
          "197:     }",
          "198:     assert dataset.profile == {",
          "199:         \"features_cardinality\": features_dataset.cardinality().numpy(),",
          "200:         \"targets_cardinality\": targets_dataset.cardinality().numpy(),",
          "201:     }",
          "204: def test_schema_and_profile_with_multi_tensor_dict_datasets():",
          "205:     features_dataset = tf.data.Dataset.from_tensors(",
          "206:         {\"a\": np.random.sample((100, 2)), \"b\": np.random.sample((100, 4))}",
          "207:     )",
          "208:     targets_dataset = tf.data.Dataset.from_tensors(",
          "209:         {\"c\": np.random.sample((100, 1)), \"d\": np.random.sample((100,))}",
          "210:     )",
          "211:     source_uri = \"test:/my/test/uri\"",
          "212:     source = TestDatasetSource._resolve(source_uri)",
          "213:     dataset = TensorFlowDataset(",
          "214:         features=features_dataset, targets=targets_dataset, source=source, name=\"testname\"",
          "215:     )",
          "216:     assert dataset.schema.features == _infer_schema(",
          "217:         {",
          "218:             \"a\": np.random.sample((100, 2)),",
          "219:             \"b\": np.random.sample((100, 4)),",
          "220:         }",
          "221:     )",
          "222:     assert dataset.schema.targets == _infer_schema(",
          "223:         {",
          "224:             \"c\": np.random.sample((100, 1)),",
          "225:             \"d\": np.random.sample((100,)),",
          "226:         }",
          "227:     )",
          "228:     assert dataset.profile == {",
          "229:         \"features_cardinality\": 1,",
          "230:         \"targets_cardinality\": 1,",
          "231:     }",
          "232:     assert dataset.profile == {",
          "233:         \"features_cardinality\": features_dataset.cardinality().numpy(),",
          "234:         \"targets_cardinality\": targets_dataset.cardinality().numpy(),",
          "235:     }",
          "238: def test_digest_property_has_expected_value():",
          "239:     source_uri = \"test:/my/test/uri\"",
          "240:     x = [[1, 2, 3], [4, 5, 6]]",
          "241:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "242:     source = TestDatasetSource._resolve(source_uri)",
          "243:     dataset = TensorFlowDataset(features=tf_dataset, source=source, name=\"testname\")",
          "244:     assert dataset.digest == dataset._compute_digest()",
          "245:     assert dataset.digest == \"666a9820\"",
          "248: def test_data_property_has_expected_value():",
          "249:     source_uri = \"test:/my/test/uri\"",
          "250:     x = [[1, 2, 3], [4, 5, 6]]",
          "251:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "252:     source = TestDatasetSource._resolve(source_uri)",
          "253:     dataset = TensorFlowDataset(features=tf_dataset, source=source, name=\"testname\")",
          "254:     assert dataset.data == tf_dataset",
          "257: def test_source_property_has_expected_value():",
          "258:     source_uri = \"test:/my/test/uri\"",
          "259:     x = [[1, 2, 3], [4, 5, 6]]",
          "260:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "261:     source = TestDatasetSource._resolve(source_uri)",
          "262:     dataset = TensorFlowDataset(features=tf_dataset, source=source, name=\"testname\")",
          "263:     assert dataset.source == source",
          "266: def test_profile_property_has_expected_value_dataset():",
          "267:     source_uri = \"test:/my/test/uri\"",
          "268:     x = [[1, 2, 3], [4, 5, 6]]",
          "269:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "270:     source = TestDatasetSource._resolve(source_uri)",
          "271:     dataset = TensorFlowDataset(features=tf_dataset, source=source, name=\"testname\")",
          "272:     assert dataset.profile == {",
          "273:         \"features_cardinality\": tf_dataset.cardinality().numpy(),",
          "274:     }",
          "277: def test_profile_property_has_expected_value_tensors():",
          "278:     source_uri = \"test:/my/test/uri\"",
          "279:     x = [[1, 2, 3], [4, 5, 6]]",
          "280:     tf_tensor = tf.convert_to_tensor(x)",
          "281:     source = TestDatasetSource._resolve(source_uri)",
          "282:     dataset = TensorFlowDataset(features=tf_tensor, source=source, name=\"testname\")",
          "283:     assert dataset.profile == {",
          "284:         \"features_cardinality\": tf.size(tf_tensor).numpy(),",
          "285:     }",
          "288: def test_to_pyfunc():",
          "289:     source_uri = \"test:/my/test/uri\"",
          "290:     x = np.random.sample((100, 2))",
          "291:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "292:     source = TestDatasetSource._resolve(source_uri)",
          "293:     dataset = TensorFlowDataset(features=tf_dataset, source=source, name=\"testname\")",
          "294:     assert isinstance(dataset.to_pyfunc(), PyFuncInputsOutputs)",
          "297: def test_to_evaluation_dataset():",
          "298:     source_uri = \"test:/my/test/uri\"",
          "299:     x = np.random.sample((2, 2))",
          "300:     y = np.random.sample((2, 1))",
          "301:     x_tensors = tf.convert_to_tensor(x)",
          "302:     y_tensors = tf.convert_to_tensor(y)",
          "303:     source = TestDatasetSource._resolve(source_uri)",
          "304:     dataset = TensorFlowDataset(",
          "305:         features=x_tensors, source=source, targets=y_tensors, name=\"testname\"",
          "306:     )",
          "307:     evaluation_dataset = dataset.to_evaluation_dataset()",
          "308:     assert isinstance(evaluation_dataset, EvaluationDataset)",
          "309:     assert np.array_equal(evaluation_dataset.features_data, dataset.data.numpy())",
          "310:     assert np.array_equal(evaluation_dataset.labels_data, dataset.targets.numpy())",
          "313: def test_to_evaluation_dataset_with_tensorflow_dataset_data():",
          "314:     source_uri = \"test:/my/test/uri\"",
          "315:     x = np.random.sample((2, 2))",
          "316:     y = np.random.sample((2, 1))",
          "317:     x_tf_data = tf.data.Dataset.from_tensors(x)",
          "318:     y_tf_data = tf.data.Dataset.from_tensors(y)",
          "319:     source = TestDatasetSource._resolve(source_uri)",
          "320:     dataset = TensorFlowDataset(",
          "321:         features=x_tf_data, source=source, targets=y_tf_data, name=\"testname\"",
          "322:     )",
          "323:     with pytest.raises(",
          "324:         MlflowException, match=\"Data must be a Tensor to convert to an EvaluationDataset\"",
          "325:     ):",
          "326:         evaluation_dataset = dataset.to_evaluation_dataset()  # pylint: disable=unused-variable",
          "329: def test_from_tensorflow_dataset_constructs_expected_dataset():",
          "330:     x = np.random.sample((100, 2))",
          "331:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "332:     mlflow_ds = mlflow.data.from_tensorflow(tf_dataset, source=\"my_source\")",
          "333:     assert isinstance(mlflow_ds, TensorFlowDataset)",
          "334:     assert mlflow_ds.data == tf_dataset",
          "335:     assert mlflow_ds.schema == TensorDatasetSchema(",
          "336:         features=_infer_schema(next(tf_dataset.as_numpy_iterator()))",
          "337:     )",
          "338:     assert mlflow_ds.profile == {",
          "339:         \"features_cardinality\": tf_dataset.cardinality().numpy(),",
          "340:     }",
          "343: def test_from_tensorflow_dataset_with_targets_constructs_expected_dataset():",
          "344:     x = np.random.sample((100, 2))",
          "345:     y = np.random.sample((100, 1))",
          "346:     tf_dataset_x = tf.data.Dataset.from_tensors(x)",
          "347:     tf_dataset_y = tf.data.Dataset.from_tensors(y)",
          "348:     mlflow_ds = mlflow.data.from_tensorflow(tf_dataset_x, source=\"my_source\", targets=tf_dataset_y)",
          "349:     assert isinstance(mlflow_ds, TensorFlowDataset)",
          "350:     assert mlflow_ds.data == tf_dataset_x",
          "351:     assert mlflow_ds.targets == tf_dataset_y",
          "352:     assert mlflow_ds.schema == TensorDatasetSchema(",
          "353:         features=_infer_schema(next(tf_dataset_x.as_numpy_iterator())),",
          "354:         targets=_infer_schema(next(tf_dataset_y.as_numpy_iterator())),",
          "355:     )",
          "356:     assert mlflow_ds.profile == {",
          "357:         \"features_cardinality\": tf_dataset_x.cardinality().numpy(),",
          "358:         \"targets_cardinality\": tf_dataset_y.cardinality().numpy(),",
          "359:     }",
          "362: def test_from_tensorflow_tensor_constructs_expected_dataset():",
          "363:     x = np.random.sample((100, 2))",
          "364:     tf_tensor = tf.convert_to_tensor(x)",
          "365:     mlflow_ds = mlflow.data.from_tensorflow(tf_tensor, source=\"my_source\")",
          "366:     assert isinstance(mlflow_ds, TensorFlowDataset)",
          "367:     # compare if two tensors are equal using tensorflow utils",
          "368:     assert tf.reduce_all(tf.math.equal(mlflow_ds.data, tf_tensor))",
          "369:     assert mlflow_ds.schema == TensorDatasetSchema(features=_infer_schema(tf_tensor.numpy()))",
          "370:     assert mlflow_ds.profile == {",
          "371:         \"features_cardinality\": tf.size(tf_tensor).numpy(),",
          "372:     }",
          "375: def test_from_tensorflow_tensor_with_targets_constructs_expected_dataset():",
          "376:     x = np.random.sample((100, 2))",
          "377:     y = np.random.sample((100, 1))",
          "378:     tf_tensor_x = tf.convert_to_tensor(x)",
          "379:     tf_tensor_y = tf.convert_to_tensor(y)",
          "380:     mlflow_ds = mlflow.data.from_tensorflow(tf_tensor_x, source=\"my_source\", targets=tf_tensor_y)",
          "381:     assert isinstance(mlflow_ds, TensorFlowDataset)",
          "382:     assert tf.reduce_all(tf.math.equal(mlflow_ds.data, tf_tensor_x))",
          "383:     assert tf.reduce_all(tf.math.equal(mlflow_ds.targets, tf_tensor_y))",
          "384:     assert mlflow_ds.schema == TensorDatasetSchema(",
          "385:         features=_infer_schema(tf_tensor_x.numpy()),",
          "386:         targets=_infer_schema(tf_tensor_y.numpy()),",
          "387:     )",
          "388:     assert mlflow_ds.profile == {",
          "389:         \"features_cardinality\": tf.size(tf_tensor_x).numpy(),",
          "390:         \"targets_cardinality\": tf.size(tf_tensor_y).numpy(),",
          "391:     }",
          "394: def test_from_tensorflow_no_source_specified():",
          "395:     x = np.random.sample((100, 2))",
          "396:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "397:     mlflow_ds = mlflow.data.from_tensorflow(tf_dataset)",
          "399:     assert isinstance(mlflow_ds, TensorFlowDataset)",
          "401:     assert isinstance(mlflow_ds.source, CodeDatasetSource)",
          "402:     assert \"mlflow.source.name\" in mlflow_ds.source.to_json()",
          "405: def test_digest_computation_succeeds_with_none_element_in_numpy_iterator():",
          "406:     x = np.array([[0, 1], [1, 2]])",
          "407:     tf_dataset = tf.data.Dataset.from_tensors(x)",
          "408:     tf_dataset.as_numpy_iterator = lambda: [None, x]",
          "409:     mlflow_ds = mlflow.data.from_tensorflow(tf_dataset)",
          "410:     assert mlflow_ds.digest == \"bc8ef018\"",
          "",
          "---------------"
        ],
        "tests/entities/conftest.py||tests/entities/conftest.py": [
          "File: tests/entities/conftest.py -> tests/entities/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: from mlflow.entities import RunInfo, LifecycleStage, RunStatus",
          "8: from mlflow.entities import Metric, RunData, Param, RunTag",
          "9: from mlflow.utils.time_utils import get_current_time_millis",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: from mlflow.entities import RunInputs, DatasetInput, InputTag, Dataset",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:         lifecycle_stage,",
          "63:         artifact_uri,",
          "64:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: @pytest.fixture()",
          "69: def run_inputs():",
          "70:     datasets = [",
          "71:         DatasetInput(",
          "72:             dataset=Dataset(",
          "73:                 name=\"name1\", digest=\"digest1\", source_type=\"my_source_type\", source=\"source\"",
          "74:             ),",
          "75:             tags=[InputTag(key=\"key\", value=\"value\")],",
          "76:         )",
          "77:     ]",
          "79:     run_inputs = RunInputs(dataset_inputs=datasets)",
          "81:     return run_inputs, datasets",
          "",
          "---------------"
        ],
        "tests/entities/test_dataset.py||tests/entities/test_dataset.py": [
          "File: tests/entities/test_dataset.py -> tests/entities/test_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities import Dataset",
          "4: def _check(dataset, name, digest, source_type, source, schema=None, profile=None):",
          "5:     assert isinstance(dataset, Dataset)",
          "6:     assert dataset.name == name",
          "7:     assert dataset.digest == digest",
          "8:     assert dataset.source_type == source_type",
          "9:     assert dataset.source == source",
          "10:     assert dataset.schema == schema",
          "11:     assert dataset.profile == profile",
          "14: def test_creation_and_hydration():",
          "15:     name = \"my_name\"",
          "16:     digest = \"my_digest\"",
          "17:     source_type = \"my_source_type\"",
          "18:     source = \"my_source\"",
          "19:     schema = \"my_schema\"",
          "20:     profile = \"my_profile\"",
          "21:     dataset = Dataset(name, digest, source_type, source, schema, profile)",
          "22:     _check(dataset, name, digest, source_type, source, schema, profile)",
          "24:     as_dict = {",
          "25:         \"name\": name,",
          "26:         \"digest\": digest,",
          "27:         \"source_type\": source_type,",
          "28:         \"source\": source,",
          "29:         \"schema\": schema,",
          "30:         \"profile\": profile,",
          "31:     }",
          "32:     assert dict(dataset) == as_dict",
          "34:     proto = dataset.to_proto()",
          "35:     dataset2 = Dataset.from_proto(proto)",
          "36:     _check(dataset2, name, digest, source_type, source, schema, profile)",
          "38:     dataset3 = Dataset.from_dictionary(as_dict)",
          "39:     _check(dataset3, name, digest, source_type, source, schema, profile)",
          "",
          "---------------"
        ],
        "tests/entities/test_dataset_input.py||tests/entities/test_dataset_input.py": [
          "File: tests/entities/test_dataset_input.py -> tests/entities/test_dataset_input.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities import DatasetInput, InputTag, Dataset",
          "4: def _check(dataset_input, tags, dataset):",
          "5:     assert isinstance(dataset_input, DatasetInput)",
          "6:     assert dataset_input.tags == tags",
          "7:     assert dataset_input.dataset == dataset",
          "10: def test_creation_and_hydration():",
          "11:     key = \"my_key\"",
          "12:     value = \"my_value\"",
          "13:     tags = [InputTag(key, value)]",
          "14:     name = \"my_name\"",
          "15:     digest = \"my_digest\"",
          "16:     source_type = \"my_source_type\"",
          "17:     source = \"my_source\"",
          "18:     schema = \"my_schema\"",
          "19:     profile = \"my_profile\"",
          "20:     dataset = Dataset(name, digest, source_type, source, schema, profile)",
          "21:     dataset_input = DatasetInput(dataset=dataset, tags=tags)",
          "22:     _check(dataset_input, tags, dataset)",
          "24:     as_dict = {\"dataset\": dataset, \"tags\": tags}",
          "25:     assert dict(dataset_input) == as_dict",
          "27:     proto = dataset_input.to_proto()",
          "28:     dataset_input2 = DatasetInput.from_proto(proto)",
          "29:     _check(dataset_input2, tags, dataset)",
          "31:     dataset_input3 = DatasetInput.from_dictionary(as_dict)",
          "32:     _check(dataset_input3, tags, dataset)",
          "",
          "---------------"
        ],
        "tests/entities/test_input_tag.py||tests/entities/test_input_tag.py": [
          "File: tests/entities/test_input_tag.py -> tests/entities/test_input_tag.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities import InputTag",
          "4: def _check(input_tag, key, value):",
          "5:     assert isinstance(input_tag, InputTag)",
          "6:     assert input_tag.key == key",
          "7:     assert input_tag.value == value",
          "10: def test_creation_and_hydration():",
          "11:     key = \"my_key\"",
          "12:     value = \"my_value\"",
          "13:     input_tag = InputTag(key, value)",
          "14:     _check(input_tag, key, value)",
          "16:     as_dict = {",
          "17:         \"key\": key,",
          "18:         \"value\": value,",
          "19:     }",
          "20:     assert dict(input_tag) == as_dict",
          "22:     proto = input_tag.to_proto()",
          "23:     input_tag2 = InputTag.from_proto(proto)",
          "24:     _check(input_tag2, key, value)",
          "26:     input_tag3 = InputTag.from_dictionary(as_dict)",
          "27:     _check(input_tag3, key, value)",
          "",
          "---------------"
        ],
        "tests/entities/test_run.py||tests/entities/test_run.py": [
          "File: tests/entities/test_run.py -> tests/entities/test_run.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import pytest",
          "4: from mlflow.exceptions import MlflowException",
          "5: from tests.entities.test_run_data import _check as run_data_check",
          "6: from tests.entities.test_run_info import _check as run_info_check",
          "9: class TestRun:",
          "11:         run_info_check(",
          "12:             run.info,",
          "13:             ri.run_id,",
          "",
          "[Removed Lines]",
          "3: from mlflow.entities import Run, Metric, RunData, RunStatus, RunInfo, LifecycleStage",
          "10:     def _check_run(self, run, ri, rd_metrics, rd_params, rd_tags):",
          "",
          "[Added Lines]",
          "3: from mlflow.entities import (",
          "4:     Run,",
          "5:     Metric,",
          "6:     Dataset,",
          "7:     DatasetInput,",
          "8:     RunData,",
          "9:     RunStatus,",
          "10:     RunInfo,",
          "11:     RunInputs,",
          "12:     LifecycleStage,",
          "13: )",
          "17: from tests.entities.test_run_inputs import _check as run_inputs_check",
          "21:     def _check_run(self, run, ri, rd_metrics, rd_params, rd_tags, datasets):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:             ri.artifact_uri,",
          "21:         )",
          "22:         run_data_check(run.data, rd_metrics, rd_params, rd_tags)",
          "25:         run_data, metrics, params, tags = run_data",
          "26:         (",
          "27:             run_info,",
          "",
          "[Removed Lines]",
          "24:     def test_creation_and_hydration(self, run_data, run_info):",
          "",
          "[Added Lines]",
          "34:         run_inputs_check(run.inputs, datasets)",
          "36:     def test_creation_and_hydration(self, run_data, run_info, run_inputs):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:             lifecycle_stage,",
          "36:             artifact_uri,",
          "37:         ) = run_info",
          "43:         expected_info_dict = {",
          "44:             \"run_uuid\": run_id,",
          "",
          "[Removed Lines]",
          "39:         run1 = Run(run_info, run_data)",
          "41:         self._check_run(run1, run_info, metrics, params, tags)",
          "",
          "[Added Lines]",
          "50:         run_inputs, datasets = run_inputs",
          "52:         run1 = Run(run_info, run_data, run_inputs)",
          "54:         self._check_run(run1, run_info, metrics, params, tags, datasets)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "59:                 \"params\": {p.key: p.value for p in params},",
          "60:                 \"tags\": {t.key: t.value for t in tags},",
          "61:             },",
          "62:         }",
          "64:         proto = run1.to_proto()",
          "65:         run2 = Run.from_proto(proto)",
          "69:         assert run3.to_dictionary() == {\"info\": expected_info_dict}",
          "71:     def test_string_repr(self):",
          "72:         run_info = RunInfo(",
          "73:             run_uuid=\"hi\",",
          "",
          "[Removed Lines]",
          "66:         self._check_run(run2, run_info, metrics, params, tags)",
          "68:         run3 = Run(run_info, None)",
          "",
          "[Added Lines]",
          "75:             \"inputs\": {\"dataset_inputs\": datasets},",
          "80:         self._check_run(run2, run_info, metrics, params, tags, datasets)",
          "82:         run3 = Run(run_info, None, None)",
          "85:         run4 = Run(run_info, None)",
          "86:         assert run4.to_dictionary() == {\"info\": expected_info_dict}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "82:         )",
          "83:         metrics = [Metric(key=\"key-%s\" % i, value=i, timestamp=0, step=i) for i in range(3)]",
          "84:         run_data = RunData(metrics=metrics, params=[], tags=[])",
          "86:         expected = (",
          "87:             \"<Run: data=<RunData: metrics={'key-0': 0, 'key-1': 1, 'key-2': 2}, \"",
          "88:             \"params={}, tags={}>, info=<RunInfo: artifact_uri=None, end_time=1, \"",
          "92:         )",
          "93:         assert str(run1) == expected",
          "96:         run_data = run_data[0]",
          "97:         with pytest.raises(MlflowException, match=\"run_info cannot be None\") as no_info_exc:",
          "99:         assert \"run_info cannot be None\" in str(no_info_exc)",
          "",
          "[Removed Lines]",
          "85:         run1 = Run(run_info, run_data)",
          "89:             \"experiment_id=0, \"",
          "90:             \"lifecycle_stage='active', run_id='hi', run_name='name', run_uuid='hi', \"",
          "91:             \"start_time=0, status=4, user_id='user-id'>>\"",
          "95:     def test_creating_run_with_absent_info_throws_exception(self, run_data):",
          "98:             Run(None, run_data)",
          "",
          "[Added Lines]",
          "102:         dataset_inputs = DatasetInput(",
          "103:             dataset=Dataset(",
          "104:                 name=\"name1\", digest=\"digest1\", source_type=\"my_source_type\", source=\"source\"",
          "105:             ),",
          "106:             tags=[],",
          "107:         )",
          "108:         run_inputs = RunInputs(dataset_inputs=dataset_inputs)",
          "109:         run1 = Run(run_info, run_data, run_inputs)",
          "113:             \"experiment_id=0, lifecycle_stage='active', run_id='hi', run_name='name', \"",
          "114:             \"run_uuid='hi', start_time=0, status=4, user_id='user-id'>, inputs=<RunInputs: \"",
          "115:             \"dataset_inputs=<DatasetInput: dataset=<Dataset: digest='digest1', \"",
          "116:             \"name='name1', profile=None, schema=None, source='source', \"",
          "117:             \"source_type='my_source_type'>, tags=[]>>>\"",
          "121:     def test_creating_run_with_absent_info_throws_exception(self, run_data, run_inputs):",
          "124:             Run(None, run_data, run_inputs)",
          "",
          "---------------"
        ],
        "tests/entities/test_run_inputs.py||tests/entities/test_run_inputs.py": [
          "File: tests/entities/test_run_inputs.py -> tests/entities/test_run_inputs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from mlflow.entities import RunInputs",
          "2: from mlflow.entities.dataset_input import DatasetInput",
          "5: def _check_inputs(run_datasets, datasets):",
          "6:     for d1, d2 in zip(run_datasets, datasets):",
          "7:         assert d1.dataset.digest == d2.dataset.digest",
          "8:         assert d1.dataset.name == d2.dataset.name",
          "9:         assert d1.dataset.source_type == d2.dataset.source_type",
          "10:         assert d1.dataset.source == d2.dataset.source",
          "11:         for t1, t2 in zip(d1.tags, d2.tags):",
          "12:             assert t1.key == t2.key",
          "13:             assert t1.value == t2.value",
          "16: def _check(inputs, datasets):",
          "17:     assert isinstance(inputs, RunInputs)",
          "18:     _check_inputs(inputs.dataset_inputs, datasets)",
          "21: def test_creation_and_hydration(run_inputs):",
          "22:     run_inputs, datasets = run_inputs",
          "23:     _check(run_inputs, datasets)",
          "24:     as_dict = {",
          "25:         \"dataset_inputs\": datasets,",
          "26:     }",
          "27:     assert dict(run_inputs) == as_dict",
          "28:     proto = run_inputs.to_proto()",
          "29:     run_inputs2 = RunInputs.from_proto(proto)",
          "30:     _check(run_inputs2, datasets)",
          "31:     assert isinstance(run_inputs2.dataset_inputs[0], DatasetInput)",
          "",
          "---------------"
        ],
        "tests/evaluate/test_evaluation.py||tests/evaluate/test_evaluation.py": [
          "File: tests/evaluate/test_evaluation.py -> tests/evaluate/test_evaluation.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: import mlflow",
          "34: from mlflow import MlflowClient",
          "35: from mlflow.exceptions import MlflowException",
          "36: from mlflow.models.evaluation import (",
          "37:     evaluate,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: from mlflow.data.pandas_dataset import from_pandas",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:     return RunData(params=data.params, metrics=data.metrics, tags=data.tags, artifacts=artifacts)",
          "93: def get_raw_tag(run_id, tag_name):",
          "94:     client = MlflowClient()",
          "95:     data = client.get_run(run_id).data",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94: def get_run_datasets(run_id):",
          "95:     client = MlflowClient()",
          "96:     datasets = client.get_run(run_id).inputs.dataset_inputs",
          "97:     return datasets",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "562:         assert v == saved_metrics[k]",
          "565: def test_dataset_name():",
          "566:     X, y = get_iris()",
          "567:     d1 = EvaluationDataset(data=X, targets=y, name=\"a1\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "572: def test_pandas_df_regressor_evaluation_mlflow_dataset_with_metric_prefix(",
          "573:     linear_regressor_model_uri,",
          "574: ):",
          "575:     data = sklearn.datasets.load_diabetes()",
          "576:     df = pd.DataFrame(data.data, columns=data.feature_names)",
          "577:     df[\"y\"] = data.target",
          "578:     mlflow_df = from_pandas(df=df, source=\"my_src\", targets=\"y\")",
          "579:     with mlflow.start_run() as run:",
          "580:         eval_result = evaluate(",
          "581:             linear_regressor_model_uri,",
          "582:             data=mlflow_df,",
          "583:             targets=\"y\",",
          "584:             model_type=\"regressor\",",
          "585:             evaluators=[\"default\"],",
          "586:             evaluator_config={",
          "587:                 \"default\": {",
          "588:                     \"metric_prefix\": \"eval\",",
          "589:                 }",
          "590:             },",
          "591:         )",
          "592:     _, saved_metrics, _, _ = get_run_data(run.info.run_id)",
          "594:     for k, v in eval_result.metrics.items():",
          "595:         assert v == saved_metrics[k]",
          "597:     datasets = get_run_datasets(run.info.run_id)",
          "598:     assert len(datasets) == 1",
          "599:     assert datasets[0].tags[0].value == \"eval\"",
          "602: def test_pandas_df_regressor_evaluation_mlflow_dataset(linear_regressor_model_uri):",
          "603:     data = sklearn.datasets.load_diabetes()",
          "604:     df = pd.DataFrame(data.data, columns=data.feature_names)",
          "605:     df[\"y\"] = data.target",
          "606:     mlflow_df = from_pandas(df=df, source=\"my_src\", targets=\"y\")",
          "607:     with mlflow.start_run() as run:",
          "608:         eval_result = evaluate(",
          "609:             linear_regressor_model_uri,",
          "610:             data=mlflow_df,",
          "611:             targets=\"y\",",
          "612:             model_type=\"regressor\",",
          "613:             evaluators=[\"default\"],",
          "614:         )",
          "615:     _, saved_metrics, _, _ = get_run_data(run.info.run_id)",
          "617:     for k, v in eval_result.metrics.items():",
          "618:         assert v == saved_metrics[k]",
          "620:     datasets = get_run_datasets(run.info.run_id)",
          "621:     assert len(datasets) == 1",
          "622:     assert len(datasets[0].tags) == 0",
          "625: def test_pandas_df_regressor_evaluation_mlflow_dataset_with_targets_from_dataset(",
          "626:     linear_regressor_model_uri,",
          "627: ):",
          "628:     data = sklearn.datasets.load_diabetes()",
          "629:     df = pd.DataFrame(data.data, columns=data.feature_names)",
          "630:     df[\"y\"] = data.target",
          "631:     mlflow_df = from_pandas(df=df, source=\"my_src\", targets=\"y\")",
          "632:     with mlflow.start_run() as run:",
          "633:         eval_result = evaluate(",
          "634:             linear_regressor_model_uri,",
          "635:             data=mlflow_df,",
          "636:             model_type=\"regressor\",",
          "637:             evaluators=[\"default\"],",
          "638:         )",
          "639:     _, saved_metrics, _, _ = get_run_data(run.info.run_id)",
          "641:     for k, v in eval_result.metrics.items():",
          "642:         assert v == saved_metrics[k]",
          "644:     datasets = get_run_datasets(run.info.run_id)",
          "645:     assert len(datasets) == 1",
          "646:     assert len(datasets[0].tags) == 0",
          "649: def test_pandas_df_regressor_evaluation_mlflow_dataset_without_targets(linear_regressor_model_uri):",
          "650:     data = sklearn.datasets.load_diabetes()",
          "651:     df = pd.DataFrame(data.data, columns=data.feature_names)",
          "652:     df[\"y\"] = data.target",
          "653:     mlflow_df = from_pandas(df=df, source=\"my_src\")",
          "654:     with mlflow.start_run() as run:  # pylint: disable=unused-variable",
          "655:         with pytest.raises(",
          "656:             MlflowException,",
          "657:             match=\"The targets argument is required when data is a Dataset and does not define \"",
          "658:             \"targets.\",",
          "659:         ):",
          "660:             eval_result = evaluate(  # pylint: disable=unused-variable",
          "661:                 linear_regressor_model_uri,",
          "662:                 data=mlflow_df,",
          "663:                 model_type=\"regressor\",",
          "664:                 evaluators=[\"default\"],",
          "665:             )",
          "",
          "---------------"
        ],
        "tests/lightgbm/test_lightgbm_autolog.py||tests/lightgbm/test_lightgbm_autolog.py": [
          "File: tests/lightgbm/test_lightgbm_autolog.py -> tests/lightgbm/test_lightgbm_autolog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: from mlflow.models import Model",
          "19: from mlflow.models.utils import _read_example",
          "20: from mlflow import MlflowClient",
          "21: from mlflow.utils.autologging_utils import picklable_exception_safe_function, BatchMetricsLogger",
          "22: from unittest.mock import patch",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: from mlflow.types.utils import _infer_schema",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:     return lgb.Dataset(X, y, free_raw_data=False)",
          "54: def test_lgb_autolog_ends_auto_created_run(bst_params, train_set):",
          "55:     mlflow.lightgbm.autolog()",
          "56:     lgb.train(bst_params, train_set, num_boost_round=1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55: @pytest.fixture(scope=\"module\")",
          "56: def valid_set():",
          "57:     iris = datasets.load_iris()",
          "58:     X = pd.DataFrame(iris.data[:, :2] * 2, columns=iris.feature_names[:2])",
          "59:     y = iris.target",
          "60:     # set free_raw_data False to use raw data later.",
          "61:     return lgb.Dataset(X, y, free_raw_data=False)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "760:         registered_model = MlflowClient().get_registered_model(registered_model_name)",
          "761:         assert registered_model.name == registered_model_name",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "774: @pytest.mark.parametrize(\"log_datasets\", [True, False])",
          "775: def test_lgb_log_datasets(bst_params, train_set, log_datasets):",
          "776:     with mlflow.start_run() as run:",
          "777:         mlflow.lightgbm.autolog(log_datasets=log_datasets)",
          "778:         lgb.train(bst_params, train_set, num_boost_round=1)",
          "780:     run_id = run.info.run_id",
          "781:     client = MlflowClient()",
          "782:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "783:     if log_datasets:",
          "784:         assert len(dataset_inputs) == 1",
          "785:         assert dataset_inputs[0].dataset.schema == json.dumps(",
          "786:             {\"mlflow_colspec\": _infer_schema(train_set.data).to_dict()}",
          "787:         )",
          "788:     else:",
          "789:         assert len(dataset_inputs) == 0",
          "792: def test_lgb_log_datasets_with_valid_set(bst_params, train_set, valid_set):",
          "793:     with mlflow.start_run() as run:",
          "794:         mlflow.lightgbm.autolog(log_datasets=True)",
          "795:         lgb.train(bst_params, train_set, valid_sets=[valid_set], num_boost_round=1)",
          "797:     run_id = run.info.run_id",
          "798:     client = MlflowClient()",
          "799:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "800:     assert len(dataset_inputs) == 2",
          "801:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "802:     assert dataset_inputs[0].dataset.schema == json.dumps(",
          "803:         {\"mlflow_colspec\": _infer_schema(train_set.data).to_dict()}",
          "804:     )",
          "805:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "806:     assert dataset_inputs[1].dataset.schema == json.dumps(",
          "807:         {\"mlflow_colspec\": _infer_schema(valid_set.data).to_dict()}",
          "808:     )",
          "811: def test_lgb_log_datasets_with_valid_set_with_name(bst_params, train_set, valid_set):",
          "812:     with mlflow.start_run() as run:",
          "813:         mlflow.lightgbm.autolog(log_datasets=True)",
          "814:         lgb.train(",
          "815:             bst_params,",
          "816:             train_set,",
          "817:             valid_sets=[valid_set],",
          "818:             valid_names=[\"my_valid_set\"],",
          "819:             num_boost_round=1,",
          "820:         )",
          "822:     run_id = run.info.run_id",
          "823:     client = MlflowClient()",
          "824:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "825:     assert len(dataset_inputs) == 2",
          "826:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "827:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "828:     assert dataset_inputs[1].dataset.name == \"my_valid_set\"",
          "",
          "---------------"
        ],
        "tests/resources/data/dataset.py||tests/resources/data/dataset.py": [
          "File: tests/resources/data/dataset.py -> tests/resources/data/dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import hashlib",
          "2: import base64",
          "3: import json",
          "4: from typing import Any, Dict, Optional, List",
          "6: import numpy as np",
          "7: import pandas as pd",
          "9: from mlflow.data.dataset import Dataset",
          "10: from mlflow.types import Schema",
          "11: from mlflow.types.utils import _infer_schema",
          "13: from tests.resources.data.dataset_source import TestDatasetSource",
          "16: class TestDataset(Dataset):",
          "17:     def __init__(",
          "18:         self,",
          "19:         data_list: List[int],",
          "20:         source: TestDatasetSource,",
          "21:         name: Optional[str] = None,",
          "22:         digest: Optional[str] = None,",
          "23:     ):",
          "24:         self._data_list = data_list",
          "25:         super().__init__(source=source, name=name, digest=digest)",
          "27:     def _compute_digest(self) -> str:",
          "28:         \"\"\"",
          "29:         Computes a digest for the dataset. Called if the user doesn't supply",
          "30:         a digest when constructing the dataset.",
          "31:         \"\"\"",
          "32:         hash_md5 = hashlib.md5()",
          "33:         for hash_part in pd.util.hash_array(np.array(self._data_list)):",
          "34:             hash_md5.update(hash_part)",
          "35:         return base64.b64encode(hash_md5.digest()).decode(\"ascii\")",
          "37:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "38:         \"\"\"",
          "39:         :param base_dict: A string dictionary of base information about the",
          "40:                           dataset, including: name, digest, source, and source",
          "41:                           type.",
          "42:         :return: A string dictionary containing the following fields: name,",
          "43:                  digest, source, source type, schema (optional), profile",
          "44:                  (optional).",
          "45:         \"\"\"",
          "46:         base_dict.update(",
          "47:             {",
          "48:                 \"schema\": json.dumps({\"mlflow_colspec\": self.schema.to_dict()}),",
          "49:                 \"profile\": json.dumps(self.profile),",
          "50:             }",
          "51:         )",
          "52:         return base_dict",
          "54:     @property",
          "55:     def data_list(self) -> List[int]:",
          "56:         return self._data_list",
          "58:     @property",
          "59:     def source(self) -> TestDatasetSource:",
          "60:         return self._source",
          "62:     @property",
          "63:     def profile(self) -> Optional[Any]:",
          "64:         return {",
          "65:             \"length\": len(self._data_list),",
          "66:         }",
          "68:     @property",
          "69:     def schema(self) -> Schema:",
          "70:         return _infer_schema(np.array(self._data_list))",
          "",
          "---------------"
        ],
        "tests/resources/data/dataset_source.py||tests/resources/data/dataset_source.py": [
          "File: tests/resources/data/dataset_source.py -> tests/resources/data/dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from typing import Any, Dict",
          "2: from urllib.parse import urlparse",
          "4: from mlflow.artifacts import download_artifacts",
          "5: from mlflow.data.dataset_source import DatasetSource",
          "6: from mlflow.exceptions import MlflowException",
          "7: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "10: class TestDatasetSource(DatasetSource):",
          "11:     def __init__(self, uri):",
          "12:         self._uri = uri",
          "14:     @property",
          "15:     def uri(self):",
          "16:         return self._uri",
          "18:     @staticmethod",
          "19:     def _get_source_type() -> str:",
          "20:         return \"test\"",
          "22:     def load(self) -> str:",
          "23:         # Ignore the \"test\" URI scheme and download the local path",
          "24:         parsed_uri = urlparse(self._uri)",
          "25:         return download_artifacts(parsed_uri.path)",
          "27:     @staticmethod",
          "28:     def _can_resolve(raw_source: Any) -> bool:",
          "29:         if not isinstance(raw_source, str):",
          "30:             return False",
          "32:         try:",
          "33:             parsed_source = urlparse(raw_source)",
          "34:             return parsed_source.scheme == \"test\"",
          "35:         except Exception:",
          "36:             return False",
          "38:     @classmethod",
          "39:     def _resolve(cls, raw_source: Any) -> DatasetSource:",
          "40:         return cls(raw_source)",
          "42:     def _to_dict(self) -> Dict[Any, Any]:",
          "43:         return {\"uri\": self.uri}",
          "45:     @classmethod",
          "46:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> DatasetSource:",
          "47:         uri = source_dict.get(\"uri\")",
          "48:         if uri is None:",
          "49:             raise MlflowException(",
          "50:                 'Failed to parse dummy dataset source. Missing expected key: \"uri\"',",
          "51:                 INVALID_PARAMETER_VALUE,",
          "52:             )",
          "54:         return cls(uri=uri)",
          "",
          "---------------"
        ],
        "tests/resources/db/latest_schema.sql||tests/resources/db/latest_schema.sql": [
          "File: tests/resources/db/latest_schema.sql -> tests/resources/db/latest_schema.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: )",
          "21: CREATE TABLE registered_models (",
          "22:  name VARCHAR(256) NOT NULL,",
          "23:  creation_time BIGINT,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: CREATE TABLE input_tags (",
          "22:  input_uuid VARCHAR(36) NOT NULL,",
          "23:  name VARCHAR(255) NOT NULL,",
          "24:  value VARCHAR(500) NOT NULL,",
          "25:  CONSTRAINT input_tags_pk PRIMARY KEY (input_uuid, name)",
          "26: )",
          "29: CREATE TABLE inputs (",
          "30:  input_uuid VARCHAR(36) NOT NULL,",
          "31:  source_type VARCHAR(36) NOT NULL,",
          "32:  source_id VARCHAR(36) NOT NULL,",
          "33:  destination_type VARCHAR(36) NOT NULL,",
          "34:  destination_id VARCHAR(36) NOT NULL,",
          "35:  CONSTRAINT inputs_pk PRIMARY KEY (source_type, source_id, destination_type, destination_id)",
          "36: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28: )",
          "31: CREATE TABLE experiment_tags (",
          "32:  key VARCHAR(250) NOT NULL,",
          "33:  value VARCHAR(5000),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: CREATE TABLE datasets (",
          "50:  dataset_uuid VARCHAR(36) NOT NULL,",
          "51:  experiment_id INTEGER NOT NULL,",
          "52:  name VARCHAR(500) NOT NULL,",
          "53:  digest VARCHAR(36) NOT NULL,",
          "54:  dataset_source_type VARCHAR(36) NOT NULL,",
          "55:  dataset_source TEXT NOT NULL,",
          "56:  dataset_schema TEXT,",
          "57:  dataset_profile TEXT,",
          "58:  CONSTRAINT dataset_pk PRIMARY KEY (experiment_id, name, digest),",
          "59:  FOREIGN KEY(experiment_id) REFERENCES experiments (experiment_id)",
          "60: )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:  deleted_time BIGINT,",
          "91:  CONSTRAINT run_pk PRIMARY KEY (run_uuid),",
          "92:  FOREIGN KEY(experiment_id) REFERENCES experiments (experiment_id),",
          "94:  CONSTRAINT source_type CHECK (source_type IN ('NOTEBOOK', 'JOB', 'LOCAL', 'UNKNOWN', 'PROJECT')),",
          "95:  CHECK (status IN ('SCHEDULED', 'FAILED', 'FINISHED', 'RUNNING', 'KILLED'))",
          "96: )",
          "",
          "[Removed Lines]",
          "93:  CONSTRAINT runs_lifecycle_stage CHECK (lifecycle_stage IN ('active', 'deleted')),",
          "",
          "[Added Lines]",
          "126:  CONSTRAINT runs_lifecycle_stage CHECK (lifecycle_stage IN ('active', 'deleted')),",
          "",
          "---------------"
        ],
        "tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset.py||tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset.py": [
          "File: tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset.py -> tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import json",
          "2: from typing import Any, Dict, List, Optional",
          "4: import numpy as np",
          "5: import pandas as pd",
          "7: from mlflow.data.dataset import Dataset",
          "8: from mlflow.types import Schema",
          "9: from mlflow.types.utils import _infer_schema",
          "11: from mlflow_test_plugin.dummy_dataset_source import DummyDatasetSource",
          "14: class DummyDataset(Dataset):",
          "15:     def __init__(",
          "16:         self,",
          "17:         data_list: List[int],",
          "18:         source: DummyDatasetSource,",
          "19:         name: Optional[str] = None,",
          "20:         digest: Optional[str] = None,",
          "21:     ):",
          "22:         self._data_list = data_list",
          "23:         super().__init__(source=source, name=name, digest=digest)",
          "25:     def _compute_digest(self) -> str:",
          "26:         \"\"\"",
          "27:         Computes a digest for the dataset. Called if the user doesn't supply",
          "28:         a digest when constructing the dataset.",
          "29:         \"\"\"",
          "30:         return pd.util.hash_array(np.ndarray(self._data_list))",
          "32:     def _to_dict(self, base_dict: Dict[str, str]) -> Dict[str, str]:",
          "33:         \"\"\"",
          "34:         :param base_dict: A string dictionary of base information about the",
          "35:                           dataset, including: name, digest, source, and source",
          "36:                           type.",
          "37:         :return: A string dictionary containing the following fields: name,",
          "38:                  digest, source, source type, schema (optional), profile",
          "39:                  (optional).",
          "40:         \"\"\"",
          "41:         base_dict.update(",
          "42:             {",
          "43:                 \"schema\": json.dumps({\"mlflow_colspec\": self.schema.to_dict()}),",
          "44:                 \"profile\": json.dumps(self.profile),",
          "45:             }",
          "46:         )",
          "47:         return base_dict",
          "49:     @property",
          "50:     def data_list(self) -> List[int]:",
          "51:         return self._data_list",
          "53:     @property",
          "54:     def source(self) -> DummyDatasetSource:",
          "55:         return self._source",
          "57:     @property",
          "58:     def profile(self) -> Optional[Any]:",
          "59:         return {",
          "60:             \"length\": len(self._data_list),",
          "61:         }",
          "63:     @property",
          "64:     def schema(self) -> Schema:",
          "65:         return _infer_schema(self._data_list)",
          "68: def from_dummy(",
          "69:     data_list: List[int], source: str, name: Optional[str] = None, digest: Optional[str] = None",
          "70: ) -> DummyDataset:",
          "71:     from mlflow.data.dataset_source_registry import resolve_dataset_source",
          "73:     resolved_source: DummyDatasetSource = resolve_dataset_source(",
          "74:         source, candidate_sources=[DummyDatasetSource]",
          "75:     )",
          "76:     return DummyDataset(data_list=data_list, source=resolved_source, name=name, digest=digest)",
          "",
          "---------------"
        ],
        "tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset_source.py||tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset_source.py": [
          "File: tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset_source.py -> tests/resources/mlflow-test-plugin/mlflow_test_plugin/dummy_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from typing import Any, Dict",
          "2: from urllib.parse import urlparse",
          "4: from mlflow.artifacts import download_artifacts",
          "5: from mlflow.data.dataset_source import DatasetSource",
          "6: from mlflow.exceptions import MlflowException",
          "7: from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE",
          "10: class DummyDatasetSource(DatasetSource):",
          "11:     def __init__(self, uri):",
          "12:         self._uri = uri",
          "14:     @property",
          "15:     def uri(self):",
          "16:         return self._uri",
          "18:     @staticmethod",
          "19:     def _get_source_type() -> str:",
          "20:         return \"dummy\"",
          "22:     def load(self) -> str:",
          "23:         # Ignore the \"dummy\" URI scheme and download the local path",
          "24:         parsed_uri = urlparse(self._uri)",
          "25:         return download_artifacts(parsed_uri.path)",
          "27:     @staticmethod",
          "28:     def _can_resolve(raw_source: Any) -> bool:",
          "29:         if not isinstance(raw_source, str):",
          "30:             return False",
          "32:         try:",
          "33:             parsed_source = urlparse(raw_source)",
          "34:             return parsed_source.scheme == \"dummy\"",
          "35:         except Exception:",
          "36:             return False",
          "38:     @classmethod",
          "39:     def _resolve(cls, raw_source: Any) -> DatasetSource:",
          "40:         return cls(raw_source)",
          "42:     def _to_dict(self) -> Dict[Any, Any]:",
          "43:         return {\"uri\": self.uri}",
          "45:     @classmethod",
          "46:     def _from_dict(cls, source_dict: Dict[Any, Any]) -> DatasetSource:",
          "47:         uri = source_dict.get(\"uri\")",
          "48:         if uri is None:",
          "49:             raise MlflowException(",
          "50:                 'Failed to parse dummy dataset source. Missing expected key: \"uri\"',",
          "51:                 INVALID_PARAMETER_VALUE,",
          "52:             )",
          "54:         return cls(uri=uri)",
          "",
          "---------------"
        ],
        "tests/resources/mlflow-test-plugin/setup.py||tests/resources/mlflow-test-plugin/setup.py": [
          "File: tests/resources/mlflow-test-plugin/setup.py -> tests/resources/mlflow-test-plugin/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         \"mlflow.model_evaluator\": \"dummy_evaluator=mlflow_test_plugin.dummy_evaluator:DummyEvaluator\",  # pylint: disable=line-too-long",
          "34:         # Define a custom Mlflow application with name custom_app",
          "35:         \"mlflow.app\": \"custom_app=mlflow_test_plugin.app:custom_app\",",
          "36:     },",
          "37: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:         # Define an MLflow dataset source called \"dummy_source\"",
          "37:         \"mlflow.dataset_source\": \"dummy_source=mlflow_test_plugin.dummy_dataset_source:DummyDatasetSource\",  # pylint: disable=line-too-long",
          "38:         # Define an MLflow dataset constructor called \"from_dummy\"",
          "39:         \"mlflow.dataset_constructor\": \"from_dummy=mlflow_test_plugin.dummy_dataset:from_dummy\",",
          "",
          "---------------"
        ],
        "tests/sklearn/test_sklearn_autolog.py||tests/sklearn/test_sklearn_autolog.py": [
          "File: tests/sklearn/test_sklearn_autolog.py -> tests/sklearn/test_sklearn_autolog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import functools",
          "2: import inspect",
          "3: from unittest import mock",
          "4: import os",
          "5: import matplotlib.pyplot as plt",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import json",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8: import pytest",
          "9: import re",
          "10: import contextlib",
          "12: import pickle",
          "13: import doctest",
          "14: from packaging.version import Version",
          "",
          "[Removed Lines]",
          "11: import json",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "36:     _log_estimator_content,",
          "37:     _is_estimator_html_repr_supported,",
          "38: )",
          "39: from mlflow.utils import _truncate_dict",
          "40: from mlflow.utils.autologging_utils import MlflowAutologgingQueueingClient",
          "41: from mlflow.utils.mlflow_tags import MLFLOW_AUTOLOGGING",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: from mlflow.types.utils import _infer_schema",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1007:     model_conf = get_model_conf(run.info.artifact_uri)",
          "1010:     mock_warning.call_args[0][0].endswith(\"DO NOT SLICE ME\")",
          "1011:     assert \"signature\" not in model_conf.to_dict()",
          "1012:     assert \"saved_input_example_info\" not in model_conf.to_dict()",
          "",
          "[Removed Lines]",
          "1009:     mock_warning.assert_called_once()",
          "",
          "[Added Lines]",
          "1010:     assert mock_warning.call_count == 2",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1090:     assert (MODEL_DIR in artifacts) == log_models",
          "1093: def test_autolog_does_not_capture_runs_for_preprocessing_or_feature_manipulation_estimators():",
          "1094:     \"\"\"",
          "1095:     Verifies that preprocessing and feature manipulation estimators, which represent data",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1094: @pytest.mark.parametrize(\"log_datasets\", [True, False])",
          "1095: def test_sklearn_autolog_log_datasets_configuration(log_datasets):",
          "1096:     X, y = get_iris()",
          "1098:     with mlflow.start_run() as run:",
          "1099:         mlflow.sklearn.autolog(log_datasets=log_datasets)",
          "1100:         model = sklearn.linear_model.LinearRegression()",
          "1101:         model.fit(X, y)",
          "1103:     run_id = run.info.run_id",
          "1104:     client = MlflowClient()",
          "1105:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "1106:     if log_datasets:",
          "1107:         assert len(dataset_inputs) == 1",
          "1108:         feature_schema = _infer_schema(X)",
          "1109:         target_schema = _infer_schema(y)",
          "1110:         assert dataset_inputs[0].dataset.schema == json.dumps(",
          "1111:             {",
          "1112:                 \"mlflow_tensorspec\": {",
          "1113:                     \"features\": feature_schema.to_json(),",
          "1114:                     \"targets\": target_schema.to_json(),",
          "1115:                 }",
          "1116:             }",
          "1117:         )",
          "1118:     else:",
          "1119:         assert len(dataset_inputs) == 0",
          "1122: def test_sklearn_autolog_log_datasets_with_predict():",
          "1123:     X, y = get_iris()",
          "1125:     with mlflow.start_run() as run:",
          "1126:         mlflow.sklearn.autolog(log_datasets=True)",
          "1127:         model = sklearn.linear_model.LinearRegression()",
          "1128:         model.fit(X, y)",
          "1129:         y_pred = model.predict(X)  # pylint: disable=unused-variable",
          "1131:     run_id = run.info.run_id",
          "1132:     client = MlflowClient()",
          "1133:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "1135:     assert len(dataset_inputs) == 2",
          "1136:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "1137:     feature_schema = _infer_schema(X)",
          "1138:     target_schema = _infer_schema(y)",
          "1139:     assert dataset_inputs[0].dataset.schema == json.dumps(",
          "1140:         {",
          "1141:             \"mlflow_tensorspec\": {",
          "1142:                 \"features\": feature_schema.to_json(),",
          "1143:                 \"targets\": target_schema.to_json(),",
          "1144:             }",
          "1145:         }",
          "1146:     )",
          "1147:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "1148:     assert dataset_inputs[1].dataset.schema == json.dumps(",
          "1149:         {",
          "1150:             \"mlflow_tensorspec\": {",
          "1151:                 \"features\": feature_schema.to_json(),",
          "1152:                 \"targets\": None,",
          "1153:             }",
          "1154:         }",
          "1155:     )",
          "1158: def test_sklearn_autolog_log_datasets_without_explicit_run():",
          "1159:     X, y = get_iris()",
          "1161:     mlflow.sklearn.autolog(log_datasets=True)",
          "1162:     model = sklearn.linear_model.LinearRegression()",
          "1163:     model.fit(X, y)",
          "1164:     y_pred = model.predict(X)  # pylint: disable=unused-variable",
          "1166:     run_id = getattr(model, \"_mlflow_run_id\")",
          "1167:     client = MlflowClient()",
          "1168:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "1170:     assert len(dataset_inputs) == 2",
          "1171:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "1172:     feature_schema = _infer_schema(X)",
          "1173:     target_schema = _infer_schema(y)",
          "1174:     assert dataset_inputs[0].dataset.schema == json.dumps(",
          "1175:         {",
          "1176:             \"mlflow_tensorspec\": {",
          "1177:                 \"features\": feature_schema.to_json(),",
          "1178:                 \"targets\": target_schema.to_json(),",
          "1179:             }",
          "1180:         }",
          "1181:     )",
          "1182:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "1183:     assert dataset_inputs[1].dataset.schema == json.dumps(",
          "1184:         {",
          "1185:             \"mlflow_tensorspec\": {",
          "1186:                 \"features\": feature_schema.to_json(),",
          "1187:                 \"targets\": None,",
          "1188:             }",
          "1189:         }",
          "1190:     )",
          "",
          "---------------"
        ],
        "tests/spark/autologging/ml/test_pyspark_ml_autologging.py||tests/spark/autologging/ml/test_pyspark_ml_autologging.py": [
          "File: tests/spark/autologging/ml/test_pyspark_ml_autologging.py -> tests/spark/autologging/ml/test_pyspark_ml_autologging.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "723:     )",
          "726: def test_basic_post_training_metric_autologging(dataset_iris_binomial):",
          "727:     mlflow.pyspark.ml.autolog()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "726: @pytest.mark.parametrize(\"log_datasets\", [True, False])",
          "727: def test_basic_post_training_datasets_autologging(dataset_iris_binomial, log_datasets):",
          "728:     mlflow.pyspark.ml.autolog(log_datasets=log_datasets)",
          "729:     estimator = LogisticRegression(maxIter=1, family=\"binomial\", regParam=5.0, fitIntercept=False)",
          "731:     with mlflow.start_run() as run:",
          "732:         model = estimator.fit(dataset_iris_binomial)  # pylint: disable=unused-variable",
          "734:     run_id = run.info.run_id",
          "735:     client = MlflowClient()",
          "736:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "737:     if log_datasets:",
          "738:         assert len(dataset_inputs) == 1",
          "739:         assert dataset_inputs[0].dataset.source_type == \"code\"",
          "740:     else:",
          "741:         assert len(dataset_inputs) == 0",
          "744: def test_post_training_datasets_with_evaluate_autologging(dataset_iris_binomial):",
          "745:     mlflow.pyspark.ml.autolog(log_datasets=True, log_post_training_metrics=True)",
          "746:     estimator = LogisticRegression(maxIter=1, family=\"binomial\", regParam=5.0, fitIntercept=False)",
          "747:     eval_dataset = dataset_iris_binomial.sample(fraction=0.3, seed=1)",
          "749:     with mlflow.start_run() as run:",
          "750:         model = estimator.fit(dataset_iris_binomial)",
          "751:         mce = MulticlassClassificationEvaluator(metricName=\"logLoss\")",
          "752:         pred_result = model.transform(eval_dataset)",
          "753:         logloss = mce.evaluate(pred_result)  # pylint: disable=unused-variable",
          "755:     run_id = run.info.run_id",
          "756:     client = MlflowClient()",
          "757:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "758:     assert len(dataset_inputs) == 2",
          "759:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "760:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "763: def test_post_training_datasets_without_explicit_run(dataset_iris_binomial):",
          "764:     mlflow.pyspark.ml.autolog(log_datasets=True, log_post_training_metrics=True)",
          "765:     estimator = LogisticRegression(maxIter=1, family=\"binomial\", regParam=5.0, fitIntercept=False)",
          "766:     eval_dataset = dataset_iris_binomial.sample(fraction=0.3, seed=1)",
          "768:     model = estimator.fit(dataset_iris_binomial)",
          "769:     mce = MulticlassClassificationEvaluator(metricName=\"logLoss\")",
          "770:     pred_result = model.transform(eval_dataset)",
          "771:     logloss = mce.evaluate(pred_result)  # pylint: disable=unused-variable",
          "773:     run_id = getattr(model, \"_mlflow_run_id\")",
          "774:     client = MlflowClient()",
          "775:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "776:     assert len(dataset_inputs) == 2",
          "777:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "778:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "",
          "---------------"
        ],
        "tests/store/tracking/test_abstract_store.py||tests/store/tracking/test_abstract_store.py": [
          "File: tests/store/tracking/test_abstract_store.py -> tests/store/tracking/test_abstract_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:     def record_logged_model(self, run_id, mlflow_model):",
          "61:         raise NotImplementedError()",
          "64: def test_log_metric():",
          "65:     run_id = mock.Mock()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:     def log_inputs(self, run_id, datasets=None):",
          "64:         raise NotImplementedError()",
          "",
          "---------------"
        ],
        "tests/store/tracking/test_file_store.py||tests/store/tracking/test_file_store.py": [
          "File: tests/store/tracking/test_file_store.py -> tests/store/tracking/test_file_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import json",
          "2: import os",
          "3: import posixpath",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import hashlib",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7: import uuid",
          "8: from pathlib import Path",
          "9: import re",
          "11: import pytest",
          "12: from unittest import mock",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: from typing import List",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "20:     RunStatus,",
          "21:     RunData,",
          "22:     ExperimentTag,",
          "23: )",
          "24: from mlflow.store.entities.paged_list import PagedList",
          "25: from mlflow.exceptions import MlflowException, MissingConfigException",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:     Dataset,",
          "26:     DatasetInput,",
          "27:     InputTag,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2089: )",
          "2090: def test_create_experiment_appends_to_artifact_uri_path_correctly(input_uri, expected_uri):",
          "2091:     _assert_create_experiment_appends_to_artifact_uri_path_correctly(input_uri, expected_uri)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2099: def assert_dataset_inputs_equal(inputs1: List[DatasetInput], inputs2: List[DatasetInput]):",
          "2100:     inputs1 = sorted(inputs1, key=lambda inp: (inp.dataset.name, inp.dataset.digest))",
          "2101:     inputs2 = sorted(inputs2, key=lambda inp: (inp.dataset.name, inp.dataset.digest))",
          "2102:     assert len(inputs1) == len(inputs2)",
          "2103:     for idx, inp1 in enumerate(inputs1):",
          "2104:         inp2 = inputs2[idx]",
          "2105:         assert dict(inp1.dataset) == dict(inp2.dataset)",
          "2106:         tags1 = sorted(inp1.tags, key=lambda tag: tag.key)",
          "2107:         tags2 = sorted(inp2.tags, key=lambda tag: tag.key)",
          "2108:         for idx, tag1 in enumerate(tags1):",
          "2109:             tag2 = tags2[idx]",
          "2110:             assert tag1.key == tag1.key",
          "2111:             assert tag1.value == tag2.value",
          "2114: def test_log_inputs_and_retrieve_runs_behaves_as_expected(store):",
          "2115:     exp_id = store.create_experiment(\"12345dataset\")",
          "2117:     run1 = store.create_run(",
          "2118:         experiment_id=exp_id,",
          "2119:         user_id=\"user1\",",
          "2120:         start_time=1,",
          "2121:         tags=[],",
          "2122:         run_name=None,",
          "2123:     )",
          "2124:     run2 = store.create_run(",
          "2125:         experiment_id=exp_id,",
          "2126:         user_id=\"user2\",",
          "2127:         start_time=3,",
          "2128:         tags=[],",
          "2129:         run_name=None,",
          "2130:     )",
          "2131:     run3 = store.create_run(",
          "2132:         experiment_id=exp_id,",
          "2133:         user_id=\"user3\",",
          "2134:         start_time=2,",
          "2135:         tags=[],",
          "2136:         run_name=None,",
          "2137:     )",
          "2139:     dataset1 = Dataset(",
          "2140:         name=\"name1\",",
          "2141:         digest=\"digest1\",",
          "2142:         source_type=\"st1\",",
          "2143:         source=\"source1\",",
          "2144:         schema=\"schema1\",",
          "2145:         profile=\"profile1\",",
          "2146:     )",
          "2147:     dataset2 = Dataset(",
          "2148:         name=\"name2\",",
          "2149:         digest=\"digest2\",",
          "2150:         source_type=\"st2\",",
          "2151:         source=\"source2\",",
          "2152:         schema=\"schema2\",",
          "2153:         profile=\"profile2\",",
          "2154:     )",
          "2155:     dataset3 = Dataset(",
          "2156:         name=\"name3\",",
          "2157:         digest=\"digest3\",",
          "2158:         source_type=\"st3\",",
          "2159:         source=\"source3\",",
          "2160:         schema=\"schema3\",",
          "2161:         profile=\"profile3\",",
          "2162:     )",
          "2164:     tags1 = [InputTag(key=\"key1\", value=\"value1\"), InputTag(key=\"key2\", value=\"value2\")]",
          "2165:     tags2 = [InputTag(key=\"key3\", value=\"value3\"), InputTag(key=\"key4\", value=\"value4\")]",
          "2166:     tags3 = [InputTag(key=\"key5\", value=\"value5\"), InputTag(key=\"key6\", value=\"value6\")]",
          "2168:     inputs_run1 = [DatasetInput(dataset1, tags1), DatasetInput(dataset2, tags1)]",
          "2169:     inputs_run2 = [DatasetInput(dataset1, tags2), DatasetInput(dataset3, tags3)]",
          "2170:     inputs_run3 = [DatasetInput(dataset2, tags3)]",
          "2172:     store.log_inputs(run1.info.run_id, inputs_run1)",
          "2173:     store.log_inputs(run2.info.run_id, inputs_run2)",
          "2174:     store.log_inputs(run3.info.run_id, inputs_run3)",
          "2176:     run1 = store.get_run(run1.info.run_id)",
          "2177:     assert_dataset_inputs_equal(run1.inputs.dataset_inputs, inputs_run1)",
          "2178:     run2 = store.get_run(run2.info.run_id)",
          "2179:     assert_dataset_inputs_equal(run2.inputs.dataset_inputs, inputs_run2)",
          "2180:     run3 = store.get_run(run3.info.run_id)",
          "2181:     assert_dataset_inputs_equal(run3.inputs.dataset_inputs, inputs_run3)",
          "2183:     search_results_1 = store.search_runs(",
          "2184:         [exp_id], None, ViewType.ALL, max_results=4, order_by=[\"start_time ASC\"]",
          "2185:     )",
          "2186:     run1 = search_results_1[0]",
          "2187:     assert_dataset_inputs_equal(run1.inputs.dataset_inputs, inputs_run1)",
          "2188:     run2 = search_results_1[2]",
          "2189:     assert_dataset_inputs_equal(run2.inputs.dataset_inputs, inputs_run2)",
          "2190:     run3 = search_results_1[1]",
          "2191:     assert_dataset_inputs_equal(run3.inputs.dataset_inputs, inputs_run3)",
          "2193:     search_results_2 = store.search_runs(",
          "2194:         [exp_id], None, ViewType.ALL, max_results=4, order_by=[\"start_time DESC\"]",
          "2195:     )",
          "2196:     run1 = search_results_2[2]",
          "2197:     assert_dataset_inputs_equal(run1.inputs.dataset_inputs, inputs_run1)",
          "2198:     run2 = search_results_2[0]",
          "2199:     assert_dataset_inputs_equal(run2.inputs.dataset_inputs, inputs_run2)",
          "2200:     run3 = search_results_2[1]",
          "2201:     assert_dataset_inputs_equal(run3.inputs.dataset_inputs, inputs_run3)",
          "2204: def test_log_input_multiple_times_does_not_overwrite_tags_or_dataset(store):",
          "2205:     exp_id = store.create_experiment(\"dataset_no_overwrite\")",
          "2207:     run = store.create_run(",
          "2208:         experiment_id=exp_id,",
          "2209:         user_id=\"user\",",
          "2210:         start_time=0,",
          "2211:         tags=[],",
          "2212:         run_name=None,",
          "2213:     )",
          "2214:     dataset = Dataset(",
          "2215:         name=\"name\",",
          "2216:         digest=\"digest\",",
          "2217:         source_type=\"st\",",
          "2218:         source=\"source\",",
          "2219:         schema=\"schema\",",
          "2220:         profile=\"profile\",",
          "2221:     )",
          "2222:     tags = [InputTag(key=\"key1\", value=\"value1\"), InputTag(key=\"key2\", value=\"value2\")]",
          "2223:     store.log_inputs(run.info.run_id, [DatasetInput(dataset, tags)])",
          "2225:     for i in range(3):",
          "2226:         # Since the dataset name and digest are the same as the previously logged dataset,",
          "2227:         # no changes should be made",
          "2228:         overwrite_dataset = Dataset(",
          "2229:             name=\"name\",",
          "2230:             digest=\"digest\",",
          "2231:             source_type=\"st{i}\",",
          "2232:             source=f\"source{i}\",",
          "2233:             schema=f\"schema{i}\",",
          "2234:             profile=f\"profile{i}\",",
          "2235:         )",
          "2236:         # Since the dataset has already been logged as an input to the run, no changes should be",
          "2237:         # made to the input tags",
          "2238:         overwrite_tags = [",
          "2239:             InputTag(key=f\"key{i}\", value=f\"value{i}\"),",
          "2240:             InputTag(key=f\"key{i+1}\", value=f\"value{i+1}\"),",
          "2241:         ]",
          "2242:         store.log_inputs(run.info.run_id, [DatasetInput(overwrite_dataset, overwrite_tags)])",
          "2244:     run = store.get_run(run.info.run_id)",
          "2245:     assert_dataset_inputs_equal(run.inputs.dataset_inputs, [DatasetInput(dataset, tags)])",
          "2247:     # Logging a dataset with a different name or digest to the original run should result",
          "2248:     # in the addition of another dataset input",
          "2249:     other_name_dataset = Dataset(",
          "2250:         name=\"other_name\",",
          "2251:         digest=\"digest\",",
          "2252:         source_type=\"st\",",
          "2253:         source=\"source\",",
          "2254:         schema=\"schema\",",
          "2255:         profile=\"profile\",",
          "2256:     )",
          "2257:     other_name_input_tags = [InputTag(key=\"k1\", value=\"v1\")]",
          "2258:     store.log_inputs(run.info.run_id, [DatasetInput(other_name_dataset, other_name_input_tags)])",
          "2260:     other_digest_dataset = Dataset(",
          "2261:         name=\"name\",",
          "2262:         digest=\"other_digest\",",
          "2263:         source_type=\"st\",",
          "2264:         source=\"source\",",
          "2265:         schema=\"schema\",",
          "2266:         profile=\"profile\",",
          "2267:     )",
          "2268:     other_digest_input_tags = [InputTag(key=\"k2\", value=\"v2\")]",
          "2269:     store.log_inputs(run.info.run_id, [DatasetInput(other_digest_dataset, other_digest_input_tags)])",
          "2271:     run = store.get_run(run.info.run_id)",
          "2272:     assert_dataset_inputs_equal(",
          "2273:         run.inputs.dataset_inputs,",
          "2274:         [",
          "2275:             DatasetInput(dataset, tags),",
          "2276:             DatasetInput(other_name_dataset, other_name_input_tags),",
          "2277:             DatasetInput(other_digest_dataset, other_digest_input_tags),",
          "2278:         ],",
          "2279:     )",
          "2281:     # Logging the same dataset with different tags to new runs should result in each run",
          "2282:     # having its own new input tags and the same dataset input",
          "2283:     for i in range(3):",
          "2284:         new_run = store.create_run(",
          "2285:             experiment_id=exp_id,",
          "2286:             user_id=\"user\",",
          "2287:             start_time=0,",
          "2288:             tags=[],",
          "2289:             run_name=None,",
          "2290:         )",
          "2291:         new_tags = [",
          "2292:             InputTag(key=f\"key{i}\", value=f\"value{i}\"),",
          "2293:             InputTag(key=f\"key{i+1}\", value=f\"value{i+1}\"),",
          "2294:         ]",
          "2295:         store.log_inputs(new_run.info.run_id, [DatasetInput(dataset, new_tags)])",
          "2296:         new_run = store.get_run(new_run.info.run_id)",
          "2297:         assert_dataset_inputs_equal(",
          "2298:             new_run.inputs.dataset_inputs, [DatasetInput(dataset, new_tags)]",
          "2299:         )",
          "2302: def test_log_inputs_uses_expected_input_and_dataset_ids_for_storage(store):",
          "2303:     \"\"\"",
          "2304:     This test verifies that the FileStore uses expected IDs as folder names to represent datasets",
          "2305:     and run inputs. This is very important because the IDs are used to deduplicate inputs and",
          "2306:     datasets if the same dataset is logged to multiple runs or the same dataset is logged",
          "2307:     multiple times as an input to the same run with different tags.",
          "2310:     could result in user-visible duplication of datasets and run inputs.**",
          "2311:     \"\"\"",
          "2312:     exp_id = store.create_experiment(\"dataset_expected_ids\")",
          "2314:     run1 = store.create_run(",
          "2315:         experiment_id=exp_id,",
          "2316:         user_id=\"user\",",
          "2317:         start_time=0,",
          "2318:         tags=[],",
          "2319:         run_name=None,",
          "2320:     )",
          "2321:     run2 = store.create_run(",
          "2322:         experiment_id=exp_id,",
          "2323:         user_id=\"user\",",
          "2324:         start_time=0,",
          "2325:         tags=[],",
          "2326:         run_name=None,",
          "2327:     )",
          "2329:     experiment_dir = store._get_experiment_path(exp_id, assert_exists=True)",
          "2330:     datasets_dir = os.path.join(experiment_dir, FileStore.DATASETS_FOLDER_NAME)",
          "2332:     def assert_expected_dataset_storage_ids_present(storage_ids):",
          "2333:         assert set(os.listdir(datasets_dir)) == set(storage_ids)",
          "2335:     def assert_expected_input_storage_ids_present(run, dataset_storage_ids):",
          "2336:         run_dir = store._get_run_dir(run.info.experiment_id, run.info.run_id)",
          "2337:         inputs_dir = os.path.join(run_dir, FileStore.INPUTS_FOLDER_NAME)",
          "2338:         expected_input_storage_ids = []",
          "2339:         for dataset_storage_id in dataset_storage_ids:",
          "2340:             md5 = hashlib.md5(dataset_storage_id.encode(\"utf-8\"))",
          "2341:             md5.update(run.info.run_id.encode(\"utf-8\"))",
          "2342:             expected_input_storage_ids.append(md5.hexdigest())",
          "2343:         assert set(os.listdir(inputs_dir)) == set(expected_input_storage_ids)",
          "2345:     tags = [InputTag(key=\"key\", value=\"value\")]",
          "2347:     dataset1 = Dataset(",
          "2348:         name=\"name\",",
          "2349:         digest=\"digest\",",
          "2350:         source_type=\"st\",",
          "2351:         source=\"source\",",
          "2352:         schema=\"schema\",",
          "2353:         profile=\"profile\",",
          "2354:     )",
          "2355:     store.log_inputs(run1.info.run_id, [DatasetInput(dataset1, tags)])",
          "2356:     expected_dataset1_storage_id = \"efa4363cd8179759e8c7f113aebdd340\"",
          "2357:     assert_expected_dataset_storage_ids_present([expected_dataset1_storage_id])",
          "2358:     assert_expected_input_storage_ids_present(run1, [expected_dataset1_storage_id])",
          "2360:     dataset2 = Dataset(",
          "2361:         name=\"name\",",
          "2362:         digest=\"digest_other\",",
          "2363:         source_type=\"st2\",",
          "2364:         source=\"source2\",",
          "2365:         schema=\"schema2\",",
          "2366:         profile=\"profile2\",",
          "2367:     )",
          "2368:     expected_dataset2_storage_id = \"419804e8e153199481c3e509de1fef8f\"",
          "2369:     store.log_inputs(run2.info.run_id, [DatasetInput(dataset2)])",
          "2370:     assert_expected_dataset_storage_ids_present(",
          "2371:         [expected_dataset1_storage_id, expected_dataset2_storage_id]",
          "2372:     )",
          "2373:     assert_expected_input_storage_ids_present(run2, [expected_dataset2_storage_id])",
          "2375:     dataset3 = Dataset(",
          "2376:         name=\"name_other\",",
          "2377:         digest=\"digest\",",
          "2378:         source_type=\"st\",",
          "2379:         source=\"source\",",
          "2380:         schema=\"schema\",",
          "2381:         profile=\"profile\",",
          "2382:     )",
          "2383:     expected_dataset3_storage_id = \"bc5dd0841d8898512d988fe3f984313c\"",
          "2384:     store.log_inputs(",
          "2385:         run2.info.run_id,",
          "2386:         [DatasetInput(dataset1), DatasetInput(dataset2), DatasetInput(dataset3, tags)],",
          "2387:     )",
          "2388:     assert_expected_dataset_storage_ids_present(",
          "2389:         [expected_dataset1_storage_id, expected_dataset2_storage_id, expected_dataset3_storage_id]",
          "2390:     )",
          "2391:     assert_expected_input_storage_ids_present(",
          "2392:         run2,",
          "2393:         [expected_dataset1_storage_id, expected_dataset2_storage_id, expected_dataset3_storage_id],",
          "2394:     )",
          "2397: def test_log_inputs_handles_case_when_no_datasets_are_specified(store):",
          "2398:     exp_id = store.create_experiment(\"log_input_no_datasets\")",
          "2399:     run = store.create_run(",
          "2400:         experiment_id=exp_id,",
          "2401:         user_id=\"user\",",
          "2402:         start_time=0,",
          "2403:         tags=[],",
          "2404:         run_name=None,",
          "2405:     )",
          "2406:     store.log_inputs(run.info.run_id)",
          "2407:     store.log_inputs(run.info.run_id, datasets=None)",
          "",
          "---------------"
        ],
        "tests/store/tracking/test_rest_store.py||tests/store/tracking/test_rest_store.py": [
          "File: tests/store/tracking/test_rest_store.py -> tests/store/tracking/test_rest_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     ExperimentTag,",
          "15:     Experiment,",
          "16:     LifecycleStage,",
          "17: )",
          "18: from mlflow.exceptions import MlflowException",
          "19: from mlflow.models import Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:     DatasetInput,",
          "18:     Dataset,",
          "19:     InputTag,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     GetExperimentByName,",
          "35:     SearchExperiments,",
          "36:     LogModel,",
          "37: )",
          "38: from mlflow.protos.databricks_pb2 import RESOURCE_DOES_NOT_EXIST",
          "39: from mlflow.store.tracking.rest_store import RestStore",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     LogInputs,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "244:             )",
          "245:             self._verify_requests(mock_http, creds, \"runs/log-batch\", \"POST\", body)",
          "247:         with mock_http_request() as mock_http:",
          "248:             store.delete_run(\"u25\")",
          "249:             self._verify_requests(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:         with mock_http_request() as mock_http:",
          "252:             dataset = Dataset(name=\"name\", digest=\"digest\", source_type=\"st\", source=\"source\")",
          "253:             tag = InputTag(key=\"k1\", value=\"v1\")",
          "254:             dataset_input = DatasetInput(dataset=dataset, tags=[tag])",
          "255:             store.log_inputs(\"some_uuid\", [dataset_input])",
          "256:             body = message_to_json(",
          "257:                 LogInputs(run_id=\"some_uuid\", datasets=[dataset_input.to_proto()])",
          "258:             )",
          "259:             self._verify_requests(mock_http, creds, \"runs/log-inputs\", \"POST\", body)",
          "",
          "---------------"
        ],
        "tests/store/tracking/test_sqlalchemy_store.py||tests/store/tracking/test_sqlalchemy_store.py": [
          "File: tests/store/tracking/test_sqlalchemy_store.py -> tests/store/tracking/test_sqlalchemy_store.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     SqlRun,",
          "63:     SqlExperimentTag,",
          "64:     SqlExperiment,",
          "65: )",
          "66: from tests.integration.utils import invoke_cli_runner",
          "67: from tests.store.tracking import AbstractStoreTest",
          "69: DB_URI = \"sqlite:///\"",
          "70: ARTIFACT_URI = \"artifact_folder\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     SqlInputTag,",
          "66:     SqlInput,",
          "67:     SqlDataset,",
          "71: from tests.store.tracking.test_file_store import assert_dataset_inputs_equal",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176:                     SqlMetric,",
          "177:                     SqlLatestMetric,",
          "178:                     SqlTag,",
          "179:                     SqlRun,",
          "180:                     SqlExperimentTag,",
          "181:                     SqlExperiment,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:                     SqlInputTag,",
          "184:                     SqlInput,",
          "185:                     SqlDataset,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2679:         metrics = self.store.get_metric_history(run_id, \"test_metric\")",
          "2680:         assert metrics == []",
          "2683: def test_sqlalchemy_store_behaves_as_expected_with_inmemory_sqlite_db(monkeypatch):",
          "2684:     monkeypatch.setenv(\"MLFLOW_SQLALCHEMYSTORE_POOLCLASS\", \"SingletonThreadPool\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2689:     def test_insert_large_text_in_dataset_table(self):",
          "2690:         with self.store.engine.begin() as conn:",
          "2691:             # cursor = conn.cursor()",
          "2692:             dataset_source = \"a\" * 65535  # 65535 is the max size for a TEXT column",
          "2693:             dataset_profile = \"a\" * 16777215  # 16777215 is the max size for a MEDIUMTEXT column",
          "2694:             conn.execute(",
          "2695:                 sqlalchemy.sql.text(",
          "2696:                     f\"\"\"",
          "2697:                 INSERT INTO datasets",
          "2698:                     (dataset_uuid,",
          "2699:                     experiment_id,",
          "2700:                     name,",
          "2701:                     digest,",
          "2702:                     dataset_source_type,",
          "2703:                     dataset_source,",
          "2704:                     dataset_schema,",
          "2705:                     dataset_profile)",
          "2706:                 VALUES",
          "2707:                     ('test_uuid',",
          "2708:                     0,",
          "2709:                     'test_name',",
          "2710:                     'test_digest',",
          "2711:                     'test_source_type',",
          "2712:                     '{dataset_source}', '",
          "2713:                     test_schema',",
          "2714:                     '{dataset_profile}')",
          "2715:                 \"\"\"",
          "2716:                 )",
          "2717:             )",
          "2718:             results = conn.execute(",
          "2719:                 sqlalchemy.sql.text(\"SELECT dataset_source, dataset_profile from datasets\")",
          "2720:             ).first()",
          "2721:             dataset_source_from_db = results[0]",
          "2722:             assert len(dataset_source_from_db) == len(dataset_source)",
          "2723:             dataset_profile_from_db = results[1]",
          "2724:             assert len(dataset_profile_from_db) == len(dataset_profile)",
          "2726:             # delete contents of datasets table",
          "2727:             conn.execute(sqlalchemy.sql.text(\"DELETE FROM datasets\"))",
          "2729:     def test_log_inputs_and_retrieve_runs_behaves_as_expected(self):",
          "2730:         experiment_id = self._experiment_factory(\"test exp\")",
          "2731:         run1 = self._run_factory(config=self._get_run_configs(experiment_id, start_time=1))",
          "2732:         run2 = self._run_factory(config=self._get_run_configs(experiment_id, start_time=3))",
          "2733:         run3 = self._run_factory(config=self._get_run_configs(experiment_id, start_time=2))",
          "2735:         dataset1 = entities.Dataset(",
          "2736:             name=\"name1\",",
          "2737:             digest=\"digest1\",",
          "2738:             source_type=\"st1\",",
          "2739:             source=\"source1\",",
          "2740:             schema=\"schema1\",",
          "2741:             profile=\"profile1\",",
          "2742:         )",
          "2743:         dataset2 = entities.Dataset(",
          "2744:             name=\"name2\",",
          "2745:             digest=\"digest2\",",
          "2746:             source_type=\"st2\",",
          "2747:             source=\"source2\",",
          "2748:             schema=\"schema2\",",
          "2749:             profile=\"profile2\",",
          "2750:         )",
          "2751:         dataset3 = entities.Dataset(",
          "2752:             name=\"name3\",",
          "2753:             digest=\"digest3\",",
          "2754:             source_type=\"st3\",",
          "2755:             source=\"source3\",",
          "2756:             schema=\"schema3\",",
          "2757:             profile=\"profile3\",",
          "2758:         )",
          "2760:         tags1 = [",
          "2761:             entities.InputTag(key=\"key1\", value=\"value1\"),",
          "2762:             entities.InputTag(key=\"key2\", value=\"value2\"),",
          "2763:         ]",
          "2764:         tags2 = [",
          "2765:             entities.InputTag(key=\"key3\", value=\"value3\"),",
          "2766:             entities.InputTag(key=\"key4\", value=\"value4\"),",
          "2767:         ]",
          "2768:         tags3 = [",
          "2769:             entities.InputTag(key=\"key5\", value=\"value5\"),",
          "2770:             entities.InputTag(key=\"key6\", value=\"value6\"),",
          "2771:         ]",
          "2773:         inputs_run1 = [",
          "2774:             entities.DatasetInput(dataset1, tags1),",
          "2775:             entities.DatasetInput(dataset2, tags1),",
          "2776:         ]",
          "2777:         inputs_run2 = [",
          "2778:             entities.DatasetInput(dataset1, tags2),",
          "2779:             entities.DatasetInput(dataset3, tags3),",
          "2780:         ]",
          "2781:         inputs_run3 = [entities.DatasetInput(dataset2, tags3)]",
          "2783:         self.store.log_inputs(run1.info.run_id, inputs_run1)",
          "2784:         self.store.log_inputs(run2.info.run_id, inputs_run2)",
          "2785:         self.store.log_inputs(run3.info.run_id, inputs_run3)",
          "2787:         run1 = self.store.get_run(run1.info.run_id)",
          "2788:         assert_dataset_inputs_equal(run1.inputs.dataset_inputs, inputs_run1)",
          "2789:         run2 = self.store.get_run(run2.info.run_id)",
          "2790:         assert_dataset_inputs_equal(run2.inputs.dataset_inputs, inputs_run2)",
          "2791:         run3 = self.store.get_run(run3.info.run_id)",
          "2792:         assert_dataset_inputs_equal(run3.inputs.dataset_inputs, inputs_run3)",
          "2794:         search_results_1 = self.store.search_runs(",
          "2795:             [experiment_id], None, ViewType.ALL, max_results=4, order_by=[\"start_time ASC\"]",
          "2796:         )",
          "2797:         run1 = search_results_1[0]",
          "2798:         assert_dataset_inputs_equal(run1.inputs.dataset_inputs, inputs_run1)",
          "2799:         run2 = search_results_1[2]",
          "2800:         assert_dataset_inputs_equal(run2.inputs.dataset_inputs, inputs_run2)",
          "2801:         run3 = search_results_1[1]",
          "2802:         assert_dataset_inputs_equal(run3.inputs.dataset_inputs, inputs_run3)",
          "2804:         search_results_2 = self.store.search_runs(",
          "2805:             [experiment_id], None, ViewType.ALL, max_results=4, order_by=[\"start_time DESC\"]",
          "2806:         )",
          "2807:         run1 = search_results_2[2]",
          "2808:         assert_dataset_inputs_equal(run1.inputs.dataset_inputs, inputs_run1)",
          "2809:         run2 = search_results_2[0]",
          "2810:         assert_dataset_inputs_equal(run2.inputs.dataset_inputs, inputs_run2)",
          "2811:         run3 = search_results_2[1]",
          "2812:         assert_dataset_inputs_equal(run3.inputs.dataset_inputs, inputs_run3)",
          "2814:     def test_log_input_multiple_times_does_not_overwrite_tags_or_dataset(self):",
          "2815:         experiment_id = self._experiment_factory(\"test exp\")",
          "2816:         run = self._run_factory(config=self._get_run_configs(experiment_id))",
          "2817:         dataset = entities.Dataset(",
          "2818:             name=\"name\",",
          "2819:             digest=\"digest\",",
          "2820:             source_type=\"st\",",
          "2821:             source=\"source\",",
          "2822:             schema=\"schema\",",
          "2823:             profile=\"profile\",",
          "2824:         )",
          "2825:         tags = [",
          "2826:             entities.InputTag(key=\"key1\", value=\"value1\"),",
          "2827:             entities.InputTag(key=\"key2\", value=\"value2\"),",
          "2828:         ]",
          "2829:         self.store.log_inputs(run.info.run_id, [entities.DatasetInput(dataset, tags)])",
          "2831:         for i in range(3):",
          "2832:             # Since the dataset name and digest are the same as the previously logged dataset,",
          "2833:             # no changes should be made",
          "2834:             overwrite_dataset = entities.Dataset(",
          "2835:                 name=\"name\",",
          "2836:                 digest=\"digest\",",
          "2837:                 source_type=\"st{i}\",",
          "2838:                 source=f\"source{i}\",",
          "2839:                 schema=f\"schema{i}\",",
          "2840:                 profile=f\"profile{i}\",",
          "2841:             )",
          "2842:             # Since the dataset has already been logged as an input to the run, no changes should be",
          "2843:             # made to the input tags",
          "2844:             overwrite_tags = [",
          "2845:                 entities.InputTag(key=f\"key{i}\", value=f\"value{i}\"),",
          "2846:                 entities.InputTag(key=f\"key{i+1}\", value=f\"value{i+1}\"),",
          "2847:             ]",
          "2848:             self.store.log_inputs(",
          "2849:                 run.info.run_id, [entities.DatasetInput(overwrite_dataset, overwrite_tags)]",
          "2850:             )",
          "2852:         run = self.store.get_run(run.info.run_id)",
          "2853:         assert_dataset_inputs_equal(",
          "2854:             run.inputs.dataset_inputs, [entities.DatasetInput(dataset, tags)]",
          "2855:         )",
          "2857:         # Logging a dataset with a different name or digest to the original run should result",
          "2858:         # in the addition of another dataset input",
          "2859:         other_name_dataset = entities.Dataset(",
          "2860:             name=\"other_name\",",
          "2861:             digest=\"digest\",",
          "2862:             source_type=\"st\",",
          "2863:             source=\"source\",",
          "2864:             schema=\"schema\",",
          "2865:             profile=\"profile\",",
          "2866:         )",
          "2867:         other_name_input_tags = [entities.InputTag(key=\"k1\", value=\"v1\")]",
          "2868:         self.store.log_inputs(",
          "2869:             run.info.run_id, [entities.DatasetInput(other_name_dataset, other_name_input_tags)]",
          "2870:         )",
          "2872:         other_digest_dataset = entities.Dataset(",
          "2873:             name=\"name\",",
          "2874:             digest=\"other_digest\",",
          "2875:             source_type=\"st\",",
          "2876:             source=\"source\",",
          "2877:             schema=\"schema\",",
          "2878:             profile=\"profile\",",
          "2879:         )",
          "2880:         other_digest_input_tags = [entities.InputTag(key=\"k2\", value=\"v2\")]",
          "2881:         self.store.log_inputs(",
          "2882:             run.info.run_id, [entities.DatasetInput(other_digest_dataset, other_digest_input_tags)]",
          "2883:         )",
          "2885:         run = self.store.get_run(run.info.run_id)",
          "2886:         assert_dataset_inputs_equal(",
          "2887:             run.inputs.dataset_inputs,",
          "2888:             [",
          "2889:                 entities.DatasetInput(dataset, tags),",
          "2890:                 entities.DatasetInput(other_name_dataset, other_name_input_tags),",
          "2891:                 entities.DatasetInput(other_digest_dataset, other_digest_input_tags),",
          "2892:             ],",
          "2893:         )",
          "2895:         # Logging the same dataset with different tags to new runs should result in each run",
          "2896:         # having its own new input tags and the same dataset input",
          "2897:         for i in range(3):",
          "2898:             new_run = self.store.create_run(",
          "2899:                 experiment_id=experiment_id,",
          "2900:                 user_id=\"user\",",
          "2901:                 start_time=0,",
          "2902:                 tags=[],",
          "2903:                 run_name=None,",
          "2904:             )",
          "2905:             new_tags = [",
          "2906:                 entities.InputTag(key=f\"key{i}\", value=f\"value{i}\"),",
          "2907:                 entities.InputTag(key=f\"key{i+1}\", value=f\"value{i+1}\"),",
          "2908:             ]",
          "2909:             self.store.log_inputs(new_run.info.run_id, [entities.DatasetInput(dataset, new_tags)])",
          "2910:             new_run = self.store.get_run(new_run.info.run_id)",
          "2911:             assert_dataset_inputs_equal(",
          "2912:                 new_run.inputs.dataset_inputs, [entities.DatasetInput(dataset, new_tags)]",
          "2913:             )",
          "2915:     def test_log_inputs_handles_case_when_no_datasets_are_specified(self):",
          "2916:         experiment_id = self._experiment_factory(\"test exp\")",
          "2917:         run = self._run_factory(config=self._get_run_configs(experiment_id))",
          "2918:         self.store.log_inputs(run.info.run_id)",
          "2919:         self.store.log_inputs(run.info.run_id, datasets=None)",
          "2921:     def test_log_inputs_fails_with_missing_inputs(self):",
          "2922:         experiment_id = self._experiment_factory(\"test exp\")",
          "2923:         run = self._run_factory(config=self._get_run_configs(experiment_id))",
          "2925:         dataset = entities.Dataset(",
          "2926:             name=\"name1\", digest=\"digest1\", source_type=\"type\", source=\"source\"",
          "2927:         )",
          "2929:         tags = [entities.InputTag(key=\"key\", value=\"train\")]",
          "2931:         # Test input key missing",
          "2932:         with pytest.raises(MlflowException, match=\"InputTag key cannot be None\"):",
          "2933:             self.store.log_inputs(",
          "2934:                 run.info.run_id,",
          "2935:                 [",
          "2936:                     entities.DatasetInput(",
          "2937:                         tags=[entities.InputTag(key=None, value=\"train\")], dataset=dataset",
          "2938:                     )",
          "2939:                 ],",
          "2940:             )",
          "2942:         # Test input value missing",
          "2943:         with pytest.raises(MlflowException, match=\"InputTag value cannot be None\"):",
          "2944:             self.store.log_inputs(",
          "2945:                 run.info.run_id,",
          "2946:                 [",
          "2947:                     entities.DatasetInput(",
          "2948:                         tags=[entities.InputTag(key=\"key\", value=None)], dataset=dataset",
          "2949:                     )",
          "2950:                 ],",
          "2951:             )",
          "2953:         # Test dataset name missing",
          "2954:         with pytest.raises(MlflowException, match=\"Dataset name cannot be None\"):",
          "2955:             self.store.log_inputs(",
          "2956:                 run.info.run_id,",
          "2957:                 [",
          "2958:                     entities.DatasetInput(",
          "2959:                         tags=tags,",
          "2960:                         dataset=entities.Dataset(",
          "2961:                             name=None, digest=\"digest1\", source_type=\"type\", source=\"source\"",
          "2962:                         ),",
          "2963:                     )",
          "2964:                 ],",
          "2965:             )",
          "2967:         # Test dataset digest missing",
          "2968:         with pytest.raises(MlflowException, match=\"Dataset digest cannot be None\"):",
          "2969:             self.store.log_inputs(",
          "2970:                 run.info.run_id,",
          "2971:                 [",
          "2972:                     entities.DatasetInput(",
          "2973:                         tags=tags,",
          "2974:                         dataset=entities.Dataset(",
          "2975:                             name=\"name\", digest=None, source_type=\"type\", source=\"source\"",
          "2976:                         ),",
          "2977:                     )",
          "2978:                 ],",
          "2979:             )",
          "2981:         # Test dataset source type missing",
          "2982:         with pytest.raises(MlflowException, match=\"Dataset source_type cannot be None\"):",
          "2983:             self.store.log_inputs(",
          "2984:                 run.info.run_id,",
          "2985:                 [",
          "2986:                     entities.DatasetInput(",
          "2987:                         tags=tags,",
          "2988:                         dataset=entities.Dataset(",
          "2989:                             name=\"name\", digest=\"digest1\", source_type=None, source=\"source\"",
          "2990:                         ),",
          "2991:                     )",
          "2992:                 ],",
          "2993:             )",
          "2995:         # Test dataset source missing",
          "2996:         with pytest.raises(MlflowException, match=\"Dataset source cannot be None\"):",
          "2997:             self.store.log_inputs(",
          "2998:                 run.info.run_id,",
          "2999:                 [",
          "3000:                     entities.DatasetInput(",
          "3001:                         tags=tags,",
          "3002:                         dataset=entities.Dataset(",
          "3003:                             name=\"name\", digest=\"digest1\", source_type=\"type\", source=None",
          "3004:                         ),",
          "3005:                     )",
          "3006:                 ],",
          "3007:             )",
          "3009:     def test_log_inputs_fails_with_too_large_inputs(self):",
          "3010:         experiment_id = self._experiment_factory(\"test exp\")",
          "3011:         run = self._run_factory(config=self._get_run_configs(experiment_id))",
          "3013:         dataset = entities.Dataset(",
          "3014:             name=\"name1\", digest=\"digest1\", source_type=\"type\", source=\"source\"",
          "3015:         )",
          "3017:         tags = [entities.InputTag(key=\"key\", value=\"train\")]",
          "3019:         # Test input key too large (limit is 255)",
          "3020:         with pytest.raises(MlflowException, match=\"InputTag key exceeds the maximum length of 255\"):",
          "3021:             self.store.log_inputs(",
          "3022:                 run.info.run_id,",
          "3023:                 [",
          "3024:                     entities.DatasetInput(",
          "3025:                         tags=[entities.InputTag(key=\"a\" * 256, value=\"train\")], dataset=dataset",
          "3026:                     )",
          "3027:                 ],",
          "3028:             )",
          "3030:         # Test input value too large (limit is 500)",
          "3031:         with pytest.raises(",
          "3032:             MlflowException, match=\"InputTag value exceeds the maximum length of 500\"",
          "3033:         ):",
          "3034:             self.store.log_inputs(",
          "3035:                 run.info.run_id,",
          "3036:                 [",
          "3037:                     entities.DatasetInput(",
          "3038:                         tags=[entities.InputTag(key=\"key\", value=\"a\" * 501)], dataset=dataset",
          "3039:                     )",
          "3040:                 ],",
          "3041:             )",
          "3043:         # Test dataset name too large (limit is 500)",
          "3044:         with pytest.raises(MlflowException, match=\"Dataset name exceeds the maximum length of 500\"):",
          "3045:             self.store.log_inputs(",
          "3046:                 run.info.run_id,",
          "3047:                 [",
          "3048:                     entities.DatasetInput(",
          "3049:                         tags=tags,",
          "3050:                         dataset=entities.Dataset(",
          "3051:                             name=\"a\" * 501, digest=\"digest1\", source_type=\"type\", source=\"source\"",
          "3052:                         ),",
          "3053:                     )",
          "3054:                 ],",
          "3055:             )",
          "3057:         # Test dataset digest too large (limit is 36)",
          "3058:         with pytest.raises(",
          "3059:             MlflowException, match=\"Dataset digest exceeds the maximum length of 36\"",
          "3060:         ):",
          "3061:             self.store.log_inputs(",
          "3062:                 run.info.run_id,",
          "3063:                 [",
          "3064:                     entities.DatasetInput(",
          "3065:                         tags=tags,",
          "3066:                         dataset=entities.Dataset(",
          "3067:                             name=\"name\", digest=\"a\" * 37, source_type=\"type\", source=\"source\"",
          "3068:                         ),",
          "3069:                     )",
          "3070:                 ],",
          "3071:             )",
          "3073:         # Test dataset source too large (limit is 65535)",
          "3074:         with pytest.raises(",
          "3075:             MlflowException, match=\"Dataset source exceeds the maximum length of 65535\"",
          "3076:         ):",
          "3077:             self.store.log_inputs(",
          "3078:                 run.info.run_id,",
          "3079:                 [",
          "3080:                     entities.DatasetInput(",
          "3081:                         tags=tags,",
          "3082:                         dataset=entities.Dataset(",
          "3083:                             name=\"name\", digest=\"digest\", source_type=\"type\", source=\"a\" * 65536",
          "3084:                         ),",
          "3085:                     )",
          "3086:                 ],",
          "3087:             )",
          "3089:         # Test dataset schema too large (limit is 65535)",
          "3090:         with pytest.raises(",
          "3091:             MlflowException, match=\"Dataset schema exceeds the maximum length of 65535\"",
          "3092:         ):",
          "3093:             self.store.log_inputs(",
          "3094:                 run.info.run_id,",
          "3095:                 [",
          "3096:                     entities.DatasetInput(",
          "3097:                         tags=tags,",
          "3098:                         dataset=entities.Dataset(",
          "3099:                             name=\"name\",",
          "3100:                             digest=\"digest\",",
          "3101:                             source_type=\"type\",",
          "3102:                             source=\"source\",",
          "3103:                             schema=\"a\" * 65536,",
          "3104:                         ),",
          "3105:                     )",
          "3106:                 ],",
          "3107:             )",
          "3109:         # Test dataset profile too large (limit is 16777215)",
          "3110:         with pytest.raises(",
          "3111:             MlflowException, match=\"Dataset profile exceeds the maximum length of 16777215\"",
          "3112:         ):",
          "3113:             self.store.log_inputs(",
          "3114:                 run.info.run_id,",
          "3115:                 [",
          "3116:                     entities.DatasetInput(",
          "3117:                         tags=tags,",
          "3118:                         dataset=entities.Dataset(",
          "3119:                             name=\"name\",",
          "3120:                             digest=\"digest\",",
          "3121:                             source_type=\"type\",",
          "3122:                             source=\"source\",",
          "3123:                             profile=\"a\" * 16777216,",
          "3124:                         ),",
          "3125:                     )",
          "3126:                 ],",
          "3127:             )",
          "3129:     def test_log_inputs_with_duplicates_in_single_request(self):",
          "3130:         experiment_id = self._experiment_factory(\"test exp\")",
          "3131:         run1 = self._run_factory(config=self._get_run_configs(experiment_id, start_time=1))",
          "3133:         dataset1 = entities.Dataset(",
          "3134:             name=\"name1\",",
          "3135:             digest=\"digest1\",",
          "3136:             source_type=\"st1\",",
          "3137:             source=\"source1\",",
          "3138:             schema=\"schema1\",",
          "3139:             profile=\"profile1\",",
          "3140:         )",
          "3142:         tags1 = [",
          "3143:             entities.InputTag(key=\"key1\", value=\"value1\"),",
          "3144:             entities.InputTag(key=\"key2\", value=\"value2\"),",
          "3145:         ]",
          "3147:         inputs_run1 = [",
          "3148:             entities.DatasetInput(dataset1, tags1),",
          "3149:             entities.DatasetInput(dataset1, tags1),",
          "3150:         ]",
          "3152:         self.store.log_inputs(run1.info.run_id, inputs_run1)",
          "3153:         run1 = self.store.get_run(run1.info.run_id)",
          "3154:         assert_dataset_inputs_equal(",
          "3155:             run1.inputs.dataset_inputs, [entities.DatasetInput(dataset1, tags1)]",
          "3156:         )",
          "",
          "---------------"
        ],
        "tests/store/tracking/test_sqlalchemy_store_schema.py||tests/store/tracking/test_sqlalchemy_store_schema.py": [
          "File: tests/store/tracking/test_sqlalchemy_store_schema.py -> tests/store/tracking/test_sqlalchemy_store_schema.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:     # `diff` contains several `remove_index` operations because `Base.metadata` does not contain",
          "127:     # index metadata but `mc` does. Note this doesn't mean the MLflow database is missing indexes",
          "128:     # as tested in `test_create_index_on_run_uuid`.",
          "130:     assert len(diff) == 0",
          "",
          "[Removed Lines]",
          "129:     diff = [d for d in diff if d[0] != \"remove_index\"]",
          "",
          "[Added Lines]",
          "129:     diff = [d for d in diff if (d[0] not in [\"remove_index\", \"add_index\", \"add_fk\"])]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:             \"index_tags_run_uuid\",",
          "145:         }",
          "146:         assert run_uuid_index_names.issubset(all_index_names)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149: def test_index_for_dataset_tables(tmpdir, db_url):",
          "150:     # Test for mlflow/store/db_migrations/versions/7f2a7d5fae7d_add_datasets_inputs_input_tags_tables.py # pylint: disable=line-too-long",
          "151:     SqlAlchemyStore(db_url, tmpdir.join(\"ARTIFACTS\").strpath)",
          "152:     with sqlite3.connect(db_url[len(\"sqlite:///\") :]) as conn:",
          "153:         cursor = conn.cursor()",
          "154:         cursor.execute(\"SELECT name FROM sqlite_master WHERE type = 'index'\")",
          "155:         all_index_names = [r[0] for r in cursor.fetchall()]",
          "156:         new_index_names = {",
          "157:             \"index_datasets_experiment_id_dataset_source_type\",",
          "158:             \"index_inputs_input_uuid\",",
          "159:             \"index_inputs_destination_type_destination_id_source_type\",",
          "160:         }",
          "161:         assert new_index_names.issubset(all_index_names)",
          "",
          "---------------"
        ],
        "tests/tensorflow/test_tensorflow2_autolog.py||tests/tensorflow/test_tensorflow2_autolog.py": [
          "File: tests/tensorflow/test_tensorflow2_autolog.py -> tests/tensorflow/test_tensorflow2_autolog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: import pytest",
          "15: import tensorflow as tf",
          "16: from packaging.version import Version",
          "17: from tensorflow.keras import layers",
          "18: import yaml",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: from mlflow.types.utils import _infer_schema",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:     return fmnist_train_ds",
          "106: def _create_fashion_mnist_model():",
          "107:     model = tf.keras.Sequential([tf.keras.layers.Flatten(), tf.keras.layers.Dense(10)])",
          "108:     model.compile(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107: @pytest.fixture",
          "108: def fashion_mnist_tf_dataset_eval():",
          "109:     _, eval_dataset = tf.keras.datasets.fashion_mnist.load_data()",
          "110:     images, labels = eval_dataset",
          "111:     images = images / 255.0",
          "112:     labels = labels.astype(np.int32)",
          "113:     fmnist_train_ds = tf.data.Dataset.from_tensor_slices((images, labels))",
          "114:     fmnist_train_ds = fmnist_train_ds.shuffle(5000).batch(32)",
          "115:     return fmnist_train_ds",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "191:     assert (\"model\" in artifacts) == log_models",
          "194: def test_tf_keras_autolog_persists_manually_created_run(random_train_data, random_one_hot_labels):",
          "195:     mlflow.tensorflow.autolog()",
          "196:     with mlflow.start_run() as run:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206: @pytest.mark.parametrize(\"log_datasets\", [True, False])",
          "207: def test_tf_keras_autolog_log_datasets_configuration_with_numpy(",
          "208:     random_train_data, random_one_hot_labels, log_datasets",
          "209: ):",
          "210:     mlflow.tensorflow.autolog(log_datasets=log_datasets)",
          "212:     data = random_train_data",
          "213:     labels = random_one_hot_labels",
          "215:     model = create_tf_keras_model()",
          "217:     model.fit(data, labels, epochs=10)",
          "219:     client = MlflowClient()",
          "220:     dataset_inputs = client.get_run(mlflow.last_active_run().info.run_id).inputs.dataset_inputs",
          "221:     if log_datasets:",
          "222:         assert len(dataset_inputs) == 1",
          "223:         feature_schema = _infer_schema(data)",
          "224:         target_schema = _infer_schema(labels)",
          "225:         assert dataset_inputs[0].dataset.schema == json.dumps(",
          "226:             {",
          "227:                 \"mlflow_tensorspec\": {",
          "228:                     \"features\": feature_schema.to_json(),",
          "229:                     \"targets\": target_schema.to_json(),",
          "230:                 }",
          "231:             }",
          "232:         )",
          "233:     else:",
          "234:         assert len(dataset_inputs) == 0",
          "237: @pytest.mark.parametrize(\"log_datasets\", [True, False])",
          "238: def test_tf_keras_autolog_log_datasets_configuration_with_tensor(",
          "239:     random_train_data, random_one_hot_labels, log_datasets",
          "240: ):",
          "241:     mlflow.tensorflow.autolog(log_datasets=log_datasets)",
          "243:     data_as_tensor = tf.convert_to_tensor(random_train_data)",
          "244:     labels_as_tensor = tf.convert_to_tensor(random_one_hot_labels)",
          "246:     model = create_tf_keras_model()",
          "248:     model.fit(data_as_tensor, labels_as_tensor, epochs=10)",
          "250:     client = MlflowClient()",
          "251:     dataset_inputs = client.get_run(mlflow.last_active_run().info.run_id).inputs.dataset_inputs",
          "252:     if log_datasets:",
          "253:         assert len(dataset_inputs) == 1",
          "254:         feature_schema = _infer_schema(data_as_tensor.numpy())",
          "255:         target_schema = _infer_schema(labels_as_tensor.numpy())",
          "256:         assert dataset_inputs[0].dataset.schema == json.dumps(",
          "257:             {",
          "258:                 \"mlflow_tensorspec\": {",
          "259:                     \"features\": feature_schema.to_json(),",
          "260:                     \"targets\": target_schema.to_json(),",
          "261:                 }",
          "262:             }",
          "263:         )",
          "264:     else:",
          "265:         assert len(dataset_inputs) == 0",
          "268: @pytest.mark.parametrize(\"log_datasets\", [True, False])",
          "269: def test_tf_keras_autolog_log_datasets_configuration_with_tf_dataset(",
          "270:     fashion_mnist_tf_dataset, log_datasets",
          "271: ):",
          "272:     mlflow.tensorflow.autolog(log_datasets=log_datasets)",
          "273:     fashion_mnist_model = _create_fashion_mnist_model()",
          "274:     fashion_mnist_model.fit(fashion_mnist_tf_dataset)",
          "276:     client = MlflowClient()",
          "277:     dataset_inputs = client.get_run(mlflow.last_active_run().info.run_id).inputs.dataset_inputs",
          "278:     if log_datasets:",
          "279:         assert len(dataset_inputs) == 1",
          "280:         numpy_data = next(fashion_mnist_tf_dataset.as_numpy_iterator())",
          "281:         assert dataset_inputs[0].dataset.schema == json.dumps(",
          "282:             {",
          "283:                 \"mlflow_tensorspec\": {",
          "284:                     \"features\": _infer_schema(",
          "285:                         {str(i): data_element for i, data_element in enumerate(numpy_data)}",
          "286:                     ).to_json(),",
          "287:                     \"targets\": None,",
          "288:                 }",
          "289:             }",
          "290:         )",
          "292:     else:",
          "293:         assert len(dataset_inputs) == 0",
          "296: def test_tf_keras_autolog_log_datasets_with_validation_data(",
          "297:     fashion_mnist_tf_dataset, fashion_mnist_tf_dataset_eval",
          "298: ):",
          "299:     mlflow.tensorflow.autolog(log_datasets=True)",
          "300:     fashion_mnist_model = _create_fashion_mnist_model()",
          "301:     fashion_mnist_model.fit(fashion_mnist_tf_dataset, validation_data=fashion_mnist_tf_dataset_eval)",
          "303:     client = MlflowClient()",
          "304:     dataset_inputs = client.get_run(mlflow.last_active_run().info.run_id).inputs.dataset_inputs",
          "305:     assert len(dataset_inputs) == 2",
          "306:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "307:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "310: def test_tf_keras_autolog_log_datasets_with_validation_data_as_numpy_tuple(",
          "311:     fashion_mnist_tf_dataset, fashion_mnist_tf_dataset_eval",
          "312: ):",
          "313:     mlflow.tensorflow.autolog(log_datasets=True)",
          "314:     fashion_mnist_model = _create_fashion_mnist_model()",
          "315:     X_eval, y_eval = next(fashion_mnist_tf_dataset_eval.as_numpy_iterator())",
          "316:     fashion_mnist_model.fit(fashion_mnist_tf_dataset, validation_data=(X_eval, y_eval))",
          "318:     client = MlflowClient()",
          "319:     dataset_inputs = client.get_run(mlflow.last_active_run().info.run_id).inputs.dataset_inputs",
          "320:     assert len(dataset_inputs) == 2",
          "321:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "322:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "325: def test_tf_keras_autolog_log_datasets_with_validation_data_as_tf_tuple(",
          "326:     fashion_mnist_tf_dataset, fashion_mnist_tf_dataset_eval",
          "327: ):",
          "328:     mlflow.tensorflow.autolog(log_datasets=True)",
          "329:     fashion_mnist_model = _create_fashion_mnist_model()",
          "330:     # convert tensorflow dataset into tensors",
          "331:     X_eval, y_eval = next(fashion_mnist_tf_dataset_eval.as_numpy_iterator())",
          "332:     X_eval_tensor = tf.convert_to_tensor(X_eval)",
          "333:     y_eval_tensor = tf.convert_to_tensor(y_eval)",
          "334:     fashion_mnist_model.fit(",
          "335:         fashion_mnist_tf_dataset, validation_data=(X_eval_tensor, y_eval_tensor)",
          "336:     )",
          "338:     client = MlflowClient()",
          "339:     dataset_inputs = client.get_run(mlflow.last_active_run().info.run_id).inputs.dataset_inputs",
          "340:     assert len(dataset_inputs) == 2",
          "341:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "342:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "",
          "---------------"
        ],
        "tests/tracking/fluent/test_fluent.py||tests/tracking/fluent/test_fluent.py": [
          "File: tests/tracking/fluent/test_fluent.py -> tests/tracking/fluent/test_fluent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: )",
          "8: from mlflow.store.tracking import SEARCH_MAX_RESULTS_DEFAULT",
          "10: import os",
          "11: import random",
          "12: import uuid",
          "13: import inspect",
          "15: import pytest",
          "16: from unittest import mock",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import json",
          "15: import pandas as pd",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19: from mlflow import MlflowClient",
          "20: import mlflow.tracking.context.registry",
          "21: import mlflow.tracking.fluent",
          "22: from mlflow.entities import (",
          "23:     LifecycleStage,",
          "24:     Metric,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: from mlflow.data.pandas_dataset import from_pandas",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "966:         data_subset = {k: data[k] for k in keys if k in keys}",
          "967:         assert result_data == data_subset",
          "968:     elif output_format == \"pandas\":",
          "971:         expected_df = pd.DataFrame(data)",
          "972:         expected_df[\"start_time\"] = pd.to_datetime(expected_df[\"start_time\"], unit=\"ms\", utc=True)",
          "973:         expected_df[\"end_time\"] = pd.to_datetime(expected_df[\"end_time\"], unit=\"ms\", utc=True)",
          "",
          "[Removed Lines]",
          "969:         import pandas as pd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1255:         assert str(exact_expected_tags[tag_key]) == tag_value",
          "1258: def test_get_parent_run():",
          "1259:     with mlflow.start_run() as parent:",
          "1260:         mlflow.log_param(\"a\", 1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1259: def test_log_input(tmp_path):",
          "1260:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "1261:     path = tmp_path / \"temp.csv\"",
          "1262:     df.to_csv(path)",
          "1263:     dataset = from_pandas(df, source=path)",
          "1264:     with start_run() as run:",
          "1265:         mlflow.log_input(dataset, \"train\", {\"foo\": \"baz\"})",
          "1266:     dataset_inputs = MlflowClient().get_run(run.info.run_id).inputs.dataset_inputs",
          "1268:     assert len(dataset_inputs) == 1",
          "1269:     assert dataset_inputs[0].dataset.name == \"dataset\"",
          "1270:     assert dataset_inputs[0].dataset.digest == \"f0f3e026\"",
          "1271:     assert dataset_inputs[0].dataset.source_type == \"local\"",
          "1272:     assert json.loads(dataset_inputs[0].dataset.source) == {\"uri\": str(path)}",
          "1273:     assert json.loads(dataset_inputs[0].dataset.schema) == {",
          "1274:         \"mlflow_colspec\": [",
          "1275:             {\"name\": \"a\", \"type\": \"long\"},",
          "1276:             {\"name\": \"b\", \"type\": \"long\"},",
          "1277:             {\"name\": \"c\", \"type\": \"long\"},",
          "1278:         ]",
          "1279:     }",
          "1280:     assert json.loads(dataset_inputs[0].dataset.profile) == {\"num_rows\": 2, \"num_elements\": 6}",
          "1282:     assert len(dataset_inputs[0].tags) == 2",
          "1283:     assert dataset_inputs[0].tags[0].key == \"foo\"",
          "1284:     assert dataset_inputs[0].tags[0].value == \"baz\"",
          "1285:     assert dataset_inputs[0].tags[1].key == mlflow_tags.MLFLOW_DATASET_CONTEXT",
          "1286:     assert dataset_inputs[0].tags[1].value == \"train\"",
          "1288:     # ensure log_input also works without tags",
          "1289:     with start_run() as run:",
          "1290:         mlflow.log_input(dataset, \"train\")",
          "1291:     dataset_inputs = MlflowClient().get_run(run.info.run_id).inputs.dataset_inputs",
          "1293:     assert len(dataset_inputs) == 1",
          "1294:     assert dataset_inputs[0].dataset.name == \"dataset\"",
          "1295:     assert dataset_inputs[0].dataset.digest == \"f0f3e026\"",
          "1296:     assert dataset_inputs[0].dataset.source_type == \"local\"",
          "1297:     assert json.loads(dataset_inputs[0].dataset.source) == {\"uri\": str(path)}",
          "1298:     assert json.loads(dataset_inputs[0].dataset.schema) == {",
          "1299:         \"mlflow_colspec\": [",
          "1300:             {\"name\": \"a\", \"type\": \"long\"},",
          "1301:             {\"name\": \"b\", \"type\": \"long\"},",
          "1302:             {\"name\": \"c\", \"type\": \"long\"},",
          "1303:         ]",
          "1304:     }",
          "1305:     assert json.loads(dataset_inputs[0].dataset.profile) == {\"num_rows\": 2, \"num_elements\": 6}",
          "1307:     assert len(dataset_inputs[0].tags) == 1",
          "1308:     assert dataset_inputs[0].tags[0].key == mlflow_tags.MLFLOW_DATASET_CONTEXT",
          "1309:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "",
          "---------------"
        ],
        "tests/tracking/fluent/test_fluent_autolog.py||tests/tracking/fluent/test_fluent_autolog.py": [
          "File: tests/tracking/fluent/test_fluent_autolog.py -> tests/tracking/fluent/test_fluent_autolog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:     integrations_with_additional_config = [xgboost, lightgbm, sklearn]",
          "133:     args_to_test = {",
          "134:         \"log_models\": False,",
          "135:         \"disable\": True,",
          "136:         \"exclusive\": True,",
          "137:         \"disable_for_unsupported_versions\": True,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:         \"log_datasets\": False,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "267: @pytest.mark.parametrize(\"exclusive\", [False, True])",
          "268: @pytest.mark.parametrize(\"disable_for_unsupported_versions\", [False, True])",
          "269: @pytest.mark.parametrize(\"log_models\", [False, True])",
          "270: @pytest.mark.parametrize(\"log_input_examples\", [False, True])",
          "271: @pytest.mark.parametrize(\"log_model_signatures\", [False, True])",
          "272: def test_autolog_obeys_silent_mode(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271: @pytest.mark.parametrize(\"log_datasets\", [False, True])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "275:     exclusive,",
          "276:     disable_for_unsupported_versions,",
          "277:     log_models,",
          "278:     log_input_examples,",
          "279:     log_model_signatures,",
          "280: ):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:     log_datasets,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "287:         exclusive=exclusive,",
          "288:         disable_for_unsupported_versions=disable_for_unsupported_versions,",
          "289:         log_models=log_models,",
          "290:         log_input_examples=log_input_examples,",
          "291:         log_model_signatures=log_model_signatures,",
          "292:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "293:         log_datasets=log_datasets,",
          "",
          "---------------"
        ],
        "tests/tracking/test_rest_tracking.py||tests/tracking/test_rest_tracking.py": [
          "File: tests/tracking/test_rest_tracking.py -> tests/tracking/test_rest_tracking.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: import time",
          "15: import urllib.parse",
          "16: import requests",
          "17: import math",
          "18: from unittest import mock",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: import pandas as pd",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: from mlflow import MlflowClient",
          "23: from mlflow.artifacts import download_artifacts",
          "24: import mlflow.experiments",
          "25: from mlflow.exceptions import MlflowException",
          "27: from mlflow.models import Model",
          "28: import mlflow.pyfunc",
          "29: from mlflow.server.handlers import validate_path_is_safe",
          "",
          "[Removed Lines]",
          "26: from mlflow.entities import Metric, Param, RunTag, ViewType",
          "",
          "[Added Lines]",
          "25: from mlflow.data.pandas_dataset import from_pandas",
          "26: from mlflow.utils import mlflow_tags",
          "29: from mlflow.entities import (",
          "30:     Metric,",
          "31:     Param,",
          "32:     RunTag,",
          "33:     ViewType,",
          "34:     DatasetInput,",
          "35:     Dataset,",
          "36:     InputTag,",
          "37:     RunInputs,",
          "38: )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "40: from mlflow.utils.file_utils import path_to_local_file_uri",
          "41: from mlflow.utils.time_utils import get_current_time_millis",
          "42: from mlflow.utils.os import is_windows",
          "44: from tests.integration.utils import invoke_cli_runner",
          "45: from tests.tracking.integration_test_utils import (",
          "46:     _terminate_server,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55: from mlflow.utils.proto_json_utils import message_to_json",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1342:         mlflow.pyfunc.load_model(\"models:/rmn/1\")",
          "1345: def test_update_run_name_without_changing_status(mlflow_client):",
          "1346:     experiment_id = mlflow_client.create_experiment(\"update run name\")",
          "1347:     created_run = mlflow_client.create_run(experiment_id)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1357: def test_log_input(mlflow_client, tmp_path):",
          "1358:     df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])",
          "1359:     path = tmp_path / \"temp.csv\"",
          "1360:     df.to_csv(path)",
          "1361:     dataset = from_pandas(df, source=path)",
          "1363:     mlflow.set_tracking_uri(mlflow_client.tracking_uri)",
          "1365:     with mlflow.start_run() as run:",
          "1366:         mlflow.log_input(dataset, \"train\", {\"foo\": \"baz\"})",
          "1368:     dataset_inputs = mlflow_client.get_run(run.info.run_id).inputs.dataset_inputs",
          "1370:     assert len(dataset_inputs) == 1",
          "1371:     assert dataset_inputs[0].dataset.name == \"dataset\"",
          "1372:     assert dataset_inputs[0].dataset.digest == \"f0f3e026\"",
          "1373:     assert dataset_inputs[0].dataset.source_type == \"local\"",
          "1374:     assert json.loads(dataset_inputs[0].dataset.source) == {\"uri\": str(path)}",
          "1375:     assert json.loads(dataset_inputs[0].dataset.schema) == {",
          "1376:         \"mlflow_colspec\": [",
          "1377:             {\"name\": \"a\", \"type\": \"long\"},",
          "1378:             {\"name\": \"b\", \"type\": \"long\"},",
          "1379:             {\"name\": \"c\", \"type\": \"long\"},",
          "1380:         ]",
          "1381:     }",
          "1382:     assert json.loads(dataset_inputs[0].dataset.profile) == {\"num_rows\": 2, \"num_elements\": 6}",
          "1384:     assert len(dataset_inputs[0].tags) == 2",
          "1385:     assert dataset_inputs[0].tags[0].key == \"foo\"",
          "1386:     assert dataset_inputs[0].tags[0].value == \"baz\"",
          "1387:     assert dataset_inputs[0].tags[1].key == mlflow_tags.MLFLOW_DATASET_CONTEXT",
          "1388:     assert dataset_inputs[0].tags[1].value == \"train\"",
          "1391: def test_log_inputs(mlflow_client):",
          "1392:     experiment_id = mlflow_client.create_experiment(\"log inputs test\")",
          "1393:     created_run = mlflow_client.create_run(experiment_id)",
          "1394:     run_id = created_run.info.run_id",
          "1396:     dataset1 = Dataset(",
          "1397:         name=\"name1\",",
          "1398:         digest=\"digest1\",",
          "1399:         source_type=\"source_type1\",",
          "1400:         source=\"source1\",",
          "1401:     )",
          "1402:     dataset_inputs1 = [DatasetInput(dataset=dataset1, tags=[InputTag(key=\"tag1\", value=\"value1\")])]",
          "1404:     mlflow_client.log_inputs(run_id, dataset_inputs1)",
          "1405:     run = mlflow_client.get_run(run_id)",
          "1406:     assert len(run.inputs.dataset_inputs) == 1",
          "1408:     assert isinstance(run.inputs, RunInputs)",
          "1409:     assert isinstance(run.inputs.dataset_inputs[0], DatasetInput)",
          "1410:     assert isinstance(run.inputs.dataset_inputs[0].dataset, Dataset)",
          "1411:     assert run.inputs.dataset_inputs[0].dataset.name == \"name1\"",
          "1412:     assert run.inputs.dataset_inputs[0].dataset.digest == \"digest1\"",
          "1413:     assert run.inputs.dataset_inputs[0].dataset.source_type == \"source_type1\"",
          "1414:     assert run.inputs.dataset_inputs[0].dataset.source == \"source1\"",
          "1415:     assert len(run.inputs.dataset_inputs[0].tags) == 1",
          "1416:     assert run.inputs.dataset_inputs[0].tags[0].key == \"tag1\"",
          "1417:     assert run.inputs.dataset_inputs[0].tags[0].value == \"value1\"",
          "1420: def test_log_inputs_validation(mlflow_client):",
          "1421:     experiment_id = mlflow_client.create_experiment(\"log inputs validation\")",
          "1422:     created_run = mlflow_client.create_run(experiment_id)",
          "1423:     run_id = created_run.info.run_id",
          "1425:     def assert_bad_request(payload, expected_error_message):",
          "1426:         response = _send_rest_tracking_post_request(",
          "1427:             mlflow_client.tracking_uri,",
          "1428:             \"/api/2.0/mlflow/runs/log-inputs\",",
          "1429:             payload,",
          "1430:         )",
          "1431:         assert response.status_code == 400",
          "1432:         assert expected_error_message in response.text",
          "1434:     dataset = Dataset(",
          "1435:         name=\"name1\",",
          "1436:         digest=\"digest1\",",
          "1437:         source_type=\"source_type1\",",
          "1438:         source=\"source1\",",
          "1439:     )",
          "1440:     tags = [InputTag(key=\"tag1\", value=\"value1\")]",
          "1441:     dataset_inputs = [message_to_json(DatasetInput(dataset=dataset, tags=tags).to_proto())]",
          "1442:     assert_bad_request(",
          "1443:         {",
          "1444:             \"datasets\": dataset_inputs,",
          "1445:         },",
          "1446:         \"Missing value for required parameter 'run_id'\",",
          "1447:     )",
          "1448:     assert_bad_request(",
          "1449:         {",
          "1450:             \"run_id\": run_id,",
          "1451:         },",
          "1452:         \"Missing value for required parameter 'datasets'\",",
          "1453:     )",
          "",
          "---------------"
        ],
        "tests/xgboost/test_xgboost_autolog.py||tests/xgboost/test_xgboost_autolog.py": [
          "File: tests/xgboost/test_xgboost_autolog.py -> tests/xgboost/test_xgboost_autolog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from mlflow.models.utils import _read_example",
          "20: from mlflow import MlflowClient",
          "21: from mlflow.utils.autologging_utils import BatchMetricsLogger, picklable_exception_safe_function",
          "23: mpl.use(\"Agg\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: from mlflow.types.utils import _infer_schema",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "719:     client = MlflowClient()",
          "720:     artifacts = [f.path for f in client.list_artifacts(run_id, \"model\")]",
          "721:     assert f\"model/model.{model_format}\" in artifacts",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "725: @pytest.mark.skipif(",
          "726:     Version(xgb.__version__) < Version(\"1.7\"),",
          "727:     reason=(\"In XGBoost < 1.7, you cannot get the underlying numpy data from DMatrix. \"),",
          "728: )",
          "729: @pytest.mark.parametrize(\"log_datasets\", [True, False])",
          "730: def test_xgb_log_datasets(bst_params, dtrain, log_datasets):",
          "731:     with mlflow.start_run() as run:",
          "732:         mlflow.xgboost.autolog(log_datasets=log_datasets)",
          "733:         xgb.train(bst_params, dtrain)",
          "735:     run_id = run.info.run_id",
          "736:     client = MlflowClient()",
          "737:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "738:     if log_datasets:",
          "739:         assert len(dataset_inputs) == 1",
          "740:         feature_schema = _infer_schema(dtrain.get_data().toarray())",
          "741:         assert dataset_inputs[0].dataset.schema == json.dumps(",
          "742:             {",
          "743:                 \"mlflow_tensorspec\": {",
          "744:                     \"features\": feature_schema.to_json(),",
          "745:                     \"targets\": None,",
          "746:                 }",
          "747:             }",
          "748:         )",
          "749:     else:",
          "750:         assert len(dataset_inputs) == 0",
          "753: @pytest.mark.skipif(",
          "754:     Version(xgb.__version__) < Version(\"1.7\"),",
          "755:     reason=(\"In XGBoost < 1.7, you cannot get the underlying numpy data from DMatrix. \"),",
          "756: )",
          "757: def test_xgb_log_datasets_with_evals(bst_params, dtrain):",
          "758:     iris = datasets.load_iris()",
          "759:     X = pd.DataFrame(iris.data[:, :2] * 2, columns=iris.feature_names[:2])",
          "760:     y = iris.target",
          "761:     deval = xgb.DMatrix(X, y)",
          "762:     with mlflow.start_run() as run:",
          "763:         mlflow.xgboost.autolog(log_datasets=True)",
          "764:         xgb.train(bst_params, dtrain, evals=[(deval, \"eval_dataset\")])",
          "766:     run_id = run.info.run_id",
          "767:     client = MlflowClient()",
          "768:     dataset_inputs = client.get_run(run_id).inputs.dataset_inputs",
          "769:     assert len(dataset_inputs) == 2",
          "770:     assert dataset_inputs[0].tags[0].value == \"train\"",
          "771:     dtrain_feature_schema = _infer_schema(dtrain.get_data().toarray())",
          "772:     assert dataset_inputs[0].dataset.schema == json.dumps(",
          "773:         {",
          "774:             \"mlflow_tensorspec\": {",
          "775:                 \"features\": dtrain_feature_schema.to_json(),",
          "776:                 \"targets\": None,",
          "777:             }",
          "778:         }",
          "779:     )",
          "780:     assert dataset_inputs[1].tags[0].value == \"eval\"",
          "781:     deval_feature_schema = _infer_schema(deval.get_data().toarray())",
          "782:     assert dataset_inputs[0].dataset.schema == json.dumps(",
          "783:         {",
          "784:             \"mlflow_tensorspec\": {",
          "785:                 \"features\": deval_feature_schema.to_json(),",
          "786:                 \"targets\": None,",
          "787:             }",
          "788:         }",
          "789:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4210d25c5ec8442c750985ea60fc22fd13160506",
      "candidate_info": {
        "commit_hash": "4210d25c5ec8442c750985ea60fc22fd13160506",
        "repo": "mlflow/mlflow",
        "commit_url": "https://github.com/mlflow/mlflow/commit/4210d25c5ec8442c750985ea60fc22fd13160506",
        "files": [
          "mlflow/data/http_dataset_source.py"
        ],
        "message": "Enabled stream in HTTPDatasetSource.load (#8589)\n\nSigned-off-by: harupy <hkawamura0130@gmail.com>",
        "before_after_code_files": [
          "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py"
          ],
          "candidate": [
            "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py"
          ]
        }
      },
      "candidate_diff": {
        "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py": [
          "File: mlflow/data/http_dataset_source.py -> mlflow/data/http_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:         resp = cloud_storage_http_request(",
          "51:             method=\"GET\",",
          "52:             url=self.url,",
          "53:         )",
          "54:         augmented_raise_for_status(resp)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:             stream=True,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d3c146b0178a401506b0136c830674e8edec80f",
      "candidate_info": {
        "commit_hash": "3d3c146b0178a401506b0136c830674e8edec80f",
        "repo": "mlflow/mlflow",
        "commit_url": "https://github.com/mlflow/mlflow/commit/3d3c146b0178a401506b0136c830674e8edec80f",
        "files": [
          "mlflow/data/http_dataset_source.py",
          "tests/data/test_http_dataset_source.py"
        ],
        "message": "Fix for windows traversal attack (#10647)\n\nSigned-off-by: Ben Wilson <benjamin.wilson@databricks.com>\nSigned-off-by: Ben Wilson <39283302+BenWilson2@users.noreply.github.com>\nCo-authored-by: Harutaka Kawamura <hkawamura0130@gmail.com>",
        "before_after_code_files": [
          "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py",
          "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py",
            "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py"
          ],
          "candidate": [
            "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py",
            "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py"
          ]
        }
      },
      "candidate_diff": {
        "mlflow/data/http_dataset_source.py||mlflow/data/http_dataset_source.py": [
          "File: mlflow/data/http_dataset_source.py -> mlflow/data/http_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import os",
          "3: import re",
          "4: from typing import Any, Dict",
          "5: from urllib.parse import urlparse",
          "",
          "[Removed Lines]",
          "2: import posixpath",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     def _get_source_type() -> str:",
          "42:         return \"http\"",
          "44:     def load(self, dst_path=None) -> str:",
          "45:         \"\"\"",
          "46:         Downloads the dataset source to the local filesystem.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:     def _extract_filename(self, response) -> str:",
          "44:         \"\"\"",
          "45:         Extracts a filename from the Content-Disposition header or the URL's path.",
          "46:         \"\"\"",
          "47:         if content_disposition := response.headers.get(\"Content-Disposition\"):",
          "48:             for match in re.finditer(r\"filename=(.+)\", content_disposition):",
          "49:                 filename = match[1].strip(\"'\\\"\")",
          "50:                 if _is_path(filename):",
          "51:                     raise MlflowException.invalid_parameter_value(",
          "52:                         f\"Invalid filename in Content-Disposition header: {filename}. \"",
          "53:                         \"It must be a file name, not a path.\"",
          "54:                     )",
          "55:                 return filename",
          "57:         # Extract basename from URL if no valid filename in Content-Disposition",
          "58:         return os.path.basename(urlparse(self.url).path)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58:         )",
          "59:         augmented_raise_for_status(resp)",
          "76:             basename = \"dataset_source\"",
          "78:         if dst_path is None:",
          "",
          "[Removed Lines]",
          "61:         path = urlparse(self.url).path",
          "62:         content_disposition = resp.headers.get(\"Content-Disposition\")",
          "63:         if content_disposition is not None and (",
          "64:             file_name := next(re.finditer(r\"filename=(.+)\", content_disposition), None)",
          "65:         ):",
          "66:             # NB: If the filename is quoted, unquote it",
          "67:             basename = file_name[1].strip(\"'\\\"\")",
          "68:             if _is_path(basename):",
          "69:                 raise MlflowException.invalid_parameter_value(",
          "70:                     f\"Invalid filename in Content-Disposition header: {basename}. \"",
          "71:                     \"It must be a file name, not a path.\"",
          "72:                 )",
          "73:         elif path is not None and len(posixpath.basename(path)) > 0:",
          "74:             basename = posixpath.basename(path)",
          "75:         else:",
          "",
          "[Added Lines]",
          "77:         basename = self._extract_filename(resp)",
          "79:         if not basename:",
          "",
          "---------------"
        ],
        "tests/data/test_http_dataset_source.py||tests/data/test_http_dataset_source.py": [
          "File: tests/data/test_http_dataset_source.py -> tests/data/test_http_dataset_source.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: from mlflow.data.dataset_source_registry import get_dataset_source_from_json, resolve_dataset_source",
          "9: from mlflow.data.http_dataset_source import HTTPDatasetSource",
          "10: from mlflow.exceptions import MlflowException",
          "11: from mlflow.utils.rest_utils import cloud_storage_http_request",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: from mlflow.utils.os import is_windows",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:         with pytest.raises(MlflowException, match=\"Invalid filename in Content-Disposition header\"):",
          "157:             source.load()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161: @pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")",
          "162: @pytest.mark.parametrize(",
          "163:     \"filename\",",
          "164:     [",
          "165:         r\"..\\..\\poc.txt\",",
          "166:         r\"Users\\User\\poc.txt\",",
          "167:     ],",
          "168: )",
          "169: def test_source_load_with_content_disposition_header_invalid_filename_windows(filename):",
          "170:     def download_with_mock_content_disposition_headers(*args, **kwargs):",
          "171:         response = cloud_storage_http_request(*args, **kwargs)",
          "172:         response.headers = {\"Content-Disposition\": f\"attachment; filename={filename}\"}",
          "173:         return response",
          "175:     with mock.patch(",
          "176:         \"mlflow.data.http_dataset_source.cloud_storage_http_request\",",
          "177:         side_effect=download_with_mock_content_disposition_headers,",
          "178:     ):",
          "179:         source = HTTPDatasetSource(",
          "180:             \"https://raw.githubusercontent.com/mlflow/mlflow/master/tests/datasets/winequality-red.csv\"",
          "181:         )",
          "183:         # Expect an MlflowException for invalid filenames",
          "184:         with pytest.raises(MlflowException, match=\"Invalid filename in Content-Disposition header\"):",
          "185:             source.load()",
          "",
          "---------------"
        ]
      }
    }
  ]
}