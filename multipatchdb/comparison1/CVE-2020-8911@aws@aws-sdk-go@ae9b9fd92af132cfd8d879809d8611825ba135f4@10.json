{
  "cve_id": "CVE-2020-8911",
  "cve_desc": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0f252d3291c618ed1f6bfcda2f869a4cf695e49b",
      "candidate_info": {
        "commit_hash": "0f252d3291c618ed1f6bfcda2f869a4cf695e49b",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/0f252d3291c618ed1f6bfcda2f869a4cf695e49b",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/connect/2017-08-08/docs-2.json",
          "models/apis/elasticache/2015-02-02/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/connect/api.go",
          "service/connect/doc.go",
          "service/elasticache/api.go"
        ],
        "message": "Release v1.33.1 (2020-07-02) (#3407)\n\nRelease v1.33.1 (2020-07-02)\n===\n\n### Service Client Updates\n* `service/connect`: Updates service documentation\n* `service/elasticache`: Updates service documentation\n  * Documentation updates for elasticache",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/connect/api.go||service/connect/api.go",
          "service/connect/doc.go||service/connect/doc.go",
          "service/elasticache/api.go||service/elasticache/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:     \"ap-south-1\":     endpoint{},",
          "685:     \"ap-southeast-1\": endpoint{},",
          "686:     \"ap-southeast-2\": endpoint{},",
          "687:     \"eu-central-1\":   endpoint{},",
          "688:     \"eu-west-1\":      endpoint{},",
          "689:     \"eu-west-2\":      endpoint{},",
          "690:     \"us-east-1\":      endpoint{},",
          "691:     \"us-east-2\":      endpoint{},",
          "692:     \"us-west-2\":      endpoint{},",
          "693:    },",
          "694:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "687:     \"ca-central-1\":   endpoint{},",
          "689:     \"eu-north-1\":     endpoint{},",
          "692:     \"eu-west-3\":      endpoint{},",
          "693:     \"sa-east-1\":      endpoint{},",
          "696:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4280:   \"ram\": service{",
          "4282:    Endpoints: endpoints{",
          "4283:     \"ap-east-1\":      endpoint{},",
          "4284:     \"ap-northeast-1\": endpoint{},",
          "4285:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4288:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4289:     \"ca-central-1\":   endpoint{},",
          "4290:     \"eu-central-1\":   endpoint{},",
          "4291:     \"eu-north-1\":     endpoint{},",
          "4292:     \"eu-west-1\":      endpoint{},",
          "4293:     \"eu-west-2\":      endpoint{},",
          "4294:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4298:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.0\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.1\"",
          "",
          "---------------"
        ],
        "service/connect/api.go||service/connect/api.go": [
          "File: service/connect/api.go -> service/connect/api.go"
        ],
        "service/connect/doc.go||service/connect/doc.go": [
          "File: service/connect/doc.go -> service/connect/doc.go"
        ],
        "service/elasticache/api.go||service/elasticache/api.go": [
          "File: service/elasticache/api.go -> service/elasticache/api.go"
        ]
      }
    },
    {
      "candidate_hash": "3286d0e2d5de8dd89dcc1d0e3af76db0ba0f5d91",
      "candidate_info": {
        "commit_hash": "3286d0e2d5de8dd89dcc1d0e3af76db0ba0f5d91",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/3286d0e2d5de8dd89dcc1d0e3af76db0ba0f5d91",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/codebuild/2016-10-06/api-2.json",
          "models/apis/codebuild/2016-10-06/docs-2.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/s3/2006-03-01/api-2.json",
          "models/apis/s3/2006-03-01/docs-2.json",
          "models/apis/s3/2006-03-01/examples-1.json",
          "models/apis/synthetics/2017-10-11/api-2.json",
          "models/apis/synthetics/2017-10-11/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/codebuild/api.go",
          "service/ec2/api.go",
          "service/s3/api.go",
          "service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go",
          "service/synthetics/api.go"
        ],
        "message": "Release v1.31.3 (2020-05-21) (#3333)\n\nRelease v1.31.3 (2020-05-21)\n===\n\n### Service Client Updates\n* `service/codebuild`: Updates service API and documentation\n  * CodeBuild adds support for tagging with report groups\n* `service/ec2`: Updates service API and documentation\n  * From this release onwards ProvisionByoipCidr publicly supports IPv6. Updated ProvisionByoipCidr API to support tags for public IPv4 and IPv6 pools. Added NetworkBorderGroup to the DescribePublicIpv4Pools response.\n* `service/s3`: Updates service API, documentation, and examples\n  * Deprecates unusable input members bound to Content-MD5 header. Updates example and documentation.\n* `service/synthetics`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/codebuild/api.go||service/codebuild/api.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/s3/api.go||service/s3/api.go",
          "service/s3/examples_test.go||service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
          "service/synthetics/api.go||service/synthetics/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2131:     \"ca-central-1\":   endpoint{},",
          "2132:     \"eu-central-1\":   endpoint{},",
          "2133:     \"eu-north-1\":     endpoint{},",
          "2134:     \"eu-west-1\":      endpoint{},",
          "2135:     \"eu-west-2\":      endpoint{},",
          "2136:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2134:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2194:       Region: \"eu-north-1\",",
          "2195:      },",
          "2196:     },",
          "2197:     \"fips-eu-west-1\": endpoint{",
          "2198:      Hostname: \"elasticfilesystem-fips.eu-west-1.amazonaws.com\",",
          "2199:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2198:     \"fips-eu-south-1\": endpoint{",
          "2199:      Hostname: \"elasticfilesystem-fips.eu-south-1.amazonaws.com\",",
          "2200:      CredentialScope: credentialScope{",
          "2201:       Region: \"eu-south-1\",",
          "2202:      },",
          "2203:     },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3280:     \"ap-southeast-2\": endpoint{},",
          "3281:     \"ca-central-1\":   endpoint{},",
          "3282:     \"eu-central-1\":   endpoint{},",
          "3283:     \"eu-west-1\":      endpoint{},",
          "3284:     \"eu-west-2\":      endpoint{},",
          "3285:     \"sa-east-1\":      endpoint{},",
          "3286:     \"us-east-1\":      endpoint{},",
          "3287:     \"us-east-2\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3290:     \"eu-north-1\":     endpoint{},",
          "3293:     \"eu-west-3\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7301:   \"elasticloadbalancing\": service{",
          "7303:    Endpoints: endpoints{",
          "7304:     \"us-gov-east-1\": endpoint{},",
          "7305:     \"us-gov-west-1\": endpoint{",
          "7306:      Protocols: []string{\"http\", \"https\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7313:     \"fips-us-gov-east-1\": endpoint{",
          "7314:      Hostname: \"elasticloadbalancing-fips.us-gov-east-1.amazonaws.com\",",
          "7315:      CredentialScope: credentialScope{",
          "7316:       Region: \"us-gov-east-1\",",
          "7317:      },",
          "7318:     },",
          "7319:     \"fips-us-gov-west-1\": endpoint{",
          "7320:      Hostname: \"elasticloadbalancing-fips.us-gov-west-1.amazonaws.com\",",
          "7321:      CredentialScope: credentialScope{",
          "7322:       Region: \"us-gov-west-1\",",
          "7323:      },",
          "7324:     },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7447:    },",
          "7448:    Endpoints: endpoints{",
          "7449:     \"us-gov-west-1\": endpoint{},",
          "7450:    },",
          "7451:   },",
          "7452:   \"health\": service{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7471:     \"us-gov-west-1-fips\": endpoint{",
          "7472:      Hostname: \"guardduty.us-gov-west-1.amazonaws.com\",",
          "7473:      CredentialScope: credentialScope{",
          "7474:       Region: \"us-gov-west-1\",",
          "7475:      },",
          "7476:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7639:       Region: \"us-gov-west-1\",",
          "7640:      },",
          "7641:     },",
          "7642:    },",
          "7643:   },",
          "7644:   \"outposts\": service{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7669:     \"fips-aws-us-gov-global\": endpoint{",
          "7670:      Hostname: \"organizations.us-gov-west-1.amazonaws.com\",",
          "7671:      CredentialScope: credentialScope{",
          "7672:       Region: \"us-gov-west-1\",",
          "7673:      },",
          "7674:     },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7936:   \"sns\": service{",
          "7938:    Endpoints: endpoints{",
          "7940:     \"us-gov-west-1\": endpoint{",
          "7941:      Protocols: []string{\"http\", \"https\"},",
          "7942:     },",
          "7943:    },",
          "7944:   },",
          "",
          "[Removed Lines]",
          "7939:     \"us-gov-east-1\": endpoint{},",
          "",
          "[Added Lines]",
          "7972:     \"us-gov-east-1\": endpoint{",
          "7973:      Hostname: \"sns.us-gov-east-1.amazonaws.com\",",
          "7974:      CredentialScope: credentialScope{",
          "7975:       Region: \"us-gov-east-1\",",
          "7976:      },",
          "7977:     },",
          "7979:      Hostname:  \"sns.us-gov-west-1.amazonaws.com\",",
          "7981:      CredentialScope: credentialScope{",
          "7982:       Region: \"us-gov-west-1\",",
          "7983:      },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.31.2\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.31.3\"",
          "",
          "---------------"
        ],
        "service/codebuild/api.go||service/codebuild/api.go": [
          "File: service/codebuild/api.go -> service/codebuild/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4774:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4780:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4809:    invalidParams.AddNested(\"ExportConfig\", err.(request.ErrInvalidParams))",
          "4810:   }",
          "4811:  }",
          "4813:  if invalidParams.Len() > 0 {",
          "4814:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4818:  if s.Tags != nil {",
          "4819:   for i, v := range s.Tags {",
          "4820:    if v == nil {",
          "4821:     continue",
          "4822:    }",
          "4823:    if err := v.Validate(); err != nil {",
          "4824:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4825:    }",
          "4826:   }",
          "4827:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4828:  return s",
          "4829: }",
          "4832: func (s *CreateReportGroupInput) SetType(v string) *CreateReportGroupInput {",
          "4833:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4848: func (s *CreateReportGroupInput) SetTags(v []*Tag) *CreateReportGroupInput {",
          "4849:  s.Tags = v",
          "4850:  return s",
          "4851: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8739:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "8742:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "8743: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8767:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8782:  return s",
          "8783: }",
          "8786: func (s *ReportGroup) SetType(v string) *ReportGroup {",
          "8787:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8814: func (s *ReportGroup) SetTags(v []*Tag) *ReportGroup {",
          "8815:  s.Tags = v",
          "8816:  return s",
          "8817: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9706:  Key *string `locationName:\"key\" min:\"1\" type:\"string\"`",
          "9710: }",
          "",
          "[Removed Lines]",
          "9709:  Value *string `locationName:\"value\" min:\"1\" type:\"string\"`",
          "",
          "[Added Lines]",
          "9743:  Value *string `locationName:\"value\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "9725:  if s.Key != nil && len(*s.Key) < 1 {",
          "9726:   invalidParams.Add(request.NewErrParamMinLen(\"Key\", 1))",
          "9727:  }",
          "9732:  if invalidParams.Len() > 0 {",
          "9733:   return invalidParams",
          "",
          "[Removed Lines]",
          "9728:  if s.Value != nil && len(*s.Value) < 1 {",
          "9729:   invalidParams.Add(request.NewErrParamMinLen(\"Value\", 1))",
          "9730:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "10286:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "10287: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10323:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "10310:    invalidParams.AddNested(\"ExportConfig\", err.(request.ErrInvalidParams))",
          "10311:   }",
          "10312:  }",
          "10314:  if invalidParams.Len() > 0 {",
          "10315:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10350:  if s.Tags != nil {",
          "10351:   for i, v := range s.Tags {",
          "10352:    if v == nil {",
          "10353:     continue",
          "10354:    }",
          "10355:    if err := v.Validate(); err != nil {",
          "10356:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "10357:    }",
          "10358:   }",
          "10359:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10329:  return s",
          "10330: }",
          "10332: type UpdateReportGroupOutput struct {",
          "10333:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10380: func (s *UpdateReportGroupInput) SetTags(v []*Tag) *UpdateReportGroupInput {",
          "10381:  s.Tags = v",
          "10382:  return s",
          "10383: }",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "92451:  DryRun *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92455:  PoolTagSpecifications []*TagSpecification `locationName:\"PoolTagSpecification\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92509:  return s",
          "92510: }",
          "92513: func (s *ProvisionByoipCidrInput) SetPubliclyAdvertisable(v bool) *ProvisionByoipCidrInput {",
          "92514:  s.PubliclyAdvertisable = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92517: func (s *ProvisionByoipCidrInput) SetPoolTagSpecifications(v []*TagSpecification) *ProvisionByoipCidrInput {",
          "92518:  s.PoolTagSpecifications = v",
          "92519:  return s",
          "92520: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92618:  Description *string `locationName:\"description\" type:\"string\"`",
          "92621:  PoolAddressRanges []*PublicIpv4PoolRange `locationName:\"poolAddressRangeSet\" locationNameList:\"item\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92633:  NetworkBorderGroup *string `locationName:\"networkBorderGroup\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "92649:  return s",
          "92650: }",
          "92653: func (s *PublicIpv4Pool) SetPoolAddressRanges(v []*PublicIpv4PoolRange) *PublicIpv4Pool {",
          "92654:  s.PoolAddressRanges = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92668: func (s *PublicIpv4Pool) SetNetworkBorderGroup(v string) *PublicIpv4Pool {",
          "92669:  s.NetworkBorderGroup = &v",
          "92670:  return s",
          "92671: }",
          "",
          "---------------"
        ],
        "service/s3/api.go||service/s3/api.go": [
          "File: service/s3/api.go -> service/s3/api.go"
        ],
        "service/s3/examples_test.go||service/s3/examples_test.go": [
          "File: service/s3/examples_test.go -> service/s3/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "411:  fmt.Println(result)",
          "412: }",
          "417: func ExampleS3_DeleteObject_shared00() {",
          "418:  svc := s3.New(session.New())",
          "419:  input := &s3.DeleteObjectInput{",
          "422:  }",
          "424:  result, err := svc.DeleteObject(input)",
          "",
          "[Removed Lines]",
          "420:   Bucket: aws.String(\"ExampleBucket\"),",
          "421:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "420:   Bucket: aws.String(\"examplebucket\"),",
          "421:   Key:    aws.String(\"objectkey.jpg\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:  fmt.Println(result)",
          "440: }",
          "445: func ExampleS3_DeleteObject_shared01() {",
          "446:  svc := s3.New(session.New())",
          "447:  input := &s3.DeleteObjectInput{",
          "450:  }",
          "452:  result, err := svc.DeleteObject(input)",
          "",
          "[Removed Lines]",
          "448:   Bucket: aws.String(\"examplebucket\"),",
          "449:   Key:    aws.String(\"objectkey.jpg\"),",
          "",
          "[Added Lines]",
          "448:   Bucket: aws.String(\"ExampleBucket\"),",
          "449:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "539:   Delete: &s3.Delete{",
          "540:    Objects: []*s3.ObjectIdentifier{",
          "541:     {",
          "543:     },",
          "544:     {",
          "546:     },",
          "547:    },",
          "548:    Quiet: aws.Bool(false),",
          "",
          "[Removed Lines]",
          "542:      Key: aws.String(\"objectkey1\"),",
          "545:      Key: aws.String(\"objectkey2\"),",
          "",
          "[Added Lines]",
          "542:      Key:       aws.String(\"HappyFace.jpg\"),",
          "543:      VersionId: aws.String(\"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"),",
          "546:      Key:       aws.String(\"HappyFace.jpg\"),",
          "547:      VersionId: aws.String(\"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "579:   Delete: &s3.Delete{",
          "580:    Objects: []*s3.ObjectIdentifier{",
          "581:     {",
          "584:     },",
          "585:     {",
          "588:     },",
          "589:    },",
          "590:    Quiet: aws.Bool(false),",
          "",
          "[Removed Lines]",
          "582:      Key:       aws.String(\"HappyFace.jpg\"),",
          "583:      VersionId: aws.String(\"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"),",
          "586:      Key:       aws.String(\"HappyFace.jpg\"),",
          "587:      VersionId: aws.String(\"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"),",
          "",
          "[Added Lines]",
          "584:      Key: aws.String(\"objectkey1\"),",
          "587:      Key: aws.String(\"objectkey2\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1804:  fmt.Println(result)",
          "1805: }",
          "1811: func ExampleS3_PutObject_shared00() {",
          "1812:  svc := s3.New(session.New())",
          "1813:  input := &s3.PutObjectInput{",
          "1815:   Bucket:               aws.String(\"examplebucket\"),",
          "1817:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1819:  }",
          "1821:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1814:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1816:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "1818:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "[Added Lines]",
          "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1817:   Key:                  aws.String(\"exampleobject\"),",
          "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1836:  fmt.Println(result)",
          "1837: }",
          "1843: func ExampleS3_PutObject_shared01() {",
          "1844:  svc := s3.New(session.New())",
          "1845:  input := &s3.PutObjectInput{",
          "1850:  }",
          "1852:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1846:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1847:   Bucket:  aws.String(\"examplebucket\"),",
          "1848:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1849:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1848:   Bucket: aws.String(\"examplebucket\"),",
          "1849:   Key:    aws.String(\"objectkey\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1867:  fmt.Println(result)",
          "1868: }",
          "1874: func ExampleS3_PutObject_shared02() {",
          "1875:  svc := s3.New(session.New())",
          "1876:  input := &s3.PutObjectInput{",
          "1884:  }",
          "1886:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1877:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1878:   Bucket: aws.String(\"examplebucket\"),",
          "1879:   Key:    aws.String(\"exampleobject\"),",
          "1880:   Metadata: map[string]*string{",
          "1881:    \"metadata1\": aws.String(\"value1\"),",
          "1882:    \"metadata2\": aws.String(\"value2\"),",
          "1883:   },",
          "",
          "[Added Lines]",
          "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1878:   Bucket:  aws.String(\"examplebucket\"),",
          "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1901:  fmt.Println(result)",
          "1902: }",
          "1908: func ExampleS3_PutObject_shared03() {",
          "1909:  svc := s3.New(session.New())",
          "1910:  input := &s3.PutObjectInput{",
          "1914:  }",
          "1916:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1912:   Bucket: aws.String(\"examplebucket\"),",
          "1913:   Key:    aws.String(\"objectkey\"),",
          "",
          "[Added Lines]",
          "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1909:   Bucket:               aws.String(\"examplebucket\"),",
          "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1931:  fmt.Println(result)",
          "1932: }",
          "1939: func ExampleS3_PutObject_shared04() {",
          "1940:  svc := s3.New(session.New())",
          "1941:  input := &s3.PutObjectInput{",
          "1943:   Bucket: aws.String(\"examplebucket\"),",
          "1945:  }",
          "1947:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1942:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1944:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1942:   Key:    aws.String(\"exampleobject\"),",
          "1943:   Metadata: map[string]*string{",
          "1944:    \"metadata1\": aws.String(\"value1\"),",
          "1945:    \"metadata2\": aws.String(\"value2\"),",
          "1946:   },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1994:  fmt.Println(result)",
          "1995: }",
          "2002: func ExampleS3_PutObject_shared06() {",
          "2003:  svc := s3.New(session.New())",
          "2004:  input := &s3.PutObjectInput{",
          "2010:  }",
          "2012:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "2006:   Bucket:               aws.String(\"examplebucket\"),",
          "2007:   Key:                  aws.String(\"exampleobject\"),",
          "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
          "2009:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2008:   Bucket: aws.String(\"examplebucket\"),",
          "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2171:  fmt.Println(result)",
          "2172: }",
          "2178: func ExampleS3_UploadPartCopy_shared00() {",
          "2179:  svc := s3.New(session.New())",
          "2180:  input := &s3.UploadPartCopyInput{",
          "2187:  }",
          "2189:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2181:   Bucket:          aws.String(\"examplebucket\"),",
          "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2184:   Key:             aws.String(\"examplelargeobject\"),",
          "2185:   PartNumber:      aws.Int64(2),",
          "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2181:   Bucket:     aws.String(\"examplebucket\"),",
          "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   Key:        aws.String(\"examplelargeobject\"),",
          "2184:   PartNumber: aws.Int64(1),",
          "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2204:  fmt.Println(result)",
          "2205: }",
          "2211: func ExampleS3_UploadPartCopy_shared01() {",
          "2212:  svc := s3.New(session.New())",
          "2213:  input := &s3.UploadPartCopyInput{",
          "2219:  }",
          "2221:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2214:   Bucket:     aws.String(\"examplebucket\"),",
          "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2216:   Key:        aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber: aws.Int64(1),",
          "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2213:   Bucket:          aws.String(\"examplebucket\"),",
          "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2216:   Key:             aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber:      aws.Int64(2),",
          "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------"
        ],
        "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
          "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
        ],
        "service/synthetics/api.go||service/synthetics/api.go": [
          "File: service/synthetics/api.go -> service/synthetics/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1815: type CanaryRunConfigInput struct {",
          "1816:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1821:  MemoryInMB *int64 `min:\"960\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1837: func (s *CanaryRunConfigInput) Validate() error {",
          "1838:  invalidParams := request.ErrInvalidParams{Context: \"CanaryRunConfigInput\"}",
          "1839:  if s.TimeoutInSeconds == nil {",
          "1840:   invalidParams.Add(request.NewErrParamRequired(\"TimeoutInSeconds\"))",
          "1841:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1844:  if s.MemoryInMB != nil && *s.MemoryInMB < 960 {",
          "1845:   invalidParams.Add(request.NewErrParamMinValue(\"MemoryInMB\", 960))",
          "1846:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1849:  return nil",
          "1850: }",
          "1853: func (s *CanaryRunConfigInput) SetTimeoutInSeconds(v int64) *CanaryRunConfigInput {",
          "1854:  s.TimeoutInSeconds = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1861: func (s *CanaryRunConfigInput) SetMemoryInMB(v int64) *CanaryRunConfigInput {",
          "1862:  s.MemoryInMB = &v",
          "1863:  return s",
          "1864: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1859: type CanaryRunConfigOutput struct {",
          "1860:  _ struct{} `type:\"structure\"`",
          "1863:  TimeoutInSeconds *int64 `min:\"60\" type:\"integer\"`",
          "1864: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1878:  MemoryInMB *int64 `min:\"960\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1873:  return s.String()",
          "1874: }",
          "1877: func (s *CanaryRunConfigOutput) SetTimeoutInSeconds(v int64) *CanaryRunConfigOutput {",
          "1878:  s.TimeoutInSeconds = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1895: func (s *CanaryRunConfigOutput) SetMemoryInMB(v int64) *CanaryRunConfigOutput {",
          "1896:  s.MemoryInMB = &v",
          "1897:  return s",
          "1898: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80760876d2f0fe900443900ba667b7a15ebfd055",
      "candidate_info": {
        "commit_hash": "80760876d2f0fe900443900ba667b7a15ebfd055",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/80760876d2f0fe900443900ba667b7a15ebfd055",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/guardduty/2017-11-28/docs-2.json",
          "models/apis/resourcegroupstaggingapi/2017-01-26/docs-2.json",
          "models/apis/sagemaker/2017-07-24/api-2.json",
          "models/apis/sagemaker/2017-07-24/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/guardduty/api.go",
          "service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go",
          "service/sagemaker/api.go"
        ],
        "message": "Release v1.30.24 (2020-05-08) ===\n\n### Service Client Updates\n* `service/guardduty`: Updates service documentation\n  * Documentation updates for GuardDuty\n* `service/resourcegroupstaggingapi`: Updates service documentation\n  * Documentation updates for resourcegroupstaggingapi\n* `service/sagemaker`: Updates service API and documentation\n  * This release adds a new parameter (EnableInterContainerTrafficEncryption) to CreateProcessingJob API to allow for enabling inter-container traffic encryption on processing jobs.\n\n### SDK Bugs\n* `service/dynamodb/dynamodbattribute`:  Simplified decode logic to decode AttributeValue as it is defined ([#3308](https://github.com/aws/aws-sdk-go/pull/3308))",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/guardduty/api.go||service/guardduty/api.go",
          "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go",
          "service/sagemaker/api.go||service/sagemaker/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "855:   \"cloud9\": service{",
          "857:    Endpoints: endpoints{",
          "858:     \"ap-northeast-1\": endpoint{},",
          "859:     \"ap-northeast-2\": endpoint{},",
          "860:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "858:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "865:     \"eu-north-1\":     endpoint{},",
          "866:     \"eu-west-1\":      endpoint{},",
          "867:     \"eu-west-2\":      endpoint{},",
          "868:     \"us-east-1\":      endpoint{},",
          "869:     \"us-east-2\":      endpoint{},",
          "870:     \"us-west-2\":      endpoint{},",
          "871:    },",
          "872:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "869:     \"eu-west-3\":      endpoint{},",
          "870:     \"me-south-1\":     endpoint{},",
          "871:     \"sa-east-1\":      endpoint{},",
          "874:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5289:   \"storagegateway\": service{",
          "5291:    Endpoints: endpoints{",
          "5292:     \"ap-east-1\":      endpoint{},",
          "5293:     \"ap-northeast-1\": endpoint{},",
          "5294:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5297:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5298:     \"ca-central-1\":   endpoint{},",
          "5299:     \"eu-central-1\":   endpoint{},",
          "5300:     \"eu-north-1\":     endpoint{},",
          "5301:     \"eu-west-1\":      endpoint{},",
          "5302:     \"eu-west-2\":      endpoint{},",
          "5303:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5307:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.23\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.24\"",
          "",
          "---------------"
        ],
        "service/guardduty/api.go||service/guardduty/api.go": [
          "File: service/guardduty/api.go -> service/guardduty/api.go"
        ],
        "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go": [
          "File: service/resourcegroupstaggingapi/api.go -> service/resourcegroupstaggingapi/api.go"
        ],
        "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go": [
          "File: service/resourcegroupstaggingapi/doc.go -> service/resourcegroupstaggingapi/doc.go"
        ],
        "service/sagemaker/api.go||service/sagemaker/api.go": [
          "File: service/sagemaker/api.go -> service/sagemaker/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28817:    invalidParams.AddNested(\"AnnotationConsolidationConfig\", err.(request.ErrInvalidParams))",
          "28818:   }",
          "28819:  }",
          "28826:  if invalidParams.Len() > 0 {",
          "28827:   return invalidParams",
          "",
          "[Removed Lines]",
          "28820:  if s.UiConfig != nil {",
          "28821:   if err := s.UiConfig.Validate(); err != nil {",
          "28822:    invalidParams.AddNested(\"UiConfig\", err.(request.ErrInvalidParams))",
          "28823:   }",
          "28824:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37134: type NetworkConfig struct {",
          "37135:  _ struct{} `type:\"structure\"`",
          "37139:  EnableNetworkIsolation *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37141:  EnableInterContainerTrafficEncryption *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37171:  return nil",
          "37172: }",
          "37175: func (s *NetworkConfig) SetEnableNetworkIsolation(v bool) *NetworkConfig {",
          "37176:  s.EnableNetworkIsolation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37181: func (s *NetworkConfig) SetEnableInterContainerTrafficEncryption(v bool) *NetworkConfig {",
          "37182:  s.EnableInterContainerTrafficEncryption = &v",
          "37183:  return s",
          "37184: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "39216:  Task *RenderableTask `type:\"structure\" required:\"true\"`",
          "39222: }",
          "",
          "[Removed Lines]",
          "39221:  UiTemplate *UiTemplate `type:\"structure\" required:\"true\"`",
          "",
          "[Added Lines]",
          "39231:  UiTemplate *UiTemplate `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "39243:  if s.Task == nil {",
          "39244:   invalidParams.Add(request.NewErrParamRequired(\"Task\"))",
          "39245:  }",
          "39249:  if s.Task != nil {",
          "39250:   if err := s.Task.Validate(); err != nil {",
          "39251:    invalidParams.AddNested(\"Task\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "39246:  if s.UiTemplate == nil {",
          "39247:   invalidParams.Add(request.NewErrParamRequired(\"UiTemplate\"))",
          "39248:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "44134: }",
          "",
          "[Removed Lines]",
          "44133:  UiTemplateS3Uri *string `type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "44143:  UiTemplateS3Uri *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "44143:  return s.String()",
          "44144: }",
          "44160: func (s *UiConfig) SetUiTemplateS3Uri(v string) *UiConfig {",
          "44161:  s.UiTemplateS3Uri = &v",
          "",
          "[Removed Lines]",
          "44147: func (s *UiConfig) Validate() error {",
          "44148:  invalidParams := request.ErrInvalidParams{Context: \"UiConfig\"}",
          "44149:  if s.UiTemplateS3Uri == nil {",
          "44150:   invalidParams.Add(request.NewErrParamRequired(\"UiTemplateS3Uri\"))",
          "44151:  }",
          "44153:  if invalidParams.Len() > 0 {",
          "44154:   return invalidParams",
          "44155:  }",
          "44156:  return nil",
          "44157: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a6064accf8b9a044f0b203f07440726ba1dd273",
      "candidate_info": {
        "commit_hash": "7a6064accf8b9a044f0b203f07440726ba1dd273",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/7a6064accf8b9a044f0b203f07440726ba1dd273",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ecr/2015-09-21/api-2.json",
          "models/apis/ecr/2015-09-21/docs-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/api-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/docs-2.json",
          "models/apis/kinesisvideo/2017-09-30/api-2.json",
          "models/apis/kinesisvideo/2017-09-30/docs-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/route53/2013-04-01/paginators-1.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/ecr/api.go",
          "service/ecr/errors.go",
          "service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go",
          "service/route53/api.go",
          "service/route53/errors.go",
          "service/route53/route53iface/interface.go",
          "service/ssm/api.go",
          "service/ssm/doc.go",
          "service/ssm/errors.go"
        ],
        "message": "Release v1.30.16 (2020-04-28) (#3292)\n\nRelease v1.30.16 (2020-04-28)\n===\n\n### Service Client Updates\n* `service/ecr`: Updates service API and documentation\n  * This release adds support for multi-architecture images also known as a manifest list\n* `service/kinesis-video-archived-media`: Updates service API and documentation\n* `service/kinesisvideo`: Updates service API and documentation\n  * Add \"GET_CLIP\" to the list of supported API names for the GetDataEndpoint API.\n* `service/medialive`: Updates service API and documentation\n  * AWS Elemental MediaLive now supports several new features: enhanced VQ for H.264 (AVC) output encodes; passthrough of timed metadata and of Nielsen ID3 metadata in fMP4 containers in HLS outputs; the ability to generate a SCTE-35 sparse track without additional segmentation, in Microsoft Smooth outputs;  the ability to select the audio from a TS input by specifying the audio track; and conversion of HDR colorspace in the input to an SDR colorspace in the output.\n* `service/route53`: Updates service API, documentation, and paginators\n  * Amazon Route 53 now supports the Africa (Cape Town) Region (af-south-1) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.\n* `service/ssm`: Updates service API and documentation\n  * SSM State Manager support for adding list association filter for Resource Group and manual mode of managing compliance for an association.\n\n### SDK Bugs\n* `service/s3`: Fix S3 client behavior wrt 200 OK response with empty payload",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ecr/api.go||service/ecr/api.go",
          "service/ecr/errors.go||service/ecr/errors.go",
          "service/kinesisvideo/api.go||service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/route53/errors.go||service/route53/errors.go",
          "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go",
          "service/ssm/api.go||service/ssm/api.go",
          "service/ssm/doc.go||service/ssm/doc.go",
          "service/ssm/errors.go||service/ssm/errors.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  CaCentral1RegionID   = \"ca-central-1\"   // Canada (Central).",
          "28:  EuCentral1RegionID   = \"eu-central-1\"   // EU (Frankfurt).",
          "29:  EuNorth1RegionID     = \"eu-north-1\"     // EU (Stockholm).",
          "30:  EuWest1RegionID      = \"eu-west-1\"      // EU (Ireland).",
          "31:  EuWest2RegionID      = \"eu-west-2\"      // EU (London).",
          "32:  EuWest3RegionID      = \"eu-west-3\"      // EU (Paris).",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:  EuSouth1RegionID     = \"eu-south-1\"     // Europe (Milan).",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:   \"eu-north-1\": region{",
          "139:    Description: \"EU (Stockholm)\",",
          "140:   },",
          "141:   \"eu-west-1\": region{",
          "142:    Description: \"EU (Ireland)\",",
          "143:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:   \"eu-south-1\": region{",
          "143:    Description: \"Europe (Milan)\",",
          "144:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:     \"ca-central-1\":   endpoint{},",
          "187:     \"eu-central-1\":   endpoint{},",
          "188:     \"eu-north-1\":     endpoint{},",
          "189:     \"eu-west-1\":      endpoint{},",
          "190:     \"eu-west-2\":      endpoint{},",
          "191:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:     },",
          "217:     \"eu-central-1\": endpoint{},",
          "218:     \"eu-north-1\":   endpoint{},",
          "219:     \"eu-west-1\":    endpoint{},",
          "220:     \"eu-west-2\":    endpoint{},",
          "221:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "369:       Region: \"eu-north-1\",",
          "370:      },",
          "371:     },",
          "372:     \"eu-west-1\": endpoint{",
          "373:      Hostname: \"api.ecr.eu-west-1.amazonaws.com\",",
          "374:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "378:     \"eu-south-1\": endpoint{",
          "379:      Hostname: \"api.ecr.eu-south-1.amazonaws.com\",",
          "380:      CredentialScope: credentialScope{",
          "381:       Region: \"eu-south-1\",",
          "382:      },",
          "383:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "555:     \"ca-central-1\":   endpoint{},",
          "556:     \"eu-central-1\":   endpoint{},",
          "557:     \"eu-north-1\":     endpoint{},",
          "558:     \"eu-west-1\":      endpoint{},",
          "559:     \"eu-west-2\":      endpoint{},",
          "560:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "581:     \"ca-central-1\":   endpoint{},",
          "582:     \"eu-central-1\":   endpoint{},",
          "583:     \"eu-north-1\":     endpoint{},",
          "584:     \"eu-west-1\":      endpoint{},",
          "585:     \"eu-west-2\":      endpoint{},",
          "586:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "597:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "693:     \"ca-central-1\":   endpoint{},",
          "694:     \"eu-central-1\":   endpoint{},",
          "695:     \"eu-north-1\":     endpoint{},",
          "696:     \"eu-west-1\":      endpoint{},",
          "697:     \"eu-west-2\":      endpoint{},",
          "698:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "710:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "882:     \"ca-central-1\":   endpoint{},",
          "883:     \"eu-central-1\":   endpoint{},",
          "884:     \"eu-north-1\":     endpoint{},",
          "885:     \"eu-west-1\":      endpoint{},",
          "886:     \"eu-west-2\":      endpoint{},",
          "887:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "900:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1001:     \"ca-central-1\":   endpoint{},",
          "1002:     \"eu-central-1\":   endpoint{},",
          "1003:     \"eu-north-1\":     endpoint{},",
          "1004:     \"eu-west-1\":      endpoint{},",
          "1005:     \"eu-west-2\":      endpoint{},",
          "1006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1020:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1125:     \"ca-central-1\":   endpoint{},",
          "1126:     \"eu-central-1\":   endpoint{},",
          "1127:     \"eu-north-1\":     endpoint{},",
          "1128:     \"eu-west-1\":      endpoint{},",
          "1129:     \"eu-west-2\":      endpoint{},",
          "1130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1145:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1556:     \"ca-central-1\":   endpoint{},",
          "1557:     \"eu-central-1\":   endpoint{},",
          "1558:     \"eu-north-1\":     endpoint{},",
          "1559:     \"eu-west-1\":      endpoint{},",
          "1560:     \"eu-west-2\":      endpoint{},",
          "1561:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1577:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1618:     },",
          "1619:     \"eu-central-1\": endpoint{},",
          "1620:     \"eu-north-1\":   endpoint{},",
          "1621:     \"eu-west-1\":    endpoint{},",
          "1622:     \"eu-west-2\":    endpoint{},",
          "1623:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1640:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1786:     },",
          "1787:     \"eu-central-1\": endpoint{},",
          "1788:     \"eu-north-1\":   endpoint{},",
          "1789:     \"eu-west-1\":    endpoint{},",
          "1790:     \"eu-west-2\":    endpoint{},",
          "1791:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1809:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1843:     \"ca-central-1\":   endpoint{},",
          "1844:     \"eu-central-1\":   endpoint{},",
          "1845:     \"eu-north-1\":     endpoint{},",
          "1846:     \"eu-west-1\":      endpoint{},",
          "1847:     \"eu-west-2\":      endpoint{},",
          "1848:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1867:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1908:     \"ca-central-1\":   endpoint{},",
          "1909:     \"eu-central-1\":   endpoint{},",
          "1910:     \"eu-north-1\":     endpoint{},",
          "1911:     \"eu-west-1\":      endpoint{},",
          "1912:     \"eu-west-2\":      endpoint{},",
          "1913:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1956:     \"ca-central-1\":   endpoint{},",
          "1957:     \"eu-central-1\":   endpoint{},",
          "1958:     \"eu-north-1\":     endpoint{},",
          "1959:     \"eu-west-1\":      endpoint{},",
          "1960:     \"eu-west-2\":      endpoint{},",
          "1961:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1982:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1986:     \"ca-central-1\":   endpoint{},",
          "1987:     \"eu-central-1\":   endpoint{},",
          "1988:     \"eu-north-1\":     endpoint{},",
          "1989:     \"eu-west-1\":      endpoint{},",
          "1990:     \"eu-west-2\":      endpoint{},",
          "1991:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2013:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2167:     \"ca-central-1\":   endpoint{},",
          "2168:     \"eu-central-1\":   endpoint{},",
          "2169:     \"eu-north-1\":     endpoint{},",
          "2170:     \"eu-west-1\":      endpoint{},",
          "2171:     \"eu-west-2\":      endpoint{},",
          "2172:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2195:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2220:      SSLCommonName: \"{service}.{region}.{dnsSuffix}\",",
          "2221:     },",
          "2222:     \"eu-north-1\": endpoint{},",
          "2223:     \"eu-west-1\":  endpoint{},",
          "2224:     \"eu-west-2\":  endpoint{},",
          "2225:     \"eu-west-3\":  endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2249:     \"eu-south-1\": endpoint{},",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2310:     \"ca-central-1\":   endpoint{},",
          "2311:     \"eu-central-1\":   endpoint{},",
          "2312:     \"eu-north-1\":     endpoint{},",
          "2313:     \"eu-west-1\":      endpoint{},",
          "2314:     \"eu-west-2\":      endpoint{},",
          "2315:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2340:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2340:     \"ca-central-1\":   endpoint{},",
          "2341:     \"eu-central-1\":   endpoint{},",
          "2342:     \"eu-north-1\":     endpoint{},",
          "2343:     \"eu-west-1\":      endpoint{},",
          "2344:     \"eu-west-2\":      endpoint{},",
          "2345:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2371:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2617:     \"ca-central-1\":   endpoint{},",
          "2618:     \"eu-central-1\":   endpoint{},",
          "2619:     \"eu-north-1\":     endpoint{},",
          "2620:     \"eu-west-1\":      endpoint{},",
          "2621:     \"eu-west-2\":      endpoint{},",
          "2622:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2649:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3058:     \"ca-central-1\":   endpoint{},",
          "3059:     \"eu-central-1\":   endpoint{},",
          "3060:     \"eu-north-1\":     endpoint{},",
          "3061:     \"eu-west-1\":      endpoint{},",
          "3062:     \"eu-west-2\":      endpoint{},",
          "3063:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3091:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3148:     \"ca-central-1\":   endpoint{},",
          "3149:     \"eu-central-1\":   endpoint{},",
          "3150:     \"eu-north-1\":     endpoint{},",
          "3151:     \"eu-west-1\":      endpoint{},",
          "3152:     \"eu-west-2\":      endpoint{},",
          "3153:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3182:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3190:     \"ca-central-1\":   endpoint{},",
          "3191:     \"eu-central-1\":   endpoint{},",
          "3192:     \"eu-north-1\":     endpoint{},",
          "3193:     \"eu-west-1\":      endpoint{},",
          "3194:     \"eu-west-2\":      endpoint{},",
          "3195:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3225:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3303:     \"ca-central-1\":   endpoint{},",
          "3304:     \"eu-central-1\":   endpoint{},",
          "3305:     \"eu-north-1\":     endpoint{},",
          "3306:     \"eu-west-1\":      endpoint{},",
          "3307:     \"eu-west-2\":      endpoint{},",
          "3308:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3339:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3447:     \"ca-central-1\":   endpoint{},",
          "3448:     \"eu-central-1\":   endpoint{},",
          "3449:     \"eu-north-1\":     endpoint{},",
          "3450:     \"eu-west-1\":      endpoint{},",
          "3451:     \"eu-west-2\":      endpoint{},",
          "3452:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3484:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3503:     \"ca-central-1\":   endpoint{},",
          "3504:     \"eu-central-1\":   endpoint{},",
          "3505:     \"eu-north-1\":     endpoint{},",
          "3506:     \"eu-west-1\":      endpoint{},",
          "3507:     \"eu-west-2\":      endpoint{},",
          "3508:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3541:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4028:     \"ca-central-1\":   endpoint{},",
          "4029:     \"eu-central-1\":   endpoint{},",
          "4030:     \"eu-north-1\":     endpoint{},",
          "4031:     \"eu-west-1\":      endpoint{},",
          "4032:     \"eu-west-2\":      endpoint{},",
          "4033:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4067:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4054:     \"ca-central-1\":   endpoint{},",
          "4055:     \"eu-central-1\":   endpoint{},",
          "4056:     \"eu-north-1\":     endpoint{},",
          "4057:     \"eu-west-1\":      endpoint{},",
          "4058:     \"eu-west-2\":      endpoint{},",
          "4059:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4094:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4125:     \"ca-central-1\":   endpoint{},",
          "4126:     \"eu-central-1\":   endpoint{},",
          "4127:     \"eu-north-1\":     endpoint{},",
          "4128:     \"eu-west-1\":      endpoint{},",
          "4129:     \"eu-west-2\":      endpoint{},",
          "4130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4166:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4316:     \"ca-central-1\": endpoint{},",
          "4317:     \"eu-central-1\": endpoint{},",
          "4318:     \"eu-north-1\":   endpoint{},",
          "4319:     \"eu-west-1\": endpoint{",
          "4320:      Hostname:          \"s3.eu-west-1.amazonaws.com\",",
          "4321:      SignatureVersions: []string{\"s3\", \"s3v4\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4358:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4790:     \"ca-central-1\":   endpoint{},",
          "4791:     \"eu-central-1\":   endpoint{},",
          "4792:     \"eu-north-1\":     endpoint{},",
          "4793:     \"eu-west-1\":      endpoint{},",
          "4794:     \"eu-west-2\":      endpoint{},",
          "4795:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4833:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4950:     \"ca-central-1\":   endpoint{},",
          "4951:     \"eu-central-1\":   endpoint{},",
          "4952:     \"eu-north-1\":     endpoint{},",
          "4953:     \"eu-west-1\":      endpoint{},",
          "4954:     \"eu-west-2\":      endpoint{},",
          "4955:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4994:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "5001:     \"ca-central-1\":   endpoint{},",
          "5002:     \"eu-central-1\":   endpoint{},",
          "5003:     \"eu-north-1\":     endpoint{},",
          "5004:     \"eu-west-1\":      endpoint{},",
          "5005:     \"eu-west-2\":      endpoint{},",
          "5006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5046:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "5051:     \"ca-central-1\":   endpoint{},",
          "5052:     \"eu-central-1\":   endpoint{},",
          "5053:     \"eu-north-1\":     endpoint{},",
          "5054:     \"eu-west-1\":      endpoint{},",
          "5055:     \"eu-west-2\":      endpoint{},",
          "5056:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5097:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "5123:     \"ca-central-1\":   endpoint{},",
          "5124:     \"eu-central-1\":   endpoint{},",
          "5125:     \"eu-north-1\":     endpoint{},",
          "5126:     \"eu-west-1\":      endpoint{},",
          "5127:     \"eu-west-2\":      endpoint{},",
          "5128:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5170:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "5265:     \"ca-central-1\": endpoint{},",
          "5266:     \"eu-central-1\": endpoint{},",
          "5267:     \"eu-north-1\":   endpoint{},",
          "5268:     \"eu-west-1\":    endpoint{},",
          "5269:     \"eu-west-2\":    endpoint{},",
          "5270:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5313:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "5325:     \"ca-central-1\":   endpoint{},",
          "5326:     \"eu-central-1\":   endpoint{},",
          "5327:     \"eu-north-1\":     endpoint{},",
          "5328:     \"eu-west-1\":      endpoint{},",
          "5329:     \"eu-west-2\":      endpoint{},",
          "5330:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5374:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "5373:     \"ca-central-1\":   endpoint{},",
          "5374:     \"eu-central-1\":   endpoint{},",
          "5375:     \"eu-north-1\":     endpoint{},",
          "5376:     \"eu-west-1\":      endpoint{},",
          "5377:     \"eu-west-2\":      endpoint{},",
          "5378:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5423:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5807:     \"ca-central-1\":   endpoint{},",
          "5808:     \"eu-central-1\":   endpoint{},",
          "5809:     \"eu-north-1\":     endpoint{},",
          "5810:     \"eu-west-1\":      endpoint{},",
          "5811:     \"eu-west-2\":      endpoint{},",
          "5812:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5858:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.15\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.16\"",
          "",
          "---------------"
        ],
        "service/ecr/api.go||service/ecr/api.go": [
          "File: service/ecr/api.go -> service/ecr/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7342:  return s",
          "7343: }",
          "7346: type Repository struct {",
          "7347:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7359: type ReferencedImagesNotFoundException struct {",
          "7360:  _            struct{}                  `type:\"structure\"`",
          "7361:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7363:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7364: }",
          "7367: func (s ReferencedImagesNotFoundException) String() string {",
          "7368:  return awsutil.Prettify(s)",
          "7369: }",
          "7372: func (s ReferencedImagesNotFoundException) GoString() string {",
          "7373:  return s.String()",
          "7374: }",
          "7376: func newErrorReferencedImagesNotFoundException(v protocol.ResponseMetadata) error {",
          "7377:  return &ReferencedImagesNotFoundException{",
          "7378:   RespMetadata: v,",
          "7379:  }",
          "7380: }",
          "7383: func (s *ReferencedImagesNotFoundException) Code() string {",
          "7384:  return \"ReferencedImagesNotFoundException\"",
          "7385: }",
          "7388: func (s *ReferencedImagesNotFoundException) Message() string {",
          "7389:  if s.Message_ != nil {",
          "7390:   return *s.Message_",
          "7391:  }",
          "7392:  return \"\"",
          "7393: }",
          "7396: func (s *ReferencedImagesNotFoundException) OrigErr() error {",
          "7397:  return nil",
          "7398: }",
          "7400: func (s *ReferencedImagesNotFoundException) Error() string {",
          "7401:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7402: }",
          "7405: func (s *ReferencedImagesNotFoundException) StatusCode() int {",
          "7406:  return s.RespMetadata.StatusCode",
          "7407: }",
          "7410: func (s *ReferencedImagesNotFoundException) RequestID() string {",
          "7411:  return s.RespMetadata.RequestID",
          "7412: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8287:  return s.RespMetadata.RequestID",
          "8288: }",
          "8290: type UntagResourceInput struct {",
          "8291:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8360: type UnsupportedImageTypeException struct {",
          "8361:  _            struct{}                  `type:\"structure\"`",
          "8362:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8364:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8365: }",
          "8368: func (s UnsupportedImageTypeException) String() string {",
          "8369:  return awsutil.Prettify(s)",
          "8370: }",
          "8373: func (s UnsupportedImageTypeException) GoString() string {",
          "8374:  return s.String()",
          "8375: }",
          "8377: func newErrorUnsupportedImageTypeException(v protocol.ResponseMetadata) error {",
          "8378:  return &UnsupportedImageTypeException{",
          "8379:   RespMetadata: v,",
          "8380:  }",
          "8381: }",
          "8384: func (s *UnsupportedImageTypeException) Code() string {",
          "8385:  return \"UnsupportedImageTypeException\"",
          "8386: }",
          "8389: func (s *UnsupportedImageTypeException) Message() string {",
          "8390:  if s.Message_ != nil {",
          "8391:   return *s.Message_",
          "8392:  }",
          "8393:  return \"\"",
          "8394: }",
          "8397: func (s *UnsupportedImageTypeException) OrigErr() error {",
          "8398:  return nil",
          "8399: }",
          "8401: func (s *UnsupportedImageTypeException) Error() string {",
          "8402:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8403: }",
          "8406: func (s *UnsupportedImageTypeException) StatusCode() int {",
          "8407:  return s.RespMetadata.StatusCode",
          "8408: }",
          "8411: func (s *UnsupportedImageTypeException) RequestID() string {",
          "8412:  return s.RespMetadata.RequestID",
          "8413: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8614:  ImageFailureCodeMissingDigestAndTag = \"MissingDigestAndTag\"",
          "8615: )",
          "8617: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8742:  ImageFailureCodeImageReferencedByManifestList = \"ImageReferencedByManifestList\"",
          "",
          "---------------"
        ],
        "service/ecr/errors.go||service/ecr/errors.go": [
          "File: service/ecr/errors.go -> service/ecr/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  ErrCodeLimitExceededException = \"LimitExceededException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:  ErrCodeReferencedImagesNotFoundException = \"ReferencedImagesNotFoundException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:  ErrCodeTooManyTagsException = \"TooManyTagsException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:  ErrCodeUnsupportedImageTypeException = \"UnsupportedImageTypeException\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189:  \"LifecyclePolicyPreviewInProgressException\": newErrorLifecyclePolicyPreviewInProgressException,",
          "190:  \"LifecyclePolicyPreviewNotFoundException\":   newErrorLifecyclePolicyPreviewNotFoundException,",
          "191:  \"LimitExceededException\":                    newErrorLimitExceededException,",
          "192:  \"RepositoryAlreadyExistsException\":          newErrorRepositoryAlreadyExistsException,",
          "193:  \"RepositoryNotEmptyException\":               newErrorRepositoryNotEmptyException,",
          "194:  \"RepositoryNotFoundException\":               newErrorRepositoryNotFoundException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:  \"ReferencedImagesNotFoundException\":         newErrorReferencedImagesNotFoundException,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "196:  \"ScanNotFoundException\":                     newErrorScanNotFoundException,",
          "197:  \"ServerException\":                           newErrorServerException,",
          "198:  \"TooManyTagsException\":                      newErrorTooManyTagsException,",
          "199:  \"UploadNotFoundException\":                   newErrorUploadNotFoundException,",
          "200: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:  \"UnsupportedImageTypeException\":             newErrorUnsupportedImageTypeException,",
          "",
          "---------------"
        ],
        "service/kinesisvideo/api.go||service/kinesisvideo/api.go": [
          "File: service/kinesisvideo/api.go -> service/kinesisvideo/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4925:  APINameGetDashStreamingSessionUrl = \"GET_DASH_STREAMING_SESSION_URL\"",
          "4926: )",
          "4928: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4941:  APINameGetClip = \"GET_CLIP\"",
          "",
          "---------------"
        ],
        "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go": [
          "File: service/kinesisvideo/errors.go -> service/kinesisvideo/errors.go"
        ],
        "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go": [
          "File: service/kinesisvideoarchivedmedia/api.go -> service/kinesisvideoarchivedmedia/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "14: )",
          "16: const opGetDASHStreamingSessionURL = \"GetDASHStreamingSessionURL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: const opGetClip = \"GetClip\"",
          "42: func (c *KinesisVideoArchivedMedia) GetClipRequest(input *GetClipInput) (req *request.Request, output *GetClipOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opGetClip,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/getClip\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &GetClipInput{}",
          "51:  }",
          "53:  output = &GetClipOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "148: func (c *KinesisVideoArchivedMedia) GetClip(input *GetClipInput) (*GetClipOutput, error) {",
          "149:  req, out := c.GetClipRequest(input)",
          "150:  return out, req.Send()",
          "151: }",
          "162: func (c *KinesisVideoArchivedMedia) GetClipWithContext(ctx aws.Context, input *GetClipInput, opts ...request.Option) (*GetClipOutput, error) {",
          "163:  req, out := c.GetClipRequest(input)",
          "164:  req.SetContext(ctx)",
          "165:  req.ApplyOptions(opts...)",
          "166:  return out, req.Send()",
          "167: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "884:  return s.RespMetadata.RequestID",
          "885: }",
          "889: type DASHFragmentSelector struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048: type ClipFragmentSelector struct {",
          "1049:  _ struct{} `type:\"structure\"`",
          "1054:  FragmentSelectorType *string `type:\"string\" required:\"true\" enum:\"ClipFragmentSelectorType\"`",
          "1059:  TimestampRange *ClipTimestampRange `type:\"structure\" required:\"true\"`",
          "1060: }",
          "1063: func (s ClipFragmentSelector) String() string {",
          "1064:  return awsutil.Prettify(s)",
          "1065: }",
          "1068: func (s ClipFragmentSelector) GoString() string {",
          "1069:  return s.String()",
          "1070: }",
          "1073: func (s *ClipFragmentSelector) Validate() error {",
          "1074:  invalidParams := request.ErrInvalidParams{Context: \"ClipFragmentSelector\"}",
          "1075:  if s.FragmentSelectorType == nil {",
          "1076:   invalidParams.Add(request.NewErrParamRequired(\"FragmentSelectorType\"))",
          "1077:  }",
          "1078:  if s.TimestampRange == nil {",
          "1079:   invalidParams.Add(request.NewErrParamRequired(\"TimestampRange\"))",
          "1080:  }",
          "1081:  if s.TimestampRange != nil {",
          "1082:   if err := s.TimestampRange.Validate(); err != nil {",
          "1083:    invalidParams.AddNested(\"TimestampRange\", err.(request.ErrInvalidParams))",
          "1084:   }",
          "1085:  }",
          "1087:  if invalidParams.Len() > 0 {",
          "1088:   return invalidParams",
          "1089:  }",
          "1090:  return nil",
          "1091: }",
          "1094: func (s *ClipFragmentSelector) SetFragmentSelectorType(v string) *ClipFragmentSelector {",
          "1095:  s.FragmentSelectorType = &v",
          "1096:  return s",
          "1097: }",
          "1100: func (s *ClipFragmentSelector) SetTimestampRange(v *ClipTimestampRange) *ClipFragmentSelector {",
          "1101:  s.TimestampRange = v",
          "1102:  return s",
          "1103: }",
          "1110: type ClipTimestampRange struct {",
          "1111:  _ struct{} `type:\"structure\"`",
          "1124:  EndTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1133:  StartTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1134: }",
          "1137: func (s ClipTimestampRange) String() string {",
          "1138:  return awsutil.Prettify(s)",
          "1139: }",
          "1142: func (s ClipTimestampRange) GoString() string {",
          "1143:  return s.String()",
          "1144: }",
          "1147: func (s *ClipTimestampRange) Validate() error {",
          "1148:  invalidParams := request.ErrInvalidParams{Context: \"ClipTimestampRange\"}",
          "1149:  if s.EndTimestamp == nil {",
          "1150:   invalidParams.Add(request.NewErrParamRequired(\"EndTimestamp\"))",
          "1151:  }",
          "1152:  if s.StartTimestamp == nil {",
          "1153:   invalidParams.Add(request.NewErrParamRequired(\"StartTimestamp\"))",
          "1154:  }",
          "1156:  if invalidParams.Len() > 0 {",
          "1157:   return invalidParams",
          "1158:  }",
          "1159:  return nil",
          "1160: }",
          "1163: func (s *ClipTimestampRange) SetEndTimestamp(v time.Time) *ClipTimestampRange {",
          "1164:  s.EndTimestamp = &v",
          "1165:  return s",
          "1166: }",
          "1169: func (s *ClipTimestampRange) SetStartTimestamp(v time.Time) *ClipTimestampRange {",
          "1170:  s.StartTimestamp = &v",
          "1171:  return s",
          "1172: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1139:  return s",
          "1140: }",
          "1142: type GetDASHStreamingSessionURLInput struct {",
          "1143:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1429: type GetClipInput struct {",
          "1430:  _ struct{} `type:\"structure\"`",
          "1435:  ClipFragmentSelector *ClipFragmentSelector `type:\"structure\" required:\"true\"`",
          "1441:  StreamARN *string `min:\"1\" type:\"string\"`",
          "1446:  StreamName *string `min:\"1\" type:\"string\"`",
          "1447: }",
          "1450: func (s GetClipInput) String() string {",
          "1451:  return awsutil.Prettify(s)",
          "1452: }",
          "1455: func (s GetClipInput) GoString() string {",
          "1456:  return s.String()",
          "1457: }",
          "1460: func (s *GetClipInput) Validate() error {",
          "1461:  invalidParams := request.ErrInvalidParams{Context: \"GetClipInput\"}",
          "1462:  if s.ClipFragmentSelector == nil {",
          "1463:   invalidParams.Add(request.NewErrParamRequired(\"ClipFragmentSelector\"))",
          "1464:  }",
          "1465:  if s.StreamARN != nil && len(*s.StreamARN) < 1 {",
          "1466:   invalidParams.Add(request.NewErrParamMinLen(\"StreamARN\", 1))",
          "1467:  }",
          "1468:  if s.StreamName != nil && len(*s.StreamName) < 1 {",
          "1469:   invalidParams.Add(request.NewErrParamMinLen(\"StreamName\", 1))",
          "1470:  }",
          "1471:  if s.ClipFragmentSelector != nil {",
          "1472:   if err := s.ClipFragmentSelector.Validate(); err != nil {",
          "1473:    invalidParams.AddNested(\"ClipFragmentSelector\", err.(request.ErrInvalidParams))",
          "1474:   }",
          "1475:  }",
          "1477:  if invalidParams.Len() > 0 {",
          "1478:   return invalidParams",
          "1479:  }",
          "1480:  return nil",
          "1481: }",
          "1484: func (s *GetClipInput) SetClipFragmentSelector(v *ClipFragmentSelector) *GetClipInput {",
          "1485:  s.ClipFragmentSelector = v",
          "1486:  return s",
          "1487: }",
          "1490: func (s *GetClipInput) SetStreamARN(v string) *GetClipInput {",
          "1491:  s.StreamARN = &v",
          "1492:  return s",
          "1493: }",
          "1496: func (s *GetClipInput) SetStreamName(v string) *GetClipInput {",
          "1497:  s.StreamName = &v",
          "1498:  return s",
          "1499: }",
          "1501: type GetClipOutput struct {",
          "1502:  _ struct{} `type:\"structure\" payload:\"Payload\"`",
          "1505:  ContentType *string `location:\"header\" locationName:\"Content-Type\" min:\"1\" type:\"string\"`",
          "1511:  Payload io.ReadCloser `type:\"blob\"`",
          "1512: }",
          "1515: func (s GetClipOutput) String() string {",
          "1516:  return awsutil.Prettify(s)",
          "1517: }",
          "1520: func (s GetClipOutput) GoString() string {",
          "1521:  return s.String()",
          "1522: }",
          "1525: func (s *GetClipOutput) SetContentType(v string) *GetClipOutput {",
          "1526:  s.ContentType = &v",
          "1527:  return s",
          "1528: }",
          "1531: func (s *GetClipOutput) SetPayload(v io.ReadCloser) *GetClipOutput {",
          "1532:  s.Payload = v",
          "1533:  return s",
          "1534: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1985:  return s.RespMetadata.RequestID",
          "1986: }",
          "1988: type ListFragmentsInput struct {",
          "1989:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2384: type InvalidMediaFrameException struct {",
          "2385:  _            struct{}                  `type:\"structure\"`",
          "2386:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2388:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2389: }",
          "2392: func (s InvalidMediaFrameException) String() string {",
          "2393:  return awsutil.Prettify(s)",
          "2394: }",
          "2397: func (s InvalidMediaFrameException) GoString() string {",
          "2398:  return s.String()",
          "2399: }",
          "2401: func newErrorInvalidMediaFrameException(v protocol.ResponseMetadata) error {",
          "2402:  return &InvalidMediaFrameException{",
          "2403:   RespMetadata: v,",
          "2404:  }",
          "2405: }",
          "2408: func (s *InvalidMediaFrameException) Code() string {",
          "2409:  return \"InvalidMediaFrameException\"",
          "2410: }",
          "2413: func (s *InvalidMediaFrameException) Message() string {",
          "2414:  if s.Message_ != nil {",
          "2415:   return *s.Message_",
          "2416:  }",
          "2417:  return \"\"",
          "2418: }",
          "2421: func (s *InvalidMediaFrameException) OrigErr() error {",
          "2422:  return nil",
          "2423: }",
          "2425: func (s *InvalidMediaFrameException) Error() string {",
          "2426:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2427: }",
          "2430: func (s *InvalidMediaFrameException) StatusCode() int {",
          "2431:  return s.RespMetadata.StatusCode",
          "2432: }",
          "2435: func (s *InvalidMediaFrameException) RequestID() string {",
          "2436:  return s.RespMetadata.RequestID",
          "2437: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2448:  return s.RespMetadata.RequestID",
          "2449: }",
          "2451: const (",
          "2453:  ContainerFormatFragmentedMp4 = \"FRAGMENTED_MP4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2902: const (",
          "2904:  ClipFragmentSelectorTypeProducerTimestamp = \"PRODUCER_TIMESTAMP\"",
          "2907:  ClipFragmentSelectorTypeServerTimestamp = \"SERVER_TIMESTAMP\"",
          "2908: )",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go": [
          "File: service/kinesisvideoarchivedmedia/errors.go -> service/kinesisvideoarchivedmedia/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  ErrCodeInvalidCodecPrivateDataException = \"InvalidCodecPrivateDataException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:  ErrCodeInvalidMediaFrameException = \"InvalidMediaFrameException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:  \"ClientLimitExceededException\":        newErrorClientLimitExceededException,",
          "77:  \"InvalidArgumentException\":            newErrorInvalidArgumentException,",
          "78:  \"InvalidCodecPrivateDataException\":    newErrorInvalidCodecPrivateDataException,",
          "79:  \"MissingCodecPrivateDataException\":    newErrorMissingCodecPrivateDataException,",
          "80:  \"NoDataRetentionException\":            newErrorNoDataRetentionException,",
          "81:  \"NotAuthorizedException\":              newErrorNotAuthorizedException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:  \"InvalidMediaFrameException\":          newErrorInvalidMediaFrameException,",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go": [
          "File: service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go -> service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: type KinesisVideoArchivedMediaAPI interface {",
          "63:  GetDASHStreamingSessionURL(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "64:  GetDASHStreamingSessionURLWithContext(aws.Context, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput, ...request.Option) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "65:  GetDASHStreamingSessionURLRequest(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*request.Request, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:  GetClip(*kinesisvideoarchivedmedia.GetClipInput) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "64:  GetClipWithContext(aws.Context, *kinesisvideoarchivedmedia.GetClipInput, ...request.Option) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "65:  GetClipRequest(*kinesisvideoarchivedmedia.GetClipInput) (*request.Request, *kinesisvideoarchivedmedia.GetClipOutput)",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5330:  AudioPidSelection *AudioPidSelection `locationName:\"audioPidSelection\" type:\"structure\"`",
          "5331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5333:  AudioTrackSelection *AudioTrackSelection `locationName:\"audioTrackSelection\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5353:    invalidParams.AddNested(\"AudioPidSelection\", err.(request.ErrInvalidParams))",
          "5354:   }",
          "5355:  }",
          "5357:  if invalidParams.Len() > 0 {",
          "5358:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5359:  if s.AudioTrackSelection != nil {",
          "5360:   if err := s.AudioTrackSelection.Validate(); err != nil {",
          "5361:    invalidParams.AddNested(\"AudioTrackSelection\", err.(request.ErrInvalidParams))",
          "5362:   }",
          "5363:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5372:  return s",
          "5373: }",
          "5376: type AutomaticInputFailoverSettings struct {",
          "5377:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5384: func (s *AudioSelectorSettings) SetAudioTrackSelection(v *AudioTrackSelection) *AudioSelectorSettings {",
          "5385:  s.AudioTrackSelection = v",
          "5386:  return s",
          "5387: }",
          "5390: type AudioTrack struct {",
          "5391:  _ struct{} `type:\"structure\"`",
          "5396:  Track *int64 `locationName:\"track\" min:\"1\" type:\"integer\" required:\"true\"`",
          "5397: }",
          "5400: func (s AudioTrack) String() string {",
          "5401:  return awsutil.Prettify(s)",
          "5402: }",
          "5405: func (s AudioTrack) GoString() string {",
          "5406:  return s.String()",
          "5407: }",
          "5410: func (s *AudioTrack) Validate() error {",
          "5411:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrack\"}",
          "5412:  if s.Track == nil {",
          "5413:   invalidParams.Add(request.NewErrParamRequired(\"Track\"))",
          "5414:  }",
          "5415:  if s.Track != nil && *s.Track < 1 {",
          "5416:   invalidParams.Add(request.NewErrParamMinValue(\"Track\", 1))",
          "5417:  }",
          "5419:  if invalidParams.Len() > 0 {",
          "5420:   return invalidParams",
          "5421:  }",
          "5422:  return nil",
          "5423: }",
          "5426: func (s *AudioTrack) SetTrack(v int64) *AudioTrack {",
          "5427:  s.Track = &v",
          "5428:  return s",
          "5429: }",
          "5432: type AudioTrackSelection struct {",
          "5433:  _ struct{} `type:\"structure\"`",
          "5438:  Tracks []*AudioTrack `locationName:\"tracks\" type:\"list\" required:\"true\"`",
          "5439: }",
          "5442: func (s AudioTrackSelection) String() string {",
          "5443:  return awsutil.Prettify(s)",
          "5444: }",
          "5447: func (s AudioTrackSelection) GoString() string {",
          "5448:  return s.String()",
          "5449: }",
          "5452: func (s *AudioTrackSelection) Validate() error {",
          "5453:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrackSelection\"}",
          "5454:  if s.Tracks == nil {",
          "5455:   invalidParams.Add(request.NewErrParamRequired(\"Tracks\"))",
          "5456:  }",
          "5457:  if s.Tracks != nil {",
          "5458:   for i, v := range s.Tracks {",
          "5459:    if v == nil {",
          "5460:     continue",
          "5461:    }",
          "5462:    if err := v.Validate(); err != nil {",
          "5463:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tracks\", i), err.(request.ErrInvalidParams))",
          "5464:    }",
          "5465:   }",
          "5466:  }",
          "5468:  if invalidParams.Len() > 0 {",
          "5469:   return invalidParams",
          "5470:  }",
          "5471:  return nil",
          "5472: }",
          "5475: func (s *AudioTrackSelection) SetTracks(v []*AudioTrack) *AudioTrackSelection {",
          "5476:  s.Tracks = v",
          "5477:  return s",
          "5478: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10755:  AudioRenditionSets *string `locationName:\"audioRenditionSets\" type:\"string\"`",
          "10756: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10865:  NielsenId3Behavior *string `locationName:\"nielsenId3Behavior\" type:\"string\" enum:\"Fmp4NielsenId3Behavior\"`",
          "10868:  TimedMetadataBehavior *string `locationName:\"timedMetadataBehavior\" type:\"string\" enum:\"Fmp4TimedMetadataBehavior\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10771:  return s",
          "10772: }",
          "10775: type FollowModeScheduleActionStartSettings struct {",
          "10776:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10888: func (s *Fmp4HlsSettings) SetNielsenId3Behavior(v string) *Fmp4HlsSettings {",
          "10889:  s.NielsenId3Behavior = &v",
          "10890:  return s",
          "10891: }",
          "10894: func (s *Fmp4HlsSettings) SetTimedMetadataBehavior(v string) *Fmp4HlsSettings {",
          "10895:  s.TimedMetadataBehavior = &v",
          "10896:  return s",
          "10897: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11199:  return s",
          "11200: }",
          "11203: type H264Settings struct {",
          "11204:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11328: type H264FilterSettings struct {",
          "11329:  _ struct{} `type:\"structure\"`",
          "11332:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "11333: }",
          "11336: func (s H264FilterSettings) String() string {",
          "11337:  return awsutil.Prettify(s)",
          "11338: }",
          "11341: func (s H264FilterSettings) GoString() string {",
          "11342:  return s.String()",
          "11343: }",
          "11346: func (s *H264FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *H264FilterSettings {",
          "11347:  s.TemporalFilterSettings = v",
          "11348:  return s",
          "11349: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11235:  EntropyEncoding *string `locationName:\"entropyEncoding\" type:\"string\" enum:\"H264EntropyEncoding\"`",
          "11239:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11387:  FilterSettings *H264FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11328:  Profile *string `locationName:\"profile\" type:\"string\" enum:\"H264Profile\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11485:  QualityLevel *string `locationName:\"qualityLevel\" type:\"string\" enum:\"H264QualityLevel\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11478:  return s",
          "11479: }",
          "11482: func (s *H264Settings) SetFixedAfd(v string) *H264Settings {",
          "11483:  s.FixedAfd = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11639: func (s *H264Settings) SetFilterSettings(v *H264FilterSettings) *H264Settings {",
          "11640:  s.FilterSettings = v",
          "11641:  return s",
          "11642: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11598:  return s",
          "11599: }",
          "11602: func (s *H264Settings) SetQvbrQualityLevel(v int64) *H264Settings {",
          "11603:  s.QvbrQualityLevel = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11765: func (s *H264Settings) SetQualityLevel(v string) *H264Settings {",
          "11766:  s.QualityLevel = &v",
          "11767:  return s",
          "11768: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "20833:  return s",
          "20834: }",
          "20837: type TimecodeConfig struct {",
          "20838:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21008: type TemporalFilterSettings struct {",
          "21009:  _ struct{} `type:\"structure\"`",
          "21014:  PostFilterSharpening *string `locationName:\"postFilterSharpening\" type:\"string\" enum:\"TemporalFilterPostFilterSharpening\"`",
          "21017:  Strength *string `locationName:\"strength\" type:\"string\" enum:\"TemporalFilterStrength\"`",
          "21018: }",
          "21021: func (s TemporalFilterSettings) String() string {",
          "21022:  return awsutil.Prettify(s)",
          "21023: }",
          "21026: func (s TemporalFilterSettings) GoString() string {",
          "21027:  return s.String()",
          "21028: }",
          "21031: func (s *TemporalFilterSettings) SetPostFilterSharpening(v string) *TemporalFilterSettings {",
          "21032:  s.PostFilterSharpening = &v",
          "21033:  return s",
          "21034: }",
          "21037: func (s *TemporalFilterSettings) SetStrength(v string) *TemporalFilterSettings {",
          "21038:  s.Strength = &v",
          "21039:  return s",
          "21040: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "22986:  FixedAfdAfd1111 = \"AFD_1111\"",
          "22987: )",
          "22990: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23196: const (",
          "23198:  Fmp4NielsenId3BehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23201:  Fmp4NielsenId3BehaviorPassthrough = \"PASSTHROUGH\"",
          "23202: )",
          "23205: const (",
          "23207:  Fmp4TimedMetadataBehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23210:  Fmp4TimedMetadataBehaviorPassthrough = \"PASSTHROUGH\"",
          "23211: )",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "23220:  H264ProfileMain = \"MAIN\"",
          "23221: )",
          "23224: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23448: const (",
          "23450:  H264QualityLevelEnhancedQuality = \"ENHANCED_QUALITY\"",
          "23453:  H264QualityLevelStandardQuality = \"STANDARD_QUALITY\"",
          "23454: )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "24567:  SmoothGroupSparseTrackTypeScte35 = \"SCTE_35\"",
          "24568: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24803:  SmoothGroupSparseTrackTypeScte35WithoutSegmentation = \"SCTE_35_WITHOUT_SEGMENTATION\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "24585:  SmoothGroupTimestampOffsetModeUseEventStartDate = \"USE_EVENT_START_DATE\"",
          "24586: )",
          "24589: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24825: const (",
          "24827:  TemporalFilterPostFilterSharpeningAuto = \"AUTO\"",
          "24830:  TemporalFilterPostFilterSharpeningDisabled = \"DISABLED\"",
          "24833:  TemporalFilterPostFilterSharpeningEnabled = \"ENABLED\"",
          "24834: )",
          "24837: const (",
          "24839:  TemporalFilterStrengthAuto = \"AUTO\"",
          "24842:  TemporalFilterStrengthStrength1 = \"STRENGTH_1\"",
          "24845:  TemporalFilterStrengthStrength10 = \"STRENGTH_10\"",
          "24848:  TemporalFilterStrengthStrength11 = \"STRENGTH_11\"",
          "24851:  TemporalFilterStrengthStrength12 = \"STRENGTH_12\"",
          "24854:  TemporalFilterStrengthStrength13 = \"STRENGTH_13\"",
          "24857:  TemporalFilterStrengthStrength14 = \"STRENGTH_14\"",
          "24860:  TemporalFilterStrengthStrength15 = \"STRENGTH_15\"",
          "24863:  TemporalFilterStrengthStrength16 = \"STRENGTH_16\"",
          "24866:  TemporalFilterStrengthStrength2 = \"STRENGTH_2\"",
          "24869:  TemporalFilterStrengthStrength3 = \"STRENGTH_3\"",
          "24872:  TemporalFilterStrengthStrength4 = \"STRENGTH_4\"",
          "24875:  TemporalFilterStrengthStrength5 = \"STRENGTH_5\"",
          "24878:  TemporalFilterStrengthStrength6 = \"STRENGTH_6\"",
          "24881:  TemporalFilterStrengthStrength7 = \"STRENGTH_7\"",
          "24884:  TemporalFilterStrengthStrength8 = \"STRENGTH_8\"",
          "24887:  TemporalFilterStrengthStrength9 = \"STRENGTH_9\"",
          "24888: )",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4325:   Name:       opListQueryLoggingConfigs,",
          "4326:   HTTPMethod: \"GET\",",
          "4327:   HTTPPath:   \"/2013-04-01/queryloggingconfig\",",
          "4328:  }",
          "4330:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4331:   Paginator: &request.Paginator{",
          "4332:    InputTokens:     []string{\"NextToken\"},",
          "4333:    OutputTokens:    []string{\"NextToken\"},",
          "4334:    LimitToken:      \"MaxResults\",",
          "4335:    TruncationToken: \"\",",
          "4336:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4387:  return out, req.Send()",
          "4388: }",
          "4390: const opListResourceRecordSets = \"ListResourceRecordSets\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4416: func (c *Route53) ListQueryLoggingConfigsPages(input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool) error {",
          "4417:  return c.ListQueryLoggingConfigsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "4418: }",
          "4427: func (c *Route53) ListQueryLoggingConfigsPagesWithContext(ctx aws.Context, input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool, opts ...request.Option) error {",
          "4428:  p := request.Pagination{",
          "4429:   NewRequest: func() (*request.Request, error) {",
          "4430:    var inCpy *ListQueryLoggingConfigsInput",
          "4431:    if input != nil {",
          "4432:     tmp := *input",
          "4433:     inCpy = &tmp",
          "4434:    }",
          "4435:    req, _ := c.ListQueryLoggingConfigsRequest(inCpy)",
          "4436:    req.SetContext(ctx)",
          "4437:    req.ApplyOptions(opts...)",
          "4438:    return req, nil",
          "4439:   },",
          "4440:  }",
          "4442:  for p.Next() {",
          "4443:   if !fn(p.Page().(*ListQueryLoggingConfigsOutput), !p.HasNextPage()) {",
          "4444:    break",
          "4445:   }",
          "4446:  }",
          "4448:  return p.Err()",
          "4449: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15131:  CloudWatchRegionCnNorth1 = \"cn-north-1\"",
          "15132: )",
          "15134: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15195:  CloudWatchRegionAfSouth1 = \"af-south-1\"",
          "15198:  CloudWatchRegionUsGovWest1 = \"us-gov-west-1\"",
          "15201:  CloudWatchRegionUsGovEast1 = \"us-gov-east-1\"",
          "15204:  CloudWatchRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15207:  CloudWatchRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "15338:  ResourceRecordSetRegionApSouth1 = \"ap-south-1\"",
          "15339: )",
          "15341: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15417:  ResourceRecordSetRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "15400:  VPCRegionMeSouth1 = \"me-south-1\"",
          "15403:  VPCRegionApSoutheast1 = \"ap-southeast-1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15482:  VPCRegionUsGovWest1 = \"us-gov-west-1\"",
          "15485:  VPCRegionUsGovEast1 = \"us-gov-east-1\"",
          "15488:  VPCRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15491:  VPCRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "15430:  VPCRegionCnNorth1 = \"cn-north-1\"",
          "15431: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15524:  VPCRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------"
        ],
        "service/route53/errors.go||service/route53/errors.go": [
          "File: service/route53/errors.go -> service/route53/errors.go"
        ],
        "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go": [
          "File: service/route53/route53iface/interface.go -> service/route53/route53iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:  ListQueryLoggingConfigsWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error)",
          "231:  ListQueryLoggingConfigsRequest(*route53.ListQueryLoggingConfigsInput) (*request.Request, *route53.ListQueryLoggingConfigsOutput)",
          "233:  ListResourceRecordSets(*route53.ListResourceRecordSetsInput) (*route53.ListResourceRecordSetsOutput, error)",
          "234:  ListResourceRecordSetsWithContext(aws.Context, *route53.ListResourceRecordSetsInput, ...request.Option) (*route53.ListResourceRecordSetsOutput, error)",
          "235:  ListResourceRecordSetsRequest(*route53.ListResourceRecordSetsInput) (*request.Request, *route53.ListResourceRecordSetsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:  ListQueryLoggingConfigsPages(*route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool) error",
          "234:  ListQueryLoggingConfigsPagesWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12681:  Status *AssociationStatus `type:\"structure\"`",
          "12684:  Targets []*Target `type:\"list\"`",
          "12685: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12703:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12808:  return s",
          "12809: }",
          "12812: func (s *AssociationDescription) SetTargets(v []*Target) *AssociationDescription {",
          "12813:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12834: func (s *AssociationDescription) SetSyncCompliance(v string) *AssociationDescription {",
          "12835:  s.SyncCompliance = &v",
          "12836:  return s",
          "12837: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "13536:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "13540:  Targets []*Target `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13578:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "13622:  return s",
          "13623: }",
          "13626: func (s *AssociationVersionInfo) SetTargets(v []*Target) *AssociationVersionInfo {",
          "13627:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13668: func (s *AssociationVersionInfo) SetSyncCompliance(v string) *AssociationVersionInfo {",
          "13669:  s.SyncCompliance = &v",
          "13670:  return s",
          "13671: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16368:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16371:  Targets []*Target `type:\"list\"`",
          "16372: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16427:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16487:  return s",
          "16488: }",
          "16491: func (s *CreateAssociationBatchRequestEntry) SetTargets(v []*Target) *CreateAssociationBatchRequestEntry {",
          "16492:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16550: func (s *CreateAssociationBatchRequestEntry) SetSyncCompliance(v string) *CreateAssociationBatchRequestEntry {",
          "16551:  s.SyncCompliance = &v",
          "16552:  return s",
          "16553: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16578:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16582:  Targets []*Target `type:\"list\"`",
          "16583: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16657:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "16698:  return s",
          "16699: }",
          "16702: func (s *CreateAssociationInput) SetTargets(v []*Target) *CreateAssociationInput {",
          "16703:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16784: func (s *CreateAssociationInput) SetSyncCompliance(v string) *CreateAssociationInput {",
          "16785:  s.SyncCompliance = &v",
          "16786:  return s",
          "16787: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "37312:  ResourceType *string `min:\"1\" type:\"string\" required:\"true\"`",
          "37313: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37445:  UploadType *string `type:\"string\" enum:\"ComplianceUploadType\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "37407:  return s",
          "37408: }",
          "37410: type PutComplianceItemsOutput struct {",
          "37411:  _ struct{} `type:\"structure\"`",
          "37412: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37544: func (s *PutComplianceItemsInput) SetUploadType(v string) *PutComplianceItemsInput {",
          "37545:  s.UploadType = &v",
          "37546:  return s",
          "37547: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "42749:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "42752:  Targets []*Target `type:\"list\"`",
          "42753: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42901:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "42874:  return s",
          "42875: }",
          "42878: func (s *UpdateAssociationInput) SetTargets(v []*Target) *UpdateAssociationInput {",
          "42879:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43030: func (s *UpdateAssociationInput) SetSyncCompliance(v string) *UpdateAssociationInput {",
          "43031:  s.SyncCompliance = &v",
          "43032:  return s",
          "43033: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "44899:  AssociationFilterKeyAssociationName = \"AssociationName\"",
          "44900: )",
          "44902: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45077:  AssociationFilterKeyResourceGroupName = \"ResourceGroupName\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "44921:  AssociationStatusNameFailed = \"Failed\"",
          "44922: )",
          "44924: const (",
          "44926:  AttachmentHashTypeSha256 = \"Sha256\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45102: const (",
          "45104:  AssociationSyncComplianceAuto = \"AUTO\"",
          "45107:  AssociationSyncComplianceManual = \"MANUAL\"",
          "45108: )",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "45139:  ComplianceStatusNonCompliant = \"NON_COMPLIANT\"",
          "45140: )",
          "45142: const (",
          "45144:  ConnectionStatusConnected = \"Connected\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45328: const (",
          "45330:  ComplianceUploadTypeComplete = \"COMPLETE\"",
          "45333:  ComplianceUploadTypePartial = \"PARTIAL\"",
          "45334: )",
          "",
          "---------------"
        ],
        "service/ssm/doc.go||service/ssm/doc.go": [
          "File: service/ssm/doc.go -> service/ssm/doc.go"
        ],
        "service/ssm/errors.go||service/ssm/errors.go": [
          "File: service/ssm/errors.go -> service/ssm/errors.go"
        ]
      }
    },
    {
      "candidate_hash": "371f2688b5751dfb53665fd7748229ca09bc8fd6",
      "candidate_info": {
        "commit_hash": "371f2688b5751dfb53665fd7748229ca09bc8fd6",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/371f2688b5751dfb53665fd7748229ca09bc8fd6",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ecr/2015-09-21/api-2.json",
          "models/apis/ecr/2015-09-21/docs-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/api-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/docs-2.json",
          "models/apis/kinesisvideo/2017-09-30/api-2.json",
          "models/apis/kinesisvideo/2017-09-30/docs-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/route53/2013-04-01/paginators-1.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/ecr/api.go",
          "service/ecr/errors.go",
          "service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go",
          "service/route53/api.go",
          "service/route53/errors.go",
          "service/route53/route53iface/interface.go",
          "service/ssm/api.go",
          "service/ssm/doc.go",
          "service/ssm/errors.go"
        ],
        "message": "Release v1.30.16 (2020-04-28) ===\n\n### Service Client Updates\n* `service/ecr`: Updates service API and documentation\n  * This release adds support for multi-architecture images also known as a manifest list\n* `service/kinesis-video-archived-media`: Updates service API and documentation\n* `service/kinesisvideo`: Updates service API and documentation\n  * Add \"GET_CLIP\" to the list of supported API names for the GetDataEndpoint API.\n* `service/medialive`: Updates service API and documentation\n  * AWS Elemental MediaLive now supports several new features: enhanced VQ for H.264 (AVC) output encodes; passthrough of timed metadata and of Nielsen ID3 metadata in fMP4 containers in HLS outputs; the ability to generate a SCTE-35 sparse track without additional segmentation, in Microsoft Smooth outputs;  the ability to select the audio from a TS input by specifying the audio track; and conversion of HDR colorspace in the input to an SDR colorspace in the output.\n* `service/route53`: Updates service API, documentation, and paginators\n  * Amazon Route 53 now supports the Africa (Cape Town) Region (af-south-1) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.\n* `service/ssm`: Updates service API and documentation\n  * SSM State Manager support for adding list association filter for Resource Group and manual mode of managing compliance for an association.\n\n### SDK Bugs\n* `service/s3`: Fix S3 client behavior wrt 200 OK response with empty payload",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ecr/api.go||service/ecr/api.go",
          "service/ecr/errors.go||service/ecr/errors.go",
          "service/kinesisvideo/api.go||service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/route53/errors.go||service/route53/errors.go",
          "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go",
          "service/ssm/api.go||service/ssm/api.go",
          "service/ssm/doc.go||service/ssm/doc.go",
          "service/ssm/errors.go||service/ssm/errors.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  CaCentral1RegionID   = \"ca-central-1\"   // Canada (Central).",
          "28:  EuCentral1RegionID   = \"eu-central-1\"   // EU (Frankfurt).",
          "29:  EuNorth1RegionID     = \"eu-north-1\"     // EU (Stockholm).",
          "30:  EuWest1RegionID      = \"eu-west-1\"      // EU (Ireland).",
          "31:  EuWest2RegionID      = \"eu-west-2\"      // EU (London).",
          "32:  EuWest3RegionID      = \"eu-west-3\"      // EU (Paris).",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:  EuSouth1RegionID     = \"eu-south-1\"     // Europe (Milan).",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:   \"eu-north-1\": region{",
          "139:    Description: \"EU (Stockholm)\",",
          "140:   },",
          "141:   \"eu-west-1\": region{",
          "142:    Description: \"EU (Ireland)\",",
          "143:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:   \"eu-south-1\": region{",
          "143:    Description: \"Europe (Milan)\",",
          "144:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:     \"ca-central-1\":   endpoint{},",
          "187:     \"eu-central-1\":   endpoint{},",
          "188:     \"eu-north-1\":     endpoint{},",
          "189:     \"eu-west-1\":      endpoint{},",
          "190:     \"eu-west-2\":      endpoint{},",
          "191:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:     },",
          "217:     \"eu-central-1\": endpoint{},",
          "218:     \"eu-north-1\":   endpoint{},",
          "219:     \"eu-west-1\":    endpoint{},",
          "220:     \"eu-west-2\":    endpoint{},",
          "221:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "369:       Region: \"eu-north-1\",",
          "370:      },",
          "371:     },",
          "372:     \"eu-west-1\": endpoint{",
          "373:      Hostname: \"api.ecr.eu-west-1.amazonaws.com\",",
          "374:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "378:     \"eu-south-1\": endpoint{",
          "379:      Hostname: \"api.ecr.eu-south-1.amazonaws.com\",",
          "380:      CredentialScope: credentialScope{",
          "381:       Region: \"eu-south-1\",",
          "382:      },",
          "383:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "555:     \"ca-central-1\":   endpoint{},",
          "556:     \"eu-central-1\":   endpoint{},",
          "557:     \"eu-north-1\":     endpoint{},",
          "558:     \"eu-west-1\":      endpoint{},",
          "559:     \"eu-west-2\":      endpoint{},",
          "560:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "581:     \"ca-central-1\":   endpoint{},",
          "582:     \"eu-central-1\":   endpoint{},",
          "583:     \"eu-north-1\":     endpoint{},",
          "584:     \"eu-west-1\":      endpoint{},",
          "585:     \"eu-west-2\":      endpoint{},",
          "586:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "597:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "693:     \"ca-central-1\":   endpoint{},",
          "694:     \"eu-central-1\":   endpoint{},",
          "695:     \"eu-north-1\":     endpoint{},",
          "696:     \"eu-west-1\":      endpoint{},",
          "697:     \"eu-west-2\":      endpoint{},",
          "698:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "710:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "882:     \"ca-central-1\":   endpoint{},",
          "883:     \"eu-central-1\":   endpoint{},",
          "884:     \"eu-north-1\":     endpoint{},",
          "885:     \"eu-west-1\":      endpoint{},",
          "886:     \"eu-west-2\":      endpoint{},",
          "887:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "900:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1001:     \"ca-central-1\":   endpoint{},",
          "1002:     \"eu-central-1\":   endpoint{},",
          "1003:     \"eu-north-1\":     endpoint{},",
          "1004:     \"eu-west-1\":      endpoint{},",
          "1005:     \"eu-west-2\":      endpoint{},",
          "1006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1020:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1125:     \"ca-central-1\":   endpoint{},",
          "1126:     \"eu-central-1\":   endpoint{},",
          "1127:     \"eu-north-1\":     endpoint{},",
          "1128:     \"eu-west-1\":      endpoint{},",
          "1129:     \"eu-west-2\":      endpoint{},",
          "1130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1145:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1556:     \"ca-central-1\":   endpoint{},",
          "1557:     \"eu-central-1\":   endpoint{},",
          "1558:     \"eu-north-1\":     endpoint{},",
          "1559:     \"eu-west-1\":      endpoint{},",
          "1560:     \"eu-west-2\":      endpoint{},",
          "1561:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1577:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1618:     },",
          "1619:     \"eu-central-1\": endpoint{},",
          "1620:     \"eu-north-1\":   endpoint{},",
          "1621:     \"eu-west-1\":    endpoint{},",
          "1622:     \"eu-west-2\":    endpoint{},",
          "1623:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1640:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1786:     },",
          "1787:     \"eu-central-1\": endpoint{},",
          "1788:     \"eu-north-1\":   endpoint{},",
          "1789:     \"eu-west-1\":    endpoint{},",
          "1790:     \"eu-west-2\":    endpoint{},",
          "1791:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1809:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1843:     \"ca-central-1\":   endpoint{},",
          "1844:     \"eu-central-1\":   endpoint{},",
          "1845:     \"eu-north-1\":     endpoint{},",
          "1846:     \"eu-west-1\":      endpoint{},",
          "1847:     \"eu-west-2\":      endpoint{},",
          "1848:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1867:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1908:     \"ca-central-1\":   endpoint{},",
          "1909:     \"eu-central-1\":   endpoint{},",
          "1910:     \"eu-north-1\":     endpoint{},",
          "1911:     \"eu-west-1\":      endpoint{},",
          "1912:     \"eu-west-2\":      endpoint{},",
          "1913:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1956:     \"ca-central-1\":   endpoint{},",
          "1957:     \"eu-central-1\":   endpoint{},",
          "1958:     \"eu-north-1\":     endpoint{},",
          "1959:     \"eu-west-1\":      endpoint{},",
          "1960:     \"eu-west-2\":      endpoint{},",
          "1961:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1982:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1986:     \"ca-central-1\":   endpoint{},",
          "1987:     \"eu-central-1\":   endpoint{},",
          "1988:     \"eu-north-1\":     endpoint{},",
          "1989:     \"eu-west-1\":      endpoint{},",
          "1990:     \"eu-west-2\":      endpoint{},",
          "1991:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2013:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2167:     \"ca-central-1\":   endpoint{},",
          "2168:     \"eu-central-1\":   endpoint{},",
          "2169:     \"eu-north-1\":     endpoint{},",
          "2170:     \"eu-west-1\":      endpoint{},",
          "2171:     \"eu-west-2\":      endpoint{},",
          "2172:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2195:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2220:      SSLCommonName: \"{service}.{region}.{dnsSuffix}\",",
          "2221:     },",
          "2222:     \"eu-north-1\": endpoint{},",
          "2223:     \"eu-west-1\":  endpoint{},",
          "2224:     \"eu-west-2\":  endpoint{},",
          "2225:     \"eu-west-3\":  endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2249:     \"eu-south-1\": endpoint{},",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2310:     \"ca-central-1\":   endpoint{},",
          "2311:     \"eu-central-1\":   endpoint{},",
          "2312:     \"eu-north-1\":     endpoint{},",
          "2313:     \"eu-west-1\":      endpoint{},",
          "2314:     \"eu-west-2\":      endpoint{},",
          "2315:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2340:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2340:     \"ca-central-1\":   endpoint{},",
          "2341:     \"eu-central-1\":   endpoint{},",
          "2342:     \"eu-north-1\":     endpoint{},",
          "2343:     \"eu-west-1\":      endpoint{},",
          "2344:     \"eu-west-2\":      endpoint{},",
          "2345:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2371:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2617:     \"ca-central-1\":   endpoint{},",
          "2618:     \"eu-central-1\":   endpoint{},",
          "2619:     \"eu-north-1\":     endpoint{},",
          "2620:     \"eu-west-1\":      endpoint{},",
          "2621:     \"eu-west-2\":      endpoint{},",
          "2622:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2649:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3058:     \"ca-central-1\":   endpoint{},",
          "3059:     \"eu-central-1\":   endpoint{},",
          "3060:     \"eu-north-1\":     endpoint{},",
          "3061:     \"eu-west-1\":      endpoint{},",
          "3062:     \"eu-west-2\":      endpoint{},",
          "3063:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3091:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3148:     \"ca-central-1\":   endpoint{},",
          "3149:     \"eu-central-1\":   endpoint{},",
          "3150:     \"eu-north-1\":     endpoint{},",
          "3151:     \"eu-west-1\":      endpoint{},",
          "3152:     \"eu-west-2\":      endpoint{},",
          "3153:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3182:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3190:     \"ca-central-1\":   endpoint{},",
          "3191:     \"eu-central-1\":   endpoint{},",
          "3192:     \"eu-north-1\":     endpoint{},",
          "3193:     \"eu-west-1\":      endpoint{},",
          "3194:     \"eu-west-2\":      endpoint{},",
          "3195:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3225:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3303:     \"ca-central-1\":   endpoint{},",
          "3304:     \"eu-central-1\":   endpoint{},",
          "3305:     \"eu-north-1\":     endpoint{},",
          "3306:     \"eu-west-1\":      endpoint{},",
          "3307:     \"eu-west-2\":      endpoint{},",
          "3308:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3339:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3447:     \"ca-central-1\":   endpoint{},",
          "3448:     \"eu-central-1\":   endpoint{},",
          "3449:     \"eu-north-1\":     endpoint{},",
          "3450:     \"eu-west-1\":      endpoint{},",
          "3451:     \"eu-west-2\":      endpoint{},",
          "3452:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3484:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3503:     \"ca-central-1\":   endpoint{},",
          "3504:     \"eu-central-1\":   endpoint{},",
          "3505:     \"eu-north-1\":     endpoint{},",
          "3506:     \"eu-west-1\":      endpoint{},",
          "3507:     \"eu-west-2\":      endpoint{},",
          "3508:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3541:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4028:     \"ca-central-1\":   endpoint{},",
          "4029:     \"eu-central-1\":   endpoint{},",
          "4030:     \"eu-north-1\":     endpoint{},",
          "4031:     \"eu-west-1\":      endpoint{},",
          "4032:     \"eu-west-2\":      endpoint{},",
          "4033:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4067:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4054:     \"ca-central-1\":   endpoint{},",
          "4055:     \"eu-central-1\":   endpoint{},",
          "4056:     \"eu-north-1\":     endpoint{},",
          "4057:     \"eu-west-1\":      endpoint{},",
          "4058:     \"eu-west-2\":      endpoint{},",
          "4059:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4094:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4125:     \"ca-central-1\":   endpoint{},",
          "4126:     \"eu-central-1\":   endpoint{},",
          "4127:     \"eu-north-1\":     endpoint{},",
          "4128:     \"eu-west-1\":      endpoint{},",
          "4129:     \"eu-west-2\":      endpoint{},",
          "4130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4166:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4316:     \"ca-central-1\": endpoint{},",
          "4317:     \"eu-central-1\": endpoint{},",
          "4318:     \"eu-north-1\":   endpoint{},",
          "4319:     \"eu-west-1\": endpoint{",
          "4320:      Hostname:          \"s3.eu-west-1.amazonaws.com\",",
          "4321:      SignatureVersions: []string{\"s3\", \"s3v4\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4358:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4790:     \"ca-central-1\":   endpoint{},",
          "4791:     \"eu-central-1\":   endpoint{},",
          "4792:     \"eu-north-1\":     endpoint{},",
          "4793:     \"eu-west-1\":      endpoint{},",
          "4794:     \"eu-west-2\":      endpoint{},",
          "4795:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4833:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4950:     \"ca-central-1\":   endpoint{},",
          "4951:     \"eu-central-1\":   endpoint{},",
          "4952:     \"eu-north-1\":     endpoint{},",
          "4953:     \"eu-west-1\":      endpoint{},",
          "4954:     \"eu-west-2\":      endpoint{},",
          "4955:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4994:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "5001:     \"ca-central-1\":   endpoint{},",
          "5002:     \"eu-central-1\":   endpoint{},",
          "5003:     \"eu-north-1\":     endpoint{},",
          "5004:     \"eu-west-1\":      endpoint{},",
          "5005:     \"eu-west-2\":      endpoint{},",
          "5006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5046:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "5051:     \"ca-central-1\":   endpoint{},",
          "5052:     \"eu-central-1\":   endpoint{},",
          "5053:     \"eu-north-1\":     endpoint{},",
          "5054:     \"eu-west-1\":      endpoint{},",
          "5055:     \"eu-west-2\":      endpoint{},",
          "5056:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5097:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "5123:     \"ca-central-1\":   endpoint{},",
          "5124:     \"eu-central-1\":   endpoint{},",
          "5125:     \"eu-north-1\":     endpoint{},",
          "5126:     \"eu-west-1\":      endpoint{},",
          "5127:     \"eu-west-2\":      endpoint{},",
          "5128:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5170:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "5265:     \"ca-central-1\": endpoint{},",
          "5266:     \"eu-central-1\": endpoint{},",
          "5267:     \"eu-north-1\":   endpoint{},",
          "5268:     \"eu-west-1\":    endpoint{},",
          "5269:     \"eu-west-2\":    endpoint{},",
          "5270:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5313:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "5325:     \"ca-central-1\":   endpoint{},",
          "5326:     \"eu-central-1\":   endpoint{},",
          "5327:     \"eu-north-1\":     endpoint{},",
          "5328:     \"eu-west-1\":      endpoint{},",
          "5329:     \"eu-west-2\":      endpoint{},",
          "5330:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5374:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "5373:     \"ca-central-1\":   endpoint{},",
          "5374:     \"eu-central-1\":   endpoint{},",
          "5375:     \"eu-north-1\":     endpoint{},",
          "5376:     \"eu-west-1\":      endpoint{},",
          "5377:     \"eu-west-2\":      endpoint{},",
          "5378:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5423:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5807:     \"ca-central-1\":   endpoint{},",
          "5808:     \"eu-central-1\":   endpoint{},",
          "5809:     \"eu-north-1\":     endpoint{},",
          "5810:     \"eu-west-1\":      endpoint{},",
          "5811:     \"eu-west-2\":      endpoint{},",
          "5812:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5858:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.15\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.16\"",
          "",
          "---------------"
        ],
        "service/ecr/api.go||service/ecr/api.go": [
          "File: service/ecr/api.go -> service/ecr/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7342:  return s",
          "7343: }",
          "7346: type Repository struct {",
          "7347:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7359: type ReferencedImagesNotFoundException struct {",
          "7360:  _            struct{}                  `type:\"structure\"`",
          "7361:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7363:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7364: }",
          "7367: func (s ReferencedImagesNotFoundException) String() string {",
          "7368:  return awsutil.Prettify(s)",
          "7369: }",
          "7372: func (s ReferencedImagesNotFoundException) GoString() string {",
          "7373:  return s.String()",
          "7374: }",
          "7376: func newErrorReferencedImagesNotFoundException(v protocol.ResponseMetadata) error {",
          "7377:  return &ReferencedImagesNotFoundException{",
          "7378:   RespMetadata: v,",
          "7379:  }",
          "7380: }",
          "7383: func (s *ReferencedImagesNotFoundException) Code() string {",
          "7384:  return \"ReferencedImagesNotFoundException\"",
          "7385: }",
          "7388: func (s *ReferencedImagesNotFoundException) Message() string {",
          "7389:  if s.Message_ != nil {",
          "7390:   return *s.Message_",
          "7391:  }",
          "7392:  return \"\"",
          "7393: }",
          "7396: func (s *ReferencedImagesNotFoundException) OrigErr() error {",
          "7397:  return nil",
          "7398: }",
          "7400: func (s *ReferencedImagesNotFoundException) Error() string {",
          "7401:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7402: }",
          "7405: func (s *ReferencedImagesNotFoundException) StatusCode() int {",
          "7406:  return s.RespMetadata.StatusCode",
          "7407: }",
          "7410: func (s *ReferencedImagesNotFoundException) RequestID() string {",
          "7411:  return s.RespMetadata.RequestID",
          "7412: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8287:  return s.RespMetadata.RequestID",
          "8288: }",
          "8290: type UntagResourceInput struct {",
          "8291:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8360: type UnsupportedImageTypeException struct {",
          "8361:  _            struct{}                  `type:\"structure\"`",
          "8362:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8364:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8365: }",
          "8368: func (s UnsupportedImageTypeException) String() string {",
          "8369:  return awsutil.Prettify(s)",
          "8370: }",
          "8373: func (s UnsupportedImageTypeException) GoString() string {",
          "8374:  return s.String()",
          "8375: }",
          "8377: func newErrorUnsupportedImageTypeException(v protocol.ResponseMetadata) error {",
          "8378:  return &UnsupportedImageTypeException{",
          "8379:   RespMetadata: v,",
          "8380:  }",
          "8381: }",
          "8384: func (s *UnsupportedImageTypeException) Code() string {",
          "8385:  return \"UnsupportedImageTypeException\"",
          "8386: }",
          "8389: func (s *UnsupportedImageTypeException) Message() string {",
          "8390:  if s.Message_ != nil {",
          "8391:   return *s.Message_",
          "8392:  }",
          "8393:  return \"\"",
          "8394: }",
          "8397: func (s *UnsupportedImageTypeException) OrigErr() error {",
          "8398:  return nil",
          "8399: }",
          "8401: func (s *UnsupportedImageTypeException) Error() string {",
          "8402:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8403: }",
          "8406: func (s *UnsupportedImageTypeException) StatusCode() int {",
          "8407:  return s.RespMetadata.StatusCode",
          "8408: }",
          "8411: func (s *UnsupportedImageTypeException) RequestID() string {",
          "8412:  return s.RespMetadata.RequestID",
          "8413: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8614:  ImageFailureCodeMissingDigestAndTag = \"MissingDigestAndTag\"",
          "8615: )",
          "8617: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8742:  ImageFailureCodeImageReferencedByManifestList = \"ImageReferencedByManifestList\"",
          "",
          "---------------"
        ],
        "service/ecr/errors.go||service/ecr/errors.go": [
          "File: service/ecr/errors.go -> service/ecr/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  ErrCodeLimitExceededException = \"LimitExceededException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:  ErrCodeReferencedImagesNotFoundException = \"ReferencedImagesNotFoundException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:  ErrCodeTooManyTagsException = \"TooManyTagsException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:  ErrCodeUnsupportedImageTypeException = \"UnsupportedImageTypeException\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189:  \"LifecyclePolicyPreviewInProgressException\": newErrorLifecyclePolicyPreviewInProgressException,",
          "190:  \"LifecyclePolicyPreviewNotFoundException\":   newErrorLifecyclePolicyPreviewNotFoundException,",
          "191:  \"LimitExceededException\":                    newErrorLimitExceededException,",
          "192:  \"RepositoryAlreadyExistsException\":          newErrorRepositoryAlreadyExistsException,",
          "193:  \"RepositoryNotEmptyException\":               newErrorRepositoryNotEmptyException,",
          "194:  \"RepositoryNotFoundException\":               newErrorRepositoryNotFoundException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:  \"ReferencedImagesNotFoundException\":         newErrorReferencedImagesNotFoundException,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "196:  \"ScanNotFoundException\":                     newErrorScanNotFoundException,",
          "197:  \"ServerException\":                           newErrorServerException,",
          "198:  \"TooManyTagsException\":                      newErrorTooManyTagsException,",
          "199:  \"UploadNotFoundException\":                   newErrorUploadNotFoundException,",
          "200: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:  \"UnsupportedImageTypeException\":             newErrorUnsupportedImageTypeException,",
          "",
          "---------------"
        ],
        "service/kinesisvideo/api.go||service/kinesisvideo/api.go": [
          "File: service/kinesisvideo/api.go -> service/kinesisvideo/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4925:  APINameGetDashStreamingSessionUrl = \"GET_DASH_STREAMING_SESSION_URL\"",
          "4926: )",
          "4928: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4941:  APINameGetClip = \"GET_CLIP\"",
          "",
          "---------------"
        ],
        "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go": [
          "File: service/kinesisvideo/errors.go -> service/kinesisvideo/errors.go"
        ],
        "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go": [
          "File: service/kinesisvideoarchivedmedia/api.go -> service/kinesisvideoarchivedmedia/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "14: )",
          "16: const opGetDASHStreamingSessionURL = \"GetDASHStreamingSessionURL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: const opGetClip = \"GetClip\"",
          "42: func (c *KinesisVideoArchivedMedia) GetClipRequest(input *GetClipInput) (req *request.Request, output *GetClipOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opGetClip,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/getClip\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &GetClipInput{}",
          "51:  }",
          "53:  output = &GetClipOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "148: func (c *KinesisVideoArchivedMedia) GetClip(input *GetClipInput) (*GetClipOutput, error) {",
          "149:  req, out := c.GetClipRequest(input)",
          "150:  return out, req.Send()",
          "151: }",
          "162: func (c *KinesisVideoArchivedMedia) GetClipWithContext(ctx aws.Context, input *GetClipInput, opts ...request.Option) (*GetClipOutput, error) {",
          "163:  req, out := c.GetClipRequest(input)",
          "164:  req.SetContext(ctx)",
          "165:  req.ApplyOptions(opts...)",
          "166:  return out, req.Send()",
          "167: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "884:  return s.RespMetadata.RequestID",
          "885: }",
          "889: type DASHFragmentSelector struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048: type ClipFragmentSelector struct {",
          "1049:  _ struct{} `type:\"structure\"`",
          "1054:  FragmentSelectorType *string `type:\"string\" required:\"true\" enum:\"ClipFragmentSelectorType\"`",
          "1059:  TimestampRange *ClipTimestampRange `type:\"structure\" required:\"true\"`",
          "1060: }",
          "1063: func (s ClipFragmentSelector) String() string {",
          "1064:  return awsutil.Prettify(s)",
          "1065: }",
          "1068: func (s ClipFragmentSelector) GoString() string {",
          "1069:  return s.String()",
          "1070: }",
          "1073: func (s *ClipFragmentSelector) Validate() error {",
          "1074:  invalidParams := request.ErrInvalidParams{Context: \"ClipFragmentSelector\"}",
          "1075:  if s.FragmentSelectorType == nil {",
          "1076:   invalidParams.Add(request.NewErrParamRequired(\"FragmentSelectorType\"))",
          "1077:  }",
          "1078:  if s.TimestampRange == nil {",
          "1079:   invalidParams.Add(request.NewErrParamRequired(\"TimestampRange\"))",
          "1080:  }",
          "1081:  if s.TimestampRange != nil {",
          "1082:   if err := s.TimestampRange.Validate(); err != nil {",
          "1083:    invalidParams.AddNested(\"TimestampRange\", err.(request.ErrInvalidParams))",
          "1084:   }",
          "1085:  }",
          "1087:  if invalidParams.Len() > 0 {",
          "1088:   return invalidParams",
          "1089:  }",
          "1090:  return nil",
          "1091: }",
          "1094: func (s *ClipFragmentSelector) SetFragmentSelectorType(v string) *ClipFragmentSelector {",
          "1095:  s.FragmentSelectorType = &v",
          "1096:  return s",
          "1097: }",
          "1100: func (s *ClipFragmentSelector) SetTimestampRange(v *ClipTimestampRange) *ClipFragmentSelector {",
          "1101:  s.TimestampRange = v",
          "1102:  return s",
          "1103: }",
          "1110: type ClipTimestampRange struct {",
          "1111:  _ struct{} `type:\"structure\"`",
          "1124:  EndTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1133:  StartTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1134: }",
          "1137: func (s ClipTimestampRange) String() string {",
          "1138:  return awsutil.Prettify(s)",
          "1139: }",
          "1142: func (s ClipTimestampRange) GoString() string {",
          "1143:  return s.String()",
          "1144: }",
          "1147: func (s *ClipTimestampRange) Validate() error {",
          "1148:  invalidParams := request.ErrInvalidParams{Context: \"ClipTimestampRange\"}",
          "1149:  if s.EndTimestamp == nil {",
          "1150:   invalidParams.Add(request.NewErrParamRequired(\"EndTimestamp\"))",
          "1151:  }",
          "1152:  if s.StartTimestamp == nil {",
          "1153:   invalidParams.Add(request.NewErrParamRequired(\"StartTimestamp\"))",
          "1154:  }",
          "1156:  if invalidParams.Len() > 0 {",
          "1157:   return invalidParams",
          "1158:  }",
          "1159:  return nil",
          "1160: }",
          "1163: func (s *ClipTimestampRange) SetEndTimestamp(v time.Time) *ClipTimestampRange {",
          "1164:  s.EndTimestamp = &v",
          "1165:  return s",
          "1166: }",
          "1169: func (s *ClipTimestampRange) SetStartTimestamp(v time.Time) *ClipTimestampRange {",
          "1170:  s.StartTimestamp = &v",
          "1171:  return s",
          "1172: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1139:  return s",
          "1140: }",
          "1142: type GetDASHStreamingSessionURLInput struct {",
          "1143:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1429: type GetClipInput struct {",
          "1430:  _ struct{} `type:\"structure\"`",
          "1435:  ClipFragmentSelector *ClipFragmentSelector `type:\"structure\" required:\"true\"`",
          "1441:  StreamARN *string `min:\"1\" type:\"string\"`",
          "1446:  StreamName *string `min:\"1\" type:\"string\"`",
          "1447: }",
          "1450: func (s GetClipInput) String() string {",
          "1451:  return awsutil.Prettify(s)",
          "1452: }",
          "1455: func (s GetClipInput) GoString() string {",
          "1456:  return s.String()",
          "1457: }",
          "1460: func (s *GetClipInput) Validate() error {",
          "1461:  invalidParams := request.ErrInvalidParams{Context: \"GetClipInput\"}",
          "1462:  if s.ClipFragmentSelector == nil {",
          "1463:   invalidParams.Add(request.NewErrParamRequired(\"ClipFragmentSelector\"))",
          "1464:  }",
          "1465:  if s.StreamARN != nil && len(*s.StreamARN) < 1 {",
          "1466:   invalidParams.Add(request.NewErrParamMinLen(\"StreamARN\", 1))",
          "1467:  }",
          "1468:  if s.StreamName != nil && len(*s.StreamName) < 1 {",
          "1469:   invalidParams.Add(request.NewErrParamMinLen(\"StreamName\", 1))",
          "1470:  }",
          "1471:  if s.ClipFragmentSelector != nil {",
          "1472:   if err := s.ClipFragmentSelector.Validate(); err != nil {",
          "1473:    invalidParams.AddNested(\"ClipFragmentSelector\", err.(request.ErrInvalidParams))",
          "1474:   }",
          "1475:  }",
          "1477:  if invalidParams.Len() > 0 {",
          "1478:   return invalidParams",
          "1479:  }",
          "1480:  return nil",
          "1481: }",
          "1484: func (s *GetClipInput) SetClipFragmentSelector(v *ClipFragmentSelector) *GetClipInput {",
          "1485:  s.ClipFragmentSelector = v",
          "1486:  return s",
          "1487: }",
          "1490: func (s *GetClipInput) SetStreamARN(v string) *GetClipInput {",
          "1491:  s.StreamARN = &v",
          "1492:  return s",
          "1493: }",
          "1496: func (s *GetClipInput) SetStreamName(v string) *GetClipInput {",
          "1497:  s.StreamName = &v",
          "1498:  return s",
          "1499: }",
          "1501: type GetClipOutput struct {",
          "1502:  _ struct{} `type:\"structure\" payload:\"Payload\"`",
          "1505:  ContentType *string `location:\"header\" locationName:\"Content-Type\" min:\"1\" type:\"string\"`",
          "1511:  Payload io.ReadCloser `type:\"blob\"`",
          "1512: }",
          "1515: func (s GetClipOutput) String() string {",
          "1516:  return awsutil.Prettify(s)",
          "1517: }",
          "1520: func (s GetClipOutput) GoString() string {",
          "1521:  return s.String()",
          "1522: }",
          "1525: func (s *GetClipOutput) SetContentType(v string) *GetClipOutput {",
          "1526:  s.ContentType = &v",
          "1527:  return s",
          "1528: }",
          "1531: func (s *GetClipOutput) SetPayload(v io.ReadCloser) *GetClipOutput {",
          "1532:  s.Payload = v",
          "1533:  return s",
          "1534: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1985:  return s.RespMetadata.RequestID",
          "1986: }",
          "1988: type ListFragmentsInput struct {",
          "1989:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2384: type InvalidMediaFrameException struct {",
          "2385:  _            struct{}                  `type:\"structure\"`",
          "2386:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2388:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2389: }",
          "2392: func (s InvalidMediaFrameException) String() string {",
          "2393:  return awsutil.Prettify(s)",
          "2394: }",
          "2397: func (s InvalidMediaFrameException) GoString() string {",
          "2398:  return s.String()",
          "2399: }",
          "2401: func newErrorInvalidMediaFrameException(v protocol.ResponseMetadata) error {",
          "2402:  return &InvalidMediaFrameException{",
          "2403:   RespMetadata: v,",
          "2404:  }",
          "2405: }",
          "2408: func (s *InvalidMediaFrameException) Code() string {",
          "2409:  return \"InvalidMediaFrameException\"",
          "2410: }",
          "2413: func (s *InvalidMediaFrameException) Message() string {",
          "2414:  if s.Message_ != nil {",
          "2415:   return *s.Message_",
          "2416:  }",
          "2417:  return \"\"",
          "2418: }",
          "2421: func (s *InvalidMediaFrameException) OrigErr() error {",
          "2422:  return nil",
          "2423: }",
          "2425: func (s *InvalidMediaFrameException) Error() string {",
          "2426:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2427: }",
          "2430: func (s *InvalidMediaFrameException) StatusCode() int {",
          "2431:  return s.RespMetadata.StatusCode",
          "2432: }",
          "2435: func (s *InvalidMediaFrameException) RequestID() string {",
          "2436:  return s.RespMetadata.RequestID",
          "2437: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2448:  return s.RespMetadata.RequestID",
          "2449: }",
          "2451: const (",
          "2453:  ContainerFormatFragmentedMp4 = \"FRAGMENTED_MP4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2902: const (",
          "2904:  ClipFragmentSelectorTypeProducerTimestamp = \"PRODUCER_TIMESTAMP\"",
          "2907:  ClipFragmentSelectorTypeServerTimestamp = \"SERVER_TIMESTAMP\"",
          "2908: )",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go": [
          "File: service/kinesisvideoarchivedmedia/errors.go -> service/kinesisvideoarchivedmedia/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  ErrCodeInvalidCodecPrivateDataException = \"InvalidCodecPrivateDataException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:  ErrCodeInvalidMediaFrameException = \"InvalidMediaFrameException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:  \"ClientLimitExceededException\":        newErrorClientLimitExceededException,",
          "77:  \"InvalidArgumentException\":            newErrorInvalidArgumentException,",
          "78:  \"InvalidCodecPrivateDataException\":    newErrorInvalidCodecPrivateDataException,",
          "79:  \"MissingCodecPrivateDataException\":    newErrorMissingCodecPrivateDataException,",
          "80:  \"NoDataRetentionException\":            newErrorNoDataRetentionException,",
          "81:  \"NotAuthorizedException\":              newErrorNotAuthorizedException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:  \"InvalidMediaFrameException\":          newErrorInvalidMediaFrameException,",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go": [
          "File: service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go -> service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: type KinesisVideoArchivedMediaAPI interface {",
          "63:  GetDASHStreamingSessionURL(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "64:  GetDASHStreamingSessionURLWithContext(aws.Context, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput, ...request.Option) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "65:  GetDASHStreamingSessionURLRequest(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*request.Request, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:  GetClip(*kinesisvideoarchivedmedia.GetClipInput) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "64:  GetClipWithContext(aws.Context, *kinesisvideoarchivedmedia.GetClipInput, ...request.Option) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "65:  GetClipRequest(*kinesisvideoarchivedmedia.GetClipInput) (*request.Request, *kinesisvideoarchivedmedia.GetClipOutput)",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5330:  AudioPidSelection *AudioPidSelection `locationName:\"audioPidSelection\" type:\"structure\"`",
          "5331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5333:  AudioTrackSelection *AudioTrackSelection `locationName:\"audioTrackSelection\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5353:    invalidParams.AddNested(\"AudioPidSelection\", err.(request.ErrInvalidParams))",
          "5354:   }",
          "5355:  }",
          "5357:  if invalidParams.Len() > 0 {",
          "5358:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5359:  if s.AudioTrackSelection != nil {",
          "5360:   if err := s.AudioTrackSelection.Validate(); err != nil {",
          "5361:    invalidParams.AddNested(\"AudioTrackSelection\", err.(request.ErrInvalidParams))",
          "5362:   }",
          "5363:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5372:  return s",
          "5373: }",
          "5376: type AutomaticInputFailoverSettings struct {",
          "5377:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5384: func (s *AudioSelectorSettings) SetAudioTrackSelection(v *AudioTrackSelection) *AudioSelectorSettings {",
          "5385:  s.AudioTrackSelection = v",
          "5386:  return s",
          "5387: }",
          "5390: type AudioTrack struct {",
          "5391:  _ struct{} `type:\"structure\"`",
          "5396:  Track *int64 `locationName:\"track\" min:\"1\" type:\"integer\" required:\"true\"`",
          "5397: }",
          "5400: func (s AudioTrack) String() string {",
          "5401:  return awsutil.Prettify(s)",
          "5402: }",
          "5405: func (s AudioTrack) GoString() string {",
          "5406:  return s.String()",
          "5407: }",
          "5410: func (s *AudioTrack) Validate() error {",
          "5411:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrack\"}",
          "5412:  if s.Track == nil {",
          "5413:   invalidParams.Add(request.NewErrParamRequired(\"Track\"))",
          "5414:  }",
          "5415:  if s.Track != nil && *s.Track < 1 {",
          "5416:   invalidParams.Add(request.NewErrParamMinValue(\"Track\", 1))",
          "5417:  }",
          "5419:  if invalidParams.Len() > 0 {",
          "5420:   return invalidParams",
          "5421:  }",
          "5422:  return nil",
          "5423: }",
          "5426: func (s *AudioTrack) SetTrack(v int64) *AudioTrack {",
          "5427:  s.Track = &v",
          "5428:  return s",
          "5429: }",
          "5432: type AudioTrackSelection struct {",
          "5433:  _ struct{} `type:\"structure\"`",
          "5438:  Tracks []*AudioTrack `locationName:\"tracks\" type:\"list\" required:\"true\"`",
          "5439: }",
          "5442: func (s AudioTrackSelection) String() string {",
          "5443:  return awsutil.Prettify(s)",
          "5444: }",
          "5447: func (s AudioTrackSelection) GoString() string {",
          "5448:  return s.String()",
          "5449: }",
          "5452: func (s *AudioTrackSelection) Validate() error {",
          "5453:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrackSelection\"}",
          "5454:  if s.Tracks == nil {",
          "5455:   invalidParams.Add(request.NewErrParamRequired(\"Tracks\"))",
          "5456:  }",
          "5457:  if s.Tracks != nil {",
          "5458:   for i, v := range s.Tracks {",
          "5459:    if v == nil {",
          "5460:     continue",
          "5461:    }",
          "5462:    if err := v.Validate(); err != nil {",
          "5463:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tracks\", i), err.(request.ErrInvalidParams))",
          "5464:    }",
          "5465:   }",
          "5466:  }",
          "5468:  if invalidParams.Len() > 0 {",
          "5469:   return invalidParams",
          "5470:  }",
          "5471:  return nil",
          "5472: }",
          "5475: func (s *AudioTrackSelection) SetTracks(v []*AudioTrack) *AudioTrackSelection {",
          "5476:  s.Tracks = v",
          "5477:  return s",
          "5478: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10755:  AudioRenditionSets *string `locationName:\"audioRenditionSets\" type:\"string\"`",
          "10756: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10865:  NielsenId3Behavior *string `locationName:\"nielsenId3Behavior\" type:\"string\" enum:\"Fmp4NielsenId3Behavior\"`",
          "10868:  TimedMetadataBehavior *string `locationName:\"timedMetadataBehavior\" type:\"string\" enum:\"Fmp4TimedMetadataBehavior\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10771:  return s",
          "10772: }",
          "10775: type FollowModeScheduleActionStartSettings struct {",
          "10776:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10888: func (s *Fmp4HlsSettings) SetNielsenId3Behavior(v string) *Fmp4HlsSettings {",
          "10889:  s.NielsenId3Behavior = &v",
          "10890:  return s",
          "10891: }",
          "10894: func (s *Fmp4HlsSettings) SetTimedMetadataBehavior(v string) *Fmp4HlsSettings {",
          "10895:  s.TimedMetadataBehavior = &v",
          "10896:  return s",
          "10897: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11199:  return s",
          "11200: }",
          "11203: type H264Settings struct {",
          "11204:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11328: type H264FilterSettings struct {",
          "11329:  _ struct{} `type:\"structure\"`",
          "11332:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "11333: }",
          "11336: func (s H264FilterSettings) String() string {",
          "11337:  return awsutil.Prettify(s)",
          "11338: }",
          "11341: func (s H264FilterSettings) GoString() string {",
          "11342:  return s.String()",
          "11343: }",
          "11346: func (s *H264FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *H264FilterSettings {",
          "11347:  s.TemporalFilterSettings = v",
          "11348:  return s",
          "11349: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11235:  EntropyEncoding *string `locationName:\"entropyEncoding\" type:\"string\" enum:\"H264EntropyEncoding\"`",
          "11239:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11387:  FilterSettings *H264FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11328:  Profile *string `locationName:\"profile\" type:\"string\" enum:\"H264Profile\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11485:  QualityLevel *string `locationName:\"qualityLevel\" type:\"string\" enum:\"H264QualityLevel\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11478:  return s",
          "11479: }",
          "11482: func (s *H264Settings) SetFixedAfd(v string) *H264Settings {",
          "11483:  s.FixedAfd = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11639: func (s *H264Settings) SetFilterSettings(v *H264FilterSettings) *H264Settings {",
          "11640:  s.FilterSettings = v",
          "11641:  return s",
          "11642: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11598:  return s",
          "11599: }",
          "11602: func (s *H264Settings) SetQvbrQualityLevel(v int64) *H264Settings {",
          "11603:  s.QvbrQualityLevel = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11765: func (s *H264Settings) SetQualityLevel(v string) *H264Settings {",
          "11766:  s.QualityLevel = &v",
          "11767:  return s",
          "11768: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "20833:  return s",
          "20834: }",
          "20837: type TimecodeConfig struct {",
          "20838:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21008: type TemporalFilterSettings struct {",
          "21009:  _ struct{} `type:\"structure\"`",
          "21014:  PostFilterSharpening *string `locationName:\"postFilterSharpening\" type:\"string\" enum:\"TemporalFilterPostFilterSharpening\"`",
          "21017:  Strength *string `locationName:\"strength\" type:\"string\" enum:\"TemporalFilterStrength\"`",
          "21018: }",
          "21021: func (s TemporalFilterSettings) String() string {",
          "21022:  return awsutil.Prettify(s)",
          "21023: }",
          "21026: func (s TemporalFilterSettings) GoString() string {",
          "21027:  return s.String()",
          "21028: }",
          "21031: func (s *TemporalFilterSettings) SetPostFilterSharpening(v string) *TemporalFilterSettings {",
          "21032:  s.PostFilterSharpening = &v",
          "21033:  return s",
          "21034: }",
          "21037: func (s *TemporalFilterSettings) SetStrength(v string) *TemporalFilterSettings {",
          "21038:  s.Strength = &v",
          "21039:  return s",
          "21040: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "22986:  FixedAfdAfd1111 = \"AFD_1111\"",
          "22987: )",
          "22990: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23196: const (",
          "23198:  Fmp4NielsenId3BehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23201:  Fmp4NielsenId3BehaviorPassthrough = \"PASSTHROUGH\"",
          "23202: )",
          "23205: const (",
          "23207:  Fmp4TimedMetadataBehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23210:  Fmp4TimedMetadataBehaviorPassthrough = \"PASSTHROUGH\"",
          "23211: )",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "23220:  H264ProfileMain = \"MAIN\"",
          "23221: )",
          "23224: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23448: const (",
          "23450:  H264QualityLevelEnhancedQuality = \"ENHANCED_QUALITY\"",
          "23453:  H264QualityLevelStandardQuality = \"STANDARD_QUALITY\"",
          "23454: )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "24567:  SmoothGroupSparseTrackTypeScte35 = \"SCTE_35\"",
          "24568: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24803:  SmoothGroupSparseTrackTypeScte35WithoutSegmentation = \"SCTE_35_WITHOUT_SEGMENTATION\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "24585:  SmoothGroupTimestampOffsetModeUseEventStartDate = \"USE_EVENT_START_DATE\"",
          "24586: )",
          "24589: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24825: const (",
          "24827:  TemporalFilterPostFilterSharpeningAuto = \"AUTO\"",
          "24830:  TemporalFilterPostFilterSharpeningDisabled = \"DISABLED\"",
          "24833:  TemporalFilterPostFilterSharpeningEnabled = \"ENABLED\"",
          "24834: )",
          "24837: const (",
          "24839:  TemporalFilterStrengthAuto = \"AUTO\"",
          "24842:  TemporalFilterStrengthStrength1 = \"STRENGTH_1\"",
          "24845:  TemporalFilterStrengthStrength10 = \"STRENGTH_10\"",
          "24848:  TemporalFilterStrengthStrength11 = \"STRENGTH_11\"",
          "24851:  TemporalFilterStrengthStrength12 = \"STRENGTH_12\"",
          "24854:  TemporalFilterStrengthStrength13 = \"STRENGTH_13\"",
          "24857:  TemporalFilterStrengthStrength14 = \"STRENGTH_14\"",
          "24860:  TemporalFilterStrengthStrength15 = \"STRENGTH_15\"",
          "24863:  TemporalFilterStrengthStrength16 = \"STRENGTH_16\"",
          "24866:  TemporalFilterStrengthStrength2 = \"STRENGTH_2\"",
          "24869:  TemporalFilterStrengthStrength3 = \"STRENGTH_3\"",
          "24872:  TemporalFilterStrengthStrength4 = \"STRENGTH_4\"",
          "24875:  TemporalFilterStrengthStrength5 = \"STRENGTH_5\"",
          "24878:  TemporalFilterStrengthStrength6 = \"STRENGTH_6\"",
          "24881:  TemporalFilterStrengthStrength7 = \"STRENGTH_7\"",
          "24884:  TemporalFilterStrengthStrength8 = \"STRENGTH_8\"",
          "24887:  TemporalFilterStrengthStrength9 = \"STRENGTH_9\"",
          "24888: )",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4325:   Name:       opListQueryLoggingConfigs,",
          "4326:   HTTPMethod: \"GET\",",
          "4327:   HTTPPath:   \"/2013-04-01/queryloggingconfig\",",
          "4328:  }",
          "4330:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4331:   Paginator: &request.Paginator{",
          "4332:    InputTokens:     []string{\"NextToken\"},",
          "4333:    OutputTokens:    []string{\"NextToken\"},",
          "4334:    LimitToken:      \"MaxResults\",",
          "4335:    TruncationToken: \"\",",
          "4336:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4387:  return out, req.Send()",
          "4388: }",
          "4390: const opListResourceRecordSets = \"ListResourceRecordSets\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4416: func (c *Route53) ListQueryLoggingConfigsPages(input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool) error {",
          "4417:  return c.ListQueryLoggingConfigsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "4418: }",
          "4427: func (c *Route53) ListQueryLoggingConfigsPagesWithContext(ctx aws.Context, input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool, opts ...request.Option) error {",
          "4428:  p := request.Pagination{",
          "4429:   NewRequest: func() (*request.Request, error) {",
          "4430:    var inCpy *ListQueryLoggingConfigsInput",
          "4431:    if input != nil {",
          "4432:     tmp := *input",
          "4433:     inCpy = &tmp",
          "4434:    }",
          "4435:    req, _ := c.ListQueryLoggingConfigsRequest(inCpy)",
          "4436:    req.SetContext(ctx)",
          "4437:    req.ApplyOptions(opts...)",
          "4438:    return req, nil",
          "4439:   },",
          "4440:  }",
          "4442:  for p.Next() {",
          "4443:   if !fn(p.Page().(*ListQueryLoggingConfigsOutput), !p.HasNextPage()) {",
          "4444:    break",
          "4445:   }",
          "4446:  }",
          "4448:  return p.Err()",
          "4449: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15131:  CloudWatchRegionCnNorth1 = \"cn-north-1\"",
          "15132: )",
          "15134: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15195:  CloudWatchRegionAfSouth1 = \"af-south-1\"",
          "15198:  CloudWatchRegionUsGovWest1 = \"us-gov-west-1\"",
          "15201:  CloudWatchRegionUsGovEast1 = \"us-gov-east-1\"",
          "15204:  CloudWatchRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15207:  CloudWatchRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "15338:  ResourceRecordSetRegionApSouth1 = \"ap-south-1\"",
          "15339: )",
          "15341: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15417:  ResourceRecordSetRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "15400:  VPCRegionMeSouth1 = \"me-south-1\"",
          "15403:  VPCRegionApSoutheast1 = \"ap-southeast-1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15482:  VPCRegionUsGovWest1 = \"us-gov-west-1\"",
          "15485:  VPCRegionUsGovEast1 = \"us-gov-east-1\"",
          "15488:  VPCRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15491:  VPCRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "15430:  VPCRegionCnNorth1 = \"cn-north-1\"",
          "15431: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15524:  VPCRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------"
        ],
        "service/route53/errors.go||service/route53/errors.go": [
          "File: service/route53/errors.go -> service/route53/errors.go"
        ],
        "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go": [
          "File: service/route53/route53iface/interface.go -> service/route53/route53iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:  ListQueryLoggingConfigsWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error)",
          "231:  ListQueryLoggingConfigsRequest(*route53.ListQueryLoggingConfigsInput) (*request.Request, *route53.ListQueryLoggingConfigsOutput)",
          "233:  ListResourceRecordSets(*route53.ListResourceRecordSetsInput) (*route53.ListResourceRecordSetsOutput, error)",
          "234:  ListResourceRecordSetsWithContext(aws.Context, *route53.ListResourceRecordSetsInput, ...request.Option) (*route53.ListResourceRecordSetsOutput, error)",
          "235:  ListResourceRecordSetsRequest(*route53.ListResourceRecordSetsInput) (*request.Request, *route53.ListResourceRecordSetsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:  ListQueryLoggingConfigsPages(*route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool) error",
          "234:  ListQueryLoggingConfigsPagesWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12681:  Status *AssociationStatus `type:\"structure\"`",
          "12684:  Targets []*Target `type:\"list\"`",
          "12685: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12703:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12808:  return s",
          "12809: }",
          "12812: func (s *AssociationDescription) SetTargets(v []*Target) *AssociationDescription {",
          "12813:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12834: func (s *AssociationDescription) SetSyncCompliance(v string) *AssociationDescription {",
          "12835:  s.SyncCompliance = &v",
          "12836:  return s",
          "12837: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "13536:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "13540:  Targets []*Target `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13578:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "13622:  return s",
          "13623: }",
          "13626: func (s *AssociationVersionInfo) SetTargets(v []*Target) *AssociationVersionInfo {",
          "13627:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13668: func (s *AssociationVersionInfo) SetSyncCompliance(v string) *AssociationVersionInfo {",
          "13669:  s.SyncCompliance = &v",
          "13670:  return s",
          "13671: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16368:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16371:  Targets []*Target `type:\"list\"`",
          "16372: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16427:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16487:  return s",
          "16488: }",
          "16491: func (s *CreateAssociationBatchRequestEntry) SetTargets(v []*Target) *CreateAssociationBatchRequestEntry {",
          "16492:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16550: func (s *CreateAssociationBatchRequestEntry) SetSyncCompliance(v string) *CreateAssociationBatchRequestEntry {",
          "16551:  s.SyncCompliance = &v",
          "16552:  return s",
          "16553: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16578:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16582:  Targets []*Target `type:\"list\"`",
          "16583: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16657:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "16698:  return s",
          "16699: }",
          "16702: func (s *CreateAssociationInput) SetTargets(v []*Target) *CreateAssociationInput {",
          "16703:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16784: func (s *CreateAssociationInput) SetSyncCompliance(v string) *CreateAssociationInput {",
          "16785:  s.SyncCompliance = &v",
          "16786:  return s",
          "16787: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "37312:  ResourceType *string `min:\"1\" type:\"string\" required:\"true\"`",
          "37313: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37445:  UploadType *string `type:\"string\" enum:\"ComplianceUploadType\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "37407:  return s",
          "37408: }",
          "37410: type PutComplianceItemsOutput struct {",
          "37411:  _ struct{} `type:\"structure\"`",
          "37412: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37544: func (s *PutComplianceItemsInput) SetUploadType(v string) *PutComplianceItemsInput {",
          "37545:  s.UploadType = &v",
          "37546:  return s",
          "37547: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "42749:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "42752:  Targets []*Target `type:\"list\"`",
          "42753: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42901:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "42874:  return s",
          "42875: }",
          "42878: func (s *UpdateAssociationInput) SetTargets(v []*Target) *UpdateAssociationInput {",
          "42879:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43030: func (s *UpdateAssociationInput) SetSyncCompliance(v string) *UpdateAssociationInput {",
          "43031:  s.SyncCompliance = &v",
          "43032:  return s",
          "43033: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "44899:  AssociationFilterKeyAssociationName = \"AssociationName\"",
          "44900: )",
          "44902: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45077:  AssociationFilterKeyResourceGroupName = \"ResourceGroupName\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "44921:  AssociationStatusNameFailed = \"Failed\"",
          "44922: )",
          "44924: const (",
          "44926:  AttachmentHashTypeSha256 = \"Sha256\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45102: const (",
          "45104:  AssociationSyncComplianceAuto = \"AUTO\"",
          "45107:  AssociationSyncComplianceManual = \"MANUAL\"",
          "45108: )",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "45139:  ComplianceStatusNonCompliant = \"NON_COMPLIANT\"",
          "45140: )",
          "45142: const (",
          "45144:  ConnectionStatusConnected = \"Connected\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45328: const (",
          "45330:  ComplianceUploadTypeComplete = \"COMPLETE\"",
          "45333:  ComplianceUploadTypePartial = \"PARTIAL\"",
          "45334: )",
          "",
          "---------------"
        ],
        "service/ssm/doc.go||service/ssm/doc.go": [
          "File: service/ssm/doc.go -> service/ssm/doc.go"
        ],
        "service/ssm/errors.go||service/ssm/errors.go": [
          "File: service/ssm/errors.go -> service/ssm/errors.go"
        ]
      }
    }
  ]
}