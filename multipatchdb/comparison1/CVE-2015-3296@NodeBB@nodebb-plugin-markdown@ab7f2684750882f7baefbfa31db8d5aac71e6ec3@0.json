{
  "cve_id": "CVE-2015-3296",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in NodeBB before 0.7 allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) javascript: or (2) data: URLs.",
  "repo": "NodeBB/nodebb-plugin-markdown",
  "patch_hash": "ab7f2684750882f7baefbfa31db8d5aac71e6ec3",
  "patch_info": {
    "commit_hash": "ab7f2684750882f7baefbfa31db8d5aac71e6ec3",
    "repo": "NodeBB/nodebb-plugin-markdown",
    "commit_url": "https://github.com/NodeBB/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3",
    "files": [
      "index.js",
      "package.json"
    ],
    "message": "updated plugin to use markdown-it instead of remarkable, and updated validateLink method to discard all data-uris, until a solution is developed upstream.",
    "before_after_code_files": [
      "index.js||index.js"
    ]
  },
  "patch_diff": {
    "index.js||index.js": [
      "File: index.js -> index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: (function() {",
      "2:  \"use strict\";",
      "5:   fs = require('fs'),",
      "6:   path = require('path'),",
      "7:   url = require('url'),",
      "",
      "[Removed Lines]",
      "4:  var Remarkable = require('remarkable'),",
      "",
      "[Added Lines]",
      "4:  var MarkdownIt = require('markdown-it'),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "67:      _self.highlight = _self.config.highlight || true;",
      "68:      delete _self.config.highlight;",
      "71:     });",
      "72:    },",
      "",
      "[Removed Lines]",
      "70:      parser = new Remarkable(_self.config);",
      "",
      "[Added Lines]",
      "70:      parser = new MarkdownIt(_self.config);",
      "73:      parser.validateLink = function(url) {",
      "74:       var BAD_PROTOCOLS    = [ 'vbscript', 'javascript', 'file', 'data' ];",
      "75:       var str = url.trim().toLowerCase();",
      "77:       if (str.indexOf(':') >= 0 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) >= 0) {",
      "78:        return false;",
      "79:       }",
      "80:       return true;",
      "81:      }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0d5b38570330df73778f91c9f109c6f314336b4e",
      "candidate_info": {
        "commit_hash": "0d5b38570330df73778f91c9f109c6f314336b4e",
        "repo": "NodeBB/nodebb-plugin-markdown",
        "commit_url": "https://github.com/NodeBB/nodebb-plugin-markdown/commit/0d5b38570330df73778f91c9f109c6f314336b4e",
        "files": [
          "index.js",
          "package.json",
          "plugin.json"
        ],
        "message": "Merge branch 'master' of github.com:julianlam/nodebb-plugin-markdown\n\nConflicts:\n\tindex.js",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:        } else {",
          "47:        }",
          "48:       }",
          "49:      }",
          "90:     });",
          "93:    },",
          "110:      });",
          "111:     }",
          "112:    }",
          "",
          "[Removed Lines]",
          "1: var marked = require('marked'),",
          "2:  pygmentize = require('pygmentize-bundled'),",
          "3:  fs = require('fs'),",
          "4:  path = require('path'),",
          "5:  async = require('async'),",
          "6:  meta = module.parent.require('./meta'),",
          "7:  Markdown = {",
          "8:   config: {},",
          "9:   onLoad: function(app, middleware, controllers) {",
          "10:    function render(req, res, next) {",
          "11:     res.render('admin/plugins/markdown', {});",
          "12:    }",
          "14:    app.get('/admin/plugins/markdown', middleware.admin.buildHeader, render);",
          "15:    app.get('/api/admin/plugins/markdown', render);",
          "16:   },",
          "17:   init: function() {",
          "19:    var _self = this,",
          "20:     fields = [",
          "21:      'gfm', 'highlight', 'tables', 'breaks', 'pedantic',",
          "22:      'sanitize', 'smartLists', 'smartypants', 'langPrefix'",
          "23:     ],",
          "24:     defaults = {",
          "25:      'gfm': true,",
          "26:      'highlight': true,",
          "27:      'tables': true,",
          "28:      'breaks': true,",
          "29:      'pedantic': false,",
          "30:      'sanitize': true,",
          "31:      'smartLists': true,",
          "32:      'smartypants': false,",
          "33:      'langPrefix': 'lang-'",
          "34:     };",
          "36:    meta.settings.get('markdown', function(err, options) {",
          "37:     for(var field in options) {",
          "38:      if (options.hasOwnProperty(field)) {",
          "40:       if (!options[field]) {",
          "41:        _self.config[field] = defaults[field];",
          "42:       } else {",
          "43:        if (field !== 'langPrefix') {",
          "44:         _self.config[field] = options[field] === 'on' ? true : false;",
          "46:         _self.config[field] = options[field];",
          "50:     }",
          "53:     if (_self.config.highlight) {",
          "54:      _self.config.highlight = function (code, lang, callback) {",
          "55:       pygmentize({",
          "56:        lang: lang,",
          "57:        format: 'html',",
          "58:        options: {",
          "59:         nowrap: 'true'",
          "60:        }",
          "61:       }, code, function (err, result) {",
          "62:        if(err) {",
          "63:         return callback(err);",
          "64:        }",
          "66:        if (result) {",
          "67:         return callback(null, result.toString());",
          "68:        }",
          "69:        callback(null, code);",
          "70:       });",
          "71:      };",
          "72:     }",
          "74:     marked.setOptions(_self.config);",
          "75:    });",
          "76:   },",
          "77:   markdownify: function(raw, callback) {",
          "78:    return marked(raw, callback);",
          "79:   },",
          "80:   renderHelp: function(helpContent, callback) {",
          "81:    helpContent += \"<h2>Markdown</h2><p>This forum is powered by Markdown. For full documentation, <a href=\\\"http://daringfireball.net/projects/markdown/syntax\\\">click here</a></p>\";",
          "82:    callback(null, helpContent);",
          "83:   },",
          "84:   admin: {",
          "85:    menu: function(custom_header, callback) {",
          "86:     custom_header.plugins.push({",
          "87:      \"route\": '/plugins/markdown',",
          "88:      \"icon\": 'fa-edit',",
          "89:      \"name\": 'Markdown'",
          "92:     callback(null, custom_header);",
          "94:    activate: function(id) {",
          "95:     if (id === 'nodebb-plugin-markdown') {",
          "96:      var defaults = [",
          "97:       { field: 'gfm', value: 'on' },",
          "98:       { field: 'highlight', value: 'on' },",
          "99:       { field: 'tables', value: 'on' },",
          "100:       { field: 'breaks', value: 'on' },",
          "101:       { field: 'pedantic', value: 'off' },",
          "102:       { field: 'sanitize', value: 'on' },",
          "103:       { field: 'smartLists', value: 'on' },",
          "104:       { field: 'smartypants', value: 'off' },",
          "105:       { field: 'langPrefix', value: 'lang-' }",
          "106:      ];",
          "108:      async.each(defaults, function(optObj, next) {",
          "109:       meta.settings.setOnEmpty('markdown', optObj.field, optObj.value, next);",
          "113:   }",
          "114:  };",
          "116: Markdown.init();",
          "117: module.exports = Markdown;",
          "",
          "[Added Lines]",
          "1: (function() {",
          "2:  \"use strict\";",
          "4:  var marked = require('marked'),",
          "5:   pygmentize = require('pygmentize-bundled'),",
          "6:   fs = require('fs'),",
          "7:   path = require('path'),",
          "8:   async = module.parent.require('async'),",
          "9:   meta = module.parent.require('./meta'),",
          "11:   Markdown = {",
          "12:    config: {},",
          "13:    onLoad: function(app, middleware, controllers, callback) {",
          "14:     function render(req, res, next) {",
          "15:      res.render('admin/plugins/markdown', {});",
          "16:     }",
          "18:     app.get('/admin/plugins/markdown', middleware.admin.buildHeader, render);",
          "19:     app.get('/api/admin/plugins/markdown', render);",
          "21:     callback();",
          "22:    },",
          "23:    init: function() {",
          "25:     var _self = this,",
          "26:      fields = [",
          "27:       'gfm', 'highlight', 'tables', 'breaks', 'pedantic',",
          "28:       'sanitize', 'smartLists', 'smartypants', 'langPrefix'",
          "29:      ],",
          "30:      defaults = {",
          "31:       'gfm': true,",
          "32:       'highlight': true,",
          "33:       'tables': true,",
          "34:       'breaks': true,",
          "35:       'pedantic': false,",
          "36:       'sanitize': true,",
          "37:       'smartLists': true,",
          "38:       'smartypants': false,",
          "39:       'langPrefix': 'lang-'",
          "40:      };",
          "42:     meta.settings.get('markdown', function(err, options) {",
          "43:      for(var field in options) {",
          "44:       if (options.hasOwnProperty(field)) {",
          "46:        if (!options[field]) {",
          "47:         _self.config[field] = defaults[field];",
          "49:         if (field !== 'langPrefix') {",
          "50:          _self.config[field] = options[field] === 'on' ? true : false;",
          "51:         } else {",
          "52:          _self.config[field] = options[field];",
          "53:         }",
          "59:      if (_self.config.highlight) {",
          "60:       _self.config.highlight = function (code, lang, callback) {",
          "61:        pygmentize({",
          "62:         lang: lang,",
          "63:         format: 'html',",
          "64:         options: {",
          "65:          nowrap: 'true'",
          "66:         }",
          "67:        }, code, function (err, result) {",
          "68:         if(err) {",
          "69:          return callback(err);",
          "70:         }",
          "72:         if (result) {",
          "73:          return callback(null, result.toString());",
          "74:         }",
          "75:         callback(null, code);",
          "76:        });",
          "77:       };",
          "78:      }",
          "80:      marked.setOptions(_self.config);",
          "83:    markdownify: function(raw, callback) {",
          "84:     return marked(raw, callback);",
          "85:    },",
          "86:    renderHelp: function(helpContent, callback) {",
          "87:     helpContent += \"<h2>Markdown</h2><p>This forum is powered by Markdown. For full documentation, <a href=\\\"http://daringfireball.net/projects/markdown/syntax\\\">click here</a></p>\";",
          "88:     callback(null, helpContent);",
          "89:    },",
          "90:    admin: {",
          "91:     menu: function(custom_header, callback) {",
          "92:      custom_header.plugins.push({",
          "93:       \"route\": '/plugins/markdown',",
          "94:       \"icon\": 'fa-edit',",
          "95:       \"name\": 'Markdown'",
          "98:      callback(null, custom_header);",
          "99:     },",
          "100:     activate: function(id) {",
          "101:      if (id === 'nodebb-plugin-markdown') {",
          "102:       var defaults = [",
          "103:        { field: 'gfm', value: 'on' },",
          "104:        { field: 'highlight', value: 'on' },",
          "105:        { field: 'tables', value: 'on' },",
          "106:        { field: 'breaks', value: 'on' },",
          "107:        { field: 'pedantic', value: 'off' },",
          "108:        { field: 'sanitize', value: 'on' },",
          "109:        { field: 'smartLists', value: 'on' },",
          "110:        { field: 'smartypants', value: 'off' },",
          "111:        { field: 'langPrefix', value: 'lang-' }",
          "112:       ];",
          "114:       async.each(defaults, function(optObj, next) {",
          "115:        meta.settings.setOnEmpty('markdown', optObj.field, optObj.value, next);",
          "116:       });",
          "117:      }",
          "120:   };",
          "122:  Markdown.init();",
          "123:  module.exports = Markdown;",
          "124: })();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6870b5d5b6df2cc9699fc5393cfcef02f167cac9",
      "candidate_info": {
        "commit_hash": "6870b5d5b6df2cc9699fc5393cfcef02f167cac9",
        "repo": "NodeBB/nodebb-plugin-markdown",
        "commit_url": "https://github.com/NodeBB/nodebb-plugin-markdown/commit/6870b5d5b6df2cc9699fc5393cfcef02f167cac9",
        "files": [
          "index.js",
          "package.json"
        ],
        "message": "removed async dependency (using nodebb's now), and updated marked to use v0.3.2 -- closed nodebb/nodebb#1818",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:  pygmentize = require('pygmentize-bundled'),",
          "3:  fs = require('fs'),",
          "4:  path = require('path'),",
          "6:   meta = module.parent.require('./meta'),",
          "7:  Markdown = {",
          "8:   config: {},",
          "",
          "[Removed Lines]",
          "5:  async = require('async'),",
          "",
          "[Added Lines]",
          "5:  async = module.parent.require('async'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa2328459f465d864c8e1ecd020d9dd7f65f530b",
      "candidate_info": {
        "commit_hash": "fa2328459f465d864c8e1ecd020d9dd7f65f530b",
        "repo": "NodeBB/nodebb-plugin-markdown",
        "commit_url": "https://github.com/NodeBB/nodebb-plugin-markdown/commit/fa2328459f465d864c8e1ecd020d9dd7f65f530b",
        "files": [
          "index.js"
        ],
        "message": "linting",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:  fs = require('fs'),",
          "4:  path = require('path'),",
          "5:  async = require('async'),",
          "7:  Markdown = {",
          "8:   config: {},",
          "9:   onLoad: function(app, middleware, controllers) {",
          "",
          "[Removed Lines]",
          "6:   meta = module.parent.require('./meta'),",
          "",
          "[Added Lines]",
          "6:  meta = module.parent.require('./meta'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "167eb813ce8408964319cf611b053808da97f9fa",
      "candidate_info": {
        "commit_hash": "167eb813ce8408964319cf611b053808da97f9fa",
        "repo": "NodeBB/nodebb-plugin-markdown",
        "commit_url": "https://github.com/NodeBB/nodebb-plugin-markdown/commit/167eb813ce8408964319cf611b053808da97f9fa",
        "files": [
          "index.js",
          "package.json",
          "public/templates/admin/plugins/markdown.tpl"
        ],
        "message": "updated markdown plugin to use remarkable library, changed default code highlighting theme to \"railscasts.css\", closed #20",
        "before_after_code_files": [
          "index.js||index.js",
          "public/templates/admin/plugins/markdown.tpl||public/templates/admin/plugins/markdown.tpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: (function() {",
          "2:  \"use strict\";",
          "5:   fs = require('fs'),",
          "6:   path = require('path'),",
          "7:   url = require('url'),",
          "8:   async = module.parent.require('async'),",
          "9:   meta = module.parent.require('./meta'),",
          "10:   nconf = module.parent.require('nconf'),",
          "12:   Markdown = {",
          "13:    config: {},",
          "",
          "[Removed Lines]",
          "4:  var marked = require('marked'),",
          "",
          "[Added Lines]",
          "4:  var Remarkable = require('remarkable'),",
          "11:   parser,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:     app.get('/markdown/config', function(req, res) {",
          "24:      res.status(200).json({",
          "25:       highlight: Markdown.highlight ? 1 : 0,",
          "27:      });",
          "28:     });",
          "",
          "[Removed Lines]",
          "26:       theme: Markdown.config.highlightTheme || 'codepen-embed.css'",
          "",
          "[Added Lines]",
          "27:       theme: Markdown.config.highlightTheme || 'railscasts.css'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "36:     var _self = this,",
          "37:      fields = [",
          "40:      ],",
          "41:      defaults = {",
          "45:       'breaks': true,",
          "53:      };",
          "55:     meta.settings.get('markdown', function(err, options) {",
          "",
          "[Removed Lines]",
          "38:       'gfm', 'highlight', 'tables', 'breaks', 'pedantic',",
          "39:       'sanitize', 'smartLists', 'smartypants', 'langPrefix', 'headerPrefix'",
          "42:       'gfm': true,",
          "43:       'highlight': true,",
          "44:       'tables': true,",
          "46:       'pedantic': false,",
          "47:       'sanitize': true,",
          "48:       'smartLists': true,",
          "49:       'smartypants': false,",
          "50:       'noFollow': true,",
          "51:       'langPrefix': 'lang-',",
          "52:       'headerPrefix': 'md-header-'",
          "",
          "[Added Lines]",
          "39:       'html', 'xhtmlOut', 'breaks', 'langPrefix', 'linkify', 'typographer'",
          "42:       'html': false,",
          "43:       'xhtmlOut': true,",
          "45:       'langPrefix': 'language-',",
          "46:       'linkify': true,",
          "47:       'typographer': false,",
          "48:       'highlight': true,",
          "49:       'highlightTheme': 'railscasts.css'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "66:       }",
          "67:      }",
          "70:      delete _self.config.highlight;",
          "73:     });",
          "74:    },",
          "75:    loadThemes: function() {",
          "",
          "[Removed Lines]",
          "69:      _self.highlight = _self.config.highlight;",
          "72:      marked.setOptions(_self.config);",
          "",
          "[Added Lines]",
          "66:      _self.highlight = _self.config.highlight || true;",
          "69:      parser = new Remarkable(_self.config);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "85:     });",
          "86:    },",
          "87:    markdownify: function(raw, callback) {",
          "91:    },",
          "110:    renderHelp: function(helpContent, callback) {",
          "111:     helpContent += \"<h2>Markdown</h2><p>This forum is powered by Markdown. For full documentation, <a href=\\\"http://daringfireball.net/projects/markdown/syntax\\\">click here</a></p>\";",
          "112:     callback(null, helpContent);",
          "",
          "[Removed Lines]",
          "88:     marked(raw, function(err, html) {",
          "89:      callback(err, Markdown.addNofollow(html));",
          "90:     });",
          "92:    addNofollow: function(html) {",
          "93:     if (Markdown.config.noFollow) {",
          "94:      var parsed,",
          "95:       baseHost = url.parse(nconf.get('base_url')).host;",
          "97:      html = html.replace(/<a href=\"([^\"]+)/g, function(match, anchorUrl) {",
          "98:       parsed = url.parse(anchorUrl, false, true);",
          "99:       if (parsed.host !== null && baseHost !== parsed.host) {",
          "100:        return '<a rel=\"nofollow\" href=\"' + anchorUrl;",
          "101:       } else {",
          "102:        return match;",
          "103:       }",
          "104:      });",
          "105:      return html;",
          "106:     } else {",
          "107:      return html;",
          "108:     }",
          "109:    },",
          "",
          "[Added Lines]",
          "85:     callback(undefined, parser.render(raw));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "120:      });",
          "122:      callback(null, custom_header);",
          "143:     }",
          "144:    }",
          "145:   };",
          "",
          "[Removed Lines]",
          "123:     },",
          "124:     activate: function(id) {",
          "125:      if (id === 'nodebb-plugin-markdown') {",
          "126:       var defaults = [",
          "127:        { field: 'gfm', value: 'on' },",
          "128:        { field: 'highlight', value: 'on' },",
          "129:        { field: 'tables', value: 'on' },",
          "130:        { field: 'breaks', value: 'on' },",
          "131:        { field: 'pedantic', value: 'off' },",
          "132:        { field: 'sanitize', value: 'on' },",
          "133:        { field: 'smartLists', value: 'on' },",
          "134:        { field: 'smartypants', value: 'off' },",
          "135:        { field: 'langPrefix', value: 'lang-' },",
          "136:        { field: 'headerPrefix', value: 'md-header-'}",
          "137:       ];",
          "139:       async.each(defaults, function(optObj, next) {",
          "140:        meta.settings.setOnEmpty('markdown', optObj.field, optObj.value, next);",
          "141:       });",
          "142:      }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "public/templates/admin/plugins/markdown.tpl||public/templates/admin/plugins/markdown.tpl": [
          "File: public/templates/admin/plugins/markdown.tpl -> public/templates/admin/plugins/markdown.tpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:    <div class=\"panel-body\">",
          "6:     <form class=\"form markdown-settings\">",
          "7:      <div class=\"row\">",
          "9:        <div class=\"form-group\">",
          "13:         </label>",
          "14:        </div>",
          "15:        <div class=\"form-group\">",
          "",
          "[Removed Lines]",
          "8:       <div class=\"col-sm-4\">",
          "10:         <label for=\"gfm\">",
          "11:          <input type=\"checkbox\" name=\"gfm\" id=\"gfm\" />",
          "12:          Use <a href=\"http://github.github.com/github-flavored-markdown/\">Github flavoured Markdown</a>",
          "",
          "[Added Lines]",
          "8:       <div class=\"col-lg-4 col-md-6\">",
          "10:         <label for=\"xhtmlOut\">",
          "11:          <input type=\"checkbox\" name=\"xhtmlOut\" id=\"xhtmlOut\" />",
          "12:          Use '/' to close single tags (<code>&lt;br /&gt;</code>)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:          <!-- END themes -->",
          "27:         </select>",
          "28:        </div>",
          "35:        <div class=\"form-group\">",
          "36:         <label for=\"breaks\">",
          "37:          <input type=\"checkbox\" name=\"breaks\" id=\"breaks\" />",
          "",
          "[Removed Lines]",
          "29:        <div class=\"form-group\">",
          "30:         <label for=\"tables\">",
          "31:          <input type=\"checkbox\" name=\"tables\" id=\"tables\" />",
          "32:          Parse <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#wiki-tables\">GFM Table Syntax</a>",
          "33:         </label>",
          "34:        </div>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:         </label>",
          "40:        </div>",
          "41:       </div>",
          "43:        <div class=\"form-group\">",
          "47:         </label>",
          "48:         <div class=\"alert alert-warning\">",
          "49:          <strong><i class=\"icon-warning-sign\"></i> Careful!</strong>",
          "50:          <p>",
          "55:          </p>",
          "56:         </div>",
          "57:        </div>",
          "59:         <label for=\"noFollow\">",
          "60:          <input type=\"checkbox\" name=\"noFollow\" id=\"noFollow\" />",
          "61:          Instruct search engines to ignore off-site links (<code>rel=&quot;nofollow&quot;</code>)",
          "62:         </label>",
          "64:       </div>",
          "66:        <div class=\"form-group\">",
          "70:         </label>",
          "71:        </div>",
          "72:        <div class=\"form-group\">",
          "82:         </label>",
          "83:        </div>",
          "84:        <div class=\"form-group\">",
          "85:         <label for=\"langPrefix\">",
          "86:          Prefix for <code>code</code> blocks",
          "87:         </label>",
          "89:        </div>",
          "90:       </div>",
          "91:      </div>",
          "",
          "[Removed Lines]",
          "42:       <div class=\"col-sm-4\">",
          "44:         <label for=\"sanitize\">",
          "45:          <input type=\"checkbox\" name=\"sanitize\" id=\"sanitize\" />",
          "46:          Sanitize HTML",
          "51:           HTML sanitization is an important part of ensuring that your users",
          "52:           do not run arbitrary javascript or alter parts of the page that were",
          "53:           not meant to be altered. If this option is unchecked, make sure you",
          "54:           are aware of the consequences!",
          "58:        <div class=\"form-group\">",
          "63:        </div>",
          "65:       <div class=\"col-sm-4\">",
          "67:         <label for=\"pedantic\">",
          "68:          <input type=\"checkbox\" name=\"pedantic\" id=\"pedantic\" />",
          "69:          Be as true to the Markdown specification as possible (in most cases, this is not required)",
          "73:         <label for=\"smartLists\">",
          "74:          <input type=\"checkbox\" name=\"smartLists\" id=\"smartLists\" />",
          "75:          Use smarter list behaviour",
          "76:         </label>",
          "77:        </div>",
          "78:        <div class=\"form-group\">",
          "79:         <label for=\"smartypants\">",
          "80:          <input type=\"checkbox\" name=\"smartypants\" id=\"smartypants\" />",
          "81:          Use \"smart\" typographic punctuation for things like quotes and dashes.",
          "88:         <input class=\"form-control\" placeholder=\"lang-\" type=\"text\" name=\"langPrefix\" id=\"langPrefix\" />",
          "",
          "[Added Lines]",
          "36:       <div class=\"col-lg-4 col-md-6\">",
          "38:         <label for=\"html\">",
          "39:          <input type=\"checkbox\" name=\"html\" id=\"html\" />",
          "40:          Allow HTML",
          "45:           Automatic HTML sanitization is an important part of ensuring that",
          "46:           your users do not run arbitrary javascript or alter parts of the",
          "47:           page that were not meant to be altered. If this option is checked,",
          "48:           beware the consequences!",
          "52:        <!-- <div class=\"form-group\">",
          "57:        </div> -->",
          "59:       <div class=\"col-lg-4 col-md-6\">",
          "61:         <label for=\"linkify\">",
          "62:          <input type=\"checkbox\" name=\"linkify\" id=\"linkify\" />",
          "63:          Autoconvert url-like texts to links",
          "67:         <label for=\"typographer\">",
          "68:          <input type=\"checkbox\" name=\"typographer\" id=\"typographer\" />",
          "69:          Enable smartypants and other sweet transforms (e.g. <code>(c)</code> &rarr; <code>&copy;</code>)",
          "76:         <input class=\"form-control\" placeholder=\"language-\" type=\"text\" name=\"langPrefix\" id=\"langPrefix\" />",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:  require(['settings'], function(Settings) {",
          "108:   Settings.load('markdown', $('.markdown-settings'), function(err, settings) {",
          "109:    var defaults = {",
          "113:     'breaks': true,",
          "121:    };",
          "",
          "[Removed Lines]",
          "110:     'gfm': true,",
          "111:     'highlight': true,",
          "112:     'tables': true,",
          "114:     'pedantic': false,",
          "115:     'sanitize': true,",
          "116:     'smartLists': true,",
          "117:     'smartypants': false,",
          "118:     'noFollow': true,",
          "119:     'langPrefix': 'lang-',",
          "120:     'headerPrefix': 'md-header-'",
          "",
          "[Added Lines]",
          "109:     'html': false,",
          "110:     'xhtmlOut': true,",
          "112:     'langPrefix': 'language-',",
          "113:     'linkify': true,",
          "114:     'typographer': false,",
          "115:     'highlight': true,",
          "116:     'highlightTheme': 'railscasts.css'",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "126:      if (typeof defaults[setting] === 'boolean') {",
          "127:       $('#' + setting).prop('checked', defaults[setting]);",
          "128:      } else {",
          "130:      }",
          "131:     }",
          "132:    }",
          "",
          "[Removed Lines]",
          "129:       $('#' + setting).value = defaults[setting];",
          "",
          "[Added Lines]",
          "125:       $('#' + setting).val(defaults[setting]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f58ae91b127ad77eedfa77dcf900bd2c3e38f62",
      "candidate_info": {
        "commit_hash": "6f58ae91b127ad77eedfa77dcf900bd2c3e38f62",
        "repo": "NodeBB/nodebb-plugin-markdown",
        "commit_url": "https://github.com/NodeBB/nodebb-plugin-markdown/commit/6f58ae91b127ad77eedfa77dcf900bd2c3e38f62",
        "files": [
          "index.js",
          "plugin.json"
        ],
        "message": "using new filter:app.init hook",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:   meta = module.parent.require('./meta'),",
          "7:  Markdown = {",
          "8:   config: {},",
          "10:    function render(req, res, next) {",
          "11:     res.render('admin/plugins/markdown', {});",
          "12:    }",
          "14:    app.get('/admin/plugins/markdown', middleware.admin.buildHeader, render);",
          "15:    app.get('/api/admin/plugins/markdown', render);",
          "16:   },",
          "17:   init: function() {",
          "",
          "[Removed Lines]",
          "9:   onLoad: function(app, middleware, controllers) {",
          "",
          "[Added Lines]",
          "9:   onLoad: function(app, middleware, controllers, callback) {",
          "17:    callback();",
          "",
          "---------------"
        ]
      }
    }
  ]
}