{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8aa10d3d0dbaea9a77e04dff508cb32ed78fbe57",
      "candidate_info": {
        "commit_hash": "8aa10d3d0dbaea9a77e04dff508cb32ed78fbe57",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8aa10d3d0dbaea9a77e04dff508cb32ed78fbe57",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887329 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:         if (items instanceof COSString)",
          "170:         {",
          "172:             array.add(((COSString) items).getString());",
          "173:             return array;",
          "174:         }",
          "",
          "[Removed Lines]",
          "171:             List<String> array = new ArrayList<String>();",
          "",
          "[Added Lines]",
          "171:             List<String> array = new ArrayList<String>(1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4ae408d798c5937f3763b4e67dc6a896e2576ef",
      "candidate_info": {
        "commit_hash": "d4ae408d798c5937f3763b4e67dc6a896e2576ef",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d4ae408d798c5937f3763b4e67dc6a896e2576ef",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ],
        "message": "PDFBOX-4892: fix typo, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889072 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ]
      }
    },
    {
      "candidate_hash": "86dead10986e9a05066589eea5c302421c824c1e",
      "candidate_info": {
        "commit_hash": "86dead10986e9a05066589eea5c302421c824c1e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/86dead10986e9a05066589eea5c302421c824c1e",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890736 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "658:             destCatalog.setPageMode(srcPageMode);",
          "659:         }",
          "662:         COSDictionary srcLabels = srcCatalog.getCOSObject().getCOSDictionary(COSName.PAGE_LABELS);",
          "663:         if (srcLabels != null)",
          "664:         {",
          "665:             int destPageCount = destination.getNumberOfPages();",
          "666:             COSArray destNums;",
          "667:             if (destLabels == null)",
          "668:             {",
          "669:                 destLabels = new COSDictionary();",
          "",
          "[Removed Lines]",
          "661:         COSDictionary destLabels = destCatalog.getCOSObject().getCOSDictionary(COSName.PAGE_LABELS);",
          "",
          "[Added Lines]",
          "666:             COSDictionary destLabels = destCatalog.getCOSObject().getCOSDictionary(COSName.PAGE_LABELS);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "33e221d0f24f681ab09126eaab652e861fa40686",
      "candidate_info": {
        "commit_hash": "33e221d0f24f681ab09126eaab652e861fa40686",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/33e221d0f24f681ab09126eaab652e861fa40686",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java"
        ],
        "message": "PDFBOX-4971: refactor; replace unsupported attribute with supported feature\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882134 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java||debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java||debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java -> debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.io.ByteArrayOutputStream;",
          "27: import java.io.IOException;",
          "28: import java.io.InputStream;",
          "30: import java.io.UnsupportedEncodingException;",
          "31: import java.util.List;",
          "32: import java.util.Map;",
          "",
          "[Removed Lines]",
          "29: import java.io.InputStreamReader;",
          "",
          "[Added Lines]",
          "29: import java.io.StringWriter;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: import javax.swing.text.StyleContext;",
          "47: import javax.swing.text.StyledDocument;",
          "48: import javax.xml.XMLConstants;",
          "52: import javax.xml.transform.OutputKeys;",
          "53: import javax.xml.transform.Transformer;",
          "54: import javax.xml.transform.TransformerConfigurationException;",
          "",
          "[Removed Lines]",
          "49: import javax.xml.parsers.DocumentBuilder;",
          "50: import javax.xml.parsers.DocumentBuilderFactory;",
          "51: import javax.xml.parsers.ParserConfigurationException;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76: import org.apache.pdfbox.pdfparser.PDFStreamParser;",
          "77: import org.apache.pdfbox.pdmodel.PDResources;",
          "78: import org.apache.pdfbox.util.Charsets;",
          "79: import org.w3c.dom.Document;",
          "",
          "[Removed Lines]",
          "80: import org.xml.sax.InputSource;",
          "81: import org.xml.sax.SAXException;",
          "",
          "[Added Lines]",
          "76: import org.apache.pdfbox.util.XMLUtil;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "136:     private final Stream stream;",
          "137:     private ToolTipController tTController;",
          "138:     private PDResources resources;",
          "",
          "[Removed Lines]",
          "139:     private final boolean isContentStream;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "150:     public StreamPane(COSStream cosStream, boolean isContentStream, boolean isThumb,",
          "151:                       COSDictionary resourcesDic) throws IOException",
          "152:     {",
          "155:         this.stream = new Stream(cosStream, isThumb);",
          "156:         if (resourcesDic != null)",
          "157:         {",
          "",
          "[Removed Lines]",
          "153:         this.isContentStream = isContentStream;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "408:             StyledDocument docu = new DefaultStyledDocument();",
          "409:             if (inputStream != null)",
          "410:             {",
          "413:                 try",
          "414:                 {",
          "429:                     TransformerFactory transformerFactory = TransformerFactory.newInstance();",
          "430:                     transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
          "432:                     transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");",
          "433:                     Transformer transformer = transformerFactory.newTransformer();",
          "434:                     transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");",
          "437:                     DOMSource source = new DOMSource(doc);",
          "438:                     transformer.transform(source, result);",
          "444:                 }",
          "445:                 catch (UnsupportedEncodingException ex)",
          "446:                 {",
          "447:                     LOG.error(ex.getMessage(), ex);",
          "448:                 }",
          "453:                 catch (TransformerConfigurationException ex)",
          "454:                 {",
          "455:                     LOG.error(ex.getMessage(), ex);",
          "",
          "[Removed Lines]",
          "411:                 ByteArrayOutputStream baos = new ByteArrayOutputStream();",
          "415:                     InputStreamReader inputStreamReader = new InputStreamReader(inputStream, encoding);",
          "416:                     DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();",
          "417:                     builderFactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\",",
          "418:                             true);",
          "419:                     builderFactory.setFeature(\"http://xml.org/sax/features/external-general-entities\",",
          "420:                             false);",
          "421:                     builderFactory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\",",
          "422:                             false);",
          "423:                     builderFactory.setFeature(",
          "424:                             \"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);",
          "425:                     builderFactory.setXIncludeAware(false);",
          "426:                     builderFactory.setExpandEntityReferences(false);",
          "427:                     DocumentBuilder builder = builderFactory.newDocumentBuilder();",
          "428:                     Document doc = builder.parse(new InputSource(inputStreamReader));",
          "431:                     transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");",
          "435:                     transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", Integer.toString(1));",
          "436:                     StreamResult result = new StreamResult(baos);",
          "439:                     docu.insertString(0, new String(baos.toByteArray(), Charsets.UTF_8), null);",
          "440:                 }",
          "441:                 catch (ParserConfigurationException ex)",
          "442:                 {",
          "443:                     LOG.error(ex.getMessage(), ex);",
          "449:                 catch (SAXException ex)",
          "450:                 {",
          "451:                     LOG.error(ex.getMessage(), ex);",
          "452:                 }",
          "",
          "[Added Lines]",
          "406:                     Document doc = XMLUtil.parse(inputStream);",
          "408:                     transformerFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
          "413:                     transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"1\");",
          "414:                     StringWriter sw = new StringWriter();",
          "415:                     StreamResult result = new StreamResult(sw);",
          "418:                     docu.insertString(0, sw.toString(), null);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c9c5474411fb08ffb7f9773155bb8f269a4e2e7",
      "candidate_info": {
        "commit_hash": "4c9c5474411fb08ffb7f9773155bb8f269a4e2e7",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4c9c5474411fb08ffb7f9773155bb8f269a4e2e7",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887221 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "498:     private List<COSBase> toCOSObjectList( Collection<?> list )",
          "499:     {",
          "501:         for (Object next : list)",
          "502:         {",
          "503:             if( next instanceof String )",
          "",
          "[Removed Lines]",
          "500:         List<COSBase> cosObjects = new ArrayList<COSBase>();",
          "",
          "[Added Lines]",
          "500:         List<COSBase> cosObjects = new ArrayList<COSBase>(list.size());",
          "",
          "---------------"
        ]
      }
    }
  ]
}