{
  "cve_id": "CVE-2022-20618",
  "cve_desc": "A missing permission check in Jenkins Bitbucket Branch Source Plugin 737.vdf9dc06105be and earlier allows attackers with Overall/Read access to enumerate credentials IDs of credentials stored in Jenkins.",
  "repo": "jenkinsci/bitbucket-branch-source-plugin",
  "patch_hash": "467ed6c94af8735c4755d53145a54325ae82d073",
  "patch_info": {
    "commit_hash": "467ed6c94af8735c4755d53145a54325ae82d073",
    "repo": "jenkinsci/bitbucket-branch-source-plugin",
    "commit_url": "https://github.com/jenkinsci/bitbucket-branch-source-plugin/commit/467ed6c94af8735c4755d53145a54325ae82d073",
    "files": [
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
      "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java",
      "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2467Test.java"
    ],
    "message": "SECURITY-2033",
    "before_after_code_files": [
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
      "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
      "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java",
      "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2467Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2467Test.java"
    ]
  },
  "patch_diff": {
    "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java": [
      "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: import hudson.model.Queue;",
      "36: import hudson.model.queue.Tasks;",
      "37: import hudson.security.ACL;",
      "38: import hudson.util.FormValidation;",
      "39: import hudson.util.ListBoxModel;",
      "40: import jenkins.authentication.tokens.api.AuthenticationTokens;",
      "41: import jenkins.scm.api.SCMSourceOwner;",
      "42: import org.apache.commons.lang.StringUtils;",
      "43: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "38: import hudson.security.AccessControlled;",
      "42: import jenkins.model.Jenkins;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "80:         @QueryParameter String serverUrl) {",
      "81:         StandardListBoxModel result = new StandardListBoxModel();",
      "82:         result.includeEmptyValue();",
      "83:         result.includeMatchingAs(",
      "84:                 context instanceof Queue.Task",
      "85:                         ? Tasks.getDefaultAuthenticationOf((Queue.Task) context)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "85:         AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
      "86:         if (!contextToCheck.hasPermission(CredentialsProvider.VIEW)) {",
      "87:             return result;",
      "88:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "97:         @QueryParameter String value,",
      "98:         @QueryParameter String serverUrl) {",
      "99:         if (!value.isEmpty()) {",
      "100:             if (CredentialsMatchers.firstOrNull(",
      "101:                     CredentialsProvider.lookupCredentials(",
      "102:                             StandardCertificateCredentials.class,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "106:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
      "107:             contextToCheck.checkPermission(CredentialsProvider.VIEW);",
      "",
      "---------------"
    ],
    "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java": [
      "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "43: import hudson.Util;",
      "44: import hudson.console.HyperlinkNote;",
      "45: import hudson.model.Action;",
      "46: import hudson.model.TaskListener;",
      "47: import hudson.plugins.git.GitSCM;",
      "48: import hudson.util.FormValidation;",
      "49: import hudson.util.ListBoxModel;",
      "50: import java.io.IOException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46: import hudson.model.Item;",
      "49: import hudson.security.AccessControlled;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "607:         }",
      "609:         @SuppressWarnings(\"unused\") // used By stapler",
      "611:             return BitbucketEndpointConfiguration.get().getEndpointItems();",
      "612:         }",
      "",
      "[Removed Lines]",
      "610:         public ListBoxModel doFillServerUrlItems() {",
      "",
      "[Added Lines]",
      "612:         public ListBoxModel doFillServerUrlItems(@AncestorInPath SCMSourceOwner context) {",
      "613:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
      "614:             if (!contextToCheck.hasPermission(Item.CONFIGURE)) {",
      "615:                 return new ListBoxModel();",
      "616:             }",
      "",
      "---------------"
    ],
    "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java": [
      "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "61: import hudson.model.TaskListener;",
      "62: import hudson.plugins.git.GitSCM;",
      "63: import hudson.scm.SCM;",
      "64: import hudson.util.FormFillFailure;",
      "65: import hudson.util.FormValidation;",
      "66: import hudson.util.ListBoxModel;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "64: import hudson.security.AccessControlled;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "122: import org.kohsuke.stapler.DataBoundConstructor;",
      "123: import org.kohsuke.stapler.DataBoundSetter;",
      "124: import org.kohsuke.stapler.QueryParameter;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "126: import org.kohsuke.stapler.interceptor.RequirePOST;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1203:         }",
      "1205:         @SuppressWarnings(\"unused\") // used By stapler",
      "1207:             if (BitbucketEndpointConfiguration.get().findEndpoint(value) == null) {",
      "1208:                 return FormValidation.error(\"Unregistered Server: \" + value);",
      "1209:             }",
      "",
      "[Removed Lines]",
      "1206:         public static FormValidation doCheckServerUrl(@QueryParameter String value) {",
      "",
      "[Added Lines]",
      "1208:         public static FormValidation doCheckServerUrl(@AncestorInPath SCMSourceOwner context, @QueryParameter String value) {",
      "1209:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
      "1210:             contextToCheck.checkPermission(Item.CONFIGURE);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1216:         }",
      "1218:         @SuppressWarnings(\"unused\") // used By stapler",
      "1220:             return BitbucketEndpointConfiguration.get().getEndpointItems();",
      "1221:         }",
      "",
      "[Removed Lines]",
      "1219:         public ListBoxModel doFillServerUrlItems() {",
      "",
      "[Added Lines]",
      "1223:         public ListBoxModel doFillServerUrlItems(@AncestorInPath SCMSourceOwner context) {",
      "1224:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
      "1225:             if (!contextToCheck.hasPermission(Item.CONFIGURE)) {",
      "1226:                 return new ListBoxModel();",
      "1227:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1226:         }",
      "1228:         @SuppressWarnings(\"unused\") // used By stapler",
      "1229:         public ListBoxModel doFillRepositoryItems(@AncestorInPath SCMSourceOwner context,",
      "1230:                                                   @QueryParameter String serverUrl,",
      "1231:                                                   @QueryParameter String credentialsId,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1237:         @RequirePOST",
      "",
      "---------------"
    ],
    "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java": [
      "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "31: import hudson.Extension;",
      "32: import hudson.util.FormValidation;",
      "33: import java.util.List;",
      "34: import org.kohsuke.accmod.Restricted;",
      "35: import org.kohsuke.accmod.restrictions.NoExternalUse;",
      "36: import org.kohsuke.stapler.DataBoundConstructor;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34: import jenkins.model.Jenkins;",
      "38: import org.kohsuke.stapler.verb.POST;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "152:         }",
      "154:         public FormValidation doShowStats() {",
      "155:             List<String> stats = BitbucketCloudApiClient.stats();",
      "156:             StringBuilder builder = new StringBuilder();",
      "157:             for (String stat : stats) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "157:             Jenkins.get().checkPermission(Jenkins.MANAGE);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "160:             return FormValidation.okWithMarkup(builder.toString());",
      "161:         }",
      "163:         public FormValidation doClear() {",
      "164:             BitbucketCloudApiClient.clearCaches();",
      "165:             return FormValidation.ok(\"Caches cleared\");",
      "166:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "166:         @POST",
      "168:             Jenkins.get().checkPermission(Jenkins.MANAGE);",
      "",
      "---------------"
    ],
    "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java": [
      "File: src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java -> src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package com.cloudbees.jenkins.plugins.bitbucket;",
      "3: import com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketCloudEndpoint;",
      "4: import com.cloudbees.plugins.credentials.CredentialsScope;",
      "5: import com.cloudbees.plugins.credentials.SystemCredentialsProvider;",
      "6: import com.cloudbees.plugins.credentials.common.StandardUsernamePasswordCredentials;",
      "7: import com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl;",
      "8: import com.gargoylesoftware.htmlunit.Page;",
      "9: import hudson.model.Item;",
      "10: import hudson.model.User;",
      "11: import hudson.security.ACL;",
      "12: import hudson.security.ACLContext;",
      "13: import hudson.util.ListBoxModel;",
      "14: import java.io.IOException;",
      "15: import java.net.HttpURLConnection;",
      "16: import jenkins.model.Jenkins;",
      "17: import org.hamcrest.CoreMatchers;",
      "18: import org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject;",
      "19: import org.junit.Before;",
      "20: import org.junit.Rule;",
      "21: import org.junit.Test;",
      "22: import org.jvnet.hudson.test.Issue;",
      "23: import org.jvnet.hudson.test.JenkinsRule;",
      "24: import org.jvnet.hudson.test.MockAuthorizationStrategy;",
      "26: import static org.hamcrest.CoreMatchers.not;",
      "27: import static org.hamcrest.MatcherAssert.assertThat;",
      "28: import static org.hamcrest.Matchers.containsString;",
      "29: import static org.hamcrest.Matchers.empty;",
      "30: import static org.hamcrest.Matchers.hasSize;",
      "31: import static org.hamcrest.Matchers.is;",
      "32: import static org.junit.Assert.fail;",
      "34: public class Security2033Test {",
      "36:     private static final String PROJECT_NAME = \"p\";",
      "37:     private static final String NOT_AUTHORIZED_USER = \"userNoPermission\";",
      "38:     private static final String SERVER_URL = \"server.url\";",
      "40:     @Rule",
      "41:     public JenkinsRule j = new JenkinsRule();",
      "43:     private WorkflowMultiBranchProject pr;",
      "45:     @Before",
      "46:     public void setup() throws Exception {",
      "47:         pr = j.jenkins.createProject(WorkflowMultiBranchProject.class, PROJECT_NAME);",
      "48:         setUpAuthorization();",
      "49:         initCredentials();",
      "50:     }",
      "52:     @Issue(\"SECURITY-2033\")",
      "53:     @Test",
      "54:     public void doFillCredentialsIdItemsSCMSourceWhenUserWithoutCredentialsViewPermissionThenListNotPopulated() {",
      "55:         BitbucketSCMSource.DescriptorImpl descriptor = (BitbucketSCMSource.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMSource.class);",
      "56:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "57:             ListBoxModel actual = descriptor.doFillCredentialsIdItems(pr, SERVER_URL);",
      "58:             ListBoxModel expected = new ListBoxModel(new ListBoxModel.Option(\"- none -\", \"\"));",
      "59:             assertListBoxModel(actual, expected);",
      "60:         }",
      "61:     }",
      "63:     @Issue(\"SECURITY-2033\")",
      "64:     @Test",
      "65:     public void doFillCredentialsIdItemsSCMNavigatorWhenUserWithoutCredentialsViewPermissionThenListNotPopulated() {",
      "66:         BitbucketSCMNavigator.DescriptorImpl descriptor = (BitbucketSCMNavigator.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMNavigator.class);",
      "67:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "68:             ListBoxModel actual = descriptor.doFillCredentialsIdItems(pr, SERVER_URL);",
      "69:             ListBoxModel expected = new ListBoxModel(new ListBoxModel.Option(\"- none -\", \"\"));",
      "70:             assertListBoxModel(actual, expected);",
      "71:         }",
      "72:     }",
      "74:     @Issue(\"SECURITY-2033\")",
      "75:     @Test",
      "76:     public void doCheckCredentialsIdSCMNavigatorWhenUserWithoutCredentialsViewPermissionThenReturnForbiddenStatus() {",
      "77:         BitbucketSCMNavigator.DescriptorImpl descriptor = (BitbucketSCMNavigator.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMNavigator.class);",
      "78:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "79:             descriptor.doCheckCredentialsId(pr, SERVER_URL, \"nonEmpty\");",
      "80:             fail(\"Should fail with AccessDeniedException2\");",
      "81:         } catch (Exception accessDeniedException2) {",
      "82:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Credentials/View permission\"));",
      "83:         }",
      "84:     }",
      "86:     @Issue(\"SECURITY-2033\")",
      "87:     @Test",
      "88:     public void doCheckCredentialsIdSCMSourceWhenUserWithoutCredentialsViewPermissionThenReturnForbiddenStatus() {",
      "89:         BitbucketSCMSource.DescriptorImpl descriptor = (BitbucketSCMSource.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMSource.class);",
      "90:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "91:             descriptor.doCheckCredentialsId(pr, SERVER_URL, \"nonEmpty\");",
      "92:             fail(\"Should fail with AccessDeniedException2 but not\");",
      "93:         } catch (Exception accessDeniedException2) {",
      "94:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Credentials/View permission\"));",
      "95:         }",
      "96:     }",
      "98:     @Issue(\"SECURITY-2033\")",
      "99:     @Test",
      "100:     public void doFillServerUrlItemsSCMNavigatorWhenUserWithoutPermissionThenReturnEmptyList() {",
      "101:         BitbucketSCMNavigator.DescriptorImpl descriptor = (BitbucketSCMNavigator.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMNavigator.class);",
      "102:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "103:             ListBoxModel actual = descriptor.doFillServerUrlItems(pr);",
      "104:             assertThat(actual, is(empty()));",
      "105:         }",
      "106:     }",
      "108:     @Issue(\"SECURITY-2033\")",
      "109:     @Test",
      "110:     public void doFillServerUrlItemsSCMSourceWhenUserWithoutPermissionThenReturnEmptyList() {",
      "111:         BitbucketSCMSource.DescriptorImpl descriptor = (BitbucketSCMSource.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMSource.class);",
      "112:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "113:             ListBoxModel actual = descriptor.doFillServerUrlItems(pr);",
      "114:             assertThat(actual, is(empty()));",
      "115:         }",
      "116:     }",
      "118:     @Issue(\"SECURITY-2033\")",
      "119:     @Test",
      "120:     public void doCheckServerUrlWhenUserWithoutPermissionThenReturnForbiddenStatus() {",
      "121:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "122:             BitbucketSCMSource.DescriptorImpl.doCheckServerUrl(pr, SERVER_URL);",
      "123:             fail(\"Should fail with AccessDeniedException2\");",
      "124:         } catch (Exception accessDeniedException2) {",
      "125:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Job/Configure permission\"));",
      "126:         }",
      "127:     }",
      "129:     @Issue(\"SECURITY-2033\")",
      "130:     @Test",
      "131:     public void doShowStatsWhenUserWithoutAdminPermissionThenReturnForbiddenStatus() {",
      "132:         BitbucketCloudEndpoint.DescriptorImpl descriptor = (BitbucketCloudEndpoint.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketCloudEndpoint.class);",
      "133:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "134:             descriptor.doShowStats();",
      "135:             fail(\"Should fail with AccessDeniedException2\");",
      "136:         } catch (Exception accessDeniedException2) {",
      "137:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Overall/Administer permission\"));",
      "138:         }",
      "139:     }",
      "141:     @Issue(\"SECURITY-2033\")",
      "142:     @Test",
      "143:     public void doClearWhenUserWithoutAdminPermissionThenReturnForbiddenStatus() {",
      "144:         BitbucketCloudEndpoint.DescriptorImpl descriptor = (BitbucketCloudEndpoint.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketCloudEndpoint.class);",
      "145:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
      "146:             descriptor.doClear();",
      "147:             fail(\"Should fail with AccessDeniedException2\");",
      "148:         } catch (Exception accessDeniedException2) {",
      "149:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Overall/Administer permission\"));",
      "150:         }",
      "151:     }",
      "153:     @Issue(\"SECURITY-2033\")",
      "154:     @Test",
      "155:     public void doClearWhenInvokedUsingGetMethodThenResourceNotFound() throws Exception {",
      "156:         JenkinsRule.WebClient webClient = j .createWebClient().withThrowExceptionOnFailingStatusCode(false);",
      "157:         webClient.login(NOT_AUTHORIZED_USER);",
      "158:         Page page = webClient.goTo(\"job/\" + PROJECT_NAME +\"/descriptorByName/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketCloudEndpoint/clear\");",
      "160:         assertThat(page.getWebResponse().getStatusCode(), is(HttpURLConnection.HTTP_NOT_FOUND));",
      "161:         assertThat(page.getWebResponse().getContentAsString(), containsString(\"Stapler processed this HTTP request as follows, but couldn't find the resource to consume the request\"));",
      "162:     }",
      "164:     private void initCredentials() throws IOException {",
      "165:         StandardUsernamePasswordCredentials key = new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL, \"id\", \"desc\", \"username\", \"pass\");",
      "166:         SystemCredentialsProvider.getInstance().getCredentials().add(key);",
      "168:         SystemCredentialsProvider.getInstance().save();",
      "169:     }",
      "171:     private void setUpAuthorization() {",
      "172:         j.jenkins.setSecurityRealm(j.createDummySecurityRealm());",
      "173:         j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy()",
      "174:             .grant(Jenkins.READ, Item.READ).everywhere().to(NOT_AUTHORIZED_USER));",
      "175:     }",
      "177:     private static void assertListBoxModel(ListBoxModel actual, ListBoxModel expected) {",
      "178:         assertThat(actual, CoreMatchers.is(not(empty())));",
      "179:         assertThat(actual, hasSize(expected.size()));",
      "180:         assertThat(actual.get(0).name, CoreMatchers.is(expected.get(0).name));",
      "181:         assertThat(actual.get(0).value, CoreMatchers.is(expected.get(0).value));",
      "182:     }",
      "183: }",
      "",
      "---------------"
    ],
    "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2467Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2467Test.java": [
      "File: src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2467Test.java -> src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2467Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package com.cloudbees.jenkins.plugins.bitbucket;",
      "3: import com.gargoylesoftware.htmlunit.html.HtmlPage;",
      "4: import java.net.HttpURLConnection;",
      "5: import jenkins.model.Jenkins;",
      "6: import org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject;",
      "7: import org.junit.Rule;",
      "8: import org.junit.Test;",
      "9: import org.jvnet.hudson.test.Issue;",
      "10: import org.jvnet.hudson.test.JenkinsRule;",
      "11: import org.jvnet.hudson.test.MockAuthorizationStrategy;",
      "13: import static org.hamcrest.MatcherAssert.assertThat;",
      "14: import static org.hamcrest.Matchers.containsString;",
      "15: import static org.hamcrest.Matchers.is;",
      "17: public class Security2467Test {",
      "19:     @Rule",
      "20:     public JenkinsRule j = new JenkinsRule();",
      "22:     @Issue(\"SECURITY-2467\")",
      "23:     @Test",
      "24:     public void doFillRepositoryItemsWhenInvokedUsingGetMethodThenReturnMethodNotAllowed() throws Exception {",
      "25:         String admin = \"Admin\";",
      "26:         String projectName = \"p\";",
      "27:         WorkflowMultiBranchProject pr = j.jenkins.createProject(WorkflowMultiBranchProject.class, projectName);",
      "28:         j.jenkins.setSecurityRealm(j.createDummySecurityRealm());",
      "29:         j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().",
      "30:                 grant(Jenkins.ADMINISTER).everywhere().to(admin));",
      "32:         JenkinsRule.WebClient webClient = j.createWebClient().withThrowExceptionOnFailingStatusCode(false);",
      "33:         webClient.login(admin);",
      "34:         HtmlPage htmlPage = webClient.goTo(\"job/\" + projectName +\"/descriptorByName/com.cloudbees.jenkins.plugins.bitbucket.BitbucketSCMSource/fillRepositoryItems?serverUrl=http://hacker:9000&credentialsId=ID_Admin&repoOwner=admin\");",
      "36:         assertThat(htmlPage.getWebResponse().getStatusCode(), is(HttpURLConnection.HTTP_BAD_METHOD));",
      "37:         assertThat(htmlPage.getWebResponse().getContentAsString(), containsString(\"This URL requires POST\"));",
      "38:     }",
      "39: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "973dbfae88f886b640860d1489d85e4662c6d8fb",
      "candidate_info": {
        "commit_hash": "973dbfae88f886b640860d1489d85e4662c6d8fb",
        "repo": "jenkinsci/bitbucket-branch-source-plugin",
        "commit_url": "https://github.com/jenkinsci/bitbucket-branch-source-plugin/commit/973dbfae88f886b640860d1489d85e4662c6d8fb",
        "files": [
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
          "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java"
        ],
        "message": "SECURITY-2033",
        "before_after_code_files": [
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
          "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
          "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
            "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java"
          ],
          "candidate": [
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
            "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
            "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java": [
          "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketCredentials.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: import hudson.model.Queue;",
          "36: import hudson.model.queue.Tasks;",
          "37: import hudson.security.ACL;",
          "38: import hudson.util.FormValidation;",
          "39: import hudson.util.ListBoxModel;",
          "40: import jenkins.authentication.tokens.api.AuthenticationTokens;",
          "41: import jenkins.scm.api.SCMSourceOwner;",
          "42: import org.apache.commons.lang.StringUtils;",
          "43: import org.kohsuke.stapler.AncestorInPath;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: import hudson.security.AccessControlled;",
          "42: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:         @QueryParameter String serverUrl) {",
          "81:         StandardListBoxModel result = new StandardListBoxModel();",
          "82:         result.includeEmptyValue();",
          "83:         result.includeMatchingAs(",
          "84:                 context instanceof Queue.Task",
          "85:                         ? Tasks.getDefaultAuthenticationOf((Queue.Task) context)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:         AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
          "86:         if (!contextToCheck.hasPermission(CredentialsProvider.VIEW)) {",
          "87:             return result;",
          "88:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:         @QueryParameter String value,",
          "98:         @QueryParameter String serverUrl) {",
          "99:         if (!value.isEmpty()) {",
          "100:             if (CredentialsMatchers.firstOrNull(",
          "101:                     CredentialsProvider.lookupCredentials(",
          "102:                             StandardCertificateCredentials.class,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
          "107:             contextToCheck.checkPermission(CredentialsProvider.VIEW);",
          "",
          "---------------"
        ],
        "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java": [
          "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMNavigator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: import hudson.Util;",
          "44: import hudson.console.HyperlinkNote;",
          "45: import hudson.model.Action;",
          "46: import hudson.model.TaskListener;",
          "47: import hudson.plugins.git.GitSCM;",
          "48: import hudson.util.FormValidation;",
          "49: import hudson.util.ListBoxModel;",
          "50: import java.io.IOException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: import hudson.model.Item;",
          "49: import hudson.security.AccessControlled;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "607:         }",
          "609:         @SuppressWarnings(\"unused\") // used By stapler",
          "611:             return BitbucketEndpointConfiguration.get().getEndpointItems();",
          "612:         }",
          "",
          "[Removed Lines]",
          "610:         public ListBoxModel doFillServerUrlItems() {",
          "",
          "[Added Lines]",
          "612:         public ListBoxModel doFillServerUrlItems(@AncestorInPath SCMSourceOwner context) {",
          "613:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
          "614:             if (!contextToCheck.hasPermission(Item.CONFIGURE)) {",
          "615:                 return new ListBoxModel();",
          "616:             }",
          "",
          "---------------"
        ],
        "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java": [
          "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/BitbucketSCMSource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: import hudson.model.TaskListener;",
          "61: import hudson.plugins.git.GitSCM;",
          "62: import hudson.scm.SCM;",
          "63: import hudson.util.FormFillFailure;",
          "64: import hudson.util.FormValidation;",
          "65: import hudson.util.ListBoxModel;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: import hudson.security.AccessControlled;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1146:         }",
          "1148:         @SuppressWarnings(\"unused\") // used By stapler",
          "1150:             if (BitbucketEndpointConfiguration.get().findEndpoint(value) == null) {",
          "1151:                 return FormValidation.error(\"Unregistered Server: \" + value);",
          "1152:             }",
          "",
          "[Removed Lines]",
          "1149:         public static FormValidation doCheckServerUrl(@QueryParameter String value) {",
          "",
          "[Added Lines]",
          "1150:         public static FormValidation doCheckServerUrl(@AncestorInPath SCMSourceOwner context, @QueryParameter String value) {",
          "1151:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
          "1152:             contextToCheck.checkPermission(Item.CONFIGURE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1159:         }",
          "1161:         @SuppressWarnings(\"unused\") // used By stapler",
          "1163:             return BitbucketEndpointConfiguration.get().getEndpointItems();",
          "1164:         }",
          "",
          "[Removed Lines]",
          "1162:         public ListBoxModel doFillServerUrlItems() {",
          "",
          "[Added Lines]",
          "1165:         public ListBoxModel doFillServerUrlItems(@AncestorInPath SCMSourceOwner context) {",
          "1166:             AccessControlled contextToCheck = context == null ? Jenkins.get() : context;",
          "1167:             if (!contextToCheck.hasPermission(Item.CONFIGURE)) {",
          "1168:                 return new ListBoxModel();",
          "1169:             }",
          "",
          "---------------"
        ],
        "src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java||src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java": [
          "File: src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java -> src/main/java/com/cloudbees/jenkins/plugins/bitbucket/endpoints/BitbucketCloudEndpoint.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: import hudson.Extension;",
          "32: import hudson.util.FormValidation;",
          "33: import java.util.List;",
          "34: import org.kohsuke.accmod.Restricted;",
          "35: import org.kohsuke.accmod.restrictions.NoExternalUse;",
          "36: import org.kohsuke.stapler.DataBoundConstructor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: import jenkins.model.Jenkins;",
          "38: import org.kohsuke.stapler.verb.POST;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:         }",
          "154:         public FormValidation doShowStats() {",
          "155:             List<String> stats = BitbucketCloudApiClient.stats();",
          "156:             StringBuilder builder = new StringBuilder();",
          "157:             for (String stat : stats) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157:             Jenkins.get().checkPermission(Jenkins.MANAGE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160:             return FormValidation.okWithMarkup(builder.toString());",
          "161:         }",
          "163:         public FormValidation doClear() {",
          "164:             BitbucketCloudApiClient.clearCaches();",
          "165:             return FormValidation.ok(\"Caches cleared\");",
          "166:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:         @POST",
          "168:             Jenkins.get().checkPermission(Jenkins.MANAGE);",
          "",
          "---------------"
        ],
        "src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java||src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java": [
          "File: src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java -> src/test/java/com/cloudbees/jenkins/plugins/bitbucket/Security2033Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package com.cloudbees.jenkins.plugins.bitbucket;",
          "3: import com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketCloudEndpoint;",
          "4: import com.cloudbees.plugins.credentials.CredentialsScope;",
          "5: import com.cloudbees.plugins.credentials.SystemCredentialsProvider;",
          "6: import com.cloudbees.plugins.credentials.common.StandardUsernamePasswordCredentials;",
          "7: import com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl;",
          "8: import com.gargoylesoftware.htmlunit.Page;",
          "9: import hudson.model.Item;",
          "10: import hudson.model.User;",
          "11: import hudson.security.ACL;",
          "12: import hudson.security.ACLContext;",
          "13: import hudson.security.AccessDeniedException2;",
          "14: import hudson.util.ListBoxModel;",
          "15: import java.io.IOException;",
          "16: import java.net.HttpURLConnection;",
          "17: import jenkins.model.Jenkins;",
          "18: import org.hamcrest.CoreMatchers;",
          "19: import org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject;",
          "20: import org.junit.Before;",
          "21: import org.junit.Rule;",
          "22: import org.junit.Test;",
          "23: import org.jvnet.hudson.test.Issue;",
          "24: import org.jvnet.hudson.test.JenkinsRule;",
          "25: import org.jvnet.hudson.test.MockAuthorizationStrategy;",
          "27: import static org.hamcrest.CoreMatchers.not;",
          "28: import static org.hamcrest.MatcherAssert.assertThat;",
          "29: import static org.hamcrest.Matchers.containsString;",
          "30: import static org.hamcrest.Matchers.empty;",
          "31: import static org.hamcrest.Matchers.hasSize;",
          "32: import static org.hamcrest.Matchers.is;",
          "33: import static org.junit.Assert.fail;",
          "35: public class Security2033Test {",
          "37:     private static final String PROJECT_NAME = \"p\";",
          "38:     private static final String NOT_AUTHORIZED_USER = \"userNoPermission\";",
          "39:     private static final String SERVER_URL = \"server.url\";",
          "41:     @Rule",
          "42:     public JenkinsRule j = new JenkinsRule();",
          "44:     private WorkflowMultiBranchProject pr;",
          "46:     @Before",
          "47:     public void setup() throws Exception {",
          "48:         pr = j.jenkins.createProject(WorkflowMultiBranchProject.class, PROJECT_NAME);",
          "49:         setUpAuthorization();",
          "50:         initCredentials();",
          "51:     }",
          "53:     @Issue(\"SECURITY-2033\")",
          "54:     @Test",
          "55:     public void doFillCredentialsIdItemsSCMSourceWhenUserWithoutCredentialsViewPermissionThenListNotPopulated() {",
          "56:         BitbucketSCMSource.DescriptorImpl descriptor = (BitbucketSCMSource.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMSource.class);",
          "57:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "58:             ListBoxModel actual = descriptor.doFillCredentialsIdItems(pr, SERVER_URL);",
          "59:             ListBoxModel expected = new ListBoxModel(new ListBoxModel.Option(\"- none -\", \"\"));",
          "60:             assertListBoxModel(actual, expected);",
          "61:         }",
          "62:     }",
          "64:     @Issue(\"SECURITY-2033\")",
          "65:     @Test",
          "66:     public void doFillCredentialsIdItemsSCMNavigatorWhenUserWithoutCredentialsViewPermissionThenListNotPopulated() {",
          "67:         BitbucketSCMNavigator.DescriptorImpl descriptor = (BitbucketSCMNavigator.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMNavigator.class);",
          "68:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "69:             ListBoxModel actual = descriptor.doFillCredentialsIdItems(pr, SERVER_URL);",
          "70:             ListBoxModel expected = new ListBoxModel(new ListBoxModel.Option(\"- none -\", \"\"));",
          "71:             assertListBoxModel(actual, expected);",
          "72:         }",
          "73:     }",
          "75:     @Issue(\"SECURITY-2033\")",
          "76:     @Test",
          "77:     public void doCheckCredentialsIdSCMNavigatorWhenUserWithoutCredentialsViewPermissionThenReturnForbiddenStatus() {",
          "78:         BitbucketSCMNavigator.DescriptorImpl descriptor = (BitbucketSCMNavigator.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMNavigator.class);",
          "79:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "80:             descriptor.doCheckCredentialsId(pr, SERVER_URL, \"nonEmpty\");",
          "81:             fail(\"Should fail with AccessDeniedException2\");",
          "82:         } catch (AccessDeniedException2 accessDeniedException2) {",
          "83:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Credentials/View permission\"));",
          "84:         }",
          "85:     }",
          "87:     @Issue(\"SECURITY-2033\")",
          "88:     @Test",
          "89:     public void doCheckCredentialsIdSCMSourceWhenUserWithoutCredentialsViewPermissionThenReturnForbiddenStatus() {",
          "90:         BitbucketSCMSource.DescriptorImpl descriptor = (BitbucketSCMSource.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMSource.class);",
          "91:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "92:             descriptor.doCheckCredentialsId(pr, SERVER_URL, \"nonEmpty\");",
          "93:             fail(\"Should fail with AccessDeniedException2 but not\");",
          "94:         } catch (AccessDeniedException2 accessDeniedException2) {",
          "95:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Credentials/View permission\"));",
          "96:         }",
          "97:     }",
          "99:     @Issue(\"SECURITY-2033\")",
          "100:     @Test",
          "101:     public void doFillServerUrlItemsSCMNavigatorWhenUserWithoutPermissionThenReturnEmptyList() {",
          "102:         BitbucketSCMNavigator.DescriptorImpl descriptor = (BitbucketSCMNavigator.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMNavigator.class);",
          "103:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "104:             ListBoxModel actual = descriptor.doFillServerUrlItems(pr);",
          "105:             assertThat(actual, is(empty()));",
          "106:         }",
          "107:     }",
          "109:     @Issue(\"SECURITY-2033\")",
          "110:     @Test",
          "111:     public void doFillServerUrlItemsSCMSourceWhenUserWithoutPermissionThenReturnEmptyList() {",
          "112:         BitbucketSCMSource.DescriptorImpl descriptor = (BitbucketSCMSource.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketSCMSource.class);",
          "113:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "114:             ListBoxModel actual = descriptor.doFillServerUrlItems(pr);",
          "115:             assertThat(actual, is(empty()));",
          "116:         }",
          "117:     }",
          "119:     @Issue(\"SECURITY-2033\")",
          "120:     @Test",
          "121:     public void doCheckServerUrlWhenUserWithoutPermissionThenReturnForbiddenStatus() {",
          "122:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "123:             BitbucketSCMSource.DescriptorImpl.doCheckServerUrl(pr, SERVER_URL);",
          "124:             fail(\"Should fail with AccessDeniedException2\");",
          "125:         } catch (AccessDeniedException2 accessDeniedException2) {",
          "126:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Job/Configure permission\"));",
          "127:         }",
          "128:     }",
          "130:     @Issue(\"SECURITY-2033\")",
          "131:     @Test",
          "132:     public void doShowStatsWhenUserWithoutAdminPermissionThenReturnForbiddenStatus() {",
          "133:         BitbucketCloudEndpoint.DescriptorImpl descriptor = (BitbucketCloudEndpoint.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketCloudEndpoint.class);",
          "134:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "135:             descriptor.doShowStats();",
          "136:             fail(\"Should fail with AccessDeniedException2\");",
          "137:         } catch (AccessDeniedException2 accessDeniedException2) {",
          "138:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Overall/Administer permission\"));",
          "139:         }",
          "140:     }",
          "142:     @Issue(\"SECURITY-2033\")",
          "143:     @Test",
          "144:     public void doClearWhenUserWithoutAdminPermissionThenReturnForbiddenStatus() {",
          "145:         BitbucketCloudEndpoint.DescriptorImpl descriptor = (BitbucketCloudEndpoint.DescriptorImpl) Jenkins.get().getDescriptorOrDie(BitbucketCloudEndpoint.class);",
          "146:         try (ACLContext aclContext = ACL.as(User.getOrCreateByIdOrFullName(NOT_AUTHORIZED_USER))) {",
          "147:             descriptor.doClear();",
          "148:             fail(\"Should fail with AccessDeniedException2\");",
          "149:         } catch (AccessDeniedException2 accessDeniedException2) {",
          "150:             assertThat(accessDeniedException2.getMessage(), is(NOT_AUTHORIZED_USER + \" is missing the Overall/Administer permission\"));",
          "151:         }",
          "152:     }",
          "154:     @Issue(\"SECURITY-2033\")",
          "155:     @Test",
          "156:     public void doClearWhenInvokedUsingGetMethodThenResourceNotFound() throws Exception {",
          "157:         JenkinsRule.WebClient webClient = j .createWebClient().withThrowExceptionOnFailingStatusCode(false);",
          "158:         webClient.login(NOT_AUTHORIZED_USER);",
          "159:         Page page = webClient.goTo(\"job/\" + PROJECT_NAME +\"/descriptorByName/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketCloudEndpoint/clear\");",
          "161:         assertThat(page.getWebResponse().getStatusCode(), is(HttpURLConnection.HTTP_NOT_FOUND));",
          "162:         assertThat(page.getWebResponse().getContentAsString(), containsString(\"Stapler processed this HTTP request as follows, but couldn't find the resource to consume the request\"));",
          "163:     }",
          "165:     private void initCredentials() throws IOException {",
          "166:         StandardUsernamePasswordCredentials key = new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL, \"id\", \"desc\", \"username\", \"pass\");",
          "167:         SystemCredentialsProvider.getInstance().getCredentials().add(key);",
          "169:         SystemCredentialsProvider.getInstance().save();",
          "170:     }",
          "172:     private void setUpAuthorization() {",
          "173:         j.jenkins.setSecurityRealm(j.createDummySecurityRealm());",
          "174:         j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy()",
          "175:             .grant(Jenkins.READ, Item.READ).everywhere().to(NOT_AUTHORIZED_USER));",
          "176:     }",
          "178:     private static void assertListBoxModel(ListBoxModel actual, ListBoxModel expected) {",
          "179:         assertThat(actual, CoreMatchers.is(not(empty())));",
          "180:         assertThat(actual, hasSize(expected.size()));",
          "181:         assertThat(actual.get(0).name, CoreMatchers.is(expected.get(0).name));",
          "182:         assertThat(actual.get(0).value, CoreMatchers.is(expected.get(0).value));",
          "183:     }",
          "184: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}