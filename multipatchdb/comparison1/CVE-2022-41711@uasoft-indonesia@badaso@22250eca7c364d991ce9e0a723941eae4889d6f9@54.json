{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "127009f4c00d1371eab7c45960e948625ab1258a",
      "candidate_info": {
        "commit_hash": "127009f4c00d1371eab7c45960e948625ab1258a",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/127009f4c00d1371eab7c45960e948625ab1258a",
        "files": [
          "src/Controllers/BadasoAuthController.php"
        ],
        "message": "change apiresponse and uncomment",
        "before_after_code_files": [
          "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php": [
          "File: src/Controllers/BadasoAuthController.php -> src/Controllers/BadasoAuthController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:             if ($should_verify_email) {",
          "59:                 $user = auth()->user();",
          "60:                 if (is_null($user->email_verified_at)) {",
          "62:                 }",
          "63:             }",
          "",
          "[Removed Lines]",
          "61:                     return ApiResponse::success([]);",
          "",
          "[Added Lines]",
          "61:                     return ApiResponse::failed([]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba63150982a5ea1d9258b17c5e2bba3f980bb015",
      "candidate_info": {
        "commit_hash": "ba63150982a5ea1d9258b17c5e2bba3f980bb015",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/ba63150982a5ea1d9258b17c5e2bba3f980bb015",
        "files": [
          "src/Controllers/Controller.php"
        ],
        "message": "Delete Controller.php",
        "before_after_code_files": [
          "src/Controllers/Controller.php||src/Controllers/Controller.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88f35097700b8de823404f30d5236067970ee509",
      "candidate_info": {
        "commit_hash": "88f35097700b8de823404f30d5236067970ee509",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/88f35097700b8de823404f30d5236067970ee509",
        "files": [
          "src/Commands/BadasoTestSetup.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Commands/BadasoTestSetup.php||src/Commands/BadasoTestSetup.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Commands/BadasoTestSetup.php||src/Commands/BadasoTestSetup.php": [
          "File: src/Commands/BadasoTestSetup.php -> src/Commands/BadasoTestSetup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Commands;",
          "6: use Illuminate\\Console\\Command;",
          "9: class BadasoTestSetup extends Command",
          "10: {",
          "",
          "[Removed Lines]",
          "5: use DOMDocument;",
          "7: use SimpleXMLElement;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     {",
          "43:         $phpunit_xml_path = base_path(self::$PHPUNIT_XML_PATH);",
          "46:         <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
          "47:         <phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"./vendor/phpunit/phpunit/phpunit.xsd\" bootstrap=\"vendor/autoload.php\" colors=\"true\">",
          "48:             <testsuites>",
          "",
          "[Removed Lines]",
          "45:         $phpunit_xml_content = <<<XML",
          "",
          "[Added Lines]",
          "43:         $phpunit_xml_content = <<<'XML'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6076899aae2e863d744eacc964be88a8dfa5fe31",
      "candidate_info": {
        "commit_hash": "6076899aae2e863d744eacc964be88a8dfa5fe31",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/6076899aae2e863d744eacc964be88a8dfa5fe31",
        "files": [
          "src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:         $records = $records->get()->map(function ($record) use ($data_rows) {",
          "223:             foreach ($data_rows as $index => $data_row) {",
          "238:                                 return $asset;",
          "239:                             });",
          "241:                         }",
          "258:                     }",
          "259:                     }",
          "261:                 }",
          "263:         });",
          "265:         $data = [];",
          "267:         foreach ($records as $row) {",
          "",
          "[Removed Lines]",
          "224:                     if($data_row->type == 'upload_image_multiple'){",
          "225:                         if(isset($record->{$data_row->field})){",
          "226:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true) ;",
          "227:                         if(isset($upload_image_multiples)){",
          "228:                             $upload_image_multiples = collect($upload_image_multiples)->map(function($upload_image_multiple){",
          "229:                                 $put_thumbs = \"thumbs\" ;",
          "230:                                 $upload_image_multiple = explode(\"/\", $upload_image_multiple);",
          "231:                                 $file_name = $upload_image_multiple[count($upload_image_multiple) -1];",
          "232:                                 $upload_image_multiple[count($upload_image_multiple) -1] = $put_thumbs ;",
          "233:                                 $upload_image_multiple[] = $file_name ;",
          "234:                                 $upload_image_multiple = join(\"/\", $upload_image_multiple);",
          "236:                                 $asset = asset(\"storage/\".$upload_image_multiple);",
          "240:                             $upload_image_multiples = implode(\",\",json_decode($upload_image_multiples));",
          "242:                         $record->{$data_row->field} = $upload_image_multiples ;",
          "243:                         }",
          "244:                     }elseif($data_row->type == 'upload_image'){",
          "245:                         if(isset($record->{$data_row->field})){",
          "246:                         $upload_image = $record->{$data_row->field};",
          "247:                         if(isset($upload_image)){",
          "248:                                 $put_thumbs = \"thumbs\" ;",
          "249:                                 $upload_image = explode(\"/\", $upload_image);",
          "250:                                 $file_name = $upload_image[count($upload_image) -1];",
          "251:                                 $upload_image[count($upload_image) -1] = $put_thumbs ;",
          "252:                                 $upload_image[] = $file_name ;",
          "253:                                 $upload_image = join(\"/\", $upload_image);",
          "255:                                 $upload_image = asset(\"storage/\".$upload_image);",
          "256:                                 $record->{$data_row->field} = $upload_image;",
          "257:                             }",
          "262:                 return $record;",
          "",
          "[Added Lines]",
          "224:                 if ($data_row->type == 'upload_image_multiple') {",
          "225:                     if (isset($record->{$data_row->field})) {",
          "226:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true);",
          "227:                         if (isset($upload_image_multiples)) {",
          "228:                             $upload_image_multiples = collect($upload_image_multiples)->map(function ($upload_image_multiple) {",
          "229:                                 $put_thumbs = 'thumbs';",
          "230:                                 $upload_image_multiple = explode('/', $upload_image_multiple);",
          "231:                                 $file_name = $upload_image_multiple[count($upload_image_multiple) - 1];",
          "232:                                 $upload_image_multiple[count($upload_image_multiple) - 1] = $put_thumbs;",
          "233:                                 $upload_image_multiple[] = $file_name;",
          "234:                                 $upload_image_multiple = join('/', $upload_image_multiple);",
          "236:                                 $asset = asset('storage/'.$upload_image_multiple);",
          "240:                             $upload_image_multiples = implode(',', json_decode($upload_image_multiples));",
          "242:                         $record->{$data_row->field} = $upload_image_multiples;",
          "244:                 } elseif ($data_row->type == 'upload_image') {",
          "245:                     if (isset($record->{$data_row->field})) {",
          "246:                         $upload_image = $record->{$data_row->field};",
          "247:                         if (isset($upload_image)) {",
          "248:                             $put_thumbs = 'thumbs';",
          "249:                             $upload_image = explode('/', $upload_image);",
          "250:                             $file_name = $upload_image[count($upload_image) - 1];",
          "251:                             $upload_image[count($upload_image) - 1] = $put_thumbs;",
          "252:                             $upload_image[] = $file_name;",
          "253:                             $upload_image = join('/', $upload_image);",
          "255:                             $upload_image = asset('storage/'.$upload_image);",
          "256:                             $record->{$data_row->field} = $upload_image;",
          "257:                         }",
          "260:             }",
          "262:             return $record;",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:             $request_body = $data_table_crud_management_log['request_body'];",
          "532:             $table = $request_body['name'];",
          "535:                 'table' => $table,",
          "536:             ]);",
          "537:             $response->assertSuccessful();",
          "",
          "[Removed Lines]",
          "534:              $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "[Added Lines]",
          "534:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "676:     {",
          "677:         $data_add_entities = CallHelperTest::getCache($this->KEY_DATA_ADD_ENTITY);",
          "678:         foreach ($data_add_entities as $table => $data_add_entity) {",
          "680:             $response->assertSuccessful();",
          "681:         }",
          "682:     }",
          "",
          "[Removed Lines]",
          "679:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/all\"));",
          "",
          "[Added Lines]",
          "678:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/all\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "025ec2cd1a1c5c0f84e85bf19c468bca0b947d0c",
      "candidate_info": {
        "commit_hash": "025ec2cd1a1c5c0f84e85bf19c468bca0b947d0c",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/025ec2cd1a1c5c0f84e85bf19c468bca0b947d0c",
        "files": [
          "src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php||src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php||src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php": [
          "File: src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php -> src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     public function up()",
          "15:     {",
          "17:             $table->text('address')->nullable()->after('phone');",
          "18:         });",
          "19:     }",
          "",
          "[Removed Lines]",
          "16:         Schema::table(config('badaso.database.prefix') . 'users', function (Blueprint $table) {",
          "",
          "[Added Lines]",
          "16:         Schema::table(config('badaso.database.prefix').'users', function (Blueprint $table) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:     public function down()",
          "27:     {",
          "29:             $table->dropColumn('address');",
          "30:         });",
          "31:     }",
          "",
          "[Removed Lines]",
          "28:         Schema::table(config('badaso.database.prefix') . 'users', function (Blueprint $table) {",
          "",
          "[Added Lines]",
          "28:         Schema::table(config('badaso.database.prefix').'users', function (Blueprint $table) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}