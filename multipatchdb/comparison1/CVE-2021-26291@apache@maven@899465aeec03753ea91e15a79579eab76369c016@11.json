{
  "cve_id": "CVE-2021-26291",
  "cve_desc": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
  "repo": "apache/maven",
  "patch_hash": "899465aeec03753ea91e15a79579eab76369c016",
  "patch_info": {
    "commit_hash": "899465aeec03753ea91e15a79579eab76369c016",
    "repo": "apache/maven",
    "commit_url": "https://github.com/apache/maven/commit/899465aeec03753ea91e15a79579eab76369c016",
    "files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/pom.xml",
      "maven-settings/src/main/mdo/settings.mdo"
    ],
    "message": "[MNG-7117] add support for blocked mirror",
    "before_after_code_files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo"
    ]
  },
  "patch_diff": {
    "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java": [
      "File: maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java -> maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:         DefaultMirrorSelector mirrorSelector = new DefaultMirrorSelector();",
      "178:         for ( Mirror mirror : request.getMirrors() )",
      "179:         {",
      "182:         }",
      "183:         session.setMirrorSelector( mirrorSelector );",
      "",
      "[Removed Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(),",
      "181:                                 mirror.getMirrorOfLayouts() );",
      "",
      "[Added Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.isBlocked(),",
      "181:                                 mirror.getMirrorOf(), mirror.getMirrorOfLayouts() );",
      "",
      "---------------"
    ],
    "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo": [
      "File: maven-settings/src/main/mdo/settings.mdo -> maven-settings/src/main/mdo/settings.mdo",
      "--- Hunk 1 ---",
      "[Context before]",
      "633:             of the mirror to repositories with a matching layout (apart from a matching id). Since Maven 3.",
      "634:           </description>",
      "635:         </field>",
      "636:       </fields>",
      "637:       <codeSegments>",
      "638:         <codeSegment>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "636:         <field>",
      "637:           <name>blocked</name>",
      "638:           <version>1.2.0+</version>",
      "639:           <type>boolean</type>",
      "640:           <defaultValue>false</defaultValue>",
      "641:           <description>",
      "642:             Whether this mirror should be blocked from any download request but fail the download process, explaining why.",
      "643:           </description>",
      "644:         </field>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "648:         sb.append( \",mirrorOf=\" ).append( mirrorOf );",
      "649:         sb.append( \",url=\" ).append( this.url );",
      "650:         sb.append( \",name=\" ).append( this.name );",
      "651:         sb.append( \"]\" );",
      "652:         return sb.toString();",
      "653:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "660:         if ( isBlocked() )",
      "661:         {",
      "662:             sb.append( \",blocked\" );",
      "663:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01780c0ff371cb8590c5ede3d6d191836baf8476",
      "candidate_info": {
        "commit_hash": "01780c0ff371cb8590c5ede3d6d191836baf8476",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/01780c0ff371cb8590c5ede3d6d191836baf8476",
        "files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java",
          "maven-compat/src/main/java/org/apache/maven/project/ModelUtils.java",
          "maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java"
        ],
        "message": "[MNG-6853] - Don't box primitives where it's not needed\n\nCloses #318",
        "before_after_code_files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java||maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java",
          "maven-compat/src/main/java/org/apache/maven/project/ModelUtils.java||maven-compat/src/main/java/org/apache/maven/project/ModelUtils.java",
          "maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java||maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java||maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java||maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java||maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java": [
          "File: maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java -> maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:         else if ( updatePolicy.startsWith( UPDATE_POLICY_INTERVAL ) )",
          "139:         {",
          "140:             String s = updatePolicy.substring( UPDATE_POLICY_INTERVAL.length() + 1 );",
          "142:             Calendar cal = Calendar.getInstance();",
          "143:             cal.add( Calendar.MINUTE, -minutes );",
          "144:             if ( cal.getTime().after( lastModified ) )",
          "",
          "[Removed Lines]",
          "141:             int minutes = Integer.valueOf( s );",
          "",
          "[Added Lines]",
          "141:             int minutes = Integer.parseInt( s );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "212:         else if ( policy != null && policy.startsWith( ArtifactRepositoryPolicy.UPDATE_POLICY_INTERVAL ) )",
          "213:         {",
          "214:             String s = policy.substring( UPDATE_POLICY_INTERVAL.length() + 1 );",
          "216:         }",
          "217:         else",
          "218:         {",
          "",
          "[Removed Lines]",
          "215:             return Integer.valueOf( s );",
          "",
          "[Added Lines]",
          "215:             return Integer.parseInt( s );",
          "",
          "---------------"
        ],
        "maven-compat/src/main/java/org/apache/maven/project/ModelUtils.java||maven-compat/src/main/java/org/apache/maven/project/ModelUtils.java": [
          "File: maven-compat/src/main/java/org/apache/maven/project/ModelUtils.java -> maven-compat/src/main/java/org/apache/maven/project/ModelUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:                     String inherited = plugin.getInherited();",
          "80:                     {",
          "81:                         it.remove();",
          "82:                     }",
          "",
          "[Removed Lines]",
          "79:                     if ( ( inherited != null ) && !Boolean.valueOf( inherited ) )",
          "",
          "[Added Lines]",
          "79:                     if ( ( inherited != null ) && !Boolean.parseBoolean( inherited ) )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:                 if ( !handleAsInheritance || ( parentInherited == null )",
          "101:                 {",
          "102:                     Plugin childPlugin = childPlugins.get( parentPlugin.getKey() );",
          "",
          "[Removed Lines]",
          "100:                     || Boolean.valueOf( parentInherited ) )",
          "",
          "[Added Lines]",
          "100:                     || Boolean.parseBoolean( parentInherited ) )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "218:         String parentInherited = parent.getInherited();",
          "222:         List<PluginExecution> parentExecutions = parent.getExecutions();",
          "",
          "[Removed Lines]",
          "220:         boolean parentIsInherited = ( parentInherited == null ) || Boolean.valueOf( parentInherited );",
          "",
          "[Added Lines]",
          "220:         boolean parentIsInherited = ( parentInherited == null ) || Boolean.parseBoolean( parentInherited );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "234:                 String inherited = parentExecution.getInherited();",
          "236:                 boolean parentExecInherited =",
          "239:                 if ( !handleAsInheritance || parentExecInherited )",
          "240:                 {",
          "",
          "[Removed Lines]",
          "237:                     parentIsInherited && ( ( inherited == null ) || Boolean.valueOf( inherited ) );",
          "",
          "[Added Lines]",
          "237:                     parentIsInherited && ( ( inherited == null ) || Boolean.parseBoolean( inherited ) );",
          "",
          "---------------"
        ],
        "maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java||maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java": [
          "File: maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java -> maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "386:             {",
          "387:                 String parentInherited = parentPlugin.getInherited();",
          "390:                 {",
          "392:                     ReportPlugin assembledPlugin = parentPlugin;",
          "",
          "[Removed Lines]",
          "389:                 if ( !handleAsInheritance || ( parentInherited == null ) || Boolean.valueOf( parentInherited ) )",
          "",
          "[Added Lines]",
          "389:                 if ( !handleAsInheritance || ( parentInherited == null ) || Boolean.parseBoolean( parentInherited ) )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "475:         String parentInherited = parent.getInherited();",
          "479:         List<ReportSet> parentReportSets = parent.getReportSets();",
          "",
          "[Removed Lines]",
          "477:         boolean parentIsInherited = ( parentInherited == null ) || Boolean.valueOf( parentInherited );",
          "",
          "[Added Lines]",
          "477:         boolean parentIsInherited = ( parentInherited == null ) || Boolean.parseBoolean( parentInherited );",
          "",
          "---------------"
        ],
        "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java||maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java": [
          "File: maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java -> maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:             msg += ( rev != null ? rev : \"\" );",
          "97:             if ( StringUtils.isNotBlank( timestamp ) )",
          "98:             {",
          "100:                 msg += ( rev != null ? \"; \" : \"\" ) + ts;",
          "101:             }",
          "102:             msg += \")\";",
          "",
          "[Removed Lines]",
          "99:                 String ts = formatTimestamp( Long.valueOf( timestamp ) );",
          "",
          "[Added Lines]",
          "99:                 String ts = formatTimestamp( Long.parseLong( timestamp ) );",
          "",
          "---------------"
        ],
        "maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java||maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java": [
          "File: maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java -> maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1600:             }",
          "1601:             else",
          "1602:             {",
          "1604:             }",
          "1605:         }",
          "",
          "[Removed Lines]",
          "1603:                 request.setDegreeOfConcurrency( Integer.valueOf( threadConfiguration ) );",
          "",
          "[Added Lines]",
          "1603:                 request.setDegreeOfConcurrency( Integer.parseInt( threadConfiguration ) );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1618:     int calculateDegreeOfConcurrencyWithCoreMultiplier( String threadConfiguration )",
          "1619:     {",
          "1620:         int procs = Runtime.getRuntime().availableProcessors();",
          "1622:     }",
          "",
          "[Removed Lines]",
          "1621:         return (int) ( Float.valueOf( threadConfiguration.replace( \"C\", \"\" ) ) * procs );",
          "",
          "[Added Lines]",
          "1621:         return (int) ( Float.parseFloat( threadConfiguration.replace( \"C\", \"\" ) ) * procs );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c395ca976dc9eaed65dcdc0037508d1edbfb57f3",
      "candidate_info": {
        "commit_hash": "c395ca976dc9eaed65dcdc0037508d1edbfb57f3",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/c395ca976dc9eaed65dcdc0037508d1edbfb57f3",
        "files": [
          "apache-maven/src/site/apt/index.apt.vm"
        ],
        "message": "[MNG-7190] add /usr/local/etc/mavenrc to reference documentation",
        "before_after_code_files": [
          "apache-maven/src/site/apt/index.apt.vm||apache-maven/src/site/apt/index.apt.vm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apache-maven/src/site/apt/index.apt.vm||apache-maven/src/site/apt/index.apt.vm": [
          "File: apache-maven/src/site/apt/index.apt.vm -> apache-maven/src/site/apt/index.apt.vm"
        ]
      }
    },
    {
      "candidate_hash": "b476b28ecbf521d8c4b0d0ce601a68efa03908d1",
      "candidate_info": {
        "commit_hash": "b476b28ecbf521d8c4b0d0ce601a68efa03908d1",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/b476b28ecbf521d8c4b0d0ce601a68efa03908d1",
        "files": [
          "maven-repository-metadata/src/main/mdo/metadata.mdo"
        ],
        "message": "[MNG-7000] metadata.mdo contains invalid link to schema",
        "before_after_code_files": [
          "maven-repository-metadata/src/main/mdo/metadata.mdo||maven-repository-metadata/src/main/mdo/metadata.mdo"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-repository-metadata/src/main/mdo/metadata.mdo||maven-repository-metadata/src/main/mdo/metadata.mdo": [
          "File: maven-repository-metadata/src/main/mdo/metadata.mdo -> maven-repository-metadata/src/main/mdo/metadata.mdo",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: <model xmlns=\"http://codehaus-plexus.github.io/MODELLO/1.4.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
          "21:   xsi:schemaLocation=\"http://codehaus-plexus.github.io/MODELLO/1.4.0 http://codehaus-plexus.github.io/modello/xsd/modello-1.4.0.xsd\"",
          "22:   xsd.namespace=\"http://maven.apache.org/METADATA/${version}\"",
          "24:   <id>repository-metadata</id>",
          "25:   <name>Metadata</name>",
          "26:   <description><![CDATA[",
          "",
          "[Removed Lines]",
          "23:   xml.schemaLocation=\"http://maven.apache.org/xsd/metadata-${version}.xsd\">",
          "",
          "[Added Lines]",
          "23:   xml.schemaLocation=\"https://maven.apache.org/xsd/repository-metadata-${version}.xsd\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ff27db4f9111fbd4268d66b8f18dd44b61df0ee",
      "candidate_info": {
        "commit_hash": "4ff27db4f9111fbd4268d66b8f18dd44b61df0ee",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/4ff27db4f9111fbd4268d66b8f18dd44b61df0ee",
        "files": [
          "maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java"
        ],
        "message": "[MNG-7156][MNG-7285] Fix typo in test",
        "before_after_code_files": [
          "maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java||maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java||maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java -> maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:         assertEquals( 1, mavenProject.getArtifacts().size() );",
          "124:         final MavenProject project = mavenProject;",
          "126:         Thread t = new Thread(new Runnable() {",
          "127:             @Override",
          "128:             public void run() {",
          "130:             }",
          "131:         });",
          "132:         t.start();",
          "133:         t.join();",
          "135:     }",
          "137:     public void testDontResolveDependencies()",
          "",
          "[Removed Lines]",
          "125:         final AtomicInteger artifactsResultInAnotherThead = new AtomicInteger();",
          "129:                 artifactsResultInAnotherThead.set(project.getArtifacts().size());",
          "134:         assertEquals( project.getArtifacts().size(), artifactsResultInAnotherThead.get() );",
          "",
          "[Added Lines]",
          "125:         final AtomicInteger artifactsResultInAnotherThread = new AtomicInteger();",
          "129:                 artifactsResultInAnotherThread.set(project.getArtifacts().size());",
          "134:         assertEquals( project.getArtifacts().size(), artifactsResultInAnotherThread.get() );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3907fcb2b541d80852611b68494965f10b828f2",
      "candidate_info": {
        "commit_hash": "a3907fcb2b541d80852611b68494965f10b828f2",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/a3907fcb2b541d80852611b68494965f10b828f2",
        "files": [
          "maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java",
          "maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java",
          "maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/SnapshotTransformation.java",
          "maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java",
          "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenSnapshotMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadataGenerator.java",
          "maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataTest.java"
        ],
        "message": "[MNG-6754] Set the same timestamp in multi module builds\n\nReuse MavenExecutionRequest#getStartTime() throughout for snapshot versions,\nlast updated fields in metadata consistently for local and remote repositories\nfor the entire reactor and its modules.\n\nThis closes #381",
        "before_after_code_files": [
          "maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java||maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java",
          "maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java||maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java",
          "maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/SnapshotTransformation.java||maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/SnapshotTransformation.java",
          "maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java||maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java",
          "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenSnapshotMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenSnapshotMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadataGenerator.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadataGenerator.java",
          "maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataTest.java||maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [
            "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java"
          ],
          "candidate": [
            "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java"
          ]
        }
      },
      "candidate_diff": {
        "maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java||maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java": [
          "File: maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java -> maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java"
        ],
        "maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java||maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java": [
          "File: maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java -> maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java"
        ],
        "maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/SnapshotTransformation.java||maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/SnapshotTransformation.java": [
          "File: maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/SnapshotTransformation.java -> maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/SnapshotTransformation.java"
        ],
        "maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java||maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java": [
          "File: maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java -> maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:     {",
          "166:         Versioning versioning = new Versioning();",
          "167:         versioning.setSnapshot( snapshot );",
          "169:         return versioning;",
          "170:     }",
          "",
          "[Removed Lines]",
          "168:         versioning.updateTimestamp();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java": [
          "File: maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java -> maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:         Map<Object, Object> configProps = new LinkedHashMap<>();",
          "103:         configProps.put( ConfigurationProperties.USER_AGENT, getUserAgent() );",
          "104:         configProps.put( ConfigurationProperties.INTERACTIVE, request.isInteractiveMode() );",
          "105:         configProps.putAll( request.getSystemProperties() );",
          "106:         configProps.putAll( request.getUserProperties() );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:         configProps.put( \"maven.startTime\", request.getStartTime() );",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.File;",
          "23: import java.util.ArrayList;",
          "24: import java.util.Collection;",
          "25: import java.util.LinkedHashMap;",
          "26: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.util.Date;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     private final boolean legacyFormat;",
          "46:     {",
          "48:         this.legacyFormat = legacyFormat;",
          "49:     }",
          "52:     {",
          "54:         this.legacyFormat = legacyFormat;",
          "55:     }",
          "",
          "[Removed Lines]",
          "45:     LocalSnapshotMetadata( Artifact artifact, boolean legacyFormat )",
          "47:         super( createMetadata( artifact, legacyFormat ), null );",
          "51:     LocalSnapshotMetadata( Metadata metadata, File file, boolean legacyFormat )",
          "53:         super( metadata, file );",
          "",
          "[Added Lines]",
          "46:     LocalSnapshotMetadata( Artifact artifact, boolean legacyFormat, Date timestamp )",
          "48:         super( createMetadata( artifact, legacyFormat ), null, timestamp );",
          "52:     LocalSnapshotMetadata( Metadata metadata, File file, boolean legacyFormat, Date timestamp )",
          "54:         super( metadata, file, timestamp );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:     public MavenMetadata setFile( File file )",
          "84:     {",
          "86:     }",
          "88:     public Object getKey()",
          "",
          "[Removed Lines]",
          "85:         return new LocalSnapshotMetadata( metadata, file, legacyFormat );",
          "",
          "[Added Lines]",
          "86:         return new LocalSnapshotMetadata( metadata, file, legacyFormat, timestamp );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "98:     @Override",
          "99:     protected void merge( Metadata recessive )",
          "100:     {",
          "103:         if ( !legacyFormat )",
          "104:         {",
          "",
          "[Removed Lines]",
          "101:         metadata.getVersioning().updateTimestamp();",
          "",
          "[Added Lines]",
          "102:         metadata.getVersioning().setLastUpdatedTimestamp( timestamp );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "160:         return Nature.SNAPSHOT;",
          "161:     }",
          "",
          "[Removed Lines]",
          "163: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.util.Collection;",
          "23: import java.util.Collections;",
          "24: import java.util.LinkedHashMap;",
          "25: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.util.Date;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     private final boolean legacyFormat;",
          "45:     LocalSnapshotMetadataGenerator( RepositorySystemSession session, InstallRequest request )",
          "46:     {",
          "47:         legacyFormat = ConfigUtils.getBoolean( session.getConfigProperties(), false, \"maven.metadata.legacy\" );",
          "49:         snapshots = new LinkedHashMap<>();",
          "50:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     private final Date timestamp;",
          "52:         timestamp = (Date) ConfigUtils.getObject( session, new Date(), \"maven.startTime\" );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:                 LocalSnapshotMetadata snapshotMetadata = snapshots.get( key );",
          "60:                 if ( snapshotMetadata == null )",
          "61:                 {",
          "63:                     snapshots.put( key, snapshotMetadata );",
          "64:                 }",
          "65:                 snapshotMetadata.bind( artifact );",
          "",
          "[Removed Lines]",
          "62:                     snapshotMetadata = new LocalSnapshotMetadata( artifact, legacyFormat );",
          "",
          "[Added Lines]",
          "67:                     snapshotMetadata = new LocalSnapshotMetadata( artifact, legacyFormat, timestamp );",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: import java.io.Reader;",
          "35: import java.io.Writer;",
          "36: import java.util.Collections;",
          "37: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: import java.util.Date;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:     static final String MAVEN_METADATA_XML = \"maven-metadata.xml\";",
          "49:     private final File file;",
          "53:     private boolean merged;",
          "56:     {",
          "57:         this.metadata = metadata;",
          "58:         this.file = file;",
          "59:     }",
          "61:     public String getType()",
          "",
          "[Removed Lines]",
          "51:     protected Metadata metadata;",
          "55:     protected MavenMetadata( Metadata metadata, File file )",
          "",
          "[Added Lines]",
          "50:     protected Metadata metadata;",
          "54:     protected final Date timestamp;",
          "58:     protected MavenMetadata( Metadata metadata, File file, Date timestamp )",
          "62:         this.timestamp = timestamp;",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenSnapshotMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenSnapshotMetadata.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenSnapshotMetadata.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenSnapshotMetadata.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.File;",
          "23: import java.util.ArrayList;",
          "24: import java.util.Collection;",
          "26: import org.apache.maven.artifact.repository.metadata.Metadata;",
          "27: import org.eclipse.aether.artifact.Artifact;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.util.Date;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:     protected final boolean legacyFormat;",
          "42:     {",
          "44:         this.legacyFormat = legacyFormat;",
          "45:     }",
          "",
          "[Removed Lines]",
          "41:     protected MavenSnapshotMetadata( Metadata metadata, File file, boolean legacyFormat )",
          "43:         super( metadata, file );",
          "",
          "[Added Lines]",
          "42:     protected MavenSnapshotMetadata( Metadata metadata, File file, boolean legacyFormat, Date timestamp )",
          "44:         super( metadata, file, timestamp );",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     private final Map<String, SnapshotVersion> versions = new LinkedHashMap<>();",
          "51:     {",
          "53:     }",
          "56:     {",
          "58:     }",
          "60:     public MavenMetadata setFile( File file )",
          "61:     {",
          "63:     }",
          "65:     public String getExpandedVersion( Artifact artifact )",
          "",
          "[Removed Lines]",
          "50:     RemoteSnapshotMetadata( Artifact artifact, boolean legacyFormat )",
          "52:         super( createRepositoryMetadata( artifact, legacyFormat ), null, legacyFormat );",
          "55:     private RemoteSnapshotMetadata( Metadata metadata, File file, boolean legacyFormat )",
          "57:         super( metadata, file, legacyFormat );",
          "62:         return new RemoteSnapshotMetadata( metadata, file, legacyFormat );",
          "",
          "[Added Lines]",
          "50:     RemoteSnapshotMetadata( Artifact artifact, boolean legacyFormat, Date timestamp )",
          "52:         super( createRepositoryMetadata( artifact, legacyFormat ), null, legacyFormat, timestamp );",
          "55:     private RemoteSnapshotMetadata( Metadata metadata, File file, boolean legacyFormat, Date timestamp )",
          "57:         super( metadata, file, legacyFormat, timestamp );",
          "62:         return new RemoteSnapshotMetadata( metadata, file, legacyFormat, timestamp );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:             snapshot = new Snapshot();",
          "84:             snapshot.setBuildNumber( getBuildNumber( recessive ) + 1 );",
          "87:             Versioning versioning = new Versioning();",
          "88:             versioning.setSnapshot( snapshot );",
          "90:             lastUpdated = versioning.getLastUpdated();",
          "92:             metadata.setVersioning( versioning );",
          "",
          "[Removed Lines]",
          "85:             snapshot.setTimestamp( utcDateFormatter.format( new Date() ) );",
          "89:             versioning.setLastUpdated( snapshot.getTimestamp().replace( \".\", \"\" ) );",
          "",
          "[Added Lines]",
          "85:             snapshot.setTimestamp( utcDateFormatter.format( timestamp ) );",
          "89:             versioning.setLastUpdatedTimestamp( timestamp );",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.util.Collection;",
          "23: import java.util.Collections;",
          "24: import java.util.LinkedHashMap;",
          "25: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.util.Date;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     private final boolean legacyFormat;",
          "45:     RemoteSnapshotMetadataGenerator( RepositorySystemSession session, DeployRequest request )",
          "46:     {",
          "49:         snapshots = new LinkedHashMap<>();",
          "",
          "[Removed Lines]",
          "47:         legacyFormat = ConfigUtils.getBoolean( session.getConfigProperties(), false, \"maven.metadata.legacy\" );",
          "",
          "[Added Lines]",
          "46:     private final Date timestamp;",
          "50:         legacyFormat = ConfigUtils.getBoolean( session, false, \"maven.metadata.legacy\" );",
          "52:         timestamp = (Date) ConfigUtils.getObject( session, new Date(), \"maven.startTime\" );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:                 RemoteSnapshotMetadata snapshotMetadata = snapshots.get( key );",
          "75:                 if ( snapshotMetadata == null )",
          "76:                 {",
          "78:                     snapshots.put( key, snapshotMetadata );",
          "79:                 }",
          "80:                 snapshotMetadata.bind( artifact );",
          "",
          "[Removed Lines]",
          "77:                     snapshotMetadata = new RemoteSnapshotMetadata( artifact, legacyFormat );",
          "",
          "[Added Lines]",
          "82:                     snapshotMetadata = new RemoteSnapshotMetadata( artifact, legacyFormat, timestamp );",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.File;",
          "23: import java.util.ArrayList;",
          "24: import java.util.Collection;",
          "25: import java.util.LinkedHashSet;",
          "27: import org.apache.maven.artifact.repository.metadata.Metadata;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.util.Date;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:     private final Artifact artifact;",
          "42:     {",
          "44:         this.artifact = artifact;",
          "45:     }",
          "48:     {",
          "50:         this.artifact = artifact;",
          "51:     }",
          "",
          "[Removed Lines]",
          "41:     VersionsMetadata( Artifact artifact )",
          "43:         super( createRepositoryMetadata( artifact ), null );",
          "47:     VersionsMetadata( Artifact artifact, File file )",
          "49:         super( createRepositoryMetadata( artifact ), file );",
          "",
          "[Added Lines]",
          "42:     VersionsMetadata( Artifact artifact, Date timestamp )",
          "44:         super( createRepositoryMetadata( artifact ), null, timestamp );",
          "48:     VersionsMetadata( Artifact artifact, File file, Date timestamp )",
          "50:         super( createRepositoryMetadata( artifact ), file, timestamp );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:     protected void merge( Metadata recessive )",
          "77:     {",
          "78:         Versioning versioning = metadata.getVersioning();",
          "81:         if ( recessive.getVersioning() != null )",
          "82:         {",
          "",
          "[Removed Lines]",
          "79:         versioning.updateTimestamp();",
          "",
          "[Added Lines]",
          "80:         versioning.setLastUpdatedTimestamp( timestamp );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:     public MavenMetadata setFile( File file )",
          "109:     {",
          "111:     }",
          "113:     public String getGroupId()",
          "",
          "[Removed Lines]",
          "110:         return new VersionsMetadata( artifact, file );",
          "",
          "[Added Lines]",
          "111:         return new VersionsMetadata( artifact, file, timestamp );",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadataGenerator.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadataGenerator.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadataGenerator.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadataGenerator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.util.Collection;",
          "23: import java.util.Collections;",
          "24: import java.util.Iterator;",
          "25: import java.util.LinkedHashMap;",
          "26: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.util.Date;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: import org.eclipse.aether.impl.MetadataGenerator;",
          "32: import org.eclipse.aether.installation.InstallRequest;",
          "33: import org.eclipse.aether.metadata.Metadata;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import org.eclipse.aether.util.ConfigUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:     private Map<Object, VersionsMetadata> processedVersions;",
          "46:     VersionsMetadataGenerator( RepositorySystemSession session, InstallRequest request )",
          "47:     {",
          "48:         this( session, request.getMetadata() );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:     private final Date timestamp;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "57:     {",
          "58:         versions = new LinkedHashMap<>();",
          "59:         processedVersions = new LinkedHashMap<>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:         timestamp = (Date) ConfigUtils.getObject( session, new Date(), \"maven.startTime\" );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "96:                 VersionsMetadata versionsMetadata = versions.get( key );",
          "97:                 if ( versionsMetadata == null )",
          "98:                 {",
          "100:                     versions.put( key, versionsMetadata );",
          "101:                 }",
          "102:             }",
          "",
          "[Removed Lines]",
          "99:                     versionsMetadata = new VersionsMetadata( artifact );",
          "",
          "[Added Lines]",
          "104:                     versionsMetadata = new VersionsMetadata( artifact, timestamp );",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataTest.java||maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataTest.java": [
          "File: maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataTest.java -> maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:         String dateBefore = gregorianDate();",
          "68:         RemoteSnapshotMetadata metadata = new RemoteSnapshotMetadata(",
          "70:         metadata.merge( new Metadata() );",
          "72:         String dateAfter = gregorianDate();",
          "",
          "[Removed Lines]",
          "69:                 new DefaultArtifact( \"a:b:1-SNAPSHOT\" ), false);",
          "",
          "[Added Lines]",
          "69:                 new DefaultArtifact( \"a:b:1-SNAPSHOT\" ), false, new Date() );",
          "",
          "---------------"
        ]
      }
    }
  ]
}