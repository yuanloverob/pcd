{
  "cve_id": "CVE-2020-9482",
  "cve_desc": "If NiFi Registry 0.1.0 to 0.5.0 uses an authentication mechanism other than PKI, when the user clicks Log Out, NiFi Registry invalidates the authentication token on the client side but not on the server side. This permits the user's client-side token to be used for up to 12 hours after logging out to make API requests to NiFi Registry.",
  "repo": "apache/nifi-registry",
  "patch_hash": "32f9352465e877d71ad7f85b70f2304ba620e133",
  "patch_info": {
    "commit_hash": "32f9352465e877d71ad7f85b70f2304ba620e133",
    "repo": "apache/nifi-registry",
    "commit_url": "https://github.com/apache/nifi-registry/pull/259/commits/32f9352465e877d71ad7f85b70f2304ba620e133",
    "files": [
      "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
      "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
      "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
      "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
      "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
      "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
    ],
    "message": "NIFIREG-361 - Improved handling of the /access/logout endpoint.",
    "before_after_code_files": [
      "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
      "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
      "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
      "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
      "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
      "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
    ]
  },
  "patch_diff": {
    "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java": [
      "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "48: import org.springframework.stereotype.Component;",
      "50: import javax.servlet.http.HttpServletRequest;",
      "51: import javax.ws.rs.Consumes;",
      "52: import javax.ws.rs.GET;",
      "53: import javax.ws.rs.POST;",
      "54: import javax.ws.rs.Path;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51: import javax.servlet.http.HttpServletResponse;",
      "53: import javax.ws.rs.DELETE;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "258:         return generateCreatedResponse(uri, token).build();",
      "259:     }",
      "261:     @POST",
      "262:     @Consumes(MediaType.WILDCARD)",
      "263:     @Produces(MediaType.TEXT_PLAIN)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "263:     @DELETE",
      "264:     @Consumes(MediaType.WILDCARD)",
      "265:     @Produces(MediaType.WILDCARD)",
      "266:     @Path(\"/logout\")",
      "267:     @ApiOperation(",
      "268:             value = \"Performs a logout for other providers that have been issued a JWT.\",",
      "269:             notes = NON_GUARANTEED_ENDPOINT",
      "270:     )",
      "271:     @ApiResponses(",
      "272:             value = {",
      "273:                     @ApiResponse(code = 200, message = \"User was logged out successfully.\"),",
      "274:                     @ApiResponse(code = 401, message = \"Authentication token provided was empty or not in the correct JWT format.\"),",
      "275:                     @ApiResponse(code = 500, message = \"Client failed to log out.\"),",
      "276:             }",
      "277:     )",
      "278:     public Response logOut(@Context HttpServletRequest httpServletRequest, @Context HttpServletResponse httpServletResponse) {",
      "279:         if (!httpServletRequest.isSecure()) {",
      "280:             throw new IllegalStateException(\"User authentication/authorization is only supported when running over HTTPS.\");",
      "281:         }",
      "283:         String userIdentity = NiFiUserUtils.getNiFiUserIdentity();",
      "285:         if(userIdentity != null && !userIdentity.isEmpty()) {",
      "286:             try {",
      "287:                 logger.info(\"Logging out user \" + userIdentity);",
      "288:                 jwtService.logOut(userIdentity);",
      "289:                 return generateOkResponse().build();",
      "290:             } catch (final JwtException e) {",
      "291:                 logger.error(\"Logout of user \" + userIdentity + \" failed due to: \" + e.getMessage());",
      "292:                 return Response.serverError().build();",
      "293:             }",
      "294:         } else {",
      "295:             return Response.status(401, \"Authentication token provided was empty or not in the correct JWT format.\").build();",
      "296:         }",
      "297:     }",
      "",
      "---------------"
    ],
    "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java": [
      "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "170:         return noCache(response);",
      "171:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "178:     protected Response.ResponseBuilder generateOkResponse() {",
      "179:         return noCache(Response.ok());",
      "180:     }",
      "",
      "---------------"
    ],
    "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java": [
      "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "171:     }",
      "173:     private static long validateTokenExpiration(long proposedTokenExpiration, String identity) {",
      "174:         final long maxExpiration = TimeUnit.MILLISECONDS.convert(12, TimeUnit.HOURS);",
      "175:         final long minExpiration = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:     }",
      "173:     public void logOut(String userIdentity) {",
      "174:         if (userIdentity == null || userIdentity.isEmpty()) {",
      "175:             throw new JwtException(\"Log out failed: The user identity was not present in the request token to log out user.\");",
      "176:         }",
      "178:         try {",
      "179:             keyService.deleteKey(userIdentity);",
      "180:             logger.info(\"Deleted token from database.\");",
      "181:         } catch (Exception e) {",
      "182:             logger.error(\"Unable to log out user: \" + userIdentity + \". Failed to remove their token from database.\");",
      "183:             throw e;",
      "184:         }",
      "",
      "---------------"
    ],
    "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java": [
      "File: nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java -> nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "92:     private static final String tokenLoginPath = \"access/token/login\";",
      "93:     private static final String tokenIdentityProviderPath = \"access/token/identity-provider\";",
      "95:     @TestConfiguration",
      "96:     @Profile(\"ITSecureLdap\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "95:     private static final String SIGNED_BY_WRONG_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\" +",
      "96:             \".eyJzdWIiOiJuaWZpYWRtaW4iLCJpc3MiOiJMZGFwSWRlbnRpdHlQcm92aWRlciIsImF1ZCI6IkxkYXB\" +",
      "97:             \"JZGVudGl0eVByb3ZpZGVyIiwicHJlZmVycmVkX3VzZXJuYW1lIjoibmlmaWFkbWluIiwia2lkIjoiNDd\" +",
      "98:             \"lMjA1NzctY2I3Yi00M2MzLWFhOGYtZjI0ZDcyODQ3MDEwIiwiaWF0IjoxNTgxNTI5NTA1LCJleHAiOjE\" +",
      "99:             \"1ODE1NzI3MDV9.vvMpwLJt1w_6Id_tlS1knxTkJ2gv7_j5ySG6PmNjF0s\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "297:     }",
      "299:     @Test",
      "300:     public void testUsers() throws Exception {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "305:     @Test",
      "306:     public void testLogout() {",
      "310:         final Response response = client",
      "311:                 .target(createURL(\"/access\"))",
      "312:                 .request()",
      "313:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
      "314:                 .get(Response.class);",
      "317:         assertEquals(200, response.getStatus());",
      "320:         final Response logout_response = client",
      "321:                 .target(createURL(\"/access/logout\"))",
      "322:                 .request()",
      "323:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
      "324:                 .delete(Response.class);",
      "326:         assertEquals(200, logout_response.getStatus());",
      "329:         final Response retryResponse = client",
      "330:                 .target(createURL(\"/access\"))",
      "331:                 .request()",
      "332:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
      "333:                 .get(Response.class);",
      "336:         assertEquals(401, retryResponse.getStatus());",
      "337:         String retryJson = retryResponse.readEntity(String.class);",
      "338:         assertEquals(\"Unable to validate the access token. Contact the system administrator.\\n\", retryJson);",
      "341:         setup();",
      "342:     }",
      "344:     @Test",
      "345:     public void testLogoutWithJWTSignedByWrongKey() throws Exception {",
      "348:         final Response logoutResponse = client",
      "349:                 .target(createURL(\"/access\"))",
      "350:                 .request()",
      "351:                 .header(\"Authorization\", \"Bearer \" + SIGNED_BY_WRONG_KEY)",
      "352:                 .delete(Response.class);",
      "354:         assertEquals(401, logoutResponse.getStatus());",
      "355:         String responseMessage = logoutResponse.readEntity(String.class);",
      "356:         assertEquals(\"Unable to validate the access token. Contact the system administrator.\\n\", responseMessage);",
      "357:     }",
      "",
      "---------------"
    ],
    "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js": [
      "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "73:     logout: function () {",
      "74:         delete this.nfRegistryService.currentUser.identity;",
      "75:         delete this.nfRegistryService.currentUser.anonymous;",
      "77:         this.router.navigateByUrl('login');",
      "78:     },",
      "",
      "[Removed Lines]",
      "76:         this.nfStorage.removeItem('jwt');",
      "",
      "[Added Lines]",
      "75:         $.ajax({",
      "76:             type: 'DELETE',",
      "77:             url: '../nifi-registry-api/access/logout',",
      "78:         }).done(function () {",
      "79:             delete this.nfRegistryService.currentUser.identity;",
      "80:             delete this.nfRegistryService.currentUser.anonymous;",
      "81:             this.nfStorage.removeItem('jwt');",
      "82:             this.router.navigateByUrl('login');",
      "83:         }).fail(nfErrorHandler.handleAjaxError);",
      "87:         this.nfRegistryApi.deleteToLogout().subscribe(function () {",
      "89:         });",
      "",
      "---------------"
    ],
    "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js": [
      "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "725:         );",
      "726:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "725:         );",
      "726:     },",
      "733:     deleteToLogout: function () {",
      "734:         var self = this;",
      "735:         var options = {",
      "736:             headers: headers,",
      "737:             withCredentials: true,",
      "738:             responseType: 'text'",
      "739:         };",
      "741:         return this.http.delete('../nifi-registry-api/access/logout', options).pipe(",
      "742:             map(function (response) {",
      "744:                 self.nfStorage.removeItem('jwt');",
      "745:                 return response;",
      "746:             }),",
      "747:             catchError(function (error) {",
      "748:                 self.dialogService.openConfirm({",
      "749:                     title: 'Error',",
      "750:                     message: 'Please contact your System Administrator.',",
      "751:                     acceptButton: 'Ok',",
      "752:                     acceptButtonColor: 'fds-warn'",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e1e50856f44dd2ebd9cbcf4fbb9a091e6b6d9a2c",
      "candidate_info": {
        "commit_hash": "e1e50856f44dd2ebd9cbcf4fbb9a091e6b6d9a2c",
        "repo": "apache/nifi-registry",
        "commit_url": "https://github.com/apache/nifi-registry/commit/e1e50856f44dd2ebd9cbcf4fbb9a091e6b6d9a2c",
        "files": [
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
        ],
        "message": "NIFIREG-361 - Fixed javascript as per code review. Tested with ldap, still logs out user as expected.",
        "before_after_code_files": [
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
          ],
          "candidate": [
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
          ]
        }
      },
      "candidate_diff": {
        "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js": [
          "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     logout: function () {",
          "80:     },",
          "",
          "[Removed Lines]",
          "74:         this.nfRegistryApi.deleteToLogout().subscribe(function () {",
          "76:         });",
          "77:         delete this.nfRegistryService.currentUser.identity;",
          "78:         delete this.nfRegistryService.currentUser.anonymous;",
          "79:         this.router.navigateByUrl('login');",
          "",
          "[Added Lines]",
          "74:         var self = this;",
          "75:         self.nfRegistryApi.deleteToLogout().subscribe(",
          "76:             function () {",
          "78:             },",
          "79:             function () {",
          "81:             },",
          "82:             function () {",
          "84:                 self.nfStorage.removeItem('jwt');",
          "85:                 delete self.nfRegistryService.currentUser.identity;",
          "86:                 delete self.nfRegistryService.currentUser.anonymous;",
          "87:                 self.router.navigateByUrl('login');",
          "88:             }",
          "89:         );",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js": [
          "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "741:         return this.http.delete('../nifi-registry-api/access/logout', options).pipe(",
          "742:             map(function (response) {",
          "745:                 return response;",
          "746:             }),",
          "747:             catchError(function (error) {",
          "",
          "[Removed Lines]",
          "744:                 self.nfStorage.removeItem('jwt');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd0cc85c56b47e0cc2ec0f4193c3a1ef4992357e",
      "candidate_info": {
        "commit_hash": "bd0cc85c56b47e0cc2ec0f4193c3a1ef4992357e",
        "repo": "apache/nifi-registry",
        "commit_url": "https://github.com/apache/nifi-registry/commit/bd0cc85c56b47e0cc2ec0f4193c3a1ef4992357e",
        "files": [
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
          "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
        ],
        "message": "NIFIREG-361 - Improved handling of the /access/logout endpoint.",
        "before_after_code_files": [
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
          "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
            "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
          ],
          "candidate": [
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
            "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
          ]
        }
      },
      "candidate_diff": {
        "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: import org.springframework.stereotype.Component;",
          "50: import javax.servlet.http.HttpServletRequest;",
          "51: import javax.ws.rs.Consumes;",
          "52: import javax.ws.rs.GET;",
          "53: import javax.ws.rs.POST;",
          "54: import javax.ws.rs.Path;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: import javax.servlet.http.HttpServletResponse;",
          "53: import javax.ws.rs.DELETE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "258:         return generateCreatedResponse(uri, token).build();",
          "259:     }",
          "261:     @POST",
          "262:     @Consumes(MediaType.WILDCARD)",
          "263:     @Produces(MediaType.TEXT_PLAIN)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:     @DELETE",
          "264:     @Consumes(MediaType.WILDCARD)",
          "265:     @Produces(MediaType.WILDCARD)",
          "266:     @Path(\"/logout\")",
          "267:     @ApiOperation(",
          "268:             value = \"Performs a logout for other providers that have been issued a JWT.\",",
          "269:             notes = NON_GUARANTEED_ENDPOINT",
          "270:     )",
          "271:     @ApiResponses(",
          "272:             value = {",
          "273:                     @ApiResponse(code = 200, message = \"User was logged out successfully.\"),",
          "274:                     @ApiResponse(code = 401, message = \"Authentication token provided was empty or not in the correct JWT format.\"),",
          "275:                     @ApiResponse(code = 500, message = \"Client failed to log out.\"),",
          "276:             }",
          "277:     )",
          "278:     public Response logOut(@Context HttpServletRequest httpServletRequest, @Context HttpServletResponse httpServletResponse) {",
          "279:         if (!httpServletRequest.isSecure()) {",
          "280:             throw new IllegalStateException(\"User authentication/authorization is only supported when running over HTTPS.\");",
          "281:         }",
          "283:         String userIdentity = NiFiUserUtils.getNiFiUserIdentity();",
          "285:         if(userIdentity != null && !userIdentity.isEmpty()) {",
          "286:             try {",
          "287:                 logger.info(\"Logging out user \" + userIdentity);",
          "288:                 jwtService.logOut(userIdentity);",
          "289:                 return generateOkResponse().build();",
          "290:             } catch (final JwtException e) {",
          "291:                 logger.error(\"Logout of user \" + userIdentity + \" failed due to: \" + e.getMessage());",
          "292:                 return Response.serverError().build();",
          "293:             }",
          "294:         } else {",
          "295:             return Response.status(401, \"Authentication token provided was empty or not in the correct JWT format.\").build();",
          "296:         }",
          "297:     }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:         return noCache(response);",
          "171:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:     protected Response.ResponseBuilder generateOkResponse() {",
          "179:         return noCache(Response.ok());",
          "180:     }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:     }",
          "173:     private static long validateTokenExpiration(long proposedTokenExpiration, String identity) {",
          "174:         final long maxExpiration = TimeUnit.MILLISECONDS.convert(12, TimeUnit.HOURS);",
          "175:         final long minExpiration = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:     }",
          "173:     public void logOut(String userIdentity) {",
          "174:         if (userIdentity == null || userIdentity.isEmpty()) {",
          "175:             throw new JwtException(\"Log out failed: The user identity was not present in the request token to log out user.\");",
          "176:         }",
          "178:         try {",
          "179:             keyService.deleteKey(userIdentity);",
          "180:             logger.info(\"Deleted token from database.\");",
          "181:         } catch (Exception e) {",
          "182:             logger.error(\"Unable to log out user: \" + userIdentity + \". Failed to remove their token from database.\");",
          "183:             throw e;",
          "184:         }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java -> nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     private static final String tokenLoginPath = \"access/token/login\";",
          "93:     private static final String tokenIdentityProviderPath = \"access/token/identity-provider\";",
          "95:     @TestConfiguration",
          "96:     @Profile(\"ITSecureLdap\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:     private static final String SIGNED_BY_WRONG_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\" +",
          "96:             \".eyJzdWIiOiJuaWZpYWRtaW4iLCJpc3MiOiJMZGFwSWRlbnRpdHlQcm92aWRlciIsImF1ZCI6IkxkYXB\" +",
          "97:             \"JZGVudGl0eVByb3ZpZGVyIiwicHJlZmVycmVkX3VzZXJuYW1lIjoibmlmaWFkbWluIiwia2lkIjoiNDd\" +",
          "98:             \"lMjA1NzctY2I3Yi00M2MzLWFhOGYtZjI0ZDcyODQ3MDEwIiwiaWF0IjoxNTgxNTI5NTA1LCJleHAiOjE\" +",
          "99:             \"1ODE1NzI3MDV9.vvMpwLJt1w_6Id_tlS1knxTkJ2gv7_j5ySG6PmNjF0s\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297:     }",
          "299:     @Test",
          "300:     public void testUsers() throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305:     @Test",
          "306:     public void testLogout() {",
          "310:         final Response response = client",
          "311:                 .target(createURL(\"/access\"))",
          "312:                 .request()",
          "313:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
          "314:                 .get(Response.class);",
          "317:         assertEquals(200, response.getStatus());",
          "320:         final Response logout_response = client",
          "321:                 .target(createURL(\"/access/logout\"))",
          "322:                 .request()",
          "323:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
          "324:                 .delete(Response.class);",
          "326:         assertEquals(200, logout_response.getStatus());",
          "329:         final Response retryResponse = client",
          "330:                 .target(createURL(\"/access\"))",
          "331:                 .request()",
          "332:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
          "333:                 .get(Response.class);",
          "336:         assertEquals(401, retryResponse.getStatus());",
          "337:         String retryJson = retryResponse.readEntity(String.class);",
          "338:         assertEquals(\"Unable to validate the access token. Contact the system administrator.\\n\", retryJson);",
          "341:         setup();",
          "342:     }",
          "344:     @Test",
          "345:     public void testLogoutWithJWTSignedByWrongKey() throws Exception {",
          "348:         final Response logoutResponse = client",
          "349:                 .target(createURL(\"/access\"))",
          "350:                 .request()",
          "351:                 .header(\"Authorization\", \"Bearer \" + SIGNED_BY_WRONG_KEY)",
          "352:                 .delete(Response.class);",
          "354:         assertEquals(401, logoutResponse.getStatus());",
          "355:         String responseMessage = logoutResponse.readEntity(String.class);",
          "356:         assertEquals(\"Unable to validate the access token. Contact the system administrator.\\n\", responseMessage);",
          "357:     }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js": [
          "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     logout: function () {",
          "74:         delete this.nfRegistryService.currentUser.identity;",
          "75:         delete this.nfRegistryService.currentUser.anonymous;",
          "77:         this.router.navigateByUrl('login');",
          "78:     },",
          "",
          "[Removed Lines]",
          "76:         this.nfStorage.removeItem('jwt');",
          "",
          "[Added Lines]",
          "75:         $.ajax({",
          "76:             type: 'DELETE',",
          "77:             url: '../nifi-registry-api/access/logout',",
          "78:         }).done(function () {",
          "79:             delete this.nfRegistryService.currentUser.identity;",
          "80:             delete this.nfRegistryService.currentUser.anonymous;",
          "81:             this.nfStorage.removeItem('jwt');",
          "82:             this.router.navigateByUrl('login');",
          "83:         }).fail(nfErrorHandler.handleAjaxError);",
          "87:         this.nfRegistryApi.deleteToLogout().subscribe(function () {",
          "89:         });",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js": [
          "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "725:         );",
          "726:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "725:         );",
          "726:     },",
          "733:     deleteToLogout: function () {",
          "734:         var self = this;",
          "735:         var options = {",
          "736:             headers: headers,",
          "737:             withCredentials: true,",
          "738:             responseType: 'text'",
          "739:         };",
          "741:         return this.http.delete('../nifi-registry-api/access/logout', options).pipe(",
          "742:             map(function (response) {",
          "744:                 self.nfStorage.removeItem('jwt');",
          "745:                 return response;",
          "746:             }),",
          "747:             catchError(function (error) {",
          "748:                 self.dialogService.openConfirm({",
          "749:                     title: 'Error',",
          "750:                     message: 'Please contact your System Administrator.',",
          "751:                     acceptButton: 'Ok',",
          "752:                     acceptButtonColor: 'fds-warn'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d15b7da32d08726c2f6b6f5aaef86488c757e64",
      "candidate_info": {
        "commit_hash": "2d15b7da32d08726c2f6b6f5aaef86488c757e64",
        "repo": "apache/nifi-registry",
        "commit_url": "https://github.com/apache/nifi-registry/commit/2d15b7da32d08726c2f6b6f5aaef86488c757e64",
        "files": [
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
          "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
        ],
        "message": "NIFIREG-361 - Improved handling of the /access/logout endpoint.",
        "before_after_code_files": [
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
          "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
          "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
            "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
          ],
          "candidate": [
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
            "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
            "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
            "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js"
          ]
        }
      },
      "candidate_diff": {
        "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/AccessResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: import org.springframework.stereotype.Component;",
          "50: import javax.servlet.http.HttpServletRequest;",
          "51: import javax.ws.rs.Consumes;",
          "52: import javax.ws.rs.GET;",
          "53: import javax.ws.rs.POST;",
          "54: import javax.ws.rs.Path;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: import javax.servlet.http.HttpServletResponse;",
          "53: import javax.ws.rs.DELETE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "260:         return generateCreatedResponse(uri, token).build();",
          "261:     }",
          "263:     @POST",
          "264:     @Consumes(MediaType.WILDCARD)",
          "265:     @Produces(MediaType.TEXT_PLAIN)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265:     @DELETE",
          "266:     @Consumes(MediaType.WILDCARD)",
          "267:     @Produces(MediaType.WILDCARD)",
          "268:     @Path(\"/logout\")",
          "269:     @ApiOperation(",
          "270:             value = \"Performs a logout for other providers that have been issued a JWT.\",",
          "271:             notes = NON_GUARANTEED_ENDPOINT",
          "272:     )",
          "273:     @ApiResponses(",
          "274:             value = {",
          "275:                     @ApiResponse(code = 200, message = \"User was logged out successfully.\"),",
          "276:                     @ApiResponse(code = 401, message = \"Authentication token provided was empty or not in the correct JWT format.\"),",
          "277:                     @ApiResponse(code = 500, message = \"Client failed to log out.\"),",
          "278:             }",
          "279:     )",
          "280:     public Response logOut(@Context HttpServletRequest httpServletRequest, @Context HttpServletResponse httpServletResponse) {",
          "281:         if (!httpServletRequest.isSecure()) {",
          "282:             throw new IllegalStateException(\"User authentication/authorization is only supported when running over HTTPS.\");",
          "283:         }",
          "285:         String userIdentity = NiFiUserUtils.getNiFiUserIdentity();",
          "287:         if(userIdentity != null && !userIdentity.isEmpty()) {",
          "288:             try {",
          "289:                 logger.info(\"Logging out user \" + userIdentity);",
          "290:                 jwtService.logOut(userIdentity);",
          "291:                 return generateOkResponse().build();",
          "292:             } catch (final JwtException e) {",
          "293:                 logger.error(\"Logout of user \" + userIdentity + \" failed due to: \" + e.getMessage());",
          "294:                 return Response.serverError().build();",
          "295:             }",
          "296:         } else {",
          "297:             return Response.status(401, \"Authentication token provided was empty or not in the correct JWT format.\").build();",
          "298:         }",
          "299:     }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/ApplicationResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         return noCache(response);",
          "160:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:     protected Response.ResponseBuilder generateOkResponse() {",
          "168:         return noCache(Response.ok());",
          "169:     }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java||nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java -> nifi-registry-core/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/security/authentication/jwt/JwtService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:     }",
          "173:     private static long validateTokenExpiration(long proposedTokenExpiration, String identity) {",
          "174:         final long maxExpiration = TimeUnit.MILLISECONDS.convert(12, TimeUnit.HOURS);",
          "175:         final long minExpiration = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:     }",
          "173:     public void logOut(String userIdentity) {",
          "174:         if (userIdentity == null || userIdentity.isEmpty()) {",
          "175:             throw new JwtException(\"Log out failed: The user identity was not present in the request token to log out user.\");",
          "176:         }",
          "178:         try {",
          "179:             keyService.deleteKey(userIdentity);",
          "180:             logger.info(\"Deleted token from database.\");",
          "181:         } catch (Exception e) {",
          "182:             logger.error(\"Unable to log out user: \" + userIdentity + \". Failed to remove their token from database.\");",
          "183:             throw e;",
          "184:         }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java||nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java": [
          "File: nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java -> nifi-registry-core/nifi-registry-web-api/src/test/java/org/apache/nifi/registry/web/api/SecureLdapIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     private static final String tokenLoginPath = \"access/token/login\";",
          "87:     private static final String tokenIdentityProviderPath = \"access/token/identity-provider\";",
          "89:     @TestConfiguration",
          "90:     @Profile(\"ITSecureLdap\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:     private static final String SIGNED_BY_WRONG_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\" +",
          "90:             \".eyJzdWIiOiJuaWZpYWRtaW4iLCJpc3MiOiJMZGFwSWRlbnRpdHlQcm92aWRlciIsImF1ZCI6IkxkYXB\" +",
          "91:             \"JZGVudGl0eVByb3ZpZGVyIiwicHJlZmVycmVkX3VzZXJuYW1lIjoibmlmaWFkbWluIiwia2lkIjoiNDd\" +",
          "92:             \"lMjA1NzctY2I3Yi00M2MzLWFhOGYtZjI0ZDcyODQ3MDEwIiwiaWF0IjoxNTgxNTI5NTA1LCJleHAiOjE\" +",
          "93:             \"1ODE1NzI3MDV9.vvMpwLJt1w_6Id_tlS1knxTkJ2gv7_j5ySG6PmNjF0s\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:     }",
          "290:     @Test",
          "291:     public void testUsers() throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296:     @Test",
          "297:     public void testLogout() {",
          "301:         final Response response = client",
          "302:                 .target(createURL(\"/access\"))",
          "303:                 .request()",
          "304:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
          "305:                 .get(Response.class);",
          "308:         assertEquals(200, response.getStatus());",
          "311:         final Response logout_response = client",
          "312:                 .target(createURL(\"/access/logout\"))",
          "313:                 .request()",
          "314:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
          "315:                 .delete(Response.class);",
          "317:         assertEquals(200, logout_response.getStatus());",
          "320:         final Response retryResponse = client",
          "321:                 .target(createURL(\"/access\"))",
          "322:                 .request()",
          "323:                 .header(\"Authorization\", \"Bearer \" + adminAuthToken)",
          "324:                 .get(Response.class);",
          "327:         assertEquals(401, retryResponse.getStatus());",
          "328:         String retryJson = retryResponse.readEntity(String.class);",
          "329:         assertEquals(\"Unable to validate the access token. Contact the system administrator.\\n\", retryJson);",
          "332:         setup();",
          "333:     }",
          "335:     @Test",
          "336:     public void testLogoutWithJWTSignedByWrongKey() throws Exception {",
          "339:         final Response logoutResponse = client",
          "340:                 .target(createURL(\"/access\"))",
          "341:                 .request()",
          "342:                 .header(\"Authorization\", \"Bearer \" + SIGNED_BY_WRONG_KEY)",
          "343:                 .delete(Response.class);",
          "345:         assertEquals(401, logoutResponse.getStatus());",
          "346:         String responseMessage = logoutResponse.readEntity(String.class);",
          "347:         assertEquals(\"Unable to validate the access token. Contact the system administrator.\\n\", responseMessage);",
          "348:     }",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js": [
          "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/nf-registry.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     logout: function () {",
          "74:         delete this.nfRegistryService.currentUser.identity;",
          "75:         delete this.nfRegistryService.currentUser.anonymous;",
          "77:         this.router.navigateByUrl('login');",
          "78:     },",
          "",
          "[Removed Lines]",
          "76:         this.nfStorage.removeItem('jwt');",
          "",
          "[Added Lines]",
          "75:         $.ajax({",
          "76:             type: 'DELETE',",
          "77:             url: '../nifi-registry-api/access/logout',",
          "78:         }).done(function () {",
          "79:             delete this.nfRegistryService.currentUser.identity;",
          "80:             delete this.nfRegistryService.currentUser.anonymous;",
          "81:             this.nfStorage.removeItem('jwt');",
          "82:             this.router.navigateByUrl('login');",
          "83:         }).fail(nfErrorHandler.handleAjaxError);",
          "87:         this.nfRegistryApi.deleteToLogout().subscribe(function () {",
          "89:         });",
          "",
          "---------------"
        ],
        "nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js||nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js": [
          "File: nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js -> nifi-registry-core/nifi-registry-web-ui/src/main/webapp/services/nf-registry.api.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "702:         );",
          "703:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "702:         );",
          "703:     },",
          "710:     deleteToLogout: function () {",
          "711:         var self = this;",
          "712:         var options = {",
          "713:             headers: headers,",
          "714:             withCredentials: true,",
          "715:             responseType: 'text'",
          "716:         };",
          "718:         return this.http.delete('../nifi-registry-api/access/logout', options).pipe(",
          "719:             map(function (response) {",
          "721:                 self.nfStorage.removeItem('jwt');",
          "722:                 return response;",
          "723:             }),",
          "724:             catchError(function (error) {",
          "725:                 self.dialogService.openConfirm({",
          "726:                     title: 'Error',",
          "727:                     message: 'Please contact your System Administrator.',",
          "728:                     acceptButton: 'Ok',",
          "729:                     acceptButtonColor: 'fds-warn'",
          "",
          "---------------"
        ]
      }
    }
  ]
}