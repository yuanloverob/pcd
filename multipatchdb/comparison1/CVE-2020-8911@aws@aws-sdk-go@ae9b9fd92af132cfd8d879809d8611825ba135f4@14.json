{
  "cve_id": "CVE-2020-8911",
  "cve_desc": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6cf43244c1b5ef52a33956f8191f08076422f3ae",
      "candidate_info": {
        "commit_hash": "6cf43244c1b5ef52a33956f8191f08076422f3ae",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/6cf43244c1b5ef52a33956f8191f08076422f3ae",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/apigateway/2015-07-09/api-2.json",
          "models/apis/apigateway/2015-07-09/docs-2.json",
          "models/apis/apigatewayv2/2018-11-29/api-2.json",
          "models/apis/apigatewayv2/2018-11-29/docs-2.json",
          "models/apis/cloudfront/2020-05-31/docs-2.json",
          "models/apis/comprehend/2017-11-27/api-2.json",
          "models/apis/comprehend/2017-11-27/docs-2.json",
          "models/apis/es/2015-01-01/api-2.json",
          "models/apis/es/2015-01-01/docs-2.json",
          "models/apis/kendra/2019-02-03/api-2.json",
          "models/apis/kendra/2019-02-03/docs-2.json",
          "models/apis/transcribe-streaming/2017-10-26/api-2.json",
          "models/apis/transcribe-streaming/2017-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/apigateway/api.go",
          "service/apigatewayv2/api.go",
          "service/cloudfront/api.go",
          "service/comprehend/api.go",
          "service/comprehend/comprehendiface/interface.go",
          "service/elasticsearchservice/api.go",
          "service/kendra/api.go",
          "service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go"
        ],
        "message": "Release v1.34.26 (2020-09-17) (#3541)\n\nRelease v1.34.26 (2020-09-17)\n===\n\n### Service Client Updates\n* `service/apigateway`: Updates service API and documentation\n  * Adds support for mutual TLS authentication for public regional REST Apis\n* `service/apigatewayv2`: Updates service API and documentation\n  * Adds support for mutual TLS authentication and disableAPIExecuteEndpoint for public regional HTTP Apis\n* `service/cloudfront`: Updates service documentation\n  * Documentation updates for CloudFront\n* `service/comprehend`: Updates service API and documentation\n* `service/es`: Updates service API and documentation\n  * Adds support for data plane audit logging in Amazon Elasticsearch Service.\n* `service/kendra`: Updates service API and documentation\n  * Amazon Kendra now supports additional file formats and metadata for FAQs.\n* `service/transcribe-streaming`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/apigateway/api.go||service/apigateway/api.go",
          "service/apigatewayv2/api.go||service/apigatewayv2/api.go",
          "service/cloudfront/api.go||service/cloudfront/api.go",
          "service/comprehend/api.go||service/comprehend/api.go",
          "service/comprehend/comprehendiface/interface.go||service/comprehend/comprehendiface/interface.go",
          "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go",
          "service/kendra/api.go||service/kendra/api.go",
          "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:     Protocols: []string{\"https\"},",
          "350:    },",
          "351:    Endpoints: endpoints{",
          "352:     \"ap-east-1\":      endpoint{},",
          "353:     \"ap-northeast-1\": endpoint{},",
          "354:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358:     \"ca-central-1\":   endpoint{},",
          "359:     \"eu-central-1\":   endpoint{},",
          "360:     \"eu-north-1\":     endpoint{},",
          "361:     \"eu-west-1\":      endpoint{},",
          "362:     \"eu-west-2\":      endpoint{},",
          "363:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "362:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1250:     \"ca-central-1\":   endpoint{},",
          "1251:     \"eu-central-1\":   endpoint{},",
          "1252:     \"eu-north-1\":     endpoint{},",
          "1253:     \"eu-west-1\":      endpoint{},",
          "1254:     \"eu-west-2\":      endpoint{},",
          "1255:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1255:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.25\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.26\"",
          "",
          "---------------"
        ],
        "service/apigateway/api.go||service/apigateway/api.go": [
          "File: service/apigateway/api.go -> service/apigateway/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12717:  EndpointConfiguration *EndpointConfiguration `locationName:\"endpointConfiguration\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12725:  MutualTlsAuthentication *MutualTlsAuthenticationInput `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12800:  return s",
          "12801: }",
          "12804: func (s *CreateDomainNameInput) SetRegionalCertificateArn(v string) *CreateDomainNameInput {",
          "12805:  s.RegionalCertificateArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12812: func (s *CreateDomainNameInput) SetMutualTlsAuthentication(v *MutualTlsAuthenticationInput) *CreateDomainNameInput {",
          "12813:  s.MutualTlsAuthentication = v",
          "12814:  return s",
          "12815: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15537:  EndpointConfiguration *EndpointConfiguration `locationName:\"endpointConfiguration\" type:\"structure\"`",
          "15541:  RegionalCertificateArn *string `locationName:\"regionalCertificateArn\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15557:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "15627:  return s",
          "15628: }",
          "15631: func (s *DomainName) SetRegionalCertificateArn(v string) *DomainName {",
          "15632:  s.RegionalCertificateArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15651: func (s *DomainName) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *DomainName {",
          "15652:  s.MutualTlsAuthentication = v",
          "15653:  return s",
          "15654: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "20942:  return s",
          "20943: }",
          "20946: type NotFoundException struct {",
          "20947:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20974: type MutualTlsAuthentication struct {",
          "20975:  _ struct{} `type:\"structure\"`",
          "20983:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "20987:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "20993:  TruststoreWarnings []*string `locationName:\"truststoreWarnings\" type:\"list\"`",
          "20994: }",
          "20997: func (s MutualTlsAuthentication) String() string {",
          "20998:  return awsutil.Prettify(s)",
          "20999: }",
          "21002: func (s MutualTlsAuthentication) GoString() string {",
          "21003:  return s.String()",
          "21004: }",
          "21007: func (s *MutualTlsAuthentication) SetTruststoreUri(v string) *MutualTlsAuthentication {",
          "21008:  s.TruststoreUri = &v",
          "21009:  return s",
          "21010: }",
          "21013: func (s *MutualTlsAuthentication) SetTruststoreVersion(v string) *MutualTlsAuthentication {",
          "21014:  s.TruststoreVersion = &v",
          "21015:  return s",
          "21016: }",
          "21019: func (s *MutualTlsAuthentication) SetTruststoreWarnings(v []*string) *MutualTlsAuthentication {",
          "21020:  s.TruststoreWarnings = v",
          "21021:  return s",
          "21022: }",
          "21027: type MutualTlsAuthenticationInput struct {",
          "21028:  _ struct{} `type:\"structure\"`",
          "21036:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "21040:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "21041: }",
          "21044: func (s MutualTlsAuthenticationInput) String() string {",
          "21045:  return awsutil.Prettify(s)",
          "21046: }",
          "21049: func (s MutualTlsAuthenticationInput) GoString() string {",
          "21050:  return s.String()",
          "21051: }",
          "21054: func (s *MutualTlsAuthenticationInput) SetTruststoreUri(v string) *MutualTlsAuthenticationInput {",
          "21055:  s.TruststoreUri = &v",
          "21056:  return s",
          "21057: }",
          "21060: func (s *MutualTlsAuthenticationInput) SetTruststoreVersion(v string) *MutualTlsAuthenticationInput {",
          "21061:  s.TruststoreVersion = &v",
          "21062:  return s",
          "21063: }",
          "",
          "---------------"
        ],
        "service/apigatewayv2/api.go||service/apigatewayv2/api.go": [
          "File: service/apigatewayv2/api.go -> service/apigatewayv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6435:  Description *string `locationName:\"description\" type:\"string\"`",
          "6439:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6441:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6523:  return s",
          "6524: }",
          "6527: func (s *Api) SetDisableSchemaValidation(v bool) *Api {",
          "6528:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6533: func (s *Api) SetDisableExecuteApiEndpoint(v bool) *Api {",
          "6534:  s.DisableExecuteApiEndpoint = &v",
          "6535:  return s",
          "6536: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7007:  Description *string `locationName:\"description\" type:\"string\"`",
          "7009:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7021:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7095:  return s",
          "7096: }",
          "7099: func (s *CreateApiInput) SetDisableSchemaValidation(v bool) *CreateApiInput {",
          "7100:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7113: func (s *CreateApiInput) SetDisableExecuteApiEndpoint(v bool) *CreateApiInput {",
          "7114:  s.DisableExecuteApiEndpoint = &v",
          "7115:  return s",
          "7116: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7303:  Description *string `locationName:\"description\" type:\"string\"`",
          "7305:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "7307:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7325:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7378:  return s",
          "7379: }",
          "7382: func (s *CreateApiOutput) SetDisableSchemaValidation(v bool) *CreateApiOutput {",
          "7383:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7404: func (s *CreateApiOutput) SetDisableExecuteApiEndpoint(v bool) *CreateApiOutput {",
          "7405:  s.DisableExecuteApiEndpoint = &v",
          "7406:  return s",
          "7407: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7845:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "7848:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "7849: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7878:  MutualTlsAuthentication *MutualTlsAuthenticationInput `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7883:  return s",
          "7884: }",
          "7887: func (s *CreateDomainNameInput) SetTags(v map[string]*string) *CreateDomainNameInput {",
          "7888:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7920: func (s *CreateDomainNameInput) SetMutualTlsAuthentication(v *MutualTlsAuthenticationInput) *CreateDomainNameInput {",
          "7921:  s.MutualTlsAuthentication = v",
          "7922:  return s",
          "7923: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7904:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "7907:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "7908: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7948:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7935:  return s",
          "7936: }",
          "7939: func (s *CreateDomainNameOutput) SetTags(v map[string]*string) *CreateDomainNameOutput {",
          "7940:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7983: func (s *CreateDomainNameOutput) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *CreateDomainNameOutput {",
          "7984:  s.MutualTlsAuthentication = v",
          "7985:  return s",
          "7986: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10783:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "10786:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "10787: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10836:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10814:  return s",
          "10815: }",
          "10818: func (s *DomainName) SetTags(v map[string]*string) *DomainName {",
          "10819:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10871: func (s *DomainName) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *DomainName {",
          "10872:  s.MutualTlsAuthentication = v",
          "10873:  return s",
          "10874: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11299:  Description *string `locationName:\"description\" type:\"string\"`",
          "11301:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "11303:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11360:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11374:  return s",
          "11375: }",
          "11378: func (s *GetApiOutput) SetDisableSchemaValidation(v bool) *GetApiOutput {",
          "11379:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11439: func (s *GetApiOutput) SetDisableExecuteApiEndpoint(v bool) *GetApiOutput {",
          "11440:  s.DisableExecuteApiEndpoint = &v",
          "11441:  return s",
          "11442: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "12012:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "12015:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "12016: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12084:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "12043:  return s",
          "12044: }",
          "12047: func (s *GetDomainNameOutput) SetTags(v map[string]*string) *GetDomainNameOutput {",
          "12048:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12119: func (s *GetDomainNameOutput) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *GetDomainNameOutput {",
          "12120:  s.MutualTlsAuthentication = v",
          "12121:  return s",
          "12122: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "14123:  Description *string `locationName:\"description\" type:\"string\"`",
          "14125:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "14127:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14203:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14198:  return s",
          "14199: }",
          "14202: func (s *ImportApiOutput) SetDisableSchemaValidation(v bool) *ImportApiOutput {",
          "14203:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14282: func (s *ImportApiOutput) SetDisableExecuteApiEndpoint(v bool) *ImportApiOutput {",
          "14283:  s.DisableExecuteApiEndpoint = &v",
          "14284:  return s",
          "14285: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "14719:  return s",
          "14720: }",
          "14724: type NotFoundException struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14811: type MutualTlsAuthentication struct {",
          "14812:  _ struct{} `type:\"structure\"`",
          "14820:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "14824:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "14830:  TruststoreWarnings []*string `locationName:\"truststoreWarnings\" type:\"list\"`",
          "14831: }",
          "14834: func (s MutualTlsAuthentication) String() string {",
          "14835:  return awsutil.Prettify(s)",
          "14836: }",
          "14839: func (s MutualTlsAuthentication) GoString() string {",
          "14840:  return s.String()",
          "14841: }",
          "14844: func (s *MutualTlsAuthentication) SetTruststoreUri(v string) *MutualTlsAuthentication {",
          "14845:  s.TruststoreUri = &v",
          "14846:  return s",
          "14847: }",
          "14850: func (s *MutualTlsAuthentication) SetTruststoreVersion(v string) *MutualTlsAuthentication {",
          "14851:  s.TruststoreVersion = &v",
          "14852:  return s",
          "14853: }",
          "14856: func (s *MutualTlsAuthentication) SetTruststoreWarnings(v []*string) *MutualTlsAuthentication {",
          "14857:  s.TruststoreWarnings = v",
          "14858:  return s",
          "14859: }",
          "14864: type MutualTlsAuthenticationInput struct {",
          "14865:  _ struct{} `type:\"structure\"`",
          "14873:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "14877:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "14878: }",
          "14881: func (s MutualTlsAuthenticationInput) String() string {",
          "14882:  return awsutil.Prettify(s)",
          "14883: }",
          "14886: func (s MutualTlsAuthenticationInput) GoString() string {",
          "14887:  return s.String()",
          "14888: }",
          "14891: func (s *MutualTlsAuthenticationInput) SetTruststoreUri(v string) *MutualTlsAuthenticationInput {",
          "14892:  s.TruststoreUri = &v",
          "14893:  return s",
          "14894: }",
          "14897: func (s *MutualTlsAuthenticationInput) SetTruststoreVersion(v string) *MutualTlsAuthenticationInput {",
          "14898:  s.TruststoreVersion = &v",
          "14899:  return s",
          "14900: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "14898:  Description *string `locationName:\"description\" type:\"string\"`",
          "14900:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "14902:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15080:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "14973:  return s",
          "14974: }",
          "14977: func (s *ReimportApiOutput) SetDisableSchemaValidation(v bool) *ReimportApiOutput {",
          "14978:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15159: func (s *ReimportApiOutput) SetDisableExecuteApiEndpoint(v bool) *ReimportApiOutput {",
          "15160:  s.DisableExecuteApiEndpoint = &v",
          "15161:  return s",
          "15162: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "15782:  Description *string `locationName:\"description\" type:\"string\"`",
          "15784:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15972:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "15866:  return s",
          "15867: }",
          "15870: func (s *UpdateApiInput) SetDisableSchemaValidation(v bool) *UpdateApiInput {",
          "15871:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16060: func (s *UpdateApiInput) SetDisableExecuteApiEndpoint(v bool) *UpdateApiInput {",
          "16061:  s.DisableExecuteApiEndpoint = &v",
          "16062:  return s",
          "16063: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "16072:  Description *string `locationName:\"description\" type:\"string\"`",
          "16074:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "16076:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16270:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "16147:  return s",
          "16148: }",
          "16151: func (s *UpdateApiOutput) SetDisableSchemaValidation(v bool) *UpdateApiOutput {",
          "16152:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16349: func (s *UpdateApiOutput) SetDisableExecuteApiEndpoint(v bool) *UpdateApiOutput {",
          "16350:  s.DisableExecuteApiEndpoint = &v",
          "16351:  return s",
          "16352: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "16618:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "16619: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16827:  MutualTlsAuthentication *MutualTlsAuthenticationInput `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "16656:  return s",
          "16657: }",
          "16659: type UpdateDomainNameOutput struct {",
          "16660:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16869: func (s *UpdateDomainNameInput) SetMutualTlsAuthentication(v *MutualTlsAuthenticationInput) *UpdateDomainNameInput {",
          "16870:  s.MutualTlsAuthentication = v",
          "16871:  return s",
          "16872: }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "16671:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "16674:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "16675: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16891:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "16702:  return s",
          "16703: }",
          "16706: func (s *UpdateDomainNameOutput) SetTags(v map[string]*string) *UpdateDomainNameOutput {",
          "16707:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16926: func (s *UpdateDomainNameOutput) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *UpdateDomainNameOutput {",
          "16927:  s.MutualTlsAuthentication = v",
          "16928:  return s",
          "16929: }",
          "",
          "---------------"
        ],
        "service/cloudfront/api.go||service/cloudfront/api.go": [
          "File: service/cloudfront/api.go -> service/cloudfront/api.go"
        ],
        "service/comprehend/api.go||service/comprehend/api.go": [
          "File: service/comprehend/api.go -> service/comprehend/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1845:  return out, req.Send()",
          "1846: }",
          "1848: const opDescribeSentimentDetectionJob = \"DescribeSentimentDetectionJob\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1848: const opDescribePiiEntitiesDetectionJob = \"DescribePiiEntitiesDetectionJob\"",
          "1874: func (c *Comprehend) DescribePiiEntitiesDetectionJobRequest(input *DescribePiiEntitiesDetectionJobInput) (req *request.Request, output *DescribePiiEntitiesDetectionJobOutput) {",
          "1875:  op := &request.Operation{",
          "1876:   Name:       opDescribePiiEntitiesDetectionJob,",
          "1877:   HTTPMethod: \"POST\",",
          "1878:   HTTPPath:   \"/\",",
          "1879:  }",
          "1881:  if input == nil {",
          "1882:   input = &DescribePiiEntitiesDetectionJobInput{}",
          "1883:  }",
          "1885:  output = &DescribePiiEntitiesDetectionJobOutput{}",
          "1886:  req = c.newRequest(op, input, output)",
          "1887:  return",
          "1888: }",
          "1916: func (c *Comprehend) DescribePiiEntitiesDetectionJob(input *DescribePiiEntitiesDetectionJobInput) (*DescribePiiEntitiesDetectionJobOutput, error) {",
          "1917:  req, out := c.DescribePiiEntitiesDetectionJobRequest(input)",
          "1918:  return out, req.Send()",
          "1919: }",
          "1930: func (c *Comprehend) DescribePiiEntitiesDetectionJobWithContext(ctx aws.Context, input *DescribePiiEntitiesDetectionJobInput, opts ...request.Option) (*DescribePiiEntitiesDetectionJobOutput, error) {",
          "1931:  req, out := c.DescribePiiEntitiesDetectionJobRequest(input)",
          "1932:  req.SetContext(ctx)",
          "1933:  req.ApplyOptions(opts...)",
          "1934:  return out, req.Send()",
          "1935: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2299:  return out, req.Send()",
          "2300: }",
          "2302: const opDetectSentiment = \"DetectSentiment\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2391: const opDetectPiiEntities = \"DetectPiiEntities\"",
          "2417: func (c *Comprehend) DetectPiiEntitiesRequest(input *DetectPiiEntitiesInput) (req *request.Request, output *DetectPiiEntitiesOutput) {",
          "2418:  op := &request.Operation{",
          "2419:   Name:       opDetectPiiEntities,",
          "2420:   HTTPMethod: \"POST\",",
          "2421:   HTTPPath:   \"/\",",
          "2422:  }",
          "2424:  if input == nil {",
          "2425:   input = &DetectPiiEntitiesInput{}",
          "2426:  }",
          "2428:  output = &DetectPiiEntitiesOutput{}",
          "2429:  req = c.newRequest(op, input, output)",
          "2430:  return",
          "2431: }",
          "2463: func (c *Comprehend) DetectPiiEntities(input *DetectPiiEntitiesInput) (*DetectPiiEntitiesOutput, error) {",
          "2464:  req, out := c.DetectPiiEntitiesRequest(input)",
          "2465:  return out, req.Send()",
          "2466: }",
          "2477: func (c *Comprehend) DetectPiiEntitiesWithContext(ctx aws.Context, input *DetectPiiEntitiesInput, opts ...request.Option) (*DetectPiiEntitiesOutput, error) {",
          "2478:  req, out := c.DetectPiiEntitiesRequest(input)",
          "2479:  req.SetContext(ctx)",
          "2480:  req.ApplyOptions(opts...)",
          "2481:  return out, req.Send()",
          "2482: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3453:  return p.Err()",
          "3454: }",
          "3456: const opListSentimentDetectionJobs = \"ListSentimentDetectionJobs\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3638: const opListPiiEntitiesDetectionJobs = \"ListPiiEntitiesDetectionJobs\"",
          "3664: func (c *Comprehend) ListPiiEntitiesDetectionJobsRequest(input *ListPiiEntitiesDetectionJobsInput) (req *request.Request, output *ListPiiEntitiesDetectionJobsOutput) {",
          "3665:  op := &request.Operation{",
          "3666:   Name:       opListPiiEntitiesDetectionJobs,",
          "3667:   HTTPMethod: \"POST\",",
          "3668:   HTTPPath:   \"/\",",
          "3669:  }",
          "3671:  if input == nil {",
          "3672:   input = &ListPiiEntitiesDetectionJobsInput{}",
          "3673:  }",
          "3675:  output = &ListPiiEntitiesDetectionJobsOutput{}",
          "3676:  req = c.newRequest(op, input, output)",
          "3677:  return",
          "3678: }",
          "3705: func (c *Comprehend) ListPiiEntitiesDetectionJobs(input *ListPiiEntitiesDetectionJobsInput) (*ListPiiEntitiesDetectionJobsOutput, error) {",
          "3706:  req, out := c.ListPiiEntitiesDetectionJobsRequest(input)",
          "3707:  return out, req.Send()",
          "3708: }",
          "3719: func (c *Comprehend) ListPiiEntitiesDetectionJobsWithContext(ctx aws.Context, input *ListPiiEntitiesDetectionJobsInput, opts ...request.Option) (*ListPiiEntitiesDetectionJobsOutput, error) {",
          "3720:  req, out := c.ListPiiEntitiesDetectionJobsRequest(input)",
          "3721:  req.SetContext(ctx)",
          "3722:  req.ApplyOptions(opts...)",
          "3723:  return out, req.Send()",
          "3724: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4212:  return out, req.Send()",
          "4213: }",
          "4242:  op := &request.Operation{",
          "4244:   HTTPMethod: \"POST\",",
          "4245:   HTTPPath:   \"/\",",
          "4246:  }",
          "4248:  if input == nil {",
          "4250:  }",
          "4253:  req = c.newRequest(op, input, output)",
          "4254:  return",
          "4255: }",
          "",
          "[Removed Lines]",
          "4215: const opStartSentimentDetectionJob = \"StartSentimentDetectionJob\"",
          "4241: func (c *Comprehend) StartSentimentDetectionJobRequest(input *StartSentimentDetectionJobInput) (req *request.Request, output *StartSentimentDetectionJobOutput) {",
          "4243:   Name:       opStartSentimentDetectionJob,",
          "4249:   input = &StartSentimentDetectionJobInput{}",
          "4252:  output = &StartSentimentDetectionJobOutput{}",
          "",
          "[Added Lines]",
          "4485: const opStartPiiEntitiesDetectionJob = \"StartPiiEntitiesDetectionJob\"",
          "4511: func (c *Comprehend) StartPiiEntitiesDetectionJobRequest(input *StartPiiEntitiesDetectionJobInput) (req *request.Request, output *StartPiiEntitiesDetectionJobOutput) {",
          "4513:   Name:       opStartPiiEntitiesDetectionJob,",
          "4519:   input = &StartPiiEntitiesDetectionJobInput{}",
          "4522:  output = &StartPiiEntitiesDetectionJobOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4286:  return out, req.Send()",
          "4287: }",
          "4300:  req.SetContext(ctx)",
          "4301:  req.ApplyOptions(opts...)",
          "4302:  return out, req.Send()",
          "4303: }",
          "4332:  op := &request.Operation{",
          "4334:   HTTPMethod: \"POST\",",
          "4335:   HTTPPath:   \"/\",",
          "4336:  }",
          "4338:  if input == nil {",
          "4340:  }",
          "4343:  req = c.newRequest(op, input, output)",
          "4344:  return",
          "4345: }",
          "",
          "[Removed Lines]",
          "4284: func (c *Comprehend) StartSentimentDetectionJob(input *StartSentimentDetectionJobInput) (*StartSentimentDetectionJobOutput, error) {",
          "4285:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4298: func (c *Comprehend) StartSentimentDetectionJobWithContext(ctx aws.Context, input *StartSentimentDetectionJobInput, opts ...request.Option) (*StartSentimentDetectionJobOutput, error) {",
          "4299:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4305: const opStartTopicsDetectionJob = \"StartTopicsDetectionJob\"",
          "4331: func (c *Comprehend) StartTopicsDetectionJobRequest(input *StartTopicsDetectionJobInput) (req *request.Request, output *StartTopicsDetectionJobOutput) {",
          "4333:   Name:       opStartTopicsDetectionJob,",
          "4339:   input = &StartTopicsDetectionJobInput{}",
          "4342:  output = &StartTopicsDetectionJobOutput{}",
          "",
          "[Added Lines]",
          "4553: func (c *Comprehend) StartPiiEntitiesDetectionJob(input *StartPiiEntitiesDetectionJobInput) (*StartPiiEntitiesDetectionJobOutput, error) {",
          "4554:  req, out := c.StartPiiEntitiesDetectionJobRequest(input)",
          "4567: func (c *Comprehend) StartPiiEntitiesDetectionJobWithContext(ctx aws.Context, input *StartPiiEntitiesDetectionJobInput, opts ...request.Option) (*StartPiiEntitiesDetectionJobOutput, error) {",
          "4568:  req, out := c.StartPiiEntitiesDetectionJobRequest(input)",
          "4574: const opStartSentimentDetectionJob = \"StartSentimentDetectionJob\"",
          "4600: func (c *Comprehend) StartSentimentDetectionJobRequest(input *StartSentimentDetectionJobInput) (req *request.Request, output *StartSentimentDetectionJobOutput) {",
          "4602:   Name:       opStartSentimentDetectionJob,",
          "4608:   input = &StartSentimentDetectionJobInput{}",
          "4611:  output = &StartSentimentDetectionJobOutput{}",
          "4643: func (c *Comprehend) StartSentimentDetectionJob(input *StartSentimentDetectionJobInput) (*StartSentimentDetectionJobOutput, error) {",
          "4644:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4645:  return out, req.Send()",
          "4646: }",
          "4657: func (c *Comprehend) StartSentimentDetectionJobWithContext(ctx aws.Context, input *StartSentimentDetectionJobInput, opts ...request.Option) (*StartSentimentDetectionJobOutput, error) {",
          "4658:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4659:  req.SetContext(ctx)",
          "4660:  req.ApplyOptions(opts...)",
          "4661:  return out, req.Send()",
          "4662: }",
          "4664: const opStartTopicsDetectionJob = \"StartTopicsDetectionJob\"",
          "4690: func (c *Comprehend) StartTopicsDetectionJobRequest(input *StartTopicsDetectionJobInput) (req *request.Request, output *StartTopicsDetectionJobOutput) {",
          "4691:  op := &request.Operation{",
          "4692:   Name:       opStartTopicsDetectionJob,",
          "4693:   HTTPMethod: \"POST\",",
          "4694:   HTTPPath:   \"/\",",
          "4695:  }",
          "4697:  if input == nil {",
          "4698:   input = &StartTopicsDetectionJobInput{}",
          "4699:  }",
          "4701:  output = &StartTopicsDetectionJobOutput{}",
          "4702:  req = c.newRequest(op, input, output)",
          "4703:  return",
          "4704: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4680:  return out, req.Send()",
          "4681: }",
          "4683: const opStopSentimentDetectionJob = \"StopSentimentDetectionJob\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5042: const opStopPiiEntitiesDetectionJob = \"StopPiiEntitiesDetectionJob\"",
          "5068: func (c *Comprehend) StopPiiEntitiesDetectionJobRequest(input *StopPiiEntitiesDetectionJobInput) (req *request.Request, output *StopPiiEntitiesDetectionJobOutput) {",
          "5069:  op := &request.Operation{",
          "5070:   Name:       opStopPiiEntitiesDetectionJob,",
          "5071:   HTTPMethod: \"POST\",",
          "5072:   HTTPPath:   \"/\",",
          "5073:  }",
          "5075:  if input == nil {",
          "5076:   input = &StopPiiEntitiesDetectionJobInput{}",
          "5077:  }",
          "5079:  output = &StopPiiEntitiesDetectionJobOutput{}",
          "5080:  req = c.newRequest(op, input, output)",
          "5081:  return",
          "5082: }",
          "5106: func (c *Comprehend) StopPiiEntitiesDetectionJob(input *StopPiiEntitiesDetectionJobInput) (*StopPiiEntitiesDetectionJobOutput, error) {",
          "5107:  req, out := c.StopPiiEntitiesDetectionJobRequest(input)",
          "5108:  return out, req.Send()",
          "5109: }",
          "5120: func (c *Comprehend) StopPiiEntitiesDetectionJobWithContext(ctx aws.Context, input *StopPiiEntitiesDetectionJobInput, opts ...request.Option) (*StopPiiEntitiesDetectionJobOutput, error) {",
          "5121:  req, out := c.StopPiiEntitiesDetectionJobRequest(input)",
          "5122:  req.SetContext(ctx)",
          "5123:  req.ApplyOptions(opts...)",
          "5124:  return out, req.Send()",
          "5125: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7458:  return s",
          "7459: }",
          "7461: type DescribeSentimentDetectionJobInput struct {",
          "7462:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7905: type DescribePiiEntitiesDetectionJobInput struct {",
          "7906:  _ struct{} `type:\"structure\"`",
          "7912:  JobId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7913: }",
          "7916: func (s DescribePiiEntitiesDetectionJobInput) String() string {",
          "7917:  return awsutil.Prettify(s)",
          "7918: }",
          "7921: func (s DescribePiiEntitiesDetectionJobInput) GoString() string {",
          "7922:  return s.String()",
          "7923: }",
          "7926: func (s *DescribePiiEntitiesDetectionJobInput) Validate() error {",
          "7927:  invalidParams := request.ErrInvalidParams{Context: \"DescribePiiEntitiesDetectionJobInput\"}",
          "7928:  if s.JobId == nil {",
          "7929:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "7930:  }",
          "7931:  if s.JobId != nil && len(*s.JobId) < 1 {",
          "7932:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 1))",
          "7933:  }",
          "7935:  if invalidParams.Len() > 0 {",
          "7936:   return invalidParams",
          "7937:  }",
          "7938:  return nil",
          "7939: }",
          "7942: func (s *DescribePiiEntitiesDetectionJobInput) SetJobId(v string) *DescribePiiEntitiesDetectionJobInput {",
          "7943:  s.JobId = &v",
          "7944:  return s",
          "7945: }",
          "7947: type DescribePiiEntitiesDetectionJobOutput struct {",
          "7948:  _ struct{} `type:\"structure\"`",
          "7951:  PiiEntitiesDetectionJobProperties *PiiEntitiesDetectionJobProperties `type:\"structure\"`",
          "7952: }",
          "7955: func (s DescribePiiEntitiesDetectionJobOutput) String() string {",
          "7956:  return awsutil.Prettify(s)",
          "7957: }",
          "7960: func (s DescribePiiEntitiesDetectionJobOutput) GoString() string {",
          "7961:  return s.String()",
          "7962: }",
          "7965: func (s *DescribePiiEntitiesDetectionJobOutput) SetPiiEntitiesDetectionJobProperties(v *PiiEntitiesDetectionJobProperties) *DescribePiiEntitiesDetectionJobOutput {",
          "7966:  s.PiiEntitiesDetectionJobProperties = v",
          "7967:  return s",
          "7968: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7841:  return s",
          "7842: }",
          "7845:  _ struct{} `type:\"structure\"`",
          "7851:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"LanguageCode\"`",
          "",
          "[Removed Lines]",
          "7844: type DetectSentimentInput struct {",
          "",
          "[Added Lines]",
          "8353: type DetectPiiEntitiesInput struct {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7858: }",
          "7862:  return awsutil.Prettify(s)",
          "7863: }",
          "7867:  return s.String()",
          "7868: }",
          "7873:  if s.LanguageCode == nil {",
          "7874:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "7875:  }",
          "",
          "[Removed Lines]",
          "7857:  Text *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7861: func (s DetectSentimentInput) String() string {",
          "7866: func (s DetectSentimentInput) GoString() string {",
          "7871: func (s *DetectSentimentInput) Validate() error {",
          "7872:  invalidParams := request.ErrInvalidParams{Context: \"DetectSentimentInput\"}",
          "",
          "[Added Lines]",
          "8365:  Text *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8369: func (s DetectPiiEntitiesInput) String() string {",
          "8374: func (s DetectPiiEntitiesInput) GoString() string {",
          "8379: func (s *DetectPiiEntitiesInput) Validate() error {",
          "8380:  invalidParams := request.ErrInvalidParams{Context: \"DetectPiiEntitiesInput\"}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7887: }",
          "7891:  s.LanguageCode = &v",
          "7892:  return s",
          "7893: }",
          "7897:  s.Text = &v",
          "7898:  return s",
          "7899: }",
          "7910: }",
          "7914:  return awsutil.Prettify(s)",
          "7915: }",
          "7919:  return s.String()",
          "7920: }",
          "7931:  return s",
          "7932: }",
          "7935:  _ struct{} `type:\"structure\"`",
          "7948:  Text *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7949: }",
          "7953:  return awsutil.Prettify(s)",
          "7954: }",
          "7958:  return s.String()",
          "7959: }",
          "7963:  invalidParams := request.ErrInvalidParams{Context: \"DetectSyntaxInput\"}",
          "7964:  if s.LanguageCode == nil {",
          "7965:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "",
          "[Removed Lines]",
          "7890: func (s *DetectSentimentInput) SetLanguageCode(v string) *DetectSentimentInput {",
          "7896: func (s *DetectSentimentInput) SetText(v string) *DetectSentimentInput {",
          "7901: type DetectSentimentOutput struct {",
          "7902:  _ struct{} `type:\"structure\" sensitive:\"true\"`",
          "7906:  Sentiment *string `type:\"string\" enum:\"SentimentType\"`",
          "7909:  SentimentScore *SentimentScore `type:\"structure\"`",
          "7913: func (s DetectSentimentOutput) String() string {",
          "7918: func (s DetectSentimentOutput) GoString() string {",
          "7923: func (s *DetectSentimentOutput) SetSentiment(v string) *DetectSentimentOutput {",
          "7924:  s.Sentiment = &v",
          "7925:  return s",
          "7926: }",
          "7929: func (s *DetectSentimentOutput) SetSentimentScore(v *SentimentScore) *DetectSentimentOutput {",
          "7930:  s.SentimentScore = v",
          "7934: type DetectSyntaxInput struct {",
          "7942:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"SyntaxLanguageCode\"`",
          "7952: func (s DetectSyntaxInput) String() string {",
          "7957: func (s DetectSyntaxInput) GoString() string {",
          "7962: func (s *DetectSyntaxInput) Validate() error {",
          "",
          "[Added Lines]",
          "8398: func (s *DetectPiiEntitiesInput) SetLanguageCode(v string) *DetectPiiEntitiesInput {",
          "8404: func (s *DetectPiiEntitiesInput) SetText(v string) *DetectPiiEntitiesInput {",
          "8409: type DetectPiiEntitiesOutput struct {",
          "8410:  _ struct{} `type:\"structure\"`",
          "8415:  Entities []*PiiEntity `type:\"list\"`",
          "8419: func (s DetectPiiEntitiesOutput) String() string {",
          "8424: func (s DetectPiiEntitiesOutput) GoString() string {",
          "8429: func (s *DetectPiiEntitiesOutput) SetEntities(v []*PiiEntity) *DetectPiiEntitiesOutput {",
          "8430:  s.Entities = v",
          "8434: type DetectSentimentInput struct {",
          "8441:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"LanguageCode\"`",
          "8451: func (s DetectSentimentInput) String() string {",
          "8456: func (s DetectSentimentInput) GoString() string {",
          "8461: func (s *DetectSentimentInput) Validate() error {",
          "8462:  invalidParams := request.ErrInvalidParams{Context: \"DetectSentimentInput\"}",
          "8463:  if s.LanguageCode == nil {",
          "8464:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "8465:  }",
          "8466:  if s.Text == nil {",
          "8467:   invalidParams.Add(request.NewErrParamRequired(\"Text\"))",
          "8468:  }",
          "8469:  if s.Text != nil && len(*s.Text) < 1 {",
          "8470:   invalidParams.Add(request.NewErrParamMinLen(\"Text\", 1))",
          "8471:  }",
          "8473:  if invalidParams.Len() > 0 {",
          "8474:   return invalidParams",
          "8475:  }",
          "8476:  return nil",
          "8477: }",
          "8480: func (s *DetectSentimentInput) SetLanguageCode(v string) *DetectSentimentInput {",
          "8481:  s.LanguageCode = &v",
          "8482:  return s",
          "8483: }",
          "8486: func (s *DetectSentimentInput) SetText(v string) *DetectSentimentInput {",
          "8487:  s.Text = &v",
          "8488:  return s",
          "8489: }",
          "8491: type DetectSentimentOutput struct {",
          "8492:  _ struct{} `type:\"structure\" sensitive:\"true\"`",
          "8496:  Sentiment *string `type:\"string\" enum:\"SentimentType\"`",
          "8499:  SentimentScore *SentimentScore `type:\"structure\"`",
          "8500: }",
          "8503: func (s DetectSentimentOutput) String() string {",
          "8504:  return awsutil.Prettify(s)",
          "8505: }",
          "8508: func (s DetectSentimentOutput) GoString() string {",
          "8509:  return s.String()",
          "8510: }",
          "8513: func (s *DetectSentimentOutput) SetSentiment(v string) *DetectSentimentOutput {",
          "8514:  s.Sentiment = &v",
          "8515:  return s",
          "8516: }",
          "8519: func (s *DetectSentimentOutput) SetSentimentScore(v *SentimentScore) *DetectSentimentOutput {",
          "8520:  s.SentimentScore = v",
          "8521:  return s",
          "8522: }",
          "8524: type DetectSyntaxInput struct {",
          "8525:  _ struct{} `type:\"structure\"`",
          "8532:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"SyntaxLanguageCode\"`",
          "8538:  Text *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8539: }",
          "8542: func (s DetectSyntaxInput) String() string {",
          "8543:  return awsutil.Prettify(s)",
          "8544: }",
          "8547: func (s DetectSyntaxInput) GoString() string {",
          "8548:  return s.String()",
          "8549: }",
          "8552: func (s *DetectSyntaxInput) Validate() error {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "11197:  return s",
          "11198: }",
          "11200: type ListSentimentDetectionJobsInput struct {",
          "11201:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11790: type ListPiiEntitiesDetectionJobsInput struct {",
          "11791:  _ struct{} `type:\"structure\"`",
          "11796:  Filter *PiiEntitiesDetectionJobFilter `type:\"structure\"`",
          "11799:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "11802:  NextToken *string `min:\"1\" type:\"string\"`",
          "11803: }",
          "11806: func (s ListPiiEntitiesDetectionJobsInput) String() string {",
          "11807:  return awsutil.Prettify(s)",
          "11808: }",
          "11811: func (s ListPiiEntitiesDetectionJobsInput) GoString() string {",
          "11812:  return s.String()",
          "11813: }",
          "11816: func (s *ListPiiEntitiesDetectionJobsInput) Validate() error {",
          "11817:  invalidParams := request.ErrInvalidParams{Context: \"ListPiiEntitiesDetectionJobsInput\"}",
          "11818:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "11819:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "11820:  }",
          "11821:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "11822:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "11823:  }",
          "11824:  if s.Filter != nil {",
          "11825:   if err := s.Filter.Validate(); err != nil {",
          "11826:    invalidParams.AddNested(\"Filter\", err.(request.ErrInvalidParams))",
          "11827:   }",
          "11828:  }",
          "11830:  if invalidParams.Len() > 0 {",
          "11831:   return invalidParams",
          "11832:  }",
          "11833:  return nil",
          "11834: }",
          "11837: func (s *ListPiiEntitiesDetectionJobsInput) SetFilter(v *PiiEntitiesDetectionJobFilter) *ListPiiEntitiesDetectionJobsInput {",
          "11838:  s.Filter = v",
          "11839:  return s",
          "11840: }",
          "11843: func (s *ListPiiEntitiesDetectionJobsInput) SetMaxResults(v int64) *ListPiiEntitiesDetectionJobsInput {",
          "11844:  s.MaxResults = &v",
          "11845:  return s",
          "11846: }",
          "11849: func (s *ListPiiEntitiesDetectionJobsInput) SetNextToken(v string) *ListPiiEntitiesDetectionJobsInput {",
          "11850:  s.NextToken = &v",
          "11851:  return s",
          "11852: }",
          "11854: type ListPiiEntitiesDetectionJobsOutput struct {",
          "11855:  _ struct{} `type:\"structure\"`",
          "11858:  NextToken *string `min:\"1\" type:\"string\"`",
          "11861:  PiiEntitiesDetectionJobPropertiesList []*PiiEntitiesDetectionJobProperties `type:\"list\"`",
          "11862: }",
          "11865: func (s ListPiiEntitiesDetectionJobsOutput) String() string {",
          "11866:  return awsutil.Prettify(s)",
          "11867: }",
          "11870: func (s ListPiiEntitiesDetectionJobsOutput) GoString() string {",
          "11871:  return s.String()",
          "11872: }",
          "11875: func (s *ListPiiEntitiesDetectionJobsOutput) SetNextToken(v string) *ListPiiEntitiesDetectionJobsOutput {",
          "11876:  s.NextToken = &v",
          "11877:  return s",
          "11878: }",
          "11881: func (s *ListPiiEntitiesDetectionJobsOutput) SetPiiEntitiesDetectionJobPropertiesList(v []*PiiEntitiesDetectionJobProperties) *ListPiiEntitiesDetectionJobsOutput {",
          "11882:  s.PiiEntitiesDetectionJobPropertiesList = v",
          "11883:  return s",
          "11884: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "11556:  return s.String()",
          "11557: }",
          "11562:  return s",
          "11563: }",
          "11568:  return s",
          "11569: }",
          "",
          "[Removed Lines]",
          "11560: func (s *PartOfSpeechTag) SetScore(v float64) *PartOfSpeechTag {",
          "11561:  s.Score = &v",
          "11566: func (s *PartOfSpeechTag) SetTag(v string) *PartOfSpeechTag {",
          "11567:  s.Tag = &v",
          "",
          "[Added Lines]",
          "12246: func (s *PartOfSpeechTag) SetScore(v float64) *PartOfSpeechTag {",
          "12247:  s.Score = &v",
          "12248:  return s",
          "12249: }",
          "12252: func (s *PartOfSpeechTag) SetTag(v string) *PartOfSpeechTag {",
          "12253:  s.Tag = &v",
          "12254:  return s",
          "12255: }",
          "12258: type PiiEntitiesDetectionJobFilter struct {",
          "12259:  _ struct{} `type:\"structure\"`",
          "12262:  JobName *string `min:\"1\" type:\"string\"`",
          "12266:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "12271:  SubmitTimeAfter *time.Time `type:\"timestamp\"`",
          "12276:  SubmitTimeBefore *time.Time `type:\"timestamp\"`",
          "12277: }",
          "12280: func (s PiiEntitiesDetectionJobFilter) String() string {",
          "12281:  return awsutil.Prettify(s)",
          "12282: }",
          "12285: func (s PiiEntitiesDetectionJobFilter) GoString() string {",
          "12286:  return s.String()",
          "12287: }",
          "12290: func (s *PiiEntitiesDetectionJobFilter) Validate() error {",
          "12291:  invalidParams := request.ErrInvalidParams{Context: \"PiiEntitiesDetectionJobFilter\"}",
          "12292:  if s.JobName != nil && len(*s.JobName) < 1 {",
          "12293:   invalidParams.Add(request.NewErrParamMinLen(\"JobName\", 1))",
          "12294:  }",
          "12296:  if invalidParams.Len() > 0 {",
          "12297:   return invalidParams",
          "12298:  }",
          "12299:  return nil",
          "12300: }",
          "12303: func (s *PiiEntitiesDetectionJobFilter) SetJobName(v string) *PiiEntitiesDetectionJobFilter {",
          "12304:  s.JobName = &v",
          "12305:  return s",
          "12306: }",
          "12309: func (s *PiiEntitiesDetectionJobFilter) SetJobStatus(v string) *PiiEntitiesDetectionJobFilter {",
          "12310:  s.JobStatus = &v",
          "12311:  return s",
          "12312: }",
          "12315: func (s *PiiEntitiesDetectionJobFilter) SetSubmitTimeAfter(v time.Time) *PiiEntitiesDetectionJobFilter {",
          "12316:  s.SubmitTimeAfter = &v",
          "12317:  return s",
          "12318: }",
          "12321: func (s *PiiEntitiesDetectionJobFilter) SetSubmitTimeBefore(v time.Time) *PiiEntitiesDetectionJobFilter {",
          "12322:  s.SubmitTimeBefore = &v",
          "12323:  return s",
          "12324: }",
          "12327: type PiiEntitiesDetectionJobProperties struct {",
          "12328:  _ struct{} `type:\"structure\"`",
          "12332:  DataAccessRoleArn *string `min:\"20\" type:\"string\"`",
          "12335:  EndTime *time.Time `type:\"timestamp\"`",
          "12338:  InputDataConfig *InputDataConfig `type:\"structure\"`",
          "12341:  JobId *string `min:\"1\" type:\"string\"`",
          "12344:  JobName *string `min:\"1\" type:\"string\"`",
          "12348:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "12351:  LanguageCode *string `type:\"string\" enum:\"LanguageCode\"`",
          "12354:  Message *string `type:\"string\"`",
          "12358:  Mode *string `type:\"string\" enum:\"PiiEntitiesDetectionMode\"`",
          "12362:  OutputDataConfig *PiiOutputDataConfig `type:\"structure\"`",
          "12369:  RedactionConfig *RedactionConfig `type:\"structure\"`",
          "12372:  SubmitTime *time.Time `type:\"timestamp\"`",
          "12373: }",
          "12376: func (s PiiEntitiesDetectionJobProperties) String() string {",
          "12377:  return awsutil.Prettify(s)",
          "12378: }",
          "12381: func (s PiiEntitiesDetectionJobProperties) GoString() string {",
          "12382:  return s.String()",
          "12383: }",
          "12386: func (s *PiiEntitiesDetectionJobProperties) SetDataAccessRoleArn(v string) *PiiEntitiesDetectionJobProperties {",
          "12387:  s.DataAccessRoleArn = &v",
          "12388:  return s",
          "12389: }",
          "12392: func (s *PiiEntitiesDetectionJobProperties) SetEndTime(v time.Time) *PiiEntitiesDetectionJobProperties {",
          "12393:  s.EndTime = &v",
          "12394:  return s",
          "12395: }",
          "12398: func (s *PiiEntitiesDetectionJobProperties) SetInputDataConfig(v *InputDataConfig) *PiiEntitiesDetectionJobProperties {",
          "12399:  s.InputDataConfig = v",
          "12400:  return s",
          "12401: }",
          "12404: func (s *PiiEntitiesDetectionJobProperties) SetJobId(v string) *PiiEntitiesDetectionJobProperties {",
          "12405:  s.JobId = &v",
          "12406:  return s",
          "12407: }",
          "12410: func (s *PiiEntitiesDetectionJobProperties) SetJobName(v string) *PiiEntitiesDetectionJobProperties {",
          "12411:  s.JobName = &v",
          "12412:  return s",
          "12413: }",
          "12416: func (s *PiiEntitiesDetectionJobProperties) SetJobStatus(v string) *PiiEntitiesDetectionJobProperties {",
          "12417:  s.JobStatus = &v",
          "12418:  return s",
          "12419: }",
          "12422: func (s *PiiEntitiesDetectionJobProperties) SetLanguageCode(v string) *PiiEntitiesDetectionJobProperties {",
          "12423:  s.LanguageCode = &v",
          "12424:  return s",
          "12425: }",
          "12428: func (s *PiiEntitiesDetectionJobProperties) SetMessage(v string) *PiiEntitiesDetectionJobProperties {",
          "12429:  s.Message = &v",
          "12430:  return s",
          "12431: }",
          "12434: func (s *PiiEntitiesDetectionJobProperties) SetMode(v string) *PiiEntitiesDetectionJobProperties {",
          "12435:  s.Mode = &v",
          "12436:  return s",
          "12437: }",
          "12440: func (s *PiiEntitiesDetectionJobProperties) SetOutputDataConfig(v *PiiOutputDataConfig) *PiiEntitiesDetectionJobProperties {",
          "12441:  s.OutputDataConfig = v",
          "12442:  return s",
          "12443: }",
          "12446: func (s *PiiEntitiesDetectionJobProperties) SetRedactionConfig(v *RedactionConfig) *PiiEntitiesDetectionJobProperties {",
          "12447:  s.RedactionConfig = v",
          "12448:  return s",
          "12449: }",
          "12452: func (s *PiiEntitiesDetectionJobProperties) SetSubmitTime(v time.Time) *PiiEntitiesDetectionJobProperties {",
          "12453:  s.SubmitTime = &v",
          "12454:  return s",
          "12455: }",
          "12458: type PiiEntity struct {",
          "12459:  _ struct{} `type:\"structure\"`",
          "12466:  BeginOffset *int64 `type:\"integer\"`",
          "12472:  EndOffset *int64 `type:\"integer\"`",
          "12476:  Score *float64 `type:\"float\"`",
          "12479:  Type *string `type:\"string\" enum:\"PiiEntityType\"`",
          "12480: }",
          "12483: func (s PiiEntity) String() string {",
          "12484:  return awsutil.Prettify(s)",
          "12485: }",
          "12488: func (s PiiEntity) GoString() string {",
          "12489:  return s.String()",
          "12490: }",
          "12493: func (s *PiiEntity) SetBeginOffset(v int64) *PiiEntity {",
          "12494:  s.BeginOffset = &v",
          "12495:  return s",
          "12496: }",
          "12499: func (s *PiiEntity) SetEndOffset(v int64) *PiiEntity {",
          "12500:  s.EndOffset = &v",
          "12501:  return s",
          "12502: }",
          "12505: func (s *PiiEntity) SetScore(v float64) *PiiEntity {",
          "12506:  s.Score = &v",
          "12507:  return s",
          "12508: }",
          "12511: func (s *PiiEntity) SetType(v string) *PiiEntity {",
          "12512:  s.Type = &v",
          "12513:  return s",
          "12514: }",
          "12518: type PiiOutputDataConfig struct {",
          "12519:  _ struct{} `type:\"structure\"`",
          "12523:  KmsKeyId *string `type:\"string\"`",
          "12529:  S3Uri *string `type:\"string\" required:\"true\"`",
          "12530: }",
          "12533: func (s PiiOutputDataConfig) String() string {",
          "12534:  return awsutil.Prettify(s)",
          "12535: }",
          "12538: func (s PiiOutputDataConfig) GoString() string {",
          "12539:  return s.String()",
          "12540: }",
          "12543: func (s *PiiOutputDataConfig) SetKmsKeyId(v string) *PiiOutputDataConfig {",
          "12544:  s.KmsKeyId = &v",
          "12545:  return s",
          "12546: }",
          "12549: func (s *PiiOutputDataConfig) SetS3Uri(v string) *PiiOutputDataConfig {",
          "12550:  s.S3Uri = &v",
          "12551:  return s",
          "12552: }",
          "12555: type RedactionConfig struct {",
          "12556:  _ struct{} `type:\"structure\"`",
          "12559:  MaskCharacter *string `min:\"1\" type:\"string\"`",
          "12563:  MaskMode *string `type:\"string\" enum:\"PiiEntitiesDetectionMaskMode\"`",
          "12567:  PiiEntityTypes []*string `type:\"list\"`",
          "12568: }",
          "12571: func (s RedactionConfig) String() string {",
          "12572:  return awsutil.Prettify(s)",
          "12573: }",
          "12576: func (s RedactionConfig) GoString() string {",
          "12577:  return s.String()",
          "12578: }",
          "12581: func (s *RedactionConfig) Validate() error {",
          "12582:  invalidParams := request.ErrInvalidParams{Context: \"RedactionConfig\"}",
          "12583:  if s.MaskCharacter != nil && len(*s.MaskCharacter) < 1 {",
          "12584:   invalidParams.Add(request.NewErrParamMinLen(\"MaskCharacter\", 1))",
          "12585:  }",
          "12587:  if invalidParams.Len() > 0 {",
          "12588:   return invalidParams",
          "12589:  }",
          "12590:  return nil",
          "12591: }",
          "12594: func (s *RedactionConfig) SetMaskCharacter(v string) *RedactionConfig {",
          "12595:  s.MaskCharacter = &v",
          "12596:  return s",
          "12597: }",
          "12600: func (s *RedactionConfig) SetMaskMode(v string) *RedactionConfig {",
          "12601:  s.MaskMode = &v",
          "12606: func (s *RedactionConfig) SetPiiEntityTypes(v []*string) *RedactionConfig {",
          "12607:  s.PiiEntityTypes = v",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "12844:  return s",
          "12845: }",
          "12847: type StartSentimentDetectionJobInput struct {",
          "12848:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13887: type StartPiiEntitiesDetectionJobInput struct {",
          "13888:  _ struct{} `type:\"structure\"`",
          "13892:  ClientRequestToken *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "13898:  DataAccessRoleArn *string `min:\"20\" type:\"string\" required:\"true\"`",
          "13903:  InputDataConfig *InputDataConfig `type:\"structure\" required:\"true\"`",
          "13906:  JobName *string `min:\"1\" type:\"string\"`",
          "13911:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"LanguageCode\"`",
          "13917:  Mode *string `type:\"string\" required:\"true\" enum:\"PiiEntitiesDetectionMode\"`",
          "13923:  OutputDataConfig *OutputDataConfig `type:\"structure\" required:\"true\"`",
          "13930:  RedactionConfig *RedactionConfig `type:\"structure\"`",
          "13931: }",
          "13934: func (s StartPiiEntitiesDetectionJobInput) String() string {",
          "13935:  return awsutil.Prettify(s)",
          "13936: }",
          "13939: func (s StartPiiEntitiesDetectionJobInput) GoString() string {",
          "13940:  return s.String()",
          "13941: }",
          "13944: func (s *StartPiiEntitiesDetectionJobInput) Validate() error {",
          "13945:  invalidParams := request.ErrInvalidParams{Context: \"StartPiiEntitiesDetectionJobInput\"}",
          "13946:  if s.ClientRequestToken != nil && len(*s.ClientRequestToken) < 1 {",
          "13947:   invalidParams.Add(request.NewErrParamMinLen(\"ClientRequestToken\", 1))",
          "13948:  }",
          "13949:  if s.DataAccessRoleArn == nil {",
          "13950:   invalidParams.Add(request.NewErrParamRequired(\"DataAccessRoleArn\"))",
          "13951:  }",
          "13952:  if s.DataAccessRoleArn != nil && len(*s.DataAccessRoleArn) < 20 {",
          "13953:   invalidParams.Add(request.NewErrParamMinLen(\"DataAccessRoleArn\", 20))",
          "13954:  }",
          "13955:  if s.InputDataConfig == nil {",
          "13956:   invalidParams.Add(request.NewErrParamRequired(\"InputDataConfig\"))",
          "13957:  }",
          "13958:  if s.JobName != nil && len(*s.JobName) < 1 {",
          "13959:   invalidParams.Add(request.NewErrParamMinLen(\"JobName\", 1))",
          "13960:  }",
          "13961:  if s.LanguageCode == nil {",
          "13962:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "13963:  }",
          "13964:  if s.Mode == nil {",
          "13965:   invalidParams.Add(request.NewErrParamRequired(\"Mode\"))",
          "13966:  }",
          "13967:  if s.OutputDataConfig == nil {",
          "13968:   invalidParams.Add(request.NewErrParamRequired(\"OutputDataConfig\"))",
          "13969:  }",
          "13970:  if s.InputDataConfig != nil {",
          "13971:   if err := s.InputDataConfig.Validate(); err != nil {",
          "13972:    invalidParams.AddNested(\"InputDataConfig\", err.(request.ErrInvalidParams))",
          "13973:   }",
          "13974:  }",
          "13975:  if s.OutputDataConfig != nil {",
          "13976:   if err := s.OutputDataConfig.Validate(); err != nil {",
          "13977:    invalidParams.AddNested(\"OutputDataConfig\", err.(request.ErrInvalidParams))",
          "13978:   }",
          "13979:  }",
          "13980:  if s.RedactionConfig != nil {",
          "13981:   if err := s.RedactionConfig.Validate(); err != nil {",
          "13982:    invalidParams.AddNested(\"RedactionConfig\", err.(request.ErrInvalidParams))",
          "13983:   }",
          "13984:  }",
          "13986:  if invalidParams.Len() > 0 {",
          "13987:   return invalidParams",
          "13988:  }",
          "13989:  return nil",
          "13990: }",
          "13993: func (s *StartPiiEntitiesDetectionJobInput) SetClientRequestToken(v string) *StartPiiEntitiesDetectionJobInput {",
          "13994:  s.ClientRequestToken = &v",
          "13995:  return s",
          "13996: }",
          "13999: func (s *StartPiiEntitiesDetectionJobInput) SetDataAccessRoleArn(v string) *StartPiiEntitiesDetectionJobInput {",
          "14000:  s.DataAccessRoleArn = &v",
          "14001:  return s",
          "14002: }",
          "14005: func (s *StartPiiEntitiesDetectionJobInput) SetInputDataConfig(v *InputDataConfig) *StartPiiEntitiesDetectionJobInput {",
          "14006:  s.InputDataConfig = v",
          "14007:  return s",
          "14008: }",
          "14011: func (s *StartPiiEntitiesDetectionJobInput) SetJobName(v string) *StartPiiEntitiesDetectionJobInput {",
          "14012:  s.JobName = &v",
          "14013:  return s",
          "14014: }",
          "14017: func (s *StartPiiEntitiesDetectionJobInput) SetLanguageCode(v string) *StartPiiEntitiesDetectionJobInput {",
          "14018:  s.LanguageCode = &v",
          "14019:  return s",
          "14020: }",
          "14023: func (s *StartPiiEntitiesDetectionJobInput) SetMode(v string) *StartPiiEntitiesDetectionJobInput {",
          "14024:  s.Mode = &v",
          "14025:  return s",
          "14026: }",
          "14029: func (s *StartPiiEntitiesDetectionJobInput) SetOutputDataConfig(v *OutputDataConfig) *StartPiiEntitiesDetectionJobInput {",
          "14030:  s.OutputDataConfig = v",
          "14031:  return s",
          "14032: }",
          "14035: func (s *StartPiiEntitiesDetectionJobInput) SetRedactionConfig(v *RedactionConfig) *StartPiiEntitiesDetectionJobInput {",
          "14036:  s.RedactionConfig = v",
          "14037:  return s",
          "14038: }",
          "14040: type StartPiiEntitiesDetectionJobOutput struct {",
          "14041:  _ struct{} `type:\"structure\"`",
          "14044:  JobId *string `min:\"1\" type:\"string\"`",
          "14047:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "14048: }",
          "14051: func (s StartPiiEntitiesDetectionJobOutput) String() string {",
          "14052:  return awsutil.Prettify(s)",
          "14053: }",
          "14056: func (s StartPiiEntitiesDetectionJobOutput) GoString() string {",
          "14057:  return s.String()",
          "14058: }",
          "14061: func (s *StartPiiEntitiesDetectionJobOutput) SetJobId(v string) *StartPiiEntitiesDetectionJobOutput {",
          "14062:  s.JobId = &v",
          "14063:  return s",
          "14064: }",
          "14067: func (s *StartPiiEntitiesDetectionJobOutput) SetJobStatus(v string) *StartPiiEntitiesDetectionJobOutput {",
          "14068:  s.JobStatus = &v",
          "14069:  return s",
          "14070: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "13456:  return s",
          "13457: }",
          "13459: type StopSentimentDetectionJobInput struct {",
          "13460:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14684: type StopPiiEntitiesDetectionJobInput struct {",
          "14685:  _ struct{} `type:\"structure\"`",
          "14690:  JobId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "14691: }",
          "14694: func (s StopPiiEntitiesDetectionJobInput) String() string {",
          "14695:  return awsutil.Prettify(s)",
          "14696: }",
          "14699: func (s StopPiiEntitiesDetectionJobInput) GoString() string {",
          "14700:  return s.String()",
          "14701: }",
          "14704: func (s *StopPiiEntitiesDetectionJobInput) Validate() error {",
          "14705:  invalidParams := request.ErrInvalidParams{Context: \"StopPiiEntitiesDetectionJobInput\"}",
          "14706:  if s.JobId == nil {",
          "14707:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "14708:  }",
          "14709:  if s.JobId != nil && len(*s.JobId) < 1 {",
          "14710:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 1))",
          "14711:  }",
          "14713:  if invalidParams.Len() > 0 {",
          "14714:   return invalidParams",
          "14715:  }",
          "14716:  return nil",
          "14717: }",
          "14720: func (s *StopPiiEntitiesDetectionJobInput) SetJobId(v string) *StopPiiEntitiesDetectionJobInput {",
          "14721:  s.JobId = &v",
          "14722:  return s",
          "14723: }",
          "14725: type StopPiiEntitiesDetectionJobOutput struct {",
          "14726:  _ struct{} `type:\"structure\"`",
          "14729:  JobId *string `min:\"1\" type:\"string\"`",
          "14732:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "14733: }",
          "14736: func (s StopPiiEntitiesDetectionJobOutput) String() string {",
          "14737:  return awsutil.Prettify(s)",
          "14738: }",
          "14741: func (s StopPiiEntitiesDetectionJobOutput) GoString() string {",
          "14742:  return s.String()",
          "14743: }",
          "14746: func (s *StopPiiEntitiesDetectionJobOutput) SetJobId(v string) *StopPiiEntitiesDetectionJobOutput {",
          "14747:  s.JobId = &v",
          "14748:  return s",
          "14749: }",
          "14752: func (s *StopPiiEntitiesDetectionJobOutput) SetJobStatus(v string) *StopPiiEntitiesDetectionJobOutput {",
          "14753:  s.JobStatus = &v",
          "14754:  return s",
          "14755: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "14851:  }",
          "14852: }",
          "14854: const (",
          "14856:  SentimentTypePositive = \"POSITIVE\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16152: const (",
          "16154:  PiiEntitiesDetectionMaskModeMask = \"MASK\"",
          "16157:  PiiEntitiesDetectionMaskModeReplaceWithPiiEntityType = \"REPLACE_WITH_PII_ENTITY_TYPE\"",
          "16158: )",
          "16161: func PiiEntitiesDetectionMaskMode_Values() []string {",
          "16162:  return []string{",
          "16163:   PiiEntitiesDetectionMaskModeMask,",
          "16164:   PiiEntitiesDetectionMaskModeReplaceWithPiiEntityType,",
          "16165:  }",
          "16166: }",
          "16168: const (",
          "16170:  PiiEntitiesDetectionModeOnlyRedaction = \"ONLY_REDACTION\"",
          "16173:  PiiEntitiesDetectionModeOnlyOffsets = \"ONLY_OFFSETS\"",
          "16174: )",
          "16177: func PiiEntitiesDetectionMode_Values() []string {",
          "16178:  return []string{",
          "16179:   PiiEntitiesDetectionModeOnlyRedaction,",
          "16180:   PiiEntitiesDetectionModeOnlyOffsets,",
          "16181:  }",
          "16182: }",
          "16184: const (",
          "16186:  PiiEntityTypeBankAccountNumber = \"BANK_ACCOUNT_NUMBER\"",
          "16189:  PiiEntityTypeBankRouting = \"BANK_ROUTING\"",
          "16192:  PiiEntityTypeCreditDebitNumber = \"CREDIT_DEBIT_NUMBER\"",
          "16195:  PiiEntityTypeCreditDebitCvv = \"CREDIT_DEBIT_CVV\"",
          "16198:  PiiEntityTypeCreditDebitExpiry = \"CREDIT_DEBIT_EXPIRY\"",
          "16201:  PiiEntityTypePin = \"PIN\"",
          "16204:  PiiEntityTypeEmail = \"EMAIL\"",
          "16207:  PiiEntityTypeAddress = \"ADDRESS\"",
          "16210:  PiiEntityTypeName = \"NAME\"",
          "16213:  PiiEntityTypePhone = \"PHONE\"",
          "16216:  PiiEntityTypeSsn = \"SSN\"",
          "16219:  PiiEntityTypeDateTime = \"DATE_TIME\"",
          "16222:  PiiEntityTypePassportNumber = \"PASSPORT_NUMBER\"",
          "16225:  PiiEntityTypeDriverId = \"DRIVER_ID\"",
          "16228:  PiiEntityTypeUrl = \"URL\"",
          "16231:  PiiEntityTypeAge = \"AGE\"",
          "16234:  PiiEntityTypeUsername = \"USERNAME\"",
          "16237:  PiiEntityTypePassword = \"PASSWORD\"",
          "16240:  PiiEntityTypeAwsAccessKey = \"AWS_ACCESS_KEY\"",
          "16243:  PiiEntityTypeAwsSecretKey = \"AWS_SECRET_KEY\"",
          "16246:  PiiEntityTypeIpAddress = \"IP_ADDRESS\"",
          "16249:  PiiEntityTypeMacAddress = \"MAC_ADDRESS\"",
          "16252:  PiiEntityTypeAll = \"ALL\"",
          "16253: )",
          "16256: func PiiEntityType_Values() []string {",
          "16257:  return []string{",
          "16258:   PiiEntityTypeBankAccountNumber,",
          "16259:   PiiEntityTypeBankRouting,",
          "16260:   PiiEntityTypeCreditDebitNumber,",
          "16261:   PiiEntityTypeCreditDebitCvv,",
          "16262:   PiiEntityTypeCreditDebitExpiry,",
          "16263:   PiiEntityTypePin,",
          "16264:   PiiEntityTypeEmail,",
          "16265:   PiiEntityTypeAddress,",
          "16266:   PiiEntityTypeName,",
          "16267:   PiiEntityTypePhone,",
          "16268:   PiiEntityTypeSsn,",
          "16269:   PiiEntityTypeDateTime,",
          "16270:   PiiEntityTypePassportNumber,",
          "16271:   PiiEntityTypeDriverId,",
          "16272:   PiiEntityTypeUrl,",
          "16273:   PiiEntityTypeAge,",
          "16274:   PiiEntityTypeUsername,",
          "16275:   PiiEntityTypePassword,",
          "16276:   PiiEntityTypeAwsAccessKey,",
          "16277:   PiiEntityTypeAwsSecretKey,",
          "16278:   PiiEntityTypeIpAddress,",
          "16279:   PiiEntityTypeMacAddress,",
          "16280:   PiiEntityTypeAll,",
          "16281:  }",
          "16282: }",
          "",
          "---------------"
        ],
        "service/comprehend/comprehendiface/interface.go||service/comprehend/comprehendiface/interface.go": [
          "File: service/comprehend/comprehendiface/interface.go -> service/comprehend/comprehendiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:  DescribeKeyPhrasesDetectionJobWithContext(aws.Context, *comprehend.DescribeKeyPhrasesDetectionJobInput, ...request.Option) (*comprehend.DescribeKeyPhrasesDetectionJobOutput, error)",
          "137:  DescribeKeyPhrasesDetectionJobRequest(*comprehend.DescribeKeyPhrasesDetectionJobInput) (*request.Request, *comprehend.DescribeKeyPhrasesDetectionJobOutput)",
          "139:  DescribeSentimentDetectionJob(*comprehend.DescribeSentimentDetectionJobInput) (*comprehend.DescribeSentimentDetectionJobOutput, error)",
          "140:  DescribeSentimentDetectionJobWithContext(aws.Context, *comprehend.DescribeSentimentDetectionJobInput, ...request.Option) (*comprehend.DescribeSentimentDetectionJobOutput, error)",
          "141:  DescribeSentimentDetectionJobRequest(*comprehend.DescribeSentimentDetectionJobInput) (*request.Request, *comprehend.DescribeSentimentDetectionJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:  DescribePiiEntitiesDetectionJob(*comprehend.DescribePiiEntitiesDetectionJobInput) (*comprehend.DescribePiiEntitiesDetectionJobOutput, error)",
          "140:  DescribePiiEntitiesDetectionJobWithContext(aws.Context, *comprehend.DescribePiiEntitiesDetectionJobInput, ...request.Option) (*comprehend.DescribePiiEntitiesDetectionJobOutput, error)",
          "141:  DescribePiiEntitiesDetectionJobRequest(*comprehend.DescribePiiEntitiesDetectionJobInput) (*request.Request, *comprehend.DescribePiiEntitiesDetectionJobOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:  DetectKeyPhrasesWithContext(aws.Context, *comprehend.DetectKeyPhrasesInput, ...request.Option) (*comprehend.DetectKeyPhrasesOutput, error)",
          "157:  DetectKeyPhrasesRequest(*comprehend.DetectKeyPhrasesInput) (*request.Request, *comprehend.DetectKeyPhrasesOutput)",
          "159:  DetectSentiment(*comprehend.DetectSentimentInput) (*comprehend.DetectSentimentOutput, error)",
          "160:  DetectSentimentWithContext(aws.Context, *comprehend.DetectSentimentInput, ...request.Option) (*comprehend.DetectSentimentOutput, error)",
          "161:  DetectSentimentRequest(*comprehend.DetectSentimentInput) (*request.Request, *comprehend.DetectSentimentOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:  DetectPiiEntities(*comprehend.DetectPiiEntitiesInput) (*comprehend.DetectPiiEntitiesOutput, error)",
          "164:  DetectPiiEntitiesWithContext(aws.Context, *comprehend.DetectPiiEntitiesInput, ...request.Option) (*comprehend.DetectPiiEntitiesOutput, error)",
          "165:  DetectPiiEntitiesRequest(*comprehend.DetectPiiEntitiesInput) (*request.Request, *comprehend.DetectPiiEntitiesOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "210:  ListKeyPhrasesDetectionJobsPages(*comprehend.ListKeyPhrasesDetectionJobsInput, func(*comprehend.ListKeyPhrasesDetectionJobsOutput, bool) bool) error",
          "211:  ListKeyPhrasesDetectionJobsPagesWithContext(aws.Context, *comprehend.ListKeyPhrasesDetectionJobsInput, func(*comprehend.ListKeyPhrasesDetectionJobsOutput, bool) bool, ...request.Option) error",
          "213:  ListSentimentDetectionJobs(*comprehend.ListSentimentDetectionJobsInput) (*comprehend.ListSentimentDetectionJobsOutput, error)",
          "214:  ListSentimentDetectionJobsWithContext(aws.Context, *comprehend.ListSentimentDetectionJobsInput, ...request.Option) (*comprehend.ListSentimentDetectionJobsOutput, error)",
          "215:  ListSentimentDetectionJobsRequest(*comprehend.ListSentimentDetectionJobsInput) (*request.Request, *comprehend.ListSentimentDetectionJobsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:  ListPiiEntitiesDetectionJobs(*comprehend.ListPiiEntitiesDetectionJobsInput) (*comprehend.ListPiiEntitiesDetectionJobsOutput, error)",
          "222:  ListPiiEntitiesDetectionJobsWithContext(aws.Context, *comprehend.ListPiiEntitiesDetectionJobsInput, ...request.Option) (*comprehend.ListPiiEntitiesDetectionJobsOutput, error)",
          "223:  ListPiiEntitiesDetectionJobsRequest(*comprehend.ListPiiEntitiesDetectionJobsInput) (*request.Request, *comprehend.ListPiiEntitiesDetectionJobsOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "244:  StartKeyPhrasesDetectionJobWithContext(aws.Context, *comprehend.StartKeyPhrasesDetectionJobInput, ...request.Option) (*comprehend.StartKeyPhrasesDetectionJobOutput, error)",
          "245:  StartKeyPhrasesDetectionJobRequest(*comprehend.StartKeyPhrasesDetectionJobInput) (*request.Request, *comprehend.StartKeyPhrasesDetectionJobOutput)",
          "247:  StartSentimentDetectionJob(*comprehend.StartSentimentDetectionJobInput) (*comprehend.StartSentimentDetectionJobOutput, error)",
          "248:  StartSentimentDetectionJobWithContext(aws.Context, *comprehend.StartSentimentDetectionJobInput, ...request.Option) (*comprehend.StartSentimentDetectionJobOutput, error)",
          "249:  StartSentimentDetectionJobRequest(*comprehend.StartSentimentDetectionJobInput) (*request.Request, *comprehend.StartSentimentDetectionJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:  StartPiiEntitiesDetectionJob(*comprehend.StartPiiEntitiesDetectionJobInput) (*comprehend.StartPiiEntitiesDetectionJobOutput, error)",
          "260:  StartPiiEntitiesDetectionJobWithContext(aws.Context, *comprehend.StartPiiEntitiesDetectionJobInput, ...request.Option) (*comprehend.StartPiiEntitiesDetectionJobOutput, error)",
          "261:  StartPiiEntitiesDetectionJobRequest(*comprehend.StartPiiEntitiesDetectionJobInput) (*request.Request, *comprehend.StartPiiEntitiesDetectionJobOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "264:  StopKeyPhrasesDetectionJobWithContext(aws.Context, *comprehend.StopKeyPhrasesDetectionJobInput, ...request.Option) (*comprehend.StopKeyPhrasesDetectionJobOutput, error)",
          "265:  StopKeyPhrasesDetectionJobRequest(*comprehend.StopKeyPhrasesDetectionJobInput) (*request.Request, *comprehend.StopKeyPhrasesDetectionJobOutput)",
          "267:  StopSentimentDetectionJob(*comprehend.StopSentimentDetectionJobInput) (*comprehend.StopSentimentDetectionJobOutput, error)",
          "268:  StopSentimentDetectionJobWithContext(aws.Context, *comprehend.StopSentimentDetectionJobInput, ...request.Option) (*comprehend.StopSentimentDetectionJobOutput, error)",
          "269:  StopSentimentDetectionJobRequest(*comprehend.StopSentimentDetectionJobInput) (*request.Request, *comprehend.StopSentimentDetectionJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:  StopPiiEntitiesDetectionJob(*comprehend.StopPiiEntitiesDetectionJobInput) (*comprehend.StopPiiEntitiesDetectionJobOutput, error)",
          "284:  StopPiiEntitiesDetectionJobWithContext(aws.Context, *comprehend.StopPiiEntitiesDetectionJobInput, ...request.Option) (*comprehend.StopPiiEntitiesDetectionJobOutput, error)",
          "285:  StopPiiEntitiesDetectionJobRequest(*comprehend.StopPiiEntitiesDetectionJobInput) (*request.Request, *comprehend.StopPiiEntitiesDetectionJobOutput)",
          "",
          "---------------"
        ],
        "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go": [
          "File: service/elasticsearchservice/api.go -> service/elasticsearchservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11311:  LogTypeEsApplicationLogs = \"ES_APPLICATION_LOGS\"",
          "11312: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11317:  LogTypeAuditLogs = \"AUDIT_LOGS\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11317:   LogTypeIndexSlowLogs,",
          "11318:   LogTypeSearchSlowLogs,",
          "11319:   LogTypeEsApplicationLogs,",
          "11320:  }",
          "11321: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11326:   LogTypeAuditLogs,",
          "",
          "---------------"
        ],
        "service/kendra/api.go||service/kendra/api.go": [
          "File: service/kendra/api.go -> service/kendra/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3642:  Description *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3650:  FileFormat *string `type:\"string\" enum:\"FaqFileFormat\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3733:  return s",
          "3734: }",
          "3737: func (s *CreateFaqInput) SetIndexId(v string) *CreateFaqInput {",
          "3738:  s.IndexId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3745: func (s *CreateFaqInput) SetFileFormat(v string) *CreateFaqInput {",
          "3746:  s.FileFormat = &v",
          "3747:  return s",
          "3748: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5057:  ErrorMessage *string `min:\"1\" type:\"string\"`",
          "5060:  Id *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5074:  FileFormat *string `type:\"string\" enum:\"FaqFileFormat\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5107:  return s",
          "5108: }",
          "5111: func (s *DescribeFaqOutput) SetId(v string) *DescribeFaqOutput {",
          "5112:  s.Id = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5128: func (s *DescribeFaqOutput) SetFileFormat(v string) *DescribeFaqOutput {",
          "5129:  s.FileFormat = &v",
          "5130:  return s",
          "5131: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5861:  CreatedAt *time.Time `type:\"timestamp\"`",
          "5864:  Id *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5887:  FileFormat *string `type:\"string\" enum:\"FaqFileFormat\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5890:  return s",
          "5891: }",
          "5894: func (s *FaqSummary) SetId(v string) *FaqSummary {",
          "5895:  s.Id = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5920: func (s *FaqSummary) SetFileFormat(v string) *FaqSummary {",
          "5921:  s.FileFormat = &v",
          "5922:  return s",
          "5923: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "10404:  }",
          "10405: }",
          "10407: const (",
          "10409:  FaqStatusCreating = \"CREATING\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10439: const (",
          "10441:  FaqFileFormatCsv = \"CSV\"",
          "10444:  FaqFileFormatCsvWithHeader = \"CSV_WITH_HEADER\"",
          "10447:  FaqFileFormatJson = \"JSON\"",
          "10448: )",
          "10451: func FaqFileFormat_Values() []string {",
          "10452:  return []string{",
          "10453:   FaqFileFormatCsv,",
          "10454:   FaqFileFormatCsvWithHeader,",
          "10455:   FaqFileFormatJson,",
          "10456:  }",
          "10457: }",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go": [
          "File: service/transcribestreamingservice/api.go -> service/transcribestreamingservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "960:  Alternatives []*Alternative `type:\"list\"`",
          "964:  EndTime *float64 `type:\"double\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "967:  ChannelId *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "995:  return s",
          "996: }",
          "999: func (s *Result) SetEndTime(v float64) *Result {",
          "1000:  s.EndTime = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1006: func (s *Result) SetChannelId(v string) *Result {",
          "1007:  s.ChannelId = &v",
          "1008:  return s",
          "1009: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1107: type StartStreamTranscriptionInput struct {",
          "1108:  _ struct{} `type:\"structure\" payload:\"AudioStream\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1131:  EnableChannelIdentification *bool `location:\"header\" locationName:\"x-amzn-transcribe-enable-channel-identification\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1124:  MediaSampleRateHertz *int64 `location:\"header\" locationName:\"x-amzn-transcribe-sample-rate\" min:\"8000\" type:\"integer\" required:\"true\"`",
          "1132:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "1129:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "",
          "[Added Lines]",
          "1150:  NumberOfChannels *int64 `location:\"header\" locationName:\"x-amzn-transcribe-number-of-channels\" min:\"2\" type:\"integer\"`",
          "1155:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" min:\"36\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1171:  if s.MediaSampleRateHertz != nil && *s.MediaSampleRateHertz < 8000 {",
          "1172:   invalidParams.Add(request.NewErrParamMinValue(\"MediaSampleRateHertz\", 8000))",
          "1173:  }",
          "1174:  if s.VocabularyFilterName != nil && len(*s.VocabularyFilterName) < 1 {",
          "1175:   invalidParams.Add(request.NewErrParamMinLen(\"VocabularyFilterName\", 1))",
          "1176:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1200:  if s.NumberOfChannels != nil && *s.NumberOfChannels < 2 {",
          "1201:   invalidParams.Add(request.NewErrParamMinValue(\"NumberOfChannels\", 2))",
          "1202:  }",
          "1203:  if s.SessionId != nil && len(*s.SessionId) < 36 {",
          "1204:   invalidParams.Add(request.NewErrParamMinLen(\"SessionId\", 36))",
          "1205:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1184:  return nil",
          "1185: }",
          "1188: func (s *StartStreamTranscriptionInput) SetLanguageCode(v string) *StartStreamTranscriptionInput {",
          "1189:  s.LanguageCode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1220: func (s *StartStreamTranscriptionInput) SetEnableChannelIdentification(v bool) *StartStreamTranscriptionInput {",
          "1221:  s.EnableChannelIdentification = &v",
          "1222:  return s",
          "1223: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1202:  return s",
          "1203: }",
          "1206: func (s *StartStreamTranscriptionInput) SetSessionId(v string) *StartStreamTranscriptionInput {",
          "1207:  s.SessionId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1244: func (s *StartStreamTranscriptionInput) SetNumberOfChannels(v int64) *StartStreamTranscriptionInput {",
          "1245:  s.NumberOfChannels = &v",
          "1246:  return s",
          "1247: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1238:  eventStream *StartStreamTranscriptionEventStream",
          "1241:  LanguageCode *string `location:\"header\" locationName:\"x-amzn-transcribe-language-code\" type:\"string\" enum:\"LanguageCode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1285:  EnableChannelIdentification *bool `location:\"header\" locationName:\"x-amzn-transcribe-enable-channel-identification\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1248:  MediaSampleRateHertz *int64 `location:\"header\" locationName:\"x-amzn-transcribe-sample-rate\" min:\"8000\" type:\"integer\"`",
          "1251:  RequestId *string `location:\"header\" locationName:\"x-amzn-request-id\" type:\"string\"`",
          "1257:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "1254:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "",
          "[Added Lines]",
          "1298:  NumberOfChannels *int64 `location:\"header\" locationName:\"x-amzn-transcribe-number-of-channels\" min:\"2\" type:\"integer\"`",
          "1304:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" min:\"36\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1276:  return s.String()",
          "1277: }",
          "1280: func (s *StartStreamTranscriptionOutput) SetLanguageCode(v string) *StartStreamTranscriptionOutput {",
          "1281:  s.LanguageCode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1330: func (s *StartStreamTranscriptionOutput) SetEnableChannelIdentification(v bool) *StartStreamTranscriptionOutput {",
          "1331:  s.EnableChannelIdentification = &v",
          "1332:  return s",
          "1333: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1294:  return s",
          "1295: }",
          "1298: func (s *StartStreamTranscriptionOutput) SetRequestId(v string) *StartStreamTranscriptionOutput {",
          "1299:  s.RequestId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1354: func (s *StartStreamTranscriptionOutput) SetNumberOfChannels(v int64) *StartStreamTranscriptionOutput {",
          "1355:  s.NumberOfChannels = &v",
          "1356:  return s",
          "1357: }",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go": [
          "File: service/transcribestreamingservice/eventstream_test.go -> service/transcribestreamingservice/eventstream_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:         Transcript: aws.String(\"string value goes here\"),",
          "316:        },",
          "317:       },",
          "318:       EndTime:   aws.Float64(123.45),",
          "319:       IsPartial: aws.Bool(true),",
          "320:       ResultId:  aws.String(\"string value goes here\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318:       ChannelId: aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "410:         Transcript: aws.String(\"string value goes here\"),",
          "411:        },",
          "412:       },",
          "413:       EndTime:   aws.Float64(123.45),",
          "414:       IsPartial: aws.Bool(true),",
          "415:       ResultId:  aws.String(\"string value goes here\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:       ChannelId: aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "505:         Transcript: aws.String(\"string value goes here\"),",
          "506:        },",
          "507:       },",
          "508:       EndTime:   aws.Float64(123.45),",
          "509:       IsPartial: aws.Bool(true),",
          "510:       ResultId:  aws.String(\"string value goes here\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "510:       ChannelId: aws.String(\"string value goes here\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5d9526a954f5f137ee50b7131193a796c12fd12",
      "candidate_info": {
        "commit_hash": "e5d9526a954f5f137ee50b7131193a796c12fd12",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/e5d9526a954f5f137ee50b7131193a796c12fd12",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/autoscaling/2011-01-01/api-2.json",
          "models/apis/autoscaling/2011-01-01/docs-2.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/imagebuilder/2019-12-02/api-2.json",
          "models/apis/imagebuilder/2019-12-02/docs-2.json",
          "models/apis/ivs/2020-07-14/api-2.json",
          "models/apis/ivs/2020-07-14/docs-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/securityhub/2018-10-26/api-2.json",
          "models/apis/securityhub/2018-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/autoscaling/api.go",
          "service/ec2/api.go",
          "service/imagebuilder/api.go",
          "service/ivs/api.go",
          "service/ivs/doc.go",
          "service/ivs/errors.go",
          "service/medialive/api.go",
          "service/rds/api.go",
          "service/securityhub/api.go",
          "service/securityhub/securityhubiface/interface.go"
        ],
        "message": "Release v1.33.14 (2020-07-28) (#3445)\n\nRelease v1.33.14 (2020-07-28)\n===\n\n### Service Client Updates\n* `service/autoscaling`: Updates service API and documentation\n  * Now you can enable Instance Metadata Service Version 2 (IMDSv2) or disable the instance metadata endpoint with Launch Configurations.\n* `service/ec2`: Updates service API and documentation\n  * Introduces support for tag-on-create capability for the following APIs: CreateVpnConnection, CreateVpnGateway, and CreateCustomerGateway. A user can now add tags while creating these resources. For further detail, please see AWS Tagging Strategies.\n* `service/imagebuilder`: Updates service API and documentation\n* `service/ivs`: Updates service API and documentation\n* `service/medialive`: Updates service API and documentation\n  * AWS Elemental MediaLive now supports several new features: EBU-TT-D captions in Microsoft Smooth outputs; interlaced video in HEVC outputs; video noise reduction (using temporal filtering) in HEVC outputs.\n* `service/rds`: Updates service documentation\n  * Adds reporting of manual cluster snapshot quota to DescribeAccountAttributes API\n* `service/securityhub`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/autoscaling/api.go||service/autoscaling/api.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/imagebuilder/api.go||service/imagebuilder/api.go",
          "service/ivs/api.go||service/ivs/api.go",
          "service/ivs/doc.go||service/ivs/doc.go",
          "service/ivs/errors.go||service/ivs/errors.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/rds/api.go||service/rds/api.go",
          "service/securityhub/api.go||service/securityhub/api.go",
          "service/securityhub/securityhubiface/interface.go||service/securityhub/securityhubiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1008:     },",
          "1009:    },",
          "1010:    Endpoints: endpoints{",
          "1011:     \"ap-east-1\":      endpoint{},",
          "1012:     \"ap-northeast-1\": endpoint{},",
          "1013:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1011:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1017:     \"ca-central-1\":   endpoint{},",
          "1018:     \"eu-central-1\":   endpoint{},",
          "1019:     \"eu-north-1\":     endpoint{},",
          "1020:     \"eu-west-1\":      endpoint{},",
          "1021:     \"eu-west-2\":      endpoint{},",
          "1022:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1021:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2744:     \"eu-north-1\":     endpoint{},",
          "2745:     \"eu-west-1\":      endpoint{},",
          "2746:     \"eu-west-2\":      endpoint{},",
          "2747:     \"us-east-1\":      endpoint{},",
          "2748:     \"us-east-2\":      endpoint{},",
          "2749:     \"us-west-1\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2749:     \"eu-west-3\":      endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.13\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.14\"",
          "",
          "---------------"
        ],
        "service/autoscaling/api.go||service/autoscaling/api.go": [
          "File: service/autoscaling/api.go -> service/autoscaling/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7036:  LaunchConfigurationName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7047:  MetadataOptions *InstanceMetadataOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7142:    }",
          "7143:   }",
          "7144:  }",
          "7146:  if invalidParams.Len() > 0 {",
          "7147:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7156:  if s.MetadataOptions != nil {",
          "7157:   if err := s.MetadataOptions.Validate(); err != nil {",
          "7158:    invalidParams.AddNested(\"MetadataOptions\", err.(request.ErrInvalidParams))",
          "7159:   }",
          "7160:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7227:  return s",
          "7228: }",
          "7231: func (s *CreateLaunchConfigurationInput) SetPlacementTenancy(v string) *CreateLaunchConfigurationInput {",
          "7232:  s.PlacementTenancy = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7247: func (s *CreateLaunchConfigurationInput) SetMetadataOptions(v *InstanceMetadataOptions) *CreateLaunchConfigurationInput {",
          "7248:  s.MetadataOptions = v",
          "7249:  return s",
          "7250: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10826:  return s",
          "10827: }",
          "10830: type InstanceMonitoring struct {",
          "10831:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10854: type InstanceMetadataOptions struct {",
          "10855:  _ struct{} `type:\"structure\"`",
          "10862:  HttpEndpoint *string `type:\"string\" enum:\"InstanceMetadataEndpointState\"`",
          "10870:  HttpPutResponseHopLimit *int64 `min:\"1\" type:\"integer\"`",
          "10885:  HttpTokens *string `type:\"string\" enum:\"InstanceMetadataHttpTokensState\"`",
          "10886: }",
          "10889: func (s InstanceMetadataOptions) String() string {",
          "10890:  return awsutil.Prettify(s)",
          "10891: }",
          "10894: func (s InstanceMetadataOptions) GoString() string {",
          "10895:  return s.String()",
          "10896: }",
          "10899: func (s *InstanceMetadataOptions) Validate() error {",
          "10900:  invalidParams := request.ErrInvalidParams{Context: \"InstanceMetadataOptions\"}",
          "10901:  if s.HttpPutResponseHopLimit != nil && *s.HttpPutResponseHopLimit < 1 {",
          "10902:   invalidParams.Add(request.NewErrParamMinValue(\"HttpPutResponseHopLimit\", 1))",
          "10903:  }",
          "10905:  if invalidParams.Len() > 0 {",
          "10906:   return invalidParams",
          "10907:  }",
          "10908:  return nil",
          "10909: }",
          "10912: func (s *InstanceMetadataOptions) SetHttpEndpoint(v string) *InstanceMetadataOptions {",
          "10913:  s.HttpEndpoint = &v",
          "10914:  return s",
          "10915: }",
          "10918: func (s *InstanceMetadataOptions) SetHttpPutResponseHopLimit(v int64) *InstanceMetadataOptions {",
          "10919:  s.HttpPutResponseHopLimit = &v",
          "10920:  return s",
          "10921: }",
          "10924: func (s *InstanceMetadataOptions) SetHttpTokens(v string) *InstanceMetadataOptions {",
          "10925:  s.HttpTokens = &v",
          "10926:  return s",
          "10927: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "11189:  LaunchConfigurationName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11294:  MetadataOptions *InstanceMetadataOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11316:  return s",
          "11317: }",
          "11320: func (s *LaunchConfiguration) SetPlacementTenancy(v string) *LaunchConfiguration {",
          "11321:  s.PlacementTenancy = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11425: func (s *LaunchConfiguration) SetMetadataOptions(v *InstanceMetadataOptions) *LaunchConfiguration {",
          "11426:  s.MetadataOptions = v",
          "11427:  return s",
          "11428: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "14725:  return s.String()",
          "14726: }",
          "14728: const (",
          "14730:  InstanceRefreshStatusPending = \"Pending\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14849: const (",
          "14851:  InstanceMetadataEndpointStateDisabled = \"disabled\"",
          "14854:  InstanceMetadataEndpointStateEnabled = \"enabled\"",
          "14855: )",
          "14857: const (",
          "14859:  InstanceMetadataHttpTokensStateOptional = \"optional\"",
          "14862:  InstanceMetadataHttpTokensStateRequired = \"required\"",
          "14863: )",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "45837:  PublicIp *string `locationName:\"IpAddress\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45840:  TagSpecifications []*TagSpecification `locationName:\"TagSpecification\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45898:  return s",
          "45899: }",
          "45902: func (s *CreateCustomerGatewayInput) SetType(v string) *CreateCustomerGatewayInput {",
          "45903:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45905: func (s *CreateCustomerGatewayInput) SetTagSpecifications(v []*TagSpecification) *CreateCustomerGatewayInput {",
          "45906:  s.TagSpecifications = v",
          "45907:  return s",
          "45908: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51859:  Options *VpnConnectionOptionsSpecification `locationName:\"options\" type:\"structure\"`",
          "51863:  TransitGatewayId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51871:  TagSpecifications []*TagSpecification `locationName:\"TagSpecification\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "51916:  return s",
          "51917: }",
          "51920: func (s *CreateVpnConnectionInput) SetTransitGatewayId(v string) *CreateVpnConnectionInput {",
          "51921:  s.TransitGatewayId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51932: func (s *CreateVpnConnectionInput) SetTagSpecifications(v []*TagSpecification) *CreateVpnConnectionInput {",
          "51933:  s.TagSpecifications = v",
          "51934:  return s",
          "51935: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "52046:  DryRun *bool `locationName:\"dryRun\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52067:  TagSpecifications []*TagSpecification `locationName:\"TagSpecification\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "52092:  return s",
          "52093: }",
          "52096: func (s *CreateVpnGatewayInput) SetType(v string) *CreateVpnGatewayInput {",
          "52097:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52117: func (s *CreateVpnGatewayInput) SetTagSpecifications(v []*TagSpecification) *CreateVpnGatewayInput {",
          "52118:  s.TagSpecifications = v",
          "52119:  return s",
          "52120: }",
          "",
          "---------------"
        ],
        "service/imagebuilder/api.go||service/imagebuilder/api.go": [
          "File: service/imagebuilder/api.go -> service/imagebuilder/api.go"
        ],
        "service/ivs/api.go||service/ivs/api.go": [
          "File: service/ivs/api.go -> service/ivs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3116:  return s",
          "3117: }",
          "3119: type PutMetadataInput struct {",
          "3120:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3148: type PendingVerification struct {",
          "3149:  _            struct{}                  `type:\"structure\"`",
          "3150:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3153:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "3155:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3156: }",
          "3159: func (s PendingVerification) String() string {",
          "3160:  return awsutil.Prettify(s)",
          "3161: }",
          "3164: func (s PendingVerification) GoString() string {",
          "3165:  return s.String()",
          "3166: }",
          "3168: func newErrorPendingVerification(v protocol.ResponseMetadata) error {",
          "3169:  return &PendingVerification{",
          "3170:   RespMetadata: v,",
          "3171:  }",
          "3172: }",
          "3175: func (s *PendingVerification) Code() string {",
          "3176:  return \"PendingVerification\"",
          "3177: }",
          "3180: func (s *PendingVerification) Message() string {",
          "3181:  if s.Message_ != nil {",
          "3182:   return *s.Message_",
          "3183:  }",
          "3184:  return \"\"",
          "3185: }",
          "3188: func (s *PendingVerification) OrigErr() error {",
          "3189:  return nil",
          "3190: }",
          "3192: func (s *PendingVerification) Error() string {",
          "3193:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "3194: }",
          "3197: func (s *PendingVerification) StatusCode() int {",
          "3198:  return s.RespMetadata.StatusCode",
          "3199: }",
          "3202: func (s *PendingVerification) RequestID() string {",
          "3203:  return s.RespMetadata.RequestID",
          "3204: }",
          "",
          "---------------"
        ],
        "service/ivs/doc.go||service/ivs/doc.go": [
          "File: service/ivs/doc.go -> service/ivs/doc.go"
        ],
        "service/ivs/errors.go||service/ivs/errors.go": [
          "File: service/ivs/errors.go -> service/ivs/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  ErrCodeInternalServerException = \"InternalServerException\"",
          "29:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ErrCodePendingVerification = \"PendingVerification\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:  \"ChannelNotBroadcasting\":        newErrorChannelNotBroadcasting,",
          "51:  \"ConflictException\":             newErrorConflictException,",
          "52:  \"InternalServerException\":       newErrorInternalServerException,",
          "53:  \"ResourceNotFoundException\":     newErrorResourceNotFoundException,",
          "54:  \"ServiceQuotaExceededException\": newErrorServiceQuotaExceededException,",
          "55:  \"StreamUnavailable\":             newErrorStreamUnavailable,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:  \"PendingVerification\":           newErrorPendingVerification,",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6863:  DvbSubDestinationSettings *DvbSubDestinationSettings `locationName:\"dvbSubDestinationSettings\" type:\"structure\"`",
          "6866:  EmbeddedDestinationSettings *EmbeddedDestinationSettings `locationName:\"embeddedDestinationSettings\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6866:  EbuTtDDestinationSettings *EbuTtDDestinationSettings `locationName:\"ebuTtDDestinationSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6938:  return s",
          "6939: }",
          "6942: func (s *CaptionDestinationSettings) SetEmbeddedDestinationSettings(v *EmbeddedDestinationSettings) *CaptionDestinationSettings {",
          "6943:  s.EmbeddedDestinationSettings = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6945: func (s *CaptionDestinationSettings) SetEbuTtDDestinationSettings(v *EbuTtDDestinationSettings) *CaptionDestinationSettings {",
          "6946:  s.EbuTtDDestinationSettings = v",
          "6947:  return s",
          "6948: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11136:  return s",
          "11137: }",
          "11140: type EmbeddedDestinationSettings struct {",
          "11141:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11149: type EbuTtDDestinationSettings struct {",
          "11150:  _ struct{} `type:\"structure\"`",
          "11155:  FillLineGap *string `locationName:\"fillLineGap\" type:\"string\" enum:\"EbuTtDFillLineGapControl\"`",
          "11168:  FontFamily *string `locationName:\"fontFamily\" type:\"string\"`",
          "11177:  StyleControl *string `locationName:\"styleControl\" type:\"string\" enum:\"EbuTtDDestinationStyleControl\"`",
          "11178: }",
          "11181: func (s EbuTtDDestinationSettings) String() string {",
          "11182:  return awsutil.Prettify(s)",
          "11183: }",
          "11186: func (s EbuTtDDestinationSettings) GoString() string {",
          "11187:  return s.String()",
          "11188: }",
          "11191: func (s *EbuTtDDestinationSettings) SetFillLineGap(v string) *EbuTtDDestinationSettings {",
          "11192:  s.FillLineGap = &v",
          "11193:  return s",
          "11194: }",
          "11197: func (s *EbuTtDDestinationSettings) SetFontFamily(v string) *EbuTtDDestinationSettings {",
          "11198:  s.FontFamily = &v",
          "11199:  return s",
          "11200: }",
          "11203: func (s *EbuTtDDestinationSettings) SetStyleControl(v string) *EbuTtDDestinationSettings {",
          "11204:  s.StyleControl = &v",
          "11205:  return s",
          "11206: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12614:  return s",
          "12615: }",
          "12618: type H265Settings struct {",
          "12619:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12687: type H265FilterSettings struct {",
          "12688:  _ struct{} `type:\"structure\"`",
          "12691:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "12692: }",
          "12695: func (s H265FilterSettings) String() string {",
          "12696:  return awsutil.Prettify(s)",
          "12697: }",
          "12700: func (s H265FilterSettings) GoString() string {",
          "12701:  return s.String()",
          "12702: }",
          "12705: func (s *H265FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *H265FilterSettings {",
          "12706:  s.TemporalFilterSettings = v",
          "12707:  return s",
          "12708: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "12648:  ColorSpaceSettings *H265ColorSpaceSettings `locationName:\"colorSpaceSettings\" type:\"structure\"`",
          "12652:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12744:  FilterSettings *H265FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "12844:  return s",
          "12845: }",
          "12848: func (s *H265Settings) SetFixedAfd(v string) *H265Settings {",
          "12849:  s.FixedAfd = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12944: func (s *H265Settings) SetFilterSettings(v *H265FilterSettings) *H265Settings {",
          "12945:  s.FilterSettings = v",
          "12946:  return s",
          "12947: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "24579:  Eac3SurroundModeNotIndicated = \"NOT_INDICATED\"",
          "24580: )",
          "24583: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24685: const (",
          "24687:  EbuTtDDestinationStyleControlExclude = \"EXCLUDE\"",
          "24690:  EbuTtDDestinationStyleControlInclude = \"INCLUDE\"",
          "24691: )",
          "24694: const (",
          "24696:  EbuTtDFillLineGapControlDisabled = \"DISABLED\"",
          "24699:  EbuTtDFillLineGapControlEnabled = \"ENABLED\"",
          "24700: )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "25129: const (",
          "25131:  H265ScanTypeProgressive = \"PROGRESSIVE\"",
          "25132: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25251:  H265ScanTypeInterlaced = \"INTERLACED\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "25305:  HlsOutputSelectionSegmentsOnly = \"SEGMENTS_ONLY\"",
          "25306: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25431:  HlsOutputSelectionVariantManifestsAndSegments = \"VARIANT_MANIFESTS_AND_SEGMENTS\"",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go"
        ],
        "service/securityhub/api.go||service/securityhub/api.go": [
          "File: service/securityhub/api.go -> service/securityhub/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4493:  return out, req.Send()",
          "4494: }",
          "4496: const opUpdateStandardsControl = \"UpdateStandardsControl\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4496: const opUpdateSecurityHubConfiguration = \"UpdateSecurityHubConfiguration\"",
          "4522: func (c *SecurityHub) UpdateSecurityHubConfigurationRequest(input *UpdateSecurityHubConfigurationInput) (req *request.Request, output *UpdateSecurityHubConfigurationOutput) {",
          "4523:  op := &request.Operation{",
          "4524:   Name:       opUpdateSecurityHubConfiguration,",
          "4525:   HTTPMethod: \"PATCH\",",
          "4526:   HTTPPath:   \"/accounts\",",
          "4527:  }",
          "4529:  if input == nil {",
          "4530:   input = &UpdateSecurityHubConfigurationInput{}",
          "4531:  }",
          "4533:  output = &UpdateSecurityHubConfigurationOutput{}",
          "4534:  req = c.newRequest(op, input, output)",
          "4535:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4536:  return",
          "4537: }",
          "4569: func (c *SecurityHub) UpdateSecurityHubConfiguration(input *UpdateSecurityHubConfigurationInput) (*UpdateSecurityHubConfigurationOutput, error) {",
          "4570:  req, out := c.UpdateSecurityHubConfigurationRequest(input)",
          "4571:  return out, req.Send()",
          "4572: }",
          "4583: func (c *SecurityHub) UpdateSecurityHubConfigurationWithContext(ctx aws.Context, input *UpdateSecurityHubConfigurationInput, opts ...request.Option) (*UpdateSecurityHubConfigurationOutput, error) {",
          "4584:  req, out := c.UpdateSecurityHubConfigurationRequest(input)",
          "4585:  req.SetContext(ctx)",
          "4586:  req.ApplyOptions(opts...)",
          "4587:  return out, req.Send()",
          "4588: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10880: type DescribeHubOutput struct {",
          "10881:  _ struct{} `type:\"structure\"`",
          "10884:  HubArn *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10985:  AutoEnableControls *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "10897:  return s.String()",
          "10898: }",
          "10901: func (s *DescribeHubOutput) SetHubArn(v string) *DescribeHubOutput {",
          "10902:  s.HubArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11005: func (s *DescribeHubOutput) SetAutoEnableControls(v bool) *DescribeHubOutput {",
          "11006:  s.AutoEnableControls = &v",
          "11007:  return s",
          "11008: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "14374:  Label *string `type:\"string\" enum:\"SeverityLabel\"`",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "14391:  Normalized *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14509:  Label *string `type:\"string\" enum:\"SeverityLabel\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "15401:  return s.String()",
          "15402: }",
          "15404: type UpdateStandardsControlInput struct {",
          "15405:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15539: type UpdateSecurityHubConfigurationInput struct {",
          "15540:  _ struct{} `type:\"structure\"`",
          "15547:  AutoEnableControls *bool `type:\"boolean\"`",
          "15548: }",
          "15551: func (s UpdateSecurityHubConfigurationInput) String() string {",
          "15552:  return awsutil.Prettify(s)",
          "15553: }",
          "15556: func (s UpdateSecurityHubConfigurationInput) GoString() string {",
          "15557:  return s.String()",
          "15558: }",
          "15561: func (s *UpdateSecurityHubConfigurationInput) SetAutoEnableControls(v bool) *UpdateSecurityHubConfigurationInput {",
          "15562:  s.AutoEnableControls = &v",
          "15563:  return s",
          "15564: }",
          "15566: type UpdateSecurityHubConfigurationOutput struct {",
          "15567:  _ struct{} `type:\"structure\"`",
          "15568: }",
          "15571: func (s UpdateSecurityHubConfigurationOutput) String() string {",
          "15572:  return awsutil.Prettify(s)",
          "15573: }",
          "15576: func (s UpdateSecurityHubConfigurationOutput) GoString() string {",
          "15577:  return s.String()",
          "15578: }",
          "",
          "---------------"
        ],
        "service/securityhub/securityhubiface/interface.go||service/securityhub/securityhubiface/interface.go": [
          "File: service/securityhub/securityhubiface/interface.go -> service/securityhub/securityhubiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:  UpdateInsightWithContext(aws.Context, *securityhub.UpdateInsightInput, ...request.Option) (*securityhub.UpdateInsightOutput, error)",
          "255:  UpdateInsightRequest(*securityhub.UpdateInsightInput) (*request.Request, *securityhub.UpdateInsightOutput)",
          "257:  UpdateStandardsControl(*securityhub.UpdateStandardsControlInput) (*securityhub.UpdateStandardsControlOutput, error)",
          "258:  UpdateStandardsControlWithContext(aws.Context, *securityhub.UpdateStandardsControlInput, ...request.Option) (*securityhub.UpdateStandardsControlOutput, error)",
          "259:  UpdateStandardsControlRequest(*securityhub.UpdateStandardsControlInput) (*request.Request, *securityhub.UpdateStandardsControlOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:  UpdateSecurityHubConfiguration(*securityhub.UpdateSecurityHubConfigurationInput) (*securityhub.UpdateSecurityHubConfigurationOutput, error)",
          "258:  UpdateSecurityHubConfigurationWithContext(aws.Context, *securityhub.UpdateSecurityHubConfigurationInput, ...request.Option) (*securityhub.UpdateSecurityHubConfigurationOutput, error)",
          "259:  UpdateSecurityHubConfigurationRequest(*securityhub.UpdateSecurityHubConfigurationInput) (*request.Request, *securityhub.UpdateSecurityHubConfigurationOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "878b60015fb9e4860839b956ed16d8035876020f",
      "candidate_info": {
        "commit_hash": "878b60015fb9e4860839b956ed16d8035876020f",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/878b60015fb9e4860839b956ed16d8035876020f",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/quicksight/2018-04-01/api-2.json",
          "models/apis/quicksight/2018-04-01/docs-2.json",
          "models/apis/quicksight/2018-04-01/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/medialive/api.go",
          "service/medialive/medialiveiface/interface.go",
          "service/quicksight/api.go",
          "service/quicksight/quicksightiface/interface.go"
        ],
        "message": "Release v1.33.10 (2020-07-22) ===\n\n### Service Client Updates\n* `service/medialive`: Updates service API and documentation\n  * The AWS Elemental MediaLive APIs and SDKs now support the ability to get thumbnails for MediaLive devices that are attached or not attached to a channel. Previously, this thumbnail feature was available only on the console.\n* `service/quicksight`: Updates service API, documentation, and paginators\n  * New API operations - GetSessionEmbedUrl, CreateNamespace, DescribeNamespace, ListNamespaces, DeleteNamespace, DescribeAccountSettings, UpdateAccountSettings, CreateAccountCustomization, DescribeAccountCustomization, UpdateAccountCustomization, DeleteAccountCustomization. Modified API operations to support custom permissions restrictions - RegisterUser, UpdateUser, UpdateDashboardPermissions\n\n### SDK Enhancements\n* `example/aws/request/httptrace`: Update example with more metrics ([#3436](https://github.com/aws/aws-sdk-go/pull/3436))\n  * Updates the tracing example to include additional metrics such as SDKs request handlers, and support multiple request attempts.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/medialive/medialiveiface/interface.go||service/medialive/medialiveiface/interface.go",
          "service/quicksight/api.go||service/quicksight/api.go",
          "service/quicksight/quicksightiface/interface.go||service/quicksight/quicksightiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2539:   \"firehose\": service{",
          "2541:    Endpoints: endpoints{",
          "2542:     \"ap-east-1\":      endpoint{},",
          "2543:     \"ap-northeast-1\": endpoint{},",
          "2544:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2542:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2548:     \"ca-central-1\":   endpoint{},",
          "2549:     \"eu-central-1\":   endpoint{},",
          "2550:     \"eu-north-1\":     endpoint{},",
          "2551:     \"eu-west-1\":      endpoint{},",
          "2552:     \"eu-west-2\":      endpoint{},",
          "2553:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2552:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4128:     \"ca-central-1\":   endpoint{},",
          "4129:     \"eu-central-1\":   endpoint{},",
          "4130:     \"eu-north-1\":     endpoint{},",
          "4131:     \"eu-west-1\":      endpoint{},",
          "4132:     \"eu-west-2\":      endpoint{},",
          "4133:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4133:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.9\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.10\"",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import (",
          "6:  \"fmt\"",
          "8:  \"github.com/aws/aws-sdk-go/aws\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"io\"",
          "8:  \"time\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1639:  return out, req.Send()",
          "1640: }",
          "1642: const opDescribeInputSecurityGroup = \"DescribeInputSecurityGroup\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1644: const opDescribeInputDeviceThumbnail = \"DescribeInputDeviceThumbnail\"",
          "1670: func (c *MediaLive) DescribeInputDeviceThumbnailRequest(input *DescribeInputDeviceThumbnailInput) (req *request.Request, output *DescribeInputDeviceThumbnailOutput) {",
          "1671:  op := &request.Operation{",
          "1672:   Name:       opDescribeInputDeviceThumbnail,",
          "1673:   HTTPMethod: \"GET\",",
          "1674:   HTTPPath:   \"/prod/inputDevices/{inputDeviceId}/thumbnailData\",",
          "1675:  }",
          "1677:  if input == nil {",
          "1678:   input = &DescribeInputDeviceThumbnailInput{}",
          "1679:  }",
          "1681:  output = &DescribeInputDeviceThumbnailOutput{}",
          "1682:  req = c.newRequest(op, input, output)",
          "1683:  return",
          "1684: }",
          "1713: func (c *MediaLive) DescribeInputDeviceThumbnail(input *DescribeInputDeviceThumbnailInput) (*DescribeInputDeviceThumbnailOutput, error) {",
          "1714:  req, out := c.DescribeInputDeviceThumbnailRequest(input)",
          "1715:  return out, req.Send()",
          "1716: }",
          "1727: func (c *MediaLive) DescribeInputDeviceThumbnailWithContext(ctx aws.Context, input *DescribeInputDeviceThumbnailInput, opts ...request.Option) (*DescribeInputDeviceThumbnailOutput, error) {",
          "1728:  req, out := c.DescribeInputDeviceThumbnailRequest(input)",
          "1729:  req.SetContext(ctx)",
          "1730:  req.ApplyOptions(opts...)",
          "1731:  return out, req.Send()",
          "1732: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5247:  CodecSettings *AudioCodecSettings `locationName:\"codecSettings\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "5251:  LanguageCode *string `locationName:\"languageCode\" min:\"3\" type:\"string\"`",
          "",
          "[Added Lines]",
          "5344:  LanguageCode *string `locationName:\"languageCode\" min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5288:  if s.AudioSelectorName == nil {",
          "5289:   invalidParams.Add(request.NewErrParamRequired(\"AudioSelectorName\"))",
          "5290:  }",
          "5293:  }",
          "5294:  if s.Name == nil {",
          "5295:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "",
          "[Removed Lines]",
          "5291:  if s.LanguageCode != nil && len(*s.LanguageCode) < 3 {",
          "5292:   invalidParams.Add(request.NewErrParamMinLen(\"LanguageCode\", 3))",
          "",
          "[Added Lines]",
          "5384:  if s.LanguageCode != nil && len(*s.LanguageCode) < 1 {",
          "5385:   invalidParams.Add(request.NewErrParamMinLen(\"LanguageCode\", 1))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9307:  return s",
          "9308: }",
          "9310: type DescribeInputInput struct {",
          "9311:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9403: type DescribeInputDeviceThumbnailInput struct {",
          "9404:  _ struct{} `type:\"structure\"`",
          "9409:  Accept *string `location:\"header\" locationName:\"accept\" type:\"string\" required:\"true\" enum:\"AcceptHeader\"`",
          "9412:  InputDeviceId *string `location:\"uri\" locationName:\"inputDeviceId\" type:\"string\" required:\"true\"`",
          "9413: }",
          "9416: func (s DescribeInputDeviceThumbnailInput) String() string {",
          "9417:  return awsutil.Prettify(s)",
          "9418: }",
          "9421: func (s DescribeInputDeviceThumbnailInput) GoString() string {",
          "9422:  return s.String()",
          "9423: }",
          "9426: func (s *DescribeInputDeviceThumbnailInput) Validate() error {",
          "9427:  invalidParams := request.ErrInvalidParams{Context: \"DescribeInputDeviceThumbnailInput\"}",
          "9428:  if s.Accept == nil {",
          "9429:   invalidParams.Add(request.NewErrParamRequired(\"Accept\"))",
          "9430:  }",
          "9431:  if s.InputDeviceId == nil {",
          "9432:   invalidParams.Add(request.NewErrParamRequired(\"InputDeviceId\"))",
          "9433:  }",
          "9434:  if s.InputDeviceId != nil && len(*s.InputDeviceId) < 1 {",
          "9435:   invalidParams.Add(request.NewErrParamMinLen(\"InputDeviceId\", 1))",
          "9436:  }",
          "9438:  if invalidParams.Len() > 0 {",
          "9439:   return invalidParams",
          "9440:  }",
          "9441:  return nil",
          "9442: }",
          "9445: func (s *DescribeInputDeviceThumbnailInput) SetAccept(v string) *DescribeInputDeviceThumbnailInput {",
          "9446:  s.Accept = &v",
          "9447:  return s",
          "9448: }",
          "9451: func (s *DescribeInputDeviceThumbnailInput) SetInputDeviceId(v string) *DescribeInputDeviceThumbnailInput {",
          "9452:  s.InputDeviceId = &v",
          "9453:  return s",
          "9454: }",
          "9456: type DescribeInputDeviceThumbnailOutput struct {",
          "9457:  _ struct{} `type:\"structure\" payload:\"Body\"`",
          "9459:  Body io.ReadCloser `locationName:\"body\" type:\"blob\"`",
          "9461:  ContentLength *int64 `location:\"header\" locationName:\"Content-Length\" type:\"long\"`",
          "9463:  ContentType *string `location:\"header\" locationName:\"Content-Type\" type:\"string\" enum:\"ContentType\"`",
          "9465:  ETag *string `location:\"header\" locationName:\"ETag\" type:\"string\"`",
          "9467:  LastModified *time.Time `location:\"header\" locationName:\"Last-Modified\" type:\"timestamp\"`",
          "9468: }",
          "9471: func (s DescribeInputDeviceThumbnailOutput) String() string {",
          "9472:  return awsutil.Prettify(s)",
          "9473: }",
          "9476: func (s DescribeInputDeviceThumbnailOutput) GoString() string {",
          "9477:  return s.String()",
          "9478: }",
          "9481: func (s *DescribeInputDeviceThumbnailOutput) SetBody(v io.ReadCloser) *DescribeInputDeviceThumbnailOutput {",
          "9482:  s.Body = v",
          "9483:  return s",
          "9484: }",
          "9487: func (s *DescribeInputDeviceThumbnailOutput) SetContentLength(v int64) *DescribeInputDeviceThumbnailOutput {",
          "9488:  s.ContentLength = &v",
          "9489:  return s",
          "9490: }",
          "9493: func (s *DescribeInputDeviceThumbnailOutput) SetContentType(v string) *DescribeInputDeviceThumbnailOutput {",
          "9494:  s.ContentType = &v",
          "9495:  return s",
          "9496: }",
          "9499: func (s *DescribeInputDeviceThumbnailOutput) SetETag(v string) *DescribeInputDeviceThumbnailOutput {",
          "9500:  s.ETag = &v",
          "9501:  return s",
          "9502: }",
          "9505: func (s *DescribeInputDeviceThumbnailOutput) SetLastModified(v time.Time) *DescribeInputDeviceThumbnailOutput {",
          "9506:  s.LastModified = &v",
          "9507:  return s",
          "9508: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11998:  ParDenominator *int64 `locationName:\"parDenominator\" min:\"1\" type:\"integer\"`",
          "12004:  Profile *string `locationName:\"profile\" type:\"string\" enum:\"H264Profile\"`",
          "",
          "[Removed Lines]",
          "12001:  ParNumerator *int64 `locationName:\"parNumerator\" type:\"integer\"`",
          "",
          "[Added Lines]",
          "12201:  ParNumerator *int64 `locationName:\"parNumerator\" min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "12101:  if s.ParDenominator != nil && *s.ParDenominator < 1 {",
          "12102:   invalidParams.Add(request.NewErrParamMinValue(\"ParDenominator\", 1))",
          "12103:  }",
          "12104:  if s.QvbrQualityLevel != nil && *s.QvbrQualityLevel < 1 {",
          "12105:   invalidParams.Add(request.NewErrParamMinValue(\"QvbrQualityLevel\", 1))",
          "12106:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12304:  if s.ParNumerator != nil && *s.ParNumerator < 1 {",
          "12305:   invalidParams.Add(request.NewErrParamMinValue(\"ParNumerator\", 1))",
          "12306:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "14866:  InputAttachmentNameReference *string `locationName:\"inputAttachmentNameReference\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "15070:  InputAttachmentNameReference *string `locationName:\"inputAttachmentNameReference\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "14890: func (s *InputPrepareScheduleActionSettings) Validate() error {",
          "14891:  invalidParams := request.ErrInvalidParams{Context: \"InputPrepareScheduleActionSettings\"}",
          "14895:  if s.InputClippingSettings != nil {",
          "14896:   if err := s.InputClippingSettings.Validate(); err != nil {",
          "14897:    invalidParams.AddNested(\"InputClippingSettings\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "14892:  if s.InputAttachmentNameReference == nil {",
          "14893:   invalidParams.Add(request.NewErrParamRequired(\"InputAttachmentNameReference\"))",
          "14894:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "23817:  Ac3MetadataControlUseConfigured = \"USE_CONFIGURED\"",
          "23818: )",
          "23821: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24022: const (",
          "24024:  AcceptHeaderImageJpeg = \"image/jpeg\"",
          "24025: )",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "24078:  ChannelStateUpdateFailed = \"UPDATE_FAILED\"",
          "24079: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24288: const (",
          "24290:  ContentTypeImageJpeg = \"image/jpeg\"",
          "24291: )",
          "",
          "---------------"
        ],
        "service/medialive/medialiveiface/interface.go||service/medialive/medialiveiface/interface.go": [
          "File: service/medialive/medialiveiface/interface.go -> service/medialive/medialiveiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:  DescribeInputDeviceWithContext(aws.Context, *medialive.DescribeInputDeviceInput, ...request.Option) (*medialive.DescribeInputDeviceOutput, error)",
          "133:  DescribeInputDeviceRequest(*medialive.DescribeInputDeviceInput) (*request.Request, *medialive.DescribeInputDeviceOutput)",
          "135:  DescribeInputSecurityGroup(*medialive.DescribeInputSecurityGroupInput) (*medialive.DescribeInputSecurityGroupOutput, error)",
          "136:  DescribeInputSecurityGroupWithContext(aws.Context, *medialive.DescribeInputSecurityGroupInput, ...request.Option) (*medialive.DescribeInputSecurityGroupOutput, error)",
          "137:  DescribeInputSecurityGroupRequest(*medialive.DescribeInputSecurityGroupInput) (*request.Request, *medialive.DescribeInputSecurityGroupOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:  DescribeInputDeviceThumbnail(*medialive.DescribeInputDeviceThumbnailInput) (*medialive.DescribeInputDeviceThumbnailOutput, error)",
          "136:  DescribeInputDeviceThumbnailWithContext(aws.Context, *medialive.DescribeInputDeviceThumbnailInput, ...request.Option) (*medialive.DescribeInputDeviceThumbnailOutput, error)",
          "137:  DescribeInputDeviceThumbnailRequest(*medialive.DescribeInputDeviceThumbnailInput) (*request.Request, *medialive.DescribeInputDeviceThumbnailOutput)",
          "",
          "---------------"
        ],
        "service/quicksight/api.go||service/quicksight/api.go": [
          "File: service/quicksight/api.go -> service/quicksight/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:  return out, req.Send()",
          "111: }",
          "113: const opCreateDashboard = \"CreateDashboard\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: const opCreateAccountCustomization = \"CreateAccountCustomization\"",
          "139: func (c *QuickSight) CreateAccountCustomizationRequest(input *CreateAccountCustomizationInput) (req *request.Request, output *CreateAccountCustomizationOutput) {",
          "140:  op := &request.Operation{",
          "141:   Name:       opCreateAccountCustomization,",
          "142:   HTTPMethod: \"POST\",",
          "143:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "144:  }",
          "146:  if input == nil {",
          "147:   input = &CreateAccountCustomizationInput{}",
          "148:  }",
          "150:  output = &CreateAccountCustomizationOutput{}",
          "151:  req = c.newRequest(op, input, output)",
          "152:  return",
          "153: }",
          "194: func (c *QuickSight) CreateAccountCustomization(input *CreateAccountCustomizationInput) (*CreateAccountCustomizationOutput, error) {",
          "195:  req, out := c.CreateAccountCustomizationRequest(input)",
          "196:  return out, req.Send()",
          "197: }",
          "208: func (c *QuickSight) CreateAccountCustomizationWithContext(ctx aws.Context, input *CreateAccountCustomizationInput, opts ...request.Option) (*CreateAccountCustomizationOutput, error) {",
          "209:  req, out := c.CreateAccountCustomizationRequest(input)",
          "210:  req.SetContext(ctx)",
          "211:  req.ApplyOptions(opts...)",
          "212:  return out, req.Send()",
          "213: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "855:  return out, req.Send()",
          "856: }",
          "858: const opCreateTemplate = \"CreateTemplate\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "960: const opCreateNamespace = \"CreateNamespace\"",
          "986: func (c *QuickSight) CreateNamespaceRequest(input *CreateNamespaceInput) (req *request.Request, output *CreateNamespaceOutput) {",
          "987:  op := &request.Operation{",
          "988:   Name:       opCreateNamespace,",
          "989:   HTTPMethod: \"POST\",",
          "990:   HTTPPath:   \"/accounts/{AwsAccountId}\",",
          "991:  }",
          "993:  if input == nil {",
          "994:   input = &CreateNamespaceInput{}",
          "995:  }",
          "997:  output = &CreateNamespaceOutput{}",
          "998:  req = c.newRequest(op, input, output)",
          "999:  return",
          "1000: }",
          "1058: func (c *QuickSight) CreateNamespace(input *CreateNamespaceInput) (*CreateNamespaceOutput, error) {",
          "1059:  req, out := c.CreateNamespaceRequest(input)",
          "1060:  return out, req.Send()",
          "1061: }",
          "1072: func (c *QuickSight) CreateNamespaceWithContext(ctx aws.Context, input *CreateNamespaceInput, opts ...request.Option) (*CreateNamespaceOutput, error) {",
          "1073:  req, out := c.CreateNamespaceRequest(input)",
          "1074:  req.SetContext(ctx)",
          "1075:  req.ApplyOptions(opts...)",
          "1076:  return out, req.Send()",
          "1077: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1291:  return out, req.Send()",
          "1292: }",
          "1294: const opDeleteDashboard = \"DeleteDashboard\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1515: const opDeleteAccountCustomization = \"DeleteAccountCustomization\"",
          "1541: func (c *QuickSight) DeleteAccountCustomizationRequest(input *DeleteAccountCustomizationInput) (req *request.Request, output *DeleteAccountCustomizationOutput) {",
          "1542:  op := &request.Operation{",
          "1543:   Name:       opDeleteAccountCustomization,",
          "1544:   HTTPMethod: \"DELETE\",",
          "1545:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "1546:  }",
          "1548:  if input == nil {",
          "1549:   input = &DeleteAccountCustomizationInput{}",
          "1550:  }",
          "1552:  output = &DeleteAccountCustomizationOutput{}",
          "1553:  req = c.newRequest(op, input, output)",
          "1554:  return",
          "1555: }",
          "1592: func (c *QuickSight) DeleteAccountCustomization(input *DeleteAccountCustomizationInput) (*DeleteAccountCustomizationOutput, error) {",
          "1593:  req, out := c.DeleteAccountCustomizationRequest(input)",
          "1594:  return out, req.Send()",
          "1595: }",
          "1606: func (c *QuickSight) DeleteAccountCustomizationWithContext(ctx aws.Context, input *DeleteAccountCustomizationInput, opts ...request.Option) (*DeleteAccountCustomizationOutput, error) {",
          "1607:  req, out := c.DeleteAccountCustomizationRequest(input)",
          "1608:  req.SetContext(ctx)",
          "1609:  req.ApplyOptions(opts...)",
          "1610:  return out, req.Send()",
          "1611: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1884:  return out, req.Send()",
          "1885: }",
          "1914:  op := &request.Operation{",
          "1916:   HTTPMethod: \"DELETE\",",
          "1918:  }",
          "1920:  if input == nil {",
          "1922:  }",
          "1925:  req = c.newRequest(op, input, output)",
          "1926:  return",
          "1927: }",
          "",
          "[Removed Lines]",
          "1887: const opDeleteTemplate = \"DeleteTemplate\"",
          "1913: func (c *QuickSight) DeleteTemplateRequest(input *DeleteTemplateInput) (req *request.Request, output *DeleteTemplateOutput) {",
          "1915:   Name:       opDeleteTemplate,",
          "1917:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}\",",
          "1921:   input = &DeleteTemplateInput{}",
          "1924:  output = &DeleteTemplateOutput{}",
          "",
          "[Added Lines]",
          "2206: const opDeleteNamespace = \"DeleteNamespace\"",
          "2232: func (c *QuickSight) DeleteNamespaceRequest(input *DeleteNamespaceInput) (req *request.Request, output *DeleteNamespaceOutput) {",
          "2234:   Name:       opDeleteNamespace,",
          "2236:   HTTPPath:   \"/accounts/{AwsAccountId}/namespaces/{Namespace}\",",
          "2240:   input = &DeleteNamespaceInput{}",
          "2243:  output = &DeleteNamespaceOutput{}",
          "2244:  req = c.newRequest(op, input, output)",
          "2245:  return",
          "2246: }",
          "2289: func (c *QuickSight) DeleteNamespace(input *DeleteNamespaceInput) (*DeleteNamespaceOutput, error) {",
          "2290:  req, out := c.DeleteNamespaceRequest(input)",
          "2291:  return out, req.Send()",
          "2292: }",
          "2303: func (c *QuickSight) DeleteNamespaceWithContext(ctx aws.Context, input *DeleteNamespaceInput, opts ...request.Option) (*DeleteNamespaceOutput, error) {",
          "2304:  req, out := c.DeleteNamespaceRequest(input)",
          "2305:  req.SetContext(ctx)",
          "2306:  req.ApplyOptions(opts...)",
          "2307:  return out, req.Send()",
          "2308: }",
          "2310: const opDeleteTemplate = \"DeleteTemplate\"",
          "2336: func (c *QuickSight) DeleteTemplateRequest(input *DeleteTemplateInput) (req *request.Request, output *DeleteTemplateOutput) {",
          "2337:  op := &request.Operation{",
          "2338:   Name:       opDeleteTemplate,",
          "2339:   HTTPMethod: \"DELETE\",",
          "2340:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}\",",
          "2341:  }",
          "2343:  if input == nil {",
          "2344:   input = &DeleteTemplateInput{}",
          "2345:  }",
          "2347:  output = &DeleteTemplateOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2481:  return out, req.Send()",
          "2482: }",
          "2484: const opDescribeDashboard = \"DescribeDashboard\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2913: const opDescribeAccountCustomization = \"DescribeAccountCustomization\"",
          "2939: func (c *QuickSight) DescribeAccountCustomizationRequest(input *DescribeAccountCustomizationInput) (req *request.Request, output *DescribeAccountCustomizationOutput) {",
          "2940:  op := &request.Operation{",
          "2941:   Name:       opDescribeAccountCustomization,",
          "2942:   HTTPMethod: \"GET\",",
          "2943:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "2944:  }",
          "2946:  if input == nil {",
          "2947:   input = &DescribeAccountCustomizationInput{}",
          "2948:  }",
          "2950:  output = &DescribeAccountCustomizationOutput{}",
          "2951:  req = c.newRequest(op, input, output)",
          "2952:  return",
          "2953: }",
          "2990: func (c *QuickSight) DescribeAccountCustomization(input *DescribeAccountCustomizationInput) (*DescribeAccountCustomizationOutput, error) {",
          "2991:  req, out := c.DescribeAccountCustomizationRequest(input)",
          "2992:  return out, req.Send()",
          "2993: }",
          "3004: func (c *QuickSight) DescribeAccountCustomizationWithContext(ctx aws.Context, input *DescribeAccountCustomizationInput, opts ...request.Option) (*DescribeAccountCustomizationOutput, error) {",
          "3005:  req, out := c.DescribeAccountCustomizationRequest(input)",
          "3006:  req.SetContext(ctx)",
          "3007:  req.ApplyOptions(opts...)",
          "3008:  return out, req.Send()",
          "3009: }",
          "3011: const opDescribeAccountSettings = \"DescribeAccountSettings\"",
          "3037: func (c *QuickSight) DescribeAccountSettingsRequest(input *DescribeAccountSettingsInput) (req *request.Request, output *DescribeAccountSettingsOutput) {",
          "3038:  op := &request.Operation{",
          "3039:   Name:       opDescribeAccountSettings,",
          "3040:   HTTPMethod: \"GET\",",
          "3041:   HTTPPath:   \"/accounts/{AwsAccountId}/settings\",",
          "3042:  }",
          "3044:  if input == nil {",
          "3045:   input = &DescribeAccountSettingsInput{}",
          "3046:  }",
          "3048:  output = &DescribeAccountSettingsOutput{}",
          "3049:  req = c.newRequest(op, input, output)",
          "3050:  return",
          "3051: }",
          "3089: func (c *QuickSight) DescribeAccountSettings(input *DescribeAccountSettingsInput) (*DescribeAccountSettingsOutput, error) {",
          "3090:  req, out := c.DescribeAccountSettingsRequest(input)",
          "3091:  return out, req.Send()",
          "3092: }",
          "3103: func (c *QuickSight) DescribeAccountSettingsWithContext(ctx aws.Context, input *DescribeAccountSettingsInput, opts ...request.Option) (*DescribeAccountSettingsOutput, error) {",
          "3104:  req, out := c.DescribeAccountSettingsRequest(input)",
          "3105:  req.SetContext(ctx)",
          "3106:  req.ApplyOptions(opts...)",
          "3107:  return out, req.Send()",
          "3108: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3357:  return out, req.Send()",
          "3358: }",
          "3386: func (c *QuickSight) DescribeTemplateRequest(input *DescribeTemplateInput) (req *request.Request, output *DescribeTemplateOutput) {",
          "3387:  op := &request.Operation{",
          "3388:   Name:       opDescribeTemplate,",
          "",
          "[Removed Lines]",
          "3360: const opDescribeTemplate = \"DescribeTemplate\"",
          "",
          "[Added Lines]",
          "3986: const opDescribeNamespace = \"DescribeNamespace\"",
          "4012: func (c *QuickSight) DescribeNamespaceRequest(input *DescribeNamespaceInput) (req *request.Request, output *DescribeNamespaceOutput) {",
          "4013:  op := &request.Operation{",
          "4014:   Name:       opDescribeNamespace,",
          "4015:   HTTPMethod: \"GET\",",
          "4016:   HTTPPath:   \"/accounts/{AwsAccountId}/namespaces/{Namespace}\",",
          "4017:  }",
          "4019:  if input == nil {",
          "4020:   input = &DescribeNamespaceInput{}",
          "4021:  }",
          "4023:  output = &DescribeNamespaceOutput{}",
          "4024:  req = c.newRequest(op, input, output)",
          "4025:  return",
          "4026: }",
          "4063: func (c *QuickSight) DescribeNamespace(input *DescribeNamespaceInput) (*DescribeNamespaceOutput, error) {",
          "4064:  req, out := c.DescribeNamespaceRequest(input)",
          "4065:  return out, req.Send()",
          "4066: }",
          "4077: func (c *QuickSight) DescribeNamespaceWithContext(ctx aws.Context, input *DescribeNamespaceInput, opts ...request.Option) (*DescribeNamespaceOutput, error) {",
          "4078:  req, out := c.DescribeNamespaceRequest(input)",
          "4079:  req.SetContext(ctx)",
          "4080:  req.ApplyOptions(opts...)",
          "4081:  return out, req.Send()",
          "4082: }",
          "4084: const opDescribeTemplate = \"DescribeTemplate\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4192:  return out, req.Send()",
          "4193: }",
          "4195: const opListDashboardVersions = \"ListDashboardVersions\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4922: const opGetSessionEmbedUrl = \"GetSessionEmbedUrl\"",
          "4948: func (c *QuickSight) GetSessionEmbedUrlRequest(input *GetSessionEmbedUrlInput) (req *request.Request, output *GetSessionEmbedUrlOutput) {",
          "4949:  op := &request.Operation{",
          "4950:   Name:       opGetSessionEmbedUrl,",
          "4951:   HTTPMethod: \"GET\",",
          "4952:   HTTPPath:   \"/accounts/{AwsAccountId}/session-embed-url\",",
          "4953:  }",
          "4955:  if input == nil {",
          "4956:   input = &GetSessionEmbedUrlInput{}",
          "4957:  }",
          "4959:  output = &GetSessionEmbedUrlOutput{}",
          "4960:  req = c.newRequest(op, input, output)",
          "4961:  return",
          "4962: }",
          "5015: func (c *QuickSight) GetSessionEmbedUrl(input *GetSessionEmbedUrlInput) (*GetSessionEmbedUrlOutput, error) {",
          "5016:  req, out := c.GetSessionEmbedUrlRequest(input)",
          "5017:  return out, req.Send()",
          "5018: }",
          "5029: func (c *QuickSight) GetSessionEmbedUrlWithContext(ctx aws.Context, input *GetSessionEmbedUrlInput, opts ...request.Option) (*GetSessionEmbedUrlOutput, error) {",
          "5030:  req, out := c.GetSessionEmbedUrlRequest(input)",
          "5031:  req.SetContext(ctx)",
          "5032:  req.ApplyOptions(opts...)",
          "5033:  return out, req.Send()",
          "5034: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5374:  return p.Err()",
          "5375: }",
          "5404:  op := &request.Operation{",
          "5406:   HTTPMethod: \"GET\",",
          "5408:  }",
          "5410:  if input == nil {",
          "5412:  }",
          "5415:  req = c.newRequest(op, input, output)",
          "5416:  return",
          "5417: }",
          "",
          "[Removed Lines]",
          "5377: const opListTagsForResource = \"ListTagsForResource\"",
          "5403: func (c *QuickSight) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "5405:   Name:       opListTagsForResource,",
          "5407:   HTTPPath:   \"/resources/{ResourceArn}/tags\",",
          "5411:   input = &ListTagsForResourceInput{}",
          "5414:  output = &ListTagsForResourceOutput{}",
          "",
          "[Added Lines]",
          "6218: const opListNamespaces = \"ListNamespaces\"",
          "6244: func (c *QuickSight) ListNamespacesRequest(input *ListNamespacesInput) (req *request.Request, output *ListNamespacesOutput) {",
          "6246:   Name:       opListNamespaces,",
          "6248:   HTTPPath:   \"/accounts/{AwsAccountId}/namespaces\",",
          "6249:   Paginator: &request.Paginator{",
          "6250:    InputTokens:     []string{\"NextToken\"},",
          "6251:    OutputTokens:    []string{\"NextToken\"},",
          "6252:    LimitToken:      \"MaxResults\",",
          "6253:    TruncationToken: \"\",",
          "6254:   },",
          "6258:   input = &ListNamespacesInput{}",
          "6261:  output = &ListNamespacesOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5453:  return out, req.Send()",
          "5454: }",
          "5467:  req.SetContext(ctx)",
          "5468:  req.ApplyOptions(opts...)",
          "5469:  return out, req.Send()",
          "5470: }",
          "5508:   },",
          "5509:  }",
          "",
          "[Removed Lines]",
          "5451: func (c *QuickSight) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "5452:  req, out := c.ListTagsForResourceRequest(input)",
          "5465: func (c *QuickSight) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "5466:  req, out := c.ListTagsForResourceRequest(input)",
          "5472: const opListTemplateAliases = \"ListTemplateAliases\"",
          "5498: func (c *QuickSight) ListTemplateAliasesRequest(input *ListTemplateAliasesInput) (req *request.Request, output *ListTemplateAliasesOutput) {",
          "5499:  op := &request.Operation{",
          "5500:   Name:       opListTemplateAliases,",
          "5501:   HTTPMethod: \"GET\",",
          "5502:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}/aliases\",",
          "5503:   Paginator: &request.Paginator{",
          "5504:    InputTokens:     []string{\"NextToken\"},",
          "5505:    OutputTokens:    []string{\"NextToken\"},",
          "5506:    LimitToken:      \"MaxResults\",",
          "5507:    TruncationToken: \"\",",
          "",
          "[Added Lines]",
          "6307: func (c *QuickSight) ListNamespaces(input *ListNamespacesInput) (*ListNamespacesOutput, error) {",
          "6308:  req, out := c.ListNamespacesRequest(input)",
          "6321: func (c *QuickSight) ListNamespacesWithContext(ctx aws.Context, input *ListNamespacesInput, opts ...request.Option) (*ListNamespacesOutput, error) {",
          "6322:  req, out := c.ListNamespacesRequest(input)",
          "6345: func (c *QuickSight) ListNamespacesPages(input *ListNamespacesInput, fn func(*ListNamespacesOutput, bool) bool) error {",
          "6346:  return c.ListNamespacesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "6347: }",
          "6356: func (c *QuickSight) ListNamespacesPagesWithContext(ctx aws.Context, input *ListNamespacesInput, fn func(*ListNamespacesOutput, bool) bool, opts ...request.Option) error {",
          "6357:  p := request.Pagination{",
          "6358:   NewRequest: func() (*request.Request, error) {",
          "6359:    var inCpy *ListNamespacesInput",
          "6360:    if input != nil {",
          "6361:     tmp := *input",
          "6362:     inCpy = &tmp",
          "6363:    }",
          "6364:    req, _ := c.ListNamespacesRequest(inCpy)",
          "6365:    req.SetContext(ctx)",
          "6366:    req.ApplyOptions(opts...)",
          "6367:    return req, nil",
          "6368:   },",
          "6369:  }",
          "6371:  for p.Next() {",
          "6372:   if !fn(p.Page().(*ListNamespacesOutput), !p.HasNextPage()) {",
          "6373:    break",
          "6374:   }",
          "6375:  }",
          "6377:  return p.Err()",
          "6378: }",
          "6380: const opListTagsForResource = \"ListTagsForResource\"",
          "6406: func (c *QuickSight) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "6407:  op := &request.Operation{",
          "6408:   Name:       opListTagsForResource,",
          "6409:   HTTPMethod: \"GET\",",
          "6410:   HTTPPath:   \"/resources/{ResourceArn}/tags\",",
          "6411:  }",
          "6413:  if input == nil {",
          "6414:   input = &ListTagsForResourceInput{}",
          "6415:  }",
          "6417:  output = &ListTagsForResourceOutput{}",
          "6418:  req = c.newRequest(op, input, output)",
          "6419:  return",
          "6420: }",
          "6454: func (c *QuickSight) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "6455:  req, out := c.ListTagsForResourceRequest(input)",
          "6456:  return out, req.Send()",
          "6457: }",
          "6468: func (c *QuickSight) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "6469:  req, out := c.ListTagsForResourceRequest(input)",
          "6470:  req.SetContext(ctx)",
          "6471:  req.ApplyOptions(opts...)",
          "6472:  return out, req.Send()",
          "6473: }",
          "6475: const opListTemplateAliases = \"ListTemplateAliases\"",
          "6501: func (c *QuickSight) ListTemplateAliasesRequest(input *ListTemplateAliasesInput) (req *request.Request, output *ListTemplateAliasesOutput) {",
          "6502:  op := &request.Operation{",
          "6503:   Name:       opListTemplateAliases,",
          "6504:   HTTPMethod: \"GET\",",
          "6505:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}/aliases\",",
          "6506:   Paginator: &request.Paginator{",
          "6507:    InputTokens:     []string{\"NextToken\"},",
          "6508:    OutputTokens:    []string{\"NextToken\"},",
          "6509:    LimitToken:      \"MaxResults\",",
          "6510:    TruncationToken: \"\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6919:  return out, req.Send()",
          "6920: }",
          "6949:  op := &request.Operation{",
          "6951:   HTTPMethod: \"PUT\",",
          "6953:  }",
          "6955:  if input == nil {",
          "6957:  }",
          "6960:  req = c.newRequest(op, input, output)",
          "6961:  return",
          "6962: }",
          "",
          "[Removed Lines]",
          "6922: const opUpdateDashboard = \"UpdateDashboard\"",
          "6948: func (c *QuickSight) UpdateDashboardRequest(input *UpdateDashboardInput) (req *request.Request, output *UpdateDashboardOutput) {",
          "6950:   Name:       opUpdateDashboard,",
          "6952:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}\",",
          "6956:   input = &UpdateDashboardInput{}",
          "6959:  output = &UpdateDashboardOutput{}",
          "",
          "[Added Lines]",
          "7931: const opUpdateAccountCustomization = \"UpdateAccountCustomization\"",
          "7957: func (c *QuickSight) UpdateAccountCustomizationRequest(input *UpdateAccountCustomizationInput) (req *request.Request, output *UpdateAccountCustomizationOutput) {",
          "7959:   Name:       opUpdateAccountCustomization,",
          "7961:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "7965:   input = &UpdateAccountCustomizationInput{}",
          "7968:  output = &UpdateAccountCustomizationOutput{}",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "7003:  return out, req.Send()",
          "7004: }",
          "7017:  req.SetContext(ctx)",
          "7018:  req.ApplyOptions(opts...)",
          "7019:  return out, req.Send()",
          "7020: }",
          "7049:  op := &request.Operation{",
          "7051:   HTTPMethod: \"PUT\",",
          "7053:  }",
          "7055:  if input == nil {",
          "7057:  }",
          "7060:  req = c.newRequest(op, input, output)",
          "7061:  return",
          "7062: }",
          "",
          "[Removed Lines]",
          "7001: func (c *QuickSight) UpdateDashboard(input *UpdateDashboardInput) (*UpdateDashboardOutput, error) {",
          "7002:  req, out := c.UpdateDashboardRequest(input)",
          "7015: func (c *QuickSight) UpdateDashboardWithContext(ctx aws.Context, input *UpdateDashboardInput, opts ...request.Option) (*UpdateDashboardOutput, error) {",
          "7016:  req, out := c.UpdateDashboardRequest(input)",
          "7022: const opUpdateDashboardPermissions = \"UpdateDashboardPermissions\"",
          "7048: func (c *QuickSight) UpdateDashboardPermissionsRequest(input *UpdateDashboardPermissionsInput) (req *request.Request, output *UpdateDashboardPermissionsOutput) {",
          "7050:   Name:       opUpdateDashboardPermissions,",
          "7052:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions\",",
          "7056:   input = &UpdateDashboardPermissionsInput{}",
          "7059:  output = &UpdateDashboardPermissionsOutput{}",
          "",
          "[Added Lines]",
          "8009: func (c *QuickSight) UpdateAccountCustomization(input *UpdateAccountCustomizationInput) (*UpdateAccountCustomizationOutput, error) {",
          "8010:  req, out := c.UpdateAccountCustomizationRequest(input)",
          "8023: func (c *QuickSight) UpdateAccountCustomizationWithContext(ctx aws.Context, input *UpdateAccountCustomizationInput, opts ...request.Option) (*UpdateAccountCustomizationOutput, error) {",
          "8024:  req, out := c.UpdateAccountCustomizationRequest(input)",
          "8030: const opUpdateAccountSettings = \"UpdateAccountSettings\"",
          "8056: func (c *QuickSight) UpdateAccountSettingsRequest(input *UpdateAccountSettingsInput) (req *request.Request, output *UpdateAccountSettingsOutput) {",
          "8058:   Name:       opUpdateAccountSettings,",
          "8060:   HTTPPath:   \"/accounts/{AwsAccountId}/settings\",",
          "8064:   input = &UpdateAccountSettingsInput{}",
          "8067:  output = &UpdateAccountSettingsOutput{}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7100:  return out, req.Send()",
          "7101: }",
          "7114:  req.SetContext(ctx)",
          "7115:  req.ApplyOptions(opts...)",
          "7116:  return out, req.Send()",
          "7117: }",
          "",
          "[Removed Lines]",
          "7098: func (c *QuickSight) UpdateDashboardPermissions(input *UpdateDashboardPermissionsInput) (*UpdateDashboardPermissionsOutput, error) {",
          "7099:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "7112: func (c *QuickSight) UpdateDashboardPermissionsWithContext(ctx aws.Context, input *UpdateDashboardPermissionsInput, opts ...request.Option) (*UpdateDashboardPermissionsOutput, error) {",
          "7113:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "7119: const opUpdateDashboardPublishedVersion = \"UpdateDashboardPublishedVersion\"",
          "",
          "[Added Lines]",
          "8107: func (c *QuickSight) UpdateAccountSettings(input *UpdateAccountSettingsInput) (*UpdateAccountSettingsOutput, error) {",
          "8108:  req, out := c.UpdateAccountSettingsRequest(input)",
          "8121: func (c *QuickSight) UpdateAccountSettingsWithContext(ctx aws.Context, input *UpdateAccountSettingsInput, opts ...request.Option) (*UpdateAccountSettingsOutput, error) {",
          "8122:  req, out := c.UpdateAccountSettingsRequest(input)",
          "8128: const opUpdateDashboard = \"UpdateDashboard\"",
          "8154: func (c *QuickSight) UpdateDashboardRequest(input *UpdateDashboardInput) (req *request.Request, output *UpdateDashboardOutput) {",
          "8155:  op := &request.Operation{",
          "8156:   Name:       opUpdateDashboard,",
          "8157:   HTTPMethod: \"PUT\",",
          "8158:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}\",",
          "8159:  }",
          "8161:  if input == nil {",
          "8162:   input = &UpdateDashboardInput{}",
          "8163:  }",
          "8165:  output = &UpdateDashboardOutput{}",
          "8166:  req = c.newRequest(op, input, output)",
          "8167:  return",
          "8168: }",
          "8207: func (c *QuickSight) UpdateDashboard(input *UpdateDashboardInput) (*UpdateDashboardOutput, error) {",
          "8208:  req, out := c.UpdateDashboardRequest(input)",
          "8209:  return out, req.Send()",
          "8210: }",
          "8221: func (c *QuickSight) UpdateDashboardWithContext(ctx aws.Context, input *UpdateDashboardInput, opts ...request.Option) (*UpdateDashboardOutput, error) {",
          "8222:  req, out := c.UpdateDashboardRequest(input)",
          "8223:  req.SetContext(ctx)",
          "8224:  req.ApplyOptions(opts...)",
          "8225:  return out, req.Send()",
          "8226: }",
          "8228: const opUpdateDashboardPermissions = \"UpdateDashboardPermissions\"",
          "8254: func (c *QuickSight) UpdateDashboardPermissionsRequest(input *UpdateDashboardPermissionsInput) (req *request.Request, output *UpdateDashboardPermissionsOutput) {",
          "8255:  op := &request.Operation{",
          "8256:   Name:       opUpdateDashboardPermissions,",
          "8257:   HTTPMethod: \"PUT\",",
          "8258:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions\",",
          "8259:  }",
          "8261:  if input == nil {",
          "8262:   input = &UpdateDashboardPermissionsInput{}",
          "8263:  }",
          "8265:  output = &UpdateDashboardPermissionsOutput{}",
          "8266:  req = c.newRequest(op, input, output)",
          "8267:  return",
          "8268: }",
          "8304: func (c *QuickSight) UpdateDashboardPermissions(input *UpdateDashboardPermissionsInput) (*UpdateDashboardPermissionsOutput, error) {",
          "8305:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "8306:  return out, req.Send()",
          "8307: }",
          "8318: func (c *QuickSight) UpdateDashboardPermissionsWithContext(ctx aws.Context, input *UpdateDashboardPermissionsInput, opts ...request.Option) (*UpdateDashboardPermissionsOutput, error) {",
          "8319:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "8320:  req.SetContext(ctx)",
          "8321:  req.ApplyOptions(opts...)",
          "8322:  return out, req.Send()",
          "8323: }",
          "8325: const opUpdateDashboardPublishedVersion = \"UpdateDashboardPublishedVersion\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "8601:  return s.RespMetadata.RequestID",
          "8602: }",
          "8605: type ActiveIAMPolicyAssignment struct {",
          "8606:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9814: type AccountCustomization struct {",
          "9815:  _ struct{} `type:\"structure\"`",
          "9818:  DefaultTheme *string `type:\"string\"`",
          "9819: }",
          "9822: func (s AccountCustomization) String() string {",
          "9823:  return awsutil.Prettify(s)",
          "9824: }",
          "9827: func (s AccountCustomization) GoString() string {",
          "9828:  return s.String()",
          "9829: }",
          "9832: func (s *AccountCustomization) SetDefaultTheme(v string) *AccountCustomization {",
          "9833:  s.DefaultTheme = &v",
          "9834:  return s",
          "9835: }",
          "9838: type AccountSettings struct {",
          "9839:  _ struct{} `type:\"structure\"`",
          "9842:  AccountName *string `type:\"string\"`",
          "9845:  DefaultNamespace *string `type:\"string\"`",
          "9848:  Edition *string `type:\"string\" enum:\"Edition\"`",
          "9851:  NotificationEmail *string `type:\"string\"`",
          "9852: }",
          "9855: func (s AccountSettings) String() string {",
          "9856:  return awsutil.Prettify(s)",
          "9857: }",
          "9860: func (s AccountSettings) GoString() string {",
          "9861:  return s.String()",
          "9862: }",
          "9865: func (s *AccountSettings) SetAccountName(v string) *AccountSettings {",
          "9866:  s.AccountName = &v",
          "9867:  return s",
          "9868: }",
          "9871: func (s *AccountSettings) SetDefaultNamespace(v string) *AccountSettings {",
          "9872:  s.DefaultNamespace = &v",
          "9873:  return s",
          "9874: }",
          "9877: func (s *AccountSettings) SetEdition(v string) *AccountSettings {",
          "9878:  s.Edition = &v",
          "9879:  return s",
          "9880: }",
          "9883: func (s *AccountSettings) SetNotificationEmail(v string) *AccountSettings {",
          "9884:  s.NotificationEmail = &v",
          "9885:  return s",
          "9886: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "9508:  return s.RespMetadata.RequestID",
          "9509: }",
          "9514:  _ struct{} `type:\"structure\"`",
          "9520: }",
          "9524:  return awsutil.Prettify(s)",
          "9525: }",
          "9529:  return s.String()",
          "9530: }",
          "9534:  invalidParams := request.ErrInvalidParams{Context: \"CreateColumnsOperation\"}",
          "9535:  if s.Columns == nil {",
          "9536:   invalidParams.Add(request.NewErrParamRequired(\"Columns\"))",
          "",
          "[Removed Lines]",
          "9513: type CreateColumnsOperation struct {",
          "9519:  Columns []*CalculatedColumn `min:\"1\" type:\"list\" required:\"true\"`",
          "9523: func (s CreateColumnsOperation) String() string {",
          "9528: func (s CreateColumnsOperation) GoString() string {",
          "9533: func (s *CreateColumnsOperation) Validate() error {",
          "",
          "[Added Lines]",
          "10795: type CreateAccountCustomizationInput struct {",
          "10804:  AccountCustomization *AccountCustomization `type:\"structure\" required:\"true\"`",
          "10809:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "10812:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "10816: func (s CreateAccountCustomizationInput) String() string {",
          "10821: func (s CreateAccountCustomizationInput) GoString() string {",
          "10826: func (s *CreateAccountCustomizationInput) Validate() error {",
          "10827:  invalidParams := request.ErrInvalidParams{Context: \"CreateAccountCustomizationInput\"}",
          "10828:  if s.AccountCustomization == nil {",
          "10829:   invalidParams.Add(request.NewErrParamRequired(\"AccountCustomization\"))",
          "10830:  }",
          "10831:  if s.AwsAccountId == nil {",
          "10832:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "10833:  }",
          "10834:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "10835:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "10836:  }",
          "10838:  if invalidParams.Len() > 0 {",
          "10839:   return invalidParams",
          "10840:  }",
          "10841:  return nil",
          "10842: }",
          "10845: func (s *CreateAccountCustomizationInput) SetAccountCustomization(v *AccountCustomization) *CreateAccountCustomizationInput {",
          "10846:  s.AccountCustomization = v",
          "10847:  return s",
          "10848: }",
          "10851: func (s *CreateAccountCustomizationInput) SetAwsAccountId(v string) *CreateAccountCustomizationInput {",
          "10852:  s.AwsAccountId = &v",
          "10853:  return s",
          "10854: }",
          "10857: func (s *CreateAccountCustomizationInput) SetNamespace(v string) *CreateAccountCustomizationInput {",
          "10858:  s.Namespace = &v",
          "10859:  return s",
          "10860: }",
          "10862: type CreateAccountCustomizationOutput struct {",
          "10863:  _ struct{} `type:\"structure\"`",
          "10867:  AccountCustomization *AccountCustomization `type:\"structure\"`",
          "10870:  AwsAccountId *string `min:\"12\" type:\"string\"`",
          "10873:  Namespace *string `type:\"string\"`",
          "10876:  RequestId *string `type:\"string\"`",
          "10879:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "10880: }",
          "10883: func (s CreateAccountCustomizationOutput) String() string {",
          "10884:  return awsutil.Prettify(s)",
          "10885: }",
          "10888: func (s CreateAccountCustomizationOutput) GoString() string {",
          "10889:  return s.String()",
          "10890: }",
          "10893: func (s *CreateAccountCustomizationOutput) SetAccountCustomization(v *AccountCustomization) *CreateAccountCustomizationOutput {",
          "10894:  s.AccountCustomization = v",
          "10895:  return s",
          "10896: }",
          "10899: func (s *CreateAccountCustomizationOutput) SetAwsAccountId(v string) *CreateAccountCustomizationOutput {",
          "10900:  s.AwsAccountId = &v",
          "10901:  return s",
          "10902: }",
          "10905: func (s *CreateAccountCustomizationOutput) SetNamespace(v string) *CreateAccountCustomizationOutput {",
          "10906:  s.Namespace = &v",
          "10907:  return s",
          "10908: }",
          "10911: func (s *CreateAccountCustomizationOutput) SetRequestId(v string) *CreateAccountCustomizationOutput {",
          "10912:  s.RequestId = &v",
          "10913:  return s",
          "10914: }",
          "10917: func (s *CreateAccountCustomizationOutput) SetStatus(v int64) *CreateAccountCustomizationOutput {",
          "10918:  s.Status = &v",
          "10919:  return s",
          "10920: }",
          "10924: type CreateColumnsOperation struct {",
          "10925:  _ struct{} `type:\"structure\"`",
          "10930:  Columns []*CalculatedColumn `min:\"1\" type:\"list\" required:\"true\"`",
          "10931: }",
          "10934: func (s CreateColumnsOperation) String() string {",
          "10935:  return awsutil.Prettify(s)",
          "10936: }",
          "10939: func (s CreateColumnsOperation) GoString() string {",
          "10940:  return s.String()",
          "10941: }",
          "10944: func (s *CreateColumnsOperation) Validate() error {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "10984:  return s",
          "10985: }",
          "10987: type CreateTemplateAliasInput struct {",
          "10988:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12398: type CreateNamespaceInput struct {",
          "12399:  _ struct{} `type:\"structure\"`",
          "12405:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "12411:  IdentityStore *string `type:\"string\" required:\"true\" enum:\"IdentityStore\"`",
          "12416:  Namespace *string `type:\"string\" required:\"true\"`",
          "12419:  Tags []*Tag `min:\"1\" type:\"list\"`",
          "12420: }",
          "12423: func (s CreateNamespaceInput) String() string {",
          "12424:  return awsutil.Prettify(s)",
          "12425: }",
          "12428: func (s CreateNamespaceInput) GoString() string {",
          "12429:  return s.String()",
          "12430: }",
          "12433: func (s *CreateNamespaceInput) Validate() error {",
          "12434:  invalidParams := request.ErrInvalidParams{Context: \"CreateNamespaceInput\"}",
          "12435:  if s.AwsAccountId == nil {",
          "12436:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "12437:  }",
          "12438:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "12439:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "12440:  }",
          "12441:  if s.IdentityStore == nil {",
          "12442:   invalidParams.Add(request.NewErrParamRequired(\"IdentityStore\"))",
          "12443:  }",
          "12444:  if s.Namespace == nil {",
          "12445:   invalidParams.Add(request.NewErrParamRequired(\"Namespace\"))",
          "12446:  }",
          "12447:  if s.Tags != nil && len(s.Tags) < 1 {",
          "12448:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "12449:  }",
          "12450:  if s.Tags != nil {",
          "12451:   for i, v := range s.Tags {",
          "12452:    if v == nil {",
          "12453:     continue",
          "12454:    }",
          "12455:    if err := v.Validate(); err != nil {",
          "12456:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "12457:    }",
          "12458:   }",
          "12459:  }",
          "12461:  if invalidParams.Len() > 0 {",
          "12462:   return invalidParams",
          "12463:  }",
          "12464:  return nil",
          "12465: }",
          "12468: func (s *CreateNamespaceInput) SetAwsAccountId(v string) *CreateNamespaceInput {",
          "12469:  s.AwsAccountId = &v",
          "12470:  return s",
          "12471: }",
          "12474: func (s *CreateNamespaceInput) SetIdentityStore(v string) *CreateNamespaceInput {",
          "12475:  s.IdentityStore = &v",
          "12476:  return s",
          "12477: }",
          "12480: func (s *CreateNamespaceInput) SetNamespace(v string) *CreateNamespaceInput {",
          "12481:  s.Namespace = &v",
          "12482:  return s",
          "12483: }",
          "12486: func (s *CreateNamespaceInput) SetTags(v []*Tag) *CreateNamespaceInput {",
          "12487:  s.Tags = v",
          "12488:  return s",
          "12489: }",
          "12491: type CreateNamespaceOutput struct {",
          "12492:  _ struct{} `type:\"structure\"`",
          "12495:  Arn *string `type:\"string\"`",
          "12499:  CapacityRegion *string `type:\"string\"`",
          "12505:  CreationStatus *string `type:\"string\" enum:\"NamespaceStatus\"`",
          "12509:  IdentityStore *string `type:\"string\" enum:\"IdentityStore\"`",
          "12512:  Name *string `type:\"string\"`",
          "12515:  RequestId *string `type:\"string\"`",
          "12518:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "12519: }",
          "12522: func (s CreateNamespaceOutput) String() string {",
          "12523:  return awsutil.Prettify(s)",
          "12524: }",
          "12527: func (s CreateNamespaceOutput) GoString() string {",
          "12528:  return s.String()",
          "12529: }",
          "12532: func (s *CreateNamespaceOutput) SetArn(v string) *CreateNamespaceOutput {",
          "12533:  s.Arn = &v",
          "12534:  return s",
          "12535: }",
          "12538: func (s *CreateNamespaceOutput) SetCapacityRegion(v string) *CreateNamespaceOutput {",
          "12539:  s.CapacityRegion = &v",
          "12540:  return s",
          "12541: }",
          "12544: func (s *CreateNamespaceOutput) SetCreationStatus(v string) *CreateNamespaceOutput {",
          "12545:  s.CreationStatus = &v",
          "12546:  return s",
          "12547: }",
          "12550: func (s *CreateNamespaceOutput) SetIdentityStore(v string) *CreateNamespaceOutput {",
          "12551:  s.IdentityStore = &v",
          "12552:  return s",
          "12553: }",
          "12556: func (s *CreateNamespaceOutput) SetName(v string) *CreateNamespaceOutput {",
          "12557:  s.Name = &v",
          "12558:  return s",
          "12559: }",
          "12562: func (s *CreateNamespaceOutput) SetRequestId(v string) *CreateNamespaceOutput {",
          "12563:  s.RequestId = &v",
          "12564:  return s",
          "12565: }",
          "12568: func (s *CreateNamespaceOutput) SetStatus(v int64) *CreateNamespaceOutput {",
          "12569:  s.Status = &v",
          "12570:  return s",
          "12571: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "13450:  return s",
          "13451: }",
          "13454:  _ struct{} `type:\"structure\"`",
          "13459:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "13469: }",
          "13473:  return awsutil.Prettify(s)",
          "13474: }",
          "13478:  return s.String()",
          "13479: }",
          "13484:  if s.AwsAccountId == nil {",
          "13485:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "13486:  }",
          "13487:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "13488:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "13489:  }",
          "13500:  if invalidParams.Len() > 0 {",
          "13501:   return invalidParams",
          "",
          "[Removed Lines]",
          "13453: type DeleteDashboardInput struct {",
          "13464:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "13468:  VersionNumber *int64 `location:\"querystring\" locationName:\"version-number\" min:\"1\" type:\"long\"`",
          "13472: func (s DeleteDashboardInput) String() string {",
          "13477: func (s DeleteDashboardInput) GoString() string {",
          "13482: func (s *DeleteDashboardInput) Validate() error {",
          "13483:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDashboardInput\"}",
          "13490:  if s.DashboardId == nil {",
          "13491:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "13492:  }",
          "13493:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "13494:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "13495:  }",
          "13496:  if s.VersionNumber != nil && *s.VersionNumber < 1 {",
          "13497:   invalidParams.Add(request.NewErrParamMinValue(\"VersionNumber\", 1))",
          "13498:  }",
          "",
          "[Added Lines]",
          "15039: type DeleteAccountCustomizationInput struct {",
          "15049:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "15053: func (s DeleteAccountCustomizationInput) String() string {",
          "15058: func (s DeleteAccountCustomizationInput) GoString() string {",
          "15063: func (s *DeleteAccountCustomizationInput) Validate() error {",
          "15064:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAccountCustomizationInput\"}",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "13504: }",
          "13508:  s.AwsAccountId = &v",
          "13509:  return s",
          "13510: }",
          "13515:  return s",
          "13516: }",
          "13524: type DeleteDashboardOutput struct {",
          "13525:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "13507: func (s *DeleteDashboardInput) SetAwsAccountId(v string) *DeleteDashboardInput {",
          "13513: func (s *DeleteDashboardInput) SetDashboardId(v string) *DeleteDashboardInput {",
          "13514:  s.DashboardId = &v",
          "13519: func (s *DeleteDashboardInput) SetVersionNumber(v int64) *DeleteDashboardInput {",
          "13520:  s.VersionNumber = &v",
          "13521:  return s",
          "13522: }",
          "",
          "[Added Lines]",
          "15079: func (s *DeleteAccountCustomizationInput) SetAwsAccountId(v string) *DeleteAccountCustomizationInput {",
          "15085: func (s *DeleteAccountCustomizationInput) SetNamespace(v string) *DeleteAccountCustomizationInput {",
          "15086:  s.Namespace = &v",
          "15090: type DeleteAccountCustomizationOutput struct {",
          "15091:  _ struct{} `type:\"structure\"`",
          "15094:  RequestId *string `type:\"string\"`",
          "15097:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "15098: }",
          "15101: func (s DeleteAccountCustomizationOutput) String() string {",
          "15102:  return awsutil.Prettify(s)",
          "15103: }",
          "15106: func (s DeleteAccountCustomizationOutput) GoString() string {",
          "15107:  return s.String()",
          "15108: }",
          "15111: func (s *DeleteAccountCustomizationOutput) SetRequestId(v string) *DeleteAccountCustomizationOutput {",
          "15112:  s.RequestId = &v",
          "15113:  return s",
          "15114: }",
          "15117: func (s *DeleteAccountCustomizationOutput) SetStatus(v int64) *DeleteAccountCustomizationOutput {",
          "15118:  s.Status = &v",
          "15119:  return s",
          "15120: }",
          "15122: type DeleteDashboardInput struct {",
          "15123:  _ struct{} `type:\"structure\"`",
          "15128:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "15133:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "15137:  VersionNumber *int64 `location:\"querystring\" locationName:\"version-number\" min:\"1\" type:\"long\"`",
          "15138: }",
          "15141: func (s DeleteDashboardInput) String() string {",
          "15142:  return awsutil.Prettify(s)",
          "15143: }",
          "15146: func (s DeleteDashboardInput) GoString() string {",
          "15147:  return s.String()",
          "15148: }",
          "15151: func (s *DeleteDashboardInput) Validate() error {",
          "15152:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDashboardInput\"}",
          "15153:  if s.AwsAccountId == nil {",
          "15154:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "15155:  }",
          "15156:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "15157:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "15158:  }",
          "15159:  if s.DashboardId == nil {",
          "15160:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "15161:  }",
          "15162:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "15163:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "15164:  }",
          "15165:  if s.VersionNumber != nil && *s.VersionNumber < 1 {",
          "15166:   invalidParams.Add(request.NewErrParamMinValue(\"VersionNumber\", 1))",
          "15167:  }",
          "15169:  if invalidParams.Len() > 0 {",
          "15170:   return invalidParams",
          "15171:  }",
          "15172:  return nil",
          "15173: }",
          "15176: func (s *DeleteDashboardInput) SetAwsAccountId(v string) *DeleteDashboardInput {",
          "15177:  s.AwsAccountId = &v",
          "15178:  return s",
          "15179: }",
          "15182: func (s *DeleteDashboardInput) SetDashboardId(v string) *DeleteDashboardInput {",
          "15183:  s.DashboardId = &v",
          "15184:  return s",
          "15185: }",
          "15188: func (s *DeleteDashboardInput) SetVersionNumber(v int64) *DeleteDashboardInput {",
          "15189:  s.VersionNumber = &v",
          "15190:  return s",
          "15191: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14140:  return s",
          "14141: }",
          "14143: type DeleteTemplateAliasInput struct {",
          "14144:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15812: type DeleteNamespaceInput struct {",
          "15813:  _ struct{} `type:\"structure\"`",
          "15819:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "15824:  Namespace *string `location:\"uri\" locationName:\"Namespace\" type:\"string\" required:\"true\"`",
          "15825: }",
          "15828: func (s DeleteNamespaceInput) String() string {",
          "15829:  return awsutil.Prettify(s)",
          "15830: }",
          "15833: func (s DeleteNamespaceInput) GoString() string {",
          "15834:  return s.String()",
          "15835: }",
          "15838: func (s *DeleteNamespaceInput) Validate() error {",
          "15839:  invalidParams := request.ErrInvalidParams{Context: \"DeleteNamespaceInput\"}",
          "15840:  if s.AwsAccountId == nil {",
          "15841:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "15842:  }",
          "15843:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "15844:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "15845:  }",
          "15846:  if s.Namespace == nil {",
          "15847:   invalidParams.Add(request.NewErrParamRequired(\"Namespace\"))",
          "15848:  }",
          "15849:  if s.Namespace != nil && len(*s.Namespace) < 1 {",
          "15850:   invalidParams.Add(request.NewErrParamMinLen(\"Namespace\", 1))",
          "15851:  }",
          "15853:  if invalidParams.Len() > 0 {",
          "15854:   return invalidParams",
          "15855:  }",
          "15856:  return nil",
          "15857: }",
          "15860: func (s *DeleteNamespaceInput) SetAwsAccountId(v string) *DeleteNamespaceInput {",
          "15861:  s.AwsAccountId = &v",
          "15862:  return s",
          "15863: }",
          "15866: func (s *DeleteNamespaceInput) SetNamespace(v string) *DeleteNamespaceInput {",
          "15867:  s.Namespace = &v",
          "15868:  return s",
          "15869: }",
          "15871: type DeleteNamespaceOutput struct {",
          "15872:  _ struct{} `type:\"structure\"`",
          "15875:  RequestId *string `type:\"string\"`",
          "15878:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "15879: }",
          "15882: func (s DeleteNamespaceOutput) String() string {",
          "15883:  return awsutil.Prettify(s)",
          "15884: }",
          "15887: func (s DeleteNamespaceOutput) GoString() string {",
          "15888:  return s.String()",
          "15889: }",
          "15892: func (s *DeleteNamespaceOutput) SetRequestId(v string) *DeleteNamespaceOutput {",
          "15893:  s.RequestId = &v",
          "15894:  return s",
          "15895: }",
          "15898: func (s *DeleteNamespaceOutput) SetStatus(v int64) *DeleteNamespaceOutput {",
          "15899:  s.Status = &v",
          "15900:  return s",
          "15901: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "14850: }",
          "14854:  return awsutil.Prettify(s)",
          "14855: }",
          "14859:  return s.String()",
          "14860: }",
          "14864:  s.RequestId = &v",
          "14865:  return s",
          "14866: }",
          "14870:  s.Status = &v",
          "14871:  return s",
          "14872: }",
          "",
          "[Removed Lines]",
          "14853: func (s DeleteUserOutput) String() string {",
          "14858: func (s DeleteUserOutput) GoString() string {",
          "14863: func (s *DeleteUserOutput) SetRequestId(v string) *DeleteUserOutput {",
          "14869: func (s *DeleteUserOutput) SetStatus(v int64) *DeleteUserOutput {",
          "",
          "[Added Lines]",
          "16613: func (s DeleteUserOutput) String() string {",
          "16614:  return awsutil.Prettify(s)",
          "16615: }",
          "16618: func (s DeleteUserOutput) GoString() string {",
          "16619:  return s.String()",
          "16620: }",
          "16623: func (s *DeleteUserOutput) SetRequestId(v string) *DeleteUserOutput {",
          "16624:  s.RequestId = &v",
          "16625:  return s",
          "16626: }",
          "16629: func (s *DeleteUserOutput) SetStatus(v int64) *DeleteUserOutput {",
          "16630:  s.Status = &v",
          "16631:  return s",
          "16632: }",
          "16634: type DescribeAccountCustomizationInput struct {",
          "16635:  _ struct{} `type:\"structure\"`",
          "16641:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "16644:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "16648:  Resolved *bool `location:\"querystring\" locationName:\"resolved\" type:\"boolean\"`",
          "16649: }",
          "16652: func (s DescribeAccountCustomizationInput) String() string {",
          "16653:  return awsutil.Prettify(s)",
          "16654: }",
          "16657: func (s DescribeAccountCustomizationInput) GoString() string {",
          "16658:  return s.String()",
          "16659: }",
          "16662: func (s *DescribeAccountCustomizationInput) Validate() error {",
          "16663:  invalidParams := request.ErrInvalidParams{Context: \"DescribeAccountCustomizationInput\"}",
          "16664:  if s.AwsAccountId == nil {",
          "16665:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "16666:  }",
          "16667:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "16668:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "16669:  }",
          "16671:  if invalidParams.Len() > 0 {",
          "16672:   return invalidParams",
          "16673:  }",
          "16674:  return nil",
          "16675: }",
          "16678: func (s *DescribeAccountCustomizationInput) SetAwsAccountId(v string) *DescribeAccountCustomizationInput {",
          "16679:  s.AwsAccountId = &v",
          "16680:  return s",
          "16681: }",
          "16684: func (s *DescribeAccountCustomizationInput) SetNamespace(v string) *DescribeAccountCustomizationInput {",
          "16685:  s.Namespace = &v",
          "16686:  return s",
          "16687: }",
          "16690: func (s *DescribeAccountCustomizationInput) SetResolved(v bool) *DescribeAccountCustomizationInput {",
          "16691:  s.Resolved = &v",
          "16692:  return s",
          "16693: }",
          "16695: type DescribeAccountCustomizationOutput struct {",
          "16696:  _ struct{} `type:\"structure\"`",
          "16699:  AccountCustomization *AccountCustomization `type:\"structure\"`",
          "16703:  AwsAccountId *string `min:\"12\" type:\"string\"`",
          "16706:  Namespace *string `type:\"string\"`",
          "16709:  RequestId *string `type:\"string\"`",
          "16712:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "16713: }",
          "16716: func (s DescribeAccountCustomizationOutput) String() string {",
          "16717:  return awsutil.Prettify(s)",
          "16718: }",
          "16721: func (s DescribeAccountCustomizationOutput) GoString() string {",
          "16722:  return s.String()",
          "16723: }",
          "16726: func (s *DescribeAccountCustomizationOutput) SetAccountCustomization(v *AccountCustomization) *DescribeAccountCustomizationOutput {",
          "16727:  s.AccountCustomization = v",
          "16728:  return s",
          "16729: }",
          "16732: func (s *DescribeAccountCustomizationOutput) SetAwsAccountId(v string) *DescribeAccountCustomizationOutput {",
          "16733:  s.AwsAccountId = &v",
          "16734:  return s",
          "16735: }",
          "16738: func (s *DescribeAccountCustomizationOutput) SetNamespace(v string) *DescribeAccountCustomizationOutput {",
          "16739:  s.Namespace = &v",
          "16740:  return s",
          "16741: }",
          "16744: func (s *DescribeAccountCustomizationOutput) SetRequestId(v string) *DescribeAccountCustomizationOutput {",
          "16745:  s.RequestId = &v",
          "16746:  return s",
          "16747: }",
          "16750: func (s *DescribeAccountCustomizationOutput) SetStatus(v int64) *DescribeAccountCustomizationOutput {",
          "16751:  s.Status = &v",
          "16752:  return s",
          "16753: }",
          "16755: type DescribeAccountSettingsInput struct {",
          "16756:  _ struct{} `type:\"structure\"`",
          "16762:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "16763: }",
          "16766: func (s DescribeAccountSettingsInput) String() string {",
          "16767:  return awsutil.Prettify(s)",
          "16768: }",
          "16771: func (s DescribeAccountSettingsInput) GoString() string {",
          "16772:  return s.String()",
          "16773: }",
          "16776: func (s *DescribeAccountSettingsInput) Validate() error {",
          "16777:  invalidParams := request.ErrInvalidParams{Context: \"DescribeAccountSettingsInput\"}",
          "16778:  if s.AwsAccountId == nil {",
          "16779:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "16780:  }",
          "16781:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "16782:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "16783:  }",
          "16785:  if invalidParams.Len() > 0 {",
          "16786:   return invalidParams",
          "16787:  }",
          "16788:  return nil",
          "16789: }",
          "16792: func (s *DescribeAccountSettingsInput) SetAwsAccountId(v string) *DescribeAccountSettingsInput {",
          "16793:  s.AwsAccountId = &v",
          "16794:  return s",
          "16795: }",
          "16797: type DescribeAccountSettingsOutput struct {",
          "16798:  _ struct{} `type:\"structure\"`",
          "16806:  AccountSettings *AccountSettings `type:\"structure\"`",
          "16809:  RequestId *string `type:\"string\"`",
          "16812:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "16813: }",
          "16816: func (s DescribeAccountSettingsOutput) String() string {",
          "16821: func (s DescribeAccountSettingsOutput) GoString() string {",
          "16826: func (s *DescribeAccountSettingsOutput) SetAccountSettings(v *AccountSettings) *DescribeAccountSettingsOutput {",
          "16827:  s.AccountSettings = v",
          "16828:  return s",
          "16829: }",
          "16832: func (s *DescribeAccountSettingsOutput) SetRequestId(v string) *DescribeAccountSettingsOutput {",
          "16838: func (s *DescribeAccountSettingsOutput) SetStatus(v int64) *DescribeAccountSettingsOutput {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "15900:  return s",
          "15901: }",
          "15903: type DescribeTemplateAliasInput struct {",
          "15904:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17872: type DescribeNamespaceInput struct {",
          "17873:  _ struct{} `type:\"structure\"`",
          "17879:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "17884:  Namespace *string `location:\"uri\" locationName:\"Namespace\" type:\"string\" required:\"true\"`",
          "17885: }",
          "17888: func (s DescribeNamespaceInput) String() string {",
          "17889:  return awsutil.Prettify(s)",
          "17890: }",
          "17893: func (s DescribeNamespaceInput) GoString() string {",
          "17894:  return s.String()",
          "17895: }",
          "17898: func (s *DescribeNamespaceInput) Validate() error {",
          "17899:  invalidParams := request.ErrInvalidParams{Context: \"DescribeNamespaceInput\"}",
          "17900:  if s.AwsAccountId == nil {",
          "17901:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "17902:  }",
          "17903:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "17904:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "17905:  }",
          "17906:  if s.Namespace == nil {",
          "17907:   invalidParams.Add(request.NewErrParamRequired(\"Namespace\"))",
          "17908:  }",
          "17909:  if s.Namespace != nil && len(*s.Namespace) < 1 {",
          "17910:   invalidParams.Add(request.NewErrParamMinLen(\"Namespace\", 1))",
          "17911:  }",
          "17913:  if invalidParams.Len() > 0 {",
          "17914:   return invalidParams",
          "17915:  }",
          "17916:  return nil",
          "17917: }",
          "17920: func (s *DescribeNamespaceInput) SetAwsAccountId(v string) *DescribeNamespaceInput {",
          "17921:  s.AwsAccountId = &v",
          "17922:  return s",
          "17923: }",
          "17926: func (s *DescribeNamespaceInput) SetNamespace(v string) *DescribeNamespaceInput {",
          "17927:  s.Namespace = &v",
          "17928:  return s",
          "17929: }",
          "17931: type DescribeNamespaceOutput struct {",
          "17932:  _ struct{} `type:\"structure\"`",
          "17939:  Namespace *NamespaceInfoV2 `type:\"structure\"`",
          "17942:  RequestId *string `type:\"string\"`",
          "17945:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "17946: }",
          "17949: func (s DescribeNamespaceOutput) String() string {",
          "17950:  return awsutil.Prettify(s)",
          "17951: }",
          "17954: func (s DescribeNamespaceOutput) GoString() string {",
          "17955:  return s.String()",
          "17956: }",
          "17959: func (s *DescribeNamespaceOutput) SetNamespace(v *NamespaceInfoV2) *DescribeNamespaceOutput {",
          "17960:  s.Namespace = v",
          "17961:  return s",
          "17962: }",
          "17965: func (s *DescribeNamespaceOutput) SetRequestId(v string) *DescribeNamespaceOutput {",
          "17966:  s.RequestId = &v",
          "17967:  return s",
          "17968: }",
          "17971: func (s *DescribeNamespaceOutput) SetStatus(v int64) *DescribeNamespaceOutput {",
          "17972:  s.Status = &v",
          "17973:  return s",
          "17974: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "16972:  return s",
          "16973: }",
          "16976:  _ struct{} `type:\"structure\"`",
          "16981:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "16999:  SessionLifetimeInMinutes *int64 `location:\"querystring\" locationName:\"session-lifetime\" min:\"15\" type:\"long\"`",
          "",
          "[Removed Lines]",
          "16975: type GetDashboardEmbedUrlInput struct {",
          "16986:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "16991:  IdentityType *string `location:\"querystring\" locationName:\"creds-type\" type:\"string\" required:\"true\" enum:\"IdentityType\"`",
          "16995:  ResetDisabled *bool `location:\"querystring\" locationName:\"reset-disabled\" type:\"boolean\"`",
          "17003:  UndoRedoDisabled *bool `location:\"querystring\" locationName:\"undo-redo-disabled\" type:\"boolean\"`",
          "",
          "[Added Lines]",
          "19049: type GetDashboardEmbedUrlInput struct {",
          "19050:  _ struct{} `type:\"structure\"`",
          "19055:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "19060:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "19065:  IdentityType *string `location:\"querystring\" locationName:\"creds-type\" type:\"string\" required:\"true\" enum:\"IdentityType\"`",
          "19069:  ResetDisabled *bool `location:\"querystring\" locationName:\"reset-disabled\" type:\"boolean\"`",
          "19073:  SessionLifetimeInMinutes *int64 `location:\"querystring\" locationName:\"session-lifetime\" min:\"15\" type:\"long\"`",
          "19077:  UndoRedoDisabled *bool `location:\"querystring\" locationName:\"undo-redo-disabled\" type:\"boolean\"`",
          "19089:  UserArn *string `location:\"querystring\" locationName:\"user-arn\" type:\"string\"`",
          "19090: }",
          "19093: func (s GetDashboardEmbedUrlInput) String() string {",
          "19094:  return awsutil.Prettify(s)",
          "19095: }",
          "19098: func (s GetDashboardEmbedUrlInput) GoString() string {",
          "19099:  return s.String()",
          "19100: }",
          "19103: func (s *GetDashboardEmbedUrlInput) Validate() error {",
          "19104:  invalidParams := request.ErrInvalidParams{Context: \"GetDashboardEmbedUrlInput\"}",
          "19105:  if s.AwsAccountId == nil {",
          "19106:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "19107:  }",
          "19108:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "19109:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "19110:  }",
          "19111:  if s.DashboardId == nil {",
          "19112:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "19113:  }",
          "19114:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "19115:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "19116:  }",
          "19117:  if s.IdentityType == nil {",
          "19118:   invalidParams.Add(request.NewErrParamRequired(\"IdentityType\"))",
          "19119:  }",
          "19120:  if s.SessionLifetimeInMinutes != nil && *s.SessionLifetimeInMinutes < 15 {",
          "19121:   invalidParams.Add(request.NewErrParamMinValue(\"SessionLifetimeInMinutes\", 15))",
          "19122:  }",
          "19124:  if invalidParams.Len() > 0 {",
          "19125:   return invalidParams",
          "19126:  }",
          "19127:  return nil",
          "19128: }",
          "19131: func (s *GetDashboardEmbedUrlInput) SetAwsAccountId(v string) *GetDashboardEmbedUrlInput {",
          "19132:  s.AwsAccountId = &v",
          "19133:  return s",
          "19134: }",
          "19137: func (s *GetDashboardEmbedUrlInput) SetDashboardId(v string) *GetDashboardEmbedUrlInput {",
          "19138:  s.DashboardId = &v",
          "19139:  return s",
          "19140: }",
          "19143: func (s *GetDashboardEmbedUrlInput) SetIdentityType(v string) *GetDashboardEmbedUrlInput {",
          "19144:  s.IdentityType = &v",
          "19145:  return s",
          "19146: }",
          "19149: func (s *GetDashboardEmbedUrlInput) SetResetDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "19150:  s.ResetDisabled = &v",
          "19151:  return s",
          "19152: }",
          "19155: func (s *GetDashboardEmbedUrlInput) SetSessionLifetimeInMinutes(v int64) *GetDashboardEmbedUrlInput {",
          "19156:  s.SessionLifetimeInMinutes = &v",
          "19157:  return s",
          "19158: }",
          "19161: func (s *GetDashboardEmbedUrlInput) SetUndoRedoDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "19162:  s.UndoRedoDisabled = &v",
          "19163:  return s",
          "19164: }",
          "19167: func (s *GetDashboardEmbedUrlInput) SetUserArn(v string) *GetDashboardEmbedUrlInput {",
          "19168:  s.UserArn = &v",
          "19169:  return s",
          "19170: }",
          "19172: type GetDashboardEmbedUrlOutput struct {",
          "19173:  _ struct{} `type:\"structure\"`",
          "19179:  EmbedUrl *string `type:\"string\" sensitive:\"true\"`",
          "19182:  RequestId *string `type:\"string\"`",
          "19185:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "19186: }",
          "19189: func (s GetDashboardEmbedUrlOutput) String() string {",
          "19190:  return awsutil.Prettify(s)",
          "19191: }",
          "19194: func (s GetDashboardEmbedUrlOutput) GoString() string {",
          "19195:  return s.String()",
          "19196: }",
          "19199: func (s *GetDashboardEmbedUrlOutput) SetEmbedUrl(v string) *GetDashboardEmbedUrlOutput {",
          "19200:  s.EmbedUrl = &v",
          "19201:  return s",
          "19202: }",
          "19205: func (s *GetDashboardEmbedUrlOutput) SetRequestId(v string) *GetDashboardEmbedUrlOutput {",
          "19206:  s.RequestId = &v",
          "19207:  return s",
          "19208: }",
          "19211: func (s *GetDashboardEmbedUrlOutput) SetStatus(v int64) *GetDashboardEmbedUrlOutput {",
          "19212:  s.Status = &v",
          "19213:  return s",
          "19214: }",
          "19216: type GetSessionEmbedUrlInput struct {",
          "19226:  EntryPoint *string `location:\"querystring\" locationName:\"entry-point\" min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "17016: }",
          "17020:  return awsutil.Prettify(s)",
          "17021: }",
          "17025:  return s.String()",
          "17026: }",
          "17031:  if s.AwsAccountId == nil {",
          "17032:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "17033:  }",
          "17034:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "17035:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "17036:  }",
          "17045:  }",
          "17046:  if s.SessionLifetimeInMinutes != nil && *s.SessionLifetimeInMinutes < 15 {",
          "17047:   invalidParams.Add(request.NewErrParamMinValue(\"SessionLifetimeInMinutes\", 15))",
          "",
          "[Removed Lines]",
          "17019: func (s GetDashboardEmbedUrlInput) String() string {",
          "17024: func (s GetDashboardEmbedUrlInput) GoString() string {",
          "17029: func (s *GetDashboardEmbedUrlInput) Validate() error {",
          "17030:  invalidParams := request.ErrInvalidParams{Context: \"GetDashboardEmbedUrlInput\"}",
          "17037:  if s.DashboardId == nil {",
          "17038:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "17039:  }",
          "17040:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "17041:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "17042:  }",
          "17043:  if s.IdentityType == nil {",
          "17044:   invalidParams.Add(request.NewErrParamRequired(\"IdentityType\"))",
          "",
          "[Added Lines]",
          "19246: func (s GetSessionEmbedUrlInput) String() string {",
          "19251: func (s GetSessionEmbedUrlInput) GoString() string {",
          "19256: func (s *GetSessionEmbedUrlInput) Validate() error {",
          "19257:  invalidParams := request.ErrInvalidParams{Context: \"GetSessionEmbedUrlInput\"}",
          "19264:  if s.EntryPoint != nil && len(*s.EntryPoint) < 1 {",
          "19265:   invalidParams.Add(request.NewErrParamMinLen(\"EntryPoint\", 1))",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "17054: }",
          "17058:  s.AwsAccountId = &v",
          "17059:  return s",
          "17060: }",
          "17077:  return s",
          "17078: }",
          "17082:  s.SessionLifetimeInMinutes = &v",
          "17083:  return s",
          "17084: }",
          "17094:  s.UserArn = &v",
          "17095:  return s",
          "17096: }",
          "17099:  _ struct{} `type:\"structure\"`",
          "17105:  EmbedUrl *string `type:\"string\" sensitive:\"true\"`",
          "",
          "[Removed Lines]",
          "17057: func (s *GetDashboardEmbedUrlInput) SetAwsAccountId(v string) *GetDashboardEmbedUrlInput {",
          "17063: func (s *GetDashboardEmbedUrlInput) SetDashboardId(v string) *GetDashboardEmbedUrlInput {",
          "17064:  s.DashboardId = &v",
          "17065:  return s",
          "17066: }",
          "17069: func (s *GetDashboardEmbedUrlInput) SetIdentityType(v string) *GetDashboardEmbedUrlInput {",
          "17070:  s.IdentityType = &v",
          "17071:  return s",
          "17072: }",
          "17075: func (s *GetDashboardEmbedUrlInput) SetResetDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "17076:  s.ResetDisabled = &v",
          "17081: func (s *GetDashboardEmbedUrlInput) SetSessionLifetimeInMinutes(v int64) *GetDashboardEmbedUrlInput {",
          "17087: func (s *GetDashboardEmbedUrlInput) SetUndoRedoDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "17088:  s.UndoRedoDisabled = &v",
          "17089:  return s",
          "17090: }",
          "17093: func (s *GetDashboardEmbedUrlInput) SetUserArn(v string) *GetDashboardEmbedUrlInput {",
          "17098: type GetDashboardEmbedUrlOutput struct {",
          "",
          "[Added Lines]",
          "19278: func (s *GetSessionEmbedUrlInput) SetAwsAccountId(v string) *GetSessionEmbedUrlInput {",
          "19284: func (s *GetSessionEmbedUrlInput) SetEntryPoint(v string) *GetSessionEmbedUrlInput {",
          "19285:  s.EntryPoint = &v",
          "19290: func (s *GetSessionEmbedUrlInput) SetSessionLifetimeInMinutes(v int64) *GetSessionEmbedUrlInput {",
          "19296: func (s *GetSessionEmbedUrlInput) SetUserArn(v string) *GetSessionEmbedUrlInput {",
          "19301: type GetSessionEmbedUrlOutput struct {",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "17112: }",
          "17116:  return awsutil.Prettify(s)",
          "17117: }",
          "17121:  return s.String()",
          "17122: }",
          "17126:  s.EmbedUrl = &v",
          "17127:  return s",
          "17128: }",
          "17132:  s.RequestId = &v",
          "17133:  return s",
          "17134: }",
          "17138:  s.Status = &v",
          "17139:  return s",
          "17140: }",
          "",
          "[Removed Lines]",
          "17115: func (s GetDashboardEmbedUrlOutput) String() string {",
          "17120: func (s GetDashboardEmbedUrlOutput) GoString() string {",
          "17125: func (s *GetDashboardEmbedUrlOutput) SetEmbedUrl(v string) *GetDashboardEmbedUrlOutput {",
          "17131: func (s *GetDashboardEmbedUrlOutput) SetRequestId(v string) *GetDashboardEmbedUrlOutput {",
          "17137: func (s *GetDashboardEmbedUrlOutput) SetStatus(v int64) *GetDashboardEmbedUrlOutput {",
          "",
          "[Added Lines]",
          "19318: func (s GetSessionEmbedUrlOutput) String() string {",
          "19323: func (s GetSessionEmbedUrlOutput) GoString() string {",
          "19328: func (s *GetSessionEmbedUrlOutput) SetEmbedUrl(v string) *GetSessionEmbedUrlOutput {",
          "19334: func (s *GetSessionEmbedUrlOutput) SetRequestId(v string) *GetSessionEmbedUrlOutput {",
          "19340: func (s *GetSessionEmbedUrlOutput) SetStatus(v int64) *GetSessionEmbedUrlOutput {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "19170:  return s",
          "19171: }",
          "19173: type ListTagsForResourceInput struct {",
          "19174:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21376: type ListNamespacesInput struct {",
          "21377:  _ struct{} `type:\"structure\"`",
          "21383:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "21386:  MaxResults *int64 `location:\"querystring\" locationName:\"max-results\" min:\"1\" type:\"integer\"`",
          "21389:  NextToken *string `location:\"querystring\" locationName:\"next-token\" type:\"string\"`",
          "21390: }",
          "21393: func (s ListNamespacesInput) String() string {",
          "21394:  return awsutil.Prettify(s)",
          "21395: }",
          "21398: func (s ListNamespacesInput) GoString() string {",
          "21399:  return s.String()",
          "21400: }",
          "21403: func (s *ListNamespacesInput) Validate() error {",
          "21404:  invalidParams := request.ErrInvalidParams{Context: \"ListNamespacesInput\"}",
          "21405:  if s.AwsAccountId == nil {",
          "21406:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "21407:  }",
          "21408:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "21409:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "21410:  }",
          "21411:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "21412:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "21413:  }",
          "21415:  if invalidParams.Len() > 0 {",
          "21416:   return invalidParams",
          "21417:  }",
          "21418:  return nil",
          "21419: }",
          "21422: func (s *ListNamespacesInput) SetAwsAccountId(v string) *ListNamespacesInput {",
          "21423:  s.AwsAccountId = &v",
          "21424:  return s",
          "21425: }",
          "21428: func (s *ListNamespacesInput) SetMaxResults(v int64) *ListNamespacesInput {",
          "21429:  s.MaxResults = &v",
          "21430:  return s",
          "21431: }",
          "21434: func (s *ListNamespacesInput) SetNextToken(v string) *ListNamespacesInput {",
          "21435:  s.NextToken = &v",
          "21436:  return s",
          "21437: }",
          "21439: type ListNamespacesOutput struct {",
          "21440:  _ struct{} `type:\"structure\"`",
          "21445:  Namespaces []*NamespaceInfoV2 `type:\"list\"`",
          "21448:  NextToken *string `type:\"string\"`",
          "21451:  RequestId *string `type:\"string\"`",
          "21454:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "21455: }",
          "21458: func (s ListNamespacesOutput) String() string {",
          "21459:  return awsutil.Prettify(s)",
          "21460: }",
          "21463: func (s ListNamespacesOutput) GoString() string {",
          "21464:  return s.String()",
          "21465: }",
          "21468: func (s *ListNamespacesOutput) SetNamespaces(v []*NamespaceInfoV2) *ListNamespacesOutput {",
          "21469:  s.Namespaces = v",
          "21470:  return s",
          "21471: }",
          "21474: func (s *ListNamespacesOutput) SetNextToken(v string) *ListNamespacesOutput {",
          "21475:  s.NextToken = &v",
          "21476:  return s",
          "21477: }",
          "21480: func (s *ListNamespacesOutput) SetRequestId(v string) *ListNamespacesOutput {",
          "21481:  s.RequestId = &v",
          "21482:  return s",
          "21483: }",
          "21486: func (s *ListNamespacesOutput) SetStatus(v int64) *ListNamespacesOutput {",
          "21487:  s.Status = &v",
          "21488:  return s",
          "21489: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "20609:  return awsutil.Prettify(s)",
          "20610: }",
          "20615: }",
          "20643: }",
          "20648:  return s",
          "20649: }",
          "20654:  return s",
          "20655: }",
          "20660:  return s",
          "20661: }",
          "",
          "[Removed Lines]",
          "20613: func (s MySqlParameters) GoString() string {",
          "20614:  return s.String()",
          "20618: func (s *MySqlParameters) Validate() error {",
          "20619:  invalidParams := request.ErrInvalidParams{Context: \"MySqlParameters\"}",
          "20620:  if s.Database == nil {",
          "20621:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "20622:  }",
          "20623:  if s.Database != nil && len(*s.Database) < 1 {",
          "20624:   invalidParams.Add(request.NewErrParamMinLen(\"Database\", 1))",
          "20625:  }",
          "20626:  if s.Host == nil {",
          "20627:   invalidParams.Add(request.NewErrParamRequired(\"Host\"))",
          "20628:  }",
          "20629:  if s.Host != nil && len(*s.Host) < 1 {",
          "20630:   invalidParams.Add(request.NewErrParamMinLen(\"Host\", 1))",
          "20631:  }",
          "20632:  if s.Port == nil {",
          "20633:   invalidParams.Add(request.NewErrParamRequired(\"Port\"))",
          "20634:  }",
          "20635:  if s.Port != nil && *s.Port < 1 {",
          "20636:   invalidParams.Add(request.NewErrParamMinValue(\"Port\", 1))",
          "20637:  }",
          "20639:  if invalidParams.Len() > 0 {",
          "20640:   return invalidParams",
          "20641:  }",
          "20642:  return nil",
          "20646: func (s *MySqlParameters) SetDatabase(v string) *MySqlParameters {",
          "20647:  s.Database = &v",
          "20652: func (s *MySqlParameters) SetHost(v string) *MySqlParameters {",
          "20653:  s.Host = &v",
          "20658: func (s *MySqlParameters) SetPort(v int64) *MySqlParameters {",
          "20659:  s.Port = &v",
          "",
          "[Added Lines]",
          "22931: func (s MySqlParameters) GoString() string {",
          "22932:  return s.String()",
          "22933: }",
          "22936: func (s *MySqlParameters) Validate() error {",
          "22937:  invalidParams := request.ErrInvalidParams{Context: \"MySqlParameters\"}",
          "22938:  if s.Database == nil {",
          "22939:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "22940:  }",
          "22941:  if s.Database != nil && len(*s.Database) < 1 {",
          "22942:   invalidParams.Add(request.NewErrParamMinLen(\"Database\", 1))",
          "22943:  }",
          "22944:  if s.Host == nil {",
          "22945:   invalidParams.Add(request.NewErrParamRequired(\"Host\"))",
          "22946:  }",
          "22947:  if s.Host != nil && len(*s.Host) < 1 {",
          "22948:   invalidParams.Add(request.NewErrParamMinLen(\"Host\", 1))",
          "22949:  }",
          "22950:  if s.Port == nil {",
          "22951:   invalidParams.Add(request.NewErrParamRequired(\"Port\"))",
          "22952:  }",
          "22953:  if s.Port != nil && *s.Port < 1 {",
          "22954:   invalidParams.Add(request.NewErrParamMinValue(\"Port\", 1))",
          "22955:  }",
          "22957:  if invalidParams.Len() > 0 {",
          "22958:   return invalidParams",
          "22959:  }",
          "22960:  return nil",
          "22961: }",
          "22964: func (s *MySqlParameters) SetDatabase(v string) *MySqlParameters {",
          "22965:  s.Database = &v",
          "22966:  return s",
          "22967: }",
          "22970: func (s *MySqlParameters) SetHost(v string) *MySqlParameters {",
          "22971:  s.Host = &v",
          "22972:  return s",
          "22973: }",
          "22976: func (s *MySqlParameters) SetPort(v int64) *MySqlParameters {",
          "22977:  s.Port = &v",
          "22978:  return s",
          "22979: }",
          "22982: type NamespaceError struct {",
          "22983:  _ struct{} `type:\"structure\"`",
          "22986:  Message *string `type:\"string\"`",
          "22989:  Type *string `type:\"string\" enum:\"NamespaceErrorType\"`",
          "22990: }",
          "22993: func (s NamespaceError) String() string {",
          "22994:  return awsutil.Prettify(s)",
          "22995: }",
          "22998: func (s NamespaceError) GoString() string {",
          "22999:  return s.String()",
          "23000: }",
          "23003: func (s *NamespaceError) SetMessage(v string) *NamespaceError {",
          "23004:  s.Message = &v",
          "23005:  return s",
          "23006: }",
          "23009: func (s *NamespaceError) SetType(v string) *NamespaceError {",
          "23010:  s.Type = &v",
          "23011:  return s",
          "23012: }",
          "23015: type NamespaceInfoV2 struct {",
          "23016:  _ struct{} `type:\"structure\"`",
          "23019:  Arn *string `type:\"string\"`",
          "23022:  CapacityRegion *string `type:\"string\"`",
          "23025:  CreationStatus *string `type:\"string\" enum:\"NamespaceStatus\"`",
          "23028:  IdentityStore *string `type:\"string\" enum:\"IdentityStore\"`",
          "23031:  Name *string `type:\"string\"`",
          "23034:  NamespaceError *NamespaceError `type:\"structure\"`",
          "23035: }",
          "23038: func (s NamespaceInfoV2) String() string {",
          "23039:  return awsutil.Prettify(s)",
          "23040: }",
          "23043: func (s NamespaceInfoV2) GoString() string {",
          "23044:  return s.String()",
          "23045: }",
          "23048: func (s *NamespaceInfoV2) SetArn(v string) *NamespaceInfoV2 {",
          "23049:  s.Arn = &v",
          "23050:  return s",
          "23051: }",
          "23054: func (s *NamespaceInfoV2) SetCapacityRegion(v string) *NamespaceInfoV2 {",
          "23055:  s.CapacityRegion = &v",
          "23056:  return s",
          "23060: func (s *NamespaceInfoV2) SetCreationStatus(v string) *NamespaceInfoV2 {",
          "23061:  s.CreationStatus = &v",
          "23062:  return s",
          "23066: func (s *NamespaceInfoV2) SetIdentityStore(v string) *NamespaceInfoV2 {",
          "23067:  s.IdentityStore = &v",
          "23072: func (s *NamespaceInfoV2) SetName(v string) *NamespaceInfoV2 {",
          "23073:  s.Name = &v",
          "23078: func (s *NamespaceInfoV2) SetNamespaceError(v *NamespaceError) *NamespaceInfoV2 {",
          "23079:  s.NamespaceError = v",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "21298:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23742:  CustomPermissionsName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "21372:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "21373:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "21374:  }",
          "21375:  if s.Email == nil {",
          "21376:   invalidParams.Add(request.NewErrParamRequired(\"Email\"))",
          "21377:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23819:  if s.CustomPermissionsName != nil && len(*s.CustomPermissionsName) < 1 {",
          "23820:   invalidParams.Add(request.NewErrParamMinLen(\"CustomPermissionsName\", 1))",
          "23821:  }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "21406:  return s",
          "21407: }",
          "21410: func (s *RegisterUserInput) SetEmail(v string) *RegisterUserInput {",
          "21411:  s.Email = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23857: func (s *RegisterUserInput) SetCustomPermissionsName(v string) *RegisterUserInput {",
          "23858:  s.CustomPermissionsName = &v",
          "23859:  return s",
          "23860: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "21945:  Arn *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24401:  Namespace *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "21982:  return s",
          "21983: }",
          "21986: func (s *RowLevelPermissionDataSet) SetPermissionPolicy(v string) *RowLevelPermissionDataSet {",
          "21987:  s.PermissionPolicy = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24442: func (s *RowLevelPermissionDataSet) SetNamespace(v string) *RowLevelPermissionDataSet {",
          "24443:  s.Namespace = &v",
          "24444:  return s",
          "24445: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "24544:  return s",
          "24545: }",
          "24547: type UpdateDashboardInput struct {",
          "24548:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27009: type UpdateAccountCustomizationInput struct {",
          "27010:  _ struct{} `type:\"structure\"`",
          "27015:  AccountCustomization *AccountCustomization `type:\"structure\" required:\"true\"`",
          "27021:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "27024:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "27025: }",
          "27028: func (s UpdateAccountCustomizationInput) String() string {",
          "27029:  return awsutil.Prettify(s)",
          "27030: }",
          "27033: func (s UpdateAccountCustomizationInput) GoString() string {",
          "27034:  return s.String()",
          "27035: }",
          "27038: func (s *UpdateAccountCustomizationInput) Validate() error {",
          "27039:  invalidParams := request.ErrInvalidParams{Context: \"UpdateAccountCustomizationInput\"}",
          "27040:  if s.AccountCustomization == nil {",
          "27041:   invalidParams.Add(request.NewErrParamRequired(\"AccountCustomization\"))",
          "27042:  }",
          "27043:  if s.AwsAccountId == nil {",
          "27044:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "27045:  }",
          "27046:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "27047:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "27048:  }",
          "27050:  if invalidParams.Len() > 0 {",
          "27051:   return invalidParams",
          "27052:  }",
          "27053:  return nil",
          "27054: }",
          "27057: func (s *UpdateAccountCustomizationInput) SetAccountCustomization(v *AccountCustomization) *UpdateAccountCustomizationInput {",
          "27058:  s.AccountCustomization = v",
          "27059:  return s",
          "27060: }",
          "27063: func (s *UpdateAccountCustomizationInput) SetAwsAccountId(v string) *UpdateAccountCustomizationInput {",
          "27064:  s.AwsAccountId = &v",
          "27065:  return s",
          "27066: }",
          "27069: func (s *UpdateAccountCustomizationInput) SetNamespace(v string) *UpdateAccountCustomizationInput {",
          "27070:  s.Namespace = &v",
          "27071:  return s",
          "27072: }",
          "27074: type UpdateAccountCustomizationOutput struct {",
          "27075:  _ struct{} `type:\"structure\"`",
          "27078:  AccountCustomization *AccountCustomization `type:\"structure\"`",
          "27082:  AwsAccountId *string `min:\"12\" type:\"string\"`",
          "27085:  Namespace *string `type:\"string\"`",
          "27088:  RequestId *string `type:\"string\"`",
          "27091:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "27092: }",
          "27095: func (s UpdateAccountCustomizationOutput) String() string {",
          "27096:  return awsutil.Prettify(s)",
          "27097: }",
          "27100: func (s UpdateAccountCustomizationOutput) GoString() string {",
          "27101:  return s.String()",
          "27102: }",
          "27105: func (s *UpdateAccountCustomizationOutput) SetAccountCustomization(v *AccountCustomization) *UpdateAccountCustomizationOutput {",
          "27106:  s.AccountCustomization = v",
          "27107:  return s",
          "27108: }",
          "27111: func (s *UpdateAccountCustomizationOutput) SetAwsAccountId(v string) *UpdateAccountCustomizationOutput {",
          "27112:  s.AwsAccountId = &v",
          "27113:  return s",
          "27114: }",
          "27117: func (s *UpdateAccountCustomizationOutput) SetNamespace(v string) *UpdateAccountCustomizationOutput {",
          "27118:  s.Namespace = &v",
          "27119:  return s",
          "27120: }",
          "27123: func (s *UpdateAccountCustomizationOutput) SetRequestId(v string) *UpdateAccountCustomizationOutput {",
          "27124:  s.RequestId = &v",
          "27125:  return s",
          "27126: }",
          "27129: func (s *UpdateAccountCustomizationOutput) SetStatus(v int64) *UpdateAccountCustomizationOutput {",
          "27130:  s.Status = &v",
          "27131:  return s",
          "27132: }",
          "27134: type UpdateAccountSettingsInput struct {",
          "27135:  _ struct{} `type:\"structure\"`",
          "27141:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "27148:  DefaultNamespace *string `type:\"string\" required:\"true\"`",
          "27151:  NotificationEmail *string `type:\"string\"`",
          "27152: }",
          "27155: func (s UpdateAccountSettingsInput) String() string {",
          "27156:  return awsutil.Prettify(s)",
          "27157: }",
          "27160: func (s UpdateAccountSettingsInput) GoString() string {",
          "27161:  return s.String()",
          "27162: }",
          "27165: func (s *UpdateAccountSettingsInput) Validate() error {",
          "27166:  invalidParams := request.ErrInvalidParams{Context: \"UpdateAccountSettingsInput\"}",
          "27167:  if s.AwsAccountId == nil {",
          "27168:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "27169:  }",
          "27170:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "27171:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "27172:  }",
          "27173:  if s.DefaultNamespace == nil {",
          "27174:   invalidParams.Add(request.NewErrParamRequired(\"DefaultNamespace\"))",
          "27175:  }",
          "27177:  if invalidParams.Len() > 0 {",
          "27178:   return invalidParams",
          "27179:  }",
          "27180:  return nil",
          "27181: }",
          "27184: func (s *UpdateAccountSettingsInput) SetAwsAccountId(v string) *UpdateAccountSettingsInput {",
          "27185:  s.AwsAccountId = &v",
          "27186:  return s",
          "27187: }",
          "27190: func (s *UpdateAccountSettingsInput) SetDefaultNamespace(v string) *UpdateAccountSettingsInput {",
          "27191:  s.DefaultNamespace = &v",
          "27192:  return s",
          "27193: }",
          "27196: func (s *UpdateAccountSettingsInput) SetNotificationEmail(v string) *UpdateAccountSettingsInput {",
          "27197:  s.NotificationEmail = &v",
          "27198:  return s",
          "27199: }",
          "27201: type UpdateAccountSettingsOutput struct {",
          "27202:  _ struct{} `type:\"structure\"`",
          "27205:  RequestId *string `type:\"string\"`",
          "27208:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "27209: }",
          "27212: func (s UpdateAccountSettingsOutput) String() string {",
          "27213:  return awsutil.Prettify(s)",
          "27214: }",
          "27217: func (s UpdateAccountSettingsOutput) GoString() string {",
          "27218:  return s.String()",
          "27219: }",
          "27222: func (s *UpdateAccountSettingsOutput) SetRequestId(v string) *UpdateAccountSettingsOutput {",
          "27223:  s.RequestId = &v",
          "27224:  return s",
          "27225: }",
          "27228: func (s *UpdateAccountSettingsOutput) SetStatus(v int64) *UpdateAccountSettingsOutput {",
          "27229:  s.Status = &v",
          "27230:  return s",
          "27231: }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "27083:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29775:  CustomPermissionsName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "27106:  Role *string `type:\"string\" required:\"true\" enum:\"UserRole\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29804:  UnapplyCustomPermissions *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "27130:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "27131:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "27132:  }",
          "27133:  if s.Email == nil {",
          "27134:   invalidParams.Add(request.NewErrParamRequired(\"Email\"))",
          "27135:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29831:  if s.CustomPermissionsName != nil && len(*s.CustomPermissionsName) < 1 {",
          "29832:   invalidParams.Add(request.NewErrParamMinLen(\"CustomPermissionsName\", 1))",
          "29833:  }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "27161:  return s",
          "27162: }",
          "27165: func (s *UpdateUserInput) SetEmail(v string) *UpdateUserInput {",
          "27166:  s.Email = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29866: func (s *UpdateUserInput) SetCustomPermissionsName(v string) *UpdateUserInput {",
          "29867:  s.CustomPermissionsName = &v",
          "29868:  return s",
          "29869: }",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "27179:  return s",
          "27180: }",
          "27183: func (s *UpdateUserInput) SetUserName(v string) *UpdateUserInput {",
          "27184:  s.UserName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29890: func (s *UpdateUserInput) SetUnapplyCustomPermissions(v bool) *UpdateUserInput {",
          "29891:  s.UnapplyCustomPermissions = &v",
          "29892:  return s",
          "29893: }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "27316:  Arn *string `type:\"string\"`",
          "27319:  Email *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30032:  CustomPermissionsName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "27366:  return s",
          "27367: }",
          "27370: func (s *User) SetEmail(v string) *User {",
          "27371:  s.Email = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30086: func (s *User) SetCustomPermissionsName(v string) *User {",
          "30087:  s.CustomPermissionsName = &v",
          "30088:  return s",
          "30089: }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "27673:  DataSourceTypeTwitter = \"TWITTER\"",
          "27674: )",
          "27676: const (",
          "27678:  ExceptionResourceTypeUser = \"USER\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30398: const (",
          "30400:  EditionStandard = \"STANDARD\"",
          "30403:  EditionEnterprise = \"ENTERPRISE\"",
          "30404: )",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "27755:  GeoSpatialDataRoleLatitude = \"LATITUDE\"",
          "27756: )",
          "27758: const (",
          "27760:  IdentityTypeIam = \"IAM\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30488: const (",
          "30490:  IdentityStoreQuicksight = \"QUICKSIGHT\"",
          "30491: )",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "27964:  JoinTypeRight = \"RIGHT\"",
          "27965: )",
          "27967: const (",
          "27969:  ResourceStatusCreationInProgress = \"CREATION_IN_PROGRESS\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30702: const (",
          "30704:  NamespaceErrorTypePermissionDenied = \"PERMISSION_DENIED\"",
          "30707:  NamespaceErrorTypeInternalServiceError = \"INTERNAL_SERVICE_ERROR\"",
          "30708: )",
          "30710: const (",
          "30712:  NamespaceStatusCreated = \"CREATED\"",
          "30715:  NamespaceStatusCreating = \"CREATING\"",
          "30718:  NamespaceStatusDeleting = \"DELETING\"",
          "30721:  NamespaceStatusRetryableFailure = \"RETRYABLE_FAILURE\"",
          "30724:  NamespaceStatusNonRetryableFailure = \"NON_RETRYABLE_FAILURE\"",
          "30725: )",
          "",
          "---------------"
        ],
        "service/quicksight/quicksightiface/interface.go||service/quicksight/quicksightiface/interface.go": [
          "File: service/quicksight/quicksightiface/interface.go -> service/quicksight/quicksightiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  CancelIngestionWithContext(aws.Context, *quicksight.CancelIngestionInput, ...request.Option) (*quicksight.CancelIngestionOutput, error)",
          "65:  CancelIngestionRequest(*quicksight.CancelIngestionInput) (*request.Request, *quicksight.CancelIngestionOutput)",
          "67:  CreateDashboard(*quicksight.CreateDashboardInput) (*quicksight.CreateDashboardOutput, error)",
          "68:  CreateDashboardWithContext(aws.Context, *quicksight.CreateDashboardInput, ...request.Option) (*quicksight.CreateDashboardOutput, error)",
          "69:  CreateDashboardRequest(*quicksight.CreateDashboardInput) (*request.Request, *quicksight.CreateDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  CreateAccountCustomization(*quicksight.CreateAccountCustomizationInput) (*quicksight.CreateAccountCustomizationOutput, error)",
          "68:  CreateAccountCustomizationWithContext(aws.Context, *quicksight.CreateAccountCustomizationInput, ...request.Option) (*quicksight.CreateAccountCustomizationOutput, error)",
          "69:  CreateAccountCustomizationRequest(*quicksight.CreateAccountCustomizationInput) (*request.Request, *quicksight.CreateAccountCustomizationOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:  CreateIngestionWithContext(aws.Context, *quicksight.CreateIngestionInput, ...request.Option) (*quicksight.CreateIngestionOutput, error)",
          "93:  CreateIngestionRequest(*quicksight.CreateIngestionInput) (*request.Request, *quicksight.CreateIngestionOutput)",
          "95:  CreateTemplate(*quicksight.CreateTemplateInput) (*quicksight.CreateTemplateOutput, error)",
          "96:  CreateTemplateWithContext(aws.Context, *quicksight.CreateTemplateInput, ...request.Option) (*quicksight.CreateTemplateOutput, error)",
          "97:  CreateTemplateRequest(*quicksight.CreateTemplateInput) (*request.Request, *quicksight.CreateTemplateOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  CreateNamespace(*quicksight.CreateNamespaceInput) (*quicksight.CreateNamespaceOutput, error)",
          "100:  CreateNamespaceWithContext(aws.Context, *quicksight.CreateNamespaceInput, ...request.Option) (*quicksight.CreateNamespaceOutput, error)",
          "101:  CreateNamespaceRequest(*quicksight.CreateNamespaceInput) (*request.Request, *quicksight.CreateNamespaceOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:  CreateThemeAliasWithContext(aws.Context, *quicksight.CreateThemeAliasInput, ...request.Option) (*quicksight.CreateThemeAliasOutput, error)",
          "109:  CreateThemeAliasRequest(*quicksight.CreateThemeAliasInput) (*request.Request, *quicksight.CreateThemeAliasOutput)",
          "111:  DeleteDashboard(*quicksight.DeleteDashboardInput) (*quicksight.DeleteDashboardOutput, error)",
          "112:  DeleteDashboardWithContext(aws.Context, *quicksight.DeleteDashboardInput, ...request.Option) (*quicksight.DeleteDashboardOutput, error)",
          "113:  DeleteDashboardRequest(*quicksight.DeleteDashboardInput) (*request.Request, *quicksight.DeleteDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119:  DeleteAccountCustomization(*quicksight.DeleteAccountCustomizationInput) (*quicksight.DeleteAccountCustomizationOutput, error)",
          "120:  DeleteAccountCustomizationWithContext(aws.Context, *quicksight.DeleteAccountCustomizationInput, ...request.Option) (*quicksight.DeleteAccountCustomizationOutput, error)",
          "121:  DeleteAccountCustomizationRequest(*quicksight.DeleteAccountCustomizationInput) (*request.Request, *quicksight.DeleteAccountCustomizationOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "132:  DeleteIAMPolicyAssignmentWithContext(aws.Context, *quicksight.DeleteIAMPolicyAssignmentInput, ...request.Option) (*quicksight.DeleteIAMPolicyAssignmentOutput, error)",
          "133:  DeleteIAMPolicyAssignmentRequest(*quicksight.DeleteIAMPolicyAssignmentInput) (*request.Request, *quicksight.DeleteIAMPolicyAssignmentOutput)",
          "135:  DeleteTemplate(*quicksight.DeleteTemplateInput) (*quicksight.DeleteTemplateOutput, error)",
          "136:  DeleteTemplateWithContext(aws.Context, *quicksight.DeleteTemplateInput, ...request.Option) (*quicksight.DeleteTemplateOutput, error)",
          "137:  DeleteTemplateRequest(*quicksight.DeleteTemplateInput) (*request.Request, *quicksight.DeleteTemplateOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:  DeleteNamespace(*quicksight.DeleteNamespaceInput) (*quicksight.DeleteNamespaceOutput, error)",
          "148:  DeleteNamespaceWithContext(aws.Context, *quicksight.DeleteNamespaceInput, ...request.Option) (*quicksight.DeleteNamespaceOutput, error)",
          "149:  DeleteNamespaceRequest(*quicksight.DeleteNamespaceInput) (*request.Request, *quicksight.DeleteNamespaceOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "156:  DeleteUserByPrincipalIdWithContext(aws.Context, *quicksight.DeleteUserByPrincipalIdInput, ...request.Option) (*quicksight.DeleteUserByPrincipalIdOutput, error)",
          "157:  DeleteUserByPrincipalIdRequest(*quicksight.DeleteUserByPrincipalIdInput) (*request.Request, *quicksight.DeleteUserByPrincipalIdOutput)",
          "159:  DescribeDashboard(*quicksight.DescribeDashboardInput) (*quicksight.DescribeDashboardOutput, error)",
          "160:  DescribeDashboardWithContext(aws.Context, *quicksight.DescribeDashboardInput, ...request.Option) (*quicksight.DescribeDashboardOutput, error)",
          "161:  DescribeDashboardRequest(*quicksight.DescribeDashboardInput) (*request.Request, *quicksight.DescribeDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:  DescribeAccountCustomization(*quicksight.DescribeAccountCustomizationInput) (*quicksight.DescribeAccountCustomizationOutput, error)",
          "176:  DescribeAccountCustomizationWithContext(aws.Context, *quicksight.DescribeAccountCustomizationInput, ...request.Option) (*quicksight.DescribeAccountCustomizationOutput, error)",
          "177:  DescribeAccountCustomizationRequest(*quicksight.DescribeAccountCustomizationInput) (*request.Request, *quicksight.DescribeAccountCustomizationOutput)",
          "179:  DescribeAccountSettings(*quicksight.DescribeAccountSettingsInput) (*quicksight.DescribeAccountSettingsOutput, error)",
          "180:  DescribeAccountSettingsWithContext(aws.Context, *quicksight.DescribeAccountSettingsInput, ...request.Option) (*quicksight.DescribeAccountSettingsOutput, error)",
          "181:  DescribeAccountSettingsRequest(*quicksight.DescribeAccountSettingsInput) (*request.Request, *quicksight.DescribeAccountSettingsOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "192:  DescribeIngestionWithContext(aws.Context, *quicksight.DescribeIngestionInput, ...request.Option) (*quicksight.DescribeIngestionOutput, error)",
          "193:  DescribeIngestionRequest(*quicksight.DescribeIngestionInput) (*request.Request, *quicksight.DescribeIngestionOutput)",
          "195:  DescribeTemplate(*quicksight.DescribeTemplateInput) (*quicksight.DescribeTemplateOutput, error)",
          "196:  DescribeTemplateWithContext(aws.Context, *quicksight.DescribeTemplateInput, ...request.Option) (*quicksight.DescribeTemplateOutput, error)",
          "197:  DescribeTemplateRequest(*quicksight.DescribeTemplateInput) (*request.Request, *quicksight.DescribeTemplateOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "219:  DescribeNamespace(*quicksight.DescribeNamespaceInput) (*quicksight.DescribeNamespaceOutput, error)",
          "220:  DescribeNamespaceWithContext(aws.Context, *quicksight.DescribeNamespaceInput, ...request.Option) (*quicksight.DescribeNamespaceOutput, error)",
          "221:  DescribeNamespaceRequest(*quicksight.DescribeNamespaceInput) (*request.Request, *quicksight.DescribeNamespaceOutput)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "224:  GetDashboardEmbedUrlWithContext(aws.Context, *quicksight.GetDashboardEmbedUrlInput, ...request.Option) (*quicksight.GetDashboardEmbedUrlOutput, error)",
          "225:  GetDashboardEmbedUrlRequest(*quicksight.GetDashboardEmbedUrlInput) (*request.Request, *quicksight.GetDashboardEmbedUrlOutput)",
          "227:  ListDashboardVersions(*quicksight.ListDashboardVersionsInput) (*quicksight.ListDashboardVersionsOutput, error)",
          "228:  ListDashboardVersionsWithContext(aws.Context, *quicksight.ListDashboardVersionsInput, ...request.Option) (*quicksight.ListDashboardVersionsOutput, error)",
          "229:  ListDashboardVersionsRequest(*quicksight.ListDashboardVersionsInput) (*request.Request, *quicksight.ListDashboardVersionsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "255:  GetSessionEmbedUrl(*quicksight.GetSessionEmbedUrlInput) (*quicksight.GetSessionEmbedUrlOutput, error)",
          "256:  GetSessionEmbedUrlWithContext(aws.Context, *quicksight.GetSessionEmbedUrlInput, ...request.Option) (*quicksight.GetSessionEmbedUrlOutput, error)",
          "257:  GetSessionEmbedUrlRequest(*quicksight.GetSessionEmbedUrlInput) (*request.Request, *quicksight.GetSessionEmbedUrlOutput)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "275:  ListIngestionsPages(*quicksight.ListIngestionsInput, func(*quicksight.ListIngestionsOutput, bool) bool) error",
          "276:  ListIngestionsPagesWithContext(aws.Context, *quicksight.ListIngestionsInput, func(*quicksight.ListIngestionsOutput, bool) bool, ...request.Option) error",
          "278:  ListTagsForResource(*quicksight.ListTagsForResourceInput) (*quicksight.ListTagsForResourceOutput, error)",
          "279:  ListTagsForResourceWithContext(aws.Context, *quicksight.ListTagsForResourceInput, ...request.Option) (*quicksight.ListTagsForResourceOutput, error)",
          "280:  ListTagsForResourceRequest(*quicksight.ListTagsForResourceInput) (*request.Request, *quicksight.ListTagsForResourceOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310:  ListNamespaces(*quicksight.ListNamespacesInput) (*quicksight.ListNamespacesOutput, error)",
          "311:  ListNamespacesWithContext(aws.Context, *quicksight.ListNamespacesInput, ...request.Option) (*quicksight.ListNamespacesOutput, error)",
          "312:  ListNamespacesRequest(*quicksight.ListNamespacesInput) (*request.Request, *quicksight.ListNamespacesOutput)",
          "314:  ListNamespacesPages(*quicksight.ListNamespacesInput, func(*quicksight.ListNamespacesOutput, bool) bool) error",
          "315:  ListNamespacesPagesWithContext(aws.Context, *quicksight.ListNamespacesInput, func(*quicksight.ListNamespacesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "339:  UntagResourceWithContext(aws.Context, *quicksight.UntagResourceInput, ...request.Option) (*quicksight.UntagResourceOutput, error)",
          "340:  UntagResourceRequest(*quicksight.UntagResourceInput) (*request.Request, *quicksight.UntagResourceOutput)",
          "342:  UpdateDashboard(*quicksight.UpdateDashboardInput) (*quicksight.UpdateDashboardOutput, error)",
          "343:  UpdateDashboardWithContext(aws.Context, *quicksight.UpdateDashboardInput, ...request.Option) (*quicksight.UpdateDashboardOutput, error)",
          "344:  UpdateDashboardRequest(*quicksight.UpdateDashboardInput) (*request.Request, *quicksight.UpdateDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "381:  UpdateAccountCustomization(*quicksight.UpdateAccountCustomizationInput) (*quicksight.UpdateAccountCustomizationOutput, error)",
          "382:  UpdateAccountCustomizationWithContext(aws.Context, *quicksight.UpdateAccountCustomizationInput, ...request.Option) (*quicksight.UpdateAccountCustomizationOutput, error)",
          "383:  UpdateAccountCustomizationRequest(*quicksight.UpdateAccountCustomizationInput) (*request.Request, *quicksight.UpdateAccountCustomizationOutput)",
          "385:  UpdateAccountSettings(*quicksight.UpdateAccountSettingsInput) (*quicksight.UpdateAccountSettingsOutput, error)",
          "386:  UpdateAccountSettingsWithContext(aws.Context, *quicksight.UpdateAccountSettingsInput, ...request.Option) (*quicksight.UpdateAccountSettingsOutput, error)",
          "387:  UpdateAccountSettingsRequest(*quicksight.UpdateAccountSettingsInput) (*request.Request, *quicksight.UpdateAccountSettingsOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b262be368d97ae444fba0c272f6562f89db9a588",
      "candidate_info": {
        "commit_hash": "b262be368d97ae444fba0c272f6562f89db9a588",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/b262be368d97ae444fba0c272f6562f89db9a588",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/batch/2016-08-10/api-2.json",
          "models/apis/batch/2016-08-10/docs-2.json",
          "models/apis/batch/2016-08-10/examples-1.json",
          "models/apis/elasticloadbalancingv2/2015-12-01/api-2.json",
          "models/apis/elasticloadbalancingv2/2015-12-01/docs-2.json",
          "models/apis/personalize-events/2018-03-22/api-2.json",
          "models/apis/personalize-events/2018-03-22/docs-2.json",
          "models/apis/rds/2014-10-31/api-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/s3/2006-03-01/api-2.json",
          "models/apis/s3/2006-03-01/docs-2.json",
          "models/apis/servicediscovery/2017-03-14/api-2.json",
          "models/apis/servicediscovery/2017-03-14/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/batch/api.go",
          "service/batch/batchiface/interface.go",
          "service/batch/examples_test.go",
          "service/elbv2/api.go",
          "service/elbv2/examples_test.go",
          "service/personalizeevents/api.go",
          "service/personalizeevents/errors.go",
          "service/personalizeevents/personalizeeventsiface/interface.go",
          "service/rds/api.go",
          "service/s3/api.go",
          "service/s3/errors.go",
          "service/s3/s3iface/interface.go",
          "service/s3/s3manager/upload_input.go",
          "service/servicediscovery/api.go"
        ],
        "message": "Release v1.35.2 (2020-10-02) ===\n\n### Service Client Updates\n* `service/batch`: Updates service API, documentation, and examples\n  * Support tagging for Batch resources (compute environment, job queue, job definition and job) and tag based access control on Batch APIs\n* `service/elasticloadbalancingv2`: Updates service API and documentation\n* `service/personalize-events`: Updates service API and documentation\n* `service/rds`: Updates service API and documentation\n  * Adds the NCHAR Character Set ID parameter to the CreateDbInstance API for RDS Oracle.\n* `service/s3`: Updates service API and documentation\n  * Amazon S3 Object Ownership is a new S3 feature that enables bucket owners to automatically assume ownership of objects that are uploaded to their buckets by other AWS Accounts.\n* `service/servicediscovery`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/batch/api.go||service/batch/api.go",
          "service/batch/batchiface/interface.go||service/batch/batchiface/interface.go",
          "service/batch/examples_test.go||service/batch/examples_test.go",
          "service/elbv2/api.go||service/elbv2/api.go",
          "service/elbv2/examples_test.go||service/elbv2/examples_test.go",
          "service/personalizeevents/api.go||service/personalizeevents/api.go",
          "service/personalizeevents/errors.go||service/personalizeevents/errors.go",
          "service/personalizeevents/personalizeeventsiface/interface.go||service/personalizeevents/personalizeeventsiface/interface.go",
          "service/rds/api.go||service/rds/api.go",
          "service/s3/api.go||service/s3/api.go",
          "service/s3/errors.go||service/s3/errors.go",
          "service/s3/s3iface/interface.go||service/s3/s3iface/interface.go",
          "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
          "service/servicediscovery/api.go||service/servicediscovery/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4041:     \"ca-central-1\":   endpoint{},",
          "4042:     \"eu-central-1\":   endpoint{},",
          "4043:     \"eu-north-1\":     endpoint{},",
          "4044:     \"eu-west-1\":      endpoint{},",
          "4045:     \"eu-west-2\":      endpoint{},",
          "4046:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4044:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5556:     \"ca-central-1\":   endpoint{},",
          "5557:     \"eu-central-1\":   endpoint{},",
          "5558:     \"eu-north-1\":     endpoint{},",
          "5559:     \"eu-west-1\":      endpoint{},",
          "5560:     \"eu-west-2\":      endpoint{},",
          "5561:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5560:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.35.1\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.35.2\"",
          "",
          "---------------"
        ],
        "service/batch/api.go||service/batch/api.go": [
          "File: service/batch/api.go -> service/batch/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1249:  return p.Err()",
          "1250: }",
          "1252: const opRegisterJobDefinition = \"RegisterJobDefinition\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1252: const opListTagsForResource = \"ListTagsForResource\"",
          "1278: func (c *Batch) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "1279:  op := &request.Operation{",
          "1280:   Name:       opListTagsForResource,",
          "1281:   HTTPMethod: \"GET\",",
          "1282:   HTTPPath:   \"/v1/tags/{resourceArn}\",",
          "1283:  }",
          "1285:  if input == nil {",
          "1286:   input = &ListTagsForResourceInput{}",
          "1287:  }",
          "1289:  output = &ListTagsForResourceOutput{}",
          "1290:  req = c.newRequest(op, input, output)",
          "1291:  return",
          "1292: }",
          "1317: func (c *Batch) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1318:  req, out := c.ListTagsForResourceRequest(input)",
          "1319:  return out, req.Send()",
          "1320: }",
          "1331: func (c *Batch) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1332:  req, out := c.ListTagsForResourceRequest(input)",
          "1333:  req.SetContext(ctx)",
          "1334:  req.ApplyOptions(opts...)",
          "1335:  return out, req.Send()",
          "1336: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1418:  return out, req.Send()",
          "1419: }",
          "1421: const opTerminateJob = \"TerminateJob\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1507: const opTagResource = \"TagResource\"",
          "1533: func (c *Batch) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "1534:  op := &request.Operation{",
          "1535:   Name:       opTagResource,",
          "1536:   HTTPMethod: \"POST\",",
          "1537:   HTTPPath:   \"/v1/tags/{resourceArn}\",",
          "1538:  }",
          "1540:  if input == nil {",
          "1541:   input = &TagResourceInput{}",
          "1542:  }",
          "1544:  output = &TagResourceOutput{}",
          "1545:  req = c.newRequest(op, input, output)",
          "1546:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1547:  return",
          "1548: }",
          "1576: func (c *Batch) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "1577:  req, out := c.TagResourceRequest(input)",
          "1578:  return out, req.Send()",
          "1579: }",
          "1590: func (c *Batch) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "1591:  req, out := c.TagResourceRequest(input)",
          "1592:  req.SetContext(ctx)",
          "1593:  req.ApplyOptions(opts...)",
          "1594:  return out, req.Send()",
          "1595: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1505:  return out, req.Send()",
          "1506: }",
          "1508: const opUpdateComputeEnvironment = \"UpdateComputeEnvironment\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1684: const opUntagResource = \"UntagResource\"",
          "1710: func (c *Batch) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "1711:  op := &request.Operation{",
          "1712:   Name:       opUntagResource,",
          "1713:   HTTPMethod: \"DELETE\",",
          "1714:   HTTPPath:   \"/v1/tags/{resourceArn}\",",
          "1715:  }",
          "1717:  if input == nil {",
          "1718:   input = &UntagResourceInput{}",
          "1719:  }",
          "1721:  output = &UntagResourceOutput{}",
          "1722:  req = c.newRequest(op, input, output)",
          "1723:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1724:  return",
          "1725: }",
          "1748: func (c *Batch) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "1749:  req, out := c.UntagResourceRequest(input)",
          "1750:  return out, req.Send()",
          "1751: }",
          "1762: func (c *Batch) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "1763:  req, out := c.UntagResourceRequest(input)",
          "1764:  req.SetContext(ctx)",
          "1765:  req.ApplyOptions(opts...)",
          "1766:  return out, req.Send()",
          "1767: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2080:  StatusReason *string `locationName:\"statusReason\" type:\"string\"`",
          "2083:  Type *string `locationName:\"type\" type:\"string\" enum:\"CEType\"`",
          "2084: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2344:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2141:  return s",
          "2142: }",
          "2145: func (s *ComputeEnvironmentDetail) SetType(v string) *ComputeEnvironmentDetail {",
          "2146:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2409: func (s *ComputeEnvironmentDetail) SetTags(v map[string]*string) *ComputeEnvironmentDetail {",
          "2410:  s.Tags = v",
          "2411:  return s",
          "2412: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3279:  State *string `locationName:\"state\" type:\"string\" enum:\"CEState\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3563:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3305:  if s.ServiceRole == nil {",
          "3306:   invalidParams.Add(request.NewErrParamRequired(\"ServiceRole\"))",
          "3307:  }",
          "3308:  if s.Type == nil {",
          "3309:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "3310:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3592:  if s.Tags != nil && len(s.Tags) < 1 {",
          "3593:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "3594:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3344:  return s",
          "3345: }",
          "3348: func (s *CreateComputeEnvironmentInput) SetType(v string) *CreateComputeEnvironmentInput {",
          "3349:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3635: func (s *CreateComputeEnvironmentInput) SetTags(v map[string]*string) *CreateComputeEnvironmentInput {",
          "3636:  s.Tags = v",
          "3637:  return s",
          "3638: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3414:  State *string `locationName:\"state\" type:\"string\" enum:\"JQState\"`",
          "3415: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3713:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3436:  if s.Priority == nil {",
          "3437:   invalidParams.Add(request.NewErrParamRequired(\"Priority\"))",
          "3438:  }",
          "3439:  if s.ComputeEnvironmentOrder != nil {",
          "3440:   for i, v := range s.ComputeEnvironmentOrder {",
          "3441:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3738:  if s.Tags != nil && len(s.Tags) < 1 {",
          "3739:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "3740:  }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3477:  return s",
          "3478: }",
          "3480: type CreateJobQueueOutput struct {",
          "3481:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3783: func (s *CreateJobQueueInput) SetTags(v map[string]*string) *CreateJobQueueInput {",
          "3784:  s.Tags = v",
          "3785:  return s",
          "3786: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4153:  Status *string `locationName:\"status\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4464:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4221:  return s",
          "4222: }",
          "4225: func (s *JobDefinition) SetTimeout(v *JobTimeout) *JobDefinition {",
          "4226:  s.Timeout = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4536: func (s *JobDefinition) SetTags(v map[string]*string) *JobDefinition {",
          "4537:  s.Tags = v",
          "4538:  return s",
          "4539: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4290:  DependsOn []*JobDependency `locationName:\"dependsOn\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4610:  JobArn *string `locationName:\"jobArn\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4350:  StoppedAt *int64 `locationName:\"stoppedAt\" type:\"long\"`",
          "4353:  Timeout *JobTimeout `locationName:\"timeout\" type:\"structure\"`",
          "4354: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4673:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4393:  return s",
          "4394: }",
          "4397: func (s *JobDetail) SetJobDefinition(v string) *JobDetail {",
          "4398:  s.JobDefinition = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4720: func (s *JobDetail) SetJobArn(v string) *JobDetail {",
          "4721:  s.JobArn = &v",
          "4722:  return s",
          "4723: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4465:  return s",
          "4466: }",
          "4469: func (s *JobDetail) SetTimeout(v *JobTimeout) *JobDetail {",
          "4470:  s.Timeout = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4798: func (s *JobDetail) SetTags(v map[string]*string) *JobDetail {",
          "4799:  s.Tags = v",
          "4800:  return s",
          "4801: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4513:  StatusReason *string `locationName:\"statusReason\" type:\"string\"`",
          "4514: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4851:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4565:  return s",
          "4566: }",
          "4569: type JobSummary struct {",
          "4570:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4907: func (s *JobQueueDetail) SetTags(v map[string]*string) *JobQueueDetail {",
          "4908:  s.Tags = v",
          "4909:  return s",
          "4910: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4583:  CreatedAt *int64 `locationName:\"createdAt\" type:\"long\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4930:  JobArn *string `locationName:\"jobArn\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4639:  return s",
          "4640: }",
          "4643: func (s *JobSummary) SetJobId(v string) *JobSummary {",
          "4644:  s.JobId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4990: func (s *JobSummary) SetJobArn(v string) *JobSummary {",
          "4991:  s.JobArn = &v",
          "4992:  return s",
          "4993: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "5037:  return s",
          "5038: }",
          "5041: type LogConfiguration struct {",
          "5042:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5393: type ListTagsForResourceInput struct {",
          "5394:  _ struct{} `type:\"structure\"`",
          "5402:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "5403: }",
          "5406: func (s ListTagsForResourceInput) String() string {",
          "5407:  return awsutil.Prettify(s)",
          "5408: }",
          "5411: func (s ListTagsForResourceInput) GoString() string {",
          "5412:  return s.String()",
          "5413: }",
          "5416: func (s *ListTagsForResourceInput) Validate() error {",
          "5417:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "5418:  if s.ResourceArn == nil {",
          "5419:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5420:  }",
          "5421:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5422:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "5423:  }",
          "5425:  if invalidParams.Len() > 0 {",
          "5426:   return invalidParams",
          "5427:  }",
          "5428:  return nil",
          "5429: }",
          "5432: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "5433:  s.ResourceArn = &v",
          "5434:  return s",
          "5435: }",
          "5437: type ListTagsForResourceOutput struct {",
          "5438:  _ struct{} `type:\"structure\"`",
          "5441:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "5442: }",
          "5445: func (s ListTagsForResourceOutput) String() string {",
          "5446:  return awsutil.Prettify(s)",
          "5447: }",
          "5450: func (s ListTagsForResourceOutput) GoString() string {",
          "5451:  return s.String()",
          "5452: }",
          "5455: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "5456:  s.Tags = v",
          "5457:  return s",
          "5458: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5596:  RetryStrategy *RetryStrategy `locationName:\"retryStrategy\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6061:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5626:  if s.JobDefinitionName == nil {",
          "5627:   invalidParams.Add(request.NewErrParamRequired(\"JobDefinitionName\"))",
          "5628:  }",
          "5629:  if s.Type == nil {",
          "5630:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "5631:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6094:  if s.Tags != nil && len(s.Tags) < 1 {",
          "6095:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "6096:  }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "5676:  return s",
          "5677: }",
          "5680: func (s *RegisterJobDefinitionInput) SetTimeout(v *JobTimeout) *RegisterJobDefinitionInput {",
          "5681:  s.Timeout = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6148: func (s *RegisterJobDefinitionInput) SetTags(v map[string]*string) *RegisterJobDefinitionInput {",
          "6149:  s.Tags = v",
          "6150:  return s",
          "6151: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "6008:  RetryStrategy *RetryStrategy `locationName:\"retryStrategy\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6488:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "6040:  if s.JobQueue == nil {",
          "6041:   invalidParams.Add(request.NewErrParamRequired(\"JobQueue\"))",
          "6042:  }",
          "6043:  if s.ContainerOverrides != nil {",
          "6044:   if err := s.ContainerOverrides.Validate(); err != nil {",
          "6045:    invalidParams.AddNested(\"ContainerOverrides\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6523:  if s.Tags != nil && len(s.Tags) < 1 {",
          "6524:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "6525:  }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "6111:  return s",
          "6112: }",
          "6115: func (s *SubmitJobInput) SetTimeout(v *JobTimeout) *SubmitJobInput {",
          "6116:  s.Timeout = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6598: func (s *SubmitJobInput) SetTags(v map[string]*string) *SubmitJobInput {",
          "6599:  s.Tags = v",
          "6600:  return s",
          "6601: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "6120: type SubmitJobOutput struct {",
          "6121:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6613:  JobArn *string `locationName:\"jobArn\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "6141:  return s.String()",
          "6142: }",
          "6145: func (s *SubmitJobOutput) SetJobId(v string) *SubmitJobOutput {",
          "6146:  s.JobId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6637: func (s *SubmitJobOutput) SetJobArn(v string) *SubmitJobOutput {",
          "6638:  s.JobArn = &v",
          "6639:  return s",
          "6640: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "6153:  return s",
          "6154: }",
          "6156: type TerminateJobInput struct {",
          "6157:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6654: type TagResourceInput struct {",
          "6655:  _ struct{} `type:\"structure\"`",
          "6663:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "6671:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\" required:\"true\"`",
          "6672: }",
          "6675: func (s TagResourceInput) String() string {",
          "6676:  return awsutil.Prettify(s)",
          "6677: }",
          "6680: func (s TagResourceInput) GoString() string {",
          "6681:  return s.String()",
          "6682: }",
          "6685: func (s *TagResourceInput) Validate() error {",
          "6686:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "6687:  if s.ResourceArn == nil {",
          "6688:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "6689:  }",
          "6690:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "6691:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "6692:  }",
          "6693:  if s.Tags == nil {",
          "6694:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "6695:  }",
          "6696:  if s.Tags != nil && len(s.Tags) < 1 {",
          "6697:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "6698:  }",
          "6700:  if invalidParams.Len() > 0 {",
          "6701:   return invalidParams",
          "6702:  }",
          "6703:  return nil",
          "6704: }",
          "6707: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "6708:  s.ResourceArn = &v",
          "6709:  return s",
          "6710: }",
          "6713: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "6714:  s.Tags = v",
          "6715:  return s",
          "6716: }",
          "6718: type TagResourceOutput struct {",
          "6719:  _ struct{} `type:\"structure\"`",
          "6720: }",
          "6723: func (s TagResourceOutput) String() string {",
          "6724:  return awsutil.Prettify(s)",
          "6725: }",
          "6728: func (s TagResourceOutput) GoString() string {",
          "6729:  return s.String()",
          "6730: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "6357:  return s",
          "6358: }",
          "6360: type UpdateComputeEnvironmentInput struct {",
          "6361:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6936: type UntagResourceInput struct {",
          "6937:  _ struct{} `type:\"structure\"`",
          "6945:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "6950:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" min:\"1\" type:\"list\" required:\"true\"`",
          "6951: }",
          "6954: func (s UntagResourceInput) String() string {",
          "6955:  return awsutil.Prettify(s)",
          "6956: }",
          "6959: func (s UntagResourceInput) GoString() string {",
          "6960:  return s.String()",
          "6961: }",
          "6964: func (s *UntagResourceInput) Validate() error {",
          "6965:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "6966:  if s.ResourceArn == nil {",
          "6967:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "6968:  }",
          "6969:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "6970:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "6971:  }",
          "6972:  if s.TagKeys == nil {",
          "6973:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "6974:  }",
          "6975:  if s.TagKeys != nil && len(s.TagKeys) < 1 {",
          "6976:   invalidParams.Add(request.NewErrParamMinLen(\"TagKeys\", 1))",
          "6977:  }",
          "6979:  if invalidParams.Len() > 0 {",
          "6980:   return invalidParams",
          "6981:  }",
          "6982:  return nil",
          "6983: }",
          "6986: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "6987:  s.ResourceArn = &v",
          "6988:  return s",
          "6989: }",
          "6992: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "6993:  s.TagKeys = v",
          "6994:  return s",
          "6995: }",
          "6997: type UntagResourceOutput struct {",
          "6998:  _ struct{} `type:\"structure\"`",
          "6999: }",
          "7002: func (s UntagResourceOutput) String() string {",
          "7003:  return awsutil.Prettify(s)",
          "7004: }",
          "7007: func (s UntagResourceOutput) GoString() string {",
          "7008:  return s.String()",
          "7009: }",
          "",
          "---------------"
        ],
        "service/batch/batchiface/interface.go||service/batch/batchiface/interface.go": [
          "File: service/batch/batchiface/interface.go -> service/batch/batchiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:  ListJobsPages(*batch.ListJobsInput, func(*batch.ListJobsOutput, bool) bool) error",
          "117:  ListJobsPagesWithContext(aws.Context, *batch.ListJobsInput, func(*batch.ListJobsOutput, bool) bool, ...request.Option) error",
          "119:  RegisterJobDefinition(*batch.RegisterJobDefinitionInput) (*batch.RegisterJobDefinitionOutput, error)",
          "120:  RegisterJobDefinitionWithContext(aws.Context, *batch.RegisterJobDefinitionInput, ...request.Option) (*batch.RegisterJobDefinitionOutput, error)",
          "121:  RegisterJobDefinitionRequest(*batch.RegisterJobDefinitionInput) (*request.Request, *batch.RegisterJobDefinitionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119:  ListTagsForResource(*batch.ListTagsForResourceInput) (*batch.ListTagsForResourceOutput, error)",
          "120:  ListTagsForResourceWithContext(aws.Context, *batch.ListTagsForResourceInput, ...request.Option) (*batch.ListTagsForResourceOutput, error)",
          "121:  ListTagsForResourceRequest(*batch.ListTagsForResourceInput) (*request.Request, *batch.ListTagsForResourceOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:  SubmitJobWithContext(aws.Context, *batch.SubmitJobInput, ...request.Option) (*batch.SubmitJobOutput, error)",
          "125:  SubmitJobRequest(*batch.SubmitJobInput) (*request.Request, *batch.SubmitJobOutput)",
          "127:  TerminateJob(*batch.TerminateJobInput) (*batch.TerminateJobOutput, error)",
          "128:  TerminateJobWithContext(aws.Context, *batch.TerminateJobInput, ...request.Option) (*batch.TerminateJobOutput, error)",
          "129:  TerminateJobRequest(*batch.TerminateJobInput) (*request.Request, *batch.TerminateJobOutput)",
          "131:  UpdateComputeEnvironment(*batch.UpdateComputeEnvironmentInput) (*batch.UpdateComputeEnvironmentOutput, error)",
          "132:  UpdateComputeEnvironmentWithContext(aws.Context, *batch.UpdateComputeEnvironmentInput, ...request.Option) (*batch.UpdateComputeEnvironmentOutput, error)",
          "133:  UpdateComputeEnvironmentRequest(*batch.UpdateComputeEnvironmentInput) (*request.Request, *batch.UpdateComputeEnvironmentOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:  TagResource(*batch.TagResourceInput) (*batch.TagResourceOutput, error)",
          "132:  TagResourceWithContext(aws.Context, *batch.TagResourceInput, ...request.Option) (*batch.TagResourceOutput, error)",
          "133:  TagResourceRequest(*batch.TagResourceInput) (*request.Request, *batch.TagResourceOutput)",
          "139:  UntagResource(*batch.UntagResourceInput) (*batch.UntagResourceOutput, error)",
          "140:  UntagResourceWithContext(aws.Context, *batch.UntagResourceInput, ...request.Option) (*batch.UntagResourceOutput, error)",
          "141:  UntagResourceRequest(*batch.UntagResourceInput) (*request.Request, *batch.UntagResourceOutput)",
          "",
          "---------------"
        ],
        "service/batch/examples_test.go||service/batch/examples_test.go": [
          "File: service/batch/examples_test.go -> service/batch/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "550:  fmt.Println(result)",
          "551: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "556: func ExampleBatch_ListTagsForResource_shared00() {",
          "557:  svc := batch.New(session.New())",
          "558:  input := &batch.ListTagsForResourceInput{",
          "559:   ResourceArn: aws.String(\"arn:aws:batch:us-east-1:123456789012:job-definition/sleep30:1\"),",
          "560:  }",
          "562:  result, err := svc.ListTagsForResource(input)",
          "563:  if err != nil {",
          "564:   if aerr, ok := err.(awserr.Error); ok {",
          "565:    switch aerr.Code() {",
          "566:    case batch.ErrCodeClientException:",
          "567:     fmt.Println(batch.ErrCodeClientException, aerr.Error())",
          "568:    case batch.ErrCodeServerException:",
          "569:     fmt.Println(batch.ErrCodeServerException, aerr.Error())",
          "570:    default:",
          "571:     fmt.Println(aerr.Error())",
          "572:    }",
          "573:   } else {",
          "576:    fmt.Println(err.Error())",
          "577:   }",
          "578:   return",
          "579:  }",
          "581:  fmt.Println(result)",
          "582: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "591:  fmt.Println(result)",
          "592: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "628: func ExampleBatch_RegisterJobDefinition_shared01() {",
          "629:  svc := batch.New(session.New())",
          "630:  input := &batch.RegisterJobDefinitionInput{",
          "631:   ContainerProperties: &batch.ContainerProperties{",
          "632:    Command: []*string{",
          "633:     aws.String(\"sleep\"),",
          "634:     aws.String(\"30\"),",
          "635:    },",
          "636:    Image:  aws.String(\"busybox\"),",
          "637:    Memory: aws.Int64(128),",
          "638:    Vcpus:  aws.Int64(1),",
          "639:   },",
          "640:   JobDefinitionName: aws.String(\"sleep30\"),",
          "641:   Tags: map[string]*string{",
          "642:    \"Department\": aws.String(\"Engineering\"),",
          "643:    \"User\":       aws.String(\"JaneDoe\"),",
          "644:   },",
          "645:   Type: aws.String(\"container\"),",
          "646:  }",
          "648:  result, err := svc.RegisterJobDefinition(input)",
          "649:  if err != nil {",
          "650:   if aerr, ok := err.(awserr.Error); ok {",
          "651:    switch aerr.Code() {",
          "652:    case batch.ErrCodeClientException:",
          "653:     fmt.Println(batch.ErrCodeClientException, aerr.Error())",
          "654:    case batch.ErrCodeServerException:",
          "655:     fmt.Println(batch.ErrCodeServerException, aerr.Error())",
          "656:    default:",
          "657:     fmt.Println(aerr.Error())",
          "658:    }",
          "659:   } else {",
          "662:    fmt.Println(err.Error())",
          "663:   }",
          "664:   return",
          "665:  }",
          "667:  fmt.Println(result)",
          "668: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "625:  fmt.Println(result)",
          "626: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "707: func ExampleBatch_TagResource_shared00() {",
          "708:  svc := batch.New(session.New())",
          "709:  input := &batch.TagResourceInput{",
          "710:   ResourceArn: aws.String(\"arn:aws:batch:us-east-1:123456789012:job-definition/sleep30:1\"),",
          "711:   Tags: map[string]*string{",
          "712:    \"Stage\": aws.String(\"Alpha\"),",
          "713:   },",
          "714:  }",
          "716:  result, err := svc.TagResource(input)",
          "717:  if err != nil {",
          "718:   if aerr, ok := err.(awserr.Error); ok {",
          "719:    switch aerr.Code() {",
          "720:    case batch.ErrCodeClientException:",
          "721:     fmt.Println(batch.ErrCodeClientException, aerr.Error())",
          "722:    case batch.ErrCodeServerException:",
          "723:     fmt.Println(batch.ErrCodeServerException, aerr.Error())",
          "724:    default:",
          "725:     fmt.Println(aerr.Error())",
          "726:    }",
          "727:   } else {",
          "730:    fmt.Println(err.Error())",
          "731:   }",
          "732:   return",
          "733:  }",
          "735:  fmt.Println(result)",
          "736: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "657:  fmt.Println(result)",
          "658: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "767:  fmt.Println(result)",
          "768: }",
          "773: func ExampleBatch_UntagResource_shared00() {",
          "774:  svc := batch.New(session.New())",
          "775:  input := &batch.UntagResourceInput{",
          "776:   ResourceArn: aws.String(\"arn:aws:batch:us-east-1:123456789012:job-definition/sleep30:1\"),",
          "777:   TagKeys: []*string{",
          "778:    aws.String(\"Stage\"),",
          "779:   },",
          "780:  }",
          "782:  result, err := svc.UntagResource(input)",
          "",
          "---------------"
        ],
        "service/elbv2/api.go||service/elbv2/api.go": [
          "File: service/elbv2/api.go -> service/elbv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4253:  SslPolicy *string `type:\"string\"`",
          "4254: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4267:  Tags []*Tag `min:\"1\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4281:  if s.Protocol == nil {",
          "4282:   invalidParams.Add(request.NewErrParamRequired(\"Protocol\"))",
          "4283:  }",
          "4284:  if s.DefaultActions != nil {",
          "4285:   for i, v := range s.DefaultActions {",
          "4286:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4298:  if s.Tags != nil && len(s.Tags) < 1 {",
          "4299:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "4300:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4291:    }",
          "4292:   }",
          "4293:  }",
          "4295:  if invalidParams.Len() > 0 {",
          "4296:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4311:  if s.Tags != nil {",
          "4312:   for i, v := range s.Tags {",
          "4313:    if v == nil {",
          "4314:     continue",
          "4315:    }",
          "4316:    if err := v.Validate(); err != nil {",
          "4317:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4318:    }",
          "4319:   }",
          "4320:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4340:  return s",
          "4341: }",
          "4343: type CreateListenerOutput struct {",
          "4344:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4371: func (s *CreateListenerInput) SetTags(v []*Tag) *CreateListenerInput {",
          "4372:  s.Tags = v",
          "4373:  return s",
          "4374: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4601:  Priority *int64 `min:\"1\" type:\"integer\" required:\"true\"`",
          "4602: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4637:  Tags []*Tag `min:\"1\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4629:  if s.Priority != nil && *s.Priority < 1 {",
          "4630:   invalidParams.Add(request.NewErrParamMinValue(\"Priority\", 1))",
          "4631:  }",
          "4632:  if s.Actions != nil {",
          "4633:   for i, v := range s.Actions {",
          "4634:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4668:  if s.Tags != nil && len(s.Tags) < 1 {",
          "4669:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "4670:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4639:    }",
          "4640:   }",
          "4641:  }",
          "4643:  if invalidParams.Len() > 0 {",
          "4644:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4681:  if s.Tags != nil {",
          "4682:   for i, v := range s.Tags {",
          "4683:    if v == nil {",
          "4684:     continue",
          "4685:    }",
          "4686:    if err := v.Validate(); err != nil {",
          "4687:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4688:    }",
          "4689:   }",
          "4690:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4670:  return s",
          "4671: }",
          "4673: type CreateRuleOutput struct {",
          "4674:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4723: func (s *CreateRuleInput) SetTags(v []*Tag) *CreateRuleInput {",
          "4724:  s.Tags = v",
          "4725:  return s",
          "4726: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4764:  Protocol *string `type:\"string\" enum:\"ProtocolEnum\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4822:  Tags []*Tag `min:\"1\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4822:  if s.Port != nil && *s.Port < 1 {",
          "4823:   invalidParams.Add(request.NewErrParamMinValue(\"Port\", 1))",
          "4824:  }",
          "4825:  if s.UnhealthyThresholdCount != nil && *s.UnhealthyThresholdCount < 2 {",
          "4826:   invalidParams.Add(request.NewErrParamMinValue(\"UnhealthyThresholdCount\", 2))",
          "4827:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4883:  if s.Tags != nil && len(s.Tags) < 1 {",
          "4884:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "4885:  }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4830:    invalidParams.AddNested(\"Matcher\", err.(request.ErrInvalidParams))",
          "4831:   }",
          "4832:  }",
          "4834:  if invalidParams.Len() > 0 {",
          "4835:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4894:  if s.Tags != nil {",
          "4895:   for i, v := range s.Tags {",
          "4896:    if v == nil {",
          "4897:     continue",
          "4898:    }",
          "4899:    if err := v.Validate(); err != nil {",
          "4900:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4901:    }",
          "4902:   }",
          "4903:  }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4903:  return s",
          "4904: }",
          "4907: func (s *CreateTargetGroupInput) SetTargetType(v string) *CreateTargetGroupInput {",
          "4908:  s.TargetType = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4978: func (s *CreateTargetGroupInput) SetTags(v []*Tag) *CreateTargetGroupInput {",
          "4979:  s.Tags = v",
          "4980:  return s",
          "4981: }",
          "",
          "---------------"
        ],
        "service/elbv2/examples_test.go||service/elbv2/examples_test.go": [
          "File: service/elbv2/examples_test.go -> service/elbv2/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:     fmt.Println(elbv2.ErrCodeTooManyUniqueTargetGroupsPerLoadBalancerException, aerr.Error())",
          "129:    case elbv2.ErrCodeALPNPolicyNotSupportedException:",
          "130:     fmt.Println(elbv2.ErrCodeALPNPolicyNotSupportedException, aerr.Error())",
          "131:    default:",
          "132:     fmt.Println(aerr.Error())",
          "133:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:    case elbv2.ErrCodeTooManyTagsException:",
          "132:     fmt.Println(elbv2.ErrCodeTooManyTagsException, aerr.Error())",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "208:     fmt.Println(elbv2.ErrCodeTooManyUniqueTargetGroupsPerLoadBalancerException, aerr.Error())",
          "209:    case elbv2.ErrCodeALPNPolicyNotSupportedException:",
          "210:     fmt.Println(elbv2.ErrCodeALPNPolicyNotSupportedException, aerr.Error())",
          "211:    default:",
          "212:     fmt.Println(aerr.Error())",
          "213:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:    case elbv2.ErrCodeTooManyTagsException:",
          "214:     fmt.Println(elbv2.ErrCodeTooManyTagsException, aerr.Error())",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "396:     fmt.Println(elbv2.ErrCodeInvalidLoadBalancerActionException, aerr.Error())",
          "397:    case elbv2.ErrCodeTooManyUniqueTargetGroupsPerLoadBalancerException:",
          "398:     fmt.Println(elbv2.ErrCodeTooManyUniqueTargetGroupsPerLoadBalancerException, aerr.Error())",
          "399:    default:",
          "400:     fmt.Println(aerr.Error())",
          "401:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "403:    case elbv2.ErrCodeTooManyTagsException:",
          "404:     fmt.Println(elbv2.ErrCodeTooManyTagsException, aerr.Error())",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "433:     fmt.Println(elbv2.ErrCodeTooManyTargetGroupsException, aerr.Error())",
          "434:    case elbv2.ErrCodeInvalidConfigurationRequestException:",
          "435:     fmt.Println(elbv2.ErrCodeInvalidConfigurationRequestException, aerr.Error())",
          "436:    default:",
          "437:     fmt.Println(aerr.Error())",
          "438:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "442:    case elbv2.ErrCodeTooManyTagsException:",
          "443:     fmt.Println(elbv2.ErrCodeTooManyTagsException, aerr.Error())",
          "",
          "---------------"
        ],
        "service/personalizeevents/api.go||service/personalizeevents/api.go": [
          "File: service/personalizeevents/api.go -> service/personalizeevents/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:  return out, req.Send()",
          "94: }",
          "97: type Event struct {",
          "98:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: const opPutItems = \"PutItems\"",
          "122: func (c *PersonalizeEvents) PutItemsRequest(input *PutItemsInput) (req *request.Request, output *PutItemsOutput) {",
          "123:  op := &request.Operation{",
          "124:   Name:       opPutItems,",
          "125:   HTTPMethod: \"POST\",",
          "126:   HTTPPath:   \"/items\",",
          "127:  }",
          "129:  if input == nil {",
          "130:   input = &PutItemsInput{}",
          "131:  }",
          "133:  output = &PutItemsOutput{}",
          "134:  req = c.newRequest(op, input, output)",
          "135:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "136:  return",
          "137: }",
          "158: func (c *PersonalizeEvents) PutItems(input *PutItemsInput) (*PutItemsOutput, error) {",
          "159:  req, out := c.PutItemsRequest(input)",
          "160:  return out, req.Send()",
          "161: }",
          "172: func (c *PersonalizeEvents) PutItemsWithContext(ctx aws.Context, input *PutItemsInput, opts ...request.Option) (*PutItemsOutput, error) {",
          "173:  req, out := c.PutItemsRequest(input)",
          "174:  req.SetContext(ctx)",
          "175:  req.ApplyOptions(opts...)",
          "176:  return out, req.Send()",
          "177: }",
          "179: const opPutUsers = \"PutUsers\"",
          "205: func (c *PersonalizeEvents) PutUsersRequest(input *PutUsersInput) (req *request.Request, output *PutUsersOutput) {",
          "206:  op := &request.Operation{",
          "207:   Name:       opPutUsers,",
          "208:   HTTPMethod: \"POST\",",
          "209:   HTTPPath:   \"/users\",",
          "210:  }",
          "212:  if input == nil {",
          "213:   input = &PutUsersInput{}",
          "214:  }",
          "216:  output = &PutUsersOutput{}",
          "217:  req = c.newRequest(op, input, output)",
          "218:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "219:  return",
          "220: }",
          "241: func (c *PersonalizeEvents) PutUsers(input *PutUsersInput) (*PutUsersOutput, error) {",
          "242:  req, out := c.PutUsersRequest(input)",
          "243:  return out, req.Send()",
          "244: }",
          "255: func (c *PersonalizeEvents) PutUsersWithContext(ctx aws.Context, input *PutUsersInput, opts ...request.Option) (*PutUsersOutput, error) {",
          "256:  req, out := c.PutUsersRequest(input)",
          "257:  req.SetContext(ctx)",
          "258:  req.ApplyOptions(opts...)",
          "259:  return out, req.Send()",
          "260: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "290:  return s.RespMetadata.RequestID",
          "291: }",
          "293: type PutEventsInput struct {",
          "294:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "461: type Item struct {",
          "462:  _ struct{} `type:\"structure\"`",
          "467:  ItemId *string `locationName:\"itemId\" min:\"1\" type:\"string\" required:\"true\"`",
          "477:  Properties aws.JSONValue `locationName:\"properties\" type:\"jsonvalue\"`",
          "478: }",
          "481: func (s Item) String() string {",
          "482:  return awsutil.Prettify(s)",
          "483: }",
          "486: func (s Item) GoString() string {",
          "487:  return s.String()",
          "488: }",
          "491: func (s *Item) Validate() error {",
          "492:  invalidParams := request.ErrInvalidParams{Context: \"Item\"}",
          "493:  if s.ItemId == nil {",
          "494:   invalidParams.Add(request.NewErrParamRequired(\"ItemId\"))",
          "495:  }",
          "496:  if s.ItemId != nil && len(*s.ItemId) < 1 {",
          "497:   invalidParams.Add(request.NewErrParamMinLen(\"ItemId\", 1))",
          "498:  }",
          "500:  if invalidParams.Len() > 0 {",
          "501:   return invalidParams",
          "502:  }",
          "503:  return nil",
          "504: }",
          "507: func (s *Item) SetItemId(v string) *Item {",
          "508:  s.ItemId = &v",
          "509:  return s",
          "510: }",
          "513: func (s *Item) SetProperties(v aws.JSONValue) *Item {",
          "514:  s.Properties = v",
          "515:  return s",
          "516: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "405: func (s PutEventsOutput) GoString() string {",
          "406:  return s.String()",
          "407: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634: type PutItemsInput struct {",
          "635:  _ struct{} `type:\"structure\"`",
          "641:  DatasetArn *string `locationName:\"datasetArn\" type:\"string\" required:\"true\"`",
          "646:  Items []*Item `locationName:\"items\" min:\"1\" type:\"list\" required:\"true\"`",
          "647: }",
          "650: func (s PutItemsInput) String() string {",
          "651:  return awsutil.Prettify(s)",
          "652: }",
          "655: func (s PutItemsInput) GoString() string {",
          "656:  return s.String()",
          "657: }",
          "660: func (s *PutItemsInput) Validate() error {",
          "661:  invalidParams := request.ErrInvalidParams{Context: \"PutItemsInput\"}",
          "662:  if s.DatasetArn == nil {",
          "663:   invalidParams.Add(request.NewErrParamRequired(\"DatasetArn\"))",
          "664:  }",
          "665:  if s.Items == nil {",
          "666:   invalidParams.Add(request.NewErrParamRequired(\"Items\"))",
          "667:  }",
          "668:  if s.Items != nil && len(s.Items) < 1 {",
          "669:   invalidParams.Add(request.NewErrParamMinLen(\"Items\", 1))",
          "670:  }",
          "671:  if s.Items != nil {",
          "672:   for i, v := range s.Items {",
          "673:    if v == nil {",
          "674:     continue",
          "675:    }",
          "676:    if err := v.Validate(); err != nil {",
          "677:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Items\", i), err.(request.ErrInvalidParams))",
          "678:    }",
          "679:   }",
          "680:  }",
          "682:  if invalidParams.Len() > 0 {",
          "683:   return invalidParams",
          "684:  }",
          "685:  return nil",
          "686: }",
          "689: func (s *PutItemsInput) SetDatasetArn(v string) *PutItemsInput {",
          "690:  s.DatasetArn = &v",
          "691:  return s",
          "692: }",
          "695: func (s *PutItemsInput) SetItems(v []*Item) *PutItemsInput {",
          "696:  s.Items = v",
          "697:  return s",
          "698: }",
          "700: type PutItemsOutput struct {",
          "701:  _ struct{} `type:\"structure\"`",
          "702: }",
          "705: func (s PutItemsOutput) String() string {",
          "706:  return awsutil.Prettify(s)",
          "707: }",
          "710: func (s PutItemsOutput) GoString() string {",
          "711:  return s.String()",
          "712: }",
          "714: type PutUsersInput struct {",
          "715:  _ struct{} `type:\"structure\"`",
          "721:  DatasetArn *string `locationName:\"datasetArn\" type:\"string\" required:\"true\"`",
          "726:  Users []*User `locationName:\"users\" min:\"1\" type:\"list\" required:\"true\"`",
          "727: }",
          "730: func (s PutUsersInput) String() string {",
          "731:  return awsutil.Prettify(s)",
          "732: }",
          "735: func (s PutUsersInput) GoString() string {",
          "736:  return s.String()",
          "737: }",
          "740: func (s *PutUsersInput) Validate() error {",
          "741:  invalidParams := request.ErrInvalidParams{Context: \"PutUsersInput\"}",
          "742:  if s.DatasetArn == nil {",
          "743:   invalidParams.Add(request.NewErrParamRequired(\"DatasetArn\"))",
          "744:  }",
          "745:  if s.Users == nil {",
          "746:   invalidParams.Add(request.NewErrParamRequired(\"Users\"))",
          "747:  }",
          "748:  if s.Users != nil && len(s.Users) < 1 {",
          "749:   invalidParams.Add(request.NewErrParamMinLen(\"Users\", 1))",
          "750:  }",
          "751:  if s.Users != nil {",
          "752:   for i, v := range s.Users {",
          "753:    if v == nil {",
          "754:     continue",
          "755:    }",
          "756:    if err := v.Validate(); err != nil {",
          "757:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Users\", i), err.(request.ErrInvalidParams))",
          "758:    }",
          "759:   }",
          "760:  }",
          "762:  if invalidParams.Len() > 0 {",
          "763:   return invalidParams",
          "764:  }",
          "765:  return nil",
          "766: }",
          "769: func (s *PutUsersInput) SetDatasetArn(v string) *PutUsersInput {",
          "770:  s.DatasetArn = &v",
          "771:  return s",
          "772: }",
          "775: func (s *PutUsersInput) SetUsers(v []*User) *PutUsersInput {",
          "776:  s.Users = v",
          "777:  return s",
          "778: }",
          "780: type PutUsersOutput struct {",
          "781:  _ struct{} `type:\"structure\"`",
          "782: }",
          "785: func (s PutUsersOutput) String() string {",
          "786:  return awsutil.Prettify(s)",
          "787: }",
          "790: func (s PutUsersOutput) GoString() string {",
          "791:  return s.String()",
          "792: }",
          "795: type ResourceNotFoundException struct {",
          "796:  _            struct{}                  `type:\"structure\"`",
          "797:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "799:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "800: }",
          "803: func (s ResourceNotFoundException) String() string {",
          "804:  return awsutil.Prettify(s)",
          "805: }",
          "808: func (s ResourceNotFoundException) GoString() string {",
          "809:  return s.String()",
          "810: }",
          "812: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "813:  return &ResourceNotFoundException{",
          "814:   RespMetadata: v,",
          "815:  }",
          "816: }",
          "819: func (s *ResourceNotFoundException) Code() string {",
          "820:  return \"ResourceNotFoundException\"",
          "821: }",
          "824: func (s *ResourceNotFoundException) Message() string {",
          "825:  if s.Message_ != nil {",
          "826:   return *s.Message_",
          "827:  }",
          "828:  return \"\"",
          "829: }",
          "832: func (s *ResourceNotFoundException) OrigErr() error {",
          "833:  return nil",
          "834: }",
          "836: func (s *ResourceNotFoundException) Error() string {",
          "837:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "838: }",
          "841: func (s *ResourceNotFoundException) StatusCode() int {",
          "842:  return s.RespMetadata.StatusCode",
          "843: }",
          "846: func (s *ResourceNotFoundException) RequestID() string {",
          "847:  return s.RespMetadata.RequestID",
          "848: }",
          "851: type User struct {",
          "852:  _ struct{} `type:\"structure\"`",
          "862:  Properties aws.JSONValue `locationName:\"properties\" type:\"jsonvalue\"`",
          "867:  UserId *string `locationName:\"userId\" min:\"1\" type:\"string\" required:\"true\"`",
          "868: }",
          "871: func (s User) String() string {",
          "872:  return awsutil.Prettify(s)",
          "873: }",
          "876: func (s User) GoString() string {",
          "877:  return s.String()",
          "878: }",
          "881: func (s *User) Validate() error {",
          "882:  invalidParams := request.ErrInvalidParams{Context: \"User\"}",
          "883:  if s.UserId == nil {",
          "884:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "885:  }",
          "886:  if s.UserId != nil && len(*s.UserId) < 1 {",
          "887:   invalidParams.Add(request.NewErrParamMinLen(\"UserId\", 1))",
          "888:  }",
          "890:  if invalidParams.Len() > 0 {",
          "891:   return invalidParams",
          "892:  }",
          "893:  return nil",
          "894: }",
          "897: func (s *User) SetProperties(v aws.JSONValue) *User {",
          "898:  s.Properties = v",
          "899:  return s",
          "900: }",
          "903: func (s *User) SetUserId(v string) *User {",
          "904:  s.UserId = &v",
          "905:  return s",
          "906: }",
          "",
          "---------------"
        ],
        "service/personalizeevents/errors.go||service/personalizeevents/errors.go": [
          "File: service/personalizeevents/errors.go -> service/personalizeevents/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:  ErrCodeInvalidInputException = \"InvalidInputException\"",
          "16: )",
          "18: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "20: }",
          "",
          "[Removed Lines]",
          "19:  \"InvalidInputException\": newErrorInvalidInputException,",
          "",
          "[Added Lines]",
          "21:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "25:  \"InvalidInputException\":     newErrorInvalidInputException,",
          "26:  \"ResourceNotFoundException\": newErrorResourceNotFoundException,",
          "",
          "---------------"
        ],
        "service/personalizeevents/personalizeeventsiface/interface.go||service/personalizeevents/personalizeeventsiface/interface.go": [
          "File: service/personalizeevents/personalizeeventsiface/interface.go -> service/personalizeevents/personalizeeventsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:  PutEvents(*personalizeevents.PutEventsInput) (*personalizeevents.PutEventsOutput, error)",
          "64:  PutEventsWithContext(aws.Context, *personalizeevents.PutEventsInput, ...request.Option) (*personalizeevents.PutEventsOutput, error)",
          "65:  PutEventsRequest(*personalizeevents.PutEventsInput) (*request.Request, *personalizeevents.PutEventsOutput)",
          "66: }",
          "68: var _ PersonalizeEventsAPI = (*personalizeevents.PersonalizeEvents)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  PutItems(*personalizeevents.PutItemsInput) (*personalizeevents.PutItemsOutput, error)",
          "68:  PutItemsWithContext(aws.Context, *personalizeevents.PutItemsInput, ...request.Option) (*personalizeevents.PutItemsOutput, error)",
          "69:  PutItemsRequest(*personalizeevents.PutItemsInput) (*request.Request, *personalizeevents.PutItemsOutput)",
          "71:  PutUsers(*personalizeevents.PutUsersInput) (*personalizeevents.PutUsersOutput, error)",
          "72:  PutUsersWithContext(aws.Context, *personalizeevents.PutUsersInput, ...request.Option) (*personalizeevents.PutUsersOutput, error)",
          "73:  PutUsersRequest(*personalizeevents.PutUsersInput) (*request.Request, *personalizeevents.PutUsersOutput)",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18329:  MultiAZ *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18332:  NcharCharacterSetName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18737:  return s",
          "18738: }",
          "18741: func (s *CreateDBInstanceInput) SetOptionGroupName(v string) *CreateDBInstanceInput {",
          "18742:  s.OptionGroupName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18744: func (s *CreateDBInstanceInput) SetNcharCharacterSetName(v string) *CreateDBInstanceInput {",
          "18745:  s.NcharCharacterSetName = &v",
          "18746:  return s",
          "18747: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "21785:  SupportedFeatureNames []*string `type:\"list\"`",
          "21789:  SupportedTimezones []*Timezone `locationNameList:\"Timezone\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21798:  SupportedNcharCharacterSets []*CharacterSet `locationNameList:\"CharacterSet\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "21884:  return s",
          "21885: }",
          "21888: func (s *DBEngineVersion) SetSupportedTimezones(v []*Timezone) *DBEngineVersion {",
          "21889:  s.SupportedTimezones = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21901: func (s *DBEngineVersion) SetSupportedNcharCharacterSets(v []*CharacterSet) *DBEngineVersion {",
          "21902:  s.SupportedNcharCharacterSets = v",
          "21903:  return s",
          "21904: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "22097:  MultiAZ *bool `type:\"boolean\"`",
          "22100:  OptionGroupMemberships []*OptionGroupMembership `locationNameList:\"OptionGroupMembership\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22121:  NcharCharacterSetName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "22439:  return s",
          "22440: }",
          "22443: func (s *DBInstance) SetOptionGroupMemberships(v []*OptionGroupMembership) *DBInstance {",
          "22444:  s.OptionGroupMemberships = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22467: func (s *DBInstance) SetNcharCharacterSetName(v string) *DBInstance {",
          "22468:  s.NcharCharacterSetName = &v",
          "22469:  return s",
          "22470: }",
          "",
          "---------------"
        ],
        "service/s3/api.go||service/s3/api.go": [
          "File: service/s3/api.go -> service/s3/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1496:  return out, req.Send()",
          "1497: }",
          "1499: const opDeleteBucketPolicy = \"DeleteBucketPolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1499: const opDeleteBucketOwnershipControls = \"DeleteBucketOwnershipControls\"",
          "1525: func (c *S3) DeleteBucketOwnershipControlsRequest(input *DeleteBucketOwnershipControlsInput) (req *request.Request, output *DeleteBucketOwnershipControlsOutput) {",
          "1526:  op := &request.Operation{",
          "1527:   Name:       opDeleteBucketOwnershipControls,",
          "1528:   HTTPMethod: \"DELETE\",",
          "1529:   HTTPPath:   \"/{Bucket}?ownershipControls\",",
          "1530:  }",
          "1532:  if input == nil {",
          "1533:   input = &DeleteBucketOwnershipControlsInput{}",
          "1534:  }",
          "1536:  output = &DeleteBucketOwnershipControlsOutput{}",
          "1537:  req = c.newRequest(op, input, output)",
          "1538:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1539:  return",
          "1540: }",
          "1564: func (c *S3) DeleteBucketOwnershipControls(input *DeleteBucketOwnershipControlsInput) (*DeleteBucketOwnershipControlsOutput, error) {",
          "1565:  req, out := c.DeleteBucketOwnershipControlsRequest(input)",
          "1566:  return out, req.Send()",
          "1567: }",
          "1578: func (c *S3) DeleteBucketOwnershipControlsWithContext(ctx aws.Context, input *DeleteBucketOwnershipControlsInput, opts ...request.Option) (*DeleteBucketOwnershipControlsOutput, error) {",
          "1579:  req, out := c.DeleteBucketOwnershipControlsRequest(input)",
          "1580:  req.SetContext(ctx)",
          "1581:  req.ApplyOptions(opts...)",
          "1582:  return out, req.Send()",
          "1583: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3450:  return out, req.Send()",
          "3451: }",
          "3453: const opGetBucketPolicy = \"GetBucketPolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3539: const opGetBucketOwnershipControls = \"GetBucketOwnershipControls\"",
          "3565: func (c *S3) GetBucketOwnershipControlsRequest(input *GetBucketOwnershipControlsInput) (req *request.Request, output *GetBucketOwnershipControlsOutput) {",
          "3566:  op := &request.Operation{",
          "3567:   Name:       opGetBucketOwnershipControls,",
          "3568:   HTTPMethod: \"GET\",",
          "3569:   HTTPPath:   \"/{Bucket}?ownershipControls\",",
          "3570:  }",
          "3572:  if input == nil {",
          "3573:   input = &GetBucketOwnershipControlsInput{}",
          "3574:  }",
          "3576:  output = &GetBucketOwnershipControlsOutput{}",
          "3577:  req = c.newRequest(op, input, output)",
          "3578:  return",
          "3579: }",
          "3603: func (c *S3) GetBucketOwnershipControls(input *GetBucketOwnershipControlsInput) (*GetBucketOwnershipControlsOutput, error) {",
          "3604:  req, out := c.GetBucketOwnershipControlsRequest(input)",
          "3605:  return out, req.Send()",
          "3606: }",
          "3617: func (c *S3) GetBucketOwnershipControlsWithContext(ctx aws.Context, input *GetBucketOwnershipControlsInput, opts ...request.Option) (*GetBucketOwnershipControlsOutput, error) {",
          "3618:  req, out := c.GetBucketOwnershipControlsRequest(input)",
          "3619:  req.SetContext(ctx)",
          "3620:  req.ApplyOptions(opts...)",
          "3621:  return out, req.Send()",
          "3622: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7733:  return out, req.Send()",
          "7734: }",
          "7736: const opPutBucketPolicy = \"PutBucketPolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7907: const opPutBucketOwnershipControls = \"PutBucketOwnershipControls\"",
          "7933: func (c *S3) PutBucketOwnershipControlsRequest(input *PutBucketOwnershipControlsInput) (req *request.Request, output *PutBucketOwnershipControlsOutput) {",
          "7934:  op := &request.Operation{",
          "7935:   Name:       opPutBucketOwnershipControls,",
          "7936:   HTTPMethod: \"PUT\",",
          "7937:   HTTPPath:   \"/{Bucket}?ownershipControls\",",
          "7938:  }",
          "7940:  if input == nil {",
          "7941:   input = &PutBucketOwnershipControlsInput{}",
          "7942:  }",
          "7944:  output = &PutBucketOwnershipControlsOutput{}",
          "7945:  req = c.newRequest(op, input, output)",
          "7946:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "7947:  return",
          "7948: }",
          "7973: func (c *S3) PutBucketOwnershipControls(input *PutBucketOwnershipControlsInput) (*PutBucketOwnershipControlsOutput, error) {",
          "7974:  req, out := c.PutBucketOwnershipControlsRequest(input)",
          "7975:  return out, req.Send()",
          "7976: }",
          "7987: func (c *S3) PutBucketOwnershipControlsWithContext(ctx aws.Context, input *PutBucketOwnershipControlsInput, opts ...request.Option) (*PutBucketOwnershipControlsOutput, error) {",
          "7988:  req, out := c.PutBucketOwnershipControlsRequest(input)",
          "7989:  req.SetContext(ctx)",
          "7990:  req.ApplyOptions(opts...)",
          "7991:  return out, req.Send()",
          "7992: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "13945:  return s.String()",
          "13946: }",
          "13948: type DeleteBucketPolicyInput struct {",
          "13949:  _ struct{} `locationName:\"DeleteBucketPolicyRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14242: type DeleteBucketOwnershipControlsInput struct {",
          "14243:  _ struct{} `locationName:\"DeleteBucketOwnershipControlsRequest\" type:\"structure\"`",
          "14248:  Bucket *string `location:\"uri\" locationName:\"Bucket\" type:\"string\" required:\"true\"`",
          "14250:  ExpectedBucketOwner *string `location:\"header\" locationName:\"x-amz-expected-bucket-owner\" type:\"string\"`",
          "14251: }",
          "14254: func (s DeleteBucketOwnershipControlsInput) String() string {",
          "14255:  return awsutil.Prettify(s)",
          "14256: }",
          "14259: func (s DeleteBucketOwnershipControlsInput) GoString() string {",
          "14260:  return s.String()",
          "14261: }",
          "14264: func (s *DeleteBucketOwnershipControlsInput) Validate() error {",
          "14265:  invalidParams := request.ErrInvalidParams{Context: \"DeleteBucketOwnershipControlsInput\"}",
          "14266:  if s.Bucket == nil {",
          "14267:   invalidParams.Add(request.NewErrParamRequired(\"Bucket\"))",
          "14268:  }",
          "14269:  if s.Bucket != nil && len(*s.Bucket) < 1 {",
          "14270:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 1))",
          "14271:  }",
          "14273:  if invalidParams.Len() > 0 {",
          "14274:   return invalidParams",
          "14275:  }",
          "14276:  return nil",
          "14277: }",
          "14280: func (s *DeleteBucketOwnershipControlsInput) SetBucket(v string) *DeleteBucketOwnershipControlsInput {",
          "14281:  s.Bucket = &v",
          "14282:  return s",
          "14283: }",
          "14285: func (s *DeleteBucketOwnershipControlsInput) getBucket() (v string) {",
          "14286:  if s.Bucket == nil {",
          "14287:   return v",
          "14288:  }",
          "14289:  return *s.Bucket",
          "14290: }",
          "14293: func (s *DeleteBucketOwnershipControlsInput) SetExpectedBucketOwner(v string) *DeleteBucketOwnershipControlsInput {",
          "14294:  s.ExpectedBucketOwner = &v",
          "14295:  return s",
          "14296: }",
          "14298: func (s *DeleteBucketOwnershipControlsInput) getEndpointARN() (arn.Resource, error) {",
          "14299:  if s.Bucket == nil {",
          "14300:   return nil, fmt.Errorf(\"member Bucket is nil\")",
          "14301:  }",
          "14302:  return parseEndpointARN(*s.Bucket)",
          "14303: }",
          "14305: func (s *DeleteBucketOwnershipControlsInput) hasEndpointARN() bool {",
          "14306:  if s.Bucket == nil {",
          "14307:   return false",
          "14308:  }",
          "14309:  return arn.IsARN(*s.Bucket)",
          "14310: }",
          "14315: func (s *DeleteBucketOwnershipControlsInput) updateArnableField(v string) error {",
          "14316:  if s.Bucket == nil {",
          "14317:   return fmt.Errorf(\"member Bucket is nil\")",
          "14318:  }",
          "14319:  s.Bucket = aws.String(v)",
          "14320:  return nil",
          "14321: }",
          "14323: type DeleteBucketOwnershipControlsOutput struct {",
          "14324:  _ struct{} `type:\"structure\"`",
          "14325: }",
          "14328: func (s DeleteBucketOwnershipControlsOutput) String() string {",
          "14329:  return awsutil.Prettify(s)",
          "14330: }",
          "14333: func (s DeleteBucketOwnershipControlsOutput) GoString() string {",
          "14334:  return s.String()",
          "14335: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "17248:  return nil",
          "17249: }",
          "17251: type GetBucketPolicyInput struct {",
          "17252:  _ struct{} `locationName:\"GetBucketPolicyRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17640: type GetBucketOwnershipControlsInput struct {",
          "17641:  _ struct{} `locationName:\"GetBucketOwnershipControlsRequest\" type:\"structure\"`",
          "17646:  Bucket *string `location:\"uri\" locationName:\"Bucket\" type:\"string\" required:\"true\"`",
          "17648:  ExpectedBucketOwner *string `location:\"header\" locationName:\"x-amz-expected-bucket-owner\" type:\"string\"`",
          "17649: }",
          "17652: func (s GetBucketOwnershipControlsInput) String() string {",
          "17653:  return awsutil.Prettify(s)",
          "17654: }",
          "17657: func (s GetBucketOwnershipControlsInput) GoString() string {",
          "17658:  return s.String()",
          "17659: }",
          "17662: func (s *GetBucketOwnershipControlsInput) Validate() error {",
          "17663:  invalidParams := request.ErrInvalidParams{Context: \"GetBucketOwnershipControlsInput\"}",
          "17664:  if s.Bucket == nil {",
          "17665:   invalidParams.Add(request.NewErrParamRequired(\"Bucket\"))",
          "17666:  }",
          "17667:  if s.Bucket != nil && len(*s.Bucket) < 1 {",
          "17668:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 1))",
          "17669:  }",
          "17671:  if invalidParams.Len() > 0 {",
          "17672:   return invalidParams",
          "17673:  }",
          "17674:  return nil",
          "17675: }",
          "17678: func (s *GetBucketOwnershipControlsInput) SetBucket(v string) *GetBucketOwnershipControlsInput {",
          "17679:  s.Bucket = &v",
          "17680:  return s",
          "17681: }",
          "17683: func (s *GetBucketOwnershipControlsInput) getBucket() (v string) {",
          "17684:  if s.Bucket == nil {",
          "17685:   return v",
          "17686:  }",
          "17687:  return *s.Bucket",
          "17688: }",
          "17691: func (s *GetBucketOwnershipControlsInput) SetExpectedBucketOwner(v string) *GetBucketOwnershipControlsInput {",
          "17692:  s.ExpectedBucketOwner = &v",
          "17693:  return s",
          "17694: }",
          "17696: func (s *GetBucketOwnershipControlsInput) getEndpointARN() (arn.Resource, error) {",
          "17697:  if s.Bucket == nil {",
          "17698:   return nil, fmt.Errorf(\"member Bucket is nil\")",
          "17699:  }",
          "17700:  return parseEndpointARN(*s.Bucket)",
          "17701: }",
          "17703: func (s *GetBucketOwnershipControlsInput) hasEndpointARN() bool {",
          "17704:  if s.Bucket == nil {",
          "17705:   return false",
          "17706:  }",
          "17707:  return arn.IsARN(*s.Bucket)",
          "17708: }",
          "17713: func (s *GetBucketOwnershipControlsInput) updateArnableField(v string) error {",
          "17714:  if s.Bucket == nil {",
          "17715:   return fmt.Errorf(\"member Bucket is nil\")",
          "17716:  }",
          "17717:  s.Bucket = aws.String(v)",
          "17718:  return nil",
          "17719: }",
          "17721: type GetBucketOwnershipControlsOutput struct {",
          "17722:  _ struct{} `type:\"structure\" payload:\"OwnershipControls\"`",
          "17726:  OwnershipControls *OwnershipControls `type:\"structure\"`",
          "17727: }",
          "17730: func (s GetBucketOwnershipControlsOutput) String() string {",
          "17731:  return awsutil.Prettify(s)",
          "17732: }",
          "17735: func (s GetBucketOwnershipControlsOutput) GoString() string {",
          "17736:  return s.String()",
          "17737: }",
          "17740: func (s *GetBucketOwnershipControlsOutput) SetOwnershipControls(v *OwnershipControls) *GetBucketOwnershipControlsOutput {",
          "17741:  s.OwnershipControls = v",
          "17742:  return s",
          "17743: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "24920:  return s",
          "24921: }",
          "24924: type ParquetInput struct {",
          "24925:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25419: type OwnershipControls struct {",
          "25420:  _ struct{} `type:\"structure\"`",
          "25425:  Rules []*OwnershipControlsRule `locationName:\"Rule\" type:\"list\" flattened:\"true\" required:\"true\"`",
          "25426: }",
          "25429: func (s OwnershipControls) String() string {",
          "25430:  return awsutil.Prettify(s)",
          "25431: }",
          "25434: func (s OwnershipControls) GoString() string {",
          "25435:  return s.String()",
          "25436: }",
          "25439: func (s *OwnershipControls) Validate() error {",
          "25440:  invalidParams := request.ErrInvalidParams{Context: \"OwnershipControls\"}",
          "25441:  if s.Rules == nil {",
          "25442:   invalidParams.Add(request.NewErrParamRequired(\"Rules\"))",
          "25443:  }",
          "25444:  if s.Rules != nil {",
          "25445:   for i, v := range s.Rules {",
          "25446:    if v == nil {",
          "25447:     continue",
          "25448:    }",
          "25449:    if err := v.Validate(); err != nil {",
          "25450:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Rules\", i), err.(request.ErrInvalidParams))",
          "25451:    }",
          "25452:   }",
          "25453:  }",
          "25455:  if invalidParams.Len() > 0 {",
          "25456:   return invalidParams",
          "25457:  }",
          "25458:  return nil",
          "25459: }",
          "25462: func (s *OwnershipControls) SetRules(v []*OwnershipControlsRule) *OwnershipControls {",
          "25463:  s.Rules = v",
          "25464:  return s",
          "25465: }",
          "25468: type OwnershipControlsRule struct {",
          "25469:  _ struct{} `type:\"structure\"`",
          "25481:  ObjectOwnership *string `type:\"string\" required:\"true\" enum:\"ObjectOwnership\"`",
          "25482: }",
          "25485: func (s OwnershipControlsRule) String() string {",
          "25486:  return awsutil.Prettify(s)",
          "25487: }",
          "25490: func (s OwnershipControlsRule) GoString() string {",
          "25491:  return s.String()",
          "25492: }",
          "25495: func (s *OwnershipControlsRule) Validate() error {",
          "25496:  invalidParams := request.ErrInvalidParams{Context: \"OwnershipControlsRule\"}",
          "25497:  if s.ObjectOwnership == nil {",
          "25498:   invalidParams.Add(request.NewErrParamRequired(\"ObjectOwnership\"))",
          "25499:  }",
          "25501:  if invalidParams.Len() > 0 {",
          "25502:   return invalidParams",
          "25503:  }",
          "25504:  return nil",
          "25505: }",
          "25508: func (s *OwnershipControlsRule) SetObjectOwnership(v string) *OwnershipControlsRule {",
          "25509:  s.ObjectOwnership = &v",
          "25510:  return s",
          "25511: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "26671:  return s.String()",
          "26672: }",
          "26674: type PutBucketPolicyInput struct {",
          "26675:  _ struct{} `locationName:\"PutBucketPolicyRequest\" type:\"structure\" payload:\"Policy\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27264: type PutBucketOwnershipControlsInput struct {",
          "27265:  _ struct{} `locationName:\"PutBucketOwnershipControlsRequest\" type:\"structure\" payload:\"OwnershipControls\"`",
          "27270:  Bucket *string `location:\"uri\" locationName:\"Bucket\" type:\"string\" required:\"true\"`",
          "27272:  ExpectedBucketOwner *string `location:\"header\" locationName:\"x-amz-expected-bucket-owner\" type:\"string\"`",
          "27278:  OwnershipControls *OwnershipControls `locationName:\"OwnershipControls\" type:\"structure\" required:\"true\" xmlURI:\"http://s3.amazonaws.com/doc/2006-03-01/\"`",
          "27279: }",
          "27282: func (s PutBucketOwnershipControlsInput) String() string {",
          "27283:  return awsutil.Prettify(s)",
          "27284: }",
          "27287: func (s PutBucketOwnershipControlsInput) GoString() string {",
          "27288:  return s.String()",
          "27289: }",
          "27292: func (s *PutBucketOwnershipControlsInput) Validate() error {",
          "27293:  invalidParams := request.ErrInvalidParams{Context: \"PutBucketOwnershipControlsInput\"}",
          "27294:  if s.Bucket == nil {",
          "27295:   invalidParams.Add(request.NewErrParamRequired(\"Bucket\"))",
          "27296:  }",
          "27297:  if s.Bucket != nil && len(*s.Bucket) < 1 {",
          "27298:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 1))",
          "27299:  }",
          "27300:  if s.OwnershipControls == nil {",
          "27301:   invalidParams.Add(request.NewErrParamRequired(\"OwnershipControls\"))",
          "27302:  }",
          "27303:  if s.OwnershipControls != nil {",
          "27304:   if err := s.OwnershipControls.Validate(); err != nil {",
          "27305:    invalidParams.AddNested(\"OwnershipControls\", err.(request.ErrInvalidParams))",
          "27306:   }",
          "27307:  }",
          "27309:  if invalidParams.Len() > 0 {",
          "27310:   return invalidParams",
          "27311:  }",
          "27312:  return nil",
          "27313: }",
          "27316: func (s *PutBucketOwnershipControlsInput) SetBucket(v string) *PutBucketOwnershipControlsInput {",
          "27317:  s.Bucket = &v",
          "27318:  return s",
          "27319: }",
          "27321: func (s *PutBucketOwnershipControlsInput) getBucket() (v string) {",
          "27322:  if s.Bucket == nil {",
          "27323:   return v",
          "27324:  }",
          "27325:  return *s.Bucket",
          "27326: }",
          "27329: func (s *PutBucketOwnershipControlsInput) SetExpectedBucketOwner(v string) *PutBucketOwnershipControlsInput {",
          "27330:  s.ExpectedBucketOwner = &v",
          "27331:  return s",
          "27332: }",
          "27335: func (s *PutBucketOwnershipControlsInput) SetOwnershipControls(v *OwnershipControls) *PutBucketOwnershipControlsInput {",
          "27336:  s.OwnershipControls = v",
          "27337:  return s",
          "27338: }",
          "27340: func (s *PutBucketOwnershipControlsInput) getEndpointARN() (arn.Resource, error) {",
          "27341:  if s.Bucket == nil {",
          "27342:   return nil, fmt.Errorf(\"member Bucket is nil\")",
          "27343:  }",
          "27344:  return parseEndpointARN(*s.Bucket)",
          "27345: }",
          "27347: func (s *PutBucketOwnershipControlsInput) hasEndpointARN() bool {",
          "27348:  if s.Bucket == nil {",
          "27349:   return false",
          "27350:  }",
          "27351:  return arn.IsARN(*s.Bucket)",
          "27352: }",
          "27357: func (s *PutBucketOwnershipControlsInput) updateArnableField(v string) error {",
          "27358:  if s.Bucket == nil {",
          "27359:   return fmt.Errorf(\"member Bucket is nil\")",
          "27360:  }",
          "27361:  s.Bucket = aws.String(v)",
          "27362:  return nil",
          "27363: }",
          "27365: type PutBucketOwnershipControlsOutput struct {",
          "27366:  _ struct{} `type:\"structure\"`",
          "27367: }",
          "27370: func (s PutBucketOwnershipControlsOutput) String() string {",
          "27371:  return awsutil.Prettify(s)",
          "27372: }",
          "27375: func (s PutBucketOwnershipControlsOutput) GoString() string {",
          "27376:  return s.String()",
          "27377: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "33178:  }",
          "33179: }",
          "33181: const (",
          "33183:  ObjectStorageClassStandard = \"STANDARD\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33916: const (",
          "33918:  ObjectOwnershipBucketOwnerPreferred = \"BucketOwnerPreferred\"",
          "33921:  ObjectOwnershipObjectWriter = \"ObjectWriter\"",
          "33922: )",
          "33925: func ObjectOwnership_Values() []string {",
          "33926:  return []string{",
          "33927:   ObjectOwnershipBucketOwnerPreferred,",
          "33928:   ObjectOwnershipObjectWriter,",
          "33929:  }",
          "33930: }",
          "",
          "---------------"
        ],
        "service/s3/errors.go||service/s3/errors.go": [
          "File: service/s3/errors.go -> service/s3/errors.go"
        ],
        "service/s3/s3iface/interface.go||service/s3/s3iface/interface.go": [
          "File: service/s3/s3iface/interface.go -> service/s3/s3iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:  DeleteBucketMetricsConfigurationWithContext(aws.Context, *s3.DeleteBucketMetricsConfigurationInput, ...request.Option) (*s3.DeleteBucketMetricsConfigurationOutput, error)",
          "109:  DeleteBucketMetricsConfigurationRequest(*s3.DeleteBucketMetricsConfigurationInput) (*request.Request, *s3.DeleteBucketMetricsConfigurationOutput)",
          "111:  DeleteBucketPolicy(*s3.DeleteBucketPolicyInput) (*s3.DeleteBucketPolicyOutput, error)",
          "112:  DeleteBucketPolicyWithContext(aws.Context, *s3.DeleteBucketPolicyInput, ...request.Option) (*s3.DeleteBucketPolicyOutput, error)",
          "113:  DeleteBucketPolicyRequest(*s3.DeleteBucketPolicyInput) (*request.Request, *s3.DeleteBucketPolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:  DeleteBucketOwnershipControls(*s3.DeleteBucketOwnershipControlsInput) (*s3.DeleteBucketOwnershipControlsOutput, error)",
          "112:  DeleteBucketOwnershipControlsWithContext(aws.Context, *s3.DeleteBucketOwnershipControlsInput, ...request.Option) (*s3.DeleteBucketOwnershipControlsOutput, error)",
          "113:  DeleteBucketOwnershipControlsRequest(*s3.DeleteBucketOwnershipControlsInput) (*request.Request, *s3.DeleteBucketOwnershipControlsOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:  GetBucketNotificationConfigurationWithContext(aws.Context, *s3.GetBucketNotificationConfigurationRequest, ...request.Option) (*s3.NotificationConfiguration, error)",
          "193:  GetBucketNotificationConfigurationRequest(*s3.GetBucketNotificationConfigurationRequest) (*request.Request, *s3.NotificationConfiguration)",
          "195:  GetBucketPolicy(*s3.GetBucketPolicyInput) (*s3.GetBucketPolicyOutput, error)",
          "196:  GetBucketPolicyWithContext(aws.Context, *s3.GetBucketPolicyInput, ...request.Option) (*s3.GetBucketPolicyOutput, error)",
          "197:  GetBucketPolicyRequest(*s3.GetBucketPolicyInput) (*request.Request, *s3.GetBucketPolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "199:  GetBucketOwnershipControls(*s3.GetBucketOwnershipControlsInput) (*s3.GetBucketOwnershipControlsOutput, error)",
          "200:  GetBucketOwnershipControlsWithContext(aws.Context, *s3.GetBucketOwnershipControlsInput, ...request.Option) (*s3.GetBucketOwnershipControlsOutput, error)",
          "201:  GetBucketOwnershipControlsRequest(*s3.GetBucketOwnershipControlsInput) (*request.Request, *s3.GetBucketOwnershipControlsOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "359:  PutBucketNotificationConfigurationWithContext(aws.Context, *s3.PutBucketNotificationConfigurationInput, ...request.Option) (*s3.PutBucketNotificationConfigurationOutput, error)",
          "360:  PutBucketNotificationConfigurationRequest(*s3.PutBucketNotificationConfigurationInput) (*request.Request, *s3.PutBucketNotificationConfigurationOutput)",
          "362:  PutBucketPolicy(*s3.PutBucketPolicyInput) (*s3.PutBucketPolicyOutput, error)",
          "363:  PutBucketPolicyWithContext(aws.Context, *s3.PutBucketPolicyInput, ...request.Option) (*s3.PutBucketPolicyOutput, error)",
          "364:  PutBucketPolicyRequest(*s3.PutBucketPolicyInput) (*request.Request, *s3.PutBucketPolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "370:  PutBucketOwnershipControls(*s3.PutBucketOwnershipControlsInput) (*s3.PutBucketOwnershipControlsOutput, error)",
          "371:  PutBucketOwnershipControlsWithContext(aws.Context, *s3.PutBucketOwnershipControlsInput, ...request.Option) (*s3.PutBucketOwnershipControlsOutput, error)",
          "372:  PutBucketOwnershipControlsRequest(*s3.PutBucketOwnershipControlsInput) (*request.Request, *s3.PutBucketOwnershipControlsOutput)",
          "",
          "---------------"
        ],
        "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
          "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
        ],
        "service/servicediscovery/api.go||service/servicediscovery/api.go": [
          "File: service/servicediscovery/api.go -> service/servicediscovery/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3222:  NamespaceName *string `type:\"string\" required:\"true\"`",
          "3228:  QueryParameters map[string]*string `type:\"map\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3229:  OptionalParameters map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3280:  return s",
          "3281: }",
          "3284: func (s *DiscoverInstancesInput) SetQueryParameters(v map[string]*string) *DiscoverInstancesInput {",
          "3285:  s.QueryParameters = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3290: func (s *DiscoverInstancesInput) SetOptionalParameters(v map[string]*string) *DiscoverInstancesInput {",
          "3291:  s.OptionalParameters = v",
          "3292:  return s",
          "3293: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01a2e64d5c2887667fa6d5dfcaeabf910a8dd3cc",
      "candidate_info": {
        "commit_hash": "01a2e64d5c2887667fa6d5dfcaeabf910a8dd3cc",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/01a2e64d5c2887667fa6d5dfcaeabf910a8dd3cc",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/quicksight/2018-04-01/api-2.json",
          "models/apis/quicksight/2018-04-01/docs-2.json",
          "models/apis/quicksight/2018-04-01/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/medialive/api.go",
          "service/medialive/medialiveiface/interface.go",
          "service/quicksight/api.go",
          "service/quicksight/quicksightiface/interface.go"
        ],
        "message": "Release v1.33.10 (2020-07-22) (#3437)\n\nRelease v1.33.10 (2020-07-22)\n===\n\n### Service Client Updates\n* `service/medialive`: Updates service API and documentation\n  * The AWS Elemental MediaLive APIs and SDKs now support the ability to get thumbnails for MediaLive devices that are attached or not attached to a channel. Previously, this thumbnail feature was available only on the console.\n* `service/quicksight`: Updates service API, documentation, and paginators\n  * New API operations - GetSessionEmbedUrl, CreateNamespace, DescribeNamespace, ListNamespaces, DeleteNamespace, DescribeAccountSettings, UpdateAccountSettings, CreateAccountCustomization, DescribeAccountCustomization, UpdateAccountCustomization, DeleteAccountCustomization. Modified API operations to support custom permissions restrictions - RegisterUser, UpdateUser, UpdateDashboardPermissions\n\n### SDK Enhancements\n* `example/aws/request/httptrace`: Update example with more metrics ([#3436](https://github.com/aws/aws-sdk-go/pull/3436))\n  * Updates the tracing example to include additional metrics such as SDKs request handlers, and support multiple request attempts.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/medialive/medialiveiface/interface.go||service/medialive/medialiveiface/interface.go",
          "service/quicksight/api.go||service/quicksight/api.go",
          "service/quicksight/quicksightiface/interface.go||service/quicksight/quicksightiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2539:   \"firehose\": service{",
          "2541:    Endpoints: endpoints{",
          "2542:     \"ap-east-1\":      endpoint{},",
          "2543:     \"ap-northeast-1\": endpoint{},",
          "2544:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2542:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2548:     \"ca-central-1\":   endpoint{},",
          "2549:     \"eu-central-1\":   endpoint{},",
          "2550:     \"eu-north-1\":     endpoint{},",
          "2551:     \"eu-west-1\":      endpoint{},",
          "2552:     \"eu-west-2\":      endpoint{},",
          "2553:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2552:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4128:     \"ca-central-1\":   endpoint{},",
          "4129:     \"eu-central-1\":   endpoint{},",
          "4130:     \"eu-north-1\":     endpoint{},",
          "4131:     \"eu-west-1\":      endpoint{},",
          "4132:     \"eu-west-2\":      endpoint{},",
          "4133:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4133:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.9\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.10\"",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import (",
          "6:  \"fmt\"",
          "8:  \"github.com/aws/aws-sdk-go/aws\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"io\"",
          "8:  \"time\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1639:  return out, req.Send()",
          "1640: }",
          "1642: const opDescribeInputSecurityGroup = \"DescribeInputSecurityGroup\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1644: const opDescribeInputDeviceThumbnail = \"DescribeInputDeviceThumbnail\"",
          "1670: func (c *MediaLive) DescribeInputDeviceThumbnailRequest(input *DescribeInputDeviceThumbnailInput) (req *request.Request, output *DescribeInputDeviceThumbnailOutput) {",
          "1671:  op := &request.Operation{",
          "1672:   Name:       opDescribeInputDeviceThumbnail,",
          "1673:   HTTPMethod: \"GET\",",
          "1674:   HTTPPath:   \"/prod/inputDevices/{inputDeviceId}/thumbnailData\",",
          "1675:  }",
          "1677:  if input == nil {",
          "1678:   input = &DescribeInputDeviceThumbnailInput{}",
          "1679:  }",
          "1681:  output = &DescribeInputDeviceThumbnailOutput{}",
          "1682:  req = c.newRequest(op, input, output)",
          "1683:  return",
          "1684: }",
          "1713: func (c *MediaLive) DescribeInputDeviceThumbnail(input *DescribeInputDeviceThumbnailInput) (*DescribeInputDeviceThumbnailOutput, error) {",
          "1714:  req, out := c.DescribeInputDeviceThumbnailRequest(input)",
          "1715:  return out, req.Send()",
          "1716: }",
          "1727: func (c *MediaLive) DescribeInputDeviceThumbnailWithContext(ctx aws.Context, input *DescribeInputDeviceThumbnailInput, opts ...request.Option) (*DescribeInputDeviceThumbnailOutput, error) {",
          "1728:  req, out := c.DescribeInputDeviceThumbnailRequest(input)",
          "1729:  req.SetContext(ctx)",
          "1730:  req.ApplyOptions(opts...)",
          "1731:  return out, req.Send()",
          "1732: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5247:  CodecSettings *AudioCodecSettings `locationName:\"codecSettings\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "5251:  LanguageCode *string `locationName:\"languageCode\" min:\"3\" type:\"string\"`",
          "",
          "[Added Lines]",
          "5344:  LanguageCode *string `locationName:\"languageCode\" min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5288:  if s.AudioSelectorName == nil {",
          "5289:   invalidParams.Add(request.NewErrParamRequired(\"AudioSelectorName\"))",
          "5290:  }",
          "5293:  }",
          "5294:  if s.Name == nil {",
          "5295:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "",
          "[Removed Lines]",
          "5291:  if s.LanguageCode != nil && len(*s.LanguageCode) < 3 {",
          "5292:   invalidParams.Add(request.NewErrParamMinLen(\"LanguageCode\", 3))",
          "",
          "[Added Lines]",
          "5384:  if s.LanguageCode != nil && len(*s.LanguageCode) < 1 {",
          "5385:   invalidParams.Add(request.NewErrParamMinLen(\"LanguageCode\", 1))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9307:  return s",
          "9308: }",
          "9310: type DescribeInputInput struct {",
          "9311:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9403: type DescribeInputDeviceThumbnailInput struct {",
          "9404:  _ struct{} `type:\"structure\"`",
          "9409:  Accept *string `location:\"header\" locationName:\"accept\" type:\"string\" required:\"true\" enum:\"AcceptHeader\"`",
          "9412:  InputDeviceId *string `location:\"uri\" locationName:\"inputDeviceId\" type:\"string\" required:\"true\"`",
          "9413: }",
          "9416: func (s DescribeInputDeviceThumbnailInput) String() string {",
          "9417:  return awsutil.Prettify(s)",
          "9418: }",
          "9421: func (s DescribeInputDeviceThumbnailInput) GoString() string {",
          "9422:  return s.String()",
          "9423: }",
          "9426: func (s *DescribeInputDeviceThumbnailInput) Validate() error {",
          "9427:  invalidParams := request.ErrInvalidParams{Context: \"DescribeInputDeviceThumbnailInput\"}",
          "9428:  if s.Accept == nil {",
          "9429:   invalidParams.Add(request.NewErrParamRequired(\"Accept\"))",
          "9430:  }",
          "9431:  if s.InputDeviceId == nil {",
          "9432:   invalidParams.Add(request.NewErrParamRequired(\"InputDeviceId\"))",
          "9433:  }",
          "9434:  if s.InputDeviceId != nil && len(*s.InputDeviceId) < 1 {",
          "9435:   invalidParams.Add(request.NewErrParamMinLen(\"InputDeviceId\", 1))",
          "9436:  }",
          "9438:  if invalidParams.Len() > 0 {",
          "9439:   return invalidParams",
          "9440:  }",
          "9441:  return nil",
          "9442: }",
          "9445: func (s *DescribeInputDeviceThumbnailInput) SetAccept(v string) *DescribeInputDeviceThumbnailInput {",
          "9446:  s.Accept = &v",
          "9447:  return s",
          "9448: }",
          "9451: func (s *DescribeInputDeviceThumbnailInput) SetInputDeviceId(v string) *DescribeInputDeviceThumbnailInput {",
          "9452:  s.InputDeviceId = &v",
          "9453:  return s",
          "9454: }",
          "9456: type DescribeInputDeviceThumbnailOutput struct {",
          "9457:  _ struct{} `type:\"structure\" payload:\"Body\"`",
          "9459:  Body io.ReadCloser `locationName:\"body\" type:\"blob\"`",
          "9461:  ContentLength *int64 `location:\"header\" locationName:\"Content-Length\" type:\"long\"`",
          "9463:  ContentType *string `location:\"header\" locationName:\"Content-Type\" type:\"string\" enum:\"ContentType\"`",
          "9465:  ETag *string `location:\"header\" locationName:\"ETag\" type:\"string\"`",
          "9467:  LastModified *time.Time `location:\"header\" locationName:\"Last-Modified\" type:\"timestamp\"`",
          "9468: }",
          "9471: func (s DescribeInputDeviceThumbnailOutput) String() string {",
          "9472:  return awsutil.Prettify(s)",
          "9473: }",
          "9476: func (s DescribeInputDeviceThumbnailOutput) GoString() string {",
          "9477:  return s.String()",
          "9478: }",
          "9481: func (s *DescribeInputDeviceThumbnailOutput) SetBody(v io.ReadCloser) *DescribeInputDeviceThumbnailOutput {",
          "9482:  s.Body = v",
          "9483:  return s",
          "9484: }",
          "9487: func (s *DescribeInputDeviceThumbnailOutput) SetContentLength(v int64) *DescribeInputDeviceThumbnailOutput {",
          "9488:  s.ContentLength = &v",
          "9489:  return s",
          "9490: }",
          "9493: func (s *DescribeInputDeviceThumbnailOutput) SetContentType(v string) *DescribeInputDeviceThumbnailOutput {",
          "9494:  s.ContentType = &v",
          "9495:  return s",
          "9496: }",
          "9499: func (s *DescribeInputDeviceThumbnailOutput) SetETag(v string) *DescribeInputDeviceThumbnailOutput {",
          "9500:  s.ETag = &v",
          "9501:  return s",
          "9502: }",
          "9505: func (s *DescribeInputDeviceThumbnailOutput) SetLastModified(v time.Time) *DescribeInputDeviceThumbnailOutput {",
          "9506:  s.LastModified = &v",
          "9507:  return s",
          "9508: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11998:  ParDenominator *int64 `locationName:\"parDenominator\" min:\"1\" type:\"integer\"`",
          "12004:  Profile *string `locationName:\"profile\" type:\"string\" enum:\"H264Profile\"`",
          "",
          "[Removed Lines]",
          "12001:  ParNumerator *int64 `locationName:\"parNumerator\" type:\"integer\"`",
          "",
          "[Added Lines]",
          "12201:  ParNumerator *int64 `locationName:\"parNumerator\" min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "12101:  if s.ParDenominator != nil && *s.ParDenominator < 1 {",
          "12102:   invalidParams.Add(request.NewErrParamMinValue(\"ParDenominator\", 1))",
          "12103:  }",
          "12104:  if s.QvbrQualityLevel != nil && *s.QvbrQualityLevel < 1 {",
          "12105:   invalidParams.Add(request.NewErrParamMinValue(\"QvbrQualityLevel\", 1))",
          "12106:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12304:  if s.ParNumerator != nil && *s.ParNumerator < 1 {",
          "12305:   invalidParams.Add(request.NewErrParamMinValue(\"ParNumerator\", 1))",
          "12306:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "14866:  InputAttachmentNameReference *string `locationName:\"inputAttachmentNameReference\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "15070:  InputAttachmentNameReference *string `locationName:\"inputAttachmentNameReference\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "14890: func (s *InputPrepareScheduleActionSettings) Validate() error {",
          "14891:  invalidParams := request.ErrInvalidParams{Context: \"InputPrepareScheduleActionSettings\"}",
          "14895:  if s.InputClippingSettings != nil {",
          "14896:   if err := s.InputClippingSettings.Validate(); err != nil {",
          "14897:    invalidParams.AddNested(\"InputClippingSettings\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "14892:  if s.InputAttachmentNameReference == nil {",
          "14893:   invalidParams.Add(request.NewErrParamRequired(\"InputAttachmentNameReference\"))",
          "14894:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "23817:  Ac3MetadataControlUseConfigured = \"USE_CONFIGURED\"",
          "23818: )",
          "23821: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24022: const (",
          "24024:  AcceptHeaderImageJpeg = \"image/jpeg\"",
          "24025: )",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "24078:  ChannelStateUpdateFailed = \"UPDATE_FAILED\"",
          "24079: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24288: const (",
          "24290:  ContentTypeImageJpeg = \"image/jpeg\"",
          "24291: )",
          "",
          "---------------"
        ],
        "service/medialive/medialiveiface/interface.go||service/medialive/medialiveiface/interface.go": [
          "File: service/medialive/medialiveiface/interface.go -> service/medialive/medialiveiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:  DescribeInputDeviceWithContext(aws.Context, *medialive.DescribeInputDeviceInput, ...request.Option) (*medialive.DescribeInputDeviceOutput, error)",
          "133:  DescribeInputDeviceRequest(*medialive.DescribeInputDeviceInput) (*request.Request, *medialive.DescribeInputDeviceOutput)",
          "135:  DescribeInputSecurityGroup(*medialive.DescribeInputSecurityGroupInput) (*medialive.DescribeInputSecurityGroupOutput, error)",
          "136:  DescribeInputSecurityGroupWithContext(aws.Context, *medialive.DescribeInputSecurityGroupInput, ...request.Option) (*medialive.DescribeInputSecurityGroupOutput, error)",
          "137:  DescribeInputSecurityGroupRequest(*medialive.DescribeInputSecurityGroupInput) (*request.Request, *medialive.DescribeInputSecurityGroupOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:  DescribeInputDeviceThumbnail(*medialive.DescribeInputDeviceThumbnailInput) (*medialive.DescribeInputDeviceThumbnailOutput, error)",
          "136:  DescribeInputDeviceThumbnailWithContext(aws.Context, *medialive.DescribeInputDeviceThumbnailInput, ...request.Option) (*medialive.DescribeInputDeviceThumbnailOutput, error)",
          "137:  DescribeInputDeviceThumbnailRequest(*medialive.DescribeInputDeviceThumbnailInput) (*request.Request, *medialive.DescribeInputDeviceThumbnailOutput)",
          "",
          "---------------"
        ],
        "service/quicksight/api.go||service/quicksight/api.go": [
          "File: service/quicksight/api.go -> service/quicksight/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:  return out, req.Send()",
          "111: }",
          "113: const opCreateDashboard = \"CreateDashboard\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: const opCreateAccountCustomization = \"CreateAccountCustomization\"",
          "139: func (c *QuickSight) CreateAccountCustomizationRequest(input *CreateAccountCustomizationInput) (req *request.Request, output *CreateAccountCustomizationOutput) {",
          "140:  op := &request.Operation{",
          "141:   Name:       opCreateAccountCustomization,",
          "142:   HTTPMethod: \"POST\",",
          "143:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "144:  }",
          "146:  if input == nil {",
          "147:   input = &CreateAccountCustomizationInput{}",
          "148:  }",
          "150:  output = &CreateAccountCustomizationOutput{}",
          "151:  req = c.newRequest(op, input, output)",
          "152:  return",
          "153: }",
          "194: func (c *QuickSight) CreateAccountCustomization(input *CreateAccountCustomizationInput) (*CreateAccountCustomizationOutput, error) {",
          "195:  req, out := c.CreateAccountCustomizationRequest(input)",
          "196:  return out, req.Send()",
          "197: }",
          "208: func (c *QuickSight) CreateAccountCustomizationWithContext(ctx aws.Context, input *CreateAccountCustomizationInput, opts ...request.Option) (*CreateAccountCustomizationOutput, error) {",
          "209:  req, out := c.CreateAccountCustomizationRequest(input)",
          "210:  req.SetContext(ctx)",
          "211:  req.ApplyOptions(opts...)",
          "212:  return out, req.Send()",
          "213: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "855:  return out, req.Send()",
          "856: }",
          "858: const opCreateTemplate = \"CreateTemplate\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "960: const opCreateNamespace = \"CreateNamespace\"",
          "986: func (c *QuickSight) CreateNamespaceRequest(input *CreateNamespaceInput) (req *request.Request, output *CreateNamespaceOutput) {",
          "987:  op := &request.Operation{",
          "988:   Name:       opCreateNamespace,",
          "989:   HTTPMethod: \"POST\",",
          "990:   HTTPPath:   \"/accounts/{AwsAccountId}\",",
          "991:  }",
          "993:  if input == nil {",
          "994:   input = &CreateNamespaceInput{}",
          "995:  }",
          "997:  output = &CreateNamespaceOutput{}",
          "998:  req = c.newRequest(op, input, output)",
          "999:  return",
          "1000: }",
          "1058: func (c *QuickSight) CreateNamespace(input *CreateNamespaceInput) (*CreateNamespaceOutput, error) {",
          "1059:  req, out := c.CreateNamespaceRequest(input)",
          "1060:  return out, req.Send()",
          "1061: }",
          "1072: func (c *QuickSight) CreateNamespaceWithContext(ctx aws.Context, input *CreateNamespaceInput, opts ...request.Option) (*CreateNamespaceOutput, error) {",
          "1073:  req, out := c.CreateNamespaceRequest(input)",
          "1074:  req.SetContext(ctx)",
          "1075:  req.ApplyOptions(opts...)",
          "1076:  return out, req.Send()",
          "1077: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1291:  return out, req.Send()",
          "1292: }",
          "1294: const opDeleteDashboard = \"DeleteDashboard\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1515: const opDeleteAccountCustomization = \"DeleteAccountCustomization\"",
          "1541: func (c *QuickSight) DeleteAccountCustomizationRequest(input *DeleteAccountCustomizationInput) (req *request.Request, output *DeleteAccountCustomizationOutput) {",
          "1542:  op := &request.Operation{",
          "1543:   Name:       opDeleteAccountCustomization,",
          "1544:   HTTPMethod: \"DELETE\",",
          "1545:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "1546:  }",
          "1548:  if input == nil {",
          "1549:   input = &DeleteAccountCustomizationInput{}",
          "1550:  }",
          "1552:  output = &DeleteAccountCustomizationOutput{}",
          "1553:  req = c.newRequest(op, input, output)",
          "1554:  return",
          "1555: }",
          "1592: func (c *QuickSight) DeleteAccountCustomization(input *DeleteAccountCustomizationInput) (*DeleteAccountCustomizationOutput, error) {",
          "1593:  req, out := c.DeleteAccountCustomizationRequest(input)",
          "1594:  return out, req.Send()",
          "1595: }",
          "1606: func (c *QuickSight) DeleteAccountCustomizationWithContext(ctx aws.Context, input *DeleteAccountCustomizationInput, opts ...request.Option) (*DeleteAccountCustomizationOutput, error) {",
          "1607:  req, out := c.DeleteAccountCustomizationRequest(input)",
          "1608:  req.SetContext(ctx)",
          "1609:  req.ApplyOptions(opts...)",
          "1610:  return out, req.Send()",
          "1611: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1884:  return out, req.Send()",
          "1885: }",
          "1914:  op := &request.Operation{",
          "1916:   HTTPMethod: \"DELETE\",",
          "1918:  }",
          "1920:  if input == nil {",
          "1922:  }",
          "1925:  req = c.newRequest(op, input, output)",
          "1926:  return",
          "1927: }",
          "",
          "[Removed Lines]",
          "1887: const opDeleteTemplate = \"DeleteTemplate\"",
          "1913: func (c *QuickSight) DeleteTemplateRequest(input *DeleteTemplateInput) (req *request.Request, output *DeleteTemplateOutput) {",
          "1915:   Name:       opDeleteTemplate,",
          "1917:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}\",",
          "1921:   input = &DeleteTemplateInput{}",
          "1924:  output = &DeleteTemplateOutput{}",
          "",
          "[Added Lines]",
          "2206: const opDeleteNamespace = \"DeleteNamespace\"",
          "2232: func (c *QuickSight) DeleteNamespaceRequest(input *DeleteNamespaceInput) (req *request.Request, output *DeleteNamespaceOutput) {",
          "2234:   Name:       opDeleteNamespace,",
          "2236:   HTTPPath:   \"/accounts/{AwsAccountId}/namespaces/{Namespace}\",",
          "2240:   input = &DeleteNamespaceInput{}",
          "2243:  output = &DeleteNamespaceOutput{}",
          "2244:  req = c.newRequest(op, input, output)",
          "2245:  return",
          "2246: }",
          "2289: func (c *QuickSight) DeleteNamespace(input *DeleteNamespaceInput) (*DeleteNamespaceOutput, error) {",
          "2290:  req, out := c.DeleteNamespaceRequest(input)",
          "2291:  return out, req.Send()",
          "2292: }",
          "2303: func (c *QuickSight) DeleteNamespaceWithContext(ctx aws.Context, input *DeleteNamespaceInput, opts ...request.Option) (*DeleteNamespaceOutput, error) {",
          "2304:  req, out := c.DeleteNamespaceRequest(input)",
          "2305:  req.SetContext(ctx)",
          "2306:  req.ApplyOptions(opts...)",
          "2307:  return out, req.Send()",
          "2308: }",
          "2310: const opDeleteTemplate = \"DeleteTemplate\"",
          "2336: func (c *QuickSight) DeleteTemplateRequest(input *DeleteTemplateInput) (req *request.Request, output *DeleteTemplateOutput) {",
          "2337:  op := &request.Operation{",
          "2338:   Name:       opDeleteTemplate,",
          "2339:   HTTPMethod: \"DELETE\",",
          "2340:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}\",",
          "2341:  }",
          "2343:  if input == nil {",
          "2344:   input = &DeleteTemplateInput{}",
          "2345:  }",
          "2347:  output = &DeleteTemplateOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2481:  return out, req.Send()",
          "2482: }",
          "2484: const opDescribeDashboard = \"DescribeDashboard\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2913: const opDescribeAccountCustomization = \"DescribeAccountCustomization\"",
          "2939: func (c *QuickSight) DescribeAccountCustomizationRequest(input *DescribeAccountCustomizationInput) (req *request.Request, output *DescribeAccountCustomizationOutput) {",
          "2940:  op := &request.Operation{",
          "2941:   Name:       opDescribeAccountCustomization,",
          "2942:   HTTPMethod: \"GET\",",
          "2943:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "2944:  }",
          "2946:  if input == nil {",
          "2947:   input = &DescribeAccountCustomizationInput{}",
          "2948:  }",
          "2950:  output = &DescribeAccountCustomizationOutput{}",
          "2951:  req = c.newRequest(op, input, output)",
          "2952:  return",
          "2953: }",
          "2990: func (c *QuickSight) DescribeAccountCustomization(input *DescribeAccountCustomizationInput) (*DescribeAccountCustomizationOutput, error) {",
          "2991:  req, out := c.DescribeAccountCustomizationRequest(input)",
          "2992:  return out, req.Send()",
          "2993: }",
          "3004: func (c *QuickSight) DescribeAccountCustomizationWithContext(ctx aws.Context, input *DescribeAccountCustomizationInput, opts ...request.Option) (*DescribeAccountCustomizationOutput, error) {",
          "3005:  req, out := c.DescribeAccountCustomizationRequest(input)",
          "3006:  req.SetContext(ctx)",
          "3007:  req.ApplyOptions(opts...)",
          "3008:  return out, req.Send()",
          "3009: }",
          "3011: const opDescribeAccountSettings = \"DescribeAccountSettings\"",
          "3037: func (c *QuickSight) DescribeAccountSettingsRequest(input *DescribeAccountSettingsInput) (req *request.Request, output *DescribeAccountSettingsOutput) {",
          "3038:  op := &request.Operation{",
          "3039:   Name:       opDescribeAccountSettings,",
          "3040:   HTTPMethod: \"GET\",",
          "3041:   HTTPPath:   \"/accounts/{AwsAccountId}/settings\",",
          "3042:  }",
          "3044:  if input == nil {",
          "3045:   input = &DescribeAccountSettingsInput{}",
          "3046:  }",
          "3048:  output = &DescribeAccountSettingsOutput{}",
          "3049:  req = c.newRequest(op, input, output)",
          "3050:  return",
          "3051: }",
          "3089: func (c *QuickSight) DescribeAccountSettings(input *DescribeAccountSettingsInput) (*DescribeAccountSettingsOutput, error) {",
          "3090:  req, out := c.DescribeAccountSettingsRequest(input)",
          "3091:  return out, req.Send()",
          "3092: }",
          "3103: func (c *QuickSight) DescribeAccountSettingsWithContext(ctx aws.Context, input *DescribeAccountSettingsInput, opts ...request.Option) (*DescribeAccountSettingsOutput, error) {",
          "3104:  req, out := c.DescribeAccountSettingsRequest(input)",
          "3105:  req.SetContext(ctx)",
          "3106:  req.ApplyOptions(opts...)",
          "3107:  return out, req.Send()",
          "3108: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3357:  return out, req.Send()",
          "3358: }",
          "3386: func (c *QuickSight) DescribeTemplateRequest(input *DescribeTemplateInput) (req *request.Request, output *DescribeTemplateOutput) {",
          "3387:  op := &request.Operation{",
          "3388:   Name:       opDescribeTemplate,",
          "",
          "[Removed Lines]",
          "3360: const opDescribeTemplate = \"DescribeTemplate\"",
          "",
          "[Added Lines]",
          "3986: const opDescribeNamespace = \"DescribeNamespace\"",
          "4012: func (c *QuickSight) DescribeNamespaceRequest(input *DescribeNamespaceInput) (req *request.Request, output *DescribeNamespaceOutput) {",
          "4013:  op := &request.Operation{",
          "4014:   Name:       opDescribeNamespace,",
          "4015:   HTTPMethod: \"GET\",",
          "4016:   HTTPPath:   \"/accounts/{AwsAccountId}/namespaces/{Namespace}\",",
          "4017:  }",
          "4019:  if input == nil {",
          "4020:   input = &DescribeNamespaceInput{}",
          "4021:  }",
          "4023:  output = &DescribeNamespaceOutput{}",
          "4024:  req = c.newRequest(op, input, output)",
          "4025:  return",
          "4026: }",
          "4063: func (c *QuickSight) DescribeNamespace(input *DescribeNamespaceInput) (*DescribeNamespaceOutput, error) {",
          "4064:  req, out := c.DescribeNamespaceRequest(input)",
          "4065:  return out, req.Send()",
          "4066: }",
          "4077: func (c *QuickSight) DescribeNamespaceWithContext(ctx aws.Context, input *DescribeNamespaceInput, opts ...request.Option) (*DescribeNamespaceOutput, error) {",
          "4078:  req, out := c.DescribeNamespaceRequest(input)",
          "4079:  req.SetContext(ctx)",
          "4080:  req.ApplyOptions(opts...)",
          "4081:  return out, req.Send()",
          "4082: }",
          "4084: const opDescribeTemplate = \"DescribeTemplate\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4192:  return out, req.Send()",
          "4193: }",
          "4195: const opListDashboardVersions = \"ListDashboardVersions\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4922: const opGetSessionEmbedUrl = \"GetSessionEmbedUrl\"",
          "4948: func (c *QuickSight) GetSessionEmbedUrlRequest(input *GetSessionEmbedUrlInput) (req *request.Request, output *GetSessionEmbedUrlOutput) {",
          "4949:  op := &request.Operation{",
          "4950:   Name:       opGetSessionEmbedUrl,",
          "4951:   HTTPMethod: \"GET\",",
          "4952:   HTTPPath:   \"/accounts/{AwsAccountId}/session-embed-url\",",
          "4953:  }",
          "4955:  if input == nil {",
          "4956:   input = &GetSessionEmbedUrlInput{}",
          "4957:  }",
          "4959:  output = &GetSessionEmbedUrlOutput{}",
          "4960:  req = c.newRequest(op, input, output)",
          "4961:  return",
          "4962: }",
          "5015: func (c *QuickSight) GetSessionEmbedUrl(input *GetSessionEmbedUrlInput) (*GetSessionEmbedUrlOutput, error) {",
          "5016:  req, out := c.GetSessionEmbedUrlRequest(input)",
          "5017:  return out, req.Send()",
          "5018: }",
          "5029: func (c *QuickSight) GetSessionEmbedUrlWithContext(ctx aws.Context, input *GetSessionEmbedUrlInput, opts ...request.Option) (*GetSessionEmbedUrlOutput, error) {",
          "5030:  req, out := c.GetSessionEmbedUrlRequest(input)",
          "5031:  req.SetContext(ctx)",
          "5032:  req.ApplyOptions(opts...)",
          "5033:  return out, req.Send()",
          "5034: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5374:  return p.Err()",
          "5375: }",
          "5404:  op := &request.Operation{",
          "5406:   HTTPMethod: \"GET\",",
          "5408:  }",
          "5410:  if input == nil {",
          "5412:  }",
          "5415:  req = c.newRequest(op, input, output)",
          "5416:  return",
          "5417: }",
          "",
          "[Removed Lines]",
          "5377: const opListTagsForResource = \"ListTagsForResource\"",
          "5403: func (c *QuickSight) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "5405:   Name:       opListTagsForResource,",
          "5407:   HTTPPath:   \"/resources/{ResourceArn}/tags\",",
          "5411:   input = &ListTagsForResourceInput{}",
          "5414:  output = &ListTagsForResourceOutput{}",
          "",
          "[Added Lines]",
          "6218: const opListNamespaces = \"ListNamespaces\"",
          "6244: func (c *QuickSight) ListNamespacesRequest(input *ListNamespacesInput) (req *request.Request, output *ListNamespacesOutput) {",
          "6246:   Name:       opListNamespaces,",
          "6248:   HTTPPath:   \"/accounts/{AwsAccountId}/namespaces\",",
          "6249:   Paginator: &request.Paginator{",
          "6250:    InputTokens:     []string{\"NextToken\"},",
          "6251:    OutputTokens:    []string{\"NextToken\"},",
          "6252:    LimitToken:      \"MaxResults\",",
          "6253:    TruncationToken: \"\",",
          "6254:   },",
          "6258:   input = &ListNamespacesInput{}",
          "6261:  output = &ListNamespacesOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5453:  return out, req.Send()",
          "5454: }",
          "5467:  req.SetContext(ctx)",
          "5468:  req.ApplyOptions(opts...)",
          "5469:  return out, req.Send()",
          "5470: }",
          "5508:   },",
          "5509:  }",
          "",
          "[Removed Lines]",
          "5451: func (c *QuickSight) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "5452:  req, out := c.ListTagsForResourceRequest(input)",
          "5465: func (c *QuickSight) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "5466:  req, out := c.ListTagsForResourceRequest(input)",
          "5472: const opListTemplateAliases = \"ListTemplateAliases\"",
          "5498: func (c *QuickSight) ListTemplateAliasesRequest(input *ListTemplateAliasesInput) (req *request.Request, output *ListTemplateAliasesOutput) {",
          "5499:  op := &request.Operation{",
          "5500:   Name:       opListTemplateAliases,",
          "5501:   HTTPMethod: \"GET\",",
          "5502:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}/aliases\",",
          "5503:   Paginator: &request.Paginator{",
          "5504:    InputTokens:     []string{\"NextToken\"},",
          "5505:    OutputTokens:    []string{\"NextToken\"},",
          "5506:    LimitToken:      \"MaxResults\",",
          "5507:    TruncationToken: \"\",",
          "",
          "[Added Lines]",
          "6307: func (c *QuickSight) ListNamespaces(input *ListNamespacesInput) (*ListNamespacesOutput, error) {",
          "6308:  req, out := c.ListNamespacesRequest(input)",
          "6321: func (c *QuickSight) ListNamespacesWithContext(ctx aws.Context, input *ListNamespacesInput, opts ...request.Option) (*ListNamespacesOutput, error) {",
          "6322:  req, out := c.ListNamespacesRequest(input)",
          "6345: func (c *QuickSight) ListNamespacesPages(input *ListNamespacesInput, fn func(*ListNamespacesOutput, bool) bool) error {",
          "6346:  return c.ListNamespacesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "6347: }",
          "6356: func (c *QuickSight) ListNamespacesPagesWithContext(ctx aws.Context, input *ListNamespacesInput, fn func(*ListNamespacesOutput, bool) bool, opts ...request.Option) error {",
          "6357:  p := request.Pagination{",
          "6358:   NewRequest: func() (*request.Request, error) {",
          "6359:    var inCpy *ListNamespacesInput",
          "6360:    if input != nil {",
          "6361:     tmp := *input",
          "6362:     inCpy = &tmp",
          "6363:    }",
          "6364:    req, _ := c.ListNamespacesRequest(inCpy)",
          "6365:    req.SetContext(ctx)",
          "6366:    req.ApplyOptions(opts...)",
          "6367:    return req, nil",
          "6368:   },",
          "6369:  }",
          "6371:  for p.Next() {",
          "6372:   if !fn(p.Page().(*ListNamespacesOutput), !p.HasNextPage()) {",
          "6373:    break",
          "6374:   }",
          "6375:  }",
          "6377:  return p.Err()",
          "6378: }",
          "6380: const opListTagsForResource = \"ListTagsForResource\"",
          "6406: func (c *QuickSight) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "6407:  op := &request.Operation{",
          "6408:   Name:       opListTagsForResource,",
          "6409:   HTTPMethod: \"GET\",",
          "6410:   HTTPPath:   \"/resources/{ResourceArn}/tags\",",
          "6411:  }",
          "6413:  if input == nil {",
          "6414:   input = &ListTagsForResourceInput{}",
          "6415:  }",
          "6417:  output = &ListTagsForResourceOutput{}",
          "6418:  req = c.newRequest(op, input, output)",
          "6419:  return",
          "6420: }",
          "6454: func (c *QuickSight) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "6455:  req, out := c.ListTagsForResourceRequest(input)",
          "6456:  return out, req.Send()",
          "6457: }",
          "6468: func (c *QuickSight) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "6469:  req, out := c.ListTagsForResourceRequest(input)",
          "6470:  req.SetContext(ctx)",
          "6471:  req.ApplyOptions(opts...)",
          "6472:  return out, req.Send()",
          "6473: }",
          "6475: const opListTemplateAliases = \"ListTemplateAliases\"",
          "6501: func (c *QuickSight) ListTemplateAliasesRequest(input *ListTemplateAliasesInput) (req *request.Request, output *ListTemplateAliasesOutput) {",
          "6502:  op := &request.Operation{",
          "6503:   Name:       opListTemplateAliases,",
          "6504:   HTTPMethod: \"GET\",",
          "6505:   HTTPPath:   \"/accounts/{AwsAccountId}/templates/{TemplateId}/aliases\",",
          "6506:   Paginator: &request.Paginator{",
          "6507:    InputTokens:     []string{\"NextToken\"},",
          "6508:    OutputTokens:    []string{\"NextToken\"},",
          "6509:    LimitToken:      \"MaxResults\",",
          "6510:    TruncationToken: \"\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6919:  return out, req.Send()",
          "6920: }",
          "6949:  op := &request.Operation{",
          "6951:   HTTPMethod: \"PUT\",",
          "6953:  }",
          "6955:  if input == nil {",
          "6957:  }",
          "6960:  req = c.newRequest(op, input, output)",
          "6961:  return",
          "6962: }",
          "",
          "[Removed Lines]",
          "6922: const opUpdateDashboard = \"UpdateDashboard\"",
          "6948: func (c *QuickSight) UpdateDashboardRequest(input *UpdateDashboardInput) (req *request.Request, output *UpdateDashboardOutput) {",
          "6950:   Name:       opUpdateDashboard,",
          "6952:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}\",",
          "6956:   input = &UpdateDashboardInput{}",
          "6959:  output = &UpdateDashboardOutput{}",
          "",
          "[Added Lines]",
          "7931: const opUpdateAccountCustomization = \"UpdateAccountCustomization\"",
          "7957: func (c *QuickSight) UpdateAccountCustomizationRequest(input *UpdateAccountCustomizationInput) (req *request.Request, output *UpdateAccountCustomizationOutput) {",
          "7959:   Name:       opUpdateAccountCustomization,",
          "7961:   HTTPPath:   \"/accounts/{AwsAccountId}/customizations\",",
          "7965:   input = &UpdateAccountCustomizationInput{}",
          "7968:  output = &UpdateAccountCustomizationOutput{}",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "7003:  return out, req.Send()",
          "7004: }",
          "7017:  req.SetContext(ctx)",
          "7018:  req.ApplyOptions(opts...)",
          "7019:  return out, req.Send()",
          "7020: }",
          "7049:  op := &request.Operation{",
          "7051:   HTTPMethod: \"PUT\",",
          "7053:  }",
          "7055:  if input == nil {",
          "7057:  }",
          "7060:  req = c.newRequest(op, input, output)",
          "7061:  return",
          "7062: }",
          "",
          "[Removed Lines]",
          "7001: func (c *QuickSight) UpdateDashboard(input *UpdateDashboardInput) (*UpdateDashboardOutput, error) {",
          "7002:  req, out := c.UpdateDashboardRequest(input)",
          "7015: func (c *QuickSight) UpdateDashboardWithContext(ctx aws.Context, input *UpdateDashboardInput, opts ...request.Option) (*UpdateDashboardOutput, error) {",
          "7016:  req, out := c.UpdateDashboardRequest(input)",
          "7022: const opUpdateDashboardPermissions = \"UpdateDashboardPermissions\"",
          "7048: func (c *QuickSight) UpdateDashboardPermissionsRequest(input *UpdateDashboardPermissionsInput) (req *request.Request, output *UpdateDashboardPermissionsOutput) {",
          "7050:   Name:       opUpdateDashboardPermissions,",
          "7052:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions\",",
          "7056:   input = &UpdateDashboardPermissionsInput{}",
          "7059:  output = &UpdateDashboardPermissionsOutput{}",
          "",
          "[Added Lines]",
          "8009: func (c *QuickSight) UpdateAccountCustomization(input *UpdateAccountCustomizationInput) (*UpdateAccountCustomizationOutput, error) {",
          "8010:  req, out := c.UpdateAccountCustomizationRequest(input)",
          "8023: func (c *QuickSight) UpdateAccountCustomizationWithContext(ctx aws.Context, input *UpdateAccountCustomizationInput, opts ...request.Option) (*UpdateAccountCustomizationOutput, error) {",
          "8024:  req, out := c.UpdateAccountCustomizationRequest(input)",
          "8030: const opUpdateAccountSettings = \"UpdateAccountSettings\"",
          "8056: func (c *QuickSight) UpdateAccountSettingsRequest(input *UpdateAccountSettingsInput) (req *request.Request, output *UpdateAccountSettingsOutput) {",
          "8058:   Name:       opUpdateAccountSettings,",
          "8060:   HTTPPath:   \"/accounts/{AwsAccountId}/settings\",",
          "8064:   input = &UpdateAccountSettingsInput{}",
          "8067:  output = &UpdateAccountSettingsOutput{}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7100:  return out, req.Send()",
          "7101: }",
          "7114:  req.SetContext(ctx)",
          "7115:  req.ApplyOptions(opts...)",
          "7116:  return out, req.Send()",
          "7117: }",
          "",
          "[Removed Lines]",
          "7098: func (c *QuickSight) UpdateDashboardPermissions(input *UpdateDashboardPermissionsInput) (*UpdateDashboardPermissionsOutput, error) {",
          "7099:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "7112: func (c *QuickSight) UpdateDashboardPermissionsWithContext(ctx aws.Context, input *UpdateDashboardPermissionsInput, opts ...request.Option) (*UpdateDashboardPermissionsOutput, error) {",
          "7113:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "7119: const opUpdateDashboardPublishedVersion = \"UpdateDashboardPublishedVersion\"",
          "",
          "[Added Lines]",
          "8107: func (c *QuickSight) UpdateAccountSettings(input *UpdateAccountSettingsInput) (*UpdateAccountSettingsOutput, error) {",
          "8108:  req, out := c.UpdateAccountSettingsRequest(input)",
          "8121: func (c *QuickSight) UpdateAccountSettingsWithContext(ctx aws.Context, input *UpdateAccountSettingsInput, opts ...request.Option) (*UpdateAccountSettingsOutput, error) {",
          "8122:  req, out := c.UpdateAccountSettingsRequest(input)",
          "8128: const opUpdateDashboard = \"UpdateDashboard\"",
          "8154: func (c *QuickSight) UpdateDashboardRequest(input *UpdateDashboardInput) (req *request.Request, output *UpdateDashboardOutput) {",
          "8155:  op := &request.Operation{",
          "8156:   Name:       opUpdateDashboard,",
          "8157:   HTTPMethod: \"PUT\",",
          "8158:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}\",",
          "8159:  }",
          "8161:  if input == nil {",
          "8162:   input = &UpdateDashboardInput{}",
          "8163:  }",
          "8165:  output = &UpdateDashboardOutput{}",
          "8166:  req = c.newRequest(op, input, output)",
          "8167:  return",
          "8168: }",
          "8207: func (c *QuickSight) UpdateDashboard(input *UpdateDashboardInput) (*UpdateDashboardOutput, error) {",
          "8208:  req, out := c.UpdateDashboardRequest(input)",
          "8209:  return out, req.Send()",
          "8210: }",
          "8221: func (c *QuickSight) UpdateDashboardWithContext(ctx aws.Context, input *UpdateDashboardInput, opts ...request.Option) (*UpdateDashboardOutput, error) {",
          "8222:  req, out := c.UpdateDashboardRequest(input)",
          "8223:  req.SetContext(ctx)",
          "8224:  req.ApplyOptions(opts...)",
          "8225:  return out, req.Send()",
          "8226: }",
          "8228: const opUpdateDashboardPermissions = \"UpdateDashboardPermissions\"",
          "8254: func (c *QuickSight) UpdateDashboardPermissionsRequest(input *UpdateDashboardPermissionsInput) (req *request.Request, output *UpdateDashboardPermissionsOutput) {",
          "8255:  op := &request.Operation{",
          "8256:   Name:       opUpdateDashboardPermissions,",
          "8257:   HTTPMethod: \"PUT\",",
          "8258:   HTTPPath:   \"/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions\",",
          "8259:  }",
          "8261:  if input == nil {",
          "8262:   input = &UpdateDashboardPermissionsInput{}",
          "8263:  }",
          "8265:  output = &UpdateDashboardPermissionsOutput{}",
          "8266:  req = c.newRequest(op, input, output)",
          "8267:  return",
          "8268: }",
          "8304: func (c *QuickSight) UpdateDashboardPermissions(input *UpdateDashboardPermissionsInput) (*UpdateDashboardPermissionsOutput, error) {",
          "8305:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "8306:  return out, req.Send()",
          "8307: }",
          "8318: func (c *QuickSight) UpdateDashboardPermissionsWithContext(ctx aws.Context, input *UpdateDashboardPermissionsInput, opts ...request.Option) (*UpdateDashboardPermissionsOutput, error) {",
          "8319:  req, out := c.UpdateDashboardPermissionsRequest(input)",
          "8320:  req.SetContext(ctx)",
          "8321:  req.ApplyOptions(opts...)",
          "8322:  return out, req.Send()",
          "8323: }",
          "8325: const opUpdateDashboardPublishedVersion = \"UpdateDashboardPublishedVersion\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "8601:  return s.RespMetadata.RequestID",
          "8602: }",
          "8605: type ActiveIAMPolicyAssignment struct {",
          "8606:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9814: type AccountCustomization struct {",
          "9815:  _ struct{} `type:\"structure\"`",
          "9818:  DefaultTheme *string `type:\"string\"`",
          "9819: }",
          "9822: func (s AccountCustomization) String() string {",
          "9823:  return awsutil.Prettify(s)",
          "9824: }",
          "9827: func (s AccountCustomization) GoString() string {",
          "9828:  return s.String()",
          "9829: }",
          "9832: func (s *AccountCustomization) SetDefaultTheme(v string) *AccountCustomization {",
          "9833:  s.DefaultTheme = &v",
          "9834:  return s",
          "9835: }",
          "9838: type AccountSettings struct {",
          "9839:  _ struct{} `type:\"structure\"`",
          "9842:  AccountName *string `type:\"string\"`",
          "9845:  DefaultNamespace *string `type:\"string\"`",
          "9848:  Edition *string `type:\"string\" enum:\"Edition\"`",
          "9851:  NotificationEmail *string `type:\"string\"`",
          "9852: }",
          "9855: func (s AccountSettings) String() string {",
          "9856:  return awsutil.Prettify(s)",
          "9857: }",
          "9860: func (s AccountSettings) GoString() string {",
          "9861:  return s.String()",
          "9862: }",
          "9865: func (s *AccountSettings) SetAccountName(v string) *AccountSettings {",
          "9866:  s.AccountName = &v",
          "9867:  return s",
          "9868: }",
          "9871: func (s *AccountSettings) SetDefaultNamespace(v string) *AccountSettings {",
          "9872:  s.DefaultNamespace = &v",
          "9873:  return s",
          "9874: }",
          "9877: func (s *AccountSettings) SetEdition(v string) *AccountSettings {",
          "9878:  s.Edition = &v",
          "9879:  return s",
          "9880: }",
          "9883: func (s *AccountSettings) SetNotificationEmail(v string) *AccountSettings {",
          "9884:  s.NotificationEmail = &v",
          "9885:  return s",
          "9886: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "9508:  return s.RespMetadata.RequestID",
          "9509: }",
          "9514:  _ struct{} `type:\"structure\"`",
          "9520: }",
          "9524:  return awsutil.Prettify(s)",
          "9525: }",
          "9529:  return s.String()",
          "9530: }",
          "9534:  invalidParams := request.ErrInvalidParams{Context: \"CreateColumnsOperation\"}",
          "9535:  if s.Columns == nil {",
          "9536:   invalidParams.Add(request.NewErrParamRequired(\"Columns\"))",
          "",
          "[Removed Lines]",
          "9513: type CreateColumnsOperation struct {",
          "9519:  Columns []*CalculatedColumn `min:\"1\" type:\"list\" required:\"true\"`",
          "9523: func (s CreateColumnsOperation) String() string {",
          "9528: func (s CreateColumnsOperation) GoString() string {",
          "9533: func (s *CreateColumnsOperation) Validate() error {",
          "",
          "[Added Lines]",
          "10795: type CreateAccountCustomizationInput struct {",
          "10804:  AccountCustomization *AccountCustomization `type:\"structure\" required:\"true\"`",
          "10809:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "10812:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "10816: func (s CreateAccountCustomizationInput) String() string {",
          "10821: func (s CreateAccountCustomizationInput) GoString() string {",
          "10826: func (s *CreateAccountCustomizationInput) Validate() error {",
          "10827:  invalidParams := request.ErrInvalidParams{Context: \"CreateAccountCustomizationInput\"}",
          "10828:  if s.AccountCustomization == nil {",
          "10829:   invalidParams.Add(request.NewErrParamRequired(\"AccountCustomization\"))",
          "10830:  }",
          "10831:  if s.AwsAccountId == nil {",
          "10832:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "10833:  }",
          "10834:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "10835:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "10836:  }",
          "10838:  if invalidParams.Len() > 0 {",
          "10839:   return invalidParams",
          "10840:  }",
          "10841:  return nil",
          "10842: }",
          "10845: func (s *CreateAccountCustomizationInput) SetAccountCustomization(v *AccountCustomization) *CreateAccountCustomizationInput {",
          "10846:  s.AccountCustomization = v",
          "10847:  return s",
          "10848: }",
          "10851: func (s *CreateAccountCustomizationInput) SetAwsAccountId(v string) *CreateAccountCustomizationInput {",
          "10852:  s.AwsAccountId = &v",
          "10853:  return s",
          "10854: }",
          "10857: func (s *CreateAccountCustomizationInput) SetNamespace(v string) *CreateAccountCustomizationInput {",
          "10858:  s.Namespace = &v",
          "10859:  return s",
          "10860: }",
          "10862: type CreateAccountCustomizationOutput struct {",
          "10863:  _ struct{} `type:\"structure\"`",
          "10867:  AccountCustomization *AccountCustomization `type:\"structure\"`",
          "10870:  AwsAccountId *string `min:\"12\" type:\"string\"`",
          "10873:  Namespace *string `type:\"string\"`",
          "10876:  RequestId *string `type:\"string\"`",
          "10879:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "10880: }",
          "10883: func (s CreateAccountCustomizationOutput) String() string {",
          "10884:  return awsutil.Prettify(s)",
          "10885: }",
          "10888: func (s CreateAccountCustomizationOutput) GoString() string {",
          "10889:  return s.String()",
          "10890: }",
          "10893: func (s *CreateAccountCustomizationOutput) SetAccountCustomization(v *AccountCustomization) *CreateAccountCustomizationOutput {",
          "10894:  s.AccountCustomization = v",
          "10895:  return s",
          "10896: }",
          "10899: func (s *CreateAccountCustomizationOutput) SetAwsAccountId(v string) *CreateAccountCustomizationOutput {",
          "10900:  s.AwsAccountId = &v",
          "10901:  return s",
          "10902: }",
          "10905: func (s *CreateAccountCustomizationOutput) SetNamespace(v string) *CreateAccountCustomizationOutput {",
          "10906:  s.Namespace = &v",
          "10907:  return s",
          "10908: }",
          "10911: func (s *CreateAccountCustomizationOutput) SetRequestId(v string) *CreateAccountCustomizationOutput {",
          "10912:  s.RequestId = &v",
          "10913:  return s",
          "10914: }",
          "10917: func (s *CreateAccountCustomizationOutput) SetStatus(v int64) *CreateAccountCustomizationOutput {",
          "10918:  s.Status = &v",
          "10919:  return s",
          "10920: }",
          "10924: type CreateColumnsOperation struct {",
          "10925:  _ struct{} `type:\"structure\"`",
          "10930:  Columns []*CalculatedColumn `min:\"1\" type:\"list\" required:\"true\"`",
          "10931: }",
          "10934: func (s CreateColumnsOperation) String() string {",
          "10935:  return awsutil.Prettify(s)",
          "10936: }",
          "10939: func (s CreateColumnsOperation) GoString() string {",
          "10940:  return s.String()",
          "10941: }",
          "10944: func (s *CreateColumnsOperation) Validate() error {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "10984:  return s",
          "10985: }",
          "10987: type CreateTemplateAliasInput struct {",
          "10988:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12398: type CreateNamespaceInput struct {",
          "12399:  _ struct{} `type:\"structure\"`",
          "12405:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "12411:  IdentityStore *string `type:\"string\" required:\"true\" enum:\"IdentityStore\"`",
          "12416:  Namespace *string `type:\"string\" required:\"true\"`",
          "12419:  Tags []*Tag `min:\"1\" type:\"list\"`",
          "12420: }",
          "12423: func (s CreateNamespaceInput) String() string {",
          "12424:  return awsutil.Prettify(s)",
          "12425: }",
          "12428: func (s CreateNamespaceInput) GoString() string {",
          "12429:  return s.String()",
          "12430: }",
          "12433: func (s *CreateNamespaceInput) Validate() error {",
          "12434:  invalidParams := request.ErrInvalidParams{Context: \"CreateNamespaceInput\"}",
          "12435:  if s.AwsAccountId == nil {",
          "12436:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "12437:  }",
          "12438:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "12439:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "12440:  }",
          "12441:  if s.IdentityStore == nil {",
          "12442:   invalidParams.Add(request.NewErrParamRequired(\"IdentityStore\"))",
          "12443:  }",
          "12444:  if s.Namespace == nil {",
          "12445:   invalidParams.Add(request.NewErrParamRequired(\"Namespace\"))",
          "12446:  }",
          "12447:  if s.Tags != nil && len(s.Tags) < 1 {",
          "12448:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "12449:  }",
          "12450:  if s.Tags != nil {",
          "12451:   for i, v := range s.Tags {",
          "12452:    if v == nil {",
          "12453:     continue",
          "12454:    }",
          "12455:    if err := v.Validate(); err != nil {",
          "12456:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "12457:    }",
          "12458:   }",
          "12459:  }",
          "12461:  if invalidParams.Len() > 0 {",
          "12462:   return invalidParams",
          "12463:  }",
          "12464:  return nil",
          "12465: }",
          "12468: func (s *CreateNamespaceInput) SetAwsAccountId(v string) *CreateNamespaceInput {",
          "12469:  s.AwsAccountId = &v",
          "12470:  return s",
          "12471: }",
          "12474: func (s *CreateNamespaceInput) SetIdentityStore(v string) *CreateNamespaceInput {",
          "12475:  s.IdentityStore = &v",
          "12476:  return s",
          "12477: }",
          "12480: func (s *CreateNamespaceInput) SetNamespace(v string) *CreateNamespaceInput {",
          "12481:  s.Namespace = &v",
          "12482:  return s",
          "12483: }",
          "12486: func (s *CreateNamespaceInput) SetTags(v []*Tag) *CreateNamespaceInput {",
          "12487:  s.Tags = v",
          "12488:  return s",
          "12489: }",
          "12491: type CreateNamespaceOutput struct {",
          "12492:  _ struct{} `type:\"structure\"`",
          "12495:  Arn *string `type:\"string\"`",
          "12499:  CapacityRegion *string `type:\"string\"`",
          "12505:  CreationStatus *string `type:\"string\" enum:\"NamespaceStatus\"`",
          "12509:  IdentityStore *string `type:\"string\" enum:\"IdentityStore\"`",
          "12512:  Name *string `type:\"string\"`",
          "12515:  RequestId *string `type:\"string\"`",
          "12518:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "12519: }",
          "12522: func (s CreateNamespaceOutput) String() string {",
          "12523:  return awsutil.Prettify(s)",
          "12524: }",
          "12527: func (s CreateNamespaceOutput) GoString() string {",
          "12528:  return s.String()",
          "12529: }",
          "12532: func (s *CreateNamespaceOutput) SetArn(v string) *CreateNamespaceOutput {",
          "12533:  s.Arn = &v",
          "12534:  return s",
          "12535: }",
          "12538: func (s *CreateNamespaceOutput) SetCapacityRegion(v string) *CreateNamespaceOutput {",
          "12539:  s.CapacityRegion = &v",
          "12540:  return s",
          "12541: }",
          "12544: func (s *CreateNamespaceOutput) SetCreationStatus(v string) *CreateNamespaceOutput {",
          "12545:  s.CreationStatus = &v",
          "12546:  return s",
          "12547: }",
          "12550: func (s *CreateNamespaceOutput) SetIdentityStore(v string) *CreateNamespaceOutput {",
          "12551:  s.IdentityStore = &v",
          "12552:  return s",
          "12553: }",
          "12556: func (s *CreateNamespaceOutput) SetName(v string) *CreateNamespaceOutput {",
          "12557:  s.Name = &v",
          "12558:  return s",
          "12559: }",
          "12562: func (s *CreateNamespaceOutput) SetRequestId(v string) *CreateNamespaceOutput {",
          "12563:  s.RequestId = &v",
          "12564:  return s",
          "12565: }",
          "12568: func (s *CreateNamespaceOutput) SetStatus(v int64) *CreateNamespaceOutput {",
          "12569:  s.Status = &v",
          "12570:  return s",
          "12571: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "13450:  return s",
          "13451: }",
          "13454:  _ struct{} `type:\"structure\"`",
          "13459:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "13469: }",
          "13473:  return awsutil.Prettify(s)",
          "13474: }",
          "13478:  return s.String()",
          "13479: }",
          "13484:  if s.AwsAccountId == nil {",
          "13485:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "13486:  }",
          "13487:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "13488:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "13489:  }",
          "13500:  if invalidParams.Len() > 0 {",
          "13501:   return invalidParams",
          "",
          "[Removed Lines]",
          "13453: type DeleteDashboardInput struct {",
          "13464:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "13468:  VersionNumber *int64 `location:\"querystring\" locationName:\"version-number\" min:\"1\" type:\"long\"`",
          "13472: func (s DeleteDashboardInput) String() string {",
          "13477: func (s DeleteDashboardInput) GoString() string {",
          "13482: func (s *DeleteDashboardInput) Validate() error {",
          "13483:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDashboardInput\"}",
          "13490:  if s.DashboardId == nil {",
          "13491:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "13492:  }",
          "13493:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "13494:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "13495:  }",
          "13496:  if s.VersionNumber != nil && *s.VersionNumber < 1 {",
          "13497:   invalidParams.Add(request.NewErrParamMinValue(\"VersionNumber\", 1))",
          "13498:  }",
          "",
          "[Added Lines]",
          "15039: type DeleteAccountCustomizationInput struct {",
          "15049:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "15053: func (s DeleteAccountCustomizationInput) String() string {",
          "15058: func (s DeleteAccountCustomizationInput) GoString() string {",
          "15063: func (s *DeleteAccountCustomizationInput) Validate() error {",
          "15064:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAccountCustomizationInput\"}",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "13504: }",
          "13508:  s.AwsAccountId = &v",
          "13509:  return s",
          "13510: }",
          "13515:  return s",
          "13516: }",
          "13524: type DeleteDashboardOutput struct {",
          "13525:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "13507: func (s *DeleteDashboardInput) SetAwsAccountId(v string) *DeleteDashboardInput {",
          "13513: func (s *DeleteDashboardInput) SetDashboardId(v string) *DeleteDashboardInput {",
          "13514:  s.DashboardId = &v",
          "13519: func (s *DeleteDashboardInput) SetVersionNumber(v int64) *DeleteDashboardInput {",
          "13520:  s.VersionNumber = &v",
          "13521:  return s",
          "13522: }",
          "",
          "[Added Lines]",
          "15079: func (s *DeleteAccountCustomizationInput) SetAwsAccountId(v string) *DeleteAccountCustomizationInput {",
          "15085: func (s *DeleteAccountCustomizationInput) SetNamespace(v string) *DeleteAccountCustomizationInput {",
          "15086:  s.Namespace = &v",
          "15090: type DeleteAccountCustomizationOutput struct {",
          "15091:  _ struct{} `type:\"structure\"`",
          "15094:  RequestId *string `type:\"string\"`",
          "15097:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "15098: }",
          "15101: func (s DeleteAccountCustomizationOutput) String() string {",
          "15102:  return awsutil.Prettify(s)",
          "15103: }",
          "15106: func (s DeleteAccountCustomizationOutput) GoString() string {",
          "15107:  return s.String()",
          "15108: }",
          "15111: func (s *DeleteAccountCustomizationOutput) SetRequestId(v string) *DeleteAccountCustomizationOutput {",
          "15112:  s.RequestId = &v",
          "15113:  return s",
          "15114: }",
          "15117: func (s *DeleteAccountCustomizationOutput) SetStatus(v int64) *DeleteAccountCustomizationOutput {",
          "15118:  s.Status = &v",
          "15119:  return s",
          "15120: }",
          "15122: type DeleteDashboardInput struct {",
          "15123:  _ struct{} `type:\"structure\"`",
          "15128:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "15133:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "15137:  VersionNumber *int64 `location:\"querystring\" locationName:\"version-number\" min:\"1\" type:\"long\"`",
          "15138: }",
          "15141: func (s DeleteDashboardInput) String() string {",
          "15142:  return awsutil.Prettify(s)",
          "15143: }",
          "15146: func (s DeleteDashboardInput) GoString() string {",
          "15147:  return s.String()",
          "15148: }",
          "15151: func (s *DeleteDashboardInput) Validate() error {",
          "15152:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDashboardInput\"}",
          "15153:  if s.AwsAccountId == nil {",
          "15154:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "15155:  }",
          "15156:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "15157:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "15158:  }",
          "15159:  if s.DashboardId == nil {",
          "15160:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "15161:  }",
          "15162:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "15163:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "15164:  }",
          "15165:  if s.VersionNumber != nil && *s.VersionNumber < 1 {",
          "15166:   invalidParams.Add(request.NewErrParamMinValue(\"VersionNumber\", 1))",
          "15167:  }",
          "15169:  if invalidParams.Len() > 0 {",
          "15170:   return invalidParams",
          "15171:  }",
          "15172:  return nil",
          "15173: }",
          "15176: func (s *DeleteDashboardInput) SetAwsAccountId(v string) *DeleteDashboardInput {",
          "15177:  s.AwsAccountId = &v",
          "15178:  return s",
          "15179: }",
          "15182: func (s *DeleteDashboardInput) SetDashboardId(v string) *DeleteDashboardInput {",
          "15183:  s.DashboardId = &v",
          "15184:  return s",
          "15185: }",
          "15188: func (s *DeleteDashboardInput) SetVersionNumber(v int64) *DeleteDashboardInput {",
          "15189:  s.VersionNumber = &v",
          "15190:  return s",
          "15191: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14140:  return s",
          "14141: }",
          "14143: type DeleteTemplateAliasInput struct {",
          "14144:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15812: type DeleteNamespaceInput struct {",
          "15813:  _ struct{} `type:\"structure\"`",
          "15819:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "15824:  Namespace *string `location:\"uri\" locationName:\"Namespace\" type:\"string\" required:\"true\"`",
          "15825: }",
          "15828: func (s DeleteNamespaceInput) String() string {",
          "15829:  return awsutil.Prettify(s)",
          "15830: }",
          "15833: func (s DeleteNamespaceInput) GoString() string {",
          "15834:  return s.String()",
          "15835: }",
          "15838: func (s *DeleteNamespaceInput) Validate() error {",
          "15839:  invalidParams := request.ErrInvalidParams{Context: \"DeleteNamespaceInput\"}",
          "15840:  if s.AwsAccountId == nil {",
          "15841:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "15842:  }",
          "15843:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "15844:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "15845:  }",
          "15846:  if s.Namespace == nil {",
          "15847:   invalidParams.Add(request.NewErrParamRequired(\"Namespace\"))",
          "15848:  }",
          "15849:  if s.Namespace != nil && len(*s.Namespace) < 1 {",
          "15850:   invalidParams.Add(request.NewErrParamMinLen(\"Namespace\", 1))",
          "15851:  }",
          "15853:  if invalidParams.Len() > 0 {",
          "15854:   return invalidParams",
          "15855:  }",
          "15856:  return nil",
          "15857: }",
          "15860: func (s *DeleteNamespaceInput) SetAwsAccountId(v string) *DeleteNamespaceInput {",
          "15861:  s.AwsAccountId = &v",
          "15862:  return s",
          "15863: }",
          "15866: func (s *DeleteNamespaceInput) SetNamespace(v string) *DeleteNamespaceInput {",
          "15867:  s.Namespace = &v",
          "15868:  return s",
          "15869: }",
          "15871: type DeleteNamespaceOutput struct {",
          "15872:  _ struct{} `type:\"structure\"`",
          "15875:  RequestId *string `type:\"string\"`",
          "15878:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "15879: }",
          "15882: func (s DeleteNamespaceOutput) String() string {",
          "15883:  return awsutil.Prettify(s)",
          "15884: }",
          "15887: func (s DeleteNamespaceOutput) GoString() string {",
          "15888:  return s.String()",
          "15889: }",
          "15892: func (s *DeleteNamespaceOutput) SetRequestId(v string) *DeleteNamespaceOutput {",
          "15893:  s.RequestId = &v",
          "15894:  return s",
          "15895: }",
          "15898: func (s *DeleteNamespaceOutput) SetStatus(v int64) *DeleteNamespaceOutput {",
          "15899:  s.Status = &v",
          "15900:  return s",
          "15901: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "14850: }",
          "14854:  return awsutil.Prettify(s)",
          "14855: }",
          "14859:  return s.String()",
          "14860: }",
          "14864:  s.RequestId = &v",
          "14865:  return s",
          "14866: }",
          "14870:  s.Status = &v",
          "14871:  return s",
          "14872: }",
          "",
          "[Removed Lines]",
          "14853: func (s DeleteUserOutput) String() string {",
          "14858: func (s DeleteUserOutput) GoString() string {",
          "14863: func (s *DeleteUserOutput) SetRequestId(v string) *DeleteUserOutput {",
          "14869: func (s *DeleteUserOutput) SetStatus(v int64) *DeleteUserOutput {",
          "",
          "[Added Lines]",
          "16613: func (s DeleteUserOutput) String() string {",
          "16614:  return awsutil.Prettify(s)",
          "16615: }",
          "16618: func (s DeleteUserOutput) GoString() string {",
          "16619:  return s.String()",
          "16620: }",
          "16623: func (s *DeleteUserOutput) SetRequestId(v string) *DeleteUserOutput {",
          "16624:  s.RequestId = &v",
          "16625:  return s",
          "16626: }",
          "16629: func (s *DeleteUserOutput) SetStatus(v int64) *DeleteUserOutput {",
          "16630:  s.Status = &v",
          "16631:  return s",
          "16632: }",
          "16634: type DescribeAccountCustomizationInput struct {",
          "16635:  _ struct{} `type:\"structure\"`",
          "16641:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "16644:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "16648:  Resolved *bool `location:\"querystring\" locationName:\"resolved\" type:\"boolean\"`",
          "16649: }",
          "16652: func (s DescribeAccountCustomizationInput) String() string {",
          "16653:  return awsutil.Prettify(s)",
          "16654: }",
          "16657: func (s DescribeAccountCustomizationInput) GoString() string {",
          "16658:  return s.String()",
          "16659: }",
          "16662: func (s *DescribeAccountCustomizationInput) Validate() error {",
          "16663:  invalidParams := request.ErrInvalidParams{Context: \"DescribeAccountCustomizationInput\"}",
          "16664:  if s.AwsAccountId == nil {",
          "16665:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "16666:  }",
          "16667:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "16668:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "16669:  }",
          "16671:  if invalidParams.Len() > 0 {",
          "16672:   return invalidParams",
          "16673:  }",
          "16674:  return nil",
          "16675: }",
          "16678: func (s *DescribeAccountCustomizationInput) SetAwsAccountId(v string) *DescribeAccountCustomizationInput {",
          "16679:  s.AwsAccountId = &v",
          "16680:  return s",
          "16681: }",
          "16684: func (s *DescribeAccountCustomizationInput) SetNamespace(v string) *DescribeAccountCustomizationInput {",
          "16685:  s.Namespace = &v",
          "16686:  return s",
          "16687: }",
          "16690: func (s *DescribeAccountCustomizationInput) SetResolved(v bool) *DescribeAccountCustomizationInput {",
          "16691:  s.Resolved = &v",
          "16692:  return s",
          "16693: }",
          "16695: type DescribeAccountCustomizationOutput struct {",
          "16696:  _ struct{} `type:\"structure\"`",
          "16699:  AccountCustomization *AccountCustomization `type:\"structure\"`",
          "16703:  AwsAccountId *string `min:\"12\" type:\"string\"`",
          "16706:  Namespace *string `type:\"string\"`",
          "16709:  RequestId *string `type:\"string\"`",
          "16712:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "16713: }",
          "16716: func (s DescribeAccountCustomizationOutput) String() string {",
          "16717:  return awsutil.Prettify(s)",
          "16718: }",
          "16721: func (s DescribeAccountCustomizationOutput) GoString() string {",
          "16722:  return s.String()",
          "16723: }",
          "16726: func (s *DescribeAccountCustomizationOutput) SetAccountCustomization(v *AccountCustomization) *DescribeAccountCustomizationOutput {",
          "16727:  s.AccountCustomization = v",
          "16728:  return s",
          "16729: }",
          "16732: func (s *DescribeAccountCustomizationOutput) SetAwsAccountId(v string) *DescribeAccountCustomizationOutput {",
          "16733:  s.AwsAccountId = &v",
          "16734:  return s",
          "16735: }",
          "16738: func (s *DescribeAccountCustomizationOutput) SetNamespace(v string) *DescribeAccountCustomizationOutput {",
          "16739:  s.Namespace = &v",
          "16740:  return s",
          "16741: }",
          "16744: func (s *DescribeAccountCustomizationOutput) SetRequestId(v string) *DescribeAccountCustomizationOutput {",
          "16745:  s.RequestId = &v",
          "16746:  return s",
          "16747: }",
          "16750: func (s *DescribeAccountCustomizationOutput) SetStatus(v int64) *DescribeAccountCustomizationOutput {",
          "16751:  s.Status = &v",
          "16752:  return s",
          "16753: }",
          "16755: type DescribeAccountSettingsInput struct {",
          "16756:  _ struct{} `type:\"structure\"`",
          "16762:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "16763: }",
          "16766: func (s DescribeAccountSettingsInput) String() string {",
          "16767:  return awsutil.Prettify(s)",
          "16768: }",
          "16771: func (s DescribeAccountSettingsInput) GoString() string {",
          "16772:  return s.String()",
          "16773: }",
          "16776: func (s *DescribeAccountSettingsInput) Validate() error {",
          "16777:  invalidParams := request.ErrInvalidParams{Context: \"DescribeAccountSettingsInput\"}",
          "16778:  if s.AwsAccountId == nil {",
          "16779:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "16780:  }",
          "16781:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "16782:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "16783:  }",
          "16785:  if invalidParams.Len() > 0 {",
          "16786:   return invalidParams",
          "16787:  }",
          "16788:  return nil",
          "16789: }",
          "16792: func (s *DescribeAccountSettingsInput) SetAwsAccountId(v string) *DescribeAccountSettingsInput {",
          "16793:  s.AwsAccountId = &v",
          "16794:  return s",
          "16795: }",
          "16797: type DescribeAccountSettingsOutput struct {",
          "16798:  _ struct{} `type:\"structure\"`",
          "16806:  AccountSettings *AccountSettings `type:\"structure\"`",
          "16809:  RequestId *string `type:\"string\"`",
          "16812:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "16813: }",
          "16816: func (s DescribeAccountSettingsOutput) String() string {",
          "16821: func (s DescribeAccountSettingsOutput) GoString() string {",
          "16826: func (s *DescribeAccountSettingsOutput) SetAccountSettings(v *AccountSettings) *DescribeAccountSettingsOutput {",
          "16827:  s.AccountSettings = v",
          "16828:  return s",
          "16829: }",
          "16832: func (s *DescribeAccountSettingsOutput) SetRequestId(v string) *DescribeAccountSettingsOutput {",
          "16838: func (s *DescribeAccountSettingsOutput) SetStatus(v int64) *DescribeAccountSettingsOutput {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "15900:  return s",
          "15901: }",
          "15903: type DescribeTemplateAliasInput struct {",
          "15904:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17872: type DescribeNamespaceInput struct {",
          "17873:  _ struct{} `type:\"structure\"`",
          "17879:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "17884:  Namespace *string `location:\"uri\" locationName:\"Namespace\" type:\"string\" required:\"true\"`",
          "17885: }",
          "17888: func (s DescribeNamespaceInput) String() string {",
          "17889:  return awsutil.Prettify(s)",
          "17890: }",
          "17893: func (s DescribeNamespaceInput) GoString() string {",
          "17894:  return s.String()",
          "17895: }",
          "17898: func (s *DescribeNamespaceInput) Validate() error {",
          "17899:  invalidParams := request.ErrInvalidParams{Context: \"DescribeNamespaceInput\"}",
          "17900:  if s.AwsAccountId == nil {",
          "17901:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "17902:  }",
          "17903:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "17904:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "17905:  }",
          "17906:  if s.Namespace == nil {",
          "17907:   invalidParams.Add(request.NewErrParamRequired(\"Namespace\"))",
          "17908:  }",
          "17909:  if s.Namespace != nil && len(*s.Namespace) < 1 {",
          "17910:   invalidParams.Add(request.NewErrParamMinLen(\"Namespace\", 1))",
          "17911:  }",
          "17913:  if invalidParams.Len() > 0 {",
          "17914:   return invalidParams",
          "17915:  }",
          "17916:  return nil",
          "17917: }",
          "17920: func (s *DescribeNamespaceInput) SetAwsAccountId(v string) *DescribeNamespaceInput {",
          "17921:  s.AwsAccountId = &v",
          "17922:  return s",
          "17923: }",
          "17926: func (s *DescribeNamespaceInput) SetNamespace(v string) *DescribeNamespaceInput {",
          "17927:  s.Namespace = &v",
          "17928:  return s",
          "17929: }",
          "17931: type DescribeNamespaceOutput struct {",
          "17932:  _ struct{} `type:\"structure\"`",
          "17939:  Namespace *NamespaceInfoV2 `type:\"structure\"`",
          "17942:  RequestId *string `type:\"string\"`",
          "17945:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "17946: }",
          "17949: func (s DescribeNamespaceOutput) String() string {",
          "17950:  return awsutil.Prettify(s)",
          "17951: }",
          "17954: func (s DescribeNamespaceOutput) GoString() string {",
          "17955:  return s.String()",
          "17956: }",
          "17959: func (s *DescribeNamespaceOutput) SetNamespace(v *NamespaceInfoV2) *DescribeNamespaceOutput {",
          "17960:  s.Namespace = v",
          "17961:  return s",
          "17962: }",
          "17965: func (s *DescribeNamespaceOutput) SetRequestId(v string) *DescribeNamespaceOutput {",
          "17966:  s.RequestId = &v",
          "17967:  return s",
          "17968: }",
          "17971: func (s *DescribeNamespaceOutput) SetStatus(v int64) *DescribeNamespaceOutput {",
          "17972:  s.Status = &v",
          "17973:  return s",
          "17974: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "16972:  return s",
          "16973: }",
          "16976:  _ struct{} `type:\"structure\"`",
          "16981:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "16999:  SessionLifetimeInMinutes *int64 `location:\"querystring\" locationName:\"session-lifetime\" min:\"15\" type:\"long\"`",
          "",
          "[Removed Lines]",
          "16975: type GetDashboardEmbedUrlInput struct {",
          "16986:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "16991:  IdentityType *string `location:\"querystring\" locationName:\"creds-type\" type:\"string\" required:\"true\" enum:\"IdentityType\"`",
          "16995:  ResetDisabled *bool `location:\"querystring\" locationName:\"reset-disabled\" type:\"boolean\"`",
          "17003:  UndoRedoDisabled *bool `location:\"querystring\" locationName:\"undo-redo-disabled\" type:\"boolean\"`",
          "",
          "[Added Lines]",
          "19049: type GetDashboardEmbedUrlInput struct {",
          "19050:  _ struct{} `type:\"structure\"`",
          "19055:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "19060:  DashboardId *string `location:\"uri\" locationName:\"DashboardId\" min:\"1\" type:\"string\" required:\"true\"`",
          "19065:  IdentityType *string `location:\"querystring\" locationName:\"creds-type\" type:\"string\" required:\"true\" enum:\"IdentityType\"`",
          "19069:  ResetDisabled *bool `location:\"querystring\" locationName:\"reset-disabled\" type:\"boolean\"`",
          "19073:  SessionLifetimeInMinutes *int64 `location:\"querystring\" locationName:\"session-lifetime\" min:\"15\" type:\"long\"`",
          "19077:  UndoRedoDisabled *bool `location:\"querystring\" locationName:\"undo-redo-disabled\" type:\"boolean\"`",
          "19089:  UserArn *string `location:\"querystring\" locationName:\"user-arn\" type:\"string\"`",
          "19090: }",
          "19093: func (s GetDashboardEmbedUrlInput) String() string {",
          "19094:  return awsutil.Prettify(s)",
          "19095: }",
          "19098: func (s GetDashboardEmbedUrlInput) GoString() string {",
          "19099:  return s.String()",
          "19100: }",
          "19103: func (s *GetDashboardEmbedUrlInput) Validate() error {",
          "19104:  invalidParams := request.ErrInvalidParams{Context: \"GetDashboardEmbedUrlInput\"}",
          "19105:  if s.AwsAccountId == nil {",
          "19106:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "19107:  }",
          "19108:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "19109:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "19110:  }",
          "19111:  if s.DashboardId == nil {",
          "19112:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "19113:  }",
          "19114:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "19115:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "19116:  }",
          "19117:  if s.IdentityType == nil {",
          "19118:   invalidParams.Add(request.NewErrParamRequired(\"IdentityType\"))",
          "19119:  }",
          "19120:  if s.SessionLifetimeInMinutes != nil && *s.SessionLifetimeInMinutes < 15 {",
          "19121:   invalidParams.Add(request.NewErrParamMinValue(\"SessionLifetimeInMinutes\", 15))",
          "19122:  }",
          "19124:  if invalidParams.Len() > 0 {",
          "19125:   return invalidParams",
          "19126:  }",
          "19127:  return nil",
          "19128: }",
          "19131: func (s *GetDashboardEmbedUrlInput) SetAwsAccountId(v string) *GetDashboardEmbedUrlInput {",
          "19132:  s.AwsAccountId = &v",
          "19133:  return s",
          "19134: }",
          "19137: func (s *GetDashboardEmbedUrlInput) SetDashboardId(v string) *GetDashboardEmbedUrlInput {",
          "19138:  s.DashboardId = &v",
          "19139:  return s",
          "19140: }",
          "19143: func (s *GetDashboardEmbedUrlInput) SetIdentityType(v string) *GetDashboardEmbedUrlInput {",
          "19144:  s.IdentityType = &v",
          "19145:  return s",
          "19146: }",
          "19149: func (s *GetDashboardEmbedUrlInput) SetResetDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "19150:  s.ResetDisabled = &v",
          "19151:  return s",
          "19152: }",
          "19155: func (s *GetDashboardEmbedUrlInput) SetSessionLifetimeInMinutes(v int64) *GetDashboardEmbedUrlInput {",
          "19156:  s.SessionLifetimeInMinutes = &v",
          "19157:  return s",
          "19158: }",
          "19161: func (s *GetDashboardEmbedUrlInput) SetUndoRedoDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "19162:  s.UndoRedoDisabled = &v",
          "19163:  return s",
          "19164: }",
          "19167: func (s *GetDashboardEmbedUrlInput) SetUserArn(v string) *GetDashboardEmbedUrlInput {",
          "19168:  s.UserArn = &v",
          "19169:  return s",
          "19170: }",
          "19172: type GetDashboardEmbedUrlOutput struct {",
          "19173:  _ struct{} `type:\"structure\"`",
          "19179:  EmbedUrl *string `type:\"string\" sensitive:\"true\"`",
          "19182:  RequestId *string `type:\"string\"`",
          "19185:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "19186: }",
          "19189: func (s GetDashboardEmbedUrlOutput) String() string {",
          "19190:  return awsutil.Prettify(s)",
          "19191: }",
          "19194: func (s GetDashboardEmbedUrlOutput) GoString() string {",
          "19195:  return s.String()",
          "19196: }",
          "19199: func (s *GetDashboardEmbedUrlOutput) SetEmbedUrl(v string) *GetDashboardEmbedUrlOutput {",
          "19200:  s.EmbedUrl = &v",
          "19201:  return s",
          "19202: }",
          "19205: func (s *GetDashboardEmbedUrlOutput) SetRequestId(v string) *GetDashboardEmbedUrlOutput {",
          "19206:  s.RequestId = &v",
          "19207:  return s",
          "19208: }",
          "19211: func (s *GetDashboardEmbedUrlOutput) SetStatus(v int64) *GetDashboardEmbedUrlOutput {",
          "19212:  s.Status = &v",
          "19213:  return s",
          "19214: }",
          "19216: type GetSessionEmbedUrlInput struct {",
          "19226:  EntryPoint *string `location:\"querystring\" locationName:\"entry-point\" min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "17016: }",
          "17020:  return awsutil.Prettify(s)",
          "17021: }",
          "17025:  return s.String()",
          "17026: }",
          "17031:  if s.AwsAccountId == nil {",
          "17032:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "17033:  }",
          "17034:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "17035:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "17036:  }",
          "17045:  }",
          "17046:  if s.SessionLifetimeInMinutes != nil && *s.SessionLifetimeInMinutes < 15 {",
          "17047:   invalidParams.Add(request.NewErrParamMinValue(\"SessionLifetimeInMinutes\", 15))",
          "",
          "[Removed Lines]",
          "17019: func (s GetDashboardEmbedUrlInput) String() string {",
          "17024: func (s GetDashboardEmbedUrlInput) GoString() string {",
          "17029: func (s *GetDashboardEmbedUrlInput) Validate() error {",
          "17030:  invalidParams := request.ErrInvalidParams{Context: \"GetDashboardEmbedUrlInput\"}",
          "17037:  if s.DashboardId == nil {",
          "17038:   invalidParams.Add(request.NewErrParamRequired(\"DashboardId\"))",
          "17039:  }",
          "17040:  if s.DashboardId != nil && len(*s.DashboardId) < 1 {",
          "17041:   invalidParams.Add(request.NewErrParamMinLen(\"DashboardId\", 1))",
          "17042:  }",
          "17043:  if s.IdentityType == nil {",
          "17044:   invalidParams.Add(request.NewErrParamRequired(\"IdentityType\"))",
          "",
          "[Added Lines]",
          "19246: func (s GetSessionEmbedUrlInput) String() string {",
          "19251: func (s GetSessionEmbedUrlInput) GoString() string {",
          "19256: func (s *GetSessionEmbedUrlInput) Validate() error {",
          "19257:  invalidParams := request.ErrInvalidParams{Context: \"GetSessionEmbedUrlInput\"}",
          "19264:  if s.EntryPoint != nil && len(*s.EntryPoint) < 1 {",
          "19265:   invalidParams.Add(request.NewErrParamMinLen(\"EntryPoint\", 1))",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "17054: }",
          "17058:  s.AwsAccountId = &v",
          "17059:  return s",
          "17060: }",
          "17077:  return s",
          "17078: }",
          "17082:  s.SessionLifetimeInMinutes = &v",
          "17083:  return s",
          "17084: }",
          "17094:  s.UserArn = &v",
          "17095:  return s",
          "17096: }",
          "17099:  _ struct{} `type:\"structure\"`",
          "17105:  EmbedUrl *string `type:\"string\" sensitive:\"true\"`",
          "",
          "[Removed Lines]",
          "17057: func (s *GetDashboardEmbedUrlInput) SetAwsAccountId(v string) *GetDashboardEmbedUrlInput {",
          "17063: func (s *GetDashboardEmbedUrlInput) SetDashboardId(v string) *GetDashboardEmbedUrlInput {",
          "17064:  s.DashboardId = &v",
          "17065:  return s",
          "17066: }",
          "17069: func (s *GetDashboardEmbedUrlInput) SetIdentityType(v string) *GetDashboardEmbedUrlInput {",
          "17070:  s.IdentityType = &v",
          "17071:  return s",
          "17072: }",
          "17075: func (s *GetDashboardEmbedUrlInput) SetResetDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "17076:  s.ResetDisabled = &v",
          "17081: func (s *GetDashboardEmbedUrlInput) SetSessionLifetimeInMinutes(v int64) *GetDashboardEmbedUrlInput {",
          "17087: func (s *GetDashboardEmbedUrlInput) SetUndoRedoDisabled(v bool) *GetDashboardEmbedUrlInput {",
          "17088:  s.UndoRedoDisabled = &v",
          "17089:  return s",
          "17090: }",
          "17093: func (s *GetDashboardEmbedUrlInput) SetUserArn(v string) *GetDashboardEmbedUrlInput {",
          "17098: type GetDashboardEmbedUrlOutput struct {",
          "",
          "[Added Lines]",
          "19278: func (s *GetSessionEmbedUrlInput) SetAwsAccountId(v string) *GetSessionEmbedUrlInput {",
          "19284: func (s *GetSessionEmbedUrlInput) SetEntryPoint(v string) *GetSessionEmbedUrlInput {",
          "19285:  s.EntryPoint = &v",
          "19290: func (s *GetSessionEmbedUrlInput) SetSessionLifetimeInMinutes(v int64) *GetSessionEmbedUrlInput {",
          "19296: func (s *GetSessionEmbedUrlInput) SetUserArn(v string) *GetSessionEmbedUrlInput {",
          "19301: type GetSessionEmbedUrlOutput struct {",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "17112: }",
          "17116:  return awsutil.Prettify(s)",
          "17117: }",
          "17121:  return s.String()",
          "17122: }",
          "17126:  s.EmbedUrl = &v",
          "17127:  return s",
          "17128: }",
          "17132:  s.RequestId = &v",
          "17133:  return s",
          "17134: }",
          "17138:  s.Status = &v",
          "17139:  return s",
          "17140: }",
          "",
          "[Removed Lines]",
          "17115: func (s GetDashboardEmbedUrlOutput) String() string {",
          "17120: func (s GetDashboardEmbedUrlOutput) GoString() string {",
          "17125: func (s *GetDashboardEmbedUrlOutput) SetEmbedUrl(v string) *GetDashboardEmbedUrlOutput {",
          "17131: func (s *GetDashboardEmbedUrlOutput) SetRequestId(v string) *GetDashboardEmbedUrlOutput {",
          "17137: func (s *GetDashboardEmbedUrlOutput) SetStatus(v int64) *GetDashboardEmbedUrlOutput {",
          "",
          "[Added Lines]",
          "19318: func (s GetSessionEmbedUrlOutput) String() string {",
          "19323: func (s GetSessionEmbedUrlOutput) GoString() string {",
          "19328: func (s *GetSessionEmbedUrlOutput) SetEmbedUrl(v string) *GetSessionEmbedUrlOutput {",
          "19334: func (s *GetSessionEmbedUrlOutput) SetRequestId(v string) *GetSessionEmbedUrlOutput {",
          "19340: func (s *GetSessionEmbedUrlOutput) SetStatus(v int64) *GetSessionEmbedUrlOutput {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "19170:  return s",
          "19171: }",
          "19173: type ListTagsForResourceInput struct {",
          "19174:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21376: type ListNamespacesInput struct {",
          "21377:  _ struct{} `type:\"structure\"`",
          "21383:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "21386:  MaxResults *int64 `location:\"querystring\" locationName:\"max-results\" min:\"1\" type:\"integer\"`",
          "21389:  NextToken *string `location:\"querystring\" locationName:\"next-token\" type:\"string\"`",
          "21390: }",
          "21393: func (s ListNamespacesInput) String() string {",
          "21394:  return awsutil.Prettify(s)",
          "21395: }",
          "21398: func (s ListNamespacesInput) GoString() string {",
          "21399:  return s.String()",
          "21400: }",
          "21403: func (s *ListNamespacesInput) Validate() error {",
          "21404:  invalidParams := request.ErrInvalidParams{Context: \"ListNamespacesInput\"}",
          "21405:  if s.AwsAccountId == nil {",
          "21406:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "21407:  }",
          "21408:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "21409:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "21410:  }",
          "21411:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "21412:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "21413:  }",
          "21415:  if invalidParams.Len() > 0 {",
          "21416:   return invalidParams",
          "21417:  }",
          "21418:  return nil",
          "21419: }",
          "21422: func (s *ListNamespacesInput) SetAwsAccountId(v string) *ListNamespacesInput {",
          "21423:  s.AwsAccountId = &v",
          "21424:  return s",
          "21425: }",
          "21428: func (s *ListNamespacesInput) SetMaxResults(v int64) *ListNamespacesInput {",
          "21429:  s.MaxResults = &v",
          "21430:  return s",
          "21431: }",
          "21434: func (s *ListNamespacesInput) SetNextToken(v string) *ListNamespacesInput {",
          "21435:  s.NextToken = &v",
          "21436:  return s",
          "21437: }",
          "21439: type ListNamespacesOutput struct {",
          "21440:  _ struct{} `type:\"structure\"`",
          "21445:  Namespaces []*NamespaceInfoV2 `type:\"list\"`",
          "21448:  NextToken *string `type:\"string\"`",
          "21451:  RequestId *string `type:\"string\"`",
          "21454:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "21455: }",
          "21458: func (s ListNamespacesOutput) String() string {",
          "21459:  return awsutil.Prettify(s)",
          "21460: }",
          "21463: func (s ListNamespacesOutput) GoString() string {",
          "21464:  return s.String()",
          "21465: }",
          "21468: func (s *ListNamespacesOutput) SetNamespaces(v []*NamespaceInfoV2) *ListNamespacesOutput {",
          "21469:  s.Namespaces = v",
          "21470:  return s",
          "21471: }",
          "21474: func (s *ListNamespacesOutput) SetNextToken(v string) *ListNamespacesOutput {",
          "21475:  s.NextToken = &v",
          "21476:  return s",
          "21477: }",
          "21480: func (s *ListNamespacesOutput) SetRequestId(v string) *ListNamespacesOutput {",
          "21481:  s.RequestId = &v",
          "21482:  return s",
          "21483: }",
          "21486: func (s *ListNamespacesOutput) SetStatus(v int64) *ListNamespacesOutput {",
          "21487:  s.Status = &v",
          "21488:  return s",
          "21489: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "20609:  return awsutil.Prettify(s)",
          "20610: }",
          "20615: }",
          "20643: }",
          "20648:  return s",
          "20649: }",
          "20654:  return s",
          "20655: }",
          "20660:  return s",
          "20661: }",
          "",
          "[Removed Lines]",
          "20613: func (s MySqlParameters) GoString() string {",
          "20614:  return s.String()",
          "20618: func (s *MySqlParameters) Validate() error {",
          "20619:  invalidParams := request.ErrInvalidParams{Context: \"MySqlParameters\"}",
          "20620:  if s.Database == nil {",
          "20621:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "20622:  }",
          "20623:  if s.Database != nil && len(*s.Database) < 1 {",
          "20624:   invalidParams.Add(request.NewErrParamMinLen(\"Database\", 1))",
          "20625:  }",
          "20626:  if s.Host == nil {",
          "20627:   invalidParams.Add(request.NewErrParamRequired(\"Host\"))",
          "20628:  }",
          "20629:  if s.Host != nil && len(*s.Host) < 1 {",
          "20630:   invalidParams.Add(request.NewErrParamMinLen(\"Host\", 1))",
          "20631:  }",
          "20632:  if s.Port == nil {",
          "20633:   invalidParams.Add(request.NewErrParamRequired(\"Port\"))",
          "20634:  }",
          "20635:  if s.Port != nil && *s.Port < 1 {",
          "20636:   invalidParams.Add(request.NewErrParamMinValue(\"Port\", 1))",
          "20637:  }",
          "20639:  if invalidParams.Len() > 0 {",
          "20640:   return invalidParams",
          "20641:  }",
          "20642:  return nil",
          "20646: func (s *MySqlParameters) SetDatabase(v string) *MySqlParameters {",
          "20647:  s.Database = &v",
          "20652: func (s *MySqlParameters) SetHost(v string) *MySqlParameters {",
          "20653:  s.Host = &v",
          "20658: func (s *MySqlParameters) SetPort(v int64) *MySqlParameters {",
          "20659:  s.Port = &v",
          "",
          "[Added Lines]",
          "22931: func (s MySqlParameters) GoString() string {",
          "22932:  return s.String()",
          "22933: }",
          "22936: func (s *MySqlParameters) Validate() error {",
          "22937:  invalidParams := request.ErrInvalidParams{Context: \"MySqlParameters\"}",
          "22938:  if s.Database == nil {",
          "22939:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "22940:  }",
          "22941:  if s.Database != nil && len(*s.Database) < 1 {",
          "22942:   invalidParams.Add(request.NewErrParamMinLen(\"Database\", 1))",
          "22943:  }",
          "22944:  if s.Host == nil {",
          "22945:   invalidParams.Add(request.NewErrParamRequired(\"Host\"))",
          "22946:  }",
          "22947:  if s.Host != nil && len(*s.Host) < 1 {",
          "22948:   invalidParams.Add(request.NewErrParamMinLen(\"Host\", 1))",
          "22949:  }",
          "22950:  if s.Port == nil {",
          "22951:   invalidParams.Add(request.NewErrParamRequired(\"Port\"))",
          "22952:  }",
          "22953:  if s.Port != nil && *s.Port < 1 {",
          "22954:   invalidParams.Add(request.NewErrParamMinValue(\"Port\", 1))",
          "22955:  }",
          "22957:  if invalidParams.Len() > 0 {",
          "22958:   return invalidParams",
          "22959:  }",
          "22960:  return nil",
          "22961: }",
          "22964: func (s *MySqlParameters) SetDatabase(v string) *MySqlParameters {",
          "22965:  s.Database = &v",
          "22966:  return s",
          "22967: }",
          "22970: func (s *MySqlParameters) SetHost(v string) *MySqlParameters {",
          "22971:  s.Host = &v",
          "22972:  return s",
          "22973: }",
          "22976: func (s *MySqlParameters) SetPort(v int64) *MySqlParameters {",
          "22977:  s.Port = &v",
          "22978:  return s",
          "22979: }",
          "22982: type NamespaceError struct {",
          "22983:  _ struct{} `type:\"structure\"`",
          "22986:  Message *string `type:\"string\"`",
          "22989:  Type *string `type:\"string\" enum:\"NamespaceErrorType\"`",
          "22990: }",
          "22993: func (s NamespaceError) String() string {",
          "22994:  return awsutil.Prettify(s)",
          "22995: }",
          "22998: func (s NamespaceError) GoString() string {",
          "22999:  return s.String()",
          "23000: }",
          "23003: func (s *NamespaceError) SetMessage(v string) *NamespaceError {",
          "23004:  s.Message = &v",
          "23005:  return s",
          "23006: }",
          "23009: func (s *NamespaceError) SetType(v string) *NamespaceError {",
          "23010:  s.Type = &v",
          "23011:  return s",
          "23012: }",
          "23015: type NamespaceInfoV2 struct {",
          "23016:  _ struct{} `type:\"structure\"`",
          "23019:  Arn *string `type:\"string\"`",
          "23022:  CapacityRegion *string `type:\"string\"`",
          "23025:  CreationStatus *string `type:\"string\" enum:\"NamespaceStatus\"`",
          "23028:  IdentityStore *string `type:\"string\" enum:\"IdentityStore\"`",
          "23031:  Name *string `type:\"string\"`",
          "23034:  NamespaceError *NamespaceError `type:\"structure\"`",
          "23035: }",
          "23038: func (s NamespaceInfoV2) String() string {",
          "23039:  return awsutil.Prettify(s)",
          "23040: }",
          "23043: func (s NamespaceInfoV2) GoString() string {",
          "23044:  return s.String()",
          "23045: }",
          "23048: func (s *NamespaceInfoV2) SetArn(v string) *NamespaceInfoV2 {",
          "23049:  s.Arn = &v",
          "23050:  return s",
          "23051: }",
          "23054: func (s *NamespaceInfoV2) SetCapacityRegion(v string) *NamespaceInfoV2 {",
          "23055:  s.CapacityRegion = &v",
          "23056:  return s",
          "23060: func (s *NamespaceInfoV2) SetCreationStatus(v string) *NamespaceInfoV2 {",
          "23061:  s.CreationStatus = &v",
          "23062:  return s",
          "23066: func (s *NamespaceInfoV2) SetIdentityStore(v string) *NamespaceInfoV2 {",
          "23067:  s.IdentityStore = &v",
          "23072: func (s *NamespaceInfoV2) SetName(v string) *NamespaceInfoV2 {",
          "23073:  s.Name = &v",
          "23078: func (s *NamespaceInfoV2) SetNamespaceError(v *NamespaceError) *NamespaceInfoV2 {",
          "23079:  s.NamespaceError = v",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "21298:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23742:  CustomPermissionsName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "21372:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "21373:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "21374:  }",
          "21375:  if s.Email == nil {",
          "21376:   invalidParams.Add(request.NewErrParamRequired(\"Email\"))",
          "21377:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23819:  if s.CustomPermissionsName != nil && len(*s.CustomPermissionsName) < 1 {",
          "23820:   invalidParams.Add(request.NewErrParamMinLen(\"CustomPermissionsName\", 1))",
          "23821:  }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "21406:  return s",
          "21407: }",
          "21410: func (s *RegisterUserInput) SetEmail(v string) *RegisterUserInput {",
          "21411:  s.Email = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23857: func (s *RegisterUserInput) SetCustomPermissionsName(v string) *RegisterUserInput {",
          "23858:  s.CustomPermissionsName = &v",
          "23859:  return s",
          "23860: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "21945:  Arn *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24401:  Namespace *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "21982:  return s",
          "21983: }",
          "21986: func (s *RowLevelPermissionDataSet) SetPermissionPolicy(v string) *RowLevelPermissionDataSet {",
          "21987:  s.PermissionPolicy = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24442: func (s *RowLevelPermissionDataSet) SetNamespace(v string) *RowLevelPermissionDataSet {",
          "24443:  s.Namespace = &v",
          "24444:  return s",
          "24445: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "24544:  return s",
          "24545: }",
          "24547: type UpdateDashboardInput struct {",
          "24548:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27009: type UpdateAccountCustomizationInput struct {",
          "27010:  _ struct{} `type:\"structure\"`",
          "27015:  AccountCustomization *AccountCustomization `type:\"structure\" required:\"true\"`",
          "27021:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "27024:  Namespace *string `location:\"querystring\" locationName:\"namespace\" type:\"string\"`",
          "27025: }",
          "27028: func (s UpdateAccountCustomizationInput) String() string {",
          "27029:  return awsutil.Prettify(s)",
          "27030: }",
          "27033: func (s UpdateAccountCustomizationInput) GoString() string {",
          "27034:  return s.String()",
          "27035: }",
          "27038: func (s *UpdateAccountCustomizationInput) Validate() error {",
          "27039:  invalidParams := request.ErrInvalidParams{Context: \"UpdateAccountCustomizationInput\"}",
          "27040:  if s.AccountCustomization == nil {",
          "27041:   invalidParams.Add(request.NewErrParamRequired(\"AccountCustomization\"))",
          "27042:  }",
          "27043:  if s.AwsAccountId == nil {",
          "27044:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "27045:  }",
          "27046:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "27047:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "27048:  }",
          "27050:  if invalidParams.Len() > 0 {",
          "27051:   return invalidParams",
          "27052:  }",
          "27053:  return nil",
          "27054: }",
          "27057: func (s *UpdateAccountCustomizationInput) SetAccountCustomization(v *AccountCustomization) *UpdateAccountCustomizationInput {",
          "27058:  s.AccountCustomization = v",
          "27059:  return s",
          "27060: }",
          "27063: func (s *UpdateAccountCustomizationInput) SetAwsAccountId(v string) *UpdateAccountCustomizationInput {",
          "27064:  s.AwsAccountId = &v",
          "27065:  return s",
          "27066: }",
          "27069: func (s *UpdateAccountCustomizationInput) SetNamespace(v string) *UpdateAccountCustomizationInput {",
          "27070:  s.Namespace = &v",
          "27071:  return s",
          "27072: }",
          "27074: type UpdateAccountCustomizationOutput struct {",
          "27075:  _ struct{} `type:\"structure\"`",
          "27078:  AccountCustomization *AccountCustomization `type:\"structure\"`",
          "27082:  AwsAccountId *string `min:\"12\" type:\"string\"`",
          "27085:  Namespace *string `type:\"string\"`",
          "27088:  RequestId *string `type:\"string\"`",
          "27091:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "27092: }",
          "27095: func (s UpdateAccountCustomizationOutput) String() string {",
          "27096:  return awsutil.Prettify(s)",
          "27097: }",
          "27100: func (s UpdateAccountCustomizationOutput) GoString() string {",
          "27101:  return s.String()",
          "27102: }",
          "27105: func (s *UpdateAccountCustomizationOutput) SetAccountCustomization(v *AccountCustomization) *UpdateAccountCustomizationOutput {",
          "27106:  s.AccountCustomization = v",
          "27107:  return s",
          "27108: }",
          "27111: func (s *UpdateAccountCustomizationOutput) SetAwsAccountId(v string) *UpdateAccountCustomizationOutput {",
          "27112:  s.AwsAccountId = &v",
          "27113:  return s",
          "27114: }",
          "27117: func (s *UpdateAccountCustomizationOutput) SetNamespace(v string) *UpdateAccountCustomizationOutput {",
          "27118:  s.Namespace = &v",
          "27119:  return s",
          "27120: }",
          "27123: func (s *UpdateAccountCustomizationOutput) SetRequestId(v string) *UpdateAccountCustomizationOutput {",
          "27124:  s.RequestId = &v",
          "27125:  return s",
          "27126: }",
          "27129: func (s *UpdateAccountCustomizationOutput) SetStatus(v int64) *UpdateAccountCustomizationOutput {",
          "27130:  s.Status = &v",
          "27131:  return s",
          "27132: }",
          "27134: type UpdateAccountSettingsInput struct {",
          "27135:  _ struct{} `type:\"structure\"`",
          "27141:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "27148:  DefaultNamespace *string `type:\"string\" required:\"true\"`",
          "27151:  NotificationEmail *string `type:\"string\"`",
          "27152: }",
          "27155: func (s UpdateAccountSettingsInput) String() string {",
          "27156:  return awsutil.Prettify(s)",
          "27157: }",
          "27160: func (s UpdateAccountSettingsInput) GoString() string {",
          "27161:  return s.String()",
          "27162: }",
          "27165: func (s *UpdateAccountSettingsInput) Validate() error {",
          "27166:  invalidParams := request.ErrInvalidParams{Context: \"UpdateAccountSettingsInput\"}",
          "27167:  if s.AwsAccountId == nil {",
          "27168:   invalidParams.Add(request.NewErrParamRequired(\"AwsAccountId\"))",
          "27169:  }",
          "27170:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "27171:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "27172:  }",
          "27173:  if s.DefaultNamespace == nil {",
          "27174:   invalidParams.Add(request.NewErrParamRequired(\"DefaultNamespace\"))",
          "27175:  }",
          "27177:  if invalidParams.Len() > 0 {",
          "27178:   return invalidParams",
          "27179:  }",
          "27180:  return nil",
          "27181: }",
          "27184: func (s *UpdateAccountSettingsInput) SetAwsAccountId(v string) *UpdateAccountSettingsInput {",
          "27185:  s.AwsAccountId = &v",
          "27186:  return s",
          "27187: }",
          "27190: func (s *UpdateAccountSettingsInput) SetDefaultNamespace(v string) *UpdateAccountSettingsInput {",
          "27191:  s.DefaultNamespace = &v",
          "27192:  return s",
          "27193: }",
          "27196: func (s *UpdateAccountSettingsInput) SetNotificationEmail(v string) *UpdateAccountSettingsInput {",
          "27197:  s.NotificationEmail = &v",
          "27198:  return s",
          "27199: }",
          "27201: type UpdateAccountSettingsOutput struct {",
          "27202:  _ struct{} `type:\"structure\"`",
          "27205:  RequestId *string `type:\"string\"`",
          "27208:  Status *int64 `location:\"statusCode\" type:\"integer\"`",
          "27209: }",
          "27212: func (s UpdateAccountSettingsOutput) String() string {",
          "27213:  return awsutil.Prettify(s)",
          "27214: }",
          "27217: func (s UpdateAccountSettingsOutput) GoString() string {",
          "27218:  return s.String()",
          "27219: }",
          "27222: func (s *UpdateAccountSettingsOutput) SetRequestId(v string) *UpdateAccountSettingsOutput {",
          "27223:  s.RequestId = &v",
          "27224:  return s",
          "27225: }",
          "27228: func (s *UpdateAccountSettingsOutput) SetStatus(v int64) *UpdateAccountSettingsOutput {",
          "27229:  s.Status = &v",
          "27230:  return s",
          "27231: }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "27083:  AwsAccountId *string `location:\"uri\" locationName:\"AwsAccountId\" min:\"12\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29775:  CustomPermissionsName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "27106:  Role *string `type:\"string\" required:\"true\" enum:\"UserRole\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29804:  UnapplyCustomPermissions *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "27130:  if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {",
          "27131:   invalidParams.Add(request.NewErrParamMinLen(\"AwsAccountId\", 12))",
          "27132:  }",
          "27133:  if s.Email == nil {",
          "27134:   invalidParams.Add(request.NewErrParamRequired(\"Email\"))",
          "27135:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29831:  if s.CustomPermissionsName != nil && len(*s.CustomPermissionsName) < 1 {",
          "29832:   invalidParams.Add(request.NewErrParamMinLen(\"CustomPermissionsName\", 1))",
          "29833:  }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "27161:  return s",
          "27162: }",
          "27165: func (s *UpdateUserInput) SetEmail(v string) *UpdateUserInput {",
          "27166:  s.Email = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29866: func (s *UpdateUserInput) SetCustomPermissionsName(v string) *UpdateUserInput {",
          "29867:  s.CustomPermissionsName = &v",
          "29868:  return s",
          "29869: }",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "27179:  return s",
          "27180: }",
          "27183: func (s *UpdateUserInput) SetUserName(v string) *UpdateUserInput {",
          "27184:  s.UserName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29890: func (s *UpdateUserInput) SetUnapplyCustomPermissions(v bool) *UpdateUserInput {",
          "29891:  s.UnapplyCustomPermissions = &v",
          "29892:  return s",
          "29893: }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "27316:  Arn *string `type:\"string\"`",
          "27319:  Email *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30032:  CustomPermissionsName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "27366:  return s",
          "27367: }",
          "27370: func (s *User) SetEmail(v string) *User {",
          "27371:  s.Email = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30086: func (s *User) SetCustomPermissionsName(v string) *User {",
          "30087:  s.CustomPermissionsName = &v",
          "30088:  return s",
          "30089: }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "27673:  DataSourceTypeTwitter = \"TWITTER\"",
          "27674: )",
          "27676: const (",
          "27678:  ExceptionResourceTypeUser = \"USER\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30398: const (",
          "30400:  EditionStandard = \"STANDARD\"",
          "30403:  EditionEnterprise = \"ENTERPRISE\"",
          "30404: )",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "27755:  GeoSpatialDataRoleLatitude = \"LATITUDE\"",
          "27756: )",
          "27758: const (",
          "27760:  IdentityTypeIam = \"IAM\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30488: const (",
          "30490:  IdentityStoreQuicksight = \"QUICKSIGHT\"",
          "30491: )",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "27964:  JoinTypeRight = \"RIGHT\"",
          "27965: )",
          "27967: const (",
          "27969:  ResourceStatusCreationInProgress = \"CREATION_IN_PROGRESS\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30702: const (",
          "30704:  NamespaceErrorTypePermissionDenied = \"PERMISSION_DENIED\"",
          "30707:  NamespaceErrorTypeInternalServiceError = \"INTERNAL_SERVICE_ERROR\"",
          "30708: )",
          "30710: const (",
          "30712:  NamespaceStatusCreated = \"CREATED\"",
          "30715:  NamespaceStatusCreating = \"CREATING\"",
          "30718:  NamespaceStatusDeleting = \"DELETING\"",
          "30721:  NamespaceStatusRetryableFailure = \"RETRYABLE_FAILURE\"",
          "30724:  NamespaceStatusNonRetryableFailure = \"NON_RETRYABLE_FAILURE\"",
          "30725: )",
          "",
          "---------------"
        ],
        "service/quicksight/quicksightiface/interface.go||service/quicksight/quicksightiface/interface.go": [
          "File: service/quicksight/quicksightiface/interface.go -> service/quicksight/quicksightiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  CancelIngestionWithContext(aws.Context, *quicksight.CancelIngestionInput, ...request.Option) (*quicksight.CancelIngestionOutput, error)",
          "65:  CancelIngestionRequest(*quicksight.CancelIngestionInput) (*request.Request, *quicksight.CancelIngestionOutput)",
          "67:  CreateDashboard(*quicksight.CreateDashboardInput) (*quicksight.CreateDashboardOutput, error)",
          "68:  CreateDashboardWithContext(aws.Context, *quicksight.CreateDashboardInput, ...request.Option) (*quicksight.CreateDashboardOutput, error)",
          "69:  CreateDashboardRequest(*quicksight.CreateDashboardInput) (*request.Request, *quicksight.CreateDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  CreateAccountCustomization(*quicksight.CreateAccountCustomizationInput) (*quicksight.CreateAccountCustomizationOutput, error)",
          "68:  CreateAccountCustomizationWithContext(aws.Context, *quicksight.CreateAccountCustomizationInput, ...request.Option) (*quicksight.CreateAccountCustomizationOutput, error)",
          "69:  CreateAccountCustomizationRequest(*quicksight.CreateAccountCustomizationInput) (*request.Request, *quicksight.CreateAccountCustomizationOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:  CreateIngestionWithContext(aws.Context, *quicksight.CreateIngestionInput, ...request.Option) (*quicksight.CreateIngestionOutput, error)",
          "93:  CreateIngestionRequest(*quicksight.CreateIngestionInput) (*request.Request, *quicksight.CreateIngestionOutput)",
          "95:  CreateTemplate(*quicksight.CreateTemplateInput) (*quicksight.CreateTemplateOutput, error)",
          "96:  CreateTemplateWithContext(aws.Context, *quicksight.CreateTemplateInput, ...request.Option) (*quicksight.CreateTemplateOutput, error)",
          "97:  CreateTemplateRequest(*quicksight.CreateTemplateInput) (*request.Request, *quicksight.CreateTemplateOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  CreateNamespace(*quicksight.CreateNamespaceInput) (*quicksight.CreateNamespaceOutput, error)",
          "100:  CreateNamespaceWithContext(aws.Context, *quicksight.CreateNamespaceInput, ...request.Option) (*quicksight.CreateNamespaceOutput, error)",
          "101:  CreateNamespaceRequest(*quicksight.CreateNamespaceInput) (*request.Request, *quicksight.CreateNamespaceOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:  CreateThemeAliasWithContext(aws.Context, *quicksight.CreateThemeAliasInput, ...request.Option) (*quicksight.CreateThemeAliasOutput, error)",
          "109:  CreateThemeAliasRequest(*quicksight.CreateThemeAliasInput) (*request.Request, *quicksight.CreateThemeAliasOutput)",
          "111:  DeleteDashboard(*quicksight.DeleteDashboardInput) (*quicksight.DeleteDashboardOutput, error)",
          "112:  DeleteDashboardWithContext(aws.Context, *quicksight.DeleteDashboardInput, ...request.Option) (*quicksight.DeleteDashboardOutput, error)",
          "113:  DeleteDashboardRequest(*quicksight.DeleteDashboardInput) (*request.Request, *quicksight.DeleteDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119:  DeleteAccountCustomization(*quicksight.DeleteAccountCustomizationInput) (*quicksight.DeleteAccountCustomizationOutput, error)",
          "120:  DeleteAccountCustomizationWithContext(aws.Context, *quicksight.DeleteAccountCustomizationInput, ...request.Option) (*quicksight.DeleteAccountCustomizationOutput, error)",
          "121:  DeleteAccountCustomizationRequest(*quicksight.DeleteAccountCustomizationInput) (*request.Request, *quicksight.DeleteAccountCustomizationOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "132:  DeleteIAMPolicyAssignmentWithContext(aws.Context, *quicksight.DeleteIAMPolicyAssignmentInput, ...request.Option) (*quicksight.DeleteIAMPolicyAssignmentOutput, error)",
          "133:  DeleteIAMPolicyAssignmentRequest(*quicksight.DeleteIAMPolicyAssignmentInput) (*request.Request, *quicksight.DeleteIAMPolicyAssignmentOutput)",
          "135:  DeleteTemplate(*quicksight.DeleteTemplateInput) (*quicksight.DeleteTemplateOutput, error)",
          "136:  DeleteTemplateWithContext(aws.Context, *quicksight.DeleteTemplateInput, ...request.Option) (*quicksight.DeleteTemplateOutput, error)",
          "137:  DeleteTemplateRequest(*quicksight.DeleteTemplateInput) (*request.Request, *quicksight.DeleteTemplateOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:  DeleteNamespace(*quicksight.DeleteNamespaceInput) (*quicksight.DeleteNamespaceOutput, error)",
          "148:  DeleteNamespaceWithContext(aws.Context, *quicksight.DeleteNamespaceInput, ...request.Option) (*quicksight.DeleteNamespaceOutput, error)",
          "149:  DeleteNamespaceRequest(*quicksight.DeleteNamespaceInput) (*request.Request, *quicksight.DeleteNamespaceOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "156:  DeleteUserByPrincipalIdWithContext(aws.Context, *quicksight.DeleteUserByPrincipalIdInput, ...request.Option) (*quicksight.DeleteUserByPrincipalIdOutput, error)",
          "157:  DeleteUserByPrincipalIdRequest(*quicksight.DeleteUserByPrincipalIdInput) (*request.Request, *quicksight.DeleteUserByPrincipalIdOutput)",
          "159:  DescribeDashboard(*quicksight.DescribeDashboardInput) (*quicksight.DescribeDashboardOutput, error)",
          "160:  DescribeDashboardWithContext(aws.Context, *quicksight.DescribeDashboardInput, ...request.Option) (*quicksight.DescribeDashboardOutput, error)",
          "161:  DescribeDashboardRequest(*quicksight.DescribeDashboardInput) (*request.Request, *quicksight.DescribeDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:  DescribeAccountCustomization(*quicksight.DescribeAccountCustomizationInput) (*quicksight.DescribeAccountCustomizationOutput, error)",
          "176:  DescribeAccountCustomizationWithContext(aws.Context, *quicksight.DescribeAccountCustomizationInput, ...request.Option) (*quicksight.DescribeAccountCustomizationOutput, error)",
          "177:  DescribeAccountCustomizationRequest(*quicksight.DescribeAccountCustomizationInput) (*request.Request, *quicksight.DescribeAccountCustomizationOutput)",
          "179:  DescribeAccountSettings(*quicksight.DescribeAccountSettingsInput) (*quicksight.DescribeAccountSettingsOutput, error)",
          "180:  DescribeAccountSettingsWithContext(aws.Context, *quicksight.DescribeAccountSettingsInput, ...request.Option) (*quicksight.DescribeAccountSettingsOutput, error)",
          "181:  DescribeAccountSettingsRequest(*quicksight.DescribeAccountSettingsInput) (*request.Request, *quicksight.DescribeAccountSettingsOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "192:  DescribeIngestionWithContext(aws.Context, *quicksight.DescribeIngestionInput, ...request.Option) (*quicksight.DescribeIngestionOutput, error)",
          "193:  DescribeIngestionRequest(*quicksight.DescribeIngestionInput) (*request.Request, *quicksight.DescribeIngestionOutput)",
          "195:  DescribeTemplate(*quicksight.DescribeTemplateInput) (*quicksight.DescribeTemplateOutput, error)",
          "196:  DescribeTemplateWithContext(aws.Context, *quicksight.DescribeTemplateInput, ...request.Option) (*quicksight.DescribeTemplateOutput, error)",
          "197:  DescribeTemplateRequest(*quicksight.DescribeTemplateInput) (*request.Request, *quicksight.DescribeTemplateOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "219:  DescribeNamespace(*quicksight.DescribeNamespaceInput) (*quicksight.DescribeNamespaceOutput, error)",
          "220:  DescribeNamespaceWithContext(aws.Context, *quicksight.DescribeNamespaceInput, ...request.Option) (*quicksight.DescribeNamespaceOutput, error)",
          "221:  DescribeNamespaceRequest(*quicksight.DescribeNamespaceInput) (*request.Request, *quicksight.DescribeNamespaceOutput)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "224:  GetDashboardEmbedUrlWithContext(aws.Context, *quicksight.GetDashboardEmbedUrlInput, ...request.Option) (*quicksight.GetDashboardEmbedUrlOutput, error)",
          "225:  GetDashboardEmbedUrlRequest(*quicksight.GetDashboardEmbedUrlInput) (*request.Request, *quicksight.GetDashboardEmbedUrlOutput)",
          "227:  ListDashboardVersions(*quicksight.ListDashboardVersionsInput) (*quicksight.ListDashboardVersionsOutput, error)",
          "228:  ListDashboardVersionsWithContext(aws.Context, *quicksight.ListDashboardVersionsInput, ...request.Option) (*quicksight.ListDashboardVersionsOutput, error)",
          "229:  ListDashboardVersionsRequest(*quicksight.ListDashboardVersionsInput) (*request.Request, *quicksight.ListDashboardVersionsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "255:  GetSessionEmbedUrl(*quicksight.GetSessionEmbedUrlInput) (*quicksight.GetSessionEmbedUrlOutput, error)",
          "256:  GetSessionEmbedUrlWithContext(aws.Context, *quicksight.GetSessionEmbedUrlInput, ...request.Option) (*quicksight.GetSessionEmbedUrlOutput, error)",
          "257:  GetSessionEmbedUrlRequest(*quicksight.GetSessionEmbedUrlInput) (*request.Request, *quicksight.GetSessionEmbedUrlOutput)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "275:  ListIngestionsPages(*quicksight.ListIngestionsInput, func(*quicksight.ListIngestionsOutput, bool) bool) error",
          "276:  ListIngestionsPagesWithContext(aws.Context, *quicksight.ListIngestionsInput, func(*quicksight.ListIngestionsOutput, bool) bool, ...request.Option) error",
          "278:  ListTagsForResource(*quicksight.ListTagsForResourceInput) (*quicksight.ListTagsForResourceOutput, error)",
          "279:  ListTagsForResourceWithContext(aws.Context, *quicksight.ListTagsForResourceInput, ...request.Option) (*quicksight.ListTagsForResourceOutput, error)",
          "280:  ListTagsForResourceRequest(*quicksight.ListTagsForResourceInput) (*request.Request, *quicksight.ListTagsForResourceOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310:  ListNamespaces(*quicksight.ListNamespacesInput) (*quicksight.ListNamespacesOutput, error)",
          "311:  ListNamespacesWithContext(aws.Context, *quicksight.ListNamespacesInput, ...request.Option) (*quicksight.ListNamespacesOutput, error)",
          "312:  ListNamespacesRequest(*quicksight.ListNamespacesInput) (*request.Request, *quicksight.ListNamespacesOutput)",
          "314:  ListNamespacesPages(*quicksight.ListNamespacesInput, func(*quicksight.ListNamespacesOutput, bool) bool) error",
          "315:  ListNamespacesPagesWithContext(aws.Context, *quicksight.ListNamespacesInput, func(*quicksight.ListNamespacesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "339:  UntagResourceWithContext(aws.Context, *quicksight.UntagResourceInput, ...request.Option) (*quicksight.UntagResourceOutput, error)",
          "340:  UntagResourceRequest(*quicksight.UntagResourceInput) (*request.Request, *quicksight.UntagResourceOutput)",
          "342:  UpdateDashboard(*quicksight.UpdateDashboardInput) (*quicksight.UpdateDashboardOutput, error)",
          "343:  UpdateDashboardWithContext(aws.Context, *quicksight.UpdateDashboardInput, ...request.Option) (*quicksight.UpdateDashboardOutput, error)",
          "344:  UpdateDashboardRequest(*quicksight.UpdateDashboardInput) (*request.Request, *quicksight.UpdateDashboardOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "381:  UpdateAccountCustomization(*quicksight.UpdateAccountCustomizationInput) (*quicksight.UpdateAccountCustomizationOutput, error)",
          "382:  UpdateAccountCustomizationWithContext(aws.Context, *quicksight.UpdateAccountCustomizationInput, ...request.Option) (*quicksight.UpdateAccountCustomizationOutput, error)",
          "383:  UpdateAccountCustomizationRequest(*quicksight.UpdateAccountCustomizationInput) (*request.Request, *quicksight.UpdateAccountCustomizationOutput)",
          "385:  UpdateAccountSettings(*quicksight.UpdateAccountSettingsInput) (*quicksight.UpdateAccountSettingsOutput, error)",
          "386:  UpdateAccountSettingsWithContext(aws.Context, *quicksight.UpdateAccountSettingsInput, ...request.Option) (*quicksight.UpdateAccountSettingsOutput, error)",
          "387:  UpdateAccountSettingsRequest(*quicksight.UpdateAccountSettingsInput) (*request.Request, *quicksight.UpdateAccountSettingsOutput)",
          "",
          "---------------"
        ]
      }
    }
  ]
}