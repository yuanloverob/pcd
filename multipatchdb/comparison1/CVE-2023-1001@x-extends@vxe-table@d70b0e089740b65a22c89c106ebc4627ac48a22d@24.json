{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4df2659eee9a863fabd0da5b1072bcacbf642c30",
      "candidate_info": {
        "commit_hash": "4df2659eee9a863fabd0da5b1072bcacbf642c30",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/4df2659eee9a863fabd0da5b1072bcacbf642c30",
        "files": [
          "packages/input/src/input.js"
        ],
        "message": "\u4fee\u590d\u65e5\u671f\u591a\u9009\u95ee\u9898",
        "before_after_code_files": [
          "packages/input/src/input.js||packages/input/src/input.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/input/src/input.js||packages/input/src/input.js": [
          "File: packages/input/src/input.js -> packages/input/src/input.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1654:       this.dateTimeChangeEvent(evnt)",
          "1655:     },",
          "1656:     dateConfirmEvent () {",
          "1659:       }",
          "1660:       this.hidePanel()",
          "1661:     },",
          "",
          "[Removed Lines]",
          "1657:       if (this.isDateTimeType || this.multiple) {",
          "1658:         this.dateChange(this.dateValue || this.currentDate)",
          "",
          "[Added Lines]",
          "1657:       const { datetimePanelValue, isDateTimeType, dateValueFormat, dateMultipleValue } = this",
          "1658:       if (this.isDateTimeType) {",
          "1659:         if (this.multiple) {",
          "1661:           if (isDateTimeType) {",
          "1663:             const { dateListValue } = this",
          "1664:             const datetimeRest = []",
          "1665:             dateListValue.forEach(item => {",
          "1666:               if (item) {",
          "1667:                 item.setHours(datetimePanelValue.getHours())",
          "1668:                 item.setMinutes(datetimePanelValue.getMinutes())",
          "1669:                 item.setSeconds(datetimePanelValue.getSeconds())",
          "1670:                 datetimeRest.push(item)",
          "1671:               }",
          "1672:             })",
          "1673:             this.emitModel(datetimeRest.map(date => XEUtils.toDateString(date, dateValueFormat)).join(','), { type: 'update' })",
          "1674:           } else {",
          "1676:             this.emitModel(dateMultipleValue.join(','), { type: 'update' })",
          "1677:           }",
          "1678:         } else {",
          "1679:           this.dateChange(this.dateValue || this.currentDate)",
          "1680:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1829:           const { dateListValue } = this",
          "1830:           const datetimeRest = []",
          "1831:           dateListValue.forEach(item => {",
          "1833:               item.setHours(datetimePanelValue.getHours())",
          "1834:               item.setMinutes(datetimePanelValue.getMinutes())",
          "1835:               item.setSeconds(datetimePanelValue.getSeconds())",
          "1836:               datetimeRest.push(item)",
          "1837:             }",
          "1838:           })",
          "1840:           this.emitModel(datetimeRest.map(date => XEUtils.toDateString(date, dateValueFormat)).join(','), { type: 'update' })",
          "1841:         } else {",
          "",
          "[Removed Lines]",
          "1832:             if (item && !XEUtils.isDateSame(date, item, 'yyyyMMdd')) {",
          "1839:           datetimeRest.push(date)",
          "",
          "[Added Lines]",
          "1853:           const eqIndex = XEUtils.findIndexOf(dateListValue, val => XEUtils.isDateSame(date, val, 'yyyyMMdd'))",
          "1854:           if (eqIndex === -1) {",
          "1855:             dateListValue.push(date)",
          "1856:           } else {",
          "1857:             dateListValue.splice(eqIndex, 1)",
          "1858:           }",
          "1860:             if (item) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5bcd61a4464f990f970c504bd2519147f5abac9c",
      "candidate_info": {
        "commit_hash": "5bcd61a4464f990f970c504bd2519147f5abac9c",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/5bcd61a4464f990f970c504bd2519147f5abac9c",
        "files": [
          ".eslintrc.js",
          "examples/api/table.js",
          "examples/views/table/edit/AutoClear.vue",
          "examples/views/table/edit/Manual.vue",
          "examples/views/table/grid/Edit.vue",
          "examples/views/table/interceptor/API.vue",
          "package.json",
          "packages/custom/src/panel.js",
          "packages/edit/src/mixin.js",
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js",
          "packages/menu/src/mixin.js",
          "packages/table/src/methods.js",
          "packages/table/src/table.js",
          "packages/table/src/util.js",
          "packages/v-x-e-table/src/interceptor.js",
          "styles/custom.scss",
          "types/checkbox-group.d.ts",
          "types/colgroup.d.ts",
          "types/column.d.ts",
          "types/table.d.ts",
          "types/v-x-e-table/renderer.d.ts"
        ],
        "message": "releases 3.8.4",
        "before_after_code_files": [
          ".eslintrc.js||.eslintrc.js",
          "examples/api/table.js||examples/api/table.js",
          "examples/views/table/edit/AutoClear.vue||examples/views/table/edit/AutoClear.vue",
          "examples/views/table/edit/Manual.vue||examples/views/table/edit/Manual.vue",
          "examples/views/table/grid/Edit.vue||examples/views/table/grid/Edit.vue",
          "examples/views/table/interceptor/API.vue||examples/views/table/interceptor/API.vue",
          "packages/custom/src/panel.js||packages/custom/src/panel.js",
          "packages/edit/src/mixin.js||packages/edit/src/mixin.js",
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js",
          "packages/menu/src/mixin.js||packages/menu/src/mixin.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "packages/table/src/util.js||packages/table/src/util.js",
          "packages/v-x-e-table/src/interceptor.js||packages/v-x-e-table/src/interceptor.js",
          "styles/custom.scss||styles/custom.scss",
          "types/checkbox-group.d.ts||types/checkbox-group.d.ts",
          "types/colgroup.d.ts||types/colgroup.d.ts",
          "types/column.d.ts||types/column.d.ts",
          "types/table.d.ts||types/table.d.ts",
          "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".eslintrc.js||.eslintrc.js": [
          "File: .eslintrc.js -> .eslintrc.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:   rules: {",
          "15:     'no-console': 'off',",
          "16:     'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',",
          "17:     'vue/multi-word-component-names': 'off',",
          "18:     'vue/no-v-text-v-html-on-component': 'off',",
          "19:     'multiline-ternary': 'off'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:     '@typescript-eslint/no-explicit-any': 'off',",
          "",
          "---------------"
        ],
        "examples/api/table.js||examples/api/table.js": [
          "File: examples/api/table.js -> examples/api/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "4463:         list: []",
          "4464:       },",
          "4465:       {",
          "4467:         desc: '\u624b\u52a8\u6e05\u9664\u5355\u5143\u683c\u6fc0\u6d3b\u72b6\u6001',",
          "4468:         version: '',",
          "4469:         type: 'Promise<any>',",
          "",
          "[Removed Lines]",
          "4466:         name: 'clearActived()',",
          "",
          "[Added Lines]",
          "4466:         name: 'clearEdit()',",
          "",
          "---------------"
        ],
        "examples/views/table/edit/AutoClear.vue||examples/views/table/edit/AutoClear.vue": [
          "File: examples/views/table/edit/AutoClear.vue -> examples/views/table/edit/AutoClear.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   <div>",
          "3:     <p class=\"tip\">",
          "4:       \u901a\u8fc7\u8bbe\u7f6e <table-api-link prop=\"edit-config\"/>.<table-api-link prop=\"autoClear\"/> \u5173\u95ed\u9ed8\u8ba4\u7684\u5355\u5143\u683c\u6e05\u9664\u6fc0\u6d3b\u884c\u4e3a<br>",
          "6:     </p>",
          "8:     <vxe-table",
          "",
          "[Removed Lines]",
          "5:       <span class=\"red\">\uff08\u6ce8\uff1a\u5982\u679c\u8bbe\u7f6e\u4e3a\u624b\u52a8\u6a21\u5f0f\u5219\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u6fc0\u6d3b\u72b6\u6001\uff0c\u9700\u8981\u624b\u52a8\u8c03\u7528 clearActived \u5173\u95ed\u7f16\u8f91\u72b6\u6001\uff09</span>",
          "",
          "[Added Lines]",
          "5:       <span class=\"red\">\uff08\u6ce8\uff1a\u5982\u679c\u8bbe\u7f6e\u4e3a\u624b\u52a8\u6a21\u5f0f\u5219\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u6fc0\u6d3b\u72b6\u6001\uff0c\u9700\u8981\u624b\u52a8\u8c03\u7528 clearEdit \u5173\u95ed\u7f16\u8f91\u72b6\u6001\uff09</span>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:             },",
          "110:             saveRowEvent () {",
          "111:               const $table = this.$refs.xTable",
          "113:                 this.$XModal.alert('success')",
          "114:               })",
          "115:             },",
          "116:             cancelRowEvent (row) {",
          "117:               const $table = this.$refs.xTable",
          "119:                 .then(() => $table.revertData(row))",
          "120:             }",
          "121:           }",
          "",
          "[Removed Lines]",
          "112:               $table.clearActived().then(() => {",
          "118:               $table.clearActived()",
          "",
          "[Added Lines]",
          "112:               $table.clearEdit().then(() => {",
          "118:               $table.clearEdit()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "131:     },",
          "132:     saveRowEvent () {",
          "133:       const $table = this.$refs.xTable",
          "135:         this.$XModal.alert('success')",
          "136:       })",
          "137:     },",
          "138:     cancelRowEvent (row) {",
          "139:       const $table = this.$refs.xTable",
          "141:         .then(() => $table.revertData(row))",
          "142:     }",
          "143:   }",
          "",
          "[Removed Lines]",
          "134:       $table.clearActived().then(() => {",
          "140:       $table.clearActived()",
          "",
          "[Added Lines]",
          "134:       $table.clearEdit().then(() => {",
          "140:       $table.clearEdit()",
          "",
          "---------------"
        ],
        "examples/views/table/edit/Manual.vue||examples/views/table/edit/Manual.vue": [
          "File: examples/views/table/edit/Manual.vue -> examples/views/table/edit/Manual.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:             },",
          "125:             saveRowEvent () {",
          "126:               const $table = this.$refs.xTable",
          "128:                 this.loading = true",
          "129:                 setTimeout(() => {",
          "130:                   this.loading = false",
          "",
          "[Removed Lines]",
          "127:               $table.clearActived().then(() => {",
          "",
          "[Added Lines]",
          "127:               $table.clearEdit().then(() => {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:             },",
          "135:             cancelRowEvent (row) {",
          "136:               const $table = this.$refs.xTable",
          "139:                 $table.revertData(row)",
          "140:               })",
          "",
          "[Removed Lines]",
          "137:               $table.clearActived().then(() => {",
          "",
          "[Added Lines]",
          "137:               $table.clearEdit().then(() => {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "152:     },",
          "153:     saveRowEvent () {",
          "154:       const $table = this.$refs.xTable",
          "156:         this.loading = true",
          "157:         setTimeout(() => {",
          "158:           this.loading = false",
          "",
          "[Removed Lines]",
          "155:       $table.clearActived().then(() => {",
          "",
          "[Added Lines]",
          "155:       $table.clearEdit().then(() => {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "162:     },",
          "163:     cancelRowEvent (row) {",
          "164:       const $table = this.$refs.xTable",
          "167:         $table.revertData(row)",
          "168:       })",
          "",
          "[Removed Lines]",
          "165:       $table.clearActived().then(() => {",
          "",
          "[Added Lines]",
          "165:       $table.clearEdit().then(() => {",
          "",
          "---------------"
        ],
        "examples/views/table/grid/Edit.vue||examples/views/table/grid/Edit.vue": [
          "File: examples/views/table/grid/Edit.vue -> examples/views/table/grid/Edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:             },",
          "171:             saveRowEvent () {",
          "172:               const $grid = this.$refs.xGrid",
          "174:                 this.gridOptions.loading = true",
          "175:                 setTimeout(() => {",
          "176:                   this.gridOptions.loading = false",
          "",
          "[Removed Lines]",
          "173:               $grid.clearActived().then(() => {",
          "",
          "[Added Lines]",
          "173:               $grid.clearEdit().then(() => {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241:     },",
          "242:     saveRowEvent () {",
          "243:       const $grid = this.$refs.xGrid",
          "245:         this.gridOptions.loading = true",
          "246:         setTimeout(() => {",
          "247:           this.gridOptions.loading = false",
          "",
          "[Removed Lines]",
          "244:       $grid.clearActived().then(() => {",
          "",
          "[Added Lines]",
          "244:       $grid.clearEdit().then(() => {",
          "",
          "---------------"
        ],
        "examples/views/table/interceptor/API.vue||examples/views/table/interceptor/API.vue": [
          "File: examples/views/table/interceptor/API.vue -> examples/views/table/interceptor/API.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:         {",
          "141:           desc: '\u6e05\u9664\u6fc0\u6d3b\u5355\u5143\u683c\u4e4b\u524d\u89e6\u53d1\uff0c\u5141\u8bb8\u8fd4\u56de false \u963b\u6b62\u9ed8\u8ba4\u884c\u4e3a',",
          "142:           version: '',",
          "143:           type: 'Boolean',",
          "",
          "[Removed Lines]",
          "140:           name: 'event.clearActived',",
          "",
          "[Added Lines]",
          "140:           name: 'event.clearEdit',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202:       ],",
          "203:       demoCodes: [",
          "204:         `",
          "207:           if (event.target.className.indexOf('other-popper') > -1) {",
          "208:             return false",
          "",
          "[Removed Lines]",
          "205:         VXETable.interceptor.add('event.clearActived', (params, event) => {",
          "",
          "[Added Lines]",
          "205:         VXETable.interceptor.add('event.clearEdit', (params, event) => {",
          "",
          "---------------"
        ],
        "packages/custom/src/panel.js||packages/custom/src/panel.js": [
          "File: packages/custom/src/panel.js -> packages/custom/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "172: function renderPopupPanel (h, _vm) {",
          "173:   const { $xetable, customStore } = _vm",
          "175:   const { checkMethod, visibleMethod } = customOpts",
          "176:   const trVNs = []",
          "177:   XEUtils.eachTree(customColumnList, (column, index, items, path, parent) => {",
          "",
          "[Removed Lines]",
          "174:   const { customOpts, customColumnList, isMaxFixedColumn } = $xetable",
          "",
          "[Added Lines]",
          "174:   const { customOpts, customColumnList, columnOpts, isMaxFixedColumn } = $xetable",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "279:       title: GlobalConfig.i18n('vxe.custom.cstmTitle'),",
          "280:       className: 'vxe-table-custom-popup-wrapper vxe-table--ignore-clear',",
          "281:       width: '40vw',",
          "283:       height: '50vh',",
          "284:       minHeight: 300,",
          "285:       mask: true,",
          "",
          "[Removed Lines]",
          "282:       minWidth: 500,",
          "",
          "[Added Lines]",
          "282:       minWidth: 520,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "307:               h('colgroup', {}, [",
          "308:                 h('col', {",
          "309:                   style: {",
          "311:                   }",
          "312:                 }),",
          "313:                 h('col'),",
          "",
          "[Removed Lines]",
          "310:                     width: '60px'",
          "",
          "[Added Lines]",
          "310:                     width: '80px'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "324:               ]),",
          "325:               h('thead', {}, [",
          "326:                 h('tr', {}, [",
          "328:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colTitle')),",
          "329:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colVisible')),",
          "331:                 ])",
          "332:               ]),",
          "333:               h('transition-group', {",
          "",
          "[Removed Lines]",
          "327:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colSort')),",
          "330:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colFixed'))",
          "",
          "[Added Lines]",
          "327:                   h('th', {}, [",
          "328:                     h('span', {",
          "329:                       class: 'vxe-table-custom-popup--table-sort-help-title'",
          "330:                     }, GlobalConfig.i18n('vxe.custom.setting.colSort')),",
          "331:                     h('vxe-tooltip', {",
          "332:                       props: {",
          "333:                         enterable: true,",
          "334:                         content: '\u70b9\u51fb\u5e76\u62d6\u52a8\u56fe\u6807\u53ef\u4ee5\u8c03\u6574\u5217\u7684\u6392\u5e8f'",
          "335:                       },",
          "336:                       scopedSlots: {",
          "337:                         default: () => {",
          "338:                           return h('i', {",
          "339:                             class: 'vxe-table-custom-popup--table-sort-help-icon vxe-icon-question-circle-fill'",
          "340:                           })",
          "341:                         }",
          "342:                       }",
          "343:                     })",
          "344:                   ]),",
          "347:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colFixed', [columnOpts.maxFixedSize || 0]))",
          "",
          "---------------"
        ],
        "packages/edit/src/mixin.js||packages/edit/src/mixin.js": [
          "File: packages/edit/src/mixin.js -> packages/edit/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:       }",
          "309:       if (actived.row && this.findRowIndexOf(rows, actived.row) > -1) {",
          "311:       }",
          "313:       rows.forEach(row => {",
          "",
          "[Removed Lines]",
          "310:         this.clearActived()",
          "",
          "[Added Lines]",
          "310:         this.clearEdit()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:             }",
          "440:             this.closeTooltip()",
          "441:             if (actived.column) {",
          "443:             }",
          "444:             type = 'edit-activated'",
          "445:             column.renderHeight = cell.offsetHeight",
          "",
          "[Removed Lines]",
          "442:               this.clearActived(evnt)",
          "",
          "[Added Lines]",
          "442:               this.clearEdit(evnt)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "532:       }",
          "533:     },",
          "534:     _clearActived (evnt) {",
          "539:       return this.clearEdit(evnt)",
          "540:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "535:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "536:         warnLog('vxe.error.delFunc', ['clearActived', 'clearEdit'])",
          "537:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "544:     _clearEdit (evnt) {",
          "545:       const { editStore } = this",
          "547:       const { row, column } = actived",
          "548:       if (row || column) {",
          "549:         this._syncActivedCell()",
          "",
          "[Removed Lines]",
          "546:       const { actived } = editStore",
          "",
          "[Added Lines]",
          "546:       const { actived, focused } = editStore",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "560:           $columnIndex: this.getVMColumnIndex(column)",
          "561:         }, evnt)",
          "562:       }",
          "563:       if (GlobalConfig.cellVaildMode === 'obsolete') {",
          "564:         if (this.clearValidate) {",
          "565:           return this.clearValidate()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "563:       focused.row = null",
          "564:       focused.column = null",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "707:       const selectMethod = () => {",
          "708:         if (isMouseSelected && (selected.row !== row || selected.column !== column)) {",
          "709:           if (actived.row !== row || (editOpts.mode === 'cell' ? actived.column !== column : false)) {",
          "711:             this.clearSelected(evnt)",
          "712:             this.clearCellAreas(evnt)",
          "713:             this.clearCopyCellArea(evnt)",
          "",
          "[Removed Lines]",
          "710:             this.clearActived(evnt)",
          "",
          "[Added Lines]",
          "712:             this.clearEdit(evnt)",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       cstmDragTarget: 'Moving target: {0}',",
          "115:       setting: {",
          "116:         colSort: 'Sort',",
          "117:         colTitle: 'Title',",
          "118:         colVisible: 'Visible',",
          "120:         fixedLeft: 'Left',",
          "121:         fixedUnset: 'Unset',",
          "122:         fixedRight: 'Right'",
          "",
          "[Removed Lines]",
          "119:         colFixed: 'Freeze column',",
          "",
          "[Added Lines]",
          "117:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "120:         colFixed: 'Freeze columns (Max {0})',",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js": [
          "File: packages/locale/lang/es-ES.js -> packages/locale/lang/es-ES.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       cstmDragTarget: 'Moving target: {0}',",
          "115:       setting: {",
          "116:         colSort: 'Sort',",
          "117:         colTitle: 'Title',",
          "118:         colVisible: 'Visible',",
          "120:         fixedLeft: 'Left',",
          "121:         fixedUnset: 'Unset',",
          "122:         fixedRight: 'Right'",
          "",
          "[Removed Lines]",
          "119:         colFixed: 'Freeze column',",
          "",
          "[Added Lines]",
          "117:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "120:         colFixed: 'Freeze columns (Max {0})',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       cstmDragTarget: '\u79fb\u52d5\u30bf\u30fc\u30b2\u30c3\u30c8: {0}',",
          "115:       setting: {",
          "116:         colSort: '\u30bd\u30fc\u30c8',",
          "117:         colTitle: '\u30bf\u30a4\u30c8\u30eb',",
          "118:         colVisible: '\u8868\u793a',",
          "120:         fixedLeft: '\u5de6\u5074',",
          "121:         fixedUnset: '\u6307\u5b9a\u3057\u306a\u3044',",
          "122:         fixedRight: '\u53f3\u5074'",
          "",
          "[Removed Lines]",
          "119:         colFixed: '\u5217\u56fa\u5b9a',",
          "",
          "[Added Lines]",
          "117:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "120:         colFixed: '\u51bb\u7ed3\u5217\uff08\u6700\u591a {0} \u5217\uff09',",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js": [
          "File: packages/locale/lang/pt-BR.js -> packages/locale/lang/pt-BR.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       cstmDragTarget: 'Moving target: {0}',",
          "115:       setting: {",
          "116:         colSort: 'Sort',",
          "117:         colTitle: 'Title',",
          "118:         colVisible: 'Visible',",
          "120:         fixedLeft: 'Left',",
          "121:         fixedUnset: 'Unset',",
          "122:         fixedRight: 'Right'",
          "",
          "[Removed Lines]",
          "119:         colFixed: 'Freeze column',",
          "",
          "[Added Lines]",
          "117:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "120:         colFixed: 'Freeze columns (Max {0})',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       cstmDragTarget: '\u79fb\u52a8\u76ee\u6807\uff1a{0}',",
          "115:       setting: {",
          "116:         colSort: '\u6392\u5e8f',",
          "117:         colTitle: '\u6807\u9898',",
          "118:         colVisible: '\u662f\u5426\u663e\u793a',",
          "120:         fixedLeft: '\u5de6\u4fa7',",
          "121:         fixedUnset: '\u4e0d\u8bbe\u7f6e',",
          "122:         fixedRight: '\u53f3\u4fa7'",
          "",
          "[Removed Lines]",
          "119:         colFixed: '\u51bb\u7ed3\u5217',",
          "",
          "[Added Lines]",
          "117:         sortHelpTip: '\u70b9\u51fb\u5e76\u62d6\u52a8\u56fe\u6807\u53ef\u4ee5\u8c03\u6574\u5217\u7684\u6392\u5e8f',",
          "120:         colFixed: '\u51bb\u7ed3\u5217\uff08\u6700\u591a {0} \u5217\uff09',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       cstmDragTarget: '\u79fb\u52d5\u76ee\u6a19\uff1a{0}',",
          "115:       setting: {",
          "116:         colSort: '\u6392\u5e8f',",
          "117:         colTitle: '\u6a19\u984c',",
          "118:         colVisible: '\u662f\u5426\u986f\u793a',",
          "120:         fixedLeft: '\u5de6\u5074',",
          "121:         fixedUnset: '\u4e0d\u8a2d\u5b9a',",
          "122:         fixedRight: '\u53f3\u5074'",
          "",
          "[Removed Lines]",
          "119:         colFixed: '\u51bb\u7ed3\u5217',",
          "",
          "[Added Lines]",
          "117:         sortHelpTip: '\u9ede\u64ca\u4e26\u62d6\u52d5\u5716\u6a19\u53ef\u4ee5\u8abf\u6574\u5217\u7684\u6392\u5e8f',",
          "120:         colFixed: '\u51bb\u7ed3\u5217\uff08\u6700\u591a {0} \u5217\uff09',",
          "",
          "---------------"
        ],
        "packages/menu/src/mixin.js||packages/menu/src/mixin.js": [
          "File: packages/menu/src/mixin.js -> packages/menu/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:             if (activeArea && activeArea.row && activeArea.column) {",
          "71:               params.row = activeArea.row",
          "72:               params.column = activeArea.column",
          "74:               return",
          "75:             }",
          "76:           } else if (mouseConfig && mouseOpts.selected) {",
          "",
          "[Removed Lines]",
          "73:               this.openContextMenu(evnt, type, params)",
          "",
          "[Added Lines]",
          "73:               this.handleOpenMenuEvent(evnt, type, params)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:             if (selected.row && selected.column) {",
          "79:               params.row = selected.row",
          "80:               params.column = selected.column",
          "82:               return",
          "83:             }",
          "84:           }",
          "",
          "[Removed Lines]",
          "81:               this.openContextMenu(evnt, type, params)",
          "",
          "[Added Lines]",
          "81:               this.handleOpenMenuEvent(evnt, type, params)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:               params.row = row",
          "103:               params.rowIndex = this.getRowIndex(row)",
          "104:             }",
          "107:             if (this.$listeners[`${typePrefix}cell-context-menu`]) {",
          "108:               if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "",
          "[Removed Lines]",
          "105:             this.openContextMenu(evnt, layout, params)",
          "",
          "[Added Lines]",
          "105:             this.handleOpenMenuEvent(evnt, layout, params)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "117:             if (ctxMenuOpts.trigger === 'cell') {",
          "118:               evnt.preventDefault()",
          "119:             } else {",
          "121:             }",
          "122:             return",
          "123:           }",
          "",
          "[Removed Lines]",
          "120:               this.openContextMenu(evnt, layout, params)",
          "",
          "[Added Lines]",
          "120:               this.handleOpenMenuEvent(evnt, layout, params)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "135:       const { isCtxMenu, ctxMenuStore, ctxMenuOpts } = this",
          "136:       const config = ctxMenuOpts[type]",
          "137:       const visibleMethod = ctxMenuOpts.visibleMethod",
          "",
          "[Removed Lines]",
          "134:     openContextMenu (evnt, type, params) {",
          "",
          "[Added Lines]",
          "134:     handleOpenMenuEvent (evnt, type, params) {",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2415:     }",
          "2416:   },",
          "2417:   preventEvent (evnt, type, args, next, end) {",
          "2419:     let rest",
          "2420:     if (!evntList.some(func => func(Object.assign({ $grid: this.$xegrid, $table: this, $event: evnt }, args)) === false)) {",
          "2421:       if (next) {",
          "",
          "[Removed Lines]",
          "2418:     const evntList = VXETable.interceptor.get(type)",
          "",
          "[Added Lines]",
          "2418:     let evntList = VXETable.interceptor.get(type)",
          "2421:     if (!evntList.length && type === 'event.clearEdit') {",
          "2422:       evntList = VXETable.interceptor.get('event.clearActived')",
          "2423:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2470:           } else if (!this.lastCallTime || this.lastCallTime + 50 < Date.now()) {",
          "2471:             if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-clear').flag) {",
          "2475:                 if (editOpts.mode === 'row') {",
          "2476:                   const rowNode = getEventTargetNode(evnt, $el, 'vxe-body--row')",
          "2479:                 } else {",
          "2482:                 }",
          "2486:                 }",
          "2490:                 }",
          "2493:                   const bodyWrapperElem = evnt.target",
          "2494:                   if (hasClass(bodyWrapperElem, 'vxe-table--body-wrapper')) {",
          "2496:                   }",
          "2497:                 }",
          "2498:                 if (",
          "2501:                     !getEventTargetNode(evnt, $el).flag",
          "2502:                 ) {",
          "",
          "[Removed Lines]",
          "2473:               this.preventEvent(evnt, 'event.clearActived', actived.args, () => {",
          "2474:                 let isClearActived",
          "2478:                   isClearActived = rowNode.flag ? getRowNode(rowNode.targetElem).item !== actived.args.row : false",
          "2481:                   isClearActived = !getEventTargetNode(evnt, $el, 'col--edit').flag",
          "2484:                 if (!isClearActived) {",
          "2485:                   isClearActived = getEventTargetNode(evnt, $el, 'vxe-header--row').flag",
          "2488:                 if (!isClearActived) {",
          "2489:                   isClearActived = getEventTargetNode(evnt, $el, 'vxe-footer--row').flag",
          "2492:                 if (!isClearActived && this.height && !this.overflowY) {",
          "2495:                     isClearActived = evnt.offsetY < bodyWrapperElem.clientHeight",
          "2499:                   isClearActived ||",
          "",
          "[Added Lines]",
          "2480:               this.preventEvent(evnt, 'event.clearEdit', actived.args, () => {",
          "2481:                 let isClear",
          "2485:                   isClear = rowNode.flag ? getRowNode(rowNode.targetElem).item !== actived.args.row : false",
          "2488:                   isClear = !getEventTargetNode(evnt, $el, 'col--edit').flag",
          "2491:                 if (!isClear) {",
          "2492:                   isClear = getEventTargetNode(evnt, $el, 'vxe-header--row').flag",
          "2495:                 if (!isClear) {",
          "2496:                   isClear = getEventTargetNode(evnt, $el, 'vxe-footer--row').flag",
          "2499:                 if (!isClear && this.height && !this.overflowY) {",
          "2502:                     isClear = evnt.offsetY < bodyWrapperElem.clientHeight",
          "2506:                   isClear ||",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5330:           errLog('vxe.error.reqModule', ['VxeTableValidatorModule'])",
          "5331:         } else if ('setFilter,openFilter,clearFilter,getCheckedFilters'.split(',').includes(name)) {",
          "5332:           errLog('vxe.error.reqModule', ['VxeTableFilterModule'])",
          "5334:           errLog('vxe.error.reqModule', ['VxeTableEditModule'])",
          "5335:         } else if ('openCustom'.split(',').includes(name)) {",
          "5336:           errLog('vxe.error.reqModule', ['VxeTableCustomModule'])",
          "",
          "[Removed Lines]",
          "5333:         } else if ('insert,insertAt,insertNextAt,remove,removeCheckboxRow,removeRadioRow,removeCurrentRow,getRecordset,getInsertRecords,getRemoveRecords,getUpdateRecords,clearActived,getEditRecord,getActiveRecord,isEditByRow,isActiveByRow,setEditRow,setActiveRow,setEditCell,setActiveCell'.split(',').includes(name)) {",
          "",
          "[Added Lines]",
          "5340:         } else if ('insert,insertAt,insertNextAt,remove,removeCheckboxRow,removeRadioRow,removeCurrentRow,getRecordset,getInsertRecords,getRemoveRecords,getUpdateRecords,getEditRecord,getActiveRecord,isEditByRow,isActiveByRow,setEditRow,setActiveRow,setEditCell,setActiveCell'.split(',').includes(name)) {",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:           row: null,",
          "416:           column: null",
          "417:         },",
          "418:         insertList: [],",
          "419:         insertMaps: {},",
          "420:         removeList: [],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "419:         focused: {",
          "420:           row: null,",
          "421:           column: null",
          "422:         },",
          "",
          "---------------"
        ],
        "packages/table/src/util.js||packages/table/src/util.js": [
          "File: packages/table/src/util.js -> packages/table/src/util.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:   _vm.clearRowExpand()",
          "272:   _vm.clearTreeExpand()",
          "273:   _vm.clearTreeExpandReserve()",
          "276:   }",
          "277:   if (_vm.clearSelected && (_vm.keyboardConfig || _vm.mouseConfig)) {",
          "278:     _vm.clearSelected()",
          "",
          "[Removed Lines]",
          "274:   if (_vm.clearActived && VXETable._edit) {",
          "275:     _vm.clearActived()",
          "",
          "[Added Lines]",
          "274:   if (_vm.clearEdit && VXETable._edit) {",
          "275:     _vm.clearEdit()",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/interceptor.js||packages/v-x-e-table/src/interceptor.js": [
          "File: packages/v-x-e-table/src/interceptor.js -> packages/v-x-e-table/src/interceptor.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:   return XEUtils.toValueString(type).replace('_', '').toLowerCase()",
          "6: }",
          "9: const storeMap = {}",
          "11: export const interceptor = {",
          "",
          "[Removed Lines]",
          "8: const eventTypes = 'created,mounted,activated,beforeDestroy,destroyed,event.clearActived,event.clearFilter,event.clearAreas,event.showMenu,event.keydown,event.export,event.import'.split(',').map(toType)",
          "",
          "[Added Lines]",
          "8: const eventTypes = 'created,mounted,activated,beforeDestroy,destroyed,event.clearEdit,event.clearActived,event.clearFilter,event.clearAreas,event.showMenu,event.keydown,event.export,event.import'.split(',').map(toType)",
          "",
          "---------------"
        ],
        "styles/custom.scss||styles/custom.scss": [
          "File: styles/custom.scss -> styles/custom.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:   table {",
          "126:     width: 100%;",
          "127:     border: 0;",
          "128:     border-spacing: 0;",
          "129:     border-collapse: separate;",
          "130:     th {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:     table-layout: fixed;",
          "129:     word-break: break-all;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:           border-top: 0;",
          "148:         }",
          "149:       }",
          "150:     }",
          "151:     th,",
          "152:     td {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152:       &:hover {",
          "153:         background-color: $vxe-table-row-hover-background-color;",
          "154:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "176: }",
          "178: .vxe-table-custom-popup--name {",
          "180:   overflow: hidden;",
          "181:   text-overflow: ellipsis;",
          "182:   white-space: nowrap;",
          "",
          "[Removed Lines]",
          "179:   max-width: 360px;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "188:     &.level--#{$index} {",
          "189:       .vxe-table-custom-popup--name {",
          "190:         padding-left: $paddingLeft;",
          "192:       }",
          "193:     }",
          "194:   }",
          "",
          "[Removed Lines]",
          "191:         max-width: 260px - $paddingLeft;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "272:     cursor: grabbing;",
          "273:   }",
          "274: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279: .vxe-table-custom-popup--table-sort-help-title,",
          "280: .vxe-table-custom-popup--table-sort-help-icon {",
          "281:   vertical-align: middle;",
          "282: }",
          "283: .vxe-table-custom-popup--table-sort-help-icon {",
          "284:   margin-left: 5px;",
          "285:   cursor: help;",
          "286: }",
          "",
          "---------------"
        ],
        "types/checkbox-group.d.ts||types/checkbox-group.d.ts": [
          "File: types/checkbox-group.d.ts -> types/checkbox-group.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "6: export interface VxeCheckboxGroup extends VXETableComponent {",
          "",
          "[Added Lines]",
          "6: export declare class VxeCheckboxGroup extends VXETableComponent {",
          "",
          "---------------"
        ],
        "types/colgroup.d.ts||types/colgroup.d.ts": [
          "File: types/colgroup.d.ts -> types/colgroup.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { ColumnFixed, ColumnAlign, ColumnFormatterMethodParams, ColumnCellRenderOptions, ColumnContentRenderOptions, Column } from './column'",
          "2: import { ColumnFilterOption, ColumnFilterRenderOptions, ColumnFilterMethodParams } from './module/filter'",
          "3: import { ColumnCellRenderParams } from './v-x-e-table/renderer'",
          "6: import { ColumnEditRenderOptions } from './module/edit'",
          "7: import { ColumnExportCellRenderParams, ColumnExportFooterRenderParams } from './module/export'",
          "8: import { TableOverflow } from './table'",
          "",
          "[Removed Lines]",
          "4: import { ColumnHeaderRenderParams } from './header'",
          "5: import { ColumnFooterRenderParams } from './footer'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "80:   headerClassName?: string | ((params: ColumnHeaderRenderParams) => string | any[] | { [key: string]: boolean });",
          "84:   footerClassName?: string | ((params: ColumnFooterRenderParams) => string | any[] | { [key: string]: boolean });",
          "",
          "[Added Lines]",
          "78:   headerClassName?: string | ((params: any) => string | any[] | { [key: string]: boolean });",
          "82:   footerClassName?: string | ((params: any) => string | any[] | { [key: string]: boolean });",
          "",
          "---------------"
        ],
        "types/column.d.ts||types/column.d.ts": [
          "File: types/column.d.ts -> types/column.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import { VXETableComponent, SlotVNodeType } from './component'",
          "3: import { ColumnFilterOption, ColumnFilterParams, ColumnFilterRenderOptions, ColumnFilterSlotParams, ColumnFilterMethodParams } from './module/filter'",
          "4: import { ColumnCellRenderParams, ColumnDefaultSlotParams, ColumnIconSlotParams, ColumnContentSlotParams, RenderOptions, OptionProps, OptionGroupProps } from './v-x-e-table'",
          "7: import { ColumnEditRenderOptions, ColumnEditSlotParams } from './module/edit'",
          "8: import { ColumnExportCellRenderParams, ColumnExportFooterRenderParams, ColumnExportHeaderRenderParams } from './module/export'",
          "9: import { TableOverflow } from './table'",
          "",
          "[Removed Lines]",
          "1: import { CreateElement, VNode } from 'vue'",
          "5: import { ColumnHeaderSlotParams, ColumnHeaderRenderParams } from './header'",
          "6: import { ColumnFooterSlotParams, ColumnFooterRenderParams } from './footer'",
          "",
          "[Added Lines]",
          "1: import { CreateElement } from 'vue'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "77:   headerClassName?: string | ((params: ColumnHeaderRenderParams) => string | any[] | { [key: string]: boolean });",
          "81:   footerClassName?: string | ((params: ColumnFooterRenderParams) => string | any[] | { [key: string]: boolean });",
          "",
          "[Added Lines]",
          "75:   headerClassName?: string | ((params: any) => string | any[] | { [key: string]: boolean });",
          "79:   footerClassName?: string | ((params: any) => string | any[] | { [key: string]: boolean });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "222:   headerClassName?: string | ((params: ColumnHeaderRenderParams) => string | any[] | { [key: string]: boolean });",
          "226:   footerClassName?: string | ((params: ColumnFooterRenderParams) => string | any[] | { [key: string]: boolean });",
          "",
          "[Added Lines]",
          "220:   headerClassName?: string | ((params: any) => string | any[] | { [key: string]: boolean });",
          "224:   footerClassName?: string | ((params: any) => string | any[] | { [key: string]: boolean });",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "300:   slots?: {",
          "301:     default?(params: ColumnDefaultSlotParams, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "304:     content?(params: ColumnContentSlotParams, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "305:     filter?(params: ColumnFilterSlotParams, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "306:     edit?(params: ColumnEditSlotParams, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "",
          "[Removed Lines]",
          "302:     header?(params: ColumnHeaderSlotParams, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "303:     footer?(params: ColumnFooterSlotParams, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "",
          "[Added Lines]",
          "300:     header?(params: any, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "301:     footer?(params: any, h: CreateElement): SlotVNodeType | SlotVNodeType[]",
          "",
          "---------------"
        ],
        "types/table.d.ts||types/table.d.ts": [
          "File: types/table.d.ts -> types/table.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import { TableExportConfig, TableImportConfig, TablePrintConfig, SaveFileOptions, ReadFileOptions, ReadFileParams } from './module/export'",
          "5: import { ColumnFilterOption } from './module/filter'",
          "6: import { ColumnEditRule, ColumnEditValidErrMapParams } from './module/validator'",
          "8: import { MenuOptions, MenuFirstOption } from './module/menu'",
          "",
          "[Removed Lines]",
          "7: import { ColumnFooterRenderParams } from './footer'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "736:   isExpandByRow(row: RowInfo): boolean;",
          "",
          "[Added Lines]",
          "735:   isRowExpandByRow(row: RowInfo): boolean;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "955:   clearActived(evnt?: Event): Promise<any>",
          "",
          "[Added Lines]",
          "954:   clearEdit(evnt?: Event): Promise<any>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1161: export type TableSpanMethodParams = ColumnCellRenderParams",
          "1162: export function TableSpanMethod(params: TableSpanMethodParams): { rowspan: number, colspan: number }",
          "1165: export function TableFooterSpanMethod(params: TableFooterSpanMethodParams): { rowspan: number, colspan: number }",
          "1167: export interface TableOptions {",
          "",
          "[Removed Lines]",
          "1164: export type TableFooterSpanMethodParams = ColumnFooterRenderParams",
          "",
          "[Added Lines]",
          "1163: export type TableFooterSpanMethodParams = any",
          "",
          "---------------"
        ],
        "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts": [
          "File: types/v-x-e-table/renderer.d.ts -> types/v-x-e-table/renderer.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import { ColumnInfo, ColumnCellRenderOptions, ColumnContentRenderOptions } from '../column'",
          "6: import { ColumnExportCellRenderParams, ColumnExportFooterRenderParams } from '../module/export'",
          "7: import { ColumnEditRenderOptions, ColumnEditRenderParams } from '../module/edit'",
          "9: import { ColumnFilterRenderOptions, ColumnFilterRenderParams, ColumnFilterMethodParams, ColumnFilterResetParams } from '../module/filter'",
          "10: import { ToolbarButtonRenderOptions, ToolbarButtonRenderParams, ToolbarToolRenderOptions, ToolbarToolRenderParams } from '../toolbar'",
          "11: import { FormItemRenderOptions, FormItemRenderParams, FormItemVisibleParams, FormItemResetParams } from '../form-item'",
          "",
          "[Removed Lines]",
          "8: import { ColumnFooterRenderParams } from '../footer'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:   cellStyle?: VNodeStyle | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => VNodeStyle)",
          "49:   renderHeader?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "50:   renderDefault?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "52:   exportMethod?(params: ColumnExportCellRenderParams): string;",
          "53:   footerExportMethod?(params: ColumnExportFooterRenderParams): string;",
          "",
          "[Removed Lines]",
          "51:   renderFooter?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnFooterRenderParams): SlotVNodeType | SlotVNodeType[];",
          "",
          "[Added Lines]",
          "50:   renderFooter?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: any): SlotVNodeType | SlotVNodeType[];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fba58d1294db0f5123f6fcfc5fef206a3aad95d7",
      "candidate_info": {
        "commit_hash": "fba58d1294db0f5123f6fcfc5fef206a3aad95d7",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/fba58d1294db0f5123f6fcfc5fef206a3aad95d7",
        "files": [
          "package.json",
          "packages/checkbox/src/checkbox.js",
          "packages/radio/src/radio.js",
          "packages/v-x-e-table/src/conf.js"
        ],
        "message": "fix checkbox icon",
        "before_after_code_files": [
          "packages/checkbox/src/checkbox.js||packages/checkbox/src/checkbox.js",
          "packages/radio/src/radio.js||packages/radio/src/radio.js",
          "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/checkbox/src/checkbox.js||packages/checkbox/src/checkbox.js": [
          "File: packages/checkbox/src/checkbox.js -> packages/checkbox/src/checkbox.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         }",
          "79:       }),",
          "80:       h('span', {",
          "82:       }),",
          "83:       h('span', {",
          "84:         class: 'vxe-checkbox--label'",
          "",
          "[Removed Lines]",
          "81:         class: ['vxe-checkbox--icon', indeterminate ? 'vxe-icon-checkbox-indeterminate' : (isChecked ? 'vxe-icon-checkbox-checked-fill' : 'vxe-icon-checkbox-unchecked')]",
          "",
          "[Added Lines]",
          "81:         class: ['vxe-checkbox--icon', indeterminate ? GlobalConfig.icon.CHECKBOX_INDETERMINATE : (isChecked ? GlobalConfig.icon.CHECKBOX_CHECKED : GlobalConfig.icon.CHECKBOX_UNCHECKED)]",
          "",
          "---------------"
        ],
        "packages/radio/src/radio.js||packages/radio/src/radio.js": [
          "File: packages/radio/src/radio.js -> packages/radio/src/radio.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:         }",
          "70:       }),",
          "71:       h('span', {",
          "73:       }),",
          "74:       h('span', {",
          "75:         class: 'vxe-radio--label'",
          "",
          "[Removed Lines]",
          "72:         class: ['vxe-radio--icon', isChecked ? 'vxe-icon-radio-checked' : 'vxe-icon-radio-unchecked']",
          "",
          "[Added Lines]",
          "72:         class: ['vxe-radio--icon', isChecked ? GlobalConfig.icon.RADIO_CHECKED : GlobalConfig.icon.RADIO_UNCHECKED]",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js": [
          "File: packages/v-x-e-table/src/conf.js -> packages/v-x-e-table/src/conf.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:     PAGER_NEXT_PAGE: iconPrefix + 'arrow-right',",
          "205:     PAGER_JUMP_MORE: iconPrefix + 'ellipsis-h',",
          "208:     INPUT_CLEAR: iconPrefix + 'error-circle-fill',",
          "209:     INPUT_PWD: iconPrefix + 'eye-fill',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:     RADIO_CHECKED: iconPrefix + 'radio-checked-fill',",
          "209:     RADIO_UNCHECKED: iconPrefix + 'radio-unchecked',",
          "212:     CHECKBOX_INDETERMINATE: iconPrefix + 'checkbox-indeterminate-fill',",
          "213:     CHECKBOX_CHECKED: iconPrefix + 'checkbox-checked-fill',",
          "214:     CHECKBOX_UNCHECKED: iconPrefix + 'checkbox-unchecked',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "62a043c03d1a0e26f9c30fdc76506ef9b446e52f",
      "candidate_info": {
        "commit_hash": "62a043c03d1a0e26f9c30fdc76506ef9b446e52f",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/62a043c03d1a0e26f9c30fdc76506ef9b446e52f",
        "files": [
          "packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js",
          "packages/form/src/form.js",
          "packages/table/src/methods.js",
          "packages/table/src/table.js"
        ],
        "message": "\u4f18\u5316\u81ea\u9002\u5e94\u5217\u5bbd\u7b97\u6cd5",
        "before_after_code_files": [
          "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js||packages/form/src/form-item.js",
          "packages/form/src/form.js||packages/form/src/form.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/table/src/table.js||packages/table/src/table.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js": [
          "File: packages/form/src/form-config-item.js -> packages/form/src/form-config-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     const itemTitleStyle = compConf ? (compConf.formItemTitleStyle || compConf.itemTitleStyle) : null",
          "39:     const span = item.span || $xeform.span",
          "40:     const align = item.align || $xeform.align",
          "41:     const titleAlign = XEUtils.eqNull(item.titleAlign) ? allTitleAlign : item.titleAlign",
          "43:     const titleColon = XEUtils.eqNull(item.titleColon) ? allTitleColon : item.titleColon",
          "44:     const titleAsterisk = XEUtils.eqNull(item.titleAsterisk) ? allTitleAsterisk : item.titleAsterisk",
          "47:     const ovEllipsis = itemOverflow === 'ellipsis'",
          "48:     const ovTitle = itemOverflow === 'title'",
          "49:     const ovTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "",
          "[Removed Lines]",
          "42:     const titleWidth = XEUtils.eqNull(item.titleWidth) ? allTitleWidth : item.titleWidth",
          "45:     const itemOverflow = (XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow)) ? allTitleOverflow : titleOverflow",
          "46:     const itemVertical = (XEUtils.isUndefined(vertical) || XEUtils.isNull(vertical)) ? allVertical : vertical",
          "",
          "[Added Lines]",
          "41:     const itemVertical = XEUtils.eqNull(vertical) ? allVertical : vertical",
          "43:     const titleWidth = itemVertical ? null : (XEUtils.eqNull(item.titleWidth) ? allTitleWidth : item.titleWidth)",
          "46:     const itemOverflow = XEUtils.eqNull(titleOverflow) ? allTitleOverflow : titleOverflow",
          "",
          "---------------"
        ],
        "packages/form/src/form-item.js||packages/form/src/form-item.js": [
          "File: packages/form/src/form-item.js -> packages/form/src/form-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:   const itemTitleStyle = compConf ? (compConf.formItemTitleStyle || compConf.itemTitleStyle) : null",
          "76:   const span = item.span || _vm.span",
          "77:   const align = item.align || _vm.align",
          "78:   const titleAlign = XEUtils.eqNull(item.titleAlign) ? allTitleAlign : item.titleAlign",
          "80:   const titleColon = XEUtils.eqNull(item.titleColon) ? allTitleColon : item.titleColon",
          "81:   const titleAsterisk = XEUtils.eqNull(item.titleAsterisk) ? allTitleAsterisk : item.titleAsterisk",
          "84:   const ovEllipsis = itemOverflow === 'ellipsis'",
          "85:   const ovTitle = itemOverflow === 'title'",
          "86:   const ovTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "",
          "[Removed Lines]",
          "79:   const titleWidth = XEUtils.eqNull(item.titleWidth) ? allTitleWidth : item.titleWidth",
          "82:   const itemOverflow = (XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow)) ? allTitleOverflow : titleOverflow",
          "83:   const itemVertical = (XEUtils.isUndefined(vertical) || XEUtils.isNull(vertical)) ? allVertical : vertical",
          "",
          "[Added Lines]",
          "78:   const itemVertical = XEUtils.eqNull(vertical) ? allVertical : vertical",
          "80:   const titleWidth = itemVertical ? null : (XEUtils.eqNull(item.titleWidth) ? allTitleWidth : item.titleWidth)",
          "83:   const itemOverflow = XEUtils.eqNull(titleOverflow) ? allTitleOverflow : titleOverflow",
          "",
          "---------------"
        ],
        "packages/form/src/form.js||packages/form/src/form.js": [
          "File: packages/form/src/form.js -> packages/form/src/form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:         return this.$nextTick()",
          "381:       }",
          "382:       let fields = []",
          "387:       }",
          "388:       return this.beginValidate(fields.map(field => handleFieldOrItem(this, field)), '', callback)",
          "389:     },",
          "",
          "[Removed Lines]",
          "383:       if (XEUtils.isArray(fieldOrItem)) {",
          "384:         fields = fieldOrItem",
          "385:       } else {",
          "386:         fields = [fieldOrItem]",
          "",
          "[Added Lines]",
          "383:       if (fieldOrItem) {",
          "384:         if (XEUtils.isArray(fieldOrItem)) {",
          "385:           fields = fieldOrItem",
          "386:         } else {",
          "387:           fields = [fieldOrItem]",
          "388:         }",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2002:     const resizeList = []",
          "2003:     const pxList = []",
          "2004:     const pxMinList = []",
          "2005:     const scaleList = []",
          "2006:     const scaleMinList = []",
          "2007:     const autoList = []",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2005:     const autoMinList = []",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2024:           scaleList.push(column)",
          "2025:         } else if (DomTools.isPx(column.minWidth)) {",
          "2026:           pxMinList.push(column)",
          "2027:         } else if (DomTools.isScale(column.minWidth)) {",
          "2028:           scaleMinList.push(column)",
          "2029:         } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2028:         } else if (column.minWidth === 'auto') {",
          "2029:           autoMinList.push(column)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2031:         }",
          "2032:       }",
          "2033:     })",
          "2035:   },",
          "",
          "[Removed Lines]",
          "2034:     Object.assign(this.columnStore, { resizeList, pxList, pxMinList, scaleList, scaleMinList, autoList, remainList })",
          "",
          "[Added Lines]",
          "2037:     Object.assign(this.columnStore, { resizeList, pxList, pxMinList, autoMinList, scaleList, scaleMinList, autoList, remainList })",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2102:             const cellStyle = getComputedStyle(firstCellEl)",
          "2103:             paddingSize = Math.floor(XEUtils.toNumber(cellStyle.paddingLeft) + XEUtils.toNumber(cellStyle.paddingRight)) + 2",
          "2104:           }",
          "2106:           XEUtils.arrayEach(cellElList, (cellEl) => {",
          "2107:             const labelEl = cellEl.firstChild",
          "2108:             if (labelEl) {",
          "2110:             }",
          "2111:           })",
          "2112:           column.renderAutoWidth = colWidth + paddingSize",
          "",
          "[Removed Lines]",
          "2105:           let colWidth = column.renderAutoWidth - paddingSize + 2",
          "2109:               colWidth = Math.max(colWidth, labelEl.offsetWidth)",
          "",
          "[Added Lines]",
          "2108:           let colWidth = column.renderAutoWidth - paddingSize",
          "2112:               colWidth = Math.max(colWidth, Math.ceil(labelEl.offsetWidth) + 4)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2133:     let remainWidth = bodyWidth",
          "2134:     let meanWidth = remainWidth / 100",
          "2135:     const { fit, columnStore } = this",
          "2138:     pxMinList.forEach(column => {",
          "2139:       const minWidth = parseInt(column.minWidth)",
          "2140:       tableWidth += minWidth",
          "2141:       column.renderWidth = minWidth",
          "2142:     })",
          "2144:     scaleMinList.forEach(column => {",
          "2145:       const scaleWidth = Math.floor(parseInt(column.minWidth) * meanWidth)",
          "",
          "[Removed Lines]",
          "2136:     const { resizeList, pxMinList, pxList, scaleList, scaleMinList, autoList, remainList } = columnStore",
          "",
          "[Added Lines]",
          "2139:     const { resizeList, pxMinList, pxList, autoMinList, scaleList, scaleMinList, autoList, remainList } = columnStore",
          "2147:     autoMinList.forEach((column) => {",
          "2148:       const scaleWidth = Math.max(60, XEUtils.toInteger(column.renderAutoWidth))",
          "2149:       tableWidth += scaleWidth",
          "2150:       column.renderWidth = scaleWidth",
          "2151:     })",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2171:       column.renderWidth = width",
          "2172:     })",
          "2173:     remainWidth -= tableWidth",
          "2175:     if (fit) {",
          "2176:       if (remainWidth > 0) {",
          "2178:           tableWidth += meanWidth",
          "2179:           column.renderWidth += meanWidth",
          "2180:         })",
          "",
          "[Removed Lines]",
          "2174:     meanWidth = remainWidth > 0 ? Math.floor(remainWidth / (scaleMinList.length + pxMinList.length + remainList.length)) : 0",
          "2177:         scaleMinList.concat(pxMinList).forEach(column => {",
          "",
          "[Added Lines]",
          "2183:     meanWidth = remainWidth > 0 ? Math.floor(remainWidth / (scaleMinList.length + pxMinList.length + autoMinList.length + remainList.length)) : 0",
          "2186:         scaleMinList.concat(pxMinList).concat(autoMinList).forEach(column => {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2197:       let dynamicSize = dynamicList.length - 1",
          "2198:       if (dynamicSize > 0) {",
          "2199:         let odiffer = bodyWidth - tableWidth",
          "",
          "[Removed Lines]",
          "2196:       const dynamicList = scaleList.concat(scaleMinList).concat(pxMinList).concat(remainList)",
          "",
          "[Added Lines]",
          "2205:       const dynamicList = scaleList.concat(scaleMinList).concat(pxMinList).concat(autoMinList).concat(remainList)",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "382:         resizeList: [],",
          "383:         pxList: [],",
          "384:         pxMinList: [],",
          "385:         scaleList: [],",
          "386:         scaleMinList: [],",
          "387:         autoList: [],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "385:         autoMinList: [],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "628:       return Object.assign({}, GlobalConfig.table.customConfig, this.customConfig)",
          "629:     },",
          "630:     autoWidthColumnList () {",
          "633:     },",
          "634:     fixedColumnSize () {",
          "635:       const { collectColumn } = this",
          "",
          "[Removed Lines]",
          "631:       const { visibleColumn } = this",
          "632:       return visibleColumn.filter(column => column.width === 'auto')",
          "",
          "[Added Lines]",
          "632:       const { tableColumn, visibleColumn } = this",
          "633:       return tableColumn.length || visibleColumn.length ? visibleColumn.filter(column => column.width === 'auto' || column.minWidth === 'auto') : []",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de60115ec51a3fe39a9dac68cf7d4fb1238fa1a9",
      "candidate_info": {
        "commit_hash": "de60115ec51a3fe39a9dac68cf7d4fb1238fa1a9",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/de60115ec51a3fe39a9dac68cf7d4fb1238fa1a9",
        "files": [
          ".eslintrc.js",
          "examples/views/table/edit/Upload.vue",
          "examples/views/table/grid/Upload.vue",
          "gulpfile.js",
          "helper/vetur/attributes.json",
          "helper/vetur/tags.json",
          "package.json",
          "packages/custom/src/panel.js",
          "packages/modal/src/modal.js",
          "packages/select/src/select.js",
          "packages/switch/src/switch.js",
          "packages/table/src/body.js",
          "packages/table/src/columnInfo.js",
          "packages/table/src/methods.js",
          "packages/table/src/table.js",
          "packages/toolbar/src/toolbar.js",
          "packages/tools/dom.js",
          "packages/tooltip/src/tooltip.js",
          "packages/v-x-e-table/src/conf.js"
        ],
        "message": "fix \u4fee\u590d\u81ea\u5b9a\u4e49\u5217\u3001\u6807\u9898\u63d0\u793a\u9f20\u6807\u79fb\u4e0a\u53bb\u76f8\u5173\u62a5\u9519\u95ee\u9898",
        "before_after_code_files": [
          ".eslintrc.js||.eslintrc.js",
          "examples/views/table/edit/Upload.vue||examples/views/table/edit/Upload.vue",
          "examples/views/table/grid/Upload.vue||examples/views/table/grid/Upload.vue",
          "gulpfile.js||gulpfile.js",
          "packages/custom/src/panel.js||packages/custom/src/panel.js",
          "packages/modal/src/modal.js||packages/modal/src/modal.js",
          "packages/select/src/select.js||packages/select/src/select.js",
          "packages/switch/src/switch.js||packages/switch/src/switch.js",
          "packages/table/src/body.js||packages/table/src/body.js",
          "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "packages/toolbar/src/toolbar.js||packages/toolbar/src/toolbar.js",
          "packages/tools/dom.js||packages/tools/dom.js",
          "packages/tooltip/src/tooltip.js||packages/tooltip/src/tooltip.js",
          "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ],
          "candidate": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ]
        }
      },
      "candidate_diff": {
        ".eslintrc.js||.eslintrc.js": [
          "File: .eslintrc.js -> .eslintrc.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:     node: true",
          "5:   },",
          "6:   extends: [",
          "10:   ],",
          "11:   parserOptions: {",
          "13:   },",
          "14:   rules: {",
          "15:     'no-console': 'off',",
          "16:     'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',",
          "17:     'vue/multi-word-component-names': 'off',",
          "18:     'multiline-ternary': 'off'",
          "19:   }",
          "20: }",
          "",
          "[Removed Lines]",
          "7:     \"plugin:vue/essential\",",
          "8:     \"@vue/standard\",",
          "9:     \"@vue/typescript/recommended\"",
          "12:     \"ecmaVersion\": 2020",
          "",
          "[Added Lines]",
          "7:     'plugin:vue/essential',",
          "8:     '@vue/standard',",
          "9:     '@vue/typescript/recommended'",
          "12:     ecmaVersion: 2020",
          "18:     'vue/no-v-text-v-html-on-component': 'off',",
          "",
          "---------------"
        ],
        "examples/views/table/edit/Upload.vue||examples/views/table/edit/Upload.vue": [
          "File: examples/views/table/edit/Upload.vue -> examples/views/table/edit/Upload.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:           const name = ns.slice(0, ns.length - 1).join('')",
          "118:           const type = ns[ns.length - 1]",
          "119:           return {",
          "121:             size: file.size,",
          "123:             date: XEUtils.toDateString(new Date())",
          "124:           }",
          "125:         })",
          "",
          "[Removed Lines]",
          "120:             name: name,",
          "122:             type: type,",
          "",
          "[Added Lines]",
          "120:             name,",
          "122:             type,",
          "",
          "---------------"
        ],
        "examples/views/table/grid/Upload.vue||examples/views/table/grid/Upload.vue": [
          "File: examples/views/table/grid/Upload.vue -> examples/views/table/grid/Upload.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:           const name = ns.slice(0, ns.length - 1).join('')",
          "164:           const type = ns[ns.length - 1]",
          "165:           const record = {",
          "167:             size: file.size,",
          "169:             date: XEUtils.toDateString(new Date())",
          "170:           }",
          "171:           row.fileList.push(record)",
          "",
          "[Removed Lines]",
          "166:             name: name,",
          "168:             type: type,",
          "",
          "[Added Lines]",
          "166:             name,",
          "168:             type,",
          "",
          "---------------"
        ],
        "gulpfile.js||gulpfile.js": [
          "File: gulpfile.js -> gulpfile.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: const prefixer = require('gulp-autoprefixer')",
          "13: const merge = require('merge-stream')",
          "14: const pack = require('./package.json')",
          "17: const sass = gulpSass(dartSass)",
          "",
          "[Removed Lines]",
          "15: const ts = require('gulp-typescript')",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:   'edit',",
          "25:   'export',",
          "26:   'keyboard',",
          "28: ]",
          "30: const componentList = [",
          "",
          "[Removed Lines]",
          "27:   'validator'",
          "",
          "[Added Lines]",
          "26:   'validator',",
          "27:   'custom'",
          "",
          "---------------"
        ],
        "packages/custom/src/panel.js||packages/custom/src/panel.js": [
          "File: packages/custom/src/panel.js -> packages/custom/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:   const { $xetable, customStore } = _vm",
          "8:   const { customOpts, collectColumn, isMaxFixedColumn } = $xetable",
          "9:   const { maxHeight } = customStore",
          "11:   const colVNs = []",
          "12:   const customWrapperOns = {}",
          "",
          "[Removed Lines]",
          "10:   const { checkMethod, trigger } = customOpts",
          "",
          "[Added Lines]",
          "9:   const { checkMethod, visibleMethod, trigger } = customOpts",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:     customWrapperOns.onMouseleave = _vm.handleWrapperMouseleaveEvent",
          "17:   }",
          "18:   XEUtils.eachTree(collectColumn, (column, index, items, path, parent) => {",
          "24:       const isChecked = column.visible",
          "25:       const isIndeterminate = column.halfVisible",
          "26:       colVNs.push(",
          "27:         h('li', {",
          "28:           class: ['vxe-table-custom--option', `level--${column.level}`, {",
          "29:             'is--group': isColGroup",
          "30:           }]",
          "",
          "[Removed Lines]",
          "19:     const colTitle = UtilTools.formatText(column.getTitle(), 1)",
          "20:     const colKey = column.getKey()",
          "21:     const isColGroup = column.children && column.children.length",
          "22:     const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "23:     if (isColGroup || colKey) {",
          "",
          "[Added Lines]",
          "18:     const isVisible = visibleMethod ? visibleMethod({ column }) : true",
          "19:     if (isVisible) {",
          "22:       const colTitle = UtilTools.formatText(column.getTitle(), 1)",
          "23:       const isColGroup = column.children && column.children.length",
          "24:       const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "27:           key: column.id,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "153: const renderPopupPanel = (h, _vm) => {",
          "154:   const { $xetable, customStore } = _vm",
          "155:   const { customOpts, collectColumn, isMaxFixedColumn } = $xetable",
          "157:   const trVNs = []",
          "158:   XEUtils.eachTree(collectColumn, (column, index, items, path, parent) => {",
          "164:       const isChecked = column.visible",
          "165:       const isIndeterminate = column.halfVisible",
          "166:       trVNs.push(",
          "167:         h('tr', {",
          "169:         }, [",
          "170:           h('td', {",
          "171:             class: 'vxe-table-custom-popup--column-name'",
          "",
          "[Removed Lines]",
          "156:   const { checkMethod } = customOpts",
          "159:     const colTitle = UtilTools.formatText(column.getTitle(), 1)",
          "160:     const colKey = column.getKey()",
          "161:     const isColGroup = column.children && column.children.length",
          "162:     const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "163:     if (isColGroup || colKey) {",
          "168:           class: [`vxe-table-custom-popup--row-level${column.level}`]",
          "",
          "[Added Lines]",
          "156:   const { checkMethod, visibleMethod } = customOpts",
          "159:     const isVisible = visibleMethod ? visibleMethod({ column }) : true",
          "160:     if (isVisible) {",
          "163:       const colTitle = UtilTools.formatText(column.getTitle(), 1)",
          "164:       const isColGroup = column.children && column.children.length",
          "165:       const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "168:           key: column.id,",
          "169:           class: [`vxe-table-custom-popup--row-level${column.level}`, {",
          "170:             'is--group': isColGroup",
          "171:           }]",
          "",
          "---------------"
        ],
        "packages/modal/src/modal.js||packages/modal/src/modal.js": [
          "File: packages/modal/src/modal.js -> packages/modal/src/modal.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:           return h('span', {",
          "249:             class: `${type}-resize`,",
          "250:             attrs: {",
          "252:             },",
          "253:             on: {",
          "254:               mousedown: this.dragEvent",
          "",
          "[Removed Lines]",
          "251:               type: type",
          "",
          "[Added Lines]",
          "251:               type",
          "",
          "---------------"
        ],
        "packages/select/src/select.js||packages/select/src/select.js": [
          "File: packages/select/src/select.js -> packages/select/src/select.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         'is--hover': currentValue === optionValue",
          "160:       }],",
          "161:       attrs: {",
          "163:       },",
          "164:       on: {",
          "165:         mousedown: _vm.mousedownOptionEvent,",
          "",
          "[Removed Lines]",
          "162:         optid: optid",
          "",
          "[Added Lines]",
          "162:         optid",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:         'is--disabled': isGroupDisabled",
          "195:       }],",
          "196:       attrs: {",
          "198:       }",
          "199:     }, [",
          "200:       h('div', {",
          "",
          "[Removed Lines]",
          "197:         optid: optid",
          "",
          "[Added Lines]",
          "197:         optid",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "441:           clearable: this.clearable,",
          "442:           placeholder: this.placeholder,",
          "443:           readonly: true,",
          "445:           type: 'text',",
          "446:           prefixIcon: this.prefixIcon,",
          "447:           suffixIcon: loading ? GlobalConfig.icon.SELECT_LOADED : (visiblePanel ? GlobalConfig.icon.SELECT_OPEN : GlobalConfig.icon.SELECT_CLOSE),",
          "",
          "[Removed Lines]",
          "444:           disabled: disabled,",
          "",
          "[Added Lines]",
          "444:           disabled,",
          "",
          "---------------"
        ],
        "packages/switch/src/switch.js||packages/switch/src/switch.js": [
          "File: packages/switch/src/switch.js -> packages/switch/src/switch.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         class: 'vxe-switch--button',",
          "69:         attrs: {",
          "70:           type: 'button',",
          "72:         },",
          "73:         on: {",
          "74:           click: this.clickEvent,",
          "",
          "[Removed Lines]",
          "71:           disabled: disabled",
          "",
          "[Added Lines]",
          "71:           disabled",
          "",
          "---------------"
        ],
        "packages/table/src/body.js||packages/table/src/body.js": [
          "File: packages/table/src/body.js -> packages/table/src/body.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "377:           rowClassName ? (XEUtils.isFunction(rowClassName) ? rowClassName(params) : rowClassName) : ''",
          "378:         ],",
          "379:         attrs: {",
          "381:         },",
          "382:         style: rowStyle ? (XEUtils.isFunction(rowStyle) ? rowStyle(params) : rowStyle) : null,",
          "383:         key: (rowKey || rowOpts.useKey) || treeConfig ? rowid : $rowIndex,",
          "",
          "[Removed Lines]",
          "380:           rowid: rowid",
          "",
          "[Added Lines]",
          "380:           rowid",
          "",
          "---------------"
        ],
        "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js": [
          "File: packages/table/src/columnInfo.js -> packages/table/src/columnInfo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:       className: _vm.className,",
          "74:       headerClassName: _vm.headerClassName,",
          "75:       footerClassName: _vm.footerClassName,",
          "77:       sortable: _vm.sortable,",
          "78:       sortBy: _vm.sortBy,",
          "79:       sortType: _vm.sortType,",
          "",
          "[Removed Lines]",
          "76:       formatter: formatter,",
          "",
          "[Added Lines]",
          "76:       formatter,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:       renderHeader: renderHeader || _vm.renderHeader,",
          "125:       renderCell: renderCell || _vm.renderCell,",
          "126:       renderFooter: renderFooter || _vm.renderFooter,",
          "129:       slots: _vm.slots",
          "130:     })",
          "",
          "[Removed Lines]",
          "127:       renderData: renderData,",
          "",
          "[Added Lines]",
          "127:       renderData,",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2841:     const tipContent = iconParams.content || iconParams.message",
          "2842:     if (tipContent) {",
          "2843:       const { $refs, tooltipStore } = this",
          "2844:       const content = getFuncText(tipContent)",
          "2845:       this.handleTargetEnterEvent(true)",
          "2846:       tooltipStore.visible = true",
          "2848:       this.$nextTick(() => {",
          "2849:         const $tooltip = $refs.tooltip",
          "2850:         if ($tooltip) {",
          "",
          "[Removed Lines]",
          "2847:       tooltipStore.currOpts = { ...params, content: null }",
          "",
          "[Added Lines]",
          "2844:       const { column } = params",
          "2847:       tooltipStore.row = null",
          "2848:       tooltipStore.column = column",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2930:       Object.assign(tooltipStore, {",
          "2931:         row,",
          "2932:         column,",
          "2935:       })",
          "2936:       this.$nextTick(() => {",
          "2937:         const $tooltip = $refs.tooltip",
          "",
          "[Removed Lines]",
          "2933:         visible: true,",
          "2934:         currOpts: null",
          "",
          "[Added Lines]",
          "2936:         visible: true",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2962:         row: null,",
          "2963:         column: null,",
          "2964:         content: null,",
          "2967:       })",
          "2968:       if (tooltip) {",
          "2969:         tooltip.close()",
          "",
          "[Removed Lines]",
          "2965:         visible: false,",
          "2966:         currOpts: null",
          "",
          "[Added Lines]",
          "2967:         visible: false",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5294:     if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "5295:       if (!this[`_${name}`]) {",
          "5296:         if ('openExport,openPrint,exportData,openImport,importData,saveFile,readFile,importByFile,print'.split(',').includes(name)) {",
          "5298:         } else if ('clearValidate,fullValidate,validate'.split(',').includes(name)) {",
          "5300:         }",
          "5301:       }",
          "5302:     }",
          "",
          "[Removed Lines]",
          "5297:           errLog('vxe.error.reqModule', ['Export'])",
          "5299:           errLog('vxe.error.reqModule', ['Validator'])",
          "",
          "[Added Lines]",
          "5298:           errLog('vxe.error.reqModule', ['VxeTableExportModule'])",
          "5300:           errLog('vxe.error.reqModule', ['VxeTableValidatorModule'])",
          "5301:         } else if ('setFilter,openFilter,clearFilter,getCheckedFilters'.split(',').includes(name)) {",
          "5302:           errLog('vxe.error.reqModule', ['VxeTableFilterModule'])",
          "5303:         } else if ('insert,insertAt,insertNextAt,remove,removeCheckboxRow,removeRadioRow,removeCurrentRow,getRecordset,getInsertRecords,getRemoveRecords,getUpdateRecords,clearEdit,clearActived,getEditRecord,getActiveRecord,isEditByRow,isActiveByRow,setEditRow,setActiveRow,setEditCell,setActiveCell'.split(',').includes(name)) {",
          "5304:           errLog('vxe.error.reqModule', ['VxeTableEditModule'])",
          "5305:         } else if ('closeMenu'.split(',').includes(name)) {",
          "5306:           errLog('vxe.error.reqModule', ['VxeTableMenuModule'])",
          "5307:         } else if ('openCustom,closeCustom'.split(',').includes(name)) {",
          "5308:           errLog('vxe.error.reqModule', ['VxeTableCustomModule'])",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "422:       tooltipStore: {",
          "423:         row: null,",
          "424:         column: null,",
          "427:       },",
          "429:       validStore: {",
          "",
          "[Removed Lines]",
          "425:         visible: false,",
          "426:         currOpts: null",
          "",
          "[Added Lines]",
          "425:         visible: false",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "518:       return Object.assign({}, GlobalConfig.tooltip, GlobalConfig.table.tooltipConfig, this.tooltipConfig)",
          "519:     },",
          "520:     tipConfig () {",
          "522:     },",
          "523:     validTipOpts () {",
          "524:       return Object.assign({ isArrow: false }, this.tooltipOpts)",
          "",
          "[Removed Lines]",
          "521:       return { ...this.tooltipOpts, ...this.tooltipStore.currOpts }",
          "",
          "[Added Lines]",
          "520:       return { ...this.tooltipOpts }",
          "",
          "---------------"
        ],
        "packages/toolbar/src/toolbar.js||packages/toolbar/src/toolbar.js": [
          "File: packages/toolbar/src/toolbar.js -> packages/toolbar/src/toolbar.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "291:           warnLog('vxe.error.delProp', ['custom.isFooter', 'custom-config.showFooter'])",
          "292:         }",
          "293:         if (customOpts.showFooter) {",
          "295:         }",
          "296:         if (customOpts.immediate) {",
          "297:           warnLog('vxe.error.delProp', ['custom.immediate', 'custom-config.immediate'])",
          "",
          "[Removed Lines]",
          "294:           warnLog('vxe.error.delProp', ['custom.isFooter', 'custom-config.showFooter'])",
          "",
          "[Added Lines]",
          "294:           warnLog('vxe.error.delProp', ['custom.showFooter', 'custom-config.showFooter'])",
          "",
          "---------------"
        ],
        "packages/tools/dom.js||packages/tools/dom.js": [
          "File: packages/tools/dom.js -> packages/tools/dom.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:       if (queryCls && hasClass(target, queryCls) && (!queryMethod || queryMethod(target))) {",
          "120:         targetElem = target",
          "121:       } else if (target === container) {",
          "123:       }",
          "124:       target = target.parentNode",
          "125:     }",
          "",
          "[Removed Lines]",
          "122:         return { flag: queryCls ? !!targetElem : true, container, targetElem: targetElem }",
          "",
          "[Added Lines]",
          "123:         return { flag: queryCls ? !!targetElem : true, container, targetElem }",
          "",
          "---------------"
        ],
        "packages/tooltip/src/tooltip.js||packages/tooltip/src/tooltip.js": [
          "File: packages/tooltip/src/tooltip.js -> packages/tooltip/src/tooltip.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "147:   beforeDestroy () {",
          "148:     const { $el, target, trigger } = this",
          "149:     const parentNode = $el.parentNode",
          "153:     if (target) {",
          "154:       if (trigger === 'hover') {",
          "155:         target.onmouseenter = null",
          "",
          "[Removed Lines]",
          "150:     if (parentNode) {",
          "151:       parentNode.removeChild($el)",
          "152:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:         target.onclick = null",
          "159:       }",
          "160:     }",
          "161:   },",
          "162:   render (h) {",
          "163:     const { $scopedSlots, vSize, popupClassName, theme, tipActive, isArrow, visible, tipStore, enterable } = this",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:     if (parentNode) {",
          "159:       parentNode.removeChild($el)",
          "160:     }",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js": [
          "File: packages/v-x-e-table/src/conf.js -> packages/v-x-e-table/src/conf.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "327:   },",
          "328:   button: {",
          "",
          "[Removed Lines]",
          "322:     custom: {",
          "323:       allowFixed: true,",
          "324:       showFooter: true",
          "325:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}