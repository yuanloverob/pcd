{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "abaeb7b4d4eb820ebef4d73d167008f15ccbf8a1",
      "candidate_info": {
        "commit_hash": "abaeb7b4d4eb820ebef4d73d167008f15ccbf8a1",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/abaeb7b4d4eb820ebef4d73d167008f15ccbf8a1",
        "files": [
          "packages/table/src/methods.ts"
        ],
        "message": "\u4fee\u590d edit-config.afterEditMethod \u91cd\u590d\u6267\u884c\u95ee\u9898",
        "before_after_code_files": [
          "packages/table/src/methods.ts||packages/table/src/methods.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2999:                 setCellValue(selected.row, selected.column, null)",
          "3000:                 this.handleEdit(selected.args, evnt)",
          "3001:               }",
          "3008:             }",
          "3009:           }",
          "3010:         }",
          "",
          "[Removed Lines]",
          "3002:               const afterEditMethod = editOpts.afterEditMethod",
          "3003:               if (afterEditMethod) {",
          "3004:                 this.$nextTick(() => {",
          "3005:                   afterEditMethod(params)",
          "3006:                 })",
          "3007:               }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb1cfede7c738dc72fe5188827634488cdeae7a2",
      "candidate_info": {
        "commit_hash": "eb1cfede7c738dc72fe5188827634488cdeae7a2",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/eb1cfede7c738dc72fe5188827634488cdeae7a2",
        "files": [
          "package.json",
          "packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts",
          "packages/table/module/export/export-panel.ts",
          "packages/table/module/export/import-panel.ts",
          "styles/components/table.scss"
        ],
        "message": "releases 3.10.1",
        "before_after_code_files": [
          "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts",
          "packages/table/module/export/export-panel.ts||packages/table/module/export/export-panel.ts",
          "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts",
          "styles/components/table.scss||styles/components/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts": [
          "File: packages/locale/lang/en-US.ts -> packages/locale/lang/en-US.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: 'Successfully imported {0} records',",
          "63:       expLoading: 'Exporting',",
          "64:       expSuccess: 'Export success',",
          "65:       expFilename: 'Export_{0}',",
          "66:       expOriginFilename: 'Export_original_{0}',",
          "67:       customTitle: 'Column settings',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: 'Export failure',",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts": [
          "File: packages/locale/lang/es-ES.ts -> packages/locale/lang/es-ES.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: 'Se importaron {0} registros con \u00e9xito',",
          "63:       expLoading: 'Exportando',",
          "64:       expSuccess: '\u00c9xito al exportar',",
          "65:       expFilename: 'Exportar_{0}',",
          "66:       expOriginFilename: 'Exportar_original_{0}',",
          "67:       customTitle: 'Configuraciones de columna',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: 'Export failure',",
          "",
          "---------------"
        ],
        "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts": [
          "File: packages/locale/lang/hu-HU.ts -> packages/locale/lang/hu-HU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '{0} rekord sikeresen import\u00e1lva',",
          "63:       expLoading: 'Export\u00e1l\u00e1s',",
          "64:       expSuccess: 'Az export\u00e1l\u00e1s sikeres volt',",
          "65:       expFilename: 'Export\u00e1l\u00e1s_{0}',",
          "66:       expOriginFilename: 'export_source_{0}',",
          "67:       customTitle: 'Oszlopbe\u00e1ll\u00edt\u00e1sok',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: 'Export failure',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts": [
          "File: packages/locale/lang/ja-JP.ts -> packages/locale/lang/ja-JP.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '{0} \u30ec\u30b3\u30fc\u30c9\u304c\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f',",
          "63:       expLoading: '\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u4e2d',",
          "64:       expSuccess: '\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u304c\u6210\u529f\u3057\u307e\u3057\u305f',",
          "65:       expOriginFilename: '\u30a8\u30af\u30b9\u30dd\u30fc\u30c8_{0}',",
          "66:       expSrcFilename: '\u30a8\u30af\u30b9\u30dd\u30fc\u30c8_\u30bd\u30fc\u30b9_{0}',",
          "67:       customTitle: '\u5217\u8a2d\u5b9a',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: 'Export failure',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts": [
          "File: packages/locale/lang/ko-KR.ts -> packages/locale/lang/ko-KR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '\u6210\u529f\u5bfc\u5165 {0} \u6761\u8bb0\u5f55',",
          "63:       expLoading: '\u6b63\u5728\u5bfc\u51fa\u4e2d',",
          "64:       expSuccess: '\u5bfc\u51fa\u6210\u529f',",
          "65:       expFilename: '\u5bfc\u51fa_{0}',",
          "66:       expOriginFilename: '\u5bfc\u51fa_\u6e90_{0}',",
          "67:       customTitle: '\u5217\u8bbe\u7f6e',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: 'Export failure',",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts": [
          "File: packages/locale/lang/pt-BR.ts -> packages/locale/lang/pt-BR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: 'Importado com sucesso {0} registros',",
          "63:       expLoading: 'Exportando',",
          "64:       expSuccess: 'Exportado com sucesso',",
          "65:       expFilename: 'Exportar_{0}',",
          "66:       expOriginFilename: 'Exportar_original_{0}',",
          "67:       customTitle: 'Configura\u00e7\u00f5es de coluna',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: 'Export failure',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts": [
          "File: packages/locale/lang/ru-RU.ts -> packages/locale/lang/ru-RU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '\u0423\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043e {0} \u0437\u0430\u043f\u0438\u0441\u0435\u0439.',",
          "63:       expLoading: '\u042d\u043a\u0441\u043f\u043e\u0440\u0442',",
          "64:       expSuccess: '\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e',",
          "65:       expFilename: '\u042d\u043a\u0441\u043f\u043e\u0440\u0442_{0}',",
          "66:       expOriginFilename: '\u044d\u043a\u0441\u043f\u043e\u0440\u0442_\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a_{0}',",
          "67:       customTitle: '\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u0430',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: 'Export failure',",
          "",
          "---------------"
        ],
        "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts": [
          "File: packages/locale/lang/uk-UA.ts -> packages/locale/lang/uk-UA.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '\u6210\u529f\u5bfc\u5165 {0} \u6761\u8bb0\u5f55',",
          "63:       expLoading: '\u6b63\u5728\u5bfc\u51fa\u4e2d',",
          "64:       expSuccess: '\u5bfc\u51fa\u6210\u529f',",
          "65:       expFilename: '\u5bfc\u51fa_{0}',",
          "66:       expOriginFilename: '\u5bfc\u51fa_\u6e90_{0}',",
          "67:       customTitle: '\u5217\u8bbe\u7f6e',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: '\u5bfc\u51fa\u5931\u8d25',",
          "",
          "---------------"
        ],
        "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts": [
          "File: packages/locale/lang/vi-VN.ts -> packages/locale/lang/vi-VN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '\u6210\u529f\u5bfc\u5165 {0} \u6761\u8bb0\u5f55',",
          "63:       expLoading: '\u6b63\u5728\u5bfc\u51fa\u4e2d',",
          "64:       expSuccess: '\u5bfc\u51fa\u6210\u529f',",
          "65:       expFilename: '\u5bfc\u51fa_{0}',",
          "66:       expOriginFilename: '\u5bfc\u51fa_\u6e90_{0}',",
          "67:       customTitle: '\u5217\u8bbe\u7f6e',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: '\u5bfc\u51fa\u5931\u8d25',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts": [
          "File: packages/locale/lang/zh-CHT.ts -> packages/locale/lang/zh-CHT.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '\u6210\u529f\u5c0e\u5165 {0} \u7b46\u8a18\u9304',",
          "63:       expLoading: '\u6b63\u5728\u532f\u51fa\u4e2d',",
          "64:       expSuccess: '\u532f\u51fa\u6210\u529f',",
          "65:       expFilename: '\u5c0e\u51fa_{0}',",
          "66:       expOriginFilename: '\u532f\u51fa_\u4f86\u6e90_{0}',",
          "67:       customTitle: '\u5217\u8a2d\u5b9a',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: '\u5bfc\u51fa\u5931\u8d25',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts": [
          "File: packages/locale/lang/zh-CN.ts -> packages/locale/lang/zh-CN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:       impSuccess: '\u6210\u529f\u5bfc\u5165 {0} \u6761\u8bb0\u5f55',",
          "63:       expLoading: '\u6b63\u5728\u5bfc\u51fa\u4e2d',",
          "64:       expSuccess: '\u5bfc\u51fa\u6210\u529f',",
          "65:       expFilename: '\u5bfc\u51fa_{0}',",
          "66:       expOriginFilename: '\u5bfc\u51fa_\u6e90_{0}',",
          "67:       customTitle: '\u5217\u8bbe\u7f6e',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       expError: '\u5bfc\u51fa\u5931\u8d25',",
          "",
          "---------------"
        ],
        "packages/table/module/export/export-panel.ts||packages/table/module/export/export-panel.ts": [
          "File: packages/table/module/export/export-panel.ts -> packages/table/module/export/export-panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:                                   options: storeData.typeList",
          "227:                                 },",
          "228:                                 on: {",
          "230:                                     defaultOptions.type = value",
          "231:                                   }",
          "232:                                 }",
          "",
          "[Removed Lines]",
          "229:                                   input (value: any) {",
          "",
          "[Added Lines]",
          "229:                                   modelValue (value: any) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "263:                                 options: storeData.modeList",
          "264:                               },",
          "265:                               on: {",
          "267:                                   defaultOptions.mode = value",
          "268:                                 }",
          "269:                               }",
          "",
          "[Removed Lines]",
          "266:                                 input (value: any) {",
          "",
          "[Added Lines]",
          "266:                                 modelValue (value: any) {",
          "",
          "---------------"
        ],
        "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts": [
          "File: packages/table/module/export/import-panel.ts -> packages/table/module/export/import-panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:                               options: storeData.modeList",
          "178:                             },",
          "179:                             on: {",
          "181:                                 defaultOptions.mode = value",
          "182:                               }",
          "183:                             }",
          "",
          "[Removed Lines]",
          "180:                               input (value: any) {",
          "",
          "[Added Lines]",
          "180:                               modelValue (value: any) {",
          "",
          "---------------"
        ],
        "styles/components/table.scss||styles/components/table.scss": [
          "File: styles/components/table.scss -> styles/components/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "961:   }",
          "963:   &.is--padding {",
          "964:     .vxe-cell {",
          "965:       padding-left: var(--vxe-ui-table-cell-padding-left);",
          "966:       padding-right: var(--vxe-ui-table-cell-padding-right);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "964:     .vxe-body--column {",
          "965:       .vxe-cell {",
          "966:         padding-left: var(--vxe-ui-table-cell-padding-left);",
          "967:         padding-right: var(--vxe-ui-table-cell-padding-right);",
          "968:       }",
          "969:     }",
          "970:   }",
          "971:   .vxe-header--column,",
          "972:   .vxe-footer--column {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ff8254c869a1bac572adb83b1d12d922e76ff8e",
      "candidate_info": {
        "commit_hash": "4ff8254c869a1bac572adb83b1d12d922e76ff8e",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/4ff8254c869a1bac572adb83b1d12d922e76ff8e",
        "files": [
          "packages/tools/dom.js"
        ],
        "message": "fix",
        "before_after_code_files": [
          "packages/tools/dom.js||packages/tools/dom.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/tools/dom.js||packages/tools/dom.js": [
          "File: packages/tools/dom.js -> packages/tools/dom.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:   getEventTargetNode (evnt, container, queryCls, queryMethod) {",
          "116:     let targetElem",
          "118:     while (target && target.nodeType && target !== document) {",
          "119:       if (queryCls && hasClass(target, queryCls) && (!queryMethod || queryMethod(target))) {",
          "120:         targetElem = target",
          "",
          "[Removed Lines]",
          "117:     let target = evnt.target",
          "",
          "[Added Lines]",
          "117:     let target = (evnt.target.shadowRoot && evnt.composed) ? (evnt.composedPath()[0] || evnt.target) : evnt.target",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "afe78c65cba4cb95d6a06c09af3aa637a814811c",
      "candidate_info": {
        "commit_hash": "afe78c65cba4cb95d6a06c09af3aa637a814811c",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/afe78c65cba4cb95d6a06c09af3aa637a814811c",
        "files": [
          "package.json",
          "packages/table/src/methods.js"
        ],
        "message": "\u652f\u6301 footer-data",
        "before_after_code_files": [
          "packages/table/src/methods.js||packages/table/src/methods.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5260: }",
          "5265: funcs.forEach(name => {",
          "5266:   Methods[name] = function (...args) {",
          "",
          "[Removed Lines]",
          "5263: const funcs = 'setFilter,openFilter,clearFilter,getCheckedFilters,closeMenu,setActiveCellArea,getActiveCellArea,getCellAreas,clearCellAreas,copyCellArea,cutCellArea,pasteCellArea,getCopyCellArea,getCopyCellAreas,clearCopyCellArea,setCellAreas,openFind,openReplace,closeFNR,getSelectedCell,clearSelected,insert,insertAt,insertNextAt,remove,removeCheckboxRow,removeRadioRow,removeCurrentRow,getRecordset,getInsertRecords,getRemoveRecords,getUpdateRecords,clearEdit,clearActived,getEditRecord,getActiveRecord,isEditByRow,isActiveByRow,setEditRow,setActiveRow,setEditCell,setActiveCell,setSelectCell,clearValidate,fullValidate,validate,openExport,openPrint,exportData,openImport,importData,saveFile,readFile,importByFile,print'.split(',')",
          "",
          "[Added Lines]",
          "5263: const funcs = 'setFilter,openFilter,clearFilter,getCheckedFilters,closeMenu,setActiveCellArea,getActiveCellArea,getCellAreas,clearCellAreas,copyCellArea,cutCellArea,pasteCellArea,getCopyCellArea,getCopyCellAreas,clearCopyCellArea,setCellAreas,openFNR,openFind,openReplace,closeFNR,getSelectedCell,clearSelected,insert,insertAt,insertNextAt,remove,removeCheckboxRow,removeRadioRow,removeCurrentRow,getRecordset,getInsertRecords,getRemoveRecords,getUpdateRecords,clearEdit,clearActived,getEditRecord,getActiveRecord,isEditByRow,isActiveByRow,setEditRow,setActiveRow,setEditCell,setActiveCell,setSelectCell,clearValidate,fullValidate,validate,openExport,openPrint,exportData,openImport,importData,saveFile,readFile,importByFile,print'.split(',')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8a596524e9278c3422b04fbf2654d06acd0aad6",
      "candidate_info": {
        "commit_hash": "b8a596524e9278c3422b04fbf2654d06acd0aad6",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/b8a596524e9278c3422b04fbf2654d06acd0aad6",
        "files": [
          "package.json",
          "packages/export/src/mixin.js",
          "packages/filter/src/panel.js",
          "packages/grid/src/grid.js",
          "packages/table/src/cell.js",
          "packages/table/src/column.js",
          "packages/table/src/columnInfo.js",
          "packages/table/src/methods.js",
          "packages/table/src/table.js",
          "packages/tools/dom.js",
          "packages/v-x-e-table/src/conf.js",
          "styles/table.scss"
        ],
        "message": "releases 3.8.12",
        "before_after_code_files": [
          "packages/export/src/mixin.js||packages/export/src/mixin.js",
          "packages/filter/src/panel.js||packages/filter/src/panel.js",
          "packages/grid/src/grid.js||packages/grid/src/grid.js",
          "packages/table/src/cell.js||packages/table/src/cell.js",
          "packages/table/src/column.js||packages/table/src/column.js",
          "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "packages/tools/dom.js||packages/tools/dom.js",
          "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js",
          "styles/table.scss||styles/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/export/src/mixin.js||packages/export/src/mixin.js": [
          "File: packages/export/src/mixin.js -> packages/export/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:     '<meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no,minimal-ui\">',",
          "344:     `<title>${opts.sheetName}</title>`,",
          "345:     '<style media=\"print\">.vxe-page-break-before{page-break-before:always;}.vxe-page-break-after{page-break-after:always;}</style>',",
          "346:     `<style>${defaultHtmlStyle}</style>`,",
          "347:     style ? `<style>${style}</style>` : '',",
          "348:     '</head>',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:     '<style>.vxe-table{white-space:pre;}</style>',",
          "",
          "---------------"
        ],
        "packages/filter/src/panel.js||packages/filter/src/panel.js": [
          "File: packages/filter/src/panel.js -> packages/filter/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         }",
          "34:       ],",
          "35:       style: filterStore.style",
          "37:   },",
          "38:   methods: {",
          "39:     renderOptions (h, filterRender, compConf) {",
          "40:       const { $parent: $xetable, filterStore } = this",
          "41:       const { args, column, multiple, maxHeight } = filterStore",
          "43:       const rtFilter = compConf ? (compConf.renderTableFilter || compConf.renderFilter) : null",
          "44:       if (slots && slots.filter) {",
          "45:         return [",
          "",
          "[Removed Lines]",
          "36:     }, filterStore.visible ? this.renderOptions(h, filterRender, compConf).concat(this.renderFooter(h)) : [])",
          "42:       const { slots } = column",
          "",
          "[Added Lines]",
          "36:     }, filterStore.visible && column ? this.renderOptions(h, filterRender, compConf).concat(this.renderFooter(h)) : [])",
          "42:       const slots = column ? column.slots : null",
          "",
          "---------------"
        ],
        "packages/grid/src/grid.js||packages/grid/src/grid.js": [
          "File: packages/grid/src/grid.js -> packages/grid/src/grid.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "401:       const tableProps = Object.assign({}, tableExtendProps)",
          "402:       if (isZMax) {",
          "403:         if (tableExtendProps.maxHeight) {",
          "405:         } else {",
          "407:         }",
          "408:       }",
          "409:       if (proxyConfig) {",
          "",
          "[Removed Lines]",
          "404:           tableProps.maxHeight = 'auto'",
          "406:           tableProps.height = 'auto'",
          "",
          "[Added Lines]",
          "404:           tableProps.maxHeight = '100%'",
          "406:           tableProps.height = '100%'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "507:     getExcludeHeight () {",
          "508:       const { $refs, $el, isZMax, height } = this",
          "509:       const { formWrapper, toolbarWrapper, topWrapper, bottomWrapper, pagerWrapper } = $refs",
          "511:       return parentPaddingSize + getPaddingTopBottomSize($el) + getOffsetHeight(formWrapper) + getOffsetHeight(toolbarWrapper) + getOffsetHeight(topWrapper) + getOffsetHeight(bottomWrapper) + getOffsetHeight(pagerWrapper)",
          "512:     },",
          "513:     initToolbar () {",
          "",
          "[Removed Lines]",
          "510:       const parentPaddingSize = isZMax || height !== 'auto' ? 0 : getPaddingTopBottomSize($el.parentNode)",
          "",
          "[Added Lines]",
          "510:       const parentPaddingSize = isZMax || !(height === 'auto' || height === '100%') ? 0 : getPaddingTopBottomSize($el.parentNode)",
          "",
          "---------------"
        ],
        "packages/table/src/cell.js||packages/table/src/cell.js": [
          "File: packages/table/src/cell.js -> packages/table/src/cell.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import GlobalConfig from '../../v-x-e-table/src/conf'",
          "3: import VXETable from '../../v-x-e-table'",
          "4: import DomTools from '../../tools/dom'",
          "5: import UtilTools, { eqEmptyValue, isEnableConf, getFuncText } from '../../tools/utils'",
          "6: import { getRowid, getColumnConfig } from './util'",
          "7: import { getSlotVNs } from '../../tools/vn'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import { formats } from '../../v-x-e-table/src/formats'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:   ]",
          "88: }",
          "90: function getFooterContent (h, params) {",
          "91:   const { $table, column, _columnIndex, row, items } = params",
          "93:   const renderOpts = editRender || cellRender",
          "94:   if (slots && slots.footer) {",
          "95:     return $table.callSlot(slots.footer, params, h)",
          "",
          "[Removed Lines]",
          "92:   const { slots, editRender, cellRender } = column",
          "",
          "[Added Lines]",
          "91: function formatFooterLabel (footerFormatter, params) {",
          "92:   if (XEUtils.isFunction(footerFormatter)) {",
          "93:     return footerFormatter(params)",
          "94:   }",
          "95:   const isArr = XEUtils.isArray(footerFormatter)",
          "96:   const gFormatOpts = isArr ? formats.get(footerFormatter[0]) : formats.get(footerFormatter)",
          "97:   const footerFormatMethod = gFormatOpts ? gFormatOpts.tableFooterCellFormatMethod : null",
          "98:   if (footerFormatMethod) {",
          "99:     return isArr ? footerFormatMethod(params, ...footerFormatter.slice(1)) : footerFormatMethod(params)",
          "100:   }",
          "101:   return ''",
          "102: }",
          "106:   const { slots, editRender, cellRender, footerFormatter } = column",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:       return getSlotVNs(rtFooter.call($table, h, renderOpts, params))",
          "102:     }",
          "103:   }",
          "105:   if (XEUtils.isArray(items)) {",
          "107:   }",
          "109: }",
          "111: function getDefaultCellLabel (params) {",
          "",
          "[Removed Lines]",
          "106:     return [UtilTools.formatText(items[_columnIndex], 1)]",
          "108:   return [UtilTools.formatText(XEUtils.get(row, column.field), 1)]",
          "",
          "[Added Lines]",
          "118:   let itemValue = ''",
          "121:     itemValue = items[_columnIndex]",
          "122:     return [",
          "123:       footerFormatter",
          "124:         ? formatFooterLabel(footerFormatter, {",
          "125:           itemValue,",
          "126:           column,",
          "127:           row,",
          "128:           items,",
          "129:           _columnIndex",
          "130:         })",
          "131:         : UtilTools.formatText(itemValue, 1)",
          "132:     ]",
          "134:   itemValue = XEUtils.get(row, column.field)",
          "135:   return [",
          "136:     footerFormatter",
          "137:       ? formatFooterLabel(footerFormatter, {",
          "138:         itemValue,",
          "139:         column,",
          "140:         row,",
          "141:         items,",
          "142:         _columnIndex",
          "143:       })",
          "144:       : UtilTools.formatText(itemValue, 1)",
          "145:   ]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "231:   renderTreeIcon (h, params, cellVNodes) {",
          "232:     const { $table, isHidden } = params",
          "234:     const { row, column, level } = params",
          "235:     const { slots } = column",
          "236:     const { indent, lazy, trigger, iconLoaded, showIcon, iconOpen, iconClose } = treeOpts",
          "237:     const childrenField = treeOpts.children || treeOpts.childrenField",
          "238:     const hasChildField = treeOpts.hasChild || treeOpts.hasChildField",
          "239:     const rowChilds = row[childrenField]",
          "240:     let hasLazyChilds = false",
          "241:     let isAceived = false",
          "242:     let isLazyLoaded = false",
          "243:     const on = {}",
          "244:     if (slots && slots.icon) {",
          "",
          "[Removed Lines]",
          "233:     const { treeOpts, treeExpandedMaps, treeExpandLazyLoadedMaps } = $table",
          "",
          "[Added Lines]",
          "270:     const { treeOpts, treeExpandedMaps, treeExpandLazyLoadedMaps, fullAllDataRowIdData } = $table",
          "277:     const hasChild = rowChilds && rowChilds.length",
          "280:     let isLazyLoading = false",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "248:       const rowid = getRowid($table, row)",
          "249:       isAceived = !!treeExpandedMaps[rowid]",
          "250:       if (lazy) {",
          "252:         hasLazyChilds = row[hasChildField]",
          "253:       }",
          "254:     }",
          "255:     if (!trigger || trigger === 'default') {",
          "",
          "[Removed Lines]",
          "251:         isLazyLoaded = !!treeExpandLazyLoadedMaps[rowid]",
          "",
          "[Added Lines]",
          "290:         const rest = fullAllDataRowIdData[rowid]",
          "291:         isLazyLoading = !!treeExpandLazyLoadedMaps[rowid]",
          "293:         isLazyLoaded = !!rest.treeLoaded",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "266:           paddingLeft: `${level * indent}px`",
          "267:         }",
          "268:       }, [",
          "270:           h('div', {",
          "271:             class: 'vxe-tree--btn-wrapper',",
          "272:             on",
          "273:           }, [",
          "274:             h('i', {",
          "276:             })",
          "277:           ])",
          "278:         ] : null,",
          "",
          "[Removed Lines]",
          "269:         showIcon && ((rowChilds && rowChilds.length) || hasLazyChilds) ? [",
          "275:               class: ['vxe-tree--node-btn', isLazyLoaded ? (iconLoaded || GlobalConfig.icon.TABLE_TREE_LOADED) : (isAceived ? (iconOpen || GlobalConfig.icon.TABLE_TREE_OPEN) : (iconClose || GlobalConfig.icon.TABLE_TREE_CLOSE))]",
          "",
          "[Added Lines]",
          "310:         showIcon && (lazy ? (isLazyLoaded ? hasChild : hasLazyChilds) : hasChild) ? [",
          "316:               class: ['vxe-tree--node-btn', isLazyLoading ? (iconLoaded || GlobalConfig.icon.TABLE_TREE_LOADED) : (isAceived ? (iconOpen || GlobalConfig.icon.TABLE_TREE_OPEN) : (iconClose || GlobalConfig.icon.TABLE_TREE_CLOSE))]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "569:     const { slots } = column",
          "570:     const defaultSlot = slots ? slots.default : null",
          "571:     let isAceived = false",
          "573:     if (slots && slots.icon) {",
          "574:       return $table.callSlot(slots.icon, params, h)",
          "575:     }",
          "",
          "[Removed Lines]",
          "572:     let isLazyLoaded = false",
          "",
          "[Added Lines]",
          "613:     let isLazyLoading = false",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "577:       const rowid = getRowid($table, row)",
          "578:       isAceived = !!rowExpandedMaps[rowid]",
          "579:       if (lazy) {",
          "581:       }",
          "582:     }",
          "583:     return [",
          "",
          "[Removed Lines]",
          "580:         isLazyLoaded = !!rowExpandLazyLoadedMaps[rowid]",
          "",
          "[Added Lines]",
          "621:         isLazyLoading = !!rowExpandLazyLoadedMaps[rowid]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "592:         }",
          "593:       }, [",
          "594:         h('i', {",
          "596:         })",
          "597:       ]) : null,",
          "598:       defaultSlot || labelField ? h('span', {",
          "",
          "[Removed Lines]",
          "595:           class: ['vxe-table--expand-btn', isLazyLoaded ? (iconLoaded || GlobalConfig.icon.TABLE_EXPAND_LOADED) : (isAceived ? (iconOpen || GlobalConfig.icon.TABLE_EXPAND_OPEN) : (iconClose || GlobalConfig.icon.TABLE_EXPAND_CLOSE))]",
          "",
          "[Added Lines]",
          "636:           class: ['vxe-table--expand-btn', isLazyLoading ? (iconLoaded || GlobalConfig.icon.TABLE_EXPAND_LOADED) : (isAceived ? (iconOpen || GlobalConfig.icon.TABLE_EXPAND_OPEN) : (iconClose || GlobalConfig.icon.TABLE_EXPAND_CLOSE))]",
          "",
          "---------------"
        ],
        "packages/table/src/column.js||packages/table/src/column.js": [
          "File: packages/table/src/column.js -> packages/table/src/column.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   footerClassName: [String, Function],",
          "42:   formatter: [Function, Array, String],",
          "44:   sortable: Boolean,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   footerFormatter: [Function, Array, String],",
          "",
          "---------------"
        ],
        "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js": [
          "File: packages/table/src/columnInfo.js -> packages/table/src/columnInfo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:       headerClassName: _vm.headerClassName,",
          "75:       footerClassName: _vm.footerClassName,",
          "76:       formatter,",
          "77:       sortable: _vm.sortable,",
          "78:       sortBy: _vm.sortBy,",
          "79:       sortType: _vm.sortType,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:       footerFormatter: _vm.footerFormatter,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:       renderWidth: 0,",
          "128:       renderHeight: 0,",
          "129:       renderResizeWidth: 0,",
          "130:       resizeWidth: 0, // \u624b\u52a8\u8c03\u6574",
          "132:       renderLeft: 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:       renderAutoWidth: 0,",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2005:     const scaleList = []",
          "2006:     const scaleMinList = []",
          "2007:     const autoList = []",
          "2008:     this.tableFullColumn.forEach(column => {",
          "2009:       if (defaultWidth && !column.width) {",
          "2010:         column.width = defaultWidth",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2008:     const remainList = []",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2015:       if (column.visible) {",
          "2016:         if (column.resizeWidth) {",
          "2017:           resizeList.push(column)",
          "2018:         } else if (DomTools.isPx(column.width)) {",
          "2019:           pxList.push(column)",
          "2020:         } else if (DomTools.isScale(column.width)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2019:         } else if (column.width === 'auto') {",
          "2020:           autoList.push(column)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2024:         } else if (DomTools.isScale(column.minWidth)) {",
          "2025:           scaleMinList.push(column)",
          "2026:         } else {",
          "2028:         }",
          "2029:       }",
          "2030:     })",
          "2032:   },",
          "",
          "[Removed Lines]",
          "2027:           autoList.push(column)",
          "2031:     Object.assign(this.columnStore, { resizeList, pxList, pxMinList, scaleList, scaleMinList, autoList })",
          "",
          "[Added Lines]",
          "2030:           remainList.push(column)",
          "2034:     Object.assign(this.columnStore, { resizeList, pxList, pxMinList, scaleList, scaleMinList, autoList, remainList })",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2069:     const headerElem = tableHeader ? tableHeader.$el : null",
          "2070:     const footerElem = tableFooter ? tableFooter.$el : null",
          "2071:     if (bodyElem) {",
          "2072:       this.autoCellWidth(headerElem, bodyElem, footerElem)",
          "2073:       if (refull === true) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2075:       this.calcCellWidth()",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2080:     }",
          "2081:     return this.computeScrollLoad()",
          "2082:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2087:   calcCellWidth () {",
          "2088:     const { autoWidthColumnList, tableData } = this",
          "2089:     if (!tableData.length || !autoWidthColumnList.length) {",
          "2090:       this.isCalcColumn = false",
          "2091:       return this.$nextTick()",
          "2092:     }",
          "2093:     this.isCalcColumn = true",
          "2094:     return this.$nextTick().then(() => {",
          "2095:       const el = this.$el",
          "2096:       if (el) {",
          "2097:         autoWidthColumnList.forEach(column => {",
          "2098:           const cellElList = el.querySelectorAll(`.vxe-body--column.${column.id}>.vxe-cell`)",
          "2099:           const firstCellEl = cellElList[0]",
          "2100:           let paddingSize = 0",
          "2101:           if (firstCellEl) {",
          "2102:             const cellStyle = getComputedStyle(firstCellEl)",
          "2103:             paddingSize = Math.floor(XEUtils.toNumber(cellStyle.paddingLeft) + XEUtils.toNumber(cellStyle.paddingRight)) + 2",
          "2104:           }",
          "2105:           let colWidth = column.renderAutoWidth - paddingSize + 2",
          "2106:           XEUtils.arrayEach(cellElList, (cellEl) => {",
          "2107:             const labelEl = cellEl.firstChild",
          "2108:             if (labelEl) {",
          "2109:               colWidth = Math.max(colWidth, labelEl.offsetWidth)",
          "2110:             }",
          "2111:           })",
          "2112:           column.renderAutoWidth = colWidth + paddingSize",
          "2113:         })",
          "2114:         this.analyColumnWidth()",
          "2115:       }",
          "2116:       this.isCalcColumn = false",
          "2117:     })",
          "2118:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2097:     let remainWidth = bodyWidth",
          "2098:     let meanWidth = remainWidth / 100",
          "2099:     const { fit, columnStore } = this",
          "2102:     pxMinList.forEach(column => {",
          "2103:       const minWidth = parseInt(column.minWidth)",
          "",
          "[Removed Lines]",
          "2100:     const { resizeList, pxMinList, pxList, scaleList, scaleMinList, autoList } = columnStore",
          "",
          "[Added Lines]",
          "2136:     const { resizeList, pxMinList, pxList, scaleList, scaleMinList, autoList, remainList } = columnStore",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2122:       tableWidth += width",
          "2123:       column.renderWidth = width",
          "2124:     })",
          "2126:     resizeList.forEach(column => {",
          "2127:       const width = parseInt(column.resizeWidth)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2162:     autoList.forEach((column) => {",
          "2163:       const width = Math.max(60, XEUtils.toInteger(column.renderAutoWidth))",
          "2164:       tableWidth += width",
          "2165:       column.renderWidth = width",
          "2166:     })",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2129:       column.renderWidth = width",
          "2130:     })",
          "2131:     remainWidth -= tableWidth",
          "2133:     if (fit) {",
          "2134:       if (remainWidth > 0) {",
          "2135:         scaleMinList.concat(pxMinList).forEach(column => {",
          "",
          "[Removed Lines]",
          "2132:     meanWidth = remainWidth > 0 ? Math.floor(remainWidth / (scaleMinList.length + pxMinList.length + autoList.length)) : 0",
          "",
          "[Added Lines]",
          "2174:     meanWidth = remainWidth > 0 ? Math.floor(remainWidth / (scaleMinList.length + pxMinList.length + remainList.length)) : 0",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2140:     } else {",
          "2141:       meanWidth = minCellWidth",
          "2142:     }",
          "2145:       const width = Math.max(meanWidth, minCellWidth)",
          "2146:       column.renderWidth = width",
          "2147:       tableWidth += width",
          "",
          "[Removed Lines]",
          "2144:     autoList.forEach(column => {",
          "",
          "[Added Lines]",
          "2186:     remainList.forEach(column => {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2155:       let dynamicSize = dynamicList.length - 1",
          "2156:       if (dynamicSize > 0) {",
          "2157:         let odiffer = bodyWidth - tableWidth",
          "",
          "[Removed Lines]",
          "2154:       const dynamicList = scaleList.concat(scaleMinList).concat(pxMinList).concat(autoList)",
          "",
          "[Added Lines]",
          "2196:       const dynamicList = scaleList.concat(scaleMinList).concat(pxMinList).concat(remainList)",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "273:   data () {",
          "274:     return {",
          "275:       tId: `${XEUtils.uniqueId()}`,",
          "277:       staticColumns: [],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:       isCalcColumn: false,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "615:     customOpts () {",
          "616:       return Object.assign({}, GlobalConfig.table.customConfig, this.customConfig)",
          "617:     },",
          "618:     fixedColumnSize () {",
          "619:       const { collectColumn } = this",
          "620:       let fixedSize = 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "619:     autoWidthColumnList () {",
          "620:       const { visibleColumn } = this",
          "621:       return visibleColumn.filter(column => column.width === 'auto')",
          "622:     },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1022:       _e,",
          "1023:       $scopedSlots,",
          "1024:       tId,",
          "1025:       tableData,",
          "1026:       tableColumn,",
          "1027:       tableGroupColumn,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1030:       isCalcColumn,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1075:         'row--highlight': rowOpts.isHover || highlightHoverRow,",
          "1076:         'column--highlight': columnOpts.isHover || highlightHoverColumn,",
          "1077:         'checkbox--range': checkboxOpts.range,",
          "1078:         'is--header': showHeader,",
          "1079:         'is--footer': showFooter,",
          "1080:         'is--group': isGroup,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1084:         'column--calc': isCalcColumn,",
          "",
          "---------------"
        ],
        "packages/tools/dom.js||packages/tools/dom.js": [
          "File: packages/tools/dom.js -> packages/tools/dom.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:     const val = $xetable[key]",
          "160:     let num = 0",
          "161:     if (val) {",
          "163:         num = $xetable.parentHeight",
          "164:       } else {",
          "165:         const excludeHeight = $xetable.getExcludeHeight()",
          "",
          "[Removed Lines]",
          "162:       if (val === 'auto') {",
          "",
          "[Added Lines]",
          "162:       if (val === '100%' || val === 'auto') {",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js": [
          "File: packages/v-x-e-table/src/conf.js -> packages/v-x-e-table/src/conf.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:     MODAL_CLOSE: iconPrefix + 'close',",
          "220:     MODAL_INFO: iconPrefix + 'info-circle-fill',",
          "221:     MODAL_SUCCESS: iconPrefix + 'success-circle-fill',",
          "223:     MODAL_ERROR: iconPrefix + 'error-circle-fill',",
          "224:     MODAL_QUESTION: iconPrefix + 'question-circle-fill',",
          "225:     MODAL_LOADING: iconPrefix + 'spinner roll',",
          "",
          "[Removed Lines]",
          "222:     MODAL_WARNING: iconPrefix + 'warnion-circle-fill',",
          "",
          "[Added Lines]",
          "222:     MODAL_WARNING: iconPrefix + 'warning-circle-fill',",
          "",
          "---------------"
        ],
        "styles/table.scss||styles/table.scss": [
          "File: styles/table.scss -> styles/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:   }",
          "316: }",
          "319: .vxe-table {",
          "320:   .vxe-table--header-wrapper {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319: .vxe-table {",
          "320:   &.column--calc {",
          "321:     .vxe-header--column,",
          "322:     .vxe-body--column {",
          "323:       .vxe-cell {",
          "324:         word-break: break-all;",
          "325:         white-space: nowrap;",
          "326:       }",
          "327:     }",
          "328:   }",
          "329: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "611:       }",
          "612:     }",
          "613:   }",
          "619:   &.cell--area {",
          "620:     .vxe-table--body-wrapper,",
          "621:     .vxe-body--column {",
          "",
          "[Removed Lines]",
          "614:   &.checkbox--range {",
          "615:     .vxe-body--column {",
          "616:       user-select: none;",
          "617:     }",
          "618:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "623:     }",
          "624:   }",
          "625:   &.drag--range {",
          "627:       user-select: none;",
          "628:     }",
          "629:   }",
          "630:   .vxe-header--column,",
          "631:   .vxe-body--column,",
          "632:   .vxe-footer--column {",
          "",
          "[Removed Lines]",
          "626:     .vxe-cell--checkbox {",
          "",
          "[Added Lines]",
          "634:     .vxe-body--column {",
          "638:   &.checkbox--range {",
          "639:     .vxe-body--column {",
          "640:       &.col--checkbox {",
          "641:         user-select: none;",
          "642:       }",
          "643:     }",
          "644:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}