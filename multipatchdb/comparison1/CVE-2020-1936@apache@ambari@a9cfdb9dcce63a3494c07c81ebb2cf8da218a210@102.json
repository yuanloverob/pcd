{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d18e06b27c90dcd3fabf2dff70c39f4c95a3b5bc",
      "candidate_info": {
        "commit_hash": "d18e06b27c90dcd3fabf2dff70c39f4c95a3b5bc",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/d18e06b27c90dcd3fabf2dff70c39f4c95a3b5bc",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/utils/URLCredentialsHider.java",
          "ambari-server/src/test/java/org/apache/ambari/server/utils/URLCredentialsHiderTest.java"
        ],
        "message": "AMBARI-25459. Ambari doesn't show versions page after invalid repo was added. (mpapyrkovskyy) (#3169)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/utils/URLCredentialsHider.java||ambari-server/src/main/java/org/apache/ambari/server/utils/URLCredentialsHider.java",
          "ambari-server/src/test/java/org/apache/ambari/server/utils/URLCredentialsHiderTest.java||ambari-server/src/test/java/org/apache/ambari/server/utils/URLCredentialsHiderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/utils/URLCredentialsHider.java||ambari-server/src/main/java/org/apache/ambari/server/utils/URLCredentialsHider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/utils/URLCredentialsHider.java -> ambari-server/src/main/java/org/apache/ambari/server/utils/URLCredentialsHider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     String userInfo = url.getUserInfo();",
          "46:     if (StringUtils.isNotEmpty(userInfo)) {",
          "47:       if (userInfo.contains(\":\")) {",
          "49:       } else {",
          "51:       }",
          "52:     }",
          "53:     return urlString;",
          "",
          "[Removed Lines]",
          "48:         return urlString.replaceFirst(userInfo, HIDDEN_CREDENTIALS);",
          "50:         return urlString.replaceFirst(userInfo, HIDDEN_USER);",
          "",
          "[Added Lines]",
          "48:         return StringUtils.replaceOnce(urlString, userInfo, HIDDEN_CREDENTIALS);",
          "50:         return StringUtils.replaceOnce(urlString, userInfo, HIDDEN_USER);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/utils/URLCredentialsHiderTest.java||ambari-server/src/test/java/org/apache/ambari/server/utils/URLCredentialsHiderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/utils/URLCredentialsHiderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/utils/URLCredentialsHiderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     String invalidURL = \"htt://user01:pass@host:8443/api/v1\";",
          "39:     Assert.assertEquals(URLCredentialsHider.INVALID_URL, URLCredentialsHider.hideCredentials(invalidURL));",
          "40:   }",
          "41: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:     String testURL3 = \"http://***:***@host:8443/api/v1\";",
          "42:     Assert.assertEquals(String.format(\"http://%s@host:8443/api/v1\", URLCredentialsHider.HIDDEN_CREDENTIALS),",
          "43:                         URLCredentialsHider.hideCredentials(testURL3));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6904d17a673baadac4bcc77e9361c5e0816fc3a7",
      "candidate_info": {
        "commit_hash": "6904d17a673baadac4bcc77e9361c5e0816fc3a7",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/6904d17a673baadac4bcc77e9361c5e0816fc3a7",
        "files": [
          "ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql"
        ],
        "message": "AMBARI-24546. Inserting new role authorization into DB tables (#2262)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1345:   SELECT 'AMBARI.ASSIGN_ROLES', 'Assign roles' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1346:   SELECT 'AMBARI.MANAGE_STACK_VERSIONS', 'Manage stack versions' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1347:   SELECT 'AMBARI.EDIT_STACK_REPOS', 'Edit stack repository URLs'  FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1348:   SELECT 'AMBARI.RUN_CUSTOM_COMMAND', 'Perform custom administrative actions' FROM SYSIBM.SYSDUMMY1;",
          "1350: -- Set authorizations for View User role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1348:   SELECT 'AMBARI.VIEW_STATUS_INFO', 'View status information' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1547:   SELECT permission_id, 'AMBARI.ASSIGN_ROLES' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "1548:   SELECT permission_id, 'AMBARI.MANAGE_STACK_VERSIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "1549:   SELECT permission_id, 'AMBARI.EDIT_STACK_REPOS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "1550:   SELECT permission_id, 'AMBARI.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR';",
          "1552: INSERT INTO adminprivilege (privilege_id, permission_id, resource_id, principal_id)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1551:   SELECT permission_id, 'AMBARI.VIEW_STATUS_INFO' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1290:   SELECT 'AMBARI.ASSIGN_ROLES', 'Assign roles' UNION ALL",
          "1291:   SELECT 'AMBARI.MANAGE_STACK_VERSIONS', 'Manage stack versions' UNION ALL",
          "1292:   SELECT 'AMBARI.EDIT_STACK_REPOS', 'Edit stack repository URLs' UNION ALL",
          "1293:   SELECT 'AMBARI.RUN_CUSTOM_COMMAND', 'Perform custom administrative actions';",
          "1295: -- Set authorizations for View User role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1293:   SELECT 'AMBARI.VIEW_STATUS_INFO', 'View status information' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1496:   SELECT permission_id, 'AMBARI.ASSIGN_ROLES' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1497:   SELECT permission_id, 'AMBARI.MANAGE_STACK_VERSIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1498:   SELECT permission_id, 'AMBARI.EDIT_STACK_REPOS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1499:   SELECT permission_id, 'AMBARI.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR';",
          "1501: INSERT INTO adminprivilege (privilege_id, permission_id, resource_id, principal_id) VALUES",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1500:   SELECT permission_id, 'AMBARI.VIEW_STATUS_INFO' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1288:   SELECT 'AMBARI.ASSIGN_ROLES', 'Assign roles' FROM dual UNION ALL",
          "1289:   SELECT 'AMBARI.MANAGE_STACK_VERSIONS', 'Manage stack versions' FROM dual UNION ALL",
          "1290:   SELECT 'AMBARI.EDIT_STACK_REPOS', 'Edit stack repository URLs' FROM dual UNION ALL",
          "1291:   SELECT 'AMBARI.RUN_CUSTOM_COMMAND', 'Perform custom administrative actions' FROM dual;",
          "1293: -- Set authorizations for View User role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1291:   SELECT 'AMBARI.VIEW_STATUS_INFO', 'View status information' FROM dual UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1494:   SELECT permission_id, 'AMBARI.ASSIGN_ROLES' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1495:   SELECT permission_id, 'AMBARI.MANAGE_STACK_VERSIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1496:   SELECT permission_id, 'AMBARI.EDIT_STACK_REPOS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1497:   SELECT permission_id, 'AMBARI.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR';",
          "1499: insert into adminprivilege (privilege_id, permission_id, resource_id, principal_id)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1498:   SELECT permission_id, 'AMBARI.VIEW_STATUS_INFO' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1272:   SELECT 'AMBARI.ASSIGN_ROLES', 'Assign roles' UNION ALL",
          "1273:   SELECT 'AMBARI.MANAGE_STACK_VERSIONS', 'Manage stack versions' UNION ALL",
          "1274:   SELECT 'AMBARI.EDIT_STACK_REPOS', 'Edit stack repository URLs' UNION ALL",
          "1275:   SELECT 'AMBARI.RUN_CUSTOM_COMMAND', 'Perform custom administrative actions';",
          "1277: -- Set authorizations for View User role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1275:   SELECT 'AMBARI.VIEW_STATUS_INFO', 'View status information' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1478:   SELECT permission_id, 'AMBARI.ASSIGN_ROLES' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1479:   SELECT permission_id, 'AMBARI.MANAGE_STACK_VERSIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1480:   SELECT permission_id, 'AMBARI.EDIT_STACK_REPOS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1481:   SELECT permission_id, 'AMBARI.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR';",
          "1483: INSERT INTO adminprivilege (privilege_id, permission_id, resource_id, principal_id) VALUES",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1482:   SELECT permission_id, 'AMBARI.VIEW_STATUS_INFO' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1286:     SELECT 'AMBARI.ASSIGN_ROLES', 'Assign roles' UNION ALL",
          "1287:     SELECT 'AMBARI.MANAGE_STACK_VERSIONS', 'Manage stack versions' UNION ALL",
          "1288:     SELECT 'AMBARI.EDIT_STACK_REPOS', 'Edit stack repository URLs' UNION ALL",
          "1289:     SELECT 'AMBARI.RUN_CUSTOM_COMMAND', 'Perform custom administrative actions';",
          "1291:   -- Set authorizations for View User role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1289:     SELECT 'AMBARI.VIEW_STATUS_INFO', 'View status information' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1492:     SELECT permission_id, 'AMBARI.ASSIGN_ROLES' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1493:     SELECT permission_id, 'AMBARI.MANAGE_STACK_VERSIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1494:     SELECT permission_id, 'AMBARI.EDIT_STACK_REPOS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1495:     SELECT permission_id, 'AMBARI.RUN_SERVICE_CHECK' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR';",
          "1497: insert into adminprivilege (privilege_id, permission_id, resource_id, principal_id)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1496:     SELECT permission_id, 'AMBARI.VIEW_STATUS_INFO' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1300:     SELECT 'AMBARI.ASSIGN_ROLES', 'Assign roles' UNION ALL",
          "1301:     SELECT 'AMBARI.MANAGE_STACK_VERSIONS', 'Manage stack versions' UNION ALL",
          "1302:     SELECT 'AMBARI.EDIT_STACK_REPOS', 'Edit stack repository URLs' UNION ALL",
          "1303:     SELECT 'AMBARI.RUN_CUSTOM_COMMAND', 'Perform custom administrative actions';",
          "1305:   -- Set authorizations for View User role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1303:     SELECT 'AMBARI.VIEW_STATUS_INFO', 'View status information' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1506:     SELECT permission_id, 'AMBARI.ASSIGN_ROLES' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1507:     SELECT permission_id, 'AMBARI.MANAGE_STACK_VERSIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1508:     SELECT permission_id, 'AMBARI.EDIT_STACK_REPOS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1509:     SELECT permission_id, 'AMBARI.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR';",
          "1511:   insert into adminprivilege (privilege_id, permission_id, resource_id, principal_id)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1510:     SELECT permission_id, 'AMBARI.VIEW_STATUS_INFO' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7388dedff41910021cb400a771ec25a8f7bd747e",
      "candidate_info": {
        "commit_hash": "7388dedff41910021cb400a771ec25a8f7bd747e",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/7388dedff41910021cb400a771ec25a8f7bd747e",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java",
          "ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatTestHelper.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java",
          "ambari-server/src/test/java/org/apache/ambari/server/state/host/HostTest.java"
        ],
        "message": "AMBARI-25414. Configure heartbeat timeout. (mpapirkovskyy) (#3134)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java||ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java",
          "ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java||ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java||ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatTestHelper.java||ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatTestHelper.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java||ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java",
          "ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java||ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java",
          "ambari-server/src/test/java/org/apache/ambari/server/state/host/HostTest.java||ambari-server/src/test/java/org/apache/ambari/server/state/host/HostTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java||ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java -> ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:   private final ActionManager actionManager;",
          "77:   private HeartbeatMonitor heartbeatMonitor;",
          "78:   private HeartbeatProcessor heartbeatProcessor;",
          "81:   private Configuration config;",
          "83:   @Inject",
          "",
          "[Removed Lines]",
          "80:   @Inject",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:   private Map<String, HeartBeatResponse> hostResponses = new ConcurrentHashMap<>();",
          "111:   @Inject",
          "113:                           Injector injector) {",
          "114:     clusterFsm = fsm;",
          "115:     actionManager = am;",
          "117:     heartbeatProcessor = new HeartbeatProcessor(fsm, am, heartbeatMonitor, injector); //TODO modify to match pattern",
          "118:     injector.injectMembers(this);",
          "119:   }",
          "",
          "[Removed Lines]",
          "112:   public HeartBeatHandler(Clusters fsm, ActionManager am,",
          "116:     heartbeatMonitor = new HeartbeatMonitor(fsm, am, 60000, injector);",
          "",
          "[Added Lines]",
          "110:   public HeartBeatHandler(Configuration c, Clusters fsm, ActionManager am,",
          "112:     config = c;",
          "115:     heartbeatMonitor = new HeartbeatMonitor(fsm, am, config.getHeartbeatMonitorInterval(), injector);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java||ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java -> ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:   public static final String AMBARI_LOG_FILE = \"log4j.properties\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:   @Markdown(",
          "327:     description = \"Interval for heartbeat presence checks.\",",
          "328:     examples = {\"60000\",\"600000\"} )",
          "329:   public static final ConfigurationProperty<Integer> HEARTBEAT_MONITORING_INTERVAL = new ConfigurationProperty<>(",
          "330:     \"heartbeat.monitoring.interval\",60000);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3358:     return getProperty(SYS_PREPPED_HOSTS);",
          "3359:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3367:   public Integer getHeartbeatMonitorInterval() {",
          "3368:     return Integer.parseInt(getProperty(HEARTBEAT_MONITORING_INTERVAL));",
          "3369:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java||ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java -> ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1046:     hostObject.setIPv6(\"ipv6\");",
          "1047:     hostObject.setOsType(DummyOsType);",
          "1050:     Register reg = new Register();",
          "1051:     HostInfo hi = new HostInfo();",
          "1052:     hi.setHostName(DummyHostname1);",
          "",
          "[Removed Lines]",
          "1049:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am, injector);",
          "",
          "[Added Lines]",
          "1049:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am, injector);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatTestHelper.java||ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatTestHelper.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatTestHelper.java -> ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatTestHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: import org.apache.ambari.server.actionmanager.Stage;",
          "45: import org.apache.ambari.server.actionmanager.StageFactory;",
          "46: import org.apache.ambari.server.api.services.AmbariMetaInfo;",
          "47: import org.apache.ambari.server.events.publishers.STOMPUpdatePublisher;",
          "48: import org.apache.ambari.server.orm.InMemoryDefaultTestModule;",
          "49: import org.apache.ambari.server.orm.OrmTestHelper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: import org.apache.ambari.server.configuration.Configuration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:   @Inject",
          "82:   Clusters clusters;",
          "84:   @Inject",
          "85:   Injector injector;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:   @Inject",
          "86:   Configuration configuration;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "127:   public HeartBeatHandler getHeartBeatHandler(ActionManager am)",
          "128:       throws InvalidStateTransitionException, AmbariException {",
          "130:     Register reg = new Register();",
          "131:     HostInfo hi = new HostInfo();",
          "132:     hi.setHostName(DummyHostname1);",
          "",
          "[Removed Lines]",
          "129:     HeartBeatHandler handler = new HeartBeatHandler(clusters, am, injector);",
          "",
          "[Added Lines]",
          "133:     HeartBeatHandler handler = new HeartBeatHandler(configuration, clusters, am, injector);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java||ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java -> ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "212:     String hostname = hostObject.getHostName();",
          "215:     Register reg = new Register();",
          "216:     HostInfo hi = new HostInfo();",
          "217:     hi.setHostName(hostname);",
          "",
          "[Removed Lines]",
          "214:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am, injector);",
          "",
          "[Added Lines]",
          "214:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am, injector);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "363:     replay(am);",
          "364:     Clusters fsm = clusters;",
          "366:         injector);",
          "367:     clusters.addHost(DummyHostname1);",
          "368:     Host hostObject = clusters.getHost(DummyHostname1);",
          "",
          "[Removed Lines]",
          "365:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "365:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "410:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "411:     replay(am);",
          "412:     Clusters fsm = clusters;",
          "414:         injector);",
          "415:     handler.start();",
          "",
          "[Removed Lines]",
          "413:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "413:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "458:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "459:     replay(am);",
          "460:     Clusters fsm = clusters;",
          "462:             injector);",
          "463:     Cluster cluster = heartbeatTestHelper.getDummyCluster();",
          "464:     Service hdfs = addService(cluster, HDFS);",
          "",
          "[Removed Lines]",
          "461:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "461:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "509:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "510:     replay(am);",
          "511:     Clusters fsm = clusters;",
          "513:                                                     injector);",
          "514:     clusters.addHost(DummyHostname1);",
          "515:     Host hostObject = clusters.getHost(DummyHostname1);",
          "",
          "[Removed Lines]",
          "512:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "512:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "542:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "543:     replay(am);",
          "544:     Clusters fsm = clusters;",
          "546:         injector);",
          "547:     clusters.addHost(DummyHostname1);",
          "548:     Host hostObject = clusters.getHost(DummyHostname1);",
          "",
          "[Removed Lines]",
          "545:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "545:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "583:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "584:     replay(am);",
          "585:     Clusters fsm = clusters;",
          "587:         injector);",
          "588:     clusters.addHost(DummyHostname1);",
          "589:     Host hostObject = clusters.getHost(DummyHostname1);",
          "",
          "[Removed Lines]",
          "586:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "586:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "616:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "617:     replay(am);",
          "618:     Clusters fsm = clusters;",
          "620:         injector);",
          "621:     clusters.addHost(DummyHostname1);",
          "622:     Host hostObject = clusters.getHost(DummyHostname1);",
          "",
          "[Removed Lines]",
          "619:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "619:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "645:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "646:     replay(am);",
          "647:     Clusters fsm = clusters;",
          "649:             injector);",
          "650:     clusters.addHost(DummyHostname1);",
          "651:     Host hostObject = clusters.getHost(DummyHostname1);",
          "",
          "[Removed Lines]",
          "648:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "648:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "678:     hostObject.setIPv4(\"ipv4\");",
          "679:     hostObject.setIPv6(\"ipv6\");",
          "682:         injector);",
          "683:     Register reg = new Register();",
          "684:     HostInfo hi = new HostInfo();",
          "",
          "[Removed Lines]",
          "681:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "681:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "766:     ActionManager am = actionManagerTestHelper.getMockActionManager();",
          "767:     replay(am);",
          "768:     Clusters fsm = clusters;",
          "770:         injector);",
          "771:     handler.setHeartbeatMonitor(hm);",
          "772:     clusters.addHost(DummyHostname1);",
          "",
          "[Removed Lines]",
          "769:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am,",
          "",
          "[Added Lines]",
          "769:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "989:           add(command);",
          "990:         }}).anyTimes();",
          "991:     replay(am);",
          "994:     Register reg = new Register();",
          "995:     HostInfo hi = new HostInfo();",
          "",
          "[Removed Lines]",
          "992:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am, injector);",
          "",
          "[Added Lines]",
          "992:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am, injector);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1070:               add(command);",
          "1071:             }}).anyTimes();",
          "1072:     replay(am);",
          "1074:     HeartbeatProcessor heartbeatProcessor = handler.getHeartbeatProcessor();",
          "1076:     Register reg = new Register();",
          "",
          "[Removed Lines]",
          "1073:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am, injector);",
          "",
          "[Added Lines]",
          "1073:     HeartBeatHandler handler = new HeartBeatHandler(config, fsm, am, injector);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java||ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java -> ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import static org.junit.Assert.assertTrue;",
          "23: import static org.junit.Assert.fail;",
          "24: import static org.mockito.Mockito.mock;",
          "26: import java.sql.SQLException;",
          "27: import java.util.Collections;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import static org.mockito.Mockito.when;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:     String hostname = \"host1\";",
          "118:     fsm.addHost(hostname);",
          "119:     ActionManager am = mock(ActionManager.class);",
          "120:     HeartbeatMonitor hm = new HeartbeatMonitor(fsm, am, 10, injector);",
          "122:     Register reg = new Register();",
          "123:     reg.setHostname(hostname);",
          "124:     reg.setResponseId(12);",
          "",
          "[Removed Lines]",
          "121:     HeartBeatHandler handler = new HeartBeatHandler(fsm, am, injector);",
          "",
          "[Added Lines]",
          "121:     Configuration configuration = mock(Configuration.class);",
          "122:     when(configuration.getHeartbeatMonitorInterval()).thenReturn(10);",
          "124:     HeartBeatHandler handler = new HeartBeatHandler(configuration, fsm, am, injector);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:     ActionManager am = mock(ActionManager.class);",
          "187:     HeartbeatMonitor hm = new HeartbeatMonitor(clusters, am,",
          "188:       heartbeatMonitorWakeupIntervalMS, injector);",
          "190:     Register reg = new Register();",
          "191:     reg.setHostname(hostname1);",
          "192:     reg.setResponseId(12);",
          "",
          "[Removed Lines]",
          "189:     HeartBeatHandler handler = new HeartBeatHandler(clusters, am, injector);",
          "",
          "[Added Lines]",
          "192:     Configuration configuration = mock(Configuration.class);",
          "193:     when(configuration.getHeartbeatMonitorInterval()).thenReturn(60000);",
          "194:     HeartBeatHandler handler = new HeartBeatHandler(configuration, clusters, am, injector);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "305:     ActionManager am = mock(ActionManager.class);",
          "306:     HeartbeatMonitor hm = new HeartbeatMonitor(clusters, am,",
          "307:       heartbeatMonitorWakeupIntervalMS, injector);",
          "309:     Register reg = new Register();",
          "310:     reg.setHostname(hostname1);",
          "311:     reg.setResponseId(12);",
          "",
          "[Removed Lines]",
          "308:     HeartBeatHandler handler = new HeartBeatHandler(clusters, am, injector);",
          "",
          "[Added Lines]",
          "313:     Configuration configuration = mock(Configuration.class);",
          "314:     when(configuration.getHeartbeatMonitorInterval()).thenReturn(60000);",
          "315:     HeartBeatHandler handler = new HeartBeatHandler(configuration, clusters, am, injector);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "400:     ActionManager am = mock(ActionManager.class);",
          "401:     HeartbeatMonitor hm = new HeartbeatMonitor(clusters, am,",
          "402:       heartbeatMonitorWakeupIntervalMS, injector);",
          "404:         injector);",
          "405:     Register reg = new Register();",
          "406:     reg.setHostname(hostname1);",
          "",
          "[Removed Lines]",
          "403:     HeartBeatHandler handler = new HeartBeatHandler(clusters, am,",
          "",
          "[Added Lines]",
          "410:     Configuration configuration = mock(Configuration.class);",
          "411:     when(configuration.getHeartbeatMonitorInterval()).thenReturn(60000);",
          "412:     HeartBeatHandler handler = new HeartBeatHandler(configuration, clusters, am,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "477:     ActionManager am = mock(ActionManager.class);",
          "478:     HeartbeatMonitor hm = new HeartbeatMonitor(clusters, am, 10, injector);",
          "481:     Register reg = new Register();",
          "482:     reg.setHostname(hostname1);",
          "",
          "[Removed Lines]",
          "479:     HeartBeatHandler handler = new HeartBeatHandler(clusters, am, injector);",
          "",
          "[Added Lines]",
          "488:     Configuration configuration = mock(Configuration.class);",
          "489:     when(configuration.getHeartbeatMonitorInterval()).thenReturn(10);",
          "490:     HeartBeatHandler handler = new HeartBeatHandler(configuration, clusters, am, injector);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "598:     ActionManager am = mock(ActionManager.class);",
          "599:     HeartbeatMonitor hm = new HeartbeatMonitor(clusters, am,",
          "600:       heartbeatMonitorWakeupIntervalMS, injector);",
          "602:     Register reg = new Register();",
          "603:     reg.setHostname(hostname1);",
          "604:     reg.setResponseId(12);",
          "",
          "[Removed Lines]",
          "601:     HeartBeatHandler handler = new HeartBeatHandler(clusters, am, injector);",
          "",
          "[Added Lines]",
          "612:     Configuration configuration = mock(Configuration.class);",
          "613:     when(configuration.getHeartbeatMonitorInterval()).thenReturn(60000);",
          "614:     HeartBeatHandler handler = new HeartBeatHandler(configuration, clusters, am, injector);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/state/host/HostTest.java||ambari-server/src/test/java/org/apache/ambari/server/state/host/HostTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/state/host/HostTest.java -> ambari-server/src/test/java/org/apache/ambari/server/state/host/HostTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.apache.ambari.server.agent.HeartBeatHandler;",
          "39: import org.apache.ambari.server.agent.HostInfo;",
          "40: import org.apache.ambari.server.api.services.AmbariMetaInfo;",
          "41: import org.apache.ambari.server.events.publishers.AmbariEventPublisher;",
          "42: import org.apache.ambari.server.orm.GuiceJpaInitializer;",
          "43: import org.apache.ambari.server.orm.InMemoryDefaultTestModule;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: import org.apache.ambari.server.configuration.Configuration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:     Clusters clusters = mock(Clusters.class);",
          "131:     ActionManager manager = mock(ActionManager.class);",
          "132:     Injector injector = mock(Injector.class);",
          "133:     doNothing().when(injector).injectMembers(any());",
          "134:     when(injector.getInstance(AmbariEventPublisher.class)).thenReturn(mock(AmbariEventPublisher.class));",
          "136:     String os = handler.getOsType(\"RedHat\", \"6.1\");",
          "137:     Assert.assertEquals(\"redhat6\", os);",
          "138:     os = handler.getOsType(\"RedHat\", \"6\");",
          "",
          "[Removed Lines]",
          "135:     HeartBeatHandler handler = new HeartBeatHandler(clusters, manager, injector);",
          "",
          "[Added Lines]",
          "134:     Configuration configuration = mock(Configuration.class);",
          "137:     HeartBeatHandler handler = new HeartBeatHandler(configuration, clusters, manager, injector);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c89b1a9b9c573d601ffe93e0efc743e69ee4b5ff",
      "candidate_info": {
        "commit_hash": "c89b1a9b9c573d601ffe93e0efc743e69ee4b5ff",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c89b1a9b9c573d601ffe93e0efc743e69ee4b5ff",
        "files": [
          "ambari-web/app/utils/db.js"
        ],
        "message": "AMBARI-25102 Dasboard metrics will not load for ambari user which has dot in their username.",
        "before_after_code_files": [
          "ambari-web/app/utils/db.js||ambari-web/app/utils/db.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/utils/db.js||ambari-web/app/utils/db.js": [
          "File: ambari-web/app/utils/db.js -> ambari-web/app/utils/db.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:   App.db.data = localStorage.getObject('ambari');",
          "140:   Em.assert('`namespace` should be defined', !!namespace);",
          "141:   checkNamespace(namespace);",
          "142:   return Em.get(Em.get(App.db.data, namespace), key);",
          "143: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:   if (key.contains('user-pref')) {",
          "144:     return Em.get(App.db.data, namespace)[key];",
          "145:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:   App.db.data = localStorage.getObject('ambari');",
          "166:   Em.assert('`namespace` should be defined', !!namespace);",
          "167:   checkNamespace(namespace);",
          "169:   localStorage.setObject('ambari', App.db.data);",
          "170: };",
          "",
          "[Removed Lines]",
          "168:   Em.set(Em.get(App.db.data, namespace), key, value);",
          "",
          "[Added Lines]",
          "172:   if (key.contains('user-pref')) {",
          "174:     Em.get(App.db.data, namespace)[key] = value;",
          "175:   } else {",
          "176:     Em.set(Em.get(App.db.data, namespace), key, value);",
          "177:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bed0e8b4903d0d72cda6c065a6267810471a4bb",
      "candidate_info": {
        "commit_hash": "7bed0e8b4903d0d72cda6c065a6267810471a4bb",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/7bed0e8b4903d0d72cda6c065a6267810471a4bb",
        "files": [
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs"
        ],
        "message": "AMBARI-24387 - Support YARN Application timeout feature in Ambari Capaacity Scheduler View (#1959)\n\n* AMBARI-24387 - Support YARN Application timeout feature in Ambari Capacity Scheduler View\n\n* AMBARI-24387 - Support YARN Application timeout feature in Ambari Capaacity Scheduler View (asnaik)",
        "before_after_code_files": [
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs||contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js": [
          "File: contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js -> contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "258:   priority: DS.attr('number', {defaultValue: 0}),",
          "259:   maximum_allocation_mb:DS.attr('number'),",
          "260:   maximum_allocation_vcores:DS.attr('number'),",
          "262:   disable_preemption: DS.attr('string', {defaultValue: ''}),",
          "263:   isPreemptionInherited: DS.attr('boolean', {defaultValue: true}),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "261:   maximum_application_lifetime:DS.attr('number'),",
          "262:   default_application_lifetime:DS.attr('number'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "341:   isLeafQ: function() {",
          "342:     return this.get('queues') === null;",
          "344: });",
          "",
          "[Removed Lines]",
          "343:   }.property('queues')",
          "",
          "[Added Lines]",
          "345:   }.property('queues'),",
          "350:   watchChangeLeafQueue: function () {",
          "351:     if (this.get('isLeafQ') == false) {",
          "352:       this.set('maximum_application_lifetime', null);",
          "353:       this.set('default_application_lifetime', null);",
          "354:     }",
          "355:   }.observes('isLeafQ')",
          "",
          "---------------"
        ],
        "contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js": [
          "File: contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js -> contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:           disable_preemption:            props[base_path + '.disable_preemption'] || '',",
          "110:           isPreemptionInherited:         (props[base_path + '.disable_preemption'] !== undefined)?false:true,",
          "111:           maximum_allocation_mb:         props[base_path + '.maximum-allocation-mb'] || null,",
          "113:         };",
          "",
          "[Removed Lines]",
          "112:           maximum_allocation_vcores:     props[base_path + '.maximum-allocation-vcores'] || null",
          "",
          "[Added Lines]",
          "112:           maximum_allocation_vcores:     props[base_path + '.maximum-allocation-vcores'] || null,",
          "113:           maximum_application_lifetime:     props[base_path + '.maximum-application-lifetime'] || null,",
          "114:           default_application_lifetime:     props[base_path + '.default-application-lifetime'] || null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "233:     json[this.PREFIX + \".\" + record.get('path') + \".ordering-policy\"] = record.get('ordering_policy')||null;",
          "234:     json[this.PREFIX + \".\" + record.get('path') + \".maximum-allocation-mb\"] = record.get('maximum_allocation_mb') || null;",
          "235:     json[this.PREFIX + \".\" + record.get('path') + \".maximum-allocation-vcores\"] = record.get('maximum_allocation_vcores') || null;",
          "237:     if (record.get('ordering_policy') == 'fair') {",
          "238:       json[this.PREFIX + \".\" + record.get('path') + \".ordering-policy.fair.enable-size-based-weight\"] = record.get('enable_size_based_weight');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     json[this.PREFIX + \".\" + record.get('path') + \".maximum-application-lifetime\"] = record.get('maximum_application_lifetime') || null;",
          "239:     json[this.PREFIX + \".\" + record.get('path') + \".default-application-lifetime\"] = record.get('default_application_lifetime') || null;",
          "",
          "---------------"
        ],
        "contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs||contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs": [
          "File: contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs -> contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "416:                 {{/if}}",
          "417:               </div>",
          "418:             {{/if}}",
          "419:             {{#if isFairOP}}",
          "420:               <div class=\"form-group\">",
          "421:                 {{tooltip-label",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "419:             {{#if content.isLeafQ}}",
          "420:                 <div class=\"form-group\">",
          "421:                     {{tooltip-label",
          "422:                             class=\"col-xs-6 control-label\"",
          "423:                             label='Maximum Application Lifetime '",
          "424:                             message='Maximum lifetime of an application which is submitted to a queue in seconds.Any value less than or equal to zero will be considered as disabled.<br/> If positive value is configured then any application submitted to this queue will be killed after exceeds the configured lifetime'}}",
          "425:                     {{#if isOperator}}",
          "426:                         <div class=\"col-xs-6 control-value input-percent-wrap\">",
          "427:                             <div>",
          "428:                                 <div class=\"input-group input-percent\">",
          "429:                                     {{int-input value=content.maximum_application_lifetime class=\"input-sm input-int\"",
          "430:                                                 placeholder=\"-1\"}}",
          "431:                                     <span class=\"input-group-addon\">sec</span>",
          "432:                                 </div>",
          "433:                             </div>",
          "434:                             {{#if queueDirtyFilelds.maximum_application_lifetime}}",
          "435:                                 <div class=\"btn-group btn-group-xs\">",
          "436:                                     <a {{action 'rollbackProp' 'maximum_application_lifetime' content}} href=\"#\"",
          "437:                                                                                                         class=\"btn btn-default btn-warning\"><i",
          "438:                                             class=\"fa fa-undo\"></i></a>",
          "439:                                 </div>",
          "440:                             {{/if}}",
          "441:                         </div>",
          "442:                     {{else}}",
          "443:                         <div class=\"col-xs-6\">",
          "444:                             {{#if content.maximum_application_lifetime}}",
          "445:                                 <p class=\"form-control-static\">{{content.maximum_application_lifetime}} sec</p>",
          "446:                             {{else}}",
          "447:                                 <p class=\"form-control-static\">-1</p>",
          "448:                             {{/if}}",
          "449:                         </div>",
          "450:                     {{/if}}",
          "451:                 </div>",
          "452:             {{/if}}",
          "453:               {{#if content.isLeafQ}}",
          "454:                   <div class=\"form-group\">",
          "455:                       {{tooltip-label",
          "456:                               class=\"col-xs-6 control-label\"",
          "457:                               label='Default Application Lifetime '",
          "458:                               message='Default lifetime of an application which is submitted to a queue in seconds. Any value less than or equal to zero will be considered as disabled.<br/>  If the user has not submitted application with lifetime value then this value will be taken.'}}",
          "459:                       {{#if isOperator}}",
          "460:                           <div class=\"col-xs-6 control-value input-percent-wrap\">",
          "461:                               <div>",
          "462:                                   <div class=\"input-group input-percent\">",
          "463:                                       {{int-input value=content.default_application_lifetime class=\"input-sm input-int\"",
          "464:                                                   placeholder=\"-1\"}}",
          "465:                                       <span class=\"input-group-addon\">sec</span>",
          "466:                                   </div>",
          "467:                               </div>",
          "468:                               {{#if queueDirtyFilelds.default_application_lifetime}}",
          "469:                                   <div class=\"btn-group btn-group-xs\">",
          "470:                                       <a {{action 'rollbackProp' 'default_application_lifetime' content}} href=\"#\"",
          "471:                                                                                                           class=\"btn btn-default btn-warning\"><i",
          "472:                                               class=\"fa fa-undo\"></i></a>",
          "473:                                   </div>",
          "474:                               {{/if}}",
          "475:                           </div>",
          "476:                       {{else}}",
          "477:                           <div class=\"col-xs-6\">",
          "478:                               {{#if content.default_application_lifetime}}",
          "479:                                   <p class=\"form-control-static\">{{content.default_application_lifetime}} sec</p>",
          "480:                               {{else}}",
          "481:                                   <p class=\"form-control-static\">-1</p>",
          "482:                               {{/if}}",
          "483:                           </div>",
          "484:                       {{/if}}",
          "485:                   </div>",
          "486:               {{/if}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}