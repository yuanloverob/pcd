{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d0ea8f4359d064aa8eebed294dd2948bf262e882",
      "candidate_info": {
        "commit_hash": "d0ea8f4359d064aa8eebed294dd2948bf262e882",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/d0ea8f4359d064aa8eebed294dd2948bf262e882",
        "files": [
          "package.json",
          "packages/export/src/mixin.js",
          "packages/table/src/table.js",
          "packages/toolbar/src/toolbar.js",
          "packages/v-x-e-table/src/conf.js"
        ],
        "message": "\u4fee\u590d\u5bfc\u51fa\u8bbe\u7f6e\u9ed8\u8ba4\u6587\u4ef6\u540d\u65e0\u6548\u95ee\u9898 #1988",
        "before_after_code_files": [
          "packages/export/src/mixin.js||packages/export/src/mixin.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "packages/toolbar/src/toolbar.js||packages/toolbar/src/toolbar.js",
          "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/export/src/mixin.js||packages/export/src/mixin.js": [
          "File: packages/export/src/mixin.js -> packages/export/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1091:     visible: true",
          "1092:   })",
          "1099:   if (modes.indexOf(exportParams.mode) === -1) {",
          "1100:     exportParams.mode = modes[0]",
          "1101:   }",
          "",
          "[Removed Lines]",
          "1094:   if (!initStore.export) {",
          "1095:     Object.assign(exportParams, {",
          "1096:       mode: selectRecords.length ? 'selected' : 'current'",
          "1097:     }, defOpts)",
          "1098:   }",
          "",
          "[Added Lines]",
          "1094:   Object.assign(exportParams, {",
          "1095:     mode: selectRecords.length ? 'selected' : 'current'",
          "1096:   }, defOpts)",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:     autoResize: { type: Boolean, default: () => GlobalConfig.table.autoResize },",
          "189:     syncResize: [Boolean, String, Number],",
          "191:     columnConfig: Object,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191:     resizeConfig: Object,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "479:     rowOpts () {",
          "480:       return Object.assign({}, GlobalConfig.table.rowConfig, this.rowConfig)",
          "481:     },",
          "482:     resizableOpts () {",
          "483:       return Object.assign({}, GlobalConfig.table.resizableConfig, this.resizableConfig)",
          "484:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "484:     resizeOpts () {",
          "485:       return Object.assign({}, GlobalConfig.table.resizeConfig, this.resizeConfig)",
          "486:     },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "903:       }",
          "904:     }",
          "905:     if (this.autoResize) {",
          "907:       resizeObserver.observe(this.$el)",
          "908:       resizeObserver.observe(this.getParentElem())",
          "909:       this.$resize = resizeObserver",
          "",
          "[Removed Lines]",
          "906:       const resizeObserver = createResizeEvent(() => this.recalculate(true))",
          "",
          "[Added Lines]",
          "911:       const resizeObserver = createResizeEvent(this.resizeOpts.refreshDelay ? XEUtils.throttle(() => {",
          "912:         this.recalculate(true)",
          "913:       }, this.resizeOpts.refreshDelay, { leading: true, trailing: true }) : () => {",
          "914:         this.recalculate(true)",
          "915:       })",
          "",
          "---------------"
        ],
        "packages/toolbar/src/toolbar.js||packages/toolbar/src/toolbar.js": [
          "File: packages/toolbar/src/toolbar.js -> packages/toolbar/src/toolbar.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: function renderRightTools (h, _vm) {",
          "88:   const toolsSlot = $scopedSlots.tools",
          "89:   if (toolsSlot) {",
          "91:   }",
          "92:   return tools.map(item => {",
          "93:     const { dropdowns, toolRender } = item",
          "",
          "[Removed Lines]",
          "87:   const { _e, $scopedSlots, $xetable, tools = [] } = _vm",
          "90:     return toolsSlot.call(_vm, { $table: $xetable, $grid: $xetable.xegrid }, h)",
          "",
          "[Added Lines]",
          "87:   const { _e, $scopedSlots, $xetable, $xegrid, tools = [] } = _vm",
          "90:     return toolsSlot.call(_vm, { $table: $xetable, $grid: $xegrid }, h)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:       if (renderToolbarTool) {",
          "101:         return h('span', {",
          "102:           class: 'vxe-tool--item'",
          "104:       }",
          "105:     }",
          "106:     return h('vxe-button', {",
          "",
          "[Removed Lines]",
          "103:         }, getSlotVNs(renderToolbarTool.call(_vm, h, toolRender, { $table: $xetable, $grid: $xetable.xegrid, tool: item })))",
          "",
          "[Added Lines]",
          "103:         }, getSlotVNs(renderToolbarTool.call(_vm, h, toolRender, { $table: $xetable, $grid: $xegrid, tool: item })))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "601:           $xegrid.triggerToolbarBtnEvent(item, evnt)",
          "602:         } else {",
          "603:           const commandMethod = VXETable.commands.get(code)",
          "605:           if (commandMethod) {",
          "606:             commandMethod.call(this, params, evnt)",
          "607:           }",
          "",
          "[Removed Lines]",
          "604:           const params = { code, button: item, $table: $xetable, $grid: $xetable.xegrid, $event: evnt }",
          "",
          "[Added Lines]",
          "604:           const params = { code, button: item, $table: $xetable, $grid: $xegrid, $event: evnt }",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js": [
          "File: packages/v-x-e-table/src/conf.js -> packages/v-x-e-table/src/conf.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     radioConfig: {",
          "35:       strict: true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:     resizeConfig: {",
          "34:       refreshDelay: 250",
          "35:     },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e64597f06bacb277247bf7df1a6b0847292def61",
      "candidate_info": {
        "commit_hash": "e64597f06bacb277247bf7df1a6b0847292def61",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/e64597f06bacb277247bf7df1a6b0847292def61",
        "files": [
          "package.json",
          "packages/table/module/export/import-panel.ts",
          "packages/table/src/methods.ts",
          "packages/table/src/table.ts"
        ],
        "message": "fix",
        "before_after_code_files": [
          "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts",
          "packages/table/src/methods.ts||packages/table/src/methods.ts",
          "packages/table/src/table.ts||packages/table/src/table.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/module/export/import-panel.ts||packages/table/module/export/import-panel.ts": [
          "File: packages/table/module/export/import-panel.ts -> packages/table/module/export/import-panel.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:       props: {",
          "72:         value: storeData.visible,",
          "73:         title: getI18n('vxe.import.impTitle'),",
          "75:         mask: true,",
          "76:         lockView: true,",
          "77:         showFooter: false,",
          "",
          "[Removed Lines]",
          "74:         width: 520,",
          "",
          "[Added Lines]",
          "74:         width: 540,",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:         }",
          "102:       }",
          "103:     }",
          "105:   }",
          "107: }",
          "109: function computeVirtualY (_vm: any) {",
          "",
          "[Removed Lines]",
          "104:     return { toVisibleIndex: Math.max(0, toVisibleIndex), visibleSize: Math.max(8, visibleSize) }",
          "106:   return { toVisibleIndex: 0, visibleSize: 8 }",
          "",
          "[Added Lines]",
          "104:     return { toVisibleIndex: Math.max(0, toVisibleIndex), visibleSize: Math.max(6, visibleSize) }",
          "106:   return { toVisibleIndex: 0, visibleSize: 6 }",
          "",
          "---------------"
        ],
        "packages/table/src/table.ts||packages/table/src/table.ts": [
          "File: packages/table/src/table.ts -> packages/table/src/table.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import validatorMixin from '../module/validator/mixin'",
          "24: import customMixin from '../module/custom/mixin'",
          "28: const { getConfig, getI18n, renderer, globalResize, globalEvents, globalMixins } = VxeUI",
          "",
          "[Removed Lines]",
          "26: import type { VxeLoadingComponent, VxeTooltipComponent } from 'vxe-pc-ui'",
          "",
          "[Added Lines]",
          "26: import type { VxeLoadingComponent, VxeTooltipComponent, VxeTabsConstructor, VxeTabsPrivateMethods } from 'vxe-pc-ui'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:     }",
          "127:   },",
          "128:   inject: {",
          "129:     $xeGrid: {",
          "130:       default: null",
          "131:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:     $xeTabs: {",
          "130:       default: null",
          "131:     },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "353:     }",
          "354:   },",
          "355:   computed: {",
          "356:     tableId () {",
          "357:       const { id } = this",
          "358:       if (id) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "359:     ...({} as {",
          "360:       $xeTabs(): (VxeTabsConstructor & VxeTabsPrivateMethods) | null",
          "361:     }),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "623:         return true",
          "624:       }",
          "625:       return false",
          "626:     }",
          "627:   } as any,",
          "628:   watch: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "632:     },",
          "633:     tabsResizeFlag () {",
          "634:       const $xeTable = this",
          "635:       const $xeTabs = $xeTable.$xeTabs",
          "637:       return $xeTabs ? $xeTabs.reactData.resizeFlag : null",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "684:         })",
          "685:       }",
          "686:     },",
          "687:     mergeCells (value: any) {",
          "688:       this.clearMergeCells()",
          "689:       this.$nextTick(() => this.setMergeCells(value))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699:     tabsResizeFlag () {",
          "700:       this.handleGlobalResizeEvent()",
          "701:     },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e2df1dd239c0e060718511ecca9f7a9c0459ce39",
      "candidate_info": {
        "commit_hash": "e2df1dd239c0e060718511ecca9f7a9c0459ce39",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/e2df1dd239c0e060718511ecca9f7a9c0459ce39",
        "files": [
          "package.json",
          "packages/button/src/button.js",
          "types/v-x-e-table/index.d.ts"
        ],
        "message": "\u4f18\u5316\u6309\u94ae\u6837\u5f0f",
        "before_after_code_files": [
          "packages/button/src/button.js||packages/button/src/button.js",
          "types/v-x-e-table/index.d.ts||types/v-x-e-table/index.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/button/src/button.js||packages/button/src/button.js": [
          "File: packages/button/src/button.js -> packages/button/src/button.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:         attrs: {",
          "166:           placement: panelPlacement",
          "167:         },",
          "169:       }, inited ? [",
          "170:         h('div', {",
          "171:           class: 'vxe-button--dropdown-wrapper',",
          "172:           on: {",
          "173:             mousedown: this.mousedownDropdownEvent,",
          "176:           }",
          "177:         }, destroyOnClose && !visiblePanel ? [] : downsSlot.call(this, {}, h))",
          "178:       ] : null)",
          "",
          "[Removed Lines]",
          "168:         style: this.panelStyle",
          "174:             click: this.clickDropdownEvent,",
          "175:             ...panelOns",
          "",
          "[Added Lines]",
          "168:         style: this.panelStyle,",
          "169:         on: panelOns",
          "175:             click: this.clickDropdownEvent",
          "",
          "---------------"
        ],
        "types/v-x-e-table/index.d.ts||types/v-x-e-table/index.d.ts": [
          "File: types/v-x-e-table/index.d.ts -> types/v-x-e-table/index.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   size?: SizeType;",
          "25:   zIndex?: number;",
          "26:   version?: number;",
          "27:   emptyCell?: string;",
          "28:   icon?: VxeGlobalIcon;",
          "29:   table?: any;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:   tableVersion?: number;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0dab1ffa79d413baa181623f5da4a420f5001cf5",
      "candidate_info": {
        "commit_hash": "0dab1ffa79d413baa181623f5da4a420f5001cf5",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/0dab1ffa79d413baa181623f5da4a420f5001cf5",
        "files": [
          "package.json",
          "packages/table/module/export/mixin.ts"
        ],
        "message": "releases 3.11.15",
        "before_after_code_files": [
          "packages/table/module/export/mixin.ts||packages/table/module/export/mixin.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/module/export/mixin.ts||packages/table/module/export/mixin.ts": [
          "File: packages/table/module/export/mixin.ts -> packages/table/module/export/mixin.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   return XEUtils.isBoolean(cellValue) ? (cellValue ? 'TRUE' : 'FALSE') : cellValue",
          "67: }",
          "70:   const { isAllExpand, mode } = opts",
          "71:   const { treeConfig, treeOpts, radioOpts, checkboxOpts, columnOpts } = $xetable",
          "72:   const childrenField = treeOpts.children || treeOpts.childrenField",
          "",
          "[Removed Lines]",
          "69: function getLabelData ($xetable: any, opts: any, columns: any[], datas: any[]) {",
          "",
          "[Added Lines]",
          "69: function getBodyLabelData ($xetable: any, opts: any, columns: any[], datas: any[]) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:     columns.forEach((column, $columnIndex) => {",
          "153:       let cellValue = ''",
          "154:       const renderOpts = column.editRender || column.cellRender",
          "157:         const compConf = renderer.get(renderOpts.name)",
          "158:         if (compConf) {",
          "160:         }",
          "161:       }",
          "164:       } else {",
          "165:         switch (column.type) {",
          "166:           case 'seq': {",
          "",
          "[Removed Lines]",
          "155:       let exportLabelMethod = column.exportMethod",
          "156:       if (!exportLabelMethod && renderOpts && renderOpts.name) {",
          "159:           exportLabelMethod = compConf.tableExportMethod || compConf.exportMethod || (compConf as any).cellExportMethod",
          "162:       if (exportLabelMethod) {",
          "163:         cellValue = exportLabelMethod({ $table: $xetable, row, column, options: opts })",
          "",
          "[Added Lines]",
          "155:       let bodyExportMethod = column.exportMethod",
          "156:       if (!bodyExportMethod && renderOpts && renderOpts.name) {",
          "159:           bodyExportMethod = compConf.tableExportMethod || compConf.exportMethod || (compConf as any).cellExportMethod",
          "162:       if (!bodyExportMethod) {",
          "163:         bodyExportMethod = columnOpts.exportMethod",
          "164:       }",
          "165:       if (bodyExportMethod) {",
          "166:         cellValue = bodyExportMethod({ $table: $xetable, row, column, options: opts })",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "207:   if (dataFilterMethod) {",
          "208:     datas = datas.filter((row: any, index: any) => dataFilterMethod({ row, $rowIndex: index }))",
          "209:   }",
          "211: }",
          "213: function getBooleanValue (cellValue: any) {",
          "",
          "[Removed Lines]",
          "210:   return getLabelData($xetable, opts, columns, datas)",
          "",
          "[Added Lines]",
          "213:   return getBodyLabelData($xetable, opts, columns, datas)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99fdd028af25bc3c2410e171806760caa273da1e",
      "candidate_info": {
        "commit_hash": "99fdd028af25bc3c2410e171806760caa273da1e",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/99fdd028af25bc3c2410e171806760caa273da1e",
        "files": [
          "examples/App.vue",
          "helper/vetur/attributes.json",
          "package.json",
          "packages/export/src/mixin.js",
          "packages/table/src/methods.js",
          "types/export.d.ts",
          "types/table.d.ts"
        ],
        "message": "\u4f18\u5316\u7f16\u8f91\u6a21\u5f0f",
        "before_after_code_files": [
          "examples/App.vue||examples/App.vue",
          "packages/export/src/mixin.js||packages/export/src/mixin.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "types/export.d.ts||types/export.d.ts",
          "types/table.d.ts||types/table.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/App.vue||examples/App.vue": [
          "File: examples/App.vue -> examples/App.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1659:             }",
          "1660:           ]",
          "2019:         }",
          "2020:       ]",
          "2021:     }",
          "2022:   },",
          "",
          "[Removed Lines]",
          "1661:         },",
          "1662:         {",
          "1663:           label: 'app.aside.nav.formats',",
          "1664:           value: 'formats',",
          "1665:           expand: false,",
          "1666:           children: [",
          "1667:             {",
          "1668:               label: 'app.aside.nav.api',",
          "1669:               locat: {",
          "1670:                 name: 'FormatsAPI'",
          "1671:               },",
          "1672:               keywords: ['formats']",
          "1673:             }",
          "1674:           ]",
          "1675:         },",
          "1676:         {",
          "1677:           label: 'app.aside.nav.commands',",
          "1678:           value: 'commands',",
          "1679:           expand: false,",
          "1680:           children: [",
          "1681:             {",
          "1682:               label: 'app.aside.nav.api',",
          "1683:               locat: {",
          "1684:                 name: 'CommandsAPI'",
          "1685:               },",
          "1686:               keywords: ['commands']",
          "1687:             }",
          "1688:           ]",
          "1689:         },",
          "1690:         {",
          "1691:           label: 'app.aside.nav.menus',",
          "1692:           value: 'menus',",
          "1693:           expand: false,",
          "1694:           children: [",
          "1695:             {",
          "1696:               label: 'app.aside.nav.api',",
          "1697:               locat: {",
          "1698:                 name: 'MenusAPI'",
          "1699:               },",
          "1700:               keywords: ['menus']",
          "1701:             }",
          "1702:           ]",
          "1703:         },",
          "1704:         {",
          "1705:           label: 'app.aside.nav.renderer',",
          "1706:           value: 'renderer',",
          "1707:           expand: false,",
          "1708:           children: [",
          "1709:             {",
          "1710:               label: 'app.aside.nav.api',",
          "1711:               locat: {",
          "1712:                 name: 'RendererAPI'",
          "1713:               }",
          "1714:             },",
          "1715:             {",
          "1716:               label: 'app.aside.nav.rendererFilter',",
          "1717:               locat: {",
          "1718:                 name: 'RendererFilter'",
          "1719:               }",
          "1720:             },",
          "1721:             {",
          "1722:               label: 'app.aside.nav.rendererDefault',",
          "1723:               locat: {",
          "1724:                 name: 'RendererDefault'",
          "1725:               }",
          "1726:             },",
          "1727:             {",
          "1728:               label: 'app.aside.nav.rendererEdit',",
          "1729:               locat: {",
          "1730:                 name: 'RendererEdit'",
          "1731:               }",
          "1732:             },",
          "1733:             {",
          "1734:               label: 'app.aside.nav.rendererExpand',",
          "1735:               locat: {",
          "1736:                 name: 'RendererExpand'",
          "1737:               }",
          "1738:             },",
          "1739:             {",
          "1740:               label: 'app.aside.nav.rendererToolbar',",
          "1741:               locat: {",
          "1742:                 name: 'RendererToolbar'",
          "1743:               }",
          "1744:             },",
          "1745:             {",
          "1746:               label: 'app.aside.nav.rendererForm',",
          "1747:               locat: {",
          "1748:                 name: 'RendererForm'",
          "1749:               }",
          "1750:             },",
          "1751:             {",
          "1752:               label: 'app.aside.nav.rendererEmpty',",
          "1753:               locat: {",
          "1754:                 name: 'RendererEmpty'",
          "1755:               }",
          "1756:             }",
          "1757:           ]",
          "1758:         },",
          "1759:         {",
          "1760:           label: 'app.aside.nav.interceptor',",
          "1761:           value: 'interceptor',",
          "1762:           expand: false,",
          "1763:           children: [",
          "1764:             {",
          "1765:               label: 'app.aside.nav.api',",
          "1766:               locat: {",
          "1767:                 name: 'InterceptorAPI'",
          "1768:               },",
          "1769:               keywords: ['interceptor']",
          "1770:             }",
          "1771:           ]",
          "1772:         },",
          "1773:         {",
          "1774:           label: 'app.aside.nav.api',",
          "1775:           value: 'api',",
          "1776:           expand: false,",
          "1777:           children: [",
          "1784:             {",
          "1785:               label: 'app.aside.nav.vxeTable',",
          "1786:               locat: {",
          "1787:                 name: 'VXEAPI',",
          "1788:                 params: {",
          "1789:                   name: 'table'",
          "1790:                 }",
          "1791:               }",
          "1792:             },",
          "1793:             {",
          "1794:               label: 'app.aside.nav.vxeTableColgroup',",
          "1795:               locat: {",
          "1796:                 name: 'VXEAPI',",
          "1797:                 params: {",
          "1798:                   name: 'colgroup'",
          "1799:                 }",
          "1800:               }",
          "1801:             },",
          "1802:             {",
          "1803:               label: 'app.aside.nav.vxeTableColumn',",
          "1804:               locat: {",
          "1805:                 name: 'VXEAPI',",
          "1806:                 params: {",
          "1807:                   name: 'column'",
          "1808:                 }",
          "1809:               }",
          "1810:             },",
          "1811:             {",
          "1812:               label: 'app.aside.nav.vxeGrid',",
          "1813:               locat: {",
          "1814:                 name: 'VXEAPI',",
          "1815:                 params: {",
          "1816:                   name: 'grid'",
          "1817:                 }",
          "1818:               }",
          "1819:             },",
          "1829:             {",
          "1830:               label: 'app.aside.nav.vxeToolbar',",
          "1831:               locat: {",
          "1832:                 name: 'VXEAPI',",
          "1833:                 params: {",
          "1834:                   name: 'toolbar'",
          "1835:                 }",
          "1836:               }",
          "1837:             },",
          "1838:             {",
          "1839:               label: 'app.aside.nav.vxePager',",
          "1840:               locat: {",
          "1841:                 name: 'VXEAPI',",
          "1842:                 params: {",
          "1843:                   name: 'pager'",
          "1844:                 }",
          "1845:               }",
          "1846:             },",
          "1847:             {",
          "1848:               label: 'app.aside.nav.vxeRadio',",
          "1849:               locat: {",
          "1850:                 name: 'VXEAPI',",
          "1851:                 params: {",
          "1852:                   name: 'radio'",
          "1853:                 }",
          "1854:               }",
          "1855:             },",
          "1856:             {",
          "1857:               label: 'app.aside.nav.vxeRadioGroup',",
          "1858:               locat: {",
          "1859:                 name: 'VXEAPI',",
          "1860:                 params: {",
          "1861:                   name: 'radio-group'",
          "1862:                 }",
          "1863:               }",
          "1864:             },",
          "1865:             {",
          "1866:               label: 'app.aside.nav.vxeRadioButton',",
          "1867:               locat: {",
          "1868:                 name: 'VXEAPI',",
          "1869:                 params: {",
          "1870:                   name: 'radio-button'",
          "1871:                 }",
          "1872:               }",
          "1873:             },",
          "1874:             {",
          "1875:               label: 'app.aside.nav.vxeCheckbox',",
          "1876:               locat: {",
          "1877:                 name: 'VXEAPI',",
          "1878:                 params: {",
          "1879:                   name: 'checkbox'",
          "1880:                 }",
          "1881:               }",
          "1882:             },",
          "1883:             {",
          "1884:               label: 'app.aside.nav.vxeCheckboxGroup',",
          "1885:               locat: {",
          "1886:                 name: 'VXEAPI',",
          "1887:                 params: {",
          "1888:                   name: 'checkbox-group'",
          "1889:                 }",
          "1890:               }",
          "1891:             },",
          "1892:             {",
          "1893:               label: 'app.aside.nav.vxeSwitch',",
          "1894:               locat: {",
          "1895:                 name: 'VXEAPI',",
          "1896:                 params: {",
          "1897:                   name: 'switch'",
          "1898:                 }",
          "1899:               }",
          "1900:             },",
          "1901:             {",
          "1902:               label: 'app.aside.nav.vxeInput',",
          "1903:               locat: {",
          "1904:                 name: 'VXEAPI',",
          "1905:                 params: {",
          "1906:                   name: 'input'",
          "1907:                 }",
          "1908:               }",
          "1909:             },",
          "1910:             {",
          "1911:               label: 'app.aside.nav.vxeSelect',",
          "1912:               locat: {",
          "1913:                 name: 'VXEAPI',",
          "1914:                 params: {",
          "1915:                   name: 'select'",
          "1916:                 }",
          "1917:               }",
          "1918:             },",
          "1919:             {",
          "1920:               label: 'app.aside.nav.vxeOptgroup',",
          "1921:               locat: {",
          "1922:                 name: 'VXEAPI',",
          "1923:                 params: {",
          "1924:                   name: 'optgroup'",
          "1925:                 }",
          "1926:               }",
          "1927:             },",
          "1928:             {",
          "1929:               label: 'app.aside.nav.vxeOption',",
          "1930:               locat: {",
          "1931:                 name: 'VXEAPI',",
          "1932:                 params: {",
          "1933:                   name: 'option'",
          "1934:                 }",
          "1935:               }",
          "1936:             },",
          "1937:             {",
          "1938:               label: 'app.aside.nav.vxeTextarea',",
          "1939:               locat: {",
          "1940:                 name: 'VXEAPI',",
          "1941:                 params: {",
          "1942:                   name: 'textarea'",
          "1943:                 }",
          "1944:               }",
          "1945:             },",
          "1946:             {",
          "1947:               label: 'app.aside.nav.vxeButton',",
          "1948:               locat: {",
          "1949:                 name: 'VXEAPI',",
          "1950:                 params: {",
          "1951:                   name: 'button'",
          "1952:                 }",
          "1953:               }",
          "1954:             },",
          "1955:             {",
          "1956:               label: 'app.aside.nav.vxeModal',",
          "1957:               locat: {",
          "1958:                 name: 'VXEAPI',",
          "1959:                 params: {",
          "1960:                   name: 'modal'",
          "1961:                 }",
          "1962:               }",
          "1963:             },",
          "1973:             {",
          "1974:               label: 'app.aside.nav.vxeForm',",
          "1975:               locat: {",
          "1976:                 name: 'VXEAPI',",
          "1977:                 params: {",
          "1978:                   name: 'form'",
          "1979:                 }",
          "1980:               }",
          "1981:             },",
          "1982:             {",
          "1983:               label: 'app.aside.nav.vxeFormGather',",
          "1984:               locat: {",
          "1985:                 name: 'VXEAPI',",
          "1986:                 params: {",
          "1987:                   name: 'form-gather'",
          "1988:                 }",
          "1989:               }",
          "1990:             },",
          "1991:             {",
          "1992:               label: 'app.aside.nav.vxeFormItem',",
          "1993:               locat: {",
          "1994:                 name: 'VXEAPI',",
          "1995:                 params: {",
          "1996:                   name: 'form-item'",
          "1997:                 }",
          "1998:               }",
          "1999:             },",
          "2000:             {",
          "2001:               label: 'app.aside.nav.vxeList',",
          "2002:               locat: {",
          "2003:                 name: 'VXEAPI',",
          "2004:                 params: {",
          "2005:                   name: 'list'",
          "2006:                 }",
          "2007:               }",
          "2008:             },",
          "2009:             {",
          "2010:               label: 'app.aside.nav.vxePulldown',",
          "2011:               locat: {",
          "2012:                 name: 'VXEAPI',",
          "2013:                 params: {",
          "2014:                   name: 'pulldown'",
          "2015:                 }",
          "2016:               }",
          "2017:             }",
          "2018:           ]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/export/src/mixin.js||packages/export/src/mixin.js": [
          "File: packages/export/src/mixin.js -> packages/export/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "78: function getLabelData ($xetable, opts, columns, datas) {",
          "79:   const { isAllExpand, mode } = opts",
          "81:   if (!htmlCellElem) {",
          "82:     htmlCellElem = document.createElement('div')",
          "83:   }",
          "",
          "[Removed Lines]",
          "80:   const { treeConfig, treeOpts, radioOpts, checkboxOpts } = $xetable",
          "",
          "[Added Lines]",
          "80:   const { treeConfig, treeOpts, radioOpts, checkboxOpts, columnOpts } = $xetable",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:         columns.forEach((column, $columnIndex) => {",
          "100:           let cellValue = ''",
          "101:           const renderOpts = column.editRender || column.cellRender",
          "104:             const compConf = VXETable.renderer.get(renderOpts.name)",
          "105:             if (compConf) {",
          "107:             }",
          "108:           }",
          "111:           } else {",
          "112:             switch (column.type) {",
          "113:               case 'seq':",
          "",
          "[Removed Lines]",
          "102:           let exportLabelMethod = column.exportMethod",
          "103:           if (!exportLabelMethod && renderOpts && renderOpts.name) {",
          "106:               exportLabelMethod = compConf.exportMethod || compConf.cellExportMethod",
          "109:           if (exportLabelMethod) {",
          "110:             cellValue = exportLabelMethod({ $table: $xetable, row, column, options: opts })",
          "",
          "[Added Lines]",
          "102:           let bodyExportMethod = column.exportMethod",
          "103:           if (!bodyExportMethod && renderOpts && renderOpts.name) {",
          "106:               bodyExportMethod = compConf.exportMethod || compConf.cellExportMethod",
          "109:           if (!bodyExportMethod) {",
          "110:             bodyExportMethod = columnOpts.exportMethod",
          "111:           }",
          "112:           if (bodyExportMethod) {",
          "113:             cellValue = bodyExportMethod({ $table: $xetable, row, column, options: opts })",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "216: }",
          "218: function getHeaderTitle ($xetable, opts, column) {",
          "221: }",
          "223: function getFooterCellValue ($xetable, opts, items, column) {",
          "224:   const renderOpts = column.editRender || column.cellRender",
          "227:     const compConf = VXETable.renderer.get(renderOpts.name)",
          "228:     if (compConf) {",
          "230:     }",
          "231:   }",
          "232:   const _columnIndex = $xetable.getVTColumnIndex(column)",
          "234:   return cellValue",
          "235: }",
          "",
          "[Removed Lines]",
          "219:   const { headerExportMethod } = column",
          "220:   return headerExportMethod ? headerExportMethod({ column, $table: $xetable }) : ((opts.original ? column.property : column.getTitle()) || '')",
          "225:   let exportLabelMethod = column.footerExportMethod",
          "226:   if (!exportLabelMethod && renderOpts && renderOpts.name) {",
          "229:       exportLabelMethod = compConf.footerExportMethod || compConf.footerCellExportMethod",
          "233:   const cellValue = exportLabelMethod ? exportLabelMethod({ $table: $xetable, items, itemIndex: _columnIndex, _columnIndex, column, options: opts }) : XEUtils.toValueString(items[_columnIndex])",
          "",
          "[Added Lines]",
          "222:   const { columnOpts } = $xetable",
          "223:   const headExportMethod = column.headerExportMethod || columnOpts.headerExportMethod",
          "224:   return headExportMethod ? headExportMethod({ column, options: opts, $table: $xetable }) : ((opts.original ? column.property : column.getTitle()) || '')",
          "228:   const { columnOpts } = $xetable",
          "230:   let footLabelMethod = column.footerExportMethod",
          "231:   if (!footLabelMethod && renderOpts && renderOpts.name) {",
          "234:       footLabelMethod = compConf.footerExportMethod || compConf.footerCellExportMethod",
          "237:   if (!footLabelMethod) {",
          "238:     footLabelMethod = columnOpts.footerExportMethod",
          "239:   }",
          "241:   const cellValue = footLabelMethod ? footLabelMethod({ $table: $xetable, items, itemIndex: _columnIndex, _columnIndex, column, options: opts }) : XEUtils.toValueString(items[_columnIndex])",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "414:     this.tableSynchData = datas",
          "416:     if (keepSource) {",
          "418:     }",
          "419:     if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "420:       if (sYLoad) {",
          "",
          "[Removed Lines]",
          "417:       this.tableSourceData = XEUtils.clone(fullData, true)",
          "",
          "[Added Lines]",
          "417:       this.cacheSourceMap(fullData)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "592:   cacheRowMap (source) {",
          "595:     const rowkey = getRowkey(this)",
          "596:     const isLazy = treeConfig && treeOpts.lazy",
          "597:     const handleCache = (row, index, items, path, parent, nodes) => {",
          "",
          "[Removed Lines]",
          "593:     const { treeConfig, treeOpts, tableFullData, fullDataRowMap, fullAllDataRowMap, tableFullTreeData, tableSourceData } = this",
          "594:     let { fullDataRowIdData, fullAllDataRowIdData, sourceDataRowIdData } = this",
          "",
          "[Added Lines]",
          "593:     const { treeConfig, treeOpts, tableFullData, fullDataRowMap, fullAllDataRowMap, tableFullTreeData } = this",
          "594:     let { fullDataRowIdData, fullAllDataRowIdData } = this",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "618:       fullDataRowMap.clear()",
          "619:     }",
          "620:     fullAllDataRowIdData = this.fullAllDataRowIdData = {}",
          "622:     fullAllDataRowMap.clear()",
          "623:     if (treeConfig) {",
          "624:       XEUtils.eachTree(tableFullTreeData, handleCache, treeOpts)",
          "625:     } else {",
          "626:       tableFullData.forEach(handleCache)",
          "627:     }",
          "629:     const handleSourceRow = (row) => {",
          "630:       let rowid = getRowid(this, row)",
          "631:       if (eqEmptyValue(rowid)) {",
          "",
          "[Removed Lines]",
          "621:     sourceDataRowIdData = this.sourceDataRowIdData = {}",
          "",
          "[Added Lines]",
          "627:   },",
          "628:   cacheSourceMap (fullData) {",
          "629:     let { treeConfig, treeOpts, sourceDataRowIdData } = this",
          "630:     const sourceData = XEUtils.clone(fullData, true)",
          "631:     const rowkey = getRowkey(this)",
          "632:     sourceDataRowIdData = this.sourceDataRowIdData = {}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "639:     }",
          "641:     if (treeConfig && !treeOpts.transform) {",
          "643:     } else {",
          "645:     }",
          "646:   },",
          "647:   loadTreeChildren (row, childRecords) {",
          "648:     const { keepSource, tableSourceData, treeOpts, fullDataRowIdData, fullDataRowMap, fullAllDataRowMap, fullAllDataRowIdData } = this",
          "",
          "[Removed Lines]",
          "642:       XEUtils.eachTree(tableSourceData, handleSourceRow, treeOpts)",
          "644:       tableSourceData.forEach(handleSourceRow)",
          "",
          "[Added Lines]",
          "646:       XEUtils.eachTree(sourceData, handleSourceRow, treeOpts)",
          "648:       sourceData.forEach(handleSourceRow)",
          "650:     this.tableSourceData = sourceData",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1082:   isUpdateByRow (row, field) {",
          "1084:     if (keepSource) {",
          "1086:       const rowid = getRowid(this, row)",
          "1088:       if (!fullDataRowIdData[rowid]) {",
          "1089:         return false",
          "1090:       }",
          "1103:         if (arguments.length > 1) {",
          "1104:           return !eqCellValue(oRow, row, field)",
          "1105:         }",
          "1106:         for (let index = 0, len = tableFullColumn.length; index < len; index++) {",
          "1108:           if (property && !eqCellValue(oRow, row, property)) {",
          "1109:             return true",
          "1110:           }",
          "",
          "[Removed Lines]",
          "1083:     const { tableFullColumn, keepSource, treeConfig, treeOpts, tableSourceData, fullDataRowIdData } = this",
          "1085:       let oRow, property",
          "1091:       if (treeConfig) {",
          "1092:         const children = treeOpts.children",
          "1093:         const matchObj = XEUtils.findTree(tableSourceData, item => rowid === getRowid(this, item), treeOpts)",
          "1094:         row = Object.assign({}, row, { [children]: null })",
          "1095:         if (matchObj) {",
          "1096:           oRow = Object.assign({}, matchObj.item, { [children]: null })",
          "1097:         }",
          "1098:       } else {",
          "1099:         const oRowIndex = fullDataRowIdData[rowid].index",
          "1100:         oRow = tableSourceData[oRowIndex]",
          "1101:       }",
          "1102:       if (oRow) {",
          "1107:           property = tableFullColumn[index].field",
          "",
          "[Added Lines]",
          "1088:     const { tableFullColumn, keepSource, sourceDataRowIdData, fullDataRowIdData } = this",
          "1095:       const oldRest = sourceDataRowIdData[rowid]",
          "1096:       if (oldRest) {",
          "1097:         const oRow = oldRest.row",
          "1102:           const property = tableFullColumn[index].field",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3807:       if (!remote || (firstSortColumn && firstSortColumn.remoteSort)) {",
          "3808:         this.handleTableData(true)",
          "3809:       }",
          "3811:     }",
          "3812:     return this.$nextTick()",
          "3813:   },",
          "",
          "[Removed Lines]",
          "3810:       return this.$nextTick().then(this.updateStyle)",
          "",
          "[Added Lines]",
          "3805:       return this.$nextTick().then(() => {",
          "3806:         this.updateCellAreas()",
          "3807:         return this.updateStyle()",
          "3808:       })",
          "",
          "---------------"
        ],
        "types/export.d.ts||types/export.d.ts": [
          "File: types/export.d.ts -> types/export.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "232: export interface ColumnExportHeaderRenderParams extends GridRenderParams {",
          "233:   column: ColumnInfo;",
          "234: }",
          "236: export interface ColumnExportFooterRenderParams extends GridRenderParams {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234:   options: ExportParams;",
          "",
          "---------------"
        ],
        "types/table.d.ts||types/table.d.ts": [
          "File: types/table.d.ts -> types/table.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1250:   width?: number",
          "1251:   minWidth?: number",
          "1252:   maxWidth?: number",
          "1253: }",
          "1254: export type ColumnDefaultConfig = TableColumnConfig",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1253:   headerExportMethod?(params: any): string | number",
          "",
          "---------------"
        ]
      }
    }
  ]
}