{
  "cve_id": "CVE-2021-26291",
  "cve_desc": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
  "repo": "apache/maven",
  "patch_hash": "fa79cb22e456cc65522b5bab8c4240fe08c5775f",
  "patch_info": {
    "commit_hash": "fa79cb22e456cc65522b5bab8c4240fe08c5775f",
    "repo": "apache/maven",
    "commit_url": "https://github.com/apache/maven/commit/fa79cb22e456cc65522b5bab8c4240fe08c5775f",
    "files": [
      "maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java",
      "maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java"
    ],
    "message": "[MNG-7116] add support for mirrorOf external:http:*",
    "before_after_code_files": [
      "maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java||maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java",
      "maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java||maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java"
    ]
  },
  "patch_diff": {
    "maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java||maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java": [
      "File: maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java -> maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "42:     private static final String EXTERNAL_WILDCARD = \"external:*\";",
      "44:     public Mirror getMirror( ArtifactRepository repository, List<Mirror> mirrors )",
      "45:     {",
      "46:         String repoId = repository.getId();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "44:     private static final String EXTERNAL_HTTP_WILDCARD = \"external:http:*\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "115:                     result = true;",
      "117:                 }",
      "118:                 else if ( WILDCARD.equals( repo ) )",
      "119:                 {",
      "120:                     result = true;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "126:                 else if ( EXTERNAL_HTTP_WILDCARD.equals( repo ) && isExternalHttpRepo( originalRepository ) )",
      "127:                 {",
      "128:                     result = true;",
      "130:                 }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "136:         try",
      "137:         {",
      "138:             URL url = new URL( originalRepository.getUrl() );",
      "141:         }",
      "142:         catch ( MalformedURLException e )",
      "143:         {",
      "",
      "[Removed Lines]",
      "139:             return !( url.getHost().equals( \"localhost\" ) || url.getHost().equals( \"127.0.0.1\" )",
      "140:                             || url.getProtocol().equals( \"file\" ) );",
      "",
      "[Added Lines]",
      "152:             return !( isLocal( url.getHost() ) || url.getProtocol().equals( \"file\" ) );",
      "153:         }",
      "154:         catch ( MalformedURLException e )",
      "155:         {",
      "157:             return false;",
      "158:         }",
      "159:     }",
      "161:     private static boolean isLocal( String host )",
      "162:     {",
      "163:         return \"localhost\".equals( host ) || \"127.0.0.1\".equals( host );",
      "164:     }",
      "172:     static boolean isExternalHttpRepo( ArtifactRepository originalRepository )",
      "173:     {",
      "174:         try",
      "175:         {",
      "176:             URL url = new URL( originalRepository.getUrl() );",
      "177:             return ( \"http\".equalsIgnoreCase( url.getProtocol() ) || \"dav\".equalsIgnoreCase( url.getProtocol() )",
      "178:                 || \"dav:http\".equalsIgnoreCase( url.getProtocol() )",
      "179:                 || \"dav+http\".equalsIgnoreCase( url.getProtocol() ) ) && !isLocal( url.getHost() );",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "146:         }",
      "147:     }",
      "150:     {",
      "151:         return matchesLayout( RepositoryUtils.getLayout( repository ), mirror.getMirrorOfLayouts() );",
      "152:     }",
      "",
      "[Removed Lines]",
      "149:     static boolean matchesLayout( ArtifactRepository repository, Mirror mirror )",
      "",
      "[Added Lines]",
      "188:    static boolean matchesLayout( ArtifactRepository repository, Mirror mirror )",
      "",
      "---------------"
    ],
    "maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java||maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java": [
      "File: maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java -> maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "711:     private static final String EXTERNAL_WILDCARD = \"external:*\";",
      "713:     public static Mirror getMirror( ArtifactRepository repository, List<Mirror> mirrors )",
      "714:     {",
      "715:         String repoId = repository.getId();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "713:     private static final String EXTERNAL_HTTP_WILDCARD = \"external:http:*\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "782:                     result = true;",
      "784:                 }",
      "785:                 else if ( WILDCARD.equals( repo ) )",
      "786:                 {",
      "787:                     result = true;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "794:                 else if ( EXTERNAL_HTTP_WILDCARD.equals( repo ) && isExternalHttpRepo( originalRepository ) )",
      "795:                 {",
      "796:                     result = true;",
      "798:                 }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "803:         try",
      "804:         {",
      "805:             URL url = new URL( originalRepository.getUrl() );",
      "808:         }",
      "809:         catch ( MalformedURLException e )",
      "810:         {",
      "",
      "[Removed Lines]",
      "806:             return !( url.getHost().equals( \"localhost\" ) || url.getHost().equals( \"127.0.0.1\" )",
      "807:                             || url.getProtocol().equals( \"file\" ) );",
      "",
      "[Added Lines]",
      "820:             return !( isLocal( url.getHost() ) || url.getProtocol().equals( \"file\" ) );",
      "821:         }",
      "822:         catch ( MalformedURLException e )",
      "823:         {",
      "825:             return false;",
      "826:         }",
      "827:     }",
      "829:     private static boolean isLocal( String host )",
      "830:     {",
      "831:         return \"localhost\".equals( host ) || \"127.0.0.1\".equals( host );",
      "832:     }",
      "840:     static boolean isExternalHttpRepo( ArtifactRepository originalRepository )",
      "841:     {",
      "842:         try",
      "843:         {",
      "844:             URL url = new URL( originalRepository.getUrl() );",
      "845:             return ( \"http\".equalsIgnoreCase( url.getProtocol() ) || \"dav\".equalsIgnoreCase( url.getProtocol() )",
      "846:                 || \"dav:http\".equalsIgnoreCase( url.getProtocol() )",
      "847:                 || \"dav+http\".equalsIgnoreCase( url.getProtocol() ) ) && !isLocal( url.getHost() );",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ce27f0ec6184cdee40609817a2796c768d0df261",
      "candidate_info": {
        "commit_hash": "ce27f0ec6184cdee40609817a2796c768d0df261",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/ce27f0ec6184cdee40609817a2796c768d0df261",
        "files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java",
          "maven-artifact/src/test/java/org/apache/maven/artifact/versioning/ComparableVersionTest.java"
        ],
        "message": "[MNG-6964] Maven version sorting is internally inconsistent.",
        "before_after_code_files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java||maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java",
          "maven-artifact/src/test/java/org/apache/maven/artifact/versioning/ComparableVersionTest.java||maven-artifact/src/test/java/org/apache/maven/artifact/versioning/ComparableVersionTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java||maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java": [
          "File: maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java -> maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "530:                 {",
          "531:                     return 0; // 1-0 = 1- (normalize) = 1",
          "532:                 }",
          "535:             }",
          "536:             switch ( item.getType() )",
          "537:             {",
          "",
          "[Removed Lines]",
          "533:                 Item first = get( 0 );",
          "534:                 return first.compareTo( null );",
          "",
          "[Added Lines]",
          "534:                 for ( Item i : this )",
          "535:                 {",
          "536:                     int result = i.compareTo( null );",
          "537:                     if ( result != 0 )",
          "538:                     {",
          "539:                         return result;",
          "540:                     }",
          "541:                 }",
          "542:                 return 0;",
          "",
          "---------------"
        ],
        "maven-artifact/src/test/java/org/apache/maven/artifact/versioning/ComparableVersionTest.java||maven-artifact/src/test/java/org/apache/maven/artifact/versioning/ComparableVersionTest.java": [
          "File: maven-artifact/src/test/java/org/apache/maven/artifact/versioning/ComparableVersionTest.java -> maven-artifact/src/test/java/org/apache/maven/artifact/versioning/ComparableVersionTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "295:         checkVersionsArrayEqual( arr );",
          "296:     }",
          "298:     public void testLocaleIndependent()",
          "299:     {",
          "300:         Locale orig = Locale.getDefault();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:     public void testMng6964()",
          "303:     {",
          "304:         String a = \"1-0.alpha\";",
          "305:         String b = \"1-0.beta\";",
          "306:         String c = \"1\";",
          "308:         checkVersionsOrder( a, c ); // Now a < c, but before MNG-6964 they were equal",
          "309:         checkVersionsOrder( b, c ); // Now b < c, but before MNG-6964 they were equal",
          "310:         checkVersionsOrder( a, b ); // Should still be true",
          "311:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a2392f15e3cbdc7a7c8a453a4cbed314947a036",
      "candidate_info": {
        "commit_hash": "2a2392f15e3cbdc7a7c8a453a4cbed314947a036",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/2a2392f15e3cbdc7a7c8a453a4cbed314947a036",
        "files": [
          "maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java",
          "maven-core/src/test/projects/lifecycle-executor/project-with-inheritance/pom.xml",
          "maven-core/src/test/projects/plugin-manager/project-with-inheritance/pom.xml",
          "maven-core/src/test/resources-project-builder/dependency-inheritance/pom.xml",
          "maven-core/src/test/resources-project-builder/dependency-inheritance/sub/pom.xml",
          "maven-core/src/test/resources-project-builder/micromailer/pom.xml",
          "maven-core/src/test/resources/org/apache/maven/lifecycle/pom.xml",
          "maven-embedder/src/examples/simple-project/pom.xml"
        ],
        "message": "[MNG-6873] Align JUnit version to 4.13\n\nCloses #331",
        "before_after_code_files": [
          "maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java||maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java||maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java -> maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "975:     {",
          "976:         PomTestWrapper pom = buildPom( \"dependency-inheritance/sub\" );",
          "977:         assertEquals( 1, ( (List<?>) pom.getValue( \"dependencies\" ) ).size() );",
          "979:     }",
          "",
          "[Removed Lines]",
          "978:         assertEquals( \"4.4\", pom.getValue( \"dependencies[1]/version\" ) );",
          "",
          "[Added Lines]",
          "978:         assertEquals( \"4.13\", pom.getValue( \"dependencies[1]/version\" ) );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a118d6e244e17cf27654ce6e17b1d3140c0967e",
      "candidate_info": {
        "commit_hash": "0a118d6e244e17cf27654ce6e17b1d3140c0967e",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/0a118d6e244e17cf27654ce6e17b1d3140c0967e",
        "files": [
          "maven-model/src/main/mdo/maven.mdo"
        ],
        "message": "[MNG-7408] explain Maven 3 reporting plugin version selection",
        "before_after_code_files": [
          "maven-model/src/main/mdo/maven.mdo||maven-model/src/main/mdo/maven.mdo"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-model/src/main/mdo/maven.mdo||maven-model/src/main/mdo/maven.mdo": [
          "File: maven-model/src/main/mdo/maven.mdo -> maven-model/src/main/mdo/maven.mdo",
          "--- Hunk 1 ---",
          "[Context before]",
          "2835:         <field>",
          "2836:           <name>version</name>",
          "2837:           <version>4.0.0+</version>",
          "2839:           <type>String</type>",
          "2840:         </field>",
          "2841:         <field>",
          "",
          "[Removed Lines]",
          "2838:           <description>The version of the reporting plugin to be used.</description>",
          "",
          "[Added Lines]",
          "2838:           <description>",
          "2839:             <![CDATA[",
          "2840:             The version of the reporting plugin to be used. Starting with Maven 3, if no version is defined explicitely,",
          "2841:             version is searched in <code>build/plugins</code> then in <code>build/pluginManagement</code>.",
          "2842:             ]]>",
          "2843:           </description>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4ad077ef5c440d86f3c9110e96ae00cf7d246bf",
      "candidate_info": {
        "commit_hash": "d4ad077ef5c440d86f3c9110e96ae00cf7d246bf",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/d4ad077ef5c440d86f3c9110e96ae00cf7d246bf",
        "files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java",
          "maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java",
          "maven-compat/src/test/java/org/apache/maven/artifact/resolver/ArtifactResolutionExceptionTest.java",
          "maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java",
          "maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java",
          "maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/logging/impl/UnsupportedSlf4jBindingConfiguration.java",
          "maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java"
        ],
        "message": "[MNG-6816] Prefer System.lineSeparator() over system properties\n\nThis closes #300",
        "before_after_code_files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java||maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java",
          "maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java||maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java",
          "maven-compat/src/test/java/org/apache/maven/artifact/resolver/ArtifactResolutionExceptionTest.java||maven-compat/src/test/java/org/apache/maven/artifact/resolver/ArtifactResolutionExceptionTest.java",
          "maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java||maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java",
          "maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java||maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java",
          "maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java||maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java||maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
          "maven-embedder/src/main/java/org/apache/maven/cli/logging/impl/UnsupportedSlf4jBindingConfiguration.java||maven-embedder/src/main/java/org/apache/maven/cli/logging/impl/UnsupportedSlf4jBindingConfiguration.java",
          "maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java||maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java||maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java": [
          "File: maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java -> maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     private final String path;",
          "57:     @SuppressWarnings( \"checkstyle:parameternumber\" )",
          "58:     protected AbstractArtifactResolutionException( String message,",
          "",
          "[Removed Lines]",
          "55:     static final String LS = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "55:     static final String LS = System.lineSeparator();",
          "",
          "---------------"
        ],
        "maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java||maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java": [
          "File: maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java -> maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: {",
          "36:     private List<String> messages;",
          "",
          "[Removed Lines]",
          "33:     private static final String NEWLINE = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "33:     private static final String LS = System.lineSeparator();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:         for ( int i = 0; i < messages.size(); i++ )",
          "87:         {",
          "88:             message.append( indentation ).append( '[' ).append( i ).append( \"]  \" ).append( messages.get( i ) ).append(",
          "90:         }",
          "92:         return message.toString();",
          "",
          "[Removed Lines]",
          "89:                 NEWLINE );",
          "",
          "[Added Lines]",
          "89:                 LS );",
          "",
          "---------------"
        ],
        "maven-compat/src/test/java/org/apache/maven/artifact/resolver/ArtifactResolutionExceptionTest.java||maven-compat/src/test/java/org/apache/maven/artifact/resolver/ArtifactResolutionExceptionTest.java": [
          "File: maven-compat/src/test/java/org/apache/maven/artifact/resolver/ArtifactResolutionExceptionTest.java -> maven-compat/src/test/java/org/apache/maven/artifact/resolver/ArtifactResolutionExceptionTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: public class ArtifactResolutionExceptionTest",
          "33:     extends TestCase",
          "34: {",
          "37:     public void testMissingArtifactMessageFormat()",
          "38:     {",
          "",
          "[Removed Lines]",
          "35:     private static final String LS = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "35:     private static final String LS = System.lineSeparator();",
          "",
          "---------------"
        ],
        "maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java||maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java -> maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: public class PluginParameterExpressionEvaluatorTest",
          "54:     extends AbstractCoreMavenComponentTestCase",
          "55: {",
          "58:     private RepositorySystem factory;",
          "",
          "[Removed Lines]",
          "56:     private static final String FS = System.getProperty( \"file.separator\" );",
          "",
          "[Added Lines]",
          "56:     private static final String FS = File.separator;",
          "",
          "---------------"
        ],
        "maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java||maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java -> maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: public class DefaultToolchainsBuilderTest",
          "49: {",
          "52:     @Spy",
          "53:     private DefaultToolchainsReader toolchainsReader;",
          "",
          "[Removed Lines]",
          "50:     private static final String LS = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "50:     private static final String LS = System.lineSeparator();",
          "",
          "---------------"
        ],
        "maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java||maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java -> maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: public class ToolchainsBuildingExceptionTest",
          "32: {",
          "35:     @Test",
          "36:     public void testNoProblems()",
          "",
          "[Removed Lines]",
          "33:     private static final String LS = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "33:     private static final String LS = System.lineSeparator();",
          "",
          "---------------"
        ],
        "maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java||maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java": [
          "File: maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java -> maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     public static String showVersion()",
          "57:     {",
          "59:         Properties properties = getBuildProperties();",
          "60:         StringBuilder version = new StringBuilder( 256 );",
          "61:         version.append( buffer().strong( createMavenVersionString( properties ) ) ).append( ls );",
          "",
          "[Removed Lines]",
          "58:         final String ls = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "58:         final String ls = System.lineSeparator();",
          "",
          "---------------"
        ],
        "maven-embedder/src/main/java/org/apache/maven/cli/logging/impl/UnsupportedSlf4jBindingConfiguration.java||maven-embedder/src/main/java/org/apache/maven/cli/logging/impl/UnsupportedSlf4jBindingConfiguration.java": [
          "File: maven-embedder/src/main/java/org/apache/maven/cli/logging/impl/UnsupportedSlf4jBindingConfiguration.java -> maven-embedder/src/main/java/org/apache/maven/cli/logging/impl/UnsupportedSlf4jBindingConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:         logger.warn( \"The SLF4J binding actually used is not supported by Maven: {}\", slf4jBinding );",
          "55:         logger.warn( \"Maven supported bindings are:\" );",
          "59:         for ( Map.Entry<URL, Set<Object>> entry : supported.entrySet() )",
          "60:         {",
          "",
          "[Removed Lines]",
          "57:         String ls = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "57:         String ls = System.lineSeparator();",
          "",
          "---------------"
        ],
        "maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java||maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java": [
          "File: maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java -> maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: public class CLIManagerDocumentationTest",
          "40:     extends TestCase",
          "41: {",
          "44:     private static class OptionComparator",
          "45:         implements Comparator<Option>",
          "",
          "[Removed Lines]",
          "42:     private final static String LS = System.getProperty( \"line.separator\" );",
          "",
          "[Added Lines]",
          "42:     private final static String LS = System.lineSeparator();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "453c17371319e985d3a6caba84ae240bb33d6870",
      "candidate_info": {
        "commit_hash": "453c17371319e985d3a6caba84ae240bb33d6870",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/453c17371319e985d3a6caba84ae240bb33d6870",
        "files": [
          "apache-maven/src/main/appended-resources/licenses/unrecognized-javax.annotation-api-1.2.txt",
          "apache-maven/src/main/appended-resources/licenses/unrecognized-javax.annotation-api-1.3.2.txt",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenAetherModule.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java",
          "pom.xml"
        ],
        "message": "[MNG-7247] Upgrade Maven Resolver to 1.7.2",
        "before_after_code_files": [
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenAetherModule.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenAetherModule.java",
          "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import org.eclipse.aether.SyncContext;",
          "29: import org.eclipse.aether.impl.MetadataResolver;",
          "30: import org.eclipse.aether.impl.RepositoryEventDispatcher;",
          "32: import org.eclipse.aether.impl.VersionRangeResolver;",
          "33: import org.eclipse.aether.metadata.DefaultMetadata;",
          "34: import org.eclipse.aether.metadata.Metadata;",
          "",
          "[Removed Lines]",
          "31: import org.eclipse.aether.impl.SyncContextFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: import org.eclipse.aether.resolution.VersionRangeResult;",
          "43: import org.eclipse.aether.spi.locator.Service;",
          "44: import org.eclipse.aether.spi.locator.ServiceLocator;",
          "45: import org.eclipse.aether.util.version.GenericVersionScheme;",
          "46: import org.eclipse.aether.version.InvalidVersionSpecificationException;",
          "47: import org.eclipse.aether.version.Version;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: import org.eclipse.aether.spi.synccontext.SyncContextFactory;",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: import org.eclipse.aether.artifact.Artifact;",
          "34: import org.eclipse.aether.impl.MetadataResolver;",
          "35: import org.eclipse.aether.impl.RepositoryEventDispatcher;",
          "37: import org.eclipse.aether.impl.VersionResolver;",
          "38: import org.eclipse.aether.metadata.DefaultMetadata;",
          "39: import org.eclipse.aether.metadata.Metadata;",
          "",
          "[Removed Lines]",
          "36: import org.eclipse.aether.impl.SyncContextFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: import org.eclipse.aether.resolution.VersionResult;",
          "50: import org.eclipse.aether.spi.locator.Service;",
          "51: import org.eclipse.aether.spi.locator.ServiceLocator;",
          "52: import org.eclipse.aether.util.ConfigUtils;",
          "54: import javax.inject.Inject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: import org.eclipse.aether.spi.synccontext.SyncContextFactory;",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenAetherModule.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenAetherModule.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenAetherModule.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenAetherModule.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java||maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java": [
          "File: maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java -> maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     public static DefaultServiceLocator newServiceLocator()",
          "73:     {",
          "74:         DefaultServiceLocator locator = new DefaultServiceLocator();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     @Deprecated",
          "",
          "---------------"
        ]
      }
    }
  ]
}