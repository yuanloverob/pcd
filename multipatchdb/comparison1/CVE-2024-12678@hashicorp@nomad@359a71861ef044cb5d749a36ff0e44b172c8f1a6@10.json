{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5416fd5ce3187dd8bc5223aa5ae7b00a23fe4243",
      "candidate_info": {
        "commit_hash": "5416fd5ce3187dd8bc5223aa5ae7b00a23fe4243",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/5416fd5ce3187dd8bc5223aa5ae7b00a23fe4243",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "backport of commit 655fc7534c5188e35242ce7f3fe8c283844810a7 (#24474)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:  github.com/hashicorp/go-plugin v1.6.2",
          "70:  github.com/hashicorp/go-secure-stdlib/listenerutil v0.1.9",
          "71:  github.com/hashicorp/go-secure-stdlib/strutil v0.1.2",
          "73:  github.com/hashicorp/go-sockaddr v1.0.6",
          "74:  github.com/hashicorp/go-syslog v1.0.0",
          "75:  github.com/hashicorp/go-uuid v1.0.3",
          "",
          "[Removed Lines]",
          "72:  github.com/hashicorp/go-set/v3 v3.0.0-alpha.1",
          "",
          "[Added Lines]",
          "72:  github.com/hashicorp/go-set/v3 v3.0.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "712: github.com/hashicorp/go-secure-stdlib/tlsutil v0.1.3/go.mod h1:LWq2Sy8UoKKuK4lFuCNWSjJj57MhNNf2zzBWMtkAIX4=",
          "713: github.com/hashicorp/go-set/v2 v2.1.0 h1:iERPCQWks+I+4bTgy0CT2myZsCqNgBg79ZHqwniohXo=",
          "714: github.com/hashicorp/go-set/v2 v2.1.0/go.mod h1:6q4nh8UCVZODn2tJ5RbJi8+ki7pjZBsAEYGt6yaGeTo=",
          "717: github.com/hashicorp/go-sockaddr v1.0.2/go.mod h1:rB4wwRAUzs07qva3c5SdrY/NEtAUjGlgmH/UkBUC97A=",
          "718: github.com/hashicorp/go-sockaddr v1.0.6 h1:RSG8rKU28VTUTvEKghe5gIhIQpv8evvNpnDEyqO4u9I=",
          "719: github.com/hashicorp/go-sockaddr v1.0.6/go.mod h1:uoUUmtwU7n9Dv3O4SNLeFvg0SxQ3lyjsj6+CCykpaxI=",
          "",
          "[Removed Lines]",
          "715: github.com/hashicorp/go-set/v3 v3.0.0-alpha.1 h1:dPUtuqKJGgxtF7YO42oE+NdUONXi5nfLMKH2NpBffIM=",
          "716: github.com/hashicorp/go-set/v3 v3.0.0-alpha.1/go.mod h1:7bJRgsF3EL3AtRTzcKXdjAFbYGSef+1gHXhglGGO52k=",
          "",
          "[Added Lines]",
          "715: github.com/hashicorp/go-set/v3 v3.0.0 h1:CaJBQvQCOWoftrBcDt7Nwgo0kdpmrKxar/x2o6pV9JA=",
          "716: github.com/hashicorp/go-set/v3 v3.0.0/go.mod h1:IEghM2MpE5IaNvL+D7X480dfNtxjRXZ6VMpK3C8s2ok=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "18c802e15e1a25e96646a1cf7bd95cb432c04bdb",
      "candidate_info": {
        "commit_hash": "18c802e15e1a25e96646a1cf7bd95cb432c04bdb",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/18c802e15e1a25e96646a1cf7bd95cb432c04bdb",
        "files": [
          ".changelog/24215.txt",
          "drivers/docker/driver_test.go",
          "drivers/docker/utils.go",
          "e2e/docker/doc.go",
          "e2e/docker/docker_test.go",
          "e2e/docker/input/auth_basic.hcl",
          "e2e/docker/input/auth_helper.hcl",
          "e2e/docker/input/auth_static.hcl",
          "e2e/docker/input/redis.hcl",
          "e2e/docker/input/registry-auths.hcl",
          "e2e/docker_registry/registry.hcl",
          "e2e/e2e_test.go",
          "e2e/podman/podman_test.go",
          "e2e/terraform/etc/nomad.d/client-linux.hcl"
        ],
        "message": "backport of commit f9cbaaf6c7e192ab7a0c5a8444cc17ef99ddd853 (#24230)\n\nCo-authored-by: Piotr Kazmierczak <470696+pkazmierczak@users.noreply.github.com>",
        "before_after_code_files": [
          "drivers/docker/driver_test.go||drivers/docker/driver_test.go",
          "drivers/docker/utils.go||drivers/docker/utils.go",
          "e2e/docker/doc.go||e2e/docker/doc.go",
          "e2e/docker/docker_test.go||e2e/docker/docker_test.go",
          "e2e/docker/input/auth_basic.hcl||e2e/docker/input/auth_basic.hcl",
          "e2e/docker/input/auth_helper.hcl||e2e/docker/input/auth_helper.hcl",
          "e2e/docker/input/auth_static.hcl||e2e/docker/input/auth_static.hcl",
          "e2e/docker/input/redis.hcl||e2e/docker/input/redis.hcl",
          "e2e/docker/input/registry-auths.hcl||e2e/docker/input/registry-auths.hcl",
          "e2e/e2e_test.go||e2e/e2e_test.go",
          "e2e/podman/podman_test.go||e2e/podman/podman_test.go",
          "e2e/terraform/etc/nomad.d/client-linux.hcl||e2e/terraform/etc/nomad.d/client-linux.hcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/docker/driver_test.go||drivers/docker/driver_test.go": [
          "File: drivers/docker/driver_test.go -> drivers/docker/driver_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2481:   {",
          "2482:    Repo: \"redis:7\",",
          "2483:    AuthConfig: &registry.AuthConfig{",
          "2484:     Username:      \"test\",",
          "2485:     Password:      \"1234\",",
          "2486:     Email:         \"\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2484:     Auth:          \"eyJ1c2VybmFtZSI6InRlc3QiLCJwYXNzd29yZCI6IjEyMzQifQ==\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2490:   {",
          "2491:    Repo: \"quay.io/redis:7\",",
          "2492:    AuthConfig: &registry.AuthConfig{",
          "2493:     Username:      \"test\",",
          "2494:     Password:      \"5678\",",
          "2495:     Email:         \"\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2494:     Auth:          \"eyJ1c2VybmFtZSI6InRlc3QiLCJwYXNzd29yZCI6IjU2NzgifQ==\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2499:   {",
          "2500:    Repo: \"other.io/redis:7\",",
          "2501:    AuthConfig: &registry.AuthConfig{",
          "2502:     Username:      \"test\",",
          "2503:     Password:      \"abcd\",",
          "2504:     Email:         \"\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2504:     Auth:          \"eyJ1c2VybmFtZSI6InRlc3QiLCJwYXNzd29yZCI6ImFiY2QifQ==\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2535:     ServerAddr: \"www.foobar.com\",",
          "2536:    },",
          "2537:    AuthConfig: &registry.AuthConfig{",
          "2538:     Username:      \"foo\",",
          "2539:     Password:      \"bar\",",
          "2540:     Email:         \"foo@bar.com\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2541:     Auth:          \"eyJ1c2VybmFtZSI6ImZvbyIsInBhc3N3b3JkIjoiYmFyIn0=\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2549:     ServerAddr: \"www.foobar.com\",",
          "2550:    },",
          "2551:    AuthConfig: &registry.AuthConfig{",
          "2552:     Username:      \"foo\",",
          "2553:     Password:      \"bar\",",
          "2554:     ServerAddress: \"www.foobar.com\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2556:     Auth:          \"eyJ1c2VybmFtZSI6ImZvbyIsInBhc3N3b3JkIjoiYmFyIn0=\",",
          "",
          "---------------"
        ],
        "drivers/docker/utils.go||drivers/docker/utils.go": [
          "File: drivers/docker/utils.go -> drivers/docker/utils.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: package docker",
          "6: import (",
          "7:  \"encoding/json\"",
          "8:  \"fmt\"",
          "9:  \"os\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"encoding/base64\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:   if len(driverConfig.Auth.Username) == 0 && len(driverConfig.Auth.Password) == 0 && len(driverConfig.Auth.Email) == 0 && len(driverConfig.Auth.ServerAddr) == 0 {",
          "103:    return nil, nil",
          "104:   }",
          "106:    Username:      driverConfig.Auth.Username,",
          "107:    Password:      driverConfig.Auth.Password,",
          "108:    Email:         driverConfig.Auth.Email,",
          "109:    ServerAddress: driverConfig.Auth.ServerAddr,",
          "111:  }",
          "112: }",
          "",
          "[Removed Lines]",
          "105:   return &registrytypes.AuthConfig{",
          "110:   }, nil",
          "",
          "[Added Lines]",
          "107:   authConfig := &registrytypes.AuthConfig{",
          "112:   }",
          "114:   if err := encodeAuth(authConfig); err != nil {",
          "115:    return nil, err",
          "116:   }",
          "118:   return authConfig, nil",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:      IdentityToken: dockerAuthConfig.IdentityToken,",
          "141:      RegistryToken: dockerAuthConfig.RegistryToken,",
          "142:     }",
          "143:     if authIsEmpty(auth) {",
          "144:      return nil, nil",
          "145:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152:     if err := encodeAuth(auth); err != nil {",
          "153:      return nil, err",
          "154:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "187:    Username: response[\"Username\"],",
          "188:    Password: response[\"Secret\"],",
          "189:   }",
          "191:   if authIsEmpty(auth) {",
          "192:    return nil, nil",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:   if err := encodeAuth(auth); err != nil {",
          "204:    return nil, err",
          "205:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "195:  }",
          "196: }",
          "199: func authIsEmpty(auth *registrytypes.AuthConfig) bool {",
          "200:  if auth == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215: func encodeAuth(cfg *registrytypes.AuthConfig) error {",
          "216:  auth := &registrytypes.AuthConfig{",
          "217:   Username: cfg.Username,",
          "218:   Password: cfg.Password,",
          "219:  }",
          "220:  encodedJSON, err := json.Marshal(auth)",
          "221:  if err != nil {",
          "222:   return fmt.Errorf(\"error encoding basic auth: %v\", err)",
          "223:  }",
          "225:  cfg.Auth = base64.URLEncoding.EncodeToString(encodedJSON)",
          "226:  return nil",
          "227: }",
          "",
          "---------------"
        ],
        "e2e/docker/doc.go||e2e/docker/doc.go": [
          "File: e2e/docker/doc.go -> e2e/docker/doc.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: package docker",
          "",
          "---------------"
        ],
        "e2e/docker/docker_test.go||e2e/docker/docker_test.go": [
          "File: e2e/docker/docker_test.go -> e2e/docker/docker_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: package docker",
          "6: import (",
          "7:  \"fmt\"",
          "8:  \"strconv\"",
          "9:  \"testing\"",
          "10:  \"time\"",
          "12:  \"github.com/hashicorp/nomad/e2e/e2eutil\"",
          "13:  \"github.com/hashicorp/nomad/e2e/v3/cluster3\"",
          "14:  \"github.com/hashicorp/nomad/e2e/v3/jobs3\"",
          "15:  \"github.com/shoenig/test/must\"",
          "16: )",
          "18: const (",
          "19:  registryService = \"registry\"",
          "20: )",
          "22: func TestDocker(t *testing.T) {",
          "23:  cluster3.Establish(t,",
          "24:   cluster3.Leader(),",
          "25:   cluster3.LinuxClients(1),",
          "26:  )",
          "28:  runRegistry(t)",
          "30:  t.Run(\"testRedis\", testRedis)",
          "31:  t.Run(\"testAuthBasic\", testAuthBasic)",
          "32:  t.Run(\"testAuthFileStatic\", testAuthFileStatic)",
          "33:  t.Run(\"testAuthHelper\", testAuthHelper)",
          "34: }",
          "36: func findService(t *testing.T, name string) (string, int) {",
          "37:  services, _, err := e2eutil.NomadClient(t).Services().Get(name, nil)",
          "38:  must.NoError(t, err, must.Sprintf(\"failed to find %q service\", name))",
          "39:  must.Len(t, 1, services, must.Sprintf(\"expected 1 %q service\", name))",
          "40:  return services[0].Address, services[0].Port",
          "41: }",
          "43: func runRegistry(t *testing.T) {",
          "44:  _, regCleanup := jobs3.Submit(t,",
          "45:   \"../docker_registry/registry.hcl\",",
          "46:   jobs3.Timeout(40*time.Second), // pulls an image",
          "47:  )",
          "48:  t.Cleanup(regCleanup)",
          "51:  addr, port := findService(t, registryService)",
          "52:  address := fmt.Sprintf(\"%s:%d\", addr, port)",
          "54:  t.Logf(\"Setting up insecure private registry at %v\", address)",
          "59:  _, sedCleanup := jobs3.Submit(t,",
          "60:   \"./input/registry-auths.hcl\",",
          "61:   jobs3.Var(\"registry_address\", address),",
          "62:   jobs3.Var(\"user\", \"root\"),",
          "63:   jobs3.Var(\"helper_dir\", \"/usr/local/bin\"),",
          "64:   jobs3.Var(\"auth_dir\", \"/etc\"),",
          "65:   jobs3.Var(\"docker_conf_dir\", \"/etc/docker\"),",
          "66:   jobs3.WaitComplete(\"create-files\"),",
          "67:   jobs3.Timeout(20*time.Second),",
          "68:  )",
          "69:  t.Cleanup(sedCleanup)",
          "70: }",
          "72: func testRedis(t *testing.T) {",
          "73:  job, cleanup := jobs3.Submit(t, \"./input/redis.hcl\")",
          "74:  t.Cleanup(cleanup)",
          "76:  logs := job.TaskLogs(\"cache\", \"redis\")",
          "77:  must.StrContains(t, logs.Stdout, \"oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\")",
          "78: }",
          "80: func testAuthBasic(t *testing.T) {",
          "82:  regAddr, regPort := findService(t, \"registry\")",
          "85:  bashJob, bashCleanup := jobs3.Submit(t, \"./input/auth_basic.hcl\",",
          "86:   jobs3.Var(\"registry_address\", regAddr),",
          "87:   jobs3.Var(\"registry_port\", strconv.Itoa(regPort)),",
          "88:   jobs3.WaitComplete(\"basic\"),",
          "89:  )",
          "90:  t.Cleanup(bashCleanup)",
          "91:  logs := bashJob.TaskLogs(\"basic\", \"echo\")",
          "92:  must.StrContains(t, logs.Stdout, \"The auth basic test is OK!\")",
          "93: }",
          "95: func testAuthFileStatic(t *testing.T) {",
          "97:  regAddr, regPort := findService(t, \"registry\")",
          "100:  bashJob, bashCleanup := jobs3.Submit(t, \"./input/auth_static.hcl\",",
          "101:   jobs3.Var(\"registry_address\", regAddr),",
          "102:   jobs3.Var(\"registry_port\", strconv.Itoa(regPort)),",
          "103:   jobs3.WaitComplete(\"static\"),",
          "104:  )",
          "105:  t.Cleanup(bashCleanup)",
          "106:  logs := bashJob.TaskLogs(\"static\", \"echo\")",
          "107:  must.StrContains(t, logs.Stdout, \"The static auth test is OK!\")",
          "108: }",
          "110: func testAuthHelper(t *testing.T) {",
          "112:  regAddr, regPort := findService(t, \"registry\")",
          "114:  t.Log(\"registry\", regAddr, regPort)",
          "117:  bashJob, bashCleanup := jobs3.Submit(t, \"./input/auth_helper.hcl\",",
          "118:   jobs3.Var(\"registry_address\", regAddr),",
          "119:   jobs3.Var(\"registry_port\", strconv.Itoa(regPort)),",
          "120:   jobs3.WaitComplete(\"helper\"),",
          "121:  )",
          "122:  t.Cleanup(bashCleanup)",
          "123:  logs := bashJob.TaskLogs(\"helper\", \"echo\")",
          "124:  must.StrContains(t, logs.Stdout, \"The credentials helper auth test is OK!\")",
          "125: }",
          "",
          "---------------"
        ],
        "e2e/docker/input/auth_basic.hcl||e2e/docker/input/auth_basic.hcl": [
          "File: e2e/docker/input/auth_basic.hcl -> e2e/docker/input/auth_basic.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright (c) HashiCorp, Inc.",
          "2: # SPDX-License-Identifier: BUSL-1.1",
          "4: # This job runs a docker task using a container stored in a private registry",
          "5: # configured with basic authentication. The registry.hcl job should be running",
          "6: # and healthy before running this job. The registry_address and registry_port",
          "7: # HCL variables must be provided.",
          "9: variable \"registry_address\" {",
          "10:   type        = string",
          "11:   description = \"The HTTP address of the local registry\"",
          "12:   default     = \"localhost\"",
          "13: }",
          "15: variable \"registry_port\" {",
          "16:   type        = number",
          "17:   description = \"The HTTP port of the local registry\"",
          "18:   default     = \"7511\"",
          "19: }",
          "21: variable \"registry_username\" {",
          "22:   type        = string",
          "23:   description = \"The Basic Auth username of the local registry\"",
          "24:   default     = \"auth_basic_user\"",
          "25: }",
          "27: variable \"registry_password\" {",
          "28:   type        = string",
          "29:   description = \"The Basic Auth password of the local registry\"",
          "30:   default     = \"auth_basic_pass\"",
          "31: }",
          "33: locals {",
          "34:   registry_auth = base64encode(\"${var.registry_username}:${var.registry_password}\")",
          "35: }",
          "37: job \"auth_basic\" {",
          "38:   type = \"batch\"",
          "40:   constraint {",
          "41:     attribute = \"${attr.kernel.name}\"",
          "42:     value     = \"linux\"",
          "43:   }",
          "45:   group \"basic\" {",
          "46:     reschedule {",
          "47:       attempts  = 0",
          "48:       unlimited = false",
          "49:     }",
          "51:     network {",
          "52:       mode = \"host\"",
          "53:     }",
          "55:     task \"echo\" {",
          "56:       driver = \"docker\"",
          "58:       config {",
          "59:         image          = \"${var.registry_address}:${var.registry_port}/docker.io/library/bash_auth_basic:private\"",
          "60:         args           = [\"echo\", \"The auth basic test is OK!\"]",
          "61:         auth_soft_fail = true",
          "63:         auth {",
          "64:           username = \"${var.registry_username}\"",
          "65:           password = \"${var.registry_password}\"",
          "66:         }",
          "67:       }",
          "69:       resources {",
          "70:         cpu    = 100",
          "71:         memory = 64",
          "72:       }",
          "73:     }",
          "74:   }",
          "75: }",
          "",
          "---------------"
        ],
        "e2e/docker/input/auth_helper.hcl||e2e/docker/input/auth_helper.hcl": [
          "File: e2e/docker/input/auth_helper.hcl -> e2e/docker/input/auth_helper.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright (c) HashiCorp, Inc.",
          "2: # SPDX-License-Identifier: BUSL-1.1",
          "4: # This job runs a docker task using a container stored in a private registry",
          "5: # configured with credentials helper authentication. The registry.hcl job should",
          "6: # be running and healthy before running this job.",
          "8: variable \"registry_address\" {",
          "9:   type        = string",
          "10:   description = \"The HTTP address of the local registry\"",
          "11:   default     = \"localhost\"",
          "12: }",
          "14: variable \"registry_port\" {",
          "15:   type        = number",
          "16:   description = \"The HTTP port of the local registry\"",
          "17:   default     = \"7511\"",
          "18: }",
          "20: job \"auth_static\" {",
          "21:   type = \"batch\"",
          "23:   constraint {",
          "24:     attribute = \"${attr.kernel.name}\"",
          "25:     value     = \"linux\"",
          "26:   }",
          "28:   group \"helper\" {",
          "29:     reschedule {",
          "30:       attempts  = 0",
          "31:       unlimited = false",
          "32:     }",
          "34:     network {",
          "35:       mode = \"host\"",
          "36:     }",
          "38:     task \"echo\" {",
          "39:       driver = \"docker\"",
          "41:       config {",
          "42:         image = \"${var.registry_address}:${var.registry_port}/docker.io/library/bash_auth_helper:private\"",
          "43:         args  = [\"echo\", \"The credentials helper auth test is OK!\"]",
          "45:         # usename and password come from [docker-credential-]test.sh found on",
          "46:         # $PATH as specified by \"helper=test.sh\" in plugin config",
          "47:       }",
          "49:       resources {",
          "50:         cpu    = 100",
          "51:         memory = 64",
          "52:       }",
          "53:     }",
          "54:   }",
          "55: }",
          "",
          "---------------"
        ],
        "e2e/docker/input/auth_static.hcl||e2e/docker/input/auth_static.hcl": [
          "File: e2e/docker/input/auth_static.hcl -> e2e/docker/input/auth_static.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright (c) HashiCorp, Inc.",
          "2: # SPDX-License-Identifier: BUSL-1.1",
          "4: # This job runs a docker task using a container stored in a private registry",
          "5: # configured with file config static authentication. The registry.hcl job should",
          "6: # be running and healthy before running this job.",
          "8: variable \"registry_address\" {",
          "9:   type        = string",
          "10:   description = \"The HTTP address of the local registry\"",
          "11:   default     = \"localhost\"",
          "12: }",
          "14: variable \"registry_port\" {",
          "15:   type        = number",
          "16:   description = \"The HTTP port of the local registry\"",
          "17:   default     = \"7511\"",
          "18: }",
          "20: job \"auth_static\" {",
          "21:   type = \"batch\"",
          "23:   constraint {",
          "24:     attribute = \"${attr.kernel.name}\"",
          "25:     value     = \"linux\"",
          "26:   }",
          "28:   group \"static\" {",
          "29:     reschedule {",
          "30:       attempts  = 0",
          "31:       unlimited = false",
          "32:     }",
          "34:     network {",
          "35:       mode = \"host\"",
          "36:     }",
          "38:     task \"echo\" {",
          "39:       driver = \"docker\"",
          "41:       config {",
          "42:         image = \"${var.registry_address}:${var.registry_port}/docker.io/library/bash_auth_static:private\"",
          "43:         args  = [\"echo\", \"The static auth test is OK!\"]",
          "45:         # usename and password come from auth.json in plugin config",
          "46:       }",
          "48:       resources {",
          "49:         cpu    = 100",
          "50:         memory = 64",
          "51:       }",
          "52:     }",
          "53:   }",
          "54: }",
          "56: # auth.json (must be pointed to by config=<path>/auth.json)",
          "57: #",
          "58: # {",
          "59: #   \"auths\": {",
          "60: #     \"127.0.0.1:7511/docker.io/library/bash_auth_static\": {",
          "61: #       \"auth\": \"YXV0aF9zdGF0aWNfdXNlcjphdXRoX3N0YXRpY19wYXNz\"",
          "62: #     }",
          "63: #   }",
          "64: # }",
          "",
          "---------------"
        ],
        "e2e/docker/input/redis.hcl||e2e/docker/input/redis.hcl": [
          "File: e2e/docker/input/redis.hcl -> e2e/docker/input/redis.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright (c) HashiCorp, Inc.",
          "2: # SPDX-License-Identifier: BUSL-1.1",
          "4: # This is a simple redis job using the docker task driver.",
          "6: job \"redis\" {",
          "8:   constraint {",
          "9:     attribute = \"${attr.kernel.name}\"",
          "10:     value     = \"linux\"",
          "11:   }",
          "13:   group \"cache\" {",
          "14:     network {",
          "15:       port \"db\" {",
          "16:         to = 6379",
          "17:       }",
          "18:     }",
          "20:     task \"redis\" {",
          "21:       driver = \"docker\"",
          "23:       config {",
          "24:         image          = \"docker.io/library/redis:7\"",
          "25:         ports          = [\"db\"]",
          "26:         auth_soft_fail = true",
          "27:       }",
          "29:       resources {",
          "30:         cpu    = 50",
          "31:         memory = 128",
          "32:       }",
          "33:     }",
          "34:   }",
          "35: }",
          "",
          "---------------"
        ],
        "e2e/docker/input/registry-auths.hcl||e2e/docker/input/registry-auths.hcl": [
          "File: e2e/docker/input/registry-auths.hcl -> e2e/docker/input/registry-auths.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright (c) HashiCorp, Inc.",
          "2: # SPDX-License-Identifier: BUSL-1.1",
          "4: # This job runs after the private registry is up and running, when we know",
          "5: # address and port provided by the bridge network. It is a sysbatch job",
          "6: # that writes these files on every linux client.",
          "7: #   - /usr/local/bin/docker-credential-test.sh",
          "8: #   - /etc/docker-registry-auth.json",
          "10: variable \"registry_address\" {",
          "11:   type        = string",
          "12:   description = \"The HTTP address of the local registry\"",
          "13: }",
          "15: variable \"auth_dir\" {",
          "16:   type        = string",
          "17:   description = \"The destination directory of the auth.json file.\"",
          "18:   default     = \"/tmp\"",
          "19: }",
          "21: variable \"helper_dir\" {",
          "22:   type        = string",
          "23:   description = \"The directory in which test.sh will be written.\"",
          "24:   default     = \"/tmp\"",
          "25: }",
          "27: variable \"docker_conf_dir\" {",
          "28:   type        = string",
          "29:   description = \"The directory in which daemon.json will be written.\"",
          "30:   default     = \"/tmp\"",
          "31: }",
          "33: variable \"user\" {",
          "34:   type        = string",
          "35:   description = \"The user to create files as. Should be root in e2e.\"",
          "36:   # no default because dealing with root files is annoying locally",
          "37:   # try -var=user=$USER for local development",
          "38: }",
          "40: job \"registry-auths\" {",
          "41:   type = \"sysbatch\"",
          "43:   constraint {",
          "44:     attribute = \"${attr.kernel.name}\"",
          "45:     value     = \"linux\"",
          "46:   }",
          "48:   group \"create-files\" {",
          "49:     reschedule {",
          "50:       attempts  = 0",
          "51:       unlimited = false",
          "52:     }",
          "54:     # write out the test.sh file into var.helper_dir",
          "55:     task \"create-helper-file\" {",
          "56:       driver = \"pledge\"",
          "57:       user   = \"${var.user}\"",
          "59:       config {",
          "60:         command  = \"cp\"",
          "61:         args     = [\"${NOMAD_TASK_DIR}/test.sh\", \"${var.helper_dir}/docker-credential-test.sh\"]",
          "62:         promises = \"stdio rpath wpath cpath\"",
          "63:         unveil   = [\"r:${NOMAD_TASK_DIR}/test.sh\", \"rwc:${var.helper_dir}\"]",
          "64:       }",
          "66:       template {",
          "67:         destination = \"local/test.sh\"",
          "68:         perms       = \"755\"",
          "69:         data        = <<EOH",
          "70: #!/usr/bin/env bash",
          "72: set -euo pipefail",
          "74: value=$(cat /dev/stdin)",
          "76: username=\"auth_helper_user\"",
          "77: password=\"auth_helper_pass\"",
          "79: case \"${value}\" in",
          "80:   ${var.registry_address}*)",
          "81:     echo \"{\\\"Username\\\": \\\"$username\\\", \\\"Secret\\\": \\\"$password\\\"}\"",
          "82:     exit 0",
          "83:     ;;",
          "85:     echo \"must use local registry\"",
          "86:     exit 3",
          "87:     ;;",
          "88: esac",
          "89: EOH",
          "90:       }",
          "91:       resources {",
          "92:         cpu    = 100",
          "93:         memory = 32",
          "94:       }",
          "95:     }",
          "97:     # write out the auth.json file into var.auth_dir",
          "98:     task \"create-auth-file\" {",
          "99:       driver = \"pledge\"",
          "100:       user   = \"${var.user}\"",
          "102:       config {",
          "103:         command  = \"cp\"",
          "104:         args     = [\"${NOMAD_TASK_DIR}/auth.json\", \"${var.auth_dir}/auth.json\"]",
          "105:         promises = \"stdio rpath wpath cpath\"",
          "106:         unveil   = [\"r:${NOMAD_TASK_DIR}/auth.json\", \"rwc:${var.auth_dir}\"]",
          "107:       }",
          "108:       template {",
          "109:         perms       = \"644\"",
          "110:         destination = \"local/auth.json\"",
          "111:         data        = <<EOH",
          "112: {",
          "113:   \"auths\": {",
          "114:     \"${var.registry_address}:/docker.io/library/bash_auth_static\": {",
          "115:       \"auth\": \"YXV0aF9zdGF0aWNfdXNlcjphdXRoX3N0YXRpY19wYXNz\"",
          "116:     }",
          "117:   }",
          "118: }",
          "119: EOH",
          "120:       }",
          "121:       resources {",
          "122:         cpu    = 100",
          "123:         memory = 32",
          "124:       }",
          "125:     }",
          "126:   }",
          "128:   group \"create-conf\" {",
          "129:     task \"create-daemon-file\" {",
          "130:       driver = \"pledge\"",
          "131:       user   = \"${var.user}\"",
          "133:       config {",
          "134:         command  = \"cp\"",
          "135:         args     = [\"${NOMAD_TASK_DIR}/daemon.json\", \"${var.docker_conf_dir}/daemon.json\"]",
          "136:         promises = \"stdio rpath wpath cpath\"",
          "137:         unveil   = [\"r:${NOMAD_TASK_DIR}/daemon.json\", \"rwc:${var.docker_conf_dir}\"]",
          "138:       }",
          "140:       template {",
          "141:         destination = \"local/daemon.json\"",
          "142:         perms       = \"644\"",
          "143:         data        = <<EOH",
          "144: {",
          "145:    \"insecure-registries\": [",
          "146:       \"${var.registry_address}\"",
          "147:    ]",
          "148: }",
          "149: EOH",
          "150:       }",
          "151:       resources {",
          "152:         cpu    = 100",
          "153:         memory = 32",
          "154:       }",
          "155:     }",
          "157:     task \"restart-docker\" {",
          "158:       driver = \"raw_exec\" # TODO: see if this could be done with pledge?",
          "160:       config {",
          "161:         command = \"service\"",
          "162:         args    = [\"docker\", \"restart\"]",
          "163:       }",
          "164:       resources {",
          "165:         cpu    = 100",
          "166:         memory = 32",
          "167:       }",
          "168:     }",
          "169:   }",
          "170: }",
          "",
          "---------------"
        ],
        "e2e/e2e_test.go||e2e/e2e_test.go": [
          "File: e2e/e2e_test.go -> e2e/e2e_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  _ \"github.com/hashicorp/nomad/e2e/connect\"",
          "36:  _ \"github.com/hashicorp/nomad/e2e/consultemplate\"",
          "37:  _ \"github.com/hashicorp/nomad/e2e/disconnectedclients\"",
          "38:  _ \"github.com/hashicorp/nomad/e2e/isolation\"",
          "39:  _ \"github.com/hashicorp/nomad/e2e/metrics\"",
          "40:  _ \"github.com/hashicorp/nomad/e2e/namespaces\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:  _ \"github.com/hashicorp/nomad/e2e/docker\"",
          "",
          "---------------"
        ],
        "e2e/podman/podman_test.go||e2e/podman/podman_test.go": [
          "File: e2e/podman/podman_test.go -> e2e/podman/podman_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: func runRegistry(t *testing.T) {",
          "44:  _, regCleanup := jobs3.Submit(t,",
          "46:   jobs3.Timeout(40*time.Second), // pulls an image",
          "47:  )",
          "48:  t.Cleanup(regCleanup)",
          "",
          "[Removed Lines]",
          "45:   \"./input/registry.hcl\",",
          "",
          "[Added Lines]",
          "45:   \"../docker_registry/registry.hcl\",",
          "",
          "---------------"
        ],
        "e2e/terraform/etc/nomad.d/client-linux.hcl||e2e/terraform/etc/nomad.d/client-linux.hcl": [
          "File: e2e/terraform/etc/nomad.d/client-linux.hcl -> e2e/terraform/etc/nomad.d/client-linux.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     volumes {",
          "44:       enabled = true",
          "45:     }",
          "46:   }",
          "47: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     auth {",
          "47:       helper = \"test.sh\"",
          "48:       config = \"/etc/auth.json\"",
          "49:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ebf4c9bec93e890a3894d40e13d157892dacd41e",
      "candidate_info": {
        "commit_hash": "ebf4c9bec93e890a3894d40e13d157892dacd41e",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/ebf4c9bec93e890a3894d40e13d157892dacd41e",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "deps: Consolidated update of dependabot PRs (#25324) (#25326)\n\n* chore(deps): bump github.com/container-storage-interface/spec\n* chore(deps): bump github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2\n* chore(deps): bump github.com/moby/sys/mount from 0.3.3 to 0.3.4\n* chore(deps): bump golang.org/x/crypto from 0.35.0 to 0.36.0\n* chore(deps): bump github.com/aws/aws-sdk-go-v2/config\n\nCo-authored-by: James Rasell <jrasell@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e",
          "20:  github.com/armon/go-metrics v0.5.3",
          "21:  github.com/aws/aws-sdk-go-v2 v1.36.3",
          "23:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.30",
          "24:  github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0",
          "25:  github.com/aws/smithy-go v1.22.3",
          "27:  github.com/containerd/go-cni v1.1.12",
          "28:  github.com/containernetworking/cni v1.2.3",
          "29:  github.com/coreos/go-iptables v0.8.0",
          "",
          "[Removed Lines]",
          "22:  github.com/aws/aws-sdk-go-v2/config v1.29.8",
          "26:  github.com/container-storage-interface/spec v1.10.0",
          "",
          "[Added Lines]",
          "22:  github.com/aws/aws-sdk-go-v2/config v1.29.9",
          "26:  github.com/container-storage-interface/spec v1.11.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:  github.com/hashicorp/go-immutable-radix/v2 v2.1.0",
          "64:  github.com/hashicorp/go-kms-wrapping/v2 v2.0.18",
          "65:  github.com/hashicorp/go-kms-wrapping/wrappers/awskms/v2 v2.0.10",
          "67:  github.com/hashicorp/go-kms-wrapping/wrappers/gcpckms/v2 v2.0.12",
          "68:  github.com/hashicorp/go-kms-wrapping/wrappers/transit/v2 v2.0.13",
          "69:  github.com/hashicorp/go-memdb v1.3.4",
          "",
          "[Removed Lines]",
          "66:  github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.13",
          "",
          "[Added Lines]",
          "66:  github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.14",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:  github.com/mitchellh/pointerstructure v1.2.1",
          "109:  github.com/mitchellh/reflectwalk v1.0.2",
          "110:  github.com/moby/sys/capability v0.4.0",
          "112:  github.com/moby/sys/mountinfo v0.7.2",
          "113:  github.com/moby/term v0.5.2",
          "114:  github.com/muesli/reflow v0.3.0",
          "",
          "[Removed Lines]",
          "111:  github.com/moby/sys/mount v0.3.3",
          "",
          "[Added Lines]",
          "111:  github.com/moby/sys/mount v0.3.4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "130:  github.com/zclconf/go-cty-yaml v1.1.0",
          "131:  go.etcd.io/bbolt v1.4.0",
          "132:  go.uber.org/goleak v1.3.0",
          "134:  golang.org/x/mod v0.23.0",
          "137:  golang.org/x/time v0.10.0",
          "138:  google.golang.org/grpc v1.69.4",
          "139:  google.golang.org/protobuf v1.36.3",
          "",
          "[Removed Lines]",
          "133:  golang.org/x/crypto v0.35.0",
          "135:  golang.org/x/sync v0.11.0",
          "136:  golang.org/x/sys v0.30.0",
          "",
          "[Added Lines]",
          "133:  golang.org/x/crypto v0.36.0",
          "135:  golang.org/x/sync v0.12.0",
          "136:  golang.org/x/sys v0.31.0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "185:  github.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect",
          "186:  github.com/armon/go-radix v1.0.0 // indirect",
          "187:  github.com/aws/aws-sdk-go v1.55.6 // indirect",
          "189:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.34 // indirect",
          "190:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.34 // indirect",
          "191:  github.com/aws/aws-sdk-go-v2/internal/ini v1.8.3 // indirect",
          "192:  github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.3 // indirect",
          "193:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.15 // indirect",
          "197:  github.com/beorn7/perks v1.0.1 // indirect",
          "198:  github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d // indirect",
          "199:  github.com/bgentry/speakeasy v0.1.0 // indirect",
          "",
          "[Removed Lines]",
          "188:  github.com/aws/aws-sdk-go-v2/credentials v1.17.61 // indirect",
          "194:  github.com/aws/aws-sdk-go-v2/service/sso v1.25.0 // indirect",
          "195:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.0 // indirect",
          "196:  github.com/aws/aws-sdk-go-v2/service/sts v1.33.16 // indirect",
          "",
          "[Added Lines]",
          "188:  github.com/aws/aws-sdk-go-v2/credentials v1.17.62 // indirect",
          "194:  github.com/aws/aws-sdk-go-v2/service/sso v1.25.1 // indirect",
          "195:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.1 // indirect",
          "196:  github.com/aws/aws-sdk-go-v2/service/sts v1.33.17 // indirect",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "328:  golang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67 // indirect",
          "329:  golang.org/x/net v0.34.0 // indirect",
          "330:  golang.org/x/oauth2 v0.27.0 // indirect",
          "333:  golang.org/x/tools v0.28.0 // indirect",
          "334:  google.golang.org/api v0.217.0 // indirect",
          "335:  google.golang.org/genproto v0.0.0-20250115164207-1a7da9e5054f // indirect",
          "",
          "[Removed Lines]",
          "331:  golang.org/x/term v0.29.0 // indirect",
          "332:  golang.org/x/text v0.22.0 // indirect",
          "",
          "[Added Lines]",
          "331:  golang.org/x/term v0.30.0 // indirect",
          "332:  golang.org/x/text v0.23.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "748: github.com/aws/aws-sdk-go v1.55.6/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=",
          "749: github.com/aws/aws-sdk-go-v2 v1.36.3 h1:mJoei2CxPutQVxaATCzDUjcZEjVRdpsiiXi2o38yqWM=",
          "750: github.com/aws/aws-sdk-go-v2 v1.36.3/go.mod h1:LLXuLpgzEbD766Z5ECcRmi8AzSwfZItDtmABVkRLGzg=",
          "755: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.30 h1:x793wxmUWVDhshP8WW2mlnXuFrO4cOd3HLBroh1paFw=",
          "756: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.30/go.mod h1:Jpne2tDnYiFascUEs2AWHJL9Yp7A5ZVy3TNyxaAjD6M=",
          "757: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.34 h1:ZK5jHhnrioRkUNOc+hOgQKlUL5JeC3S6JgLxtQ+Rm0Q=",
          "",
          "[Removed Lines]",
          "751: github.com/aws/aws-sdk-go-v2/config v1.29.8 h1:RpwAfYcV2lr/yRc4lWhUM9JRPQqKgKWmou3LV7UfWP4=",
          "752: github.com/aws/aws-sdk-go-v2/config v1.29.8/go.mod h1:t+G7Fq1OcO8cXTPPXzxQSnj/5Xzdc9jAAD3Xrn9/Mgo=",
          "753: github.com/aws/aws-sdk-go-v2/credentials v1.17.61 h1:Hd/uX6Wo2iUW1JWII+rmyCD7MMhOe7ALwQXN6sKDd1o=",
          "754: github.com/aws/aws-sdk-go-v2/credentials v1.17.61/go.mod h1:L7vaLkwHY1qgW0gG1zG0z/X0sQ5tpIY5iI13+j3qI80=",
          "",
          "[Added Lines]",
          "751: github.com/aws/aws-sdk-go-v2/config v1.29.9 h1:Kg+fAYNaJeGXp1vmjtidss8O2uXIsXwaRqsQJKXVr+0=",
          "752: github.com/aws/aws-sdk-go-v2/config v1.29.9/go.mod h1:oU3jj2O53kgOU4TXq/yipt6ryiooYjlkqqVaZk7gY/U=",
          "753: github.com/aws/aws-sdk-go-v2/credentials v1.17.62 h1:fvtQY3zFzYJ9CfixuAQ96IxDrBajbBWGqjNTCa79ocU=",
          "754: github.com/aws/aws-sdk-go-v2/credentials v1.17.62/go.mod h1:ElETBxIQqcxej++Cs8GyPBbgMys5DgQPTwo7cUPDKt8=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "766: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.3/go.mod h1:0yKJC/kb8sAnmlYa6Zs3QVYqaC8ug2AbnNChv5Ox3uA=",
          "767: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.15 h1:dM9/92u2F1JbDaGooxTq18wmmFzbJRfXfVfy96/1CXM=",
          "768: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.15/go.mod h1:SwFBy2vjtA0vZbjjaFtfN045boopadnoVPhu4Fv66vY=",
          "775: github.com/aws/smithy-go v1.22.3 h1:Z//5NuZCSW6R4PhQ93hShNbyBbn8BWCmCVCt+Q8Io5k=",
          "776: github.com/aws/smithy-go v1.22.3/go.mod h1:t1ufH5HMublsJYulve2RKmHDC15xu1f26kHCp/HgceI=",
          "777: github.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "",
          "[Removed Lines]",
          "769: github.com/aws/aws-sdk-go-v2/service/sso v1.25.0 h1:2U9sF8nKy7UgyEeLiZTRg6ShBS22z8UnYpV6aRFL0is=",
          "770: github.com/aws/aws-sdk-go-v2/service/sso v1.25.0/go.mod h1:qs4a9T5EMLl/Cajiw2TcbNt2UNo/Hqlyp+GiuG4CFDI=",
          "771: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.0 h1:wjAdc85cXdQR5uLx5FwWvGIHm4OPJhTyzUHU8craXtE=",
          "772: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.0/go.mod h1:MlYRNmYu/fGPoxBQVvBYr9nyr948aY/WLUvwBMBJubs=",
          "773: github.com/aws/aws-sdk-go-v2/service/sts v1.33.16 h1:BHEK2Q/7CMRMCb3nySi/w8UbIcPhKvYP5s1xf8/izn0=",
          "774: github.com/aws/aws-sdk-go-v2/service/sts v1.33.16/go.mod h1:cQnB8CUnxbMU82JvlqjKR2HBOm3fe9pWorWBza6MBJ4=",
          "",
          "[Added Lines]",
          "769: github.com/aws/aws-sdk-go-v2/service/sso v1.25.1 h1:8JdC7Gr9NROg1Rusk25IcZeTO59zLxsKgE0gkh5O6h0=",
          "770: github.com/aws/aws-sdk-go-v2/service/sso v1.25.1/go.mod h1:qs4a9T5EMLl/Cajiw2TcbNt2UNo/Hqlyp+GiuG4CFDI=",
          "771: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.1 h1:KwuLovgQPcdjNMfFt9OhUd9a2OwcOKhxfvF4glTzLuA=",
          "772: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.1/go.mod h1:MlYRNmYu/fGPoxBQVvBYr9nyr948aY/WLUvwBMBJubs=",
          "773: github.com/aws/aws-sdk-go-v2/service/sts v1.33.17 h1:PZV5W8yk4OtH1JAuhV2PXwwO9v5G5Aoj+eMCn4T+1Kc=",
          "774: github.com/aws/aws-sdk-go-v2/service/sts v1.33.17/go.mod h1:cQnB8CUnxbMU82JvlqjKR2HBOm3fe9pWorWBza6MBJ4=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "833: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "834: github.com/cncf/xds/go v0.0.0-20241223141626-cff3c89139a3 h1:boJj011Hh+874zpIySeApCX4GeOjPl9qhRF3QuIZq+Q=",
          "835: github.com/cncf/xds/go v0.0.0-20241223141626-cff3c89139a3/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=",
          "838: github.com/containerd/console v1.0.1/go.mod h1:XUsP6YE/mKtz6bxc+I8UiKKTP04qjQL4qcS3XoQ5xkw=",
          "839: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "840: github.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=",
          "",
          "[Removed Lines]",
          "836: github.com/container-storage-interface/spec v1.10.0 h1:YkzWPV39x+ZMTa6Ax2czJLLwpryrQ+dPesB34mrRMXA=",
          "837: github.com/container-storage-interface/spec v1.10.0/go.mod h1:DtUvaQszPml1YJfIK7c00mlv6/g4wNMLanLgiUbKFRI=",
          "",
          "[Added Lines]",
          "836: github.com/container-storage-interface/spec v1.11.0 h1:H/YKTOeUZwHtyPOr9raR+HgFmGluGCklulxDYxSdVNM=",
          "837: github.com/container-storage-interface/spec v1.11.0/go.mod h1:DtUvaQszPml1YJfIK7c00mlv6/g4wNMLanLgiUbKFRI=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1205: github.com/hashicorp/go-kms-wrapping/v2 v2.0.18/go.mod h1:t/eaR/mi2mw3klfl1WEAuiLKrlZ/Q8cosmsT+RIPLu0=",
          "1206: github.com/hashicorp/go-kms-wrapping/wrappers/awskms/v2 v2.0.10 h1:YOSmJpqZt2X3KL0JUlKdih3WjpDlS9jQPyr6Etdh1GE=",
          "1207: github.com/hashicorp/go-kms-wrapping/wrappers/awskms/v2 v2.0.10/go.mod h1:eX4b0InOUfJ3NjfNWlJruBDT3rHXxOVw+7qNFmtjNbo=",
          "1210: github.com/hashicorp/go-kms-wrapping/wrappers/gcpckms/v2 v2.0.12 h1:PCqWzT/Hii0KL07JsBZ3lJbv/wx02IAHYlhWQq8rxRY=",
          "1211: github.com/hashicorp/go-kms-wrapping/wrappers/gcpckms/v2 v2.0.12/go.mod h1:HSaOaX/lv3ShCdilUYbOTPnSvmoZ9xtQhgw+8hYcZkg=",
          "1212: github.com/hashicorp/go-kms-wrapping/wrappers/transit/v2 v2.0.13 h1:UuDeq3nr0e+H9CrZM3dvpDGkWFSJYTtuTqVekn2za2k=",
          "",
          "[Removed Lines]",
          "1208: github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.13 h1:Vh/i9Q0/2dpbK5FUPnpZJSIE6iPLe471Yvmi+CPnpS0=",
          "1209: github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.13/go.mod h1:fWxrv9YkAMqtsISde5mcutoMvuiH4kyg1AlDzzmqRh8=",
          "",
          "[Added Lines]",
          "1208: github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.14 h1:oK4OQ5EPbx/66dAvitksV+OdrQ86SZEj3B6VSZrbdEY=",
          "1209: github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.14/go.mod h1:fWxrv9YkAMqtsISde5mcutoMvuiH4kyg1AlDzzmqRh8=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1452: github.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=",
          "1453: github.com/moby/sys/capability v0.4.0 h1:4D4mI6KlNtWMCM1Z/K0i7RV1FkX+DBDHKVJpCndZoHk=",
          "1454: github.com/moby/sys/capability v0.4.0/go.mod h1:4g9IK291rVkms3LKCDOoYlnV8xKwoDTpIrNEE35Wq0I=",
          "1458: github.com/moby/sys/mountinfo v0.7.2 h1:1shs6aH5s4o5H2zQLn796ADW1wMrIwHsyJ2v9KouLrg=",
          "1459: github.com/moby/sys/mountinfo v0.7.2/go.mod h1:1YOa8w8Ih7uW0wALDUgT1dTTSBrZ+HiBLGws92L2RU4=",
          "1460: github.com/moby/term v0.5.2 h1:6qk3FJAFDs6i/q3W/pQ97SX192qKfZgGjCQqfCJkgzQ=",
          "",
          "[Removed Lines]",
          "1455: github.com/moby/sys/mount v0.3.3 h1:fX1SVkXFJ47XWDoeFW4Sq7PdQJnV2QIDZAqjNqgEjUs=",
          "1456: github.com/moby/sys/mount v0.3.3/go.mod h1:PBaEorSNTLG5t/+4EgukEQVlAvVEc6ZjTySwKdqp5K0=",
          "1457: github.com/moby/sys/mountinfo v0.6.2/go.mod h1:IJb6JQeOklcdMU9F5xQ8ZALD+CUr5VlGpwtX+VE0rpI=",
          "",
          "[Added Lines]",
          "1455: github.com/moby/sys/mount v0.3.4 h1:yn5jq4STPztkkzSKpZkLcmjue+bZJ0u2AuQY1iNI1Ww=",
          "1456: github.com/moby/sys/mount v0.3.4/go.mod h1:KcQJMbQdJHPlq5lcYT+/CjatWM4PuxKe+XLSVS4J6Os=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1764: golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=",
          "1765: golang.org/x/crypto v0.23.0/go.mod h1:CKFgDieR+mRhux2Lsu27y0fO304Db0wZe70UKqHu0v8=",
          "1766: golang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=",
          "1769: golang.org/x/exp v0.0.0-20180321215751-8460e604b9de/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "1770: golang.org/x/exp v0.0.0-20180807140117-3d87b88a115f/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "1771: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "",
          "[Removed Lines]",
          "1767: golang.org/x/crypto v0.35.0 h1:b15kiHdrGCHrP6LvwaQ3c03kgNhhiMgvlhxHQhmg2Xs=",
          "1768: golang.org/x/crypto v0.35.0/go.mod h1:dy7dXNW32cAb/6/PRuTNsix8T+vJAqvuIy5Bli/x0YQ=",
          "",
          "[Added Lines]",
          "1766: golang.org/x/crypto v0.36.0 h1:AnAEvhDddvBdpY+uR+MyHmuZzzNqXSe/GvuDeob5L34=",
          "1767: golang.org/x/crypto v0.36.0/go.mod h1:Y4J0ReaxCR1IMaabaSMugxJES1EpwhBHhv2bDHklZvc=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1953: golang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=",
          "1954: golang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=",
          "1955: golang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=",
          "1958: golang.org/x/sys v0.0.0-20170830134202-bb24a47a89ea/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "1959: golang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "1960: golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "",
          "[Removed Lines]",
          "1956: golang.org/x/sync v0.11.0 h1:GGz8+XQP4FvTTrjZPzNKTMFtSXH80RAzG+5ghFPgK9w=",
          "1957: golang.org/x/sync v0.11.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=",
          "",
          "[Added Lines]",
          "1955: golang.org/x/sync v0.12.0 h1:MHc5BpPuC30uJk597Ri8TV3CNZcTLu6B6z4lJy+g6Jw=",
          "1956: golang.org/x/sync v0.12.0/go.mod h1:1dzgHSNfp02xaA81J2MS99Qcpr2w7fw1gpm99rleRqA=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2069: golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "2070: golang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "2071: golang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "2074: golang.org/x/telemetry v0.0.0-20240228155512-f48c80bd79b2/go.mod h1:TeRTkGYfJXctD9OcfyVLyj2J3IxLnKwHJR8f4D8a3YE=",
          "2075: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "2076: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "",
          "[Removed Lines]",
          "2072: golang.org/x/sys v0.30.0 h1:QjkSwP/36a20jFYWkSue1YwXzLmsV5Gfq7Eiy72C1uc=",
          "2073: golang.org/x/sys v0.30.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "",
          "[Added Lines]",
          "2071: golang.org/x/sys v0.31.0 h1:ioabZlmFYtWhL+TRYpcnNlLwhyxaM9kWTDEmfnprqik=",
          "2072: golang.org/x/sys v0.31.0/go.mod h1:BJP2sWEmIv4KK5OTEluFJCKSidICx8ciO85XgH3Ak8k=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2085: golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=",
          "2086: golang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=",
          "2087: golang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=",
          "2090: golang.org/x/text v0.0.0-20160726164857-2910a502d2bf/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "2091: golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "2092: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "",
          "[Removed Lines]",
          "2088: golang.org/x/term v0.29.0 h1:L6pJp37ocefwRRtYPKSWOWzOtWSxVajvz2ldH/xi3iU=",
          "2089: golang.org/x/term v0.29.0/go.mod h1:6bl4lRlvVuDgSf3179VpIxBF0o10JUpXWOnI7nErv7s=",
          "",
          "[Added Lines]",
          "2087: golang.org/x/term v0.30.0 h1:PQ39fJZ+mfadBm0y5WlL4vlM7Sx1Hgf13sMIY2+QS9Y=",
          "2088: golang.org/x/term v0.30.0/go.mod h1:NYYFdzHoI5wRh/h5tDMdMqCqPJZEuNqVR5xJLd/n67g=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2108: golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=",
          "2109: golang.org/x/text v0.15.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=",
          "2110: golang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=",
          "2113: golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "2114: golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "2115: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "",
          "[Removed Lines]",
          "2111: golang.org/x/text v0.22.0 h1:bofq7m3/HAFvbF51jz3Q9wLg3jkvSPuiZu/pD1XwgtM=",
          "2112: golang.org/x/text v0.22.0/go.mod h1:YRoo4H8PVmsu+E3Ou7cqLVH8oXWIHVoX0jqUWALQhfY=",
          "",
          "[Added Lines]",
          "2110: golang.org/x/text v0.23.0 h1:D71I7dUrlY+VX0gQShAThNGHFxZ13dGLBHQLVl1mJlY=",
          "2111: golang.org/x/text v0.23.0/go.mod h1:/BLNzu4aZCJ1+kcD0DNRotWKage4q2rGVAg4o22unh4=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "023f17471f0a3c5ce4864c22c47d27dc188e13fc",
      "candidate_info": {
        "commit_hash": "023f17471f0a3c5ce4864c22c47d27dc188e13fc",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/023f17471f0a3c5ce4864c22c47d27dc188e13fc",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "Backport of chore(deps): bump github.com/aws/aws-sdk-go from 1.44.210 to 1.55.5 into release/1.9.x (#24427)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  github.com/Microsoft/go-winio v0.6.1",
          "19:  github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e",
          "20:  github.com/armon/go-metrics v0.5.3",
          "22:  github.com/brianvoe/gofakeit/v6 v6.20.1",
          "23:  github.com/container-storage-interface/spec v1.10.0",
          "24:  github.com/containerd/go-cni v1.1.9",
          "",
          "[Removed Lines]",
          "21:  github.com/aws/aws-sdk-go v1.44.210",
          "",
          "[Added Lines]",
          "21:  github.com/aws/aws-sdk-go v1.55.5",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "292: github.com/aws/aws-sdk-go v1.25.41/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=",
          "293: github.com/aws/aws-sdk-go v1.30.27/go.mod h1:5zCpMtNQVjRREroY7sYe8lOMRSxkhG6MZveU8YkpAk0=",
          "294: github.com/aws/aws-sdk-go v1.44.122/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=",
          "297: github.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "298: github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=",
          "299: github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=",
          "",
          "[Removed Lines]",
          "295: github.com/aws/aws-sdk-go v1.44.210 h1:/cqRMHSSgzLEKILIDGwhaX2hiIpyRurw7MRy6aaSufg=",
          "296: github.com/aws/aws-sdk-go v1.44.210/go.mod h1:aVsgQcEevwlmQ7qHE9I3h+dtQgpqhFB+i8Phjh7fkwI=",
          "",
          "[Added Lines]",
          "295: github.com/aws/aws-sdk-go v1.55.5 h1:KKUZBfBoyqy5d3swXyiC7Q76ic40rYcbqH7qjh59kzU=",
          "296: github.com/aws/aws-sdk-go v1.55.5/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ed94555285d545d257ad227803cf0c2715eeedf",
      "candidate_info": {
        "commit_hash": "0ed94555285d545d257ad227803cf0c2715eeedf",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/0ed94555285d545d257ad227803cf0c2715eeedf",
        "files": [
          ".changelog/24739.txt",
          "client/allocrunner/taskrunner/dynamic_users_hook.go",
          "client/allocrunner/taskrunner/dynamic_users_hook_test.go"
        ],
        "message": "Backport of taskrunner: fix panic when a task that has a dynamic user is recovered into release/1.9.x (#24958)\n\nCo-authored-by: Gabi <gvillalongasimon@cloudflare.com>\nCo-authored-by: Michael Smithhisler <michael.smithhisler@hashicorp.com>",
        "before_after_code_files": [
          "client/allocrunner/taskrunner/dynamic_users_hook.go||client/allocrunner/taskrunner/dynamic_users_hook.go",
          "client/allocrunner/taskrunner/dynamic_users_hook_test.go||client/allocrunner/taskrunner/dynamic_users_hook_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "client/allocrunner/taskrunner/dynamic_users_hook.go||client/allocrunner/taskrunner/dynamic_users_hook.go": [
          "File: client/allocrunner/taskrunner/dynamic_users_hook.go -> client/allocrunner/taskrunner/dynamic_users_hook.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:   return nil",
          "60:  }",
          "64:  if request.PreviousState != nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:  response.State = make(map[string]string, 1)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:  request.Task.User = dynamic.String(ugid)",
          "90:  response.State[dynamicUsersStateKey] = request.Task.User",
          "92:  return nil",
          "",
          "[Removed Lines]",
          "89:  response.State = make(map[string]string, 1)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "client/allocrunner/taskrunner/dynamic_users_hook_test.go||client/allocrunner/taskrunner/dynamic_users_hook_test.go": [
          "File: client/allocrunner/taskrunner/dynamic_users_hook_test.go -> client/allocrunner/taskrunner/dynamic_users_hook_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  must.NoError(t, h.Prestart(ctx, request, response))",
          "36: }",
          "38: func TestTaskRunner_DynamicUsersHook_Prestart_unnecessary(t *testing.T) {",
          "39:  ci.Parallel(t)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: func TestTaskRunner_DynamicUsersHook_Prestart_State(t *testing.T) {",
          "39:  ci.Parallel(t)",
          "41:  const capable = false",
          "42:  ctx := context.Background()",
          "43:  logger := testlog.HCLogger(t)",
          "45:  var pool dynamic.Pool = nil",
          "46:  request := &interfaces.TaskPrestartRequest{",
          "47:   Task: &structs.Task{},",
          "48:   PreviousState: map[string]string{",
          "49:    dynamicUsersStateKey: \"1\",",
          "50:   },",
          "51:  }",
          "53:  response := &interfaces.TaskPrestartResponse{}",
          "54:  h := newDynamicUsersHook(ctx, capable, logger, pool)",
          "57:  h.usable = true",
          "59:  must.NoError(t, h.Prestart(ctx, request, response))",
          "63:  user, ok := response.State[dynamicUsersStateKey]",
          "64:  must.True(t, ok)",
          "65:  must.Eq(t, \"1\", user)",
          "66: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}