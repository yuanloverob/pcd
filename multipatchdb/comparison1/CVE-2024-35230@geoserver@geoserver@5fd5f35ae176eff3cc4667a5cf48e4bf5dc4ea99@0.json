{
  "cve_id": "CVE-2024-35230",
  "cve_desc": "GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. In affected versions the welcome and about page includes version and revision information about the software in use (including library and components used). This information is sensitive from a security point of view because it allows software used by the server to be easily identified. This issue has been patched in version 2.26.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "geoserver/geoserver",
  "patch_hash": "5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99",
  "patch_info": {
    "commit_hash": "5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99",
    "repo": "geoserver/geoserver",
    "commit_url": "https://github.com/geoserver/geoserver/commit/5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99",
    "files": [
      "doc/en/user/source/configuration/properties/index.rst",
      "doc/en/user/source/production/config.rst",
      "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
      "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
      "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
      "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
    ],
    "message": "[GEOS-11401] Introduce environmental variables for Module Status page\n\nturn off system-environment and system-property based on environement variable (default = don't show\nadd doc\nuse optional.empty()\nchanges from miceg's review\nchanges from miceg's review\njody and andrea feedback\ndoc changes - miceg",
    "before_after_code_files": [
      "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
      "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
      "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
      "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
    ]
  },
  "patch_diff": {
    "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java": [
      "File: src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java -> src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import java.util.Map.Entry;",
      "9: import java.util.Optional;",
      "12: public class SystemEnvironmentStatus implements ModuleStatus {",
      "14:     @Override",
      "15:     public String getModule() {",
      "16:         return \"system-environment\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10: import java.util.logging.Level;",
      "11: import java.util.logging.Logger;",
      "12: import org.geotools.util.logging.Logging;",
      "17:     private static final Logger LOGGER = Logging.getLogger(SystemEnvironmentStatus.class);",
      "24:     public static final String SystemEnvironmentStatusEnabledEnvironmentVar =",
      "25:             \"GEOSERVER_MODULE_SYSTEM_ENVIRONMENT_STATUS_ENABLED\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "41:         return true;",
      "42:     }",
      "44:     @Override",
      "45:     public Optional<String> getMessage() {",
      "46:         StringBuffer result = new StringBuffer();",
      "47:         for (Entry<String, String> entry : System.getenv().entrySet()) {",
      "48:             result.append(entry.getKey().toString() + \"=\" + entry.getValue().toString() + \"\\n\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58:     String getEnvironmentVariable(String envVar) {",
      "59:         return System.getenv(envVar);",
      "60:     }",
      "69:     public boolean isShow() {",
      "70:         String val = getEnvironmentVariable(SystemEnvironmentStatusEnabledEnvironmentVar);",
      "71:         if (val == null) {",
      "72:             return false; // not defined -> default",
      "73:         }",
      "74:         if (val.equalsIgnoreCase(\"true\") || val.equalsIgnoreCase(\"false\")) {",
      "75:             return val.equalsIgnoreCase(\"true\");",
      "76:         }",
      "77:         LOGGER.log(",
      "78:                 Level.WARNING,",
      "79:                 String.format(",
      "80:                         \"environment variable '%s' should be 'true' or 'false', but was '%s'\",",
      "81:                         SystemEnvironmentStatusEnabledEnvironmentVar, val));",
      "82:         return false; // bad value -> default",
      "83:     }",
      "87:         if (!isShow()) {",
      "88:             var message =",
      "89:                     String.format(",
      "90:                             \"Environment variables hidden for security reasons.  Set the environment variable '%s' to 'true' to see them.\",",
      "91:                             SystemEnvironmentStatusEnabledEnvironmentVar);",
      "92:             return Optional.of(message);",
      "93:         }",
      "",
      "---------------"
    ],
    "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java": [
      "File: src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java -> src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import java.util.Map.Entry;",
      "9: import java.util.Optional;",
      "11: public class SystemPropertyStatus implements ModuleStatus {",
      "13:     @Override",
      "14:     public String getModule() {",
      "15:         return \"system-properties\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10: import java.util.logging.Level;",
      "11: import java.util.logging.Logger;",
      "12: import org.geotools.util.logging.Logging;",
      "16:     private static final Logger LOGGER = Logging.getLogger(SystemPropertyStatus.class);",
      "23:     public static final String SystemPropertyStatusEnabledEnvironmentVar =",
      "24:             \"GEOSERVER_MODULE_SYSTEM_PROPERTY_STATUS_ENABLED\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "40:         return true;",
      "41:     }",
      "43:     @Override",
      "44:     public Optional<String> getMessage() {",
      "45:         StringBuffer result = new StringBuffer();",
      "46:         for (Entry<Object, Object> entry : System.getProperties().entrySet()) {",
      "47:             result.append(entry.getKey().toString() + \"=\" + entry.getValue().toString() + \"\\n\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57:     String getEnvironmentVariable(String envVar) {",
      "58:         return System.getenv(envVar);",
      "59:     }",
      "68:     public boolean isShow() {",
      "69:         String val = getEnvironmentVariable(SystemPropertyStatusEnabledEnvironmentVar);",
      "70:         if (val == null) {",
      "71:             return false; // not defined -> default",
      "72:         }",
      "73:         if (val.equalsIgnoreCase(\"true\") || val.equalsIgnoreCase(\"false\")) {",
      "74:             return val.equalsIgnoreCase(\"true\");",
      "75:         }",
      "76:         LOGGER.log(",
      "77:                 Level.WARNING,",
      "78:                 String.format(",
      "79:                         \"environment variable '%s' should be 'true' or 'false', but was '%s'\",",
      "80:                         SystemPropertyStatusEnabledEnvironmentVar, val));",
      "81:         return false; // bad value -> default",
      "82:     }",
      "86:         if (!isShow()) {",
      "87:             var message =",
      "88:                     String.format(",
      "89:                             \"Java system properties hidden for security reasons.  Set the environment variable '%s' to 'true' to see them.\",",
      "90:                             SystemPropertyStatusEnabledEnvironmentVar);",
      "91:             return Optional.of(message);",
      "92:         }",
      "",
      "---------------"
    ],
    "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java": [
      "File: src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import static org.junit.Assert.assertFalse;",
      "9: import static org.junit.Assert.assertTrue;",
      "11: import java.util.HashMap;",
      "12: import java.util.Map;",
      "13: import java.util.logging.Logger;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11: import java.util.ArrayList;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "26:         String key = System.getenv().keySet().iterator().next();",
      "27:         String value = System.getenv(key);",
      "30:         assertTrue(status.getMessage().isPresent());",
      "31:         assertTrue(status.getMessage().get().contains(key));",
      "32:         assertTrue(status.getMessage().get().contains(value));",
      "33:     }",
      "35:     @Test",
      "36:     public void testGeoServerEnvironmentDefaultValue() {",
      "37:         System.clearProperty(\"ALLOW_ENV_PARAMETRIZATION\");",
      "",
      "[Removed Lines]",
      "29:         SystemEnvironmentStatus status = new SystemEnvironmentStatus();",
      "",
      "[Added Lines]",
      "30:         SystemEnvironmentStatus status =",
      "31:                 new SystemEnvironmentStatus() {",
      "32:                     String getEnvironmentVariable(String envVar) {",
      "33:                         return \"true\";",
      "34:                     }",
      "35:                 };",
      "46:     @Test",
      "47:     public void testEnabled() {",
      "48:         final var VALUE = new ArrayList<String>();",
      "55:         SystemEnvironmentStatus status =",
      "56:                 new SystemEnvironmentStatus() {",
      "57:                     String getEnvironmentVariable(String envVar) {",
      "58:                         if (envVar.equals(",
      "59:                                 SystemEnvironmentStatus",
      "60:                                         .SystemEnvironmentStatusEnabledEnvironmentVar)) {",
      "61:                             if (VALUE.isEmpty()) {",
      "62:                                 return null;",
      "63:                             }",
      "64:                             return VALUE.get(0);",
      "65:                         }",
      "66:                         throw new RuntimeException(\"bad var\");",
      "67:                     }",
      "68:                 };",
      "70:         VALUE.clear();",
      "71:         VALUE.add(\"true\");",
      "72:         assertTrue(status.isShow());",
      "73:         assertTrue(!status.getMessage().isEmpty());",
      "75:         VALUE.clear();",
      "76:         VALUE.add(\"TRUE\");",
      "77:         assertTrue(status.isShow());",
      "78:         assertTrue(!status.getMessage().isEmpty());",
      "80:         VALUE.clear();",
      "81:         VALUE.add(\"FALSE\");",
      "82:         assertFalse(status.isShow());",
      "83:         assertTrue(",
      "84:                 status.getMessage()",
      "85:                         .get()",
      "86:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
      "88:         VALUE.clear();",
      "89:         VALUE.add(\"false\");",
      "90:         assertFalse(status.isShow());",
      "91:         assertTrue(",
      "92:                 status.getMessage()",
      "93:                         .get()",
      "94:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
      "97:         VALUE.clear();",
      "98:         assertFalse(status.isShow());",
      "99:         assertTrue(",
      "100:                 status.getMessage()",
      "101:                         .get()",
      "102:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
      "105:         VALUE.clear();",
      "106:         VALUE.add(\"maybe\");",
      "107:         assertFalse(status.isShow());",
      "108:         assertTrue(",
      "109:                 status.getMessage()",
      "110:                         .get()",
      "111:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
      "112:     }",
      "",
      "---------------"
    ],
    "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java": [
      "File: src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "6: package org.geoserver.platform;",
      "8: import static org.junit.Assert.assertTrue;",
      "10: import org.junit.Test;",
      "12: public class SystemPropertiesStatusTest {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8: import static org.junit.Assert.assertFalse;",
      "11: import java.util.ArrayList;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "18:     @Test",
      "19:     public void testSystemPropertiesStatus() {",
      "20:         System.setProperty(KEY, VALUE);",
      "22:         assertTrue(status.getMessage().isPresent());",
      "23:         assertTrue(status.getMessage().get().contains(KEY));",
      "24:         assertTrue(status.getMessage().get().contains(VALUE));",
      "25:     }",
      "26: }",
      "",
      "[Removed Lines]",
      "21:         SystemPropertyStatus status = new SystemPropertyStatus();",
      "",
      "[Added Lines]",
      "24:         SystemPropertyStatus status =",
      "25:                 new SystemPropertyStatus() {",
      "26:                     String getEnvironmentVariable(String envVar) {",
      "27:                         return \"true\";",
      "28:                     }",
      "29:                 };",
      "40:     @Test",
      "41:     public void testEnabled() {",
      "42:         final var VALUE = new ArrayList<String>();",
      "49:         SystemPropertyStatus status =",
      "50:                 new SystemPropertyStatus() {",
      "51:                     String getEnvironmentVariable(String envVar) {",
      "52:                         if (envVar.equals(",
      "53:                                 SystemPropertyStatus.SystemPropertyStatusEnabledEnvironmentVar)) {",
      "54:                             if (VALUE.isEmpty()) {",
      "55:                                 return null;",
      "56:                             }",
      "57:                             return VALUE.get(0);",
      "58:                         }",
      "59:                         throw new RuntimeException(\"bad var\");",
      "60:                     }",
      "61:                 };",
      "63:         VALUE.clear();",
      "64:         VALUE.add(\"true\");",
      "65:         assertTrue(status.isShow());",
      "66:         assertTrue(!status.getMessage().isEmpty());",
      "68:         VALUE.clear();",
      "69:         VALUE.add(\"TRUE\");",
      "70:         assertTrue(status.isShow());",
      "71:         assertTrue(!status.getMessage().isEmpty());",
      "73:         VALUE.clear();",
      "74:         VALUE.add(\"FALSE\");",
      "75:         assertFalse(status.isShow());",
      "76:         assertTrue(",
      "77:                 status.getMessage()",
      "78:                         .get()",
      "79:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
      "81:         VALUE.clear();",
      "82:         VALUE.add(\"false\");",
      "83:         assertFalse(status.isShow());",
      "84:         assertTrue(",
      "85:                 status.getMessage()",
      "86:                         .get()",
      "87:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
      "90:         VALUE.clear();",
      "91:         assertFalse(status.isShow());",
      "92:         assertTrue(",
      "93:                 status.getMessage()",
      "94:                         .get()",
      "95:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
      "98:         VALUE.clear();",
      "99:         VALUE.add(\"maybe\");",
      "100:         assertFalse(status.isShow());",
      "101:         assertTrue(",
      "102:                 status.getMessage()",
      "103:                         .get()",
      "104:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
      "105:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "af94c9aa687fce404eb8ad37caed9efbe8ea5b8f",
      "candidate_info": {
        "commit_hash": "af94c9aa687fce404eb8ad37caed9efbe8ea5b8f",
        "repo": "geoserver/geoserver",
        "commit_url": "https://github.com/geoserver/geoserver/commit/af94c9aa687fce404eb8ad37caed9efbe8ea5b8f",
        "files": [
          "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
        ],
        "message": "Fixing the QA build",
        "before_after_code_files": [
          "src/platform/src/test/javorg/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "src/platform/src/test/javorg/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
            "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
          ],
          "candidate": [
            "src/platform/src/test/javorg/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
            "src/platform/src/test/javorg/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/platform/src/test/javorg/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java": [
          "File: src/platform/src/test/javorg/geoserver/platform/SystemEnvironmentTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:                     @Override",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:                     @Override",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:         assertFalse(status.getMessage().isEmpty());",
          "80:         assertFalse(status.getMessage().isEmpty());",
          "",
          "---------------"
        ],
        "src/platform/src/test/javorg/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java": [
          "File: src/platform/src/test/javorg/geoserver/platform/SystemPropertiesStatusTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:                     @Override",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:                     @Override",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:         assertFalse(status.getMessage().isEmpty());",
          "73:         assertFalse(status.getMessage().isEmpty());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7f46c2d76bd7e4484fbb78731e15967d5a607a8",
      "candidate_info": {
        "commit_hash": "a7f46c2d76bd7e4484fbb78731e15967d5a607a8",
        "repo": "geoserver/geoserver",
        "commit_url": "https://github.com/geoserver/geoserver/commit/a7f46c2d76bd7e4484fbb78731e15967d5a607a8",
        "files": [
          "doc/en/user/source/configuration/properties/index.rst",
          "doc/en/user/source/production/config.rst",
          "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
          "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
          "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
        ],
        "message": "[GEOS-11401] Introduce environmental variables for Module Status page\n\nturn off system-environment and system-property based on environement variable (default = don't show\nadd doc\nuse optional.empty()\nchanges from miceg's review\nchanges from miceg's review\njody and andrea feedback\ndoc changes - miceg",
        "before_after_code_files": [
          "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
          "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
          "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
            "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
            "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
            "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
          ],
          "candidate": [
            "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
            "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
            "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
            "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java": [
          "File: src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java -> src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import java.util.Map.Entry;",
          "9: import java.util.Optional;",
          "12: public class SystemEnvironmentStatus implements ModuleStatus {",
          "14:     @Override",
          "15:     public String getModule() {",
          "16:         return \"system-environment\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import java.util.logging.Level;",
          "11: import java.util.logging.Logger;",
          "12: import org.geotools.util.logging.Logging;",
          "17:     private static final Logger LOGGER = Logging.getLogger(SystemEnvironmentStatus.class);",
          "24:     public static final String SystemEnvironmentStatusEnabledEnvironmentVar =",
          "25:             \"GEOSERVER_MODULE_SYSTEM_ENVIRONMENT_STATUS_ENABLED\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:         return true;",
          "42:     }",
          "44:     @Override",
          "45:     public Optional<String> getMessage() {",
          "46:         StringBuffer result = new StringBuffer();",
          "47:         for (Entry<String, String> entry : System.getenv().entrySet()) {",
          "48:             result.append(entry.getKey().toString() + \"=\" + entry.getValue().toString() + \"\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:     String getEnvironmentVariable(String envVar) {",
          "59:         return System.getenv(envVar);",
          "60:     }",
          "69:     public boolean isShow() {",
          "70:         String val = getEnvironmentVariable(SystemEnvironmentStatusEnabledEnvironmentVar);",
          "71:         if (val == null) {",
          "72:             return false; // not defined -> default",
          "73:         }",
          "74:         if (val.equalsIgnoreCase(\"true\") || val.equalsIgnoreCase(\"false\")) {",
          "75:             return val.equalsIgnoreCase(\"true\");",
          "76:         }",
          "77:         LOGGER.log(",
          "78:                 Level.WARNING,",
          "79:                 String.format(",
          "80:                         \"environment variable '%s' should be 'true' or 'false', but was '%s'\",",
          "81:                         SystemEnvironmentStatusEnabledEnvironmentVar, val));",
          "82:         return false; // bad value -> default",
          "83:     }",
          "87:         if (!isShow()) {",
          "88:             var message =",
          "89:                     String.format(",
          "90:                             \"Environment variables hidden for security reasons.  Set the environment variable '%s' to 'true' to see them.\",",
          "91:                             SystemEnvironmentStatusEnabledEnvironmentVar);",
          "92:             return Optional.of(message);",
          "93:         }",
          "",
          "---------------"
        ],
        "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java": [
          "File: src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java -> src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import java.util.Map.Entry;",
          "9: import java.util.Optional;",
          "11: public class SystemPropertyStatus implements ModuleStatus {",
          "13:     @Override",
          "14:     public String getModule() {",
          "15:         return \"system-properties\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import java.util.logging.Level;",
          "11: import java.util.logging.Logger;",
          "12: import org.geotools.util.logging.Logging;",
          "16:     private static final Logger LOGGER = Logging.getLogger(SystemPropertyStatus.class);",
          "23:     public static final String SystemPropertyStatusEnabledEnvironmentVar =",
          "24:             \"GEOSERVER_MODULE_SYSTEM_PROPERTY_STATUS_ENABLED\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:         return true;",
          "41:     }",
          "43:     @Override",
          "44:     public Optional<String> getMessage() {",
          "45:         StringBuffer result = new StringBuffer();",
          "46:         for (Entry<Object, Object> entry : System.getProperties().entrySet()) {",
          "47:             result.append(entry.getKey().toString() + \"=\" + entry.getValue().toString() + \"\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:     String getEnvironmentVariable(String envVar) {",
          "58:         return System.getenv(envVar);",
          "59:     }",
          "68:     public boolean isShow() {",
          "69:         String val = getEnvironmentVariable(SystemPropertyStatusEnabledEnvironmentVar);",
          "70:         if (val == null) {",
          "71:             return false; // not defined -> default",
          "72:         }",
          "73:         if (val.equalsIgnoreCase(\"true\") || val.equalsIgnoreCase(\"false\")) {",
          "74:             return val.equalsIgnoreCase(\"true\");",
          "75:         }",
          "76:         LOGGER.log(",
          "77:                 Level.WARNING,",
          "78:                 String.format(",
          "79:                         \"environment variable '%s' should be 'true' or 'false', but was '%s'\",",
          "80:                         SystemPropertyStatusEnabledEnvironmentVar, val));",
          "81:         return false; // bad value -> default",
          "82:     }",
          "86:         if (!isShow()) {",
          "87:             var message =",
          "88:                     String.format(",
          "89:                             \"Java system properties hidden for security reasons.  Set the environment variable '%s' to 'true' to see them.\",",
          "90:                             SystemPropertyStatusEnabledEnvironmentVar);",
          "91:             return Optional.of(message);",
          "92:         }",
          "",
          "---------------"
        ],
        "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java": [
          "File: src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import static org.junit.Assert.assertFalse;",
          "9: import static org.junit.Assert.assertTrue;",
          "11: import java.util.HashMap;",
          "12: import java.util.Map;",
          "13: import java.util.logging.Logger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: import java.util.ArrayList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         String key = System.getenv().keySet().iterator().next();",
          "27:         String value = System.getenv(key);",
          "30:         assertTrue(status.getMessage().isPresent());",
          "31:         assertTrue(status.getMessage().get().contains(key));",
          "32:         assertTrue(status.getMessage().get().contains(value));",
          "33:     }",
          "35:     @Test",
          "36:     public void testGeoServerEnvironmentDefaultValue() {",
          "37:         System.clearProperty(\"ALLOW_ENV_PARAMETRIZATION\");",
          "",
          "[Removed Lines]",
          "29:         SystemEnvironmentStatus status = new SystemEnvironmentStatus();",
          "",
          "[Added Lines]",
          "30:         SystemEnvironmentStatus status =",
          "31:                 new SystemEnvironmentStatus() {",
          "32:                     String getEnvironmentVariable(String envVar) {",
          "33:                         return \"true\";",
          "34:                     }",
          "35:                 };",
          "46:     @Test",
          "47:     public void testEnabled() {",
          "48:         final var VALUE = new ArrayList<String>();",
          "55:         SystemEnvironmentStatus status =",
          "56:                 new SystemEnvironmentStatus() {",
          "57:                     String getEnvironmentVariable(String envVar) {",
          "58:                         if (envVar.equals(",
          "59:                                 SystemEnvironmentStatus",
          "60:                                         .SystemEnvironmentStatusEnabledEnvironmentVar)) {",
          "61:                             if (VALUE.isEmpty()) {",
          "62:                                 return null;",
          "63:                             }",
          "64:                             return VALUE.get(0);",
          "65:                         }",
          "66:                         throw new RuntimeException(\"bad var\");",
          "67:                     }",
          "68:                 };",
          "70:         VALUE.clear();",
          "71:         VALUE.add(\"true\");",
          "72:         assertTrue(status.isShow());",
          "73:         assertTrue(!status.getMessage().isEmpty());",
          "75:         VALUE.clear();",
          "76:         VALUE.add(\"TRUE\");",
          "77:         assertTrue(status.isShow());",
          "78:         assertTrue(!status.getMessage().isEmpty());",
          "80:         VALUE.clear();",
          "81:         VALUE.add(\"FALSE\");",
          "82:         assertFalse(status.isShow());",
          "83:         assertTrue(",
          "84:                 status.getMessage()",
          "85:                         .get()",
          "86:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "88:         VALUE.clear();",
          "89:         VALUE.add(\"false\");",
          "90:         assertFalse(status.isShow());",
          "91:         assertTrue(",
          "92:                 status.getMessage()",
          "93:                         .get()",
          "94:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "97:         VALUE.clear();",
          "98:         assertFalse(status.isShow());",
          "99:         assertTrue(",
          "100:                 status.getMessage()",
          "101:                         .get()",
          "102:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "105:         VALUE.clear();",
          "106:         VALUE.add(\"maybe\");",
          "107:         assertFalse(status.isShow());",
          "108:         assertTrue(",
          "109:                 status.getMessage()",
          "110:                         .get()",
          "111:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "112:     }",
          "",
          "---------------"
        ],
        "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java": [
          "File: src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: package org.geoserver.platform;",
          "8: import static org.junit.Assert.assertTrue;",
          "10: import org.junit.Test;",
          "12: public class SystemPropertiesStatusTest {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import static org.junit.Assert.assertFalse;",
          "11: import java.util.ArrayList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     @Test",
          "19:     public void testSystemPropertiesStatus() {",
          "20:         System.setProperty(KEY, VALUE);",
          "22:         assertTrue(status.getMessage().isPresent());",
          "23:         assertTrue(status.getMessage().get().contains(KEY));",
          "24:         assertTrue(status.getMessage().get().contains(VALUE));",
          "25:     }",
          "26: }",
          "",
          "[Removed Lines]",
          "21:         SystemPropertyStatus status = new SystemPropertyStatus();",
          "",
          "[Added Lines]",
          "24:         SystemPropertyStatus status =",
          "25:                 new SystemPropertyStatus() {",
          "26:                     String getEnvironmentVariable(String envVar) {",
          "27:                         return \"true\";",
          "28:                     }",
          "29:                 };",
          "40:     @Test",
          "41:     public void testEnabled() {",
          "42:         final var VALUE = new ArrayList<String>();",
          "49:         SystemPropertyStatus status =",
          "50:                 new SystemPropertyStatus() {",
          "51:                     String getEnvironmentVariable(String envVar) {",
          "52:                         if (envVar.equals(",
          "53:                                 SystemPropertyStatus.SystemPropertyStatusEnabledEnvironmentVar)) {",
          "54:                             if (VALUE.isEmpty()) {",
          "55:                                 return null;",
          "56:                             }",
          "57:                             return VALUE.get(0);",
          "58:                         }",
          "59:                         throw new RuntimeException(\"bad var\");",
          "60:                     }",
          "61:                 };",
          "63:         VALUE.clear();",
          "64:         VALUE.add(\"true\");",
          "65:         assertTrue(status.isShow());",
          "66:         assertTrue(!status.getMessage().isEmpty());",
          "68:         VALUE.clear();",
          "69:         VALUE.add(\"TRUE\");",
          "70:         assertTrue(status.isShow());",
          "71:         assertTrue(!status.getMessage().isEmpty());",
          "73:         VALUE.clear();",
          "74:         VALUE.add(\"FALSE\");",
          "75:         assertFalse(status.isShow());",
          "76:         assertTrue(",
          "77:                 status.getMessage()",
          "78:                         .get()",
          "79:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "81:         VALUE.clear();",
          "82:         VALUE.add(\"false\");",
          "83:         assertFalse(status.isShow());",
          "84:         assertTrue(",
          "85:                 status.getMessage()",
          "86:                         .get()",
          "87:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "90:         VALUE.clear();",
          "91:         assertFalse(status.isShow());",
          "92:         assertTrue(",
          "93:                 status.getMessage()",
          "94:                         .get()",
          "95:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "98:         VALUE.clear();",
          "99:         VALUE.add(\"maybe\");",
          "100:         assertFalse(status.isShow());",
          "101:         assertTrue(",
          "102:                 status.getMessage()",
          "103:                         .get()",
          "104:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "105:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ffbfa59e4c907873de9249c40eab729681b9480",
      "candidate_info": {
        "commit_hash": "6ffbfa59e4c907873de9249c40eab729681b9480",
        "repo": "geoserver/geoserver",
        "commit_url": "https://github.com/geoserver/geoserver/commit/6ffbfa59e4c907873de9249c40eab729681b9480",
        "files": [
          "doc/en/user/source/configuration/properties/index.rst",
          "doc/en/user/source/production/config.rst",
          "src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
          "src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
          "src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
        ],
        "message": "[GEOS-11401] Introduce environmental variables for Module Status page\n\nturn off system-environment and system-property based on environement variable (default = don't show\nadd doc\nuse optional.empty()\nchanges from miceg's review\nchanges from miceg's review\njody and andrea feedback\ndoc changes - miceg",
        "before_after_code_files": [
          "src/platform/src/main/javorg/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
          "src/platform/src/main/javorg/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
          "src/platform/src/test/javorg/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "src/platform/src/test/javorg/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/platform/src/main/javorg/geoserver/platform/SystemEnvironmentStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java": [
          "File: src/platform/src/main/javorg/geoserver/platform/SystemEnvironmentStatus.java -> src/platform/src/main/java/org/geoserver/platform/SystemEnvironmentStatus.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import java.util.logging.Level;",
          "11: import java.util.logging.Logger;",
          "12: import org.geotools.util.logging.Logging;",
          "17:     private static final Logger LOGGER = Logging.getLogger(SystemEnvironmentStatus.class);",
          "24:     public static final String SystemEnvironmentStatusEnabledEnvironmentVar =",
          "25:             \"GEOSERVER_MODULE_SYSTEM_ENVIRONMENT_STATUS_ENABLED\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:     String getEnvironmentVariable(String envVar) {",
          "59:         return System.getenv(envVar);",
          "60:     }",
          "69:     public boolean isShow() {",
          "70:         String val = getEnvironmentVariable(SystemEnvironmentStatusEnabledEnvironmentVar);",
          "71:         if (val == null) {",
          "72:             return false; // not defined -> default",
          "73:         }",
          "74:         if (val.equalsIgnoreCase(\"true\") || val.equalsIgnoreCase(\"false\")) {",
          "75:             return val.equalsIgnoreCase(\"true\");",
          "76:         }",
          "77:         LOGGER.log(",
          "78:                 Level.WARNING,",
          "79:                 String.format(",
          "80:                         \"environment variable '%s' should be 'true' or 'false', but was '%s'\",",
          "81:                         SystemEnvironmentStatusEnabledEnvironmentVar, val));",
          "82:         return false; // bad value -> default",
          "83:     }",
          "87:         if (!isShow()) {",
          "88:             var message =",
          "89:                     String.format(",
          "90:                             \"Environment variables hidden for security reasons.  Set the environment variable '%s' to 'true' to see them.\",",
          "91:                             SystemEnvironmentStatusEnabledEnvironmentVar);",
          "92:             return Optional.of(message);",
          "93:         }",
          "",
          "---------------"
        ],
        "src/platform/src/main/javorg/geoserver/platform/SystemPropertyStatus.java||src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java": [
          "File: src/platform/src/main/javorg/geoserver/platform/SystemPropertyStatus.java -> src/platform/src/main/java/org/geoserver/platform/SystemPropertyStatus.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import java.util.logging.Level;",
          "11: import java.util.logging.Logger;",
          "12: import org.geotools.util.logging.Logging;",
          "16:     private static final Logger LOGGER = Logging.getLogger(SystemPropertyStatus.class);",
          "23:     public static final String SystemPropertyStatusEnabledEnvironmentVar =",
          "24:             \"GEOSERVER_MODULE_SYSTEM_PROPERTY_STATUS_ENABLED\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:     String getEnvironmentVariable(String envVar) {",
          "58:         return System.getenv(envVar);",
          "59:     }",
          "68:     public boolean isShow() {",
          "69:         String val = getEnvironmentVariable(SystemPropertyStatusEnabledEnvironmentVar);",
          "70:         if (val == null) {",
          "71:             return false; // not defined -> default",
          "72:         }",
          "73:         if (val.equalsIgnoreCase(\"true\") || val.equalsIgnoreCase(\"false\")) {",
          "74:             return val.equalsIgnoreCase(\"true\");",
          "75:         }",
          "76:         LOGGER.log(",
          "77:                 Level.WARNING,",
          "78:                 String.format(",
          "79:                         \"environment variable '%s' should be 'true' or 'false', but was '%s'\",",
          "80:                         SystemPropertyStatusEnabledEnvironmentVar, val));",
          "81:         return false; // bad value -> default",
          "82:     }",
          "86:         if (!isShow()) {",
          "87:             var message =",
          "88:                     String.format(",
          "89:                             \"Java system properties hidden for security reasons.  Set the environment variable '%s' to 'true' to see them.\",",
          "90:                             SystemPropertyStatusEnabledEnvironmentVar);",
          "91:             return Optional.of(message);",
          "92:         }",
          "",
          "---------------"
        ],
        "src/platform/src/test/javorg/geoserver/platform/SystemEnvironmentTest.java||src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java": [
          "File: src/platform/src/test/javorg/geoserver/platform/SystemEnvironmentTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemEnvironmentTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: import java.util.ArrayList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:         SystemEnvironmentStatus status =",
          "31:                 new SystemEnvironmentStatus() {",
          "32:                     String getEnvironmentVariable(String envVar) {",
          "33:                         return \"true\";",
          "34:                     }",
          "35:                 };",
          "46:     @Test",
          "47:     public void testEnabled() {",
          "48:         final var VALUE = new ArrayList<String>();",
          "55:         SystemEnvironmentStatus status =",
          "56:                 new SystemEnvironmentStatus() {",
          "57:                     String getEnvironmentVariable(String envVar) {",
          "58:                         if (envVar.equals(",
          "59:                                 SystemEnvironmentStatus",
          "60:                                         .SystemEnvironmentStatusEnabledEnvironmentVar)) {",
          "61:                             if (VALUE.isEmpty()) {",
          "62:                                 return null;",
          "63:                             }",
          "64:                             return VALUE.get(0);",
          "65:                         }",
          "66:                         throw new RuntimeException(\"bad var\");",
          "67:                     }",
          "68:                 };",
          "70:         VALUE.clear();",
          "71:         VALUE.add(\"true\");",
          "72:         assertTrue(status.isShow());",
          "73:         assertTrue(!status.getMessage().isEmpty());",
          "75:         VALUE.clear();",
          "76:         VALUE.add(\"TRUE\");",
          "77:         assertTrue(status.isShow());",
          "78:         assertTrue(!status.getMessage().isEmpty());",
          "80:         VALUE.clear();",
          "81:         VALUE.add(\"FALSE\");",
          "82:         assertFalse(status.isShow());",
          "83:         assertTrue(",
          "84:                 status.getMessage()",
          "85:                         .get()",
          "86:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "88:         VALUE.clear();",
          "89:         VALUE.add(\"false\");",
          "90:         assertFalse(status.isShow());",
          "91:         assertTrue(",
          "92:                 status.getMessage()",
          "93:                         .get()",
          "94:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "97:         VALUE.clear();",
          "98:         assertFalse(status.isShow());",
          "99:         assertTrue(",
          "100:                 status.getMessage()",
          "101:                         .get()",
          "102:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "105:         VALUE.clear();",
          "106:         VALUE.add(\"maybe\");",
          "107:         assertFalse(status.isShow());",
          "108:         assertTrue(",
          "109:                 status.getMessage()",
          "110:                         .get()",
          "111:                         .startsWith(\"Environment variables hidden for security reasons.\"));",
          "112:     }",
          "",
          "---------------"
        ],
        "src/platform/src/test/javorg/geoserver/platform/SystemPropertiesStatusTest.java||src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java": [
          "File: src/platform/src/test/javorg/geoserver/platform/SystemPropertiesStatusTest.java -> src/platform/src/test/java/org/geoserver/platform/SystemPropertiesStatusTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import static org.junit.Assert.assertFalse;",
          "11: import java.util.ArrayList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:         SystemPropertyStatus status =",
          "25:                 new SystemPropertyStatus() {",
          "26:                     String getEnvironmentVariable(String envVar) {",
          "27:                         return \"true\";",
          "28:                     }",
          "29:                 };",
          "40:     @Test",
          "41:     public void testEnabled() {",
          "42:         final var VALUE = new ArrayList<String>();",
          "49:         SystemPropertyStatus status =",
          "50:                 new SystemPropertyStatus() {",
          "51:                     String getEnvironmentVariable(String envVar) {",
          "52:                         if (envVar.equals(",
          "53:                                 SystemPropertyStatus.SystemPropertyStatusEnabledEnvironmentVar)) {",
          "54:                             if (VALUE.isEmpty()) {",
          "55:                                 return null;",
          "56:                             }",
          "57:                             return VALUE.get(0);",
          "58:                         }",
          "59:                         throw new RuntimeException(\"bad var\");",
          "60:                     }",
          "61:                 };",
          "63:         VALUE.clear();",
          "64:         VALUE.add(\"true\");",
          "65:         assertTrue(status.isShow());",
          "66:         assertTrue(!status.getMessage().isEmpty());",
          "68:         VALUE.clear();",
          "69:         VALUE.add(\"TRUE\");",
          "70:         assertTrue(status.isShow());",
          "71:         assertTrue(!status.getMessage().isEmpty());",
          "73:         VALUE.clear();",
          "74:         VALUE.add(\"FALSE\");",
          "75:         assertFalse(status.isShow());",
          "76:         assertTrue(",
          "77:                 status.getMessage()",
          "78:                         .get()",
          "79:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "81:         VALUE.clear();",
          "82:         VALUE.add(\"false\");",
          "83:         assertFalse(status.isShow());",
          "84:         assertTrue(",
          "85:                 status.getMessage()",
          "86:                         .get()",
          "87:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "90:         VALUE.clear();",
          "91:         assertFalse(status.isShow());",
          "92:         assertTrue(",
          "93:                 status.getMessage()",
          "94:                         .get()",
          "95:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "98:         VALUE.clear();",
          "99:         VALUE.add(\"maybe\");",
          "100:         assertFalse(status.isShow());",
          "101:         assertTrue(",
          "102:                 status.getMessage()",
          "103:                         .get()",
          "104:                         .startsWith(\"Java system properties hidden for security reasons.\"));",
          "105:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}