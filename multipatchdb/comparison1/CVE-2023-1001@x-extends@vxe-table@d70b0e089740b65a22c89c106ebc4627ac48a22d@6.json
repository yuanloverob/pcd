{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b574ca7b1a73e3a6bd8d150095a4e8ab2d94e2aa",
      "candidate_info": {
        "commit_hash": "b574ca7b1a73e3a6bd8d150095a4e8ab2d94e2aa",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/b574ca7b1a73e3a6bd8d150095a4e8ab2d94e2aa",
        "files": [
          "packages/grid/src/grid.js"
        ],
        "message": "fix grid loading",
        "before_after_code_files": [
          "packages/grid/src/grid.js||packages/grid/src/grid.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/grid/src/grid.js||packages/grid/src/grid.js": [
          "File: packages/grid/src/grid.js -> packages/grid/src/grid.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:                 }",
          "594:                 return { status: true }",
          "595:               }).catch(() => {",
          "596:                 return { status: false }",
          "597:               })",
          "598:           } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "596:                 this.tableLoading = false",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ebc0110e05141fdcf62ffcde660b86dad1dcc7f8",
      "candidate_info": {
        "commit_hash": "ebc0110e05141fdcf62ffcde660b86dad1dcc7f8",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/ebc0110e05141fdcf62ffcde660b86dad1dcc7f8",
        "files": [
          "packages/grid/src/grid.js"
        ],
        "message": "\u4fee\u6539grid\u5de5\u5177\u680f\u62a5\u9519\u95ee\u9898",
        "before_after_code_files": [
          "packages/grid/src/grid.js||packages/grid/src/grid.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/grid/src/grid.js||packages/grid/src/grid.js": [
          "File: packages/grid/src/grid.js -> packages/grid/src/grid.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "748:         }",
          "749:         default: {",
          "750:           const gCommandOpts = VXETable.commands.get(code)",
          "756:             }",
          "757:           }",
          "758:         }",
          "",
          "[Removed Lines]",
          "751:           if (gCommandOpts.commandMethod) {",
          "752:             gCommandOpts.commandMethod({ code, button, $grid: this, $table: $xetable }, ...args)",
          "753:           } else {",
          "754:             if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "755:               errLog('vxe.error.notCommands', [code])",
          "",
          "[Added Lines]",
          "751:           if (gCommandOpts) {",
          "752:             if (gCommandOpts.commandMethod) {",
          "753:               gCommandOpts.commandMethod({ code, button, $grid: this, $table: $xetable }, ...args)",
          "754:             } else {",
          "755:               if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "756:                 errLog('vxe.error.notCommands', [code])",
          "757:               }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0c218796aafb2ff7ef11fc5efb58491b261faad",
      "candidate_info": {
        "commit_hash": "a0c218796aafb2ff7ef11fc5efb58491b261faad",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/a0c218796aafb2ff7ef11fc5efb58491b261faad",
        "files": [
          "examples/views/table/advanced/Toolbar.vue",
          "packages/checkbox/src/group.js",
          "packages/custom/src/mixin.js",
          "packages/custom/src/panel.js",
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js",
          "packages/radio/src/group.js",
          "packages/table/src/columnInfo.js",
          "packages/table/src/methods.js",
          "packages/table/src/table.js",
          "styles/custom.scss"
        ],
        "message": "\u91cd\u6784\u81ea\u5b9a\u4e49\u5217\uff0c\u652f\u6301\u62d6\u62fd\u6392\u5e8f",
        "before_after_code_files": [
          "examples/views/table/advanced/Toolbar.vue||examples/views/table/advanced/Toolbar.vue",
          "packages/checkbox/src/group.js||packages/checkbox/src/group.js",
          "packages/custom/src/mixin.js||packages/custom/src/mixin.js",
          "packages/custom/src/panel.js||packages/custom/src/panel.js",
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js",
          "packages/radio/src/group.js||packages/radio/src/group.js",
          "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "styles/custom.scss||styles/custom.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/views/table/advanced/Toolbar.vue||examples/views/table/advanced/Toolbar.vue": [
          "File: examples/views/table/advanced/Toolbar.vue -> examples/views/table/advanced/Toolbar.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:       height=\"300\"",
          "13:       ref=\"xTable1\"",
          "14:       :print-config=\"{}\"",
          "15:       :data=\"tableData1\">",
          "16:       <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "17:       <vxe-colgroup title=\"\u5206\u7ec4\u4fe1\u606f\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:       :custom-config=\"{mode: 'popup'}\"",
          "",
          "---------------"
        ],
        "packages/checkbox/src/group.js||packages/checkbox/src/group.js": [
          "File: packages/checkbox/src/group.js -> packages/checkbox/src/group.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     },",
          "44:     valueField () {",
          "45:       return this.propsOpts.value || 'value'",
          "46:     }",
          "47:   },",
          "48:   render (h) {",
          "50:     const defaultSlot = $scopedSlots.default",
          "51:     return h('div', {",
          "52:       class: 'vxe-checkbox-group'",
          "",
          "[Removed Lines]",
          "49:     const { $scopedSlots, options, valueField, labelField } = this",
          "",
          "[Added Lines]",
          "46:     },",
          "47:     disabledField () {",
          "48:       return this.propsOpts.disabled || 'disabled'",
          "52:     const { $scopedSlots, options, valueField, labelField, disabledField } = this",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:       return h('vxe-checkbox', {",
          "55:         props: {",
          "56:           label: item[valueField],",
          "58:         }",
          "59:       })",
          "60:     }) : []))",
          "",
          "[Removed Lines]",
          "57:           content: item[labelField]",
          "",
          "[Added Lines]",
          "60:           content: item[labelField],",
          "61:           disabled: item[disabledField]",
          "",
          "---------------"
        ],
        "packages/custom/src/mixin.js||packages/custom/src/mixin.js": [
          "File: packages/custom/src/mixin.js -> packages/custom/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: export default {",
          "2:   methods: {",
          "3:     _openCustom () {",
          "5:       customStore.visible = true",
          "6:       initStore.custom = true",
          "7:       this.checkCustomStatus()",
          "8:       this.calcMaxHeight()",
          "9:       return this.$nextTick().then(() => this.calcMaxHeight())",
          "",
          "[Removed Lines]",
          "4:       const { initStore, customStore } = this",
          "",
          "[Added Lines]",
          "4:       const { initStore, customStore, collectColumn } = this",
          "7:       this.customColumnList = collectColumn.slice(0)",
          "",
          "---------------"
        ],
        "packages/custom/src/panel.js||packages/custom/src/panel.js": [
          "File: packages/custom/src/panel.js -> packages/custom/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import UtilTools from '../../tools/utils'",
          "2: import GlobalConfig from '../../v-x-e-table/src/conf'",
          "3: import XEUtils from 'xe-utils'",
          "5: function renderSimplePanel (h, _vm) {",
          "6:   const { $xetable, customStore } = _vm",
          "8:   const { maxHeight } = customStore",
          "9:   const { checkMethod, visibleMethod, trigger } = customOpts",
          "10:   const colVNs = []",
          "11:   const customWrapperOns = {}",
          "13:   if (trigger === 'hover') {",
          "16:   }",
          "18:     const isVisible = visibleMethod ? visibleMethod({ column }) : true",
          "19:     if (isVisible) {",
          "20:       const isChecked = column.visible",
          "21:       const isIndeterminate = column.halfVisible",
          "23:       const isColGroup = column.children && column.children.length",
          "24:       const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "25:       colVNs.push(",
          "26:         h('li', {",
          "",
          "[Removed Lines]",
          "7:   const { customOpts, collectColumn, isMaxFixedColumn } = $xetable",
          "14:     customWrapperOns.onMouseenter = _vm.handleWrapperMouseenterEvent",
          "15:     customWrapperOns.onMouseleave = _vm.handleWrapperMouseleaveEvent",
          "17:   XEUtils.eachTree(collectColumn, (column, index, items, path, parent) => {",
          "22:       const colTitle = UtilTools.formatText(column.getTitle(), 1)",
          "",
          "[Added Lines]",
          "2: import DomTools from '../../tools/dom'",
          "6: const { formatText } = UtilTools",
          "7: const { addClass, removeClass } = DomTools",
          "9: function updateDropHint (_vm, evnt) {",
          "10:   const { $refs } = _vm",
          "11:   const dragHintEl = $refs.dragHintElemRef",
          "12:   const bodyEl = $refs.bodyElemRef",
          "13:   if (!bodyEl) {",
          "14:     return",
          "15:   }",
          "16:   if (dragHintEl) {",
          "17:     const warpperEl = bodyEl.parentNode",
          "18:     const warpperRect = warpperEl.getBoundingClientRect()",
          "19:     dragHintEl.style.display = 'block'",
          "20:     dragHintEl.style.top = `${Math.min(warpperEl.clientHeight - warpperEl.scrollTop - dragHintEl.clientHeight, evnt.clientY - warpperRect.y)}px`",
          "21:     dragHintEl.style.left = `${Math.min(warpperEl.clientWidth - warpperEl.scrollLeft - dragHintEl.clientWidth - 16, evnt.clientX - warpperRect.x)}px`",
          "22:   }",
          "23: }",
          "27:   const { customOpts, customColumnList, isMaxFixedColumn } = $xetable",
          "34:     customWrapperOns.mouseenter = _vm.handleWrapperMouseenterEvent",
          "35:     customWrapperOns.mouseleave = _vm.handleWrapperMouseleaveEvent",
          "37:   XEUtils.eachTree(customColumnList, (column, index, items, path, parent) => {",
          "43:       const colTitle = formatText(column.getTitle(), 1)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:           }]",
          "31:         }, [",
          "32:           h('div', {",
          "33:             class: ['vxe-table-custom--checkbox-option', {",
          "34:               'is--checked': isChecked,",
          "35:               'is--indeterminate': isIndeterminate,",
          "36:               'is--disabled': isDisabled",
          "37:             }],",
          "41:             on: {",
          "42:               click: () => {",
          "43:                 if (!isDisabled) {",
          "44:                   _vm.changeCheckboxOption(column)",
          "45:                 }",
          "46:               }",
          "47:             }",
          "48:           }, [",
          "49:             h('span', {",
          "",
          "[Removed Lines]",
          "38:             attrs: {",
          "39:               title: colTitle",
          "40:             },",
          "",
          "[Added Lines]",
          "53:             title: colTitle,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "129:       style: maxHeight ? {",
          "130:         maxHeight: `${maxHeight}px`",
          "131:       } : {},",
          "133:     }, colVNs),",
          "134:     customOpts.showFooter ? h('div', {",
          "135:       class: 'vxe-table-custom--footer'",
          "",
          "[Removed Lines]",
          "132:       ...customWrapperOns",
          "",
          "[Added Lines]",
          "151:       on: customWrapperOns",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:   ])",
          "151: }",
          "154:   const { $xetable, customStore } = _vm",
          "156:   const { checkMethod, visibleMethod } = customOpts",
          "157:   const trVNs = []",
          "159:     const isVisible = visibleMethod ? visibleMethod({ column }) : true",
          "160:     if (isVisible) {",
          "161:       const isChecked = column.visible",
          "162:       const isIndeterminate = column.halfVisible",
          "164:       const isColGroup = column.children && column.children.length",
          "165:       const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "166:       trVNs.push(",
          "167:         h('tr', {",
          "168:           key: column.id,",
          "170:             'is--group': isColGroup",
          "172:         }, [",
          "173:           h('td', {",
          "175:           }, [",
          "176:             h('div', {",
          "177:               class: 'vxe-table-custom-popup--name',",
          "",
          "[Removed Lines]",
          "153: const renderPopupPanel = (h, _vm) => {",
          "155:   const { customOpts, collectColumn, isMaxFixedColumn } = $xetable",
          "158:   XEUtils.eachTree(collectColumn, (column, index, items, path, parent) => {",
          "163:       const colTitle = UtilTools.formatText(column.getTitle(), 1)",
          "169:           class: [`vxe-table-custom-popup--row-level${column.level}`, {",
          "171:           }]",
          "174:             class: 'vxe-table-custom-popup--column-name'",
          "",
          "[Added Lines]",
          "172: function renderPopupPanel (h, _vm) {",
          "174:   const { customOpts, customColumnList, isMaxFixedColumn } = $xetable",
          "177:   XEUtils.eachTree(customColumnList, (column, index, items, path, parent) => {",
          "182:       const colTitle = formatText(column.getTitle(), 1)",
          "188:           class: [`vxe-table-custom-popup--row level--${column.level}`, {",
          "190:           }],",
          "191:           attrs: {",
          "192:             colid: column.id",
          "193:           },",
          "194:           on: {",
          "195:             dragstart: _vm.sortDragstartEvent,",
          "196:             dragend: _vm.sortDragendEvent,",
          "197:             dragover: _vm.sortDragoverEvent",
          "198:           }",
          "201:             class: 'vxe-table-custom-popup--column-item col--sort'",
          "202:           }, [",
          "203:             column.level === 1 ? h('span', {",
          "204:               class: 'vxe-table-custom-popup--column-sort-btn',",
          "205:               on: {",
          "206:                 mousedown: _vm.sortMousedownEvent,",
          "207:                 mouseup: _vm.sortMouseupEvent",
          "208:               }",
          "209:             }, [",
          "210:               h('i', {",
          "211:                 class: 'vxe-icon-sort'",
          "212:               })",
          "213:             ]) : null",
          "214:           ]),",
          "215:           h('td', {",
          "216:             class: 'vxe-table-custom-popup--column-item col--name'",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "181:             }, colTitle)",
          "182:           ]),",
          "183:           h('td', {",
          "185:           }, [",
          "186:             h('div', {",
          "187:               class: ['vxe-table-custom--checkbox-option', {",
          "",
          "[Removed Lines]",
          "184:             class: 'vxe-table-custom-popup--column-visiblw'",
          "",
          "[Added Lines]",
          "226:             class: 'vxe-table-custom-popup--column-item col--visible'",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "203:             ])",
          "204:           ]),",
          "205:           h('td', {",
          "207:           }, [",
          "208:             !parent && customOpts.allowFixed ? h('vxe-radio-group', {",
          "209:               props: {",
          "210:                 value: column.fixed || '',",
          "212:                 type: 'button',",
          "213:                 size: 'mini',",
          "214:                 options: [",
          "218:                 ]",
          "219:               },",
          "220:               on: {",
          "",
          "[Removed Lines]",
          "206:             class: 'vxe-table-custom-popup--column-fixed'",
          "211:                 disabled: isMaxFixedColumn,",
          "215:                   { label: '\u5de6\u4fa7', value: 'left' },",
          "216:                   { label: '\u4e0d\u56fa\u5b9a', value: '' },",
          "217:                   { label: '\u53f3\u4fa7', value: 'right' }",
          "",
          "[Added Lines]",
          "248:             class: 'vxe-table-custom-popup--column-item col--fixed'",
          "256:                   { label: GlobalConfig.i18n('vxe.custom.setting.fixedLeft'), value: 'left', disabled: isMaxFixedColumn },",
          "257:                   { label: GlobalConfig.i18n('vxe.custom.setting.fixedUnset'), value: '' },",
          "258:                   { label: GlobalConfig.i18n('vxe.custom.setting.fixedRight'), value: 'right', disabled: isMaxFixedColumn }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "234:   return h('vxe-modal', {",
          "235:     key: 'popup',",
          "236:     props: {",
          "238:       value: customStore.visible,",
          "239:       title: GlobalConfig.i18n('vxe.custom.cstmTitle'),",
          "242:       mask: true,",
          "243:       lockView: true,",
          "244:       showFooter: true,",
          "246:     },",
          "247:     on: {",
          "248:       input (value) {",
          "",
          "[Removed Lines]",
          "237:       className: 'vxe-table-custom-popup-warpper vxe-table--ignore-clear',",
          "240:       width: 700,",
          "241:       maxHeight: 500,",
          "245:       escClosable: true",
          "",
          "[Added Lines]",
          "280:       className: 'vxe-table-custom-popup-warpper vxe-table--ignore-clear',",
          "281:       width: '40vw',",
          "282:       minWidth: 500,",
          "283:       height: '50vh',",
          "284:       minHeight: 300,",
          "288:       resize: true,",
          "289:       escClosable: true,",
          "290:       destroyOnClose: true",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "252:     scopedSlots: {",
          "253:       default: () => {",
          "254:         return h('div', {",
          "255:           class: 'vxe-table-custom-popup--body'",
          "256:         }, [",
          "258:           }, [",
          "269:                 }",
          "281:         ])",
          "282:       },",
          "283:       footer: () => {",
          "",
          "[Removed Lines]",
          "257:           h('table', {",
          "259:             h('colgroup', {}, [",
          "260:               h('col'),",
          "261:               h('col', {",
          "262:                 style: {",
          "263:                   width: '80px'",
          "264:                 }",
          "265:               }),",
          "266:               h('col', {",
          "267:                 style: {",
          "268:                   width: '200px'",
          "270:               })",
          "271:             ]),",
          "272:             h('thead', {}, [",
          "273:               h('tr', {}, [",
          "274:                 h('th', {}, '\u6807\u9898'),",
          "275:                 h('th', {}, '\u662f\u5426\u663e\u793a'),",
          "276:                 h('th', {}, '\u662f\u5426\u56fa\u5b9a')",
          "277:               ])",
          "278:             ]),",
          "279:             h('tbody', {}, trVNs)",
          "280:           ])",
          "",
          "[Added Lines]",
          "300:           ref: 'bodyElemRef',",
          "303:           h('div', {",
          "304:             class: 'vxe-table-custom-popup--table-warpper'",
          "306:             h('table', {}, [",
          "307:               h('colgroup', {}, [",
          "308:                 h('col', {",
          "309:                   style: {",
          "310:                     width: '60px'",
          "311:                   }",
          "312:                 }),",
          "313:                 h('col'),",
          "314:                 h('col', {",
          "315:                   style: {",
          "316:                     width: '80px'",
          "317:                   }",
          "318:                 }),",
          "319:                 h('col', {",
          "320:                   style: {",
          "321:                     width: '200px'",
          "322:                   }",
          "323:                 })",
          "324:               ]),",
          "325:               h('thead', {}, [",
          "326:                 h('tr', {}, [",
          "327:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colSort')),",
          "328:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colTitle')),",
          "329:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colVisible')),",
          "330:                   h('th', {}, GlobalConfig.i18n('vxe.custom.setting.colFixed'))",
          "331:                 ])",
          "332:               ]),",
          "333:               h('transition-group', {",
          "334:                 class: 'vxe-table-custom--body',",
          "335:                 props: {",
          "336:                   tag: 'tbody',",
          "337:                   name: 'vxe-table-custom--flip'",
          "339:               }, trVNs)",
          "340:             ])",
          "341:           ]),",
          "342:           h('div', {",
          "343:             ref: 'dragHintElemRef',",
          "344:             class: 'vxe-table-custom-popup--drag-hint'",
          "345:           }, GlobalConfig.i18n('vxe.custom.cstmDragTarget', [_vm.dragColumn ? _vm.dragColumn.getTitle() : '']))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "328:       default: null",
          "329:     }",
          "330:   },",
          "331:   computed: {",
          "332:   },",
          "333:   render (h) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:   data () {",
          "397:     return {",
          "398:       dragColumn: null",
          "399:     }",
          "400:   },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "374:     },",
          "375:     handleOptionCheck (column) {",
          "376:       const { $xetable } = this",
          "379:       if (matchObj && matchObj.parent) {",
          "380:         const { parent } = matchObj",
          "381:         if (parent.children && parent.children.length) {",
          "",
          "[Removed Lines]",
          "377:       const { collectColumn } = $xetable",
          "378:       const matchObj = XEUtils.findTree(collectColumn, item => item === column)",
          "",
          "[Added Lines]",
          "447:       const { customColumnList } = $xetable",
          "448:       const matchObj = XEUtils.findTree(customColumnList, item => item === column)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "418:       }",
          "419:     },",
          "420:     allCustomEvent () {",
          "422:       const { checkMethod } = customOpts",
          "423:       const isAll = !customStore.isAll",
          "425:         if (!checkMethod || checkMethod({ column })) {",
          "426:           column.visible = isAll",
          "427:           column.halfVisible = false",
          "",
          "[Removed Lines]",
          "421:       const { $xetable, customStore, collectColumn, customOpts } = this",
          "424:       XEUtils.eachTree(collectColumn, (column) => {",
          "",
          "[Added Lines]",
          "491:       const { $xetable, customStore } = this",
          "492:       const { customOpts, customColumnList } = $xetable",
          "495:       XEUtils.eachTree(customColumnList, (column) => {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "429:       })",
          "430:       customStore.isAll = isAll",
          "431:       $xetable.checkCustomStatus()",
          "432:     }",
          "433:   }",
          "434: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "503:     },",
          "504:     sortMousedownEvent (evnt) {",
          "505:       const { $xetable } = this",
          "506:       const btnEl = evnt.currentTarget",
          "507:       const tdEl = btnEl.parentNode",
          "508:       const trEl = tdEl.parentNode",
          "509:       const colid = trEl.getAttribute('colid')",
          "510:       const column = $xetable.getColumnById(colid)",
          "511:       trEl.draggable = true",
          "512:       this.dragColumn = column",
          "513:       addClass(trEl, 'active--drag-origin')",
          "514:     },",
          "515:     sortMouseupEvent  (evnt) {",
          "516:       const btnEl = evnt.currentTarget",
          "517:       const tdEl = btnEl.parentNode",
          "518:       const trEl = tdEl.parentNode",
          "519:       const dragHintEl = this.$refs.dragHintElemRef",
          "520:       trEl.draggable = false",
          "521:       this.dragColumn = null",
          "522:       removeClass(trEl, 'active--drag-origin')",
          "523:       if (dragHintEl) {",
          "524:         dragHintEl.style.display = ''",
          "525:       }",
          "526:     },",
          "527:     sortDragstartEvent (evnt) {",
          "528:       const img = new Image()",
          "529:       if (evnt.dataTransfer) {",
          "530:         evnt.dataTransfer.setDragImage(img, 0, 0)",
          "531:       }",
          "532:     },",
          "533:     sortDragendEvent (evnt) {",
          "534:       const { $xetable, prevDropTrEl } = this",
          "535:       const { customColumnList } = $xetable",
          "536:       const trEl = evnt.currentTarget",
          "537:       const dragHintEl = this.$refs.dragHintElemRef",
          "538:       if (prevDropTrEl) {",
          "540:         if (prevDropTrEl !== trEl) {",
          "541:           const dragOffset = prevDropTrEl.getAttribute('dragoffset')",
          "542:           const colid = trEl.getAttribute('colid')",
          "543:           const column = $xetable.getColumnById(colid)",
          "544:           if (!column) {",
          "545:             return",
          "546:           }",
          "547:           const cIndex = XEUtils.findIndexOf(customColumnList, item => item.id === column.id)",
          "548:           const targetColid = prevDropTrEl.getAttribute('colid')",
          "549:           const targetColumn = $xetable.getColumnById(targetColid)",
          "550:           if (!targetColumn) {",
          "551:             return",
          "552:           }",
          "554:           customColumnList.splice(cIndex, 1)",
          "555:           const tcIndex = XEUtils.findIndexOf(customColumnList, item => item.id === targetColumn.id)",
          "557:           customColumnList.splice(tcIndex + (dragOffset === 'bottom' ? 1 : 0), 0, column)",
          "558:         }",
          "559:         prevDropTrEl.draggable = false",
          "560:         prevDropTrEl.removeAttribute('dragoffset')",
          "561:         removeClass(prevDropTrEl, 'active--drag-target')",
          "562:       }",
          "563:       this.dragColumn = null",
          "564:       trEl.draggable = false",
          "565:       trEl.removeAttribute('dragoffset')",
          "566:       if (dragHintEl) {",
          "567:         dragHintEl.style.display = ''",
          "568:       }",
          "569:       removeClass(trEl, 'active--drag-target')",
          "570:       removeClass(trEl, 'active--drag-origin')",
          "572:       customColumnList.forEach((column, index) => {",
          "573:         column.renderSortNumber = index",
          "574:       })",
          "575:     },",
          "576:     sortDragoverEvent  (evnt) {",
          "577:       const { $xetable, prevDropTrEl } = this",
          "578:       const trEl = evnt.currentTarget",
          "579:       if (prevDropTrEl !== trEl) {",
          "580:         removeClass(prevDropTrEl, 'active--drag-target')",
          "581:       }",
          "582:       const colid = trEl.getAttribute('colid')",
          "583:       const column = $xetable.getColumnById(colid)",
          "585:       if (column && column.level === 1) {",
          "586:         evnt.preventDefault()",
          "587:         const offsetY = evnt.clientY - trEl.getBoundingClientRect().y",
          "588:         const dragOffset = offsetY < trEl.clientHeight / 2 ? 'top' : 'bottom'",
          "589:         addClass(trEl, 'active--drag-target')",
          "590:         trEl.setAttribute('dragoffset', dragOffset)",
          "591:         this.prevDropTrEl = trEl",
          "592:       }",
          "593:       updateDropHint(this, evnt)",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:       endPageTitle: 'End'",
          "97:     },",
          "98:     alert: {",
          "100:     },",
          "101:     button: {",
          "102:       confirm: 'Confirm',",
          "",
          "[Removed Lines]",
          "99:       title: 'Message notification'",
          "",
          "[Added Lines]",
          "99:       title: 'System messages'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:       cstmTitle: 'Column Settings',",
          "110:       cstmRestore: 'Restore default',",
          "111:       cstmCancel: 'Cancelar',",
          "113:     },",
          "114:     import: {",
          "115:       modes: {",
          "",
          "[Removed Lines]",
          "112:       cstmConfirm: 'Confirm'",
          "",
          "[Added Lines]",
          "112:       cstmConfirm: 'Confirm',",
          "113:       cstmConfirmRestore: 'Please confirm whether to restore the default column configuration?',",
          "114:       cstmDragTarget: 'Moving target: {0}',",
          "115:       setting: {",
          "116:         colSort: 'Sort',",
          "117:         colTitle: 'Title',",
          "118:         colVisible: 'Visible',",
          "119:         colFixed: 'Fixed',",
          "120:         fixedLeft: 'Left',",
          "121:         fixedUnset: 'Unset',",
          "122:         fixedRight: 'Right'",
          "123:       }",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js": [
          "File: packages/locale/lang/es-ES.js -> packages/locale/lang/es-ES.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:       nextJump: 'Saltar siguiente p\u00e1gina'",
          "89:     },",
          "90:     alert: {",
          "92:     },",
          "93:     button: {",
          "94:       confirm: 'Confirmar',",
          "",
          "[Removed Lines]",
          "91:       title: 'Notificaci\u00f3n de mensaje'",
          "",
          "[Added Lines]",
          "91:       title: 'System messages'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:       cstmTitle: 'Column Settings',",
          "102:       cstmRestore: 'Restore default',",
          "103:       cstmCancel: 'Cancelar',",
          "105:     },",
          "106:     import: {",
          "107:       modes: {",
          "",
          "[Removed Lines]",
          "104:       cstmConfirm: 'Confirm'",
          "",
          "[Added Lines]",
          "104:       cstmConfirm: 'Confirm',",
          "105:       cstmConfirmRestore: 'Please confirm whether to restore the default column configuration?',",
          "106:       cstmDragTarget: 'Moving target: {0}',",
          "107:       setting: {",
          "108:         colSort: 'Sort',",
          "109:         colTitle: 'Title',",
          "110:         colVisible: 'Visible',",
          "111:         colFixed: 'Fixed',",
          "112:         fixedLeft: 'Left',",
          "113:         fixedUnset: 'Unset',",
          "114:         fixedRight: 'Right'",
          "115:       }",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:       endPageTitle: 'End page'",
          "97:     },",
          "98:     alert: {",
          "100:     },",
          "101:     button: {",
          "102:       confirm: '\u5b8c\u4e86',",
          "",
          "[Removed Lines]",
          "99:       title: '\u30e1\u30c3\u30bb\u30fc\u30b8'",
          "",
          "[Added Lines]",
          "99:       title: 'System messages'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:       cstmTitle: 'Column Settings',",
          "110:       cstmRestore: 'Restore default',",
          "111:       cstmCancel: 'Cancelar',",
          "113:     },",
          "114:     import: {",
          "115:       modes: {",
          "",
          "[Removed Lines]",
          "112:       cstmConfirm: 'Confirm'",
          "",
          "[Added Lines]",
          "112:       cstmConfirm: 'Confirm',",
          "113:       cstmConfirmRestore: 'Please confirm whether to restore the default column configuration?',",
          "114:       cstmDragTarget: 'Moving target: {0}',",
          "115:       setting: {",
          "116:         colSort: 'Sort',",
          "117:         colTitle: 'Title',",
          "118:         colVisible: 'Visible',",
          "119:         colFixed: 'Fixed',",
          "120:         fixedLeft: 'Left',",
          "121:         fixedUnset: 'Unset',",
          "122:         fixedRight: 'Right'",
          "123:       }",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js": [
          "File: packages/locale/lang/pt-BR.js -> packages/locale/lang/pt-BR.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:       nextJump: 'Saltar para pr\u00f3xima p\u00e1gina'",
          "89:     },",
          "90:     alert: {",
          "92:     },",
          "93:     button: {",
          "94:       confirm: 'Confirmar',",
          "",
          "[Removed Lines]",
          "91:       title: 'Notifica\u00e7\u00e3o de Mensagem'",
          "",
          "[Added Lines]",
          "91:       title: 'System messages'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:       cstmTitle: 'Column Settings',",
          "102:       cstmRestore: 'Restore default',",
          "103:       cstmCancel: 'Cancelar',",
          "105:     },",
          "106:     import: {",
          "107:       modes: {",
          "",
          "[Removed Lines]",
          "104:       cstmConfirm: 'Confirm'",
          "",
          "[Added Lines]",
          "104:       cstmConfirm: 'Confirm',",
          "105:       cstmConfirmRestore: 'Please confirm whether to restore the default column configuration?',",
          "106:       cstmDragTarget: 'Moving target: {0}',",
          "107:       setting: {",
          "108:         colSort: 'Sort',",
          "109:         colTitle: 'Title',",
          "110:         colVisible: 'Visible',",
          "111:         colFixed: 'Fixed',",
          "112:         fixedLeft: 'Left',",
          "113:         fixedUnset: 'Unset',",
          "114:         fixedRight: 'Right'",
          "115:       }",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:       endPageTitle: '\u672b\u9875'",
          "97:     },",
          "98:     alert: {",
          "100:     },",
          "101:     button: {",
          "102:       confirm: '\u786e\u8ba4',",
          "",
          "[Removed Lines]",
          "99:       title: '\u6d88\u606f\u63d0\u793a'",
          "",
          "[Added Lines]",
          "99:       title: '\u7cfb\u7edf\u63d0\u793a'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:       cstmTitle: '\u5217\u8bbe\u7f6e',",
          "110:       cstmRestore: '\u6062\u590d\u9ed8\u8ba4',",
          "111:       cstmCancel: '\u53d6\u6d88',",
          "113:     },",
          "114:     import: {",
          "115:       modes: {",
          "",
          "[Removed Lines]",
          "112:       cstmConfirm: '\u786e\u5b9a'",
          "",
          "[Added Lines]",
          "112:       cstmConfirm: '\u786e\u5b9a',",
          "113:       cstmConfirmRestore: '\u8bf7\u786e\u8ba4\u662f\u5426\u6062\u590d\u6210\u9ed8\u8ba4\u5217\u914d\u7f6e\uff1f',",
          "114:       cstmDragTarget: '\u79fb\u52a8\u76ee\u6807\uff1a{0}',",
          "115:       setting: {",
          "116:         colSort: '\u6392\u5e8f',",
          "117:         colTitle: '\u6807\u9898',",
          "118:         colVisible: '\u662f\u5426\u663e\u793a',",
          "119:         colFixed: '\u662f\u5426\u56fa\u5b9a',",
          "120:         fixedLeft: '\u5de6\u4fa7',",
          "121:         fixedUnset: '\u4e0d\u8bbe\u7f6e',",
          "122:         fixedRight: '\u53f3\u4fa7'",
          "123:       }",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:       endPageTitle: '\u672b\u9801'",
          "97:     },",
          "98:     alert: {",
          "100:     },",
          "101:     button: {",
          "102:       confirm: '\u78ba\u8a8d',",
          "",
          "[Removed Lines]",
          "99:       title: '\u8a0a\u606f\u63d0\u793a'",
          "",
          "[Added Lines]",
          "99:       title: '\u7cfb\u7d71\u63d0\u793a'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:       cstmTitle: '\u5217\u8a2d\u5b9a',",
          "110:       cstmRestore: '\u6062\u5fa9\u9ed8\u8a8d',",
          "111:       cstmCancel: '\u53d6\u6d88',",
          "113:     },",
          "114:     import: {",
          "115:       modes: {",
          "",
          "[Removed Lines]",
          "112:       cstmConfirm: '\u78ba\u8a8d'",
          "",
          "[Added Lines]",
          "112:       cstmConfirm: '\u78ba\u8a8d',",
          "113:       cstmConfirmRestore: '\u8acb\u78ba\u8a8d\u662f\u5426\u6062\u5fa9\u6210\u9ed8\u8a8d\u5217\u914d\u7f6e\uff1f',",
          "114:       cstmDragTarget: '\u79fb\u52d5\u76ee\u6a19\uff1a{0}',",
          "115:       setting: {",
          "116:         colSort: '\u6392\u5e8f',",
          "117:         colTitle: '\u6a19\u984c',",
          "118:         colVisible: '\u662f\u5426\u986f\u793a',",
          "119:         colFixed: '\u662f\u5426\u56fa\u5b9a',",
          "120:         fixedLeft: '\u5de6\u5074',",
          "121:         fixedUnset: '\u4e0d\u8a2d\u5b9a',",
          "122:         fixedRight: '\u53f3\u5074'",
          "123:       }",
          "",
          "---------------"
        ],
        "packages/radio/src/group.js||packages/radio/src/group.js": [
          "File: packages/radio/src/group.js -> packages/radio/src/group.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     },",
          "38:     valueField () {",
          "39:       return this.propsOpts.value || 'value'",
          "40:     }",
          "41:   },",
          "42:   data () {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     },",
          "41:     disabledField () {",
          "42:       return this.propsOpts.disabled || 'disabled'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     }",
          "46:   },",
          "47:   render (h) {",
          "49:     const defaultSlot = $scopedSlots.default",
          "50:     const btnComp = type === 'button' ? 'vxe-radio-button' : 'vxe-radio'",
          "51:     return h('div', {",
          "",
          "[Removed Lines]",
          "48:     const { $scopedSlots, options, type, valueField, labelField } = this",
          "",
          "[Added Lines]",
          "51:     const { $scopedSlots, options, type, valueField, labelField, disabledField } = this",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:       return h(btnComp, {",
          "55:         props: {",
          "56:           label: item[valueField],",
          "58:         }",
          "59:       })",
          "60:     }) : []))",
          "",
          "[Removed Lines]",
          "57:           content: item[labelField]",
          "",
          "[Added Lines]",
          "60:           content: item[labelField],",
          "61:           disabled: item[disabledField]",
          "",
          "---------------"
        ],
        "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js": [
          "File: packages/table/src/columnInfo.js -> packages/table/src/columnInfo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:       level: 1,",
          "113:       rowSpan: 1,",
          "114:       colSpan: 1,",
          "118:       renderWidth: 0,",
          "119:       renderHeight: 0,",
          "120:       resizeWidth: 0,",
          "",
          "[Removed Lines]",
          "115:       order: null,",
          "116:       sortTime: 0,",
          "117:       customOrder: 0,",
          "",
          "[Added Lines]",
          "117:       order: null, // \u7528\u4e8e\u8bb0\u5f55\u6392\u5e8f\u7c7b\u578b\uff0c\u5347\u5e8f\u548c\u5012\u5e8f",
          "118:       sortTime: 0, // \u7528\u4e8e\u591a\u5217\u7684\u5148\u540e\u987a\u5e8f",
          "121:       sortNumber: 0, // \u7528\u4e8e\u8bb0\u5f55\u81ea\u5b9a\u4e49\u5217\u987a\u5e8f",
          "122:       renderSortNumber: 0, // \u7528\u4e8e\u8bb0\u5f55\u81ea\u5b9a\u4e49\u5217\u987a\u5e8f",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: const resizableStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_WIDTH'",
          "19: const visibleStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_VISIBLE'",
          "20: const fixedStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_FIXED'",
          "",
          "[Removed Lines]",
          "21: const orderStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_ORDER'",
          "",
          "[Added Lines]",
          "21: const sortStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_SORT'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "571:     this.collectColumn = collectColumn",
          "572:     const tableFullColumn = getColumnList(collectColumn)",
          "573:     this.tableFullColumn = tableFullColumn",
          "575:     this.restoreCustomStorage()",
          "576:     this.parseColumns().then(() => {",
          "577:       if (this.scrollXLoad) {",
          "",
          "[Removed Lines]",
          "574:     this.cacheColumnMap()",
          "",
          "[Added Lines]",
          "574:     this.cacheColumnMap(true)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "703:     const { tableFullColumn, collectColumn, fullColumnMap, showOverflow, columnOpts, rowOpts } = this",
          "704:     const fullColumnIdData = this.fullColumnIdData = {}",
          "705:     const fullColumnFieldData = this.fullColumnFieldData = {}",
          "",
          "[Removed Lines]",
          "702:   cacheColumnMap () {",
          "",
          "[Added Lines]",
          "702:   cacheColumnMap (isInit) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "795:       if (fullColumnIdData[colid]) {",
          "796:         errLog('vxe.error.colRepet', ['colId', colid])",
          "797:       }",
          "798:       fullColumnIdData[colid] = rest",
          "799:       fullColumnMap.set(column, rest)",
          "800:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "798:       if (isInit) {",
          "799:         column.sortNumber = index",
          "800:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1552:     const opts = Object.assign({",
          "1553:       visible: true,",
          "1554:       resizable: options === true,",
          "1556:     }, options)",
          "1557:     XEUtils.eachTree(collectColumn, (column) => {",
          "1558:       if (opts.resizable) {",
          "",
          "[Removed Lines]",
          "1555:       fixed: options === true",
          "",
          "[Added Lines]",
          "1558:       fixed: options === true,",
          "1559:       sort: options === true",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1561:       if (opts.fixed) {",
          "1562:         column.fixed = column.defaultFixed",
          "1563:       }",
          "1564:       if (!checkMethod || checkMethod({ column })) {",
          "1565:         column.visible = column.defaultVisible",
          "1566:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1568:       if (opts.sort) {",
          "1569:         column.renderSortNumber = column.sortNumber",
          "1570:       }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1576:   handleCustom () {",
          "1577:     this.saveCustomVisible()",
          "1578:     this.analyColumnWidth()",
          "1580:   },",
          "",
          "[Removed Lines]",
          "1579:     return this.refreshColumn()",
          "",
          "[Added Lines]",
          "1586:     return this.refreshColumn(true)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1584:   restoreCustomStorage () {",
          "1585:     const { id, collectColumn, customConfig, customOpts } = this",
          "1586:     const { storage } = customOpts",
          "1593:       const customMap = {}",
          "1594:       if (!id) {",
          "1595:         errLog('vxe.error.reqProp', ['id'])",
          "",
          "[Removed Lines]",
          "1587:     const isAllStorage = customOpts.storage === true",
          "1588:     const isCustomResizable = isAllStorage || (storage && storage.resizable)",
          "1589:     const isCustomVisible = isAllStorage || (storage && storage.visible)",
          "1590:     const isCustomFixed = storage === true || (storage && storage.fixed)",
          "1591:     const isCustomOrder = storage === true || (storage && storage.order)",
          "1592:     if (customConfig && (isCustomResizable || isCustomVisible || isCustomFixed || isCustomOrder)) {",
          "",
          "[Added Lines]",
          "1594:     const isAllStorage = storage === true",
          "1595:     const storageOpts = isAllStorage ? {} : Object.assign({}, storage || {})",
          "1596:     const isCustomResizable = isAllStorage || storageOpts.resizable",
          "1597:     const isCustomVisible = isAllStorage || storageOpts.visible",
          "1598:     const isCustomFixed = isAllStorage || storageOpts.fixed",
          "1599:     const isCustomSort = isAllStorage || storageOpts.sort",
          "1600:     if (customConfig && (isCustomResizable || isCustomVisible || isCustomFixed || isCustomSort)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1619:         }",
          "1620:       }",
          "1634:         }",
          "1635:       }",
          "1636:       if (isCustomVisible) {",
          "",
          "[Removed Lines]",
          "1622:       if (isCustomOrder) {",
          "1623:         const columnOrderStorage = getCustomStorageMap(orderStorageKey)[id]",
          "1624:         if (columnOrderStorage) {",
          "",
          "[Added Lines]",
          "1630:       if (isCustomSort) {",
          "1631:         const columnSortStorage = getCustomStorageMap(sortStorageKey)[id]",
          "1632:         if (columnSortStorage) {",
          "1633:           const colOrderSeqs = columnSortStorage.split(',')",
          "1634:           colOrderSeqs.forEach((orderConf) => {",
          "1635:             const [colKey, sortNumber] = orderConf.split('|')",
          "1636:             if (customMap[colKey]) {",
          "1637:               customMap[colKey].sortNumber = sortNumber",
          "1638:             } else {",
          "1639:               customMap[colKey] = { sortNumber }",
          "1640:             }",
          "1641:           })",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1662:           keyMap[colKey] = column",
          "1663:         }",
          "1664:       })",
          "1666:         const column = keyMap[field]",
          "1667:         if (column) {",
          "1668:           if (XEUtils.isNumber(resizeWidth)) {",
          "",
          "[Removed Lines]",
          "1665:       XEUtils.each(customMap, ({ visible, resizeWidth, fixed, order }, field) => {",
          "",
          "[Added Lines]",
          "1673:       XEUtils.each(customMap, ({ visible, resizeWidth, fixed, sortNumber }, field) => {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1674:           if (fixed) {",
          "1675:             column.fixed = fixed",
          "1676:           }",
          "1679:           }",
          "1680:         }",
          "1681:       })",
          "",
          "[Removed Lines]",
          "1677:           if (order) {",
          "1678:             column.colSeq = order",
          "",
          "[Added Lines]",
          "1685:           if (sortNumber) {",
          "1686:             column.colSeq = Number(sortNumber)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1684:   saveCustomFixed () {",
          "1685:     const { id, collectColumn, customConfig, customOpts } = this",
          "1686:     const { storage } = customOpts",
          "1689:     if (customConfig && isCustomFixed) {",
          "1690:       const columnFixedStorageMap = getCustomStorageMap(fixedStorageKey)",
          "1691:       const colFixeds = []",
          "",
          "[Removed Lines]",
          "1687:     const isAllStorage = customOpts.storage === true",
          "1688:     const isCustomFixed = isAllStorage || (storage && storage.fixed)",
          "",
          "[Added Lines]",
          "1695:     const isAllStorage = storage === true",
          "1696:     const storageOpts = isAllStorage ? {} : Object.assign({}, storage || {})",
          "1697:     const isCustomFixed = isAllStorage || storageOpts.fixed",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1708:   saveCustomVisible () {",
          "1709:     const { id, collectColumn, customConfig, customOpts } = this",
          "1710:     const { checkMethod, storage } = customOpts",
          "1713:     if (customConfig && isCustomVisible) {",
          "1714:       const columnVisibleStorageMap = getCustomStorageMap(visibleStorageKey)",
          "1715:       const colHides = []",
          "",
          "[Removed Lines]",
          "1711:     const isAllStorage = customOpts.storage === true",
          "1712:     const isCustomVisible = isAllStorage || (storage && storage.visible)",
          "",
          "[Added Lines]",
          "1720:     const isAllStorage = storage === true",
          "1721:     const storageOpts = isAllStorage ? {} : Object.assign({}, storage || {})",
          "1722:     const isCustomVisible = isAllStorage || storageOpts.visible",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1740:   saveCustomResizable (isReset) {",
          "1741:     const { id, collectColumn, customConfig, customOpts } = this",
          "1742:     const { storage } = customOpts",
          "1745:     if (customConfig && isResizable) {",
          "1746:       const columnWidthStorageMap = getCustomStorageMap(resizableStorageKey)",
          "1747:       let columnWidthStorage",
          "",
          "[Removed Lines]",
          "1743:     const isAllStorage = customOpts.storage === true",
          "1744:     const isResizable = isAllStorage || (storage && storage.resizable)",
          "",
          "[Added Lines]",
          "1753:     const isAllStorage = storage === true",
          "1754:     const storageOpts = isAllStorage ? {} : Object.assign({}, storage || {})",
          "1755:     const isResizable = isAllStorage || storageOpts.resizable",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1777:     return this.parseColumns().then(() => {",
          "1778:       return this.refreshScroll()",
          "1779:     }).then(() => {",
          "",
          "[Removed Lines]",
          "1776:   refreshColumn () {",
          "",
          "[Added Lines]",
          "1787:   refreshColumn (resiveOrder) {",
          "1788:     if (resiveOrder) {",
          "1789:       const columnList = XEUtils.orderBy(this.collectColumn, 'renderSortNumber')",
          "1790:       this.collectColumn = columnList",
          "1791:       const tableFullColumn = getColumnList(columnList)",
          "1792:       this.tableFullColumn = tableFullColumn",
          "1793:       this.cacheColumnMap()",
          "1794:     }",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:         export: false,",
          "341:         custom: false",
          "342:       },",
          "344:       upDataFlag: 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "343:       customColumnList: [],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "605:       return Object.assign({}, GlobalConfig.table.customConfig, this.customConfig)",
          "606:     },",
          "607:     fixedColumnSize () {",
          "609:       let fixedSize = 0",
          "611:         if (column.fixed) {",
          "612:           fixedSize++",
          "613:         }",
          "",
          "[Removed Lines]",
          "608:       const { tableFullColumn } = this",
          "610:       tableFullColumn.forEach((column) => {",
          "",
          "[Added Lines]",
          "609:       const { collectColumn } = this",
          "611:       collectColumn.forEach((column) => {",
          "",
          "---------------"
        ],
        "styles/custom.scss||styles/custom.scss": [
          "File: styles/custom.scss -> styles/custom.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: @import './helpers/mixin.scss';",
          "4: .vxe-table-custom--option {",
          "5:   display: flex;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: @import './base/common.scss';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:   &.is--active {",
          "21:     display: block;",
          "22:   }",
          "42:         }",
          "43:       }",
          "44:     }",
          "45:   }",
          "58:     }",
          "59:   }",
          "77:     }",
          "78:   }",
          "79: }",
          "",
          "[Removed Lines]",
          "23:   .vxe-table-custom--header,",
          "24:   .vxe-table-custom--body {",
          "25:     list-style-type: none;",
          "26:     overflow-x: hidden;",
          "27:     overflow-y: auto;",
          "28:     margin: 0;",
          "29:     padding: 0;",
          "30:     user-select: none;",
          "31:     & > li {",
          "32:       max-width: 18em;",
          "33:       min-width: 14em;",
          "34:       padding: 0.2em 1em 0.2em 1em;",
          "35:       @for $i from 2 through 8 {",
          "36:         $interval: $i - 1 + 0.2;",
          "37:         &.level--#{$i}{",
          "38:           padding-left: #{$interval + 2.3}em;",
          "39:           .vxe-checkbox--icon {",
          "40:             left: #{$interval + 0.6}em;",
          "41:           }",
          "46:   .vxe-table-custom--header {",
          "47:     padding: 0.28em 0;",
          "48:     font-weight: 700;",
          "49:     border-bottom: 1px solid $vxe-table-popup-border-color;",
          "50:   }",
          "51:   .vxe-table-custom--body {",
          "52:     padding: 0.2em 0;",
          "53:     max-height: 20em;",
          "54:     .vxe-table-custom--checkbox-option {",
          "55:       &:hover {",
          "56:         background-color: $vxe-table-row-hover-background-color;",
          "57:       }",
          "60:   .vxe-table-custom--footer {",
          "61:     border-top: 1px solid $vxe-table-popup-border-color;",
          "62:     text-align: right;",
          "63:     button {",
          "64:       background-color: transparent;",
          "65:       width: 50%;",
          "66:       height: 2.5em;",
          "67:       border: 0;",
          "68:       color: $vxe-font-color;",
          "69:       text-align: center;",
          "70:       cursor: pointer;",
          "71:       &:focus {",
          "72:         outline: none;",
          "73:       }",
          "74:       &:hover {",
          "75:         color: $vxe-primary-color;",
          "76:       }",
          "",
          "[Added Lines]",
          "24: }",
          "26: .vxe-table-custom--header,",
          "27: .vxe-table-custom--body {",
          "28:   list-style-type: none;",
          "29:   overflow-x: hidden;",
          "30:   overflow-y: auto;",
          "31:   margin: 0;",
          "32:   padding: 0;",
          "33:   user-select: none;",
          "34:   & > li {",
          "35:     max-width: 18em;",
          "36:     min-width: 14em;",
          "37:     padding: 0.2em 1em 0.2em 1em;",
          "38:     @for $i from 2 through 8 {",
          "39:       $interval: $i - 1 + 0.2;",
          "40:       &.level--#{$i}{",
          "41:         padding-left: #{$interval + 2.3}em;",
          "42:         .vxe-checkbox--icon {",
          "43:           left: #{$interval + 0.6}em;",
          "48: }",
          "50: .vxe-table-custom--header {",
          "51:   padding: 0.28em 0;",
          "52:   font-weight: 700;",
          "53:   border-bottom: 1px solid $vxe-table-popup-border-color;",
          "54: }",
          "56: .vxe-table-custom--body {",
          "57:   padding: 0.2em 0;",
          "58:   max-height: 20em;",
          "59:   .vxe-table-custom--checkbox-option {",
          "60:     &:hover {",
          "61:       background-color: $vxe-table-row-hover-background-color;",
          "64: }",
          "66: .vxe-table-custom--footer {",
          "67:   border-top: 1px solid $vxe-table-popup-border-color;",
          "68:   text-align: right;",
          "69:   button {",
          "70:     background-color: transparent;",
          "71:     width: 50%;",
          "72:     height: 2.5em;",
          "73:     border: 0;",
          "74:     color: $vxe-font-color;",
          "75:     text-align: center;",
          "76:     cursor: pointer;",
          "77:     &:focus {",
          "78:       outline: none;",
          "79:     }",
          "80:     &:hover {",
          "81:       color: $vxe-primary-color;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:   display: flex;",
          "93:   flex-direction: row;",
          "94:   align-items: center;",
          "109:   }",
          "110: }",
          "112: .vxe-table-custom-popup--body {",
          "113:   overflow: auto;",
          "114:   height: 100%;",
          "135:   table {",
          "136:     width: 100%;",
          "137:     border: 0;",
          "",
          "[Removed Lines]",
          "95:   .vxe-table-custom--fixed-left-option,",
          "96:   .vxe-table-custom--fixed-right-option {",
          "97:     line-height: 1.34em;",
          "98:     font-size: 1.1em;",
          "99:     padding: 0 0.2em;",
          "100:     cursor: pointer;",
          "101:     &.is--checked,",
          "102:     &:hover {",
          "103:       color: $vxe-primary-color;",
          "104:     }",
          "105:     &.is--disabled {",
          "106:       cursor: no-drop;",
          "107:       color: $vxe-input-disabled-color;",
          "108:     }",
          "115:   border: 1px solid $vxe-table-border-color;",
          "116:   .vxe-table-custom-popup--name {",
          "117:     max-width: 360px;",
          "118:     overflow: hidden;",
          "119:     text-overflow: ellipsis;",
          "120:     white-space: nowrap;",
          "121:   }",
          "122:   @for $index from 2 to 10 {",
          "123:     $paddingLeft: ($index - 1) * 24px;",
          "124:     .vxe-table-custom-popup--row-level#{$index} {",
          "125:       .vxe-table-custom-popup--name {",
          "126:         padding-left: $paddingLeft;",
          "127:         max-width: 260px - $paddingLeft;",
          "128:       }",
          "129:     }",
          "130:   }",
          "131:   .vxe-table-custom-popup--column-visible,",
          "132:   .vxe-table-custom-popup--column-fixed {",
          "133:     text-align: center;",
          "134:   }",
          "",
          "[Added Lines]",
          "100: }",
          "102: .vxe-table-custom--fixed-left-option,",
          "103: .vxe-table-custom--fixed-right-option {",
          "104:   line-height: 1.34em;",
          "105:   font-size: 1.1em;",
          "106:   padding: 0 0.2em;",
          "107:   cursor: pointer;",
          "108:   &.is--checked,",
          "109:   &:hover {",
          "110:     color: $vxe-primary-color;",
          "111:   }",
          "112:   &.is--disabled {",
          "113:     cursor: no-drop;",
          "114:     color: $vxe-input-disabled-color;",
          "121: }",
          "123: .vxe-table-custom-popup--table-warpper {",
          "124:   border-bottom: 1px solid $vxe-table-border-color;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "141:       position: sticky;",
          "142:       top: 0;",
          "143:       text-align: left;",
          "144:       border-bottom: 1px solid $vxe-table-border-color;",
          "145:       border-left: 1px solid $vxe-table-border-color;",
          "146:       background-color: $vxe-table-header-background-color;",
          "147:     }",
          "148:     td {",
          "149:       border-top: 1px solid $vxe-table-border-color;",
          "150:       border-left: 1px solid $vxe-table-border-color;",
          "154:     }",
          "155:     tr {",
          "156:       &:first-child {",
          "",
          "[Removed Lines]",
          "151:       &:nth-child(2) {",
          "152:         text-align: center;",
          "153:       }",
          "",
          "[Added Lines]",
          "134:       border-top: 1px solid $vxe-table-border-color;",
          "138:       z-index: 7;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "163:     td {",
          "164:       height: 44px;",
          "165:       padding: 0 0.6em;",
          "166:     }",
          "167:   }",
          "",
          "[Removed Lines]",
          "168: }",
          "",
          "[Added Lines]",
          "155:       &:last-child {",
          "156:         border-right: 1px solid $vxe-table-border-color;",
          "157:       }",
          "158:     }",
          "159:   }",
          "160: }",
          "162: .vxe-table-custom-popup--drag-hint {",
          "163:   @extend %TextEllipsis;",
          "164:   display: none;",
          "165:   position: absolute;",
          "166:   top: 0;",
          "167:   left: 0;",
          "168:   padding: 0.6em 1em 0.6em 1.8em;",
          "169:   max-width: 300px;",
          "170:   border-radius: $vxe-border-radius;",
          "171:   user-select: none;",
          "172:   pointer-events: none;",
          "173:   background-color: $vxe-table-body-background-color;",
          "174:   box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);",
          "175:   z-index: 33;",
          "176: }",
          "178: .vxe-table-custom-popup--name {",
          "179:   max-width: 360px;",
          "180:   overflow: hidden;",
          "181:   text-overflow: ellipsis;",
          "182:   white-space: nowrap;",
          "183: }",
          "185: @for $index from 2 to 10 {",
          "186:   $paddingLeft: ($index - 1) * 24px;",
          "187:   .vxe-table-custom-popup--row {",
          "188:     &.level--#{$index} {",
          "189:       .vxe-table-custom-popup--name {",
          "190:         padding-left: $paddingLeft;",
          "191:         max-width: 260px - $paddingLeft;",
          "192:       }",
          "193:     }",
          "194:   }",
          "195: }",
          "197: .vxe-table-custom-popup--column-item {",
          "198:   position: relative;",
          "199:   &.col--sort,",
          "200:   &.col--visible,",
          "201:   &.col--fixed {",
          "202:     text-align: center;",
          "203:   }",
          "204: }",
          "206: .vxe-table-custom-popup--row {",
          "207:   &.active--drag-target {",
          "208:     &[dragoffset=\"top\"] {",
          "209:       .vxe-table-custom-popup--column-item {",
          "210:         &::after {",
          "211:           display: block;",
          "212:           top: -2px;",
          "213:         }",
          "214:       }",
          "215:     }",
          "216:     &[dragoffset=\"bottom\"] {",
          "217:       .vxe-table-custom-popup--column-item {",
          "218:         &::after {",
          "219:           display: block;",
          "220:           bottom: -2px;",
          "221:         }",
          "222:       }",
          "223:     }",
          "224:   }",
          "225:   &:first-child {",
          "226:     &[dragoffset=\"top\"] {",
          "227:       .vxe-table-custom-popup--column-item {",
          "228:         &::after {",
          "229:           top: 0;",
          "230:         }",
          "231:       }",
          "232:     }",
          "233:   }",
          "234:   &:last-child {",
          "235:     &[dragoffset=\"bottom\"] {",
          "236:       .vxe-table-custom-popup--column-item {",
          "237:         &::after {",
          "238:           bottom: 0;",
          "239:         }",
          "240:       }",
          "245: .vxe-table-custom-popup--column-item {",
          "246:   &::after {",
          "247:     display: none;",
          "248:     content: \"\";",
          "249:     position: absolute;",
          "250:     left: -1px;",
          "251:     width: calc(100% + 1px);",
          "252:     height: 3px;",
          "253:     background-color: $vxe-primary-color;",
          "254:     z-index: 12;",
          "255:   }",
          "256:   &:last-child {",
          "257:     &::after {",
          "258:       width: 100%;",
          "259:     }",
          "260:   }",
          "261: }",
          "263: .vxe-table-custom--flip-move {",
          "264:   transition: transform 0.35s;",
          "265: }",
          "267: .vxe-table-custom-popup--column-sort-btn {",
          "268:   font-size: 1.2em;",
          "269:   padding: 0.2em 0.5em;",
          "270:   cursor: grab;",
          "271:   &:active {",
          "272:     cursor: grabbing;",
          "273:   }",
          "274: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85aeb4f4cd57567f91a87ea082f6c622065f2fac",
      "candidate_info": {
        "commit_hash": "85aeb4f4cd57567f91a87ea082f6c622065f2fac",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/85aeb4f4cd57567f91a87ea082f6c622065f2fac",
        "files": [
          "package.json",
          "packages/custom/src/panel.js",
          "packages/loading/src/loading.js",
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js",
          "packages/modal/src/modal.js",
          "styles/button.scss",
          "styles/custom.scss",
          "styles/input.scss",
          "styles/loading.scss"
        ],
        "message": "\u66f4\u65b0 i18n",
        "before_after_code_files": [
          "packages/custom/src/panel.js||packages/custom/src/panel.js",
          "packages/loading/src/loading.js||packages/loading/src/loading.js",
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js",
          "packages/modal/src/modal.js||packages/modal/src/modal.js",
          "styles/button.scss||styles/button.scss",
          "styles/custom.scss||styles/custom.scss",
          "styles/input.scss||styles/input.scss",
          "styles/loading.scss||styles/loading.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/custom/src/panel.js||packages/custom/src/panel.js": [
          "File: packages/custom/src/panel.js -> packages/custom/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "277:     props: {",
          "278:       value: customStore.visible,",
          "279:       title: GlobalConfig.i18n('vxe.custom.cstmTitle'),",
          "281:       width: '40vw',",
          "282:       minWidth: 500,",
          "283:       height: '50vh',",
          "",
          "[Removed Lines]",
          "280:       className: 'vxe-table-custom-popup-warpper vxe-table--ignore-clear',",
          "",
          "[Added Lines]",
          "280:       className: 'vxe-table-custom-popup-wrapper vxe-table--ignore-clear',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:           class: 'vxe-table-custom-popup--body'",
          "302:         }, [",
          "303:           h('div', {",
          "305:           }, [",
          "306:             h('table', {}, [",
          "307:               h('colgroup', {}, [",
          "",
          "[Removed Lines]",
          "304:             class: 'vxe-table-custom-popup--table-warpper'",
          "",
          "[Added Lines]",
          "304:             class: 'vxe-table-custom-popup--table-wrapper'",
          "",
          "---------------"
        ],
        "packages/loading/src/loading.js||packages/loading/src/loading.js": [
          "File: packages/loading/src/loading.js -> packages/loading/src/loading.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:       }]",
          "26:     }, defaultSlot ? [",
          "27:       h('div', {",
          "29:       }, defaultSlot.call(this, {}))",
          "30:     ] : [",
          "31:       h('div', {",
          "",
          "[Removed Lines]",
          "28:         class: 'vxe-loading--warpper'",
          "",
          "[Added Lines]",
          "28:         class: 'vxe-loading--wrapper'",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       text: 'Loading...'",
          "9:     },",
          "10:     error: {",
          "12:       groupMouseRange: 'Grouping headers and \"{0}\" cannot be used at the same time, which may cause errors.',",
          "13:       groupTag: 'Grouping column header should use \"{0}\" instead of \"{1}\", which may cause errors.',",
          "14:       scrollErrProp: 'The parameter \"{0}\" is not supported when virtual scrolling is enabled.',",
          "",
          "[Removed Lines]",
          "11:       groupFixed: 'If you use group headers, the fixed columns must be set by group.',",
          "",
          "[Added Lines]",
          "11:       groupFixed: 'If you use group headers, the freeze columns must be set by group.',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:       customAll: 'All',",
          "62:       customConfirm: 'Confirm',",
          "63:       customRestore: 'Reset',",
          "65:     },",
          "66:     grid: {",
          "67:       selectOneRecord: 'Please choose at least one piece of record!',",
          "",
          "[Removed Lines]",
          "64:       maxFixedCol: 'The maximum number of fixed columns cannot exceed {0}'",
          "",
          "[Added Lines]",
          "64:       maxFixedCol: 'The maximum number of Freeze columns cannot exceed {0}'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:         colSort: 'Sort',",
          "117:         colTitle: 'Title',",
          "118:         colVisible: 'Visible',",
          "120:         fixedLeft: 'Left',",
          "121:         fixedUnset: 'Unset',",
          "122:         fixedRight: 'Right'",
          "",
          "[Removed Lines]",
          "119:         colFixed: 'Fixed',",
          "",
          "[Added Lines]",
          "119:         colFixed: 'Freeze column',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "199:       customAll: 'All',",
          "200:       customConfirm: 'Confirm',",
          "201:       customRestore: 'Reset',",
          "205:     },",
          "206:     input: {",
          "207:       date: {",
          "",
          "[Removed Lines]",
          "202:       fixedLeft: 'Fixed on the left side',",
          "203:       fixedRight: 'Fixed on the right side',",
          "204:       cancelfixed: 'Unfixed'",
          "",
          "[Added Lines]",
          "202:       fixedLeft: 'Freeze on the left',",
          "203:       fixedRight: 'Freeze on the right',",
          "204:       cancelfixed: 'Unfreeze column'",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js": [
          "File: packages/locale/lang/es-ES.js -> packages/locale/lang/es-ES.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       text: 'Cargando...'",
          "9:     },",
          "10:     error: {",
          "12:       groupMouseRange: 'Los encabezados de agrupaci\u00f3n y \"{0}\" no pueden ser utilizados al mismo tiempo, lo que puede causar errores.',",
          "13:       groupTag: 'El encabezado de columna de agrupaci\u00f3n deber\u00eda utilizar \"{0}\" en lugar de \"{1}\", lo que puede causar errores.',",
          "14:       scrollErrProp: 'El par\u00e1metro \"{0}\" no es compatible cuando el desplazamiento virtual est\u00e1 habilitado.',",
          "",
          "[Removed Lines]",
          "11:       groupFixed: 'Si se utilizan encabezados de grupo, las columnas fijas deben ser establecidas por grupo.',",
          "",
          "[Added Lines]",
          "11:       groupFixed: 'If you use group headers, the freeze columns must be set by group.',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:       customAll: 'Todo',",
          "62:       customConfirm: 'Confirmar',",
          "63:       customRestore: 'Restaurar',",
          "65:     },",
          "66:     grid: {",
          "67:       selectOneRecord: '\u00a1Seleccione al menos un registro!',",
          "",
          "[Removed Lines]",
          "64:       maxFixedCol: '\u6700\u5927\u56fa\u5b9a\u5217\u7684\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7 {0} \u4e2a'",
          "",
          "[Added Lines]",
          "64:       maxFixedCol: 'The maximum number of Freeze columns cannot exceed {0}'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:         colSort: 'Sort',",
          "109:         colTitle: 'Title',",
          "110:         colVisible: 'Visible',",
          "112:         fixedLeft: 'Left',",
          "113:         fixedUnset: 'Unset',",
          "114:         fixedRight: 'Right'",
          "",
          "[Removed Lines]",
          "111:         colFixed: 'Fixed',",
          "",
          "[Added Lines]",
          "111:         colFixed: 'Freeze column',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:       customAll: 'Todo',",
          "192:       customConfirm: 'Confirmar',",
          "193:       customRestore: 'Restaurar',",
          "197:     },",
          "198:     entrada: {",
          "199:       fecha: {",
          "",
          "[Removed Lines]",
          "194:       fixedLeft: '\u56fa\u5b9a\u5728\u5de6\u4fa7',",
          "195:       fixedRight: '\u56fa\u5b9a\u5728\u53f3\u4fa7',",
          "196:       cancelfixed: '\u53d6\u6d88\u56fa\u5b9a'",
          "",
          "[Added Lines]",
          "194:       fixedLeft: 'Freeze on the left',",
          "195:       fixedRight: 'Freeze on the right',",
          "196:       cancelfixed: 'Unfreeze column'",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       text: 'Loading...'",
          "9:     },",
          "10:     error: {",
          "12:       groupMouseRange: '\u30b0\u30eb\u30fc\u30d7\u5316\u30d8\u30c3\u30c0\u30fc\u3068\u300c{0}\u300d\u306f\u540c\u6642\u306b\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u306b\u3088\u308a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059',",
          "13:       groupTag: '\u5206\u7ec4\u5217\u5934\u5e94\u8be5\u4f7f\u7528 \"{0}\" \u800c\u4e0d\u662f \"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "14:       scrollErrProp: '\u542f\u7528\u865a\u62df\u6eda\u52a8\u540e\u4e0d\u652f\u6301\u8be5\u53c2\u6570 \"{0}\"',",
          "",
          "[Removed Lines]",
          "11:       groupFixed: '\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30c3\u30c0\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u56fa\u5b9a\u5217\u306f\u30b0\u30eb\u30fc\u30d7\u3067\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093',",
          "",
          "[Added Lines]",
          "11:       groupFixed: 'If you use group headers, the freeze columns must be set by group.',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:       customAll: '\u5168\u90e8',",
          "62:       customConfirm: '\u786e\u8ba4',",
          "63:       customRestore: '\u30ea\u30bb\u30c3\u30c8',",
          "65:     },",
          "66:     grid: {",
          "67:       selectOneRecord: '\u5c11\u306a\u304f\u3068\u30821\u3064\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044',",
          "",
          "[Removed Lines]",
          "64:       maxFixedCol: '\u6700\u5927\u56fa\u5b9a\u5217\u7684\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7 {0} \u4e2a'",
          "",
          "[Added Lines]",
          "64:       maxFixedCol: 'The maximum number of Freeze columns cannot exceed {0}'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:         colSort: 'Sort',",
          "117:         colTitle: 'Title',",
          "118:         colVisible: 'Visible',",
          "120:         fixedLeft: 'Left',",
          "121:         fixedUnset: 'Unset',",
          "122:         fixedRight: 'Right'",
          "",
          "[Removed Lines]",
          "119:         colFixed: 'Fixed',",
          "",
          "[Added Lines]",
          "119:         colFixed: 'Freeze column',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "199:       customAll: '\u5168\u90e8',",
          "200:       customConfirm: '\u78ba\u5b9a',",
          "201:       customRestore: '\u30ea\u30bb\u30c3\u30c8',",
          "204:     },",
          "205:     input: {",
          "206:       date: {",
          "",
          "[Removed Lines]",
          "202:       fixedLeft: '\u56fa\u5b9a\u5728\u5de6\u4fa7',",
          "203:       fixedRight: '\u56fa\u5b9a\u5728\u53f3\u4fa7'",
          "",
          "[Added Lines]",
          "202:       fixedLeft: 'Freeze on the left',",
          "203:       fixedRight: 'Freeze on the right',",
          "204:       cancelfixed: 'Unfreeze column'",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js": [
          "File: packages/locale/lang/pt-BR.js -> packages/locale/lang/pt-BR.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       text: 'Carregando...'",
          "9:     },",
          "10:     error: {",
          "12:       groupMouseRange: 'Agrupar cabe\u00e7alhos e \"{0}\" n\u00e3o podem ser usados ao mesmo tempo, o que pode causar erros.',",
          "13:       groupTag: 'O cabe\u00e7alho da coluna de agrupamento deve usar \"{0}\" em vez de \"{1}\", o que pode causar erros.',",
          "14:       scrollErrProp: 'O par\u00e2metro \"{0}\" n\u00e3o \u00e9 suportado quando a rolagem virtual est\u00e1 habilitada.',",
          "",
          "[Removed Lines]",
          "11:       groupFixed: 'Se voc\u00ea estiver usando cabe\u00e7alhos de grupo, as colunas fixas devem ser definidas por grupo.',",
          "",
          "[Added Lines]",
          "11:       groupFixed: 'If you use group headers, the freeze columns must be set by group.',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:       customAll: 'Todos',",
          "62:       customConfirm: 'Confirmar',",
          "63:       customRestore: 'Redefinir',",
          "65:     },",
          "66:     grid: {",
          "67:       selectOneRecord: 'Por favor, selecione pelo menos um registro!',",
          "",
          "[Removed Lines]",
          "64:       maxFixedCol: 'O n\u00famero m\u00e1ximo de colunas fixas n\u00e3o pode exceder {0}'",
          "",
          "[Added Lines]",
          "64:       maxFixedCol: 'The maximum number of Freeze columns cannot exceed {0}'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:         colSort: 'Sort',",
          "109:         colTitle: 'Title',",
          "110:         colVisible: 'Visible',",
          "112:         fixedLeft: 'Left',",
          "113:         fixedUnset: 'Unset',",
          "114:         fixedRight: 'Right'",
          "",
          "[Removed Lines]",
          "111:         colFixed: 'Fixed',",
          "",
          "[Added Lines]",
          "111:         colFixed: 'Freeze column',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:       customAll: 'Todos',",
          "192:       customConfirm: 'Confirmar',",
          "193:       customRestore: 'Redefinir',",
          "197:     },",
          "198:     input: {",
          "199:       date: {",
          "",
          "[Removed Lines]",
          "194:       fixedLeft: 'Fixar \u00e0 esquerda',",
          "195:       fixedRight: 'Fixar \u00e0 direita',",
          "196:       cancelfixed: 'N\u00e3o fixar'",
          "",
          "[Added Lines]",
          "194:       fixedLeft: 'Freeze on the left',",
          "195:       fixedRight: 'Freeze on the right',",
          "196:       cancelfixed: 'Unfreeze column'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       text: '\u52a0\u8f7d\u4e2d...'",
          "9:     },",
          "10:     error: {",
          "12:       groupMouseRange: '\u5206\u7ec4\u8868\u5934\u4e0e \"{0}\" \u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "13:       groupTag: '\u5206\u7ec4\u5217\u5934\u5e94\u8be5\u4f7f\u7528 \"{0}\" \u800c\u4e0d\u662f \"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "14:       scrollErrProp: '\u542f\u7528\u865a\u62df\u6eda\u52a8\u540e\u4e0d\u652f\u6301\u8be5\u53c2\u6570 \"{0}\"',",
          "",
          "[Removed Lines]",
          "11:       groupFixed: '\u5982\u679c\u4f7f\u7528\u5206\u7ec4\u8868\u5934\uff0c\u56fa\u5b9a\u5217\u5fc5\u987b\u6309\u7ec4\u8bbe\u7f6e',",
          "",
          "[Added Lines]",
          "11:       groupFixed: '\u5982\u679c\u4f7f\u7528\u5206\u7ec4\u8868\u5934\uff0c\u51bb\u7ed3\u5217\u5fc5\u987b\u6309\u7ec4\u8bbe\u7f6e',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:       customAll: '\u5168\u90e8',",
          "62:       customConfirm: '\u786e\u8ba4',",
          "63:       customRestore: '\u91cd\u7f6e',",
          "65:     },",
          "66:     grid: {",
          "67:       selectOneRecord: '\u8bf7\u81f3\u5c11\u9009\u62e9\u4e00\u6761\u8bb0\u5f55\uff01',",
          "",
          "[Removed Lines]",
          "64:       maxFixedCol: '\u6700\u5927\u56fa\u5b9a\u5217\u7684\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7 {0} \u4e2a'",
          "",
          "[Added Lines]",
          "64:       maxFixedCol: '\u6700\u5927\u51bb\u7ed3\u5217\u7684\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7 {0} \u4e2a'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:         colSort: '\u6392\u5e8f',",
          "117:         colTitle: '\u6807\u9898',",
          "118:         colVisible: '\u662f\u5426\u663e\u793a',",
          "120:         fixedLeft: '\u5de6\u4fa7',",
          "121:         fixedUnset: '\u4e0d\u8bbe\u7f6e',",
          "122:         fixedRight: '\u53f3\u4fa7'",
          "",
          "[Removed Lines]",
          "119:         colFixed: '\u662f\u5426\u56fa\u5b9a',",
          "",
          "[Added Lines]",
          "119:         colFixed: '\u51bb\u7ed3\u5217',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "199:       customAll: '\u5168\u90e8',",
          "200:       customConfirm: '\u786e\u8ba4',",
          "201:       customRestore: '\u91cd\u7f6e',",
          "205:     },",
          "206:     input: {",
          "207:       date: {",
          "",
          "[Removed Lines]",
          "202:       fixedLeft: '\u56fa\u5b9a\u5728\u5de6\u4fa7',",
          "203:       fixedRight: '\u56fa\u5b9a\u5728\u53f3\u4fa7',",
          "204:       cancelfixed: '\u53d6\u6d88\u56fa\u5b9a'",
          "",
          "[Added Lines]",
          "202:       fixedLeft: '\u51bb\u7ed3\u5728\u5de6\u4fa7',",
          "203:       fixedRight: '\u51bb\u7ed3\u5728\u53f3\u4fa7',",
          "204:       cancelfixed: '\u53d6\u6d88\u51bb\u7ed3\u5217'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       text: '\u52a0\u8f09\u4e2d...'",
          "9:     },",
          "10:     error: {",
          "12:       groupMouseRange: '\u5206\u7ec4\u8868\u982d\u8207 \"{0}\" \u4e0d\u80fd\u540c\u6642\u4f7f\u7528\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "13:       groupTag: '\u5206\u7d44\u5217\u982d\u61c9\u8a72\u4f7f\u7528 \"{0}\" \u800c\u4e0d\u662f \"{1}\"\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "14:       scrollErrProp: '\u555f\u7528\u865b\u64ec\u6efe\u52d5\u5f8c\u4e0d\u652f\u6301\u8a72\u53c3\u6578 \"{0}\"',",
          "",
          "[Removed Lines]",
          "11:       groupFixed: '\u5982\u679c\u4f7f\u7528\u5206\u7d44\u8868\u982d\uff0c\u56fa\u5b9a\u5217\u5fc5\u9808\u6309\u7d44\u8a2d\u5b9a',",
          "",
          "[Added Lines]",
          "11:       groupFixed: '\u5982\u679c\u4f7f\u7528\u5206\u7d44\u8868\u982d\uff0c\u51bb\u7ed3\u5217\u5fc5\u9808\u6309\u7d44\u8a2d\u5b9a',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:       customAll: '\u5168\u90e8',",
          "62:       customConfirm: '\u78ba\u8a8d',",
          "63:       customRestore: '\u91cd\u7f6e',",
          "65:     },",
          "66:     grid: {",
          "67:       selectOneRecord: '\u8acb\u81f3\u5c11\u9078\u64c7\u4e00\u689d\u8a18\u9304\uff01',",
          "",
          "[Removed Lines]",
          "64:       maxFixedCol: '\u6700\u5927\u56fa\u5b9a\u5217\u7684\u6578\u91cf\u4e0d\u80fd\u8d85\u904e {0} \u500b'",
          "",
          "[Added Lines]",
          "64:       maxFixedCol: '\u6700\u5927\u51bb\u7ed3\u5217\u7684\u6578\u91cf\u4e0d\u80fd\u8d85\u904e {0} \u500b'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:         colSort: '\u6392\u5e8f',",
          "117:         colTitle: '\u6a19\u984c',",
          "118:         colVisible: '\u662f\u5426\u986f\u793a',",
          "120:         fixedLeft: '\u5de6\u5074',",
          "121:         fixedUnset: '\u4e0d\u8a2d\u5b9a',",
          "122:         fixedRight: '\u53f3\u5074'",
          "",
          "[Removed Lines]",
          "119:         colFixed: '\u662f\u5426\u56fa\u5b9a',",
          "",
          "[Added Lines]",
          "119:         colFixed: '\u51bb\u7ed3\u5217',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "199:       customAll: '\u5168\u90e8',",
          "200:       customConfirm: '\u78ba\u8a8d',",
          "201:       customRestore: '\u91cd\u7f6e',",
          "205:     },",
          "206:     input: {",
          "207:       date: {",
          "",
          "[Removed Lines]",
          "202:       fixedLeft: '\u56fa\u5b9a\u5728\u5de6\u5074',",
          "203:       fixedRight: '\u56fa\u5b9a\u5728\u53f3\u5074',",
          "204:       cancelfixed: '\u53d6\u6d88\u56fa\u5b9a'",
          "",
          "[Added Lines]",
          "202:       fixedLeft: '\u51bb\u7ed3\u5728\u5de6\u5074',",
          "203:       fixedRight: '\u51bb\u7ed3\u5728\u53f3\u5074',",
          "204:       cancelfixed: '\u53d6\u6d88\u51bb\u7ed3\u5217'",
          "",
          "---------------"
        ],
        "packages/modal/src/modal.js||packages/modal/src/modal.js": [
          "File: packages/modal/src/modal.js -> packages/modal/src/modal.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:             class: 'vxe-modal--header-right'",
          "179:           }, [",
          "180:             cornerSlot ? h('span', {",
          "182:             }, getSlotVNs(cornerSlot({ $modal: this }))) : _e(),",
          "183:             showZoom ? h('i', {",
          "184:               class: ['vxe-modal--zoom-btn', 'trigger--btn', zoomLocat ? GlobalConfig.icon.MODAL_ZOOM_OUT : GlobalConfig.icon.MODAL_ZOOM_IN],",
          "",
          "[Removed Lines]",
          "181:               class: 'vxe-modal--corner-warpper'",
          "",
          "[Added Lines]",
          "181:               class: 'vxe-modal--corner-wrapper'",
          "",
          "---------------"
        ],
        "styles/button.scss||styles/button.scss": [
          "File: styles/button.scss -> styles/button.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "236: }",
          "237: .vxe-input,",
          "238: .vxe-button,",
          "241:   &+.vxe-button.type--button,",
          "242:   &+.vxe-button--dropdown {",
          "243:     margin-left: 12px;",
          "",
          "[Removed Lines]",
          "239: .vxe-button-warpper {",
          "240:   &+.vxe-button-warpper,",
          "",
          "[Added Lines]",
          "239: .vxe-button-wrapper {",
          "240:   &+.vxe-button-wrapper,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256: }",
          "257: .vxe-button--dropdown {",
          "258:   position: relative;",
          "260:   &+.vxe-button.type--button,",
          "261:   &+.vxe-button--dropdown {",
          "262:     margin-left: 12px;",
          "",
          "[Removed Lines]",
          "259:   &+.vxe-button-warpper,",
          "",
          "[Added Lines]",
          "259:   &+.vxe-button-wrapper,",
          "",
          "---------------"
        ],
        "styles/custom.scss||styles/custom.scss": [
          "File: styles/custom.scss -> styles/custom.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   height: 100%;",
          "121: }",
          "124:   border-bottom: 1px solid $vxe-table-border-color;",
          "125:   table {",
          "126:     width: 100%;",
          "",
          "[Removed Lines]",
          "123: .vxe-table-custom-popup--table-warpper {",
          "",
          "[Added Lines]",
          "123: .vxe-table-custom-popup--table-wrapper {",
          "",
          "---------------"
        ],
        "styles/input.scss||styles/input.scss": [
          "File: styles/input.scss -> styles/input.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "463: }",
          "464: .vxe-input--date-picker-label,",
          "465: .vxe-input--date-picker-btn {",
          "467:   display: flex;",
          "468:   align-items: center;",
          "469:   justify-content: center;",
          "",
          "[Removed Lines]",
          "466:   display: inline-block;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "styles/loading.scss||styles/loading.scss": [
          "File: styles/loading.scss -> styles/loading.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:     display: block;",
          "16:   }",
          "17:   & > .vxe-loading--chunk,",
          "19:     width: 100%;",
          "20:     position: absolute;",
          "21:     top: 50%;",
          "",
          "[Removed Lines]",
          "18:   & > .vxe-loading--warpper {",
          "",
          "[Added Lines]",
          "18:   & > .vxe-loading--wrapper {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbb40a969cd59d4deebae880a485fb5bf06247e0",
      "candidate_info": {
        "commit_hash": "bbb40a969cd59d4deebae880a485fb5bf06247e0",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/bbb40a969cd59d4deebae880a485fb5bf06247e0",
        "files": [
          "package.json",
          "packages/table/module/edit/mixin.ts",
          "packages/table/src/methods.ts",
          "packages/ui/index.ts",
          "styles/components/table.scss"
        ],
        "message": "\u4f18\u5316\u7f16\u8f91",
        "before_after_code_files": [
          "packages/table/module/edit/mixin.ts||packages/table/module/edit/mixin.ts",
          "packages/table/src/methods.ts||packages/table/src/methods.ts",
          "packages/ui/index.ts||packages/ui/index.ts",
          "styles/components/table.scss||styles/components/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/module/edit/mixin.ts||packages/table/module/edit/mixin.ts": [
          "File: packages/table/module/edit/mixin.ts -> packages/table/module/edit/mixin.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "624:     handleFocus (params: any) {",
          "625:       const { row, column, cell } = params",
          "626:       const { editRender } = column",
          "627:       if (isEnableConf(editRender)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "625:       const { editOpts } = this",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "629:         let autoFocus = editRender.autofocus || editRender.autoFocus",
          "630:         let autoSelect = editRender.autoSelect || editRender.autoselect",
          "631:         let inputElem",
          "645:           }",
          "646:         }",
          "647:         if (inputElem) {",
          "",
          "[Removed Lines]",
          "632:         if (!autoFocus && compRender) {",
          "633:           autoFocus = compRender.tableAutoFocus || compRender.tableAutofocus || (compRender as any).autoFocus || compRender.autofocus",
          "634:         }",
          "635:         if (!autoSelect && compRender) {",
          "636:           autoSelect = compRender.tableAutoSelect || (compRender as any).autoSelect || compRender.autoselect",
          "637:         }",
          "639:         if (XEUtils.isFunction(autoFocus)) {",
          "640:           inputElem = autoFocus.call(this, params)",
          "641:         } else if (autoFocus) {",
          "642:           inputElem = cell.querySelector(autoFocus)",
          "643:           if (inputElem) {",
          "644:             inputElem.focus()",
          "",
          "[Added Lines]",
          "634:         if (editOpts.autoFocus) {",
          "635:           if (!autoFocus && compRender) {",
          "636:             autoFocus = compRender.tableAutoFocus || compRender.tableAutofocus || (compRender as any).autoFocus || compRender.autofocus",
          "637:           }",
          "638:           if (!autoSelect && compRender) {",
          "639:             autoSelect = compRender.tableAutoSelect || (compRender as any).autoSelect || compRender.autoselect",
          "640:           }",
          "642:           if (XEUtils.isFunction(autoFocus)) {",
          "643:             inputElem = autoFocus.call(this, params)",
          "644:           } else if (autoFocus) {",
          "645:             inputElem = cell.querySelector(autoFocus)",
          "646:             if (inputElem) {",
          "647:               inputElem.focus()",
          "648:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "656:             }",
          "657:           }",
          "658:         } else {",
          "661:         }",
          "662:       }",
          "663:     },",
          "",
          "[Removed Lines]",
          "660:           this.scrollToRow(row, column)",
          "",
          "[Added Lines]",
          "664:           if (editOpts.autoPos) {",
          "665:             if (!column.fixed) {",
          "667:               this.scrollToRow(row, column)",
          "668:             }",
          "669:           }",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1390:           if (valueList.length && !allRemoteFilter) {",
          "1391:             const { filterMethod, filterRender, field } = column",
          "1392:             const compConf = isEnableConf(filterRender) ? renderer.get(filterRender.name) : null",
          "1395:             const cellValue = getCellValue(row, column)",
          "1396:             if (filterMethod) {",
          "1397:               return itemList.some((item: any) => filterMethod({ value: item.value, option: item, cellValue, row, column, $table: this }))",
          "",
          "[Removed Lines]",
          "1393:             const compFilterMethod = compConf && compConf.renderFilter ? (compConf.tableFilterMethod || compConf.filterMethod) : null",
          "1394:             const defaultFilterMethod = compConf ? (compConf.tableFilterDefaultMethod || compConf.defaultTableFilterMethod || compConf.defaultFilterMethod) : null",
          "",
          "[Added Lines]",
          "1393:             const compFilterMethod = compConf ? (compConf.tableFilterMethod || compConf.filterMethod) : null",
          "1394:             const tdFilterMethod = compConf ? (compConf.tableFilterDefaultMethod || compConf.defaultTableFilterMethod || compConf.defaultFilterMethod) : null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1399:               return itemList.some((item: any) => compFilterMethod({ value: item.value, option: item, cellValue, row, column, $table: this }))",
          "1400:             } else if (allFilterMethod) {",
          "1401:               return allFilterMethod({ options: itemList, values: valueList, cellValue, row, column })",
          "1404:             }",
          "1405:             return valueList.indexOf(XEUtils.get(row, field)) > -1",
          "1406:           }",
          "",
          "[Removed Lines]",
          "1402:             } else if (defaultFilterMethod) {",
          "1403:               return itemList.some((item: any) => defaultFilterMethod({ value: item.value, option: item, cellValue, row, column, $table: this }))",
          "",
          "[Added Lines]",
          "1402:             } else if (tdFilterMethod) {",
          "1403:               return itemList.some((item: any) => tdFilterMethod({ value: item.value, option: item, cellValue, row, column, $table: this }))",
          "",
          "---------------"
        ],
        "packages/ui/index.ts||packages/ui/index.ts": [
          "File: packages/ui/index.ts -> packages/ui/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:     editConfig: {",
          "111:       showIcon: true,",
          "113:     },",
          "114:     importConfig: {",
          "115:       _typeMaps: {",
          "",
          "[Removed Lines]",
          "112:       showAsterisk: true",
          "",
          "[Added Lines]",
          "112:       showAsterisk: true,",
          "113:       autoFocus: true",
          "",
          "---------------"
        ],
        "styles/components/table.scss||styles/components/table.scss": [
          "File: styles/components/table.scss -> styles/components/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "528:   font-family: var(--vxe-ui-font-family);",
          "529:   direction: ltr;",
          "530:   .vxe-table--body-wrapper {",
          "532:       background-color: var(--vxe-ui-layout-background-color);",
          "533:     }",
          "534:   }",
          "535:   .vxe-table--footer-wrapper {",
          "537:       background-color: var(--vxe-ui-table-footer-background-color);",
          "538:     }",
          "539:   }",
          "",
          "[Removed Lines]",
          "531:     table {",
          "536:     table {",
          "",
          "[Added Lines]",
          "531:     & > table {",
          "536:     & > table {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1211:           text-overflow: ellipsis;",
          "1212:           white-space: nowrap;",
          "1213:         }",
          "1219:       }",
          "1220:       &:not(.col--height) {",
          "1221:         & > .vxe-cell {",
          "",
          "[Removed Lines]",
          "1214:         &.col--height {",
          "1215:           & > .vxe-cell {",
          "1216:             overflow: auto;",
          "1217:           }",
          "1218:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}