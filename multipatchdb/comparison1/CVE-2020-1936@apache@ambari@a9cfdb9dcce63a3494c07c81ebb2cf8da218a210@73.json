{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "62958f95d4495e7136d8e39cb308b8d31272b6bd",
      "candidate_info": {
        "commit_hash": "62958f95d4495e7136d8e39cb308b8d31272b6bd",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/62958f95d4495e7136d8e39cb308b8d31272b6bd",
        "files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js"
        ],
        "message": "AMBARI-24316 Inconsistent Ambari warnings",
        "before_after_code_files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js": [
          "File: ambari-web/app/mixins/common/configs/config_recommendation_parser.js -> ambari-web/app/mixins/common/configs/config_recommendation_parser.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:                 updateBoundariesCallback(stackProperty, attr, propertyAttributes[attr], name, fileName, configGroup);",
          "88:               }",
          "89:             }",
          "90:           }",
          "91:         }",
          "92:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:             Em.tryInvoke(config, 'validate');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "951187d4dacb41e59023da00bac2b737b469b7b2",
      "candidate_info": {
        "commit_hash": "951187d4dacb41e59023da00bac2b737b469b7b2",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/951187d4dacb41e59023da00bac2b737b469b7b2",
        "files": [
          "ambari-web/app/styles/hosts.less",
          "ambari-web/app/styles/modal_popups.less"
        ],
        "message": "AMBARI-24346 Host Details page: alignment issues",
        "before_after_code_files": [
          "ambari-web/app/styles/hosts.less||ambari-web/app/styles/hosts.less",
          "ambari-web/app/styles/modal_popups.less||ambari-web/app/styles/modal_popups.less"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/styles/hosts.less||ambari-web/app/styles/hosts.less": [
          "File: ambari-web/app/styles/hosts.less -> ambari-web/app/styles/hosts.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "428:         pointer-events: auto;",
          "429:       }",
          "430:     }",
          "431:   }",
          "433:   .status-icons span {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "431:     .table > tbody > tr > td {",
          "432:       vertical-align: middle;",
          "433:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "437:   .action-icon {",
          "438:     padding: 2px 5px 0 5px;",
          "439:     font-size: 16px;",
          "440:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "442:     top: 2px;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "467:       }",
          "468:     }",
          "469:   }",
          "470: }",
          "472: .host-breadcrumb {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "474:   .nav {",
          "475:     .alerts-crit-count,",
          "476:     .alerts-warn-count {",
          "477:       padding: .4em .5em;",
          "478:       display: inline-block;",
          "479:       vertical-align: top;",
          "480:     }",
          "481:   }",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/modal_popups.less||ambari-web/app/styles/modal_popups.less": [
          "File: ambari-web/app/styles/modal_popups.less -> ambari-web/app/styles/modal_popups.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "286:           width:100%;",
          "287:           overflow: auto;",
          "288:         }",
          "290:           margin: 0 auto;",
          "291:         }",
          "292:         .message{",
          "293:           color: #777;",
          "",
          "[Removed Lines]",
          "289:         table{",
          "",
          "[Added Lines]",
          "289:         table {",
          "291:           input[type=\"checkbox\"] + label {",
          "292:             top: 0;",
          "293:           }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0dd8b67ce2e82559e01e39a193726a988b521ce6",
      "candidate_info": {
        "commit_hash": "0dd8b67ce2e82559e01e39a193726a988b521ce6",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/0dd8b67ce2e82559e01e39a193726a988b521ce6",
        "files": [
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/metainfo.xml",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/collection.py",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py"
        ],
        "message": "AMBARI-24504. Solr API reports backup as complete while copy is still in progress. (#2115)\n\n* AMBARI-24504. Solr API reports backup as complete while copy is still in progress.\n\n* AMBARI-24504. Use continue instead of break",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/collection.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/collection.py",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/collection.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/collection.py": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/collection.py -> ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/collection.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:       command_commons.snapshot_status_check(status_check_cmd, status_check_json_output, core, True,",
          "80:                                             log_output=command_commons.log_output, tries=command_commons.request_tries,",
          "81:                                             time_interval=command_commons.request_time_interval)",
          "84: def restore_collection(env):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:       snapshot_folder=format(\"{index_location}/snapshot.{core}\")",
          "83:       if command_commons.check_folder_exists(snapshot_folder):",
          "84:         command_commons.check_folder_until_size_not_changes(snapshot_folder)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py -> ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/command_commons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "352:   if returncode:",
          "353:     return False",
          "354:   return True",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "356: def check_folder_until_size_not_changes(dir):",
          "357:   \"\"\"",
          "358:   Call du -d 0 <folder> | cut -f 1 on specific directory until the size not changes (so copy operation has finished)",
          "359:   \"\"\"",
          "360:   cmd = format(\"du -d 0 {dir} | cut -f 1\")",
          "361:   size_changed = True",
          "362:   size_str = \"-1\"",
          "363:   while size_changed:",
          "364:     returncode, stdout = call(cmd, user=params.infra_solr_user, timeout=300)",
          "365:     if stdout:",
          "366:       actual_size_str = stdout.strip()",
          "367:       if actual_size_str == size_str:",
          "368:         size_changed = False",
          "369:         continue",
          "370:       else:",
          "371:         Logger.info(format(\"Actual size of '{dir}' is {actual_size_str}, wait 5 sec and check again, to make sure no copy operation is in progress...\"))",
          "372:         time.sleep(5)",
          "373:         size_str = actual_size_str",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "884a26eb0baa88627e4bf2bb4f2281e019fc5988",
      "candidate_info": {
        "commit_hash": "884a26eb0baa88627e4bf2bb4f2281e019fc5988",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/884a26eb0baa88627e4bf2bb4f2281e019fc5988",
        "files": [
          "ambari-server/src/main/python/ambari_server/serverSetup.py",
          "ambari-server/src/main/python/ambari_server/serverUpgrade.py",
          "ambari-server/src/main/python/ambari_server/utils.py"
        ],
        "message": "AMBARI-24496. Ambari updates lates_url info for HDF stacks with HDP link (amagyar) (#2107) (#2108)",
        "before_after_code_files": [
          "ambari-server/src/main/python/ambari_server/serverSetup.py||ambari-server/src/main/python/ambari_server/serverSetup.py",
          "ambari-server/src/main/python/ambari_server/serverUpgrade.py||ambari-server/src/main/python/ambari_server/serverUpgrade.py",
          "ambari-server/src/main/python/ambari_server/utils.py||ambari-server/src/main/python/ambari_server/utils.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/python/ambari_server/serverSetup.py||ambari-server/src/main/python/ambari_server/serverSetup.py": [
          "File: ambari-server/src/main/python/ambari_server/serverSetup.py -> ambari-server/src/main/python/ambari_server/serverSetup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: from ambari_server.serverUtils import is_server_runing",
          "47: from ambari_server.setupSecurity import adjust_directory_permissions",
          "48: from ambari_server.userInput import get_YN_input, get_validated_string_input",
          "50: from ambari_server.serverClassPath import ServerClassPath",
          "51: from ambari_server.ambariPath import AmbariPath",
          "",
          "[Removed Lines]",
          "49: from ambari_server.utils import locate_file, update_latest_in_repoinfos_for_all_stacks, get_json_url_from_repo_file",
          "",
          "[Added Lines]",
          "49: from ambari_server.utils import locate_file, update_latest_in_repoinfos_for_stacks, get_json_url_from_repo_file",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1221:     print \"Ambari repo file contains latest json url {0}, updating stacks repoinfos with it...\".format(json_url)",
          "1222:     properties = get_ambari_properties()",
          "1223:     stack_root = get_stack_location(properties)",
          "1225:   else:",
          "1226:     print \"Ambari repo file doesn't contain latest json url, skipping repoinfos modification\"",
          "",
          "[Removed Lines]",
          "1224:     update_latest_in_repoinfos_for_all_stacks(stack_root, json_url)",
          "",
          "[Added Lines]",
          "1224:     update_latest_in_repoinfos_for_stacks(stack_root, json_url)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/python/ambari_server/serverUpgrade.py||ambari-server/src/main/python/ambari_server/serverUpgrade.py": [
          "File: ambari-server/src/main/python/ambari_server/serverUpgrade.py -> ambari-server/src/main/python/ambari_server/serverUpgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:   AMBARI_ENV_FILE, JDBC_DATABASE_PROPERTY, get_default_views_dir, write_gpl_license_accepted, set_property",
          "46: from ambari_server.setupSecurity import adjust_directory_permissions, \\",
          "47:   generate_env, ensure_can_start_under_current_user",
          "49: from ambari_server.serverUtils import is_server_runing, get_ambari_server_api_base, get_ssl_context",
          "50: from ambari_server.userInput import get_validated_string_input, get_prompt_default, read_password, get_YN_input",
          "51: from ambari_server.serverClassPath import ServerClassPath",
          "",
          "[Removed Lines]",
          "48: from ambari_server.utils import compare_versions, get_json_url_from_repo_file, update_latest_in_repoinfos_for_all_stacks",
          "",
          "[Added Lines]",
          "48: from ambari_server.utils import compare_versions, get_json_url_from_repo_file, update_latest_in_repoinfos_for_stacks",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "321:     print \"Ambari repo file contains latest json url {0}, updating stacks repoinfos with it...\".format(json_url)",
          "322:     properties = get_ambari_properties()",
          "323:     stack_root = get_stack_location(properties)",
          "325:   else:",
          "326:     print \"Ambari repo file doesn't contain latest json url, skipping repoinfos modification\"",
          "",
          "[Removed Lines]",
          "324:     update_latest_in_repoinfos_for_all_stacks(stack_root, json_url)",
          "",
          "[Added Lines]",
          "324:     update_latest_in_repoinfos_for_stacks(stack_root, json_url)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/python/ambari_server/utils.py||ambari-server/src/main/python/ambari_server/utils.py": [
          "File: ambari-server/src/main/python/ambari_server/utils.py -> ambari-server/src/main/python/ambari_server/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "367: # Go though all stacks and update the repoinfo.xml files",
          "368: # replace <latest> tag with the passed url",
          "370:   for stack_name in os.walk(stacks_root).next()[1]:",
          "377: # replace <latest> tag in the file with the passed url",
          "",
          "[Removed Lines]",
          "369: def update_latest_in_repoinfos_for_all_stacks(stacks_root, json_url_string):",
          "371:     for stack_version in os.walk(os.path.join(stacks_root, stack_name)).next()[1]:",
          "372:       repoinfo_xml_path = os.path.join(stacks_root, stack_name, stack_version, \"repos\", \"repoinfo.xml\")",
          "373:       if os.path.exists(repoinfo_xml_path):",
          "374:         replace_latest(repoinfo_xml_path, json_url_string)",
          "",
          "[Added Lines]",
          "369: def update_latest_in_repoinfos_for_stacks(stacks_root, json_url_string, predicate=lambda stack_name: stack_name == 'HDP'):",
          "371:     if predicate(stack_name):",
          "372:       for stack_version in os.walk(os.path.join(stacks_root, stack_name)).next()[1]:",
          "373:         repoinfo_xml_path = os.path.join(stacks_root, stack_name, stack_version, \"repos\", \"repoinfo.xml\")",
          "374:         if os.path.exists(repoinfo_xml_path):",
          "375:           replace_latest(repoinfo_xml_path, json_url_string)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6919dd70f7cc97e695ab2d6c791b3e8562d6878f",
      "candidate_info": {
        "commit_hash": "6919dd70f7cc97e695ab2d6c791b3e8562d6878f",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/6919dd70f7cc97e695ab2d6c791b3e8562d6878f",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/AlertSchedulerHandler.py",
          "ambari-server/src/main/java/org/apache/ambari/server/api/query/render/AlertSummaryGroupedRenderer.java",
          "ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertDefinitionResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/AlertDefinitionDisabledEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertDefinitionDisabledListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java"
        ],
        "message": "AMBARI-24611. Disabling an Alert Does Not Clear It in the Web UI. (#2300)\n\n* AMBARI-24611. Disabling an Alert Does Not Clear It in the Web UI. (mpapirkovskyy)\n\n* AMBARI-24611. Disabling an Alert Does Not Clear It in the Web UI. (mpapirkovskyy)\n\n* AMBARI-24611. Disabling an Alert Does Not Clear It in the Web UI.",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/AlertSchedulerHandler.py||ambari-agent/src/main/python/ambari_agent/AlertSchedulerHandler.py",
          "ambari-server/src/main/java/org/apache/ambari/server/api/query/render/AlertSummaryGroupedRenderer.java||ambari-server/src/main/java/org/apache/ambari/server/api/query/render/AlertSummaryGroupedRenderer.java",
          "ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java||ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertDefinitionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertDefinitionResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/AlertDefinitionDisabledEvent.java||ambari-server/src/main/java/org/apache/ambari/server/events/AlertDefinitionDisabledEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertDefinitionDisabledListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertDefinitionDisabledListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/AlertSchedulerHandler.py||ambari-agent/src/main/python/ambari_agent/AlertSchedulerHandler.py": [
          "File: ambari-agent/src/main/python/ambari_agent/AlertSchedulerHandler.py -> ambari-agent/src/main/python/ambari_agent/AlertSchedulerHandler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:   TYPE_RECOVERY = 'RECOVERY'",
          "52:   def __init__(self, initializer_module, in_minutes=True):",
          "54:     self.cachedir = initializer_module.config.alerts_cachedir",
          "55:     self.stacks_dir = initializer_module.config.stacks_dir",
          "56:     self.common_services_dir = initializer_module.config.common_services_dir",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:     self.initializer_module = initializer_module",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:     definitions = self.__load_definitions()",
          "170:     scheduled_jobs = self.__scheduler.get_jobs()",
          "172:     # for every scheduled job, see if its UUID is still valid",
          "173:     for scheduled_job in scheduled_jobs:",
          "174:       uuid_valid = False",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     self.initializer_module.alert_status_reporter.reported_alerts.clear()",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/api/query/render/AlertSummaryGroupedRenderer.java||ambari-server/src/main/java/org/apache/ambari/server/api/query/render/AlertSummaryGroupedRenderer.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/api/query/render/AlertSummaryGroupedRenderer.java -> ambari-server/src/main/java/org/apache/ambari/server/api/query/render/AlertSummaryGroupedRenderer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     }",
          "229:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:   public static Map<String, AlertDefinitionSummary> generateEmptySummary(Long definitionId, String definitionName) {",
          "232:     Map<String, AlertDefinitionSummary> summaries = new HashMap<>();",
          "234:     AlertDefinitionSummary groupSummaryInfo = new AlertDefinitionSummary();",
          "235:     groupSummaryInfo.Id = definitionId;",
          "236:     groupSummaryInfo.Name = definitionName;",
          "238:     summaries.put(definitionName, groupSummaryInfo);",
          "240:     return summaries;",
          "241:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java||ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java -> ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1240:       for (AlertDefinitionEntity definition : definitionsToDisable) {",
          "1241:         definition.setEnabled(false);",
          "1242:         alertDefinitionDao.merge(definition);",
          "1244:       }",
          "1245:   }",
          "",
          "[Removed Lines]",
          "1243:         eventPublisher.publish(new AlertDefinitionDisabledEvent(clusterId, definition.getDefinitionId()));",
          "",
          "[Added Lines]",
          "1243:         eventPublisher.publish(new AlertDefinitionDisabledEvent(clusterId, definition.getDefinitionId(),",
          "1244:             definition.getDefinitionName()));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertDefinitionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertDefinitionResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertDefinitionResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertDefinitionResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "329:         if (oldEnabled && !entity.getEnabled()) {",
          "330:           AlertDefinitionDisabledEvent event = new AlertDefinitionDisabledEvent(",
          "333:           eventPublisher.publish(event);",
          "334:         }",
          "",
          "[Removed Lines]",
          "331:               entity.getClusterId(), entity.getDefinitionId());",
          "",
          "[Added Lines]",
          "331:               entity.getClusterId(), entity.getDefinitionId(), entity.getDefinitionName());",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/AlertDefinitionDisabledEvent.java||ambari-server/src/main/java/org/apache/ambari/server/events/AlertDefinitionDisabledEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/AlertDefinitionDisabledEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/events/AlertDefinitionDisabledEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:   private final long m_definitionId;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:   private final String definitionName;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     super(AmbariEventType.ALERT_DEFINITION_DISABLED, clusterId);",
          "43:     m_definitionId = definitionId;",
          "44:   }",
          "",
          "[Removed Lines]",
          "41:   public AlertDefinitionDisabledEvent(long clusterId, long definitionId) {",
          "",
          "[Added Lines]",
          "46:   public AlertDefinitionDisabledEvent(long clusterId, long definitionId, String definitionName) {",
          "49:     this.definitionName = definitionName;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51:   public long getDefinitionId() {",
          "52:     return m_definitionId;",
          "53:   }",
          "54: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:   public String getDefinitionName() {",
          "67:     return definitionName;",
          "68:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertDefinitionDisabledListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertDefinitionDisabledListener.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertDefinitionDisabledListener.java -> ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertDefinitionDisabledListener.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.server.events.listeners.alerts;",
          "20: import org.apache.ambari.server.EagerSingleton;",
          "21: import org.apache.ambari.server.events.AlertDefinitionDisabledEvent;",
          "22: import org.apache.ambari.server.events.publishers.AmbariEventPublisher;",
          "23: import org.apache.ambari.server.orm.dao.AlertsDAO;",
          "24: import org.apache.ambari.server.orm.entities.AlertCurrentEntity;",
          "25: import org.slf4j.Logger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import java.util.HashMap;",
          "21: import java.util.Map;",
          "24: import org.apache.ambari.server.api.query.render.AlertSummaryGroupedRenderer;",
          "26: import org.apache.ambari.server.events.AlertUpdateEvent;",
          "28: import org.apache.ambari.server.events.publishers.STOMPUpdatePublisher;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:   @Inject",
          "47:   private AlertsDAO m_alertsDao = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:   @Inject",
          "56:   private STOMPUpdatePublisher STOMPUpdatePublisher;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:     LOG.debug(\"Received event {}\", event);",
          "69:     m_alertsDao.removeCurrentDisabledAlerts();",
          "70:   }",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     Map<Long, Map<String, AlertSummaryGroupedRenderer.AlertDefinitionSummary>> alertUpdates = new HashMap<>();",
          "82:     alertUpdates.put(event.getClusterId(), AlertSummaryGroupedRenderer.generateEmptySummary(event.getDefinitionId(),",
          "83:         event.getDefinitionName()));",
          "84:     STOMPUpdatePublisher.publish(new AlertUpdateEvent(alertUpdates));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java -> ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:           alertEvents.add(new InitialAlertEvent(clusterId, alert, current));",
          "257:         } finally {",
          "259:           lock.unlock();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258:           if (!alertUpdates.containsKey(clusterId)) {",
          "259:             alertUpdates.put(clusterId, new HashMap<>());",
          "260:           }",
          "261:           Map<String, AlertSummaryGroupedRenderer.AlertDefinitionSummary> summaries = alertUpdates.get(clusterId);",
          "263:           AlertSummaryGroupedRenderer.updateSummary(summaries, definition.getDefinitionId(),",
          "264:               definition.getDefinitionName(), alertState, alert.getTimestamp(), maintenanceState, alert.getText());",
          "",
          "---------------"
        ]
      }
    }
  ]
}