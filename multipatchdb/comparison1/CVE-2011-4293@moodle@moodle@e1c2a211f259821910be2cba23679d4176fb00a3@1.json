{
  "cve_id": "CVE-2011-4293",
  "cve_desc": "The theme implementation in Moodle 2.0.x before 2.0.4 and 2.1.x before 2.1.1 triggers duplicate caching of Cascading Style Sheets (CSS) and JavaScript content, which allows remote attackers to bypass intended access restrictions and write to an operating-system temporary directory via unspecified vectors.",
  "repo": "moodle/moodle",
  "patch_hash": "e1c2a211f259821910be2cba23679d4176fb00a3",
  "patch_info": {
    "commit_hash": "e1c2a211f259821910be2cba23679d4176fb00a3",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/e1c2a211f259821910be2cba23679d4176fb00a3",
    "files": [
      "theme/javascript.php",
      "theme/styles.php"
    ],
    "message": "MDL-28147 do not double cache theme css/js",
    "before_after_code_files": [
      "theme/javascript.php||theme/javascript.php",
      "theme/styles.php||theme/styles.php"
    ]
  },
  "patch_diff": {
    "theme/javascript.php||theme/javascript.php": [
      "File: theme/javascript.php -> theme/javascript.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "118: }",
      "120: function minify($files) {",
      "123:     if (0 === stripos(PHP_OS, 'win')) {",
      "124:         Minify::setDocRoot(); // IIS may need help",
      "125:     }",
      "128:     $options = array(",
      "129:         'bubbleCssImports' => false,",
      "",
      "[Removed Lines]",
      "121:     global $CFG;",
      "126:     Minify::setCache('', true);",
      "",
      "[Added Lines]",
      "125:     Minify::setCache(null, false);",
      "",
      "---------------"
    ],
    "theme/styles.php||theme/styles.php": [
      "File: theme/styles.php -> theme/styles.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "160:     if (0 === stripos(PHP_OS, 'win')) {",
      "161:         Minify::setDocRoot(); // IIS may need help",
      "162:     }",
      "165:     $options = array(",
      "166:         'bubbleCssImports' => false,",
      "",
      "[Removed Lines]",
      "163:     Minify::setCache('', true);",
      "",
      "[Added Lines]",
      "164:     Minify::setCache(null, false);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "979d3207222bb2106dff8ea782433994debd3c8b",
      "candidate_info": {
        "commit_hash": "979d3207222bb2106dff8ea782433994debd3c8b",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/979d3207222bb2106dff8ea782433994debd3c8b",
        "files": [
          "lib/csslib.php",
          "lib/javascript.php",
          "lib/jslib.php",
          "theme/image.php",
          "theme/javascript.php",
          "theme/styles.php"
        ],
        "message": "MDL-32825 try to improve atomicity of cache file operations in themes and javascript",
        "before_after_code_files": [
          "lib/csslib.php||lib/csslib.php",
          "lib/javascript.php||lib/javascript.php",
          "lib/jslib.php||lib/jslib.php",
          "theme/image.php||theme/image.php",
          "theme/javascript.php||theme/javascript.php",
          "theme/styles.php||theme/styles.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "theme/javascript.php||theme/javascript.php",
            "theme/styles.php||theme/styles.php"
          ],
          "candidate": [
            "theme/javascript.php||theme/javascript.php",
            "theme/styles.php||theme/styles.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/csslib.php||lib/csslib.php": [
          "File: lib/csslib.php -> lib/csslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:         $css = $theme->post_process(css_minify_css($cssfiles));",
          "72:     }",
          "78: }",
          "",
          "[Removed Lines]",
          "74:     check_dir_exists(dirname($csspath));",
          "75:     $fp = fopen($csspath, 'w');",
          "76:     fwrite($fp, $css);",
          "77:     fclose($fp);",
          "",
          "[Added Lines]",
          "74:     clearstatcache();",
          "75:     if (!file_exists(dirname($csspath))) {",
          "76:         @mkdir(dirname($csspath), $CFG->directorypermissions, true);",
          "77:     }",
          "81:     ignore_user_abort(true);",
          "82:     if ($fp = fopen($csspath.'.tmp', 'xb')) {",
          "83:         fwrite($fp, $css);",
          "84:         fclose($fp);",
          "85:         rename($csspath.'.tmp', $csspath);",
          "86:         @chmod($csspath, $CFG->filepermissions);",
          "87:         @unlink($csspath.'.tmp'); // just in case anything fails",
          "88:     }",
          "89:     ignore_user_abort(false);",
          "90:     if (connection_aborted()) {",
          "91:         die;",
          "92:     }",
          "",
          "---------------"
        ],
        "lib/javascript.php||lib/javascript.php": [
          "File: lib/javascript.php -> lib/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:         js_send_cached($candidate, $etag);",
          "90:     } else {",
          "93:         }",
          "98:     }",
          "106: }",
          "",
          "[Removed Lines]",
          "91:         if (!file_exists(dirname($candidate))) {",
          "92:             @mkdir(dirname($candidate), $CFG->directorypermissions, true);",
          "94:         $fp = fopen($candidate, 'w');",
          "95:         fwrite($fp, js_minify($jsfiles));",
          "96:         fclose($fp);",
          "97:         js_send_cached($candidate, $etag);",
          "100: } else {",
          "101:     $content = '';",
          "102:     foreach ($jsfiles as $jsfile) {",
          "103:         $content .= file_get_contents($jsfile).\"\\n\";",
          "104:     }",
          "105:     js_send_uncached($candidate, $etag);",
          "",
          "[Added Lines]",
          "91:         js_write_cache_file_content($candidate, js_minify($jsfiles));",
          "93:         clearstatcache();",
          "94:         if (file_exists($candidate)) {",
          "95:             js_send_cached($candidate, $etag);",
          "98: }",
          "100: $content = '';",
          "101: foreach ($jsfiles as $jsfile) {",
          "102:     $content .= file_get_contents($jsfile).\"\\n\";",
          "104: js_send_uncached($content, $etag);",
          "",
          "---------------"
        ],
        "lib/jslib.php||lib/jslib.php": [
          "File: lib/jslib.php -> lib/jslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:     }",
          "155:     return $js;",
          "156: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163: function js_write_cache_file_content($file, $content) {",
          "164:     global $CFG;",
          "166:     clearstatcache();",
          "167:     if (!file_exists(dirname($file))) {",
          "168:         @mkdir(dirname($file), $CFG->directorypermissions, true);",
          "169:     }",
          "173:     ignore_user_abort(true);",
          "174:     if ($fp = fopen($file.'.tmp', 'xb')) {",
          "175:         fwrite($fp, $content);",
          "176:         fclose($fp);",
          "177:         rename($file.'.tmp', $file);",
          "178:         @chmod($file, $CFG->filepermissions);",
          "179:         @unlink($file.'.tmp'); // just in case anything fails",
          "180:     }",
          "181:     ignore_user_abort(false);",
          "182:     if (connection_aborted()) {",
          "183:         die;",
          "184:     }",
          "185: }",
          "190: function js_send_css_not_found() {",
          "191:     header('HTTP/1.0 404 not found');",
          "192:     die('JS was not found, sorry.');",
          "193: }",
          "",
          "---------------"
        ],
        "theme/image.php||theme/image.php": [
          "File: theme/image.php -> theme/image.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:     image_not_found();",
          "136: }",
          "139: if ($rev > -1) {",
          "140:     $pathinfo = pathinfo($imagefile);",
          "141:     $cacheimage = \"$candidatelocation/$image.\".$pathinfo['extension'];",
          "149:     }",
          "154: }",
          "",
          "[Removed Lines]",
          "142:     if (!file_exists($cacheimage)) {",
          "143:         if (!file_exists(dirname($cacheimage))) {",
          "146:             @mkdir(dirname($cacheimage), $CFG->directorypermissions, true);",
          "147:         }",
          "148:         copy($imagefile, $cacheimage);",
          "150:     send_cached_image($cacheimage, $etag);",
          "152: } else {",
          "153:     send_uncached_image($imagefile);",
          "",
          "[Added Lines]",
          "142:     clearstatcache();",
          "143:     if (!file_exists(dirname($cacheimage))) {",
          "144:         @mkdir(dirname($cacheimage), $CFG->directorypermissions, true);",
          "149:     ignore_user_abort(true);",
          "150:     if (@copy($imagefile, $cacheimage.'.tmp')) {",
          "151:         rename($cacheimage.'.tmp', $cacheimage);",
          "152:         @chmod($cacheimage, $CFG->filepermissions);",
          "153:         @unlink($cacheimage.'.tmp'); // just in case anything fails",
          "154:     }",
          "155:     ignore_user_abort(false);",
          "156:     if (connection_aborted()) {",
          "157:         die;",
          "158:     }",
          "160:     clearstatcache();",
          "161:     if (file_exists($cacheimage)) {",
          "162:         send_cached_image($cacheimage, $etag);",
          "163:     }",
          "166: send_uncached_image($imagefile);",
          "",
          "---------------"
        ],
        "theme/javascript.php||theme/javascript.php": [
          "File: theme/javascript.php -> theme/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: $etag = sha1(\"$themename/$rev/$type\");",
          "92: if ($rev > -1) {",
          "95:     clearstatcache();",
          "104: }",
          "",
          "[Removed Lines]",
          "96:     check_dir_exists(dirname($candidate));",
          "97:     $fp = fopen($candidate, 'w');",
          "98:     fwrite($fp, js_minify($theme->javascript_files($type)));",
          "99:     fclose($fp);",
          "100:     js_send_cached($candidate, $etag);",
          "102: } else {",
          "103:     js_send_uncached($theme->javascript_content($type));",
          "",
          "[Added Lines]",
          "93:     js_write_cache_file_content($candidate, js_minify($theme->javascript_files($type)));",
          "96:     if (file_exists($candidate)) {",
          "97:         js_send_cached($candidate, $etag);",
          "98:     }",
          "101: js_send_uncached($theme->javascript_content($type));",
          "",
          "---------------"
        ],
        "theme/styles.php||theme/styles.php": [
          "File: theme/styles.php -> theme/styles.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:     $cssfile = \"$CFG->cachedir/theme/$themename/css/all.css\";",
          "119:     css_store_css($theme, $cssfile, $allfiles);",
          "120: }",
          "121: css_send_cached_css($candidatesheet, $etag);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123: clearstatcache();",
          "124: if (!file_exists($candidatesheet)) {",
          "125:     css_send_css_not_found();",
          "126: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8475b9704ff38c3de23735f8f1f50389e55546c3",
      "candidate_info": {
        "commit_hash": "8475b9704ff38c3de23735f8f1f50389e55546c3",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/8475b9704ff38c3de23735f8f1f50389e55546c3",
        "files": [
          "theme/javascript.php"
        ],
        "message": "MDL-32683 fine tune theme javascript caching",
        "before_after_code_files": [
          "theme/javascript.php||theme/javascript.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "theme/javascript.php||theme/javascript.php"
          ],
          "candidate": [
            "theme/javascript.php||theme/javascript.php"
          ]
        }
      },
      "candidate_diff": {
        "theme/javascript.php||theme/javascript.php": [
          "File: theme/javascript.php -> theme/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: }",
          "66: $candidate = \"$CFG->cachedir/theme/$themename/javascript_$type.js\";",
          "68: if ($rev > -1 and file_exists($candidate)) {",
          "69:     if (!empty($_SERVER['HTTP_IF_NONE_MATCH']) || !empty($_SERVER['HTTP_IF_MODIFIED_SINCE'])) {",
          "73:         header('HTTP/1.1 304 Not Modified');",
          "74:         header('Expires: '. gmdate('D, d M Y H:i:s', time() + $lifetime) .' GMT');",
          "75:         header('Cache-Control: public, max-age='.$lifetime);",
          "76:         header('Content-Type: application/javascript; charset=utf-8');",
          "77:         die;",
          "78:     }",
          "80: }",
          "",
          "[Removed Lines]",
          "72:         $lifetime = 60*60*24*30; // 30 days",
          "79:     send_cached_js($candidate, $rev);",
          "",
          "[Added Lines]",
          "67: $etag = sha1(\"$themename/$rev/$type\");",
          "73:         $lifetime = 60*60*24*60; // 60 days only - the revision may get incremented quite often",
          "78:         header('Etag: '.$etag);",
          "81:     send_cached_js($candidate, $etag);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: $theme = theme_config::load($themename);",
          "96: if ($rev > -1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98: $rev = theme_get_revision();",
          "99: $etag = sha1(\"$themename/$rev/$type\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:     $fp = fopen($candidate, 'w');",
          "102:     fwrite($fp, minify($theme->javascript_files($type)));",
          "103:     fclose($fp);",
          "105: } else {",
          "106:     send_uncached_js($theme->javascript_content($type));",
          "107: }",
          "",
          "[Removed Lines]",
          "104:     send_cached_js($candidate);",
          "",
          "[Added Lines]",
          "109:     send_cached_js($candidate, $etag);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "115:     global $CFG;",
          "116:     require(\"$CFG->dirroot/lib/xsendfilelib.php\");",
          "120:     header('Content-Disposition: inline; filename=\"javascript.php\"');",
          "121:     header('Last-Modified: '. gmdate('D, d M Y H:i:s', filemtime($jspath)) .' GMT');",
          "122:     header('Expires: '. gmdate('D, d M Y H:i:s', time() + $lifetime) .' GMT');",
          "",
          "[Removed Lines]",
          "114: function send_cached_js($jspath) {",
          "118:     $lifetime = 60*60*24*30; // 30 days",
          "",
          "[Added Lines]",
          "119: function send_cached_js($jspath, $etag) {",
          "123:     $lifetime = 60*60*24*60; // 60 days only - the revision may get incremented quite often",
          "125:     header('Etag: '.$etag);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1f582d99c50e8d5622329c76716ab46a54109ef",
      "candidate_info": {
        "commit_hash": "d1f582d99c50e8d5622329c76716ab46a54109ef",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/d1f582d99c50e8d5622329c76716ab46a54109ef",
        "files": [
          "lib/csslib.php",
          "lib/javascript.php",
          "theme/javascript.php"
        ],
        "message": "MDL-31079 detect js and css minimisation failures",
        "before_after_code_files": [
          "lib/csslib.php||lib/csslib.php",
          "lib/javascript.php||lib/javascript.php",
          "theme/javascript.php||theme/javascript.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "theme/javascript.php||theme/javascript.php"
          ],
          "candidate": [
            "theme/javascript.php||theme/javascript.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/csslib.php||lib/csslib.php": [
          "File: lib/csslib.php -> lib/csslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "198: function css_minify_css($files) {",
          "199:     global $CFG;",
          "201:     set_include_path($CFG->libdir . '/minify/lib' . PATH_SEPARATOR . get_include_path());",
          "202:     require_once('Minify.php');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201:     if (empty($files)) {",
          "202:         return '';",
          "203:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "221:         'quiet' => true",
          "222:     );",
          "225: }",
          "",
          "[Removed Lines]",
          "223:     $result = Minify::serve('Files', $options);",
          "224:     return $result['content'];",
          "",
          "[Added Lines]",
          "228:     $error = 'unknown';",
          "229:     try {",
          "230:         $result = Minify::serve('Files', $options);",
          "231:         if ($result['success']) {",
          "232:             return $result['content'];",
          "233:         }",
          "234:     } catch (Exception $e) {",
          "235:         $error = $e->getMessage();",
          "236:         $error = str_replace(\"\\r\", ' ', $error);",
          "237:         $error = str_replace(\"\\n\", ' ', $error);",
          "238:     }",
          "241:     $css = <<<EOD",
          "247: EOD;",
          "248:     foreach ($files as $cssfile) {",
          "249:         $css .= file_get_contents($cssfile).\"\\n\";",
          "250:     }",
          "251:     return $css;",
          "",
          "---------------"
        ],
        "lib/javascript.php||lib/javascript.php": [
          "File: lib/javascript.php -> lib/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:         'files' => $files",
          "86:     );",
          "90: }",
          "",
          "[Removed Lines]",
          "88:     Minify::serve('Files', $options);",
          "89:     die();",
          "",
          "[Added Lines]",
          "88:     try {",
          "89:         Minify::serve('Files', $options);",
          "90:         die();",
          "91:     } catch (Exception $e) {",
          "92:         $error = $e->getMessage();",
          "93:         $error = str_replace(\"\\r\", ' ', $error);",
          "94:         $error = str_replace(\"\\n\", ' ', $error);",
          "95:     }",
          "98:     $js = <<<EOD",
          "99: try {console.log('Error: Minimisation of javascript failed!');} catch (e) {}",
          "106: EOD;",
          "107:     echo $js;",
          "108:     foreach ($files as $jsfile) {",
          "109:         echo file_get_contents($jsfile).\"\\n\";",
          "110:     }",
          "",
          "---------------"
        ],
        "theme/javascript.php||theme/javascript.php": [
          "File: theme/javascript.php -> theme/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "130: }",
          "132: function minify($files) {",
          "133:     if (0 === stripos(PHP_OS, 'win')) {",
          "134:         Minify::setDocRoot(); // IIS may need help",
          "135:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:     if (empty($files)) {",
          "134:         return '';",
          "135:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150:         'quiet' => true",
          "151:     );",
          "155: }",
          "",
          "[Removed Lines]",
          "153:     $result = Minify::serve('Files', $options);",
          "154:     return $result['content'];",
          "",
          "[Added Lines]",
          "157:     $error = 'unknown';",
          "158:     try {",
          "159:         $result = Minify::serve('Files', $options);",
          "160:         if ($result['success']) {",
          "161:             return $result['content'];",
          "162:         }",
          "163:     } catch (Exception $e) {",
          "164:         $error = $e->getMessage();",
          "165:         $error = str_replace(\"\\r\", ' ', $error);",
          "166:         $error = str_replace(\"\\n\", ' ', $error);",
          "167:     }",
          "170:     $js = <<<EOD",
          "171: try {console.log('Error: Minimisation of theme javascript failed!');} catch (e) {}",
          "178: EOD;",
          "179:     foreach ($files as $jsfile) {",
          "180:         $js .= file_get_contents($jsfile).\"\\n\";",
          "181:     }",
          "182:     return $js;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ab297434182069f36c4f3b8e449a88d2e2cace4",
      "candidate_info": {
        "commit_hash": "8ab297434182069f36c4f3b8e449a88d2e2cace4",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/8ab297434182069f36c4f3b8e449a88d2e2cace4",
        "files": [
          "lib/javascript.php",
          "lib/jslib.php",
          "lib/outputrequirementslib.php",
          "theme/javascript.php"
        ],
        "message": "MDL-32683 improve and standardise JS serving",
        "before_after_code_files": [
          "lib/javascript.php||lib/javascript.php",
          "lib/jslib.php||lib/jslib.php",
          "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
          "theme/javascript.php||theme/javascript.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "theme/javascript.php||theme/javascript.php"
          ],
          "candidate": [
            "theme/javascript.php||theme/javascript.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/javascript.php||lib/javascript.php": [
          "File: lib/javascript.php -> lib/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: define('ABORT_AFTER_CONFIG', true);",
          "33: require('../config.php'); // this stops immediately at the beginning of lib/setup.php",
          "45: $jsfiles = array();",
          "",
          "[Removed Lines]",
          "35: ini_set('zlib.output_compression', 'Off');",
          "38: set_include_path($CFG->libdir . '/minify/lib' . PATH_SEPARATOR . get_include_path());",
          "39: require_once('Minify.php');",
          "41: $file = min_optional_param('file', '', 'RAW');",
          "42: $rev  = min_optional_param('rev', 0, 'INT');",
          "",
          "[Added Lines]",
          "32: require_once(\"$CFG->dirroot/lib/jslib.php\");",
          "34: if ($slashargument = min_get_slash_argument()) {",
          "35:     $slashargument = ltrim($slashargument, '/');",
          "36:     if (substr_count($slashargument, '/') < 1) {",
          "37:         image_not_found();",
          "38:     }",
          "40:     list($rev, $file) = explode('/', $slashargument, 2);",
          "41:     $rev  = min_clean_param($rev, 'INT');",
          "42:     $file = '/'.min_clean_param($file, 'SAFEPATH');",
          "44: } else {",
          "45:     $rev  = min_optional_param('rev', 0, 'INT');",
          "46:     $file = min_optional_param('file', '', 'RAW');",
          "47: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     die();",
          "71: }",
          "82:     }",
          "118:     }",
          "119: }",
          "",
          "[Removed Lines]",
          "73: minify($jsfiles);",
          "75: function minify($files) {",
          "76:     global $CFG;",
          "78:     $cachedir = $CFG->cachedir.'/js';",
          "80:     if (!file_exists($cachedir)) {",
          "81:         @mkdir($cachedir, $CFG->directorypermissions, true);",
          "84:     if (0 === stripos(PHP_OS, 'win')) {",
          "85:         Minify::setDocRoot(); // IIS may need help",
          "86:     }",
          "87:     Minify::setCache($cachedir, true);",
          "89:     $options = array(",
          "91:         'maxAge' => (60*60*24*20),",
          "93:         'files' => $files",
          "94:     );",
          "96:     try {",
          "97:         Minify::serve('Files', $options);",
          "98:         die();",
          "99:     } catch (Exception $e) {",
          "100:         $error = $e->getMessage();",
          "101:         $error = str_replace(\"\\r\", ' ', $error);",
          "102:         $error = str_replace(\"\\n\", ' ', $error);",
          "103:     }",
          "106:     $js = <<<EOD",
          "107: try {console.log('Error: Minimisation of javascript failed!');} catch (e) {}",
          "114: EOD;",
          "115:     echo $js;",
          "116:     foreach ($files as $jsfile) {",
          "117:         echo file_get_contents($jsfile).\"\\n\";",
          "",
          "[Added Lines]",
          "78: $etag = sha1($rev.implode(',', $jsfiles));",
          "79: $candidate = $CFG->cachedir.'/js/'.$etag;",
          "81: if ($rev > -1) {",
          "82:     if (file_exists($candidate)) {",
          "83:         if (!empty($_SERVER['HTTP_IF_NONE_MATCH']) || !empty($_SERVER['HTTP_IF_MODIFIED_SINCE'])) {",
          "86:             js_send_unmodified(filemtime($candidate), $etag);",
          "87:         }",
          "88:         js_send_cached($candidate, $etag);",
          "90:     } else {",
          "91:         if (!file_exists(dirname($candidate))) {",
          "92:             @mkdir(dirname($candidate), $CFG->directorypermissions, true);",
          "93:         }",
          "94:         $fp = fopen($candidate, 'w');",
          "95:         fwrite($fp, js_minify($jsfiles));",
          "96:         fclose($fp);",
          "97:         js_send_cached($candidate, $etag);",
          "100: } else {",
          "101:     $content = '';",
          "102:     foreach ($jsfiles as $jsfile) {",
          "103:         $content .= file_get_contents($jsfile).\"\\n\";",
          "105:     js_send_uncached($candidate, $etag);",
          "",
          "---------------"
        ],
        "lib/jslib.php||lib/jslib.php": [
          "File: lib/jslib.php -> lib/jslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "34: function js_send_cached($jspath, $etag, $filename = 'javascript.php') {",
          "35:     require(__DIR__ . '/xsendfilelib.php');",
          "37:     $lifetime = 60*60*24*60; // 60 days only - the revision may get incremented quite often",
          "39:     header('Etag: '.$etag);",
          "40:     header('Content-Disposition: inline; filename=\"'.$filename.'\"');",
          "41:     header('Last-Modified: '. gmdate('D, d M Y H:i:s', filemtime($jspath)) .' GMT');",
          "42:     header('Expires: '. gmdate('D, d M Y H:i:s', time() + $lifetime) .' GMT');",
          "43:     header('Pragma: ');",
          "44:     header('Cache-Control: public, max-age='.$lifetime);",
          "45:     header('Accept-Ranges: none');",
          "46:     header('Content-Type: application/javascript; charset=utf-8');",
          "48:     if (xsendfile($jspath)) {",
          "49:         die;",
          "50:     }",
          "52:     if (!min_enable_zlib_compression()) {",
          "53:         header('Content-Length: '.filesize($jspath));",
          "54:     }",
          "56:     readfile($jspath);",
          "57:     die;",
          "58: }",
          "65: function js_send_uncached($js, $filename = 'javascript.php') {",
          "66:     header('Content-Disposition: inline; filename=\"'.$filename.'\"');",
          "67:     header('Last-Modified: '. gmdate('D, d M Y H:i:s', time()) .' GMT');",
          "68:     header('Expires: '. gmdate('D, d M Y H:i:s', time() + 2) .' GMT');",
          "69:     header('Pragma: ');",
          "70:     header('Accept-Ranges: none');",
          "71:     header('Content-Type: application/javascript; charset=utf-8');",
          "72:     header('Content-Length: '.strlen($js));",
          "74:     echo $js;",
          "75:     die;",
          "76: }",
          "83: function js_send_unmodified($lastmodified, $etag) {",
          "84:     $lifetime = 60*60*24*60; // 60 days only - the revision may get incremented quite often",
          "85:     header('HTTP/1.1 304 Not Modified');",
          "86:     header('Expires: '. gmdate('D, d M Y H:i:s', time() + $lifetime) .' GMT');",
          "87:     header('Cache-Control: public, max-age='.$lifetime);",
          "88:     header('Content-Type: application/javascript; charset=utf-8');",
          "89:     header('Etag: '.$etag);",
          "90:     if ($lastmodified) {",
          "91:         header('Last-Modified: '. gmdate('D, d M Y H:i:s', $lastmodified) .' GMT');",
          "92:     }",
          "93:     die;",
          "94: }",
          "101: function js_minify($files) {",
          "103:     set_include_path(__DIR__ . '/minify/lib' . PATH_SEPARATOR . get_include_path());",
          "104:     require_once('Minify.php');",
          "106:     if (empty($files)) {",
          "107:         return '';",
          "108:     }",
          "110:     if (0 === stripos(PHP_OS, 'win')) {",
          "111:         Minify::setDocRoot(); // IIS may need help",
          "112:     }",
          "114:     Minify::setCache(null, false);",
          "116:     $options = array(",
          "117:         'bubbleCssImports' => false,",
          "119:         'encodeOutput' => false,",
          "121:         'maxAge' => 1800,",
          "123:         'files' => $files,",
          "125:         'rewriteCssUris' => false,",
          "127:         'quiet' => true",
          "128:     );",
          "130:     $error = 'unknown';",
          "131:     try {",
          "132:         $result = Minify::serve('Files', $options);",
          "133:         if ($result['success']) {",
          "134:             return $result['content'];",
          "135:         }",
          "136:     } catch (Exception $e) {",
          "137:         $error = $e->getMessage();",
          "138:         $error = str_replace(\"\\r\", ' ', $error);",
          "139:         $error = str_replace(\"\\n\", ' ', $error);",
          "140:     }",
          "143:     $js = <<<EOD",
          "144: try {console.log('Error: Minimisation of javascript failed!');} catch (e) {}",
          "151: EOD;",
          "152:     foreach ($files as $jsfile) {",
          "153:         $js .= file_get_contents($jsfile).\"\\n\";",
          "154:     }",
          "155:     return $js;",
          "156: }",
          "",
          "---------------"
        ],
        "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
          "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:                     throw new coding_exception('Attempt to require a JavaScript file that does not exist.', $url);",
          "405:                 }",
          "406:             }",
          "409:             } else {",
          "410:                 return new moodle_url($CFG->httpswwwroot.$url);",
          "411:             }",
          "",
          "[Removed Lines]",
          "407:             if (!empty($CFG->cachejs) and !empty($CFG->jsrev) and strpos($url, '/lib/editor/') !== 0 and substr($url, -3) === '.js') {",
          "408:                 return new moodle_url($CFG->httpswwwroot.'/lib/javascript.php', array('file'=>$url, 'rev'=>$CFG->jsrev));",
          "",
          "[Added Lines]",
          "407:             if (!empty($CFG->cachejs) and !empty($CFG->jsrev) and $CFG->jsrev > 0 and strpos($url, '/lib/editor/') !== 0 and substr($url, -3) === '.js') {",
          "408:                 if (empty($CFG->slasharguments)) {",
          "409:                     return new moodle_url($CFG->httpswwwroot.'/lib/javascript.php', array('rev'=>$CFG->jsrev, 'file'=>$url));",
          "410:                 } else {",
          "411:                     $returnurl = new moodle_url($CFG->httpswwwroot.'/lib/javascript.php');",
          "412:                     $returnurl->set_slashargument('/'.$CFG->jsrev.$url);",
          "413:                     return $returnurl;",
          "414:                 }",
          "",
          "---------------"
        ],
        "theme/javascript.php||theme/javascript.php": [
          "File: theme/javascript.php -> theme/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: define('ABORT_AFTER_CONFIG', true);",
          "33: require('../config.php'); // this stops immediately at the beginning of lib/setup.php",
          "35: if ($slashargument = min_get_slash_argument()) {",
          "36:     $slashargument = ltrim($slashargument, '/');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: require_once(\"$CFG->dirroot/lib/jslib.php\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     if (!empty($_SERVER['HTTP_IF_NONE_MATCH']) || !empty($_SERVER['HTTP_IF_MODIFIED_SINCE'])) {",
          "80:     }",
          "82: }",
          "",
          "[Removed Lines]",
          "73:         $lifetime = 60*60*24*60; // 60 days only - the revision may get incremented quite often",
          "74:         header('HTTP/1.1 304 Not Modified');",
          "75:         header('Expires: '. gmdate('D, d M Y H:i:s', time() + $lifetime) .' GMT');",
          "76:         header('Cache-Control: public, max-age='.$lifetime);",
          "77:         header('Content-Type: application/javascript; charset=utf-8');",
          "78:         header('Etag: '.$etag);",
          "79:         die;",
          "81:     send_cached_js($candidate, $etag);",
          "",
          "[Added Lines]",
          "73:         js_send_unmodified(filemtime($candidate), $etag);",
          "75:     js_send_cached($candidate, $etag);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89: define('NO_UPGRADE_CHECK', true);  // Ignore upgrade check",
          "91: require(\"$CFG->dirroot/lib/setup.php\");",
          "96: $theme = theme_config::load($themename);",
          "",
          "[Removed Lines]",
          "93: set_include_path($CFG->libdir . '/minify/lib' . PATH_SEPARATOR . get_include_path());",
          "94: require_once('Minify.php');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:     clearstatcache();",
          "105:     check_dir_exists(dirname($candidate));",
          "106:     $fp = fopen($candidate, 'w');",
          "108:     fclose($fp);",
          "210: }",
          "",
          "[Removed Lines]",
          "107:     fwrite($fp, minify($theme->javascript_files($type)));",
          "109:     send_cached_js($candidate, $etag);",
          "110: } else {",
          "111:     send_uncached_js($theme->javascript_content($type));",
          "112: }",
          "119: function send_cached_js($jspath, $etag) {",
          "120:     global $CFG;",
          "121:     require(\"$CFG->dirroot/lib/xsendfilelib.php\");",
          "123:     $lifetime = 60*60*24*60; // 60 days only - the revision may get incremented quite often",
          "125:     header('Etag: '.$etag);",
          "126:     header('Content-Disposition: inline; filename=\"javascript.php\"');",
          "127:     header('Last-Modified: '. gmdate('D, d M Y H:i:s', filemtime($jspath)) .' GMT');",
          "128:     header('Expires: '. gmdate('D, d M Y H:i:s', time() + $lifetime) .' GMT');",
          "129:     header('Pragma: ');",
          "130:     header('Cache-Control: public, max-age='.$lifetime);",
          "131:     header('Accept-Ranges: none');",
          "132:     header('Content-Type: application/javascript; charset=utf-8');",
          "134:     if (xsendfile($jspath)) {",
          "135:         die;",
          "136:     }",
          "138:     if (!min_enable_zlib_compression()) {",
          "139:         header('Content-Length: '.filesize($jspath));",
          "140:     }",
          "142:     readfile($jspath);",
          "143:     die;",
          "144: }",
          "146: function send_uncached_js($js) {",
          "147:     header('Content-Disposition: inline; filename=\"javascript.php\"');",
          "148:     header('Last-Modified: '. gmdate('D, d M Y H:i:s', time()) .' GMT');",
          "149:     header('Expires: '. gmdate('D, d M Y H:i:s', time() + 2) .' GMT');",
          "150:     header('Pragma: ');",
          "151:     header('Accept-Ranges: none');",
          "152:     header('Content-Type: application/javascript; charset=utf-8');",
          "153:     header('Content-Length: '.strlen($js));",
          "155:     echo $js;",
          "156:     die;",
          "157: }",
          "159: function minify($files) {",
          "160:     if (empty($files)) {",
          "161:         return '';",
          "162:     }",
          "164:     if (0 === stripos(PHP_OS, 'win')) {",
          "165:         Minify::setDocRoot(); // IIS may need help",
          "166:     }",
          "168:     Minify::setCache(null, false);",
          "170:     $options = array(",
          "171:         'bubbleCssImports' => false,",
          "173:         'encodeOutput' => false,",
          "175:         'maxAge' => 1800,",
          "177:         'files' => $files,",
          "179:         'rewriteCssUris' => false,",
          "181:         'quiet' => true",
          "182:     );",
          "184:     $error = 'unknown';",
          "185:     try {",
          "186:         $result = Minify::serve('Files', $options);",
          "187:         if ($result['success']) {",
          "188:             return $result['content'];",
          "189:         }",
          "190:     } catch (Exception $e) {",
          "191:         $error = $e->getMessage();",
          "192:         $error = str_replace(\"\\r\", ' ', $error);",
          "193:         $error = str_replace(\"\\n\", ' ', $error);",
          "194:     }",
          "197:     $js = <<<EOD",
          "198: try {console.log('Error: Minimisation of theme javascript failed!');} catch (e) {}",
          "205: EOD;",
          "206:     foreach ($files as $jsfile) {",
          "207:         $js .= file_get_contents($jsfile).\"\\n\";",
          "208:     }",
          "209:     return $js;",
          "",
          "[Added Lines]",
          "98:     fwrite($fp, js_minify($theme->javascript_files($type)));",
          "100:     js_send_cached($candidate, $etag);",
          "102: } else {",
          "103:     js_send_uncached($theme->javascript_content($type));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05f4555422278190ec24a88466ac43c914a7e5d6",
      "candidate_info": {
        "commit_hash": "05f4555422278190ec24a88466ac43c914a7e5d6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/05f4555422278190ec24a88466ac43c914a7e5d6",
        "files": [
          "theme/javascript.php",
          "theme/styles.php"
        ],
        "message": "MDL-28147 do not double cache theme css/js",
        "before_after_code_files": [
          "theme/javascript.php||theme/javascript.php",
          "theme/styles.php||theme/styles.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "theme/javascript.php||theme/javascript.php",
            "theme/styles.php||theme/styles.php"
          ],
          "candidate": [
            "theme/javascript.php||theme/javascript.php",
            "theme/styles.php||theme/styles.php"
          ]
        }
      },
      "candidate_diff": {
        "theme/javascript.php||theme/javascript.php": [
          "File: theme/javascript.php -> theme/javascript.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "118: }",
          "120: function minify($files) {",
          "123:     if (0 === stripos(PHP_OS, 'win')) {",
          "124:         Minify::setDocRoot(); // IIS may need help",
          "125:     }",
          "128:     $options = array(",
          "129:         'bubbleCssImports' => false,",
          "",
          "[Removed Lines]",
          "121:     global $CFG;",
          "126:     Minify::setCache('', true);",
          "",
          "[Added Lines]",
          "125:     Minify::setCache(null, false);",
          "",
          "---------------"
        ],
        "theme/styles.php||theme/styles.php": [
          "File: theme/styles.php -> theme/styles.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:     if (0 === stripos(PHP_OS, 'win')) {",
          "161:         Minify::setDocRoot(); // IIS may need help",
          "162:     }",
          "165:     $options = array(",
          "166:         'bubbleCssImports' => false,",
          "",
          "[Removed Lines]",
          "163:     Minify::setCache('', true);",
          "",
          "[Added Lines]",
          "164:     Minify::setCache(null, false);",
          "",
          "---------------"
        ]
      }
    }
  ]
}