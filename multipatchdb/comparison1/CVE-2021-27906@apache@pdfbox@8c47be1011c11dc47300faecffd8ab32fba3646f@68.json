{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2863d7541113eb6fd4105cf09511f8705f3e7b3a",
      "candidate_info": {
        "commit_hash": "2863d7541113eb6fd4105cf09511f8705f3e7b3a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2863d7541113eb6fd4105cf09511f8705f3e7b3a",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ],
        "message": "PDFBOX-4892: SonarQube fix: don't return same value in several branches\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881372 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java -> debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "295:                     List<File> files = (List<File>) transferable.getTransferData(",
          "296:                             DataFlavor.javaFileListFlavor);",
          "297:                     readPDFFile(files.get(0), \"\");",
          "299:                 }",
          "300:                 catch (IOException e)",
          "301:                 {",
          "302:                     new ErrorDialog(e).setVisible(true);",
          "304:                 }",
          "305:                 catch (UnsupportedFlavorException e)",
          "306:                 {",
          "307:                     throw new RuntimeException(e);",
          "308:                 }",
          "309:             }",
          "310:         });",
          "",
          "[Removed Lines]",
          "298:                     return true;",
          "303:                     return true;",
          "",
          "[Added Lines]",
          "307:                 return true;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cbc125b5b5f0dcebf83770f0e633f171e8b9a30",
      "candidate_info": {
        "commit_hash": "7cbc125b5b5f0dcebf83770f0e633f171e8b9a30",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/7cbc125b5b5f0dcebf83770f0e633f171e8b9a30",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java"
        ],
        "message": "PDFBOX-4892: remove unneeded call, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887333 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1582:         {",
          "1583:             StringBuilder sb = new StringBuilder();",
          "1584:             sb.append(\"COSArray{\");",
          "1586:             {",
          "1587:                 sb.append(getDictionaryString(x, objs));",
          "1588:                 sb.append(\";\");",
          "",
          "[Removed Lines]",
          "1585:             for (COSBase x : ((COSArray) base).toList())",
          "",
          "[Added Lines]",
          "1585:             for (COSBase x : ((COSArray) base))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38981e75f1175f35bbc91fe9dda9bc3a403ad3ea",
      "candidate_info": {
        "commit_hash": "38981e75f1175f35bbc91fe9dda9bc3a403ad3ea",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/38981e75f1175f35bbc91fe9dda9bc3a403ad3ea",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887885 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:     public PlainText(String textValue)",
          "52:     {",
          "54:         paragraphs = new ArrayList<Paragraph>(parts.length);",
          "55:         for (String part : parts)",
          "56:         {",
          "",
          "[Removed Lines]",
          "53:         String[] parts = textValue.replaceAll(\"\\t\", \" \").split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\");",
          "",
          "[Added Lines]",
          "53:         String[] parts = textValue.replace('\\t', ' ').split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\");",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         }",
          "58:         else",
          "59:         {",
          "61:             paragraphs = new ArrayList<Paragraph>(parts.length);",
          "62:             for (String part : parts)",
          "63:             {",
          "",
          "[Removed Lines]",
          "60:             String[] parts = textValue.replaceAll(\"\\t\", \" \").split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\");",
          "",
          "[Added Lines]",
          "60:             String[] parts = textValue.replace('\\t', ' ').split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5e508f926ef9e96756b30f78ab5b274ba55c4d7",
      "candidate_info": {
        "commit_hash": "b5e508f926ef9e96756b30f78ab5b274ba55c4d7",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/b5e508f926ef9e96756b30f78ab5b274ba55c4d7",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889854 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:         int highVal = (plte.length / 3) - 1;",
          "239:         if (highVal > 255)",
          "240:         {",
          "242:                     highVal + 1));",
          "243:             return null;",
          "244:         }",
          "",
          "[Removed Lines]",
          "241:             LOG.error(String.format(\"To much colors in PLTE, only 256 allowed, found %d colors.\",",
          "",
          "[Added Lines]",
          "241:             LOG.error(String.format(\"Too much colors in PLTE, only 256 allowed, found %d colors.\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "279:             for (int i = 0; i < bytes.length; i++)",
          "280:             {",
          "281:                 int idx = (int) iis.readBits(bitsPerComponent);",
          "283:                 if (idx < transparencyTable.length)",
          "284:                 {",
          "287:                 }",
          "288:                 else",
          "289:                 {",
          "292:                 }",
          "294:                 w++;",
          "295:                 if (w == state.width)",
          "296:                 {",
          "",
          "[Removed Lines]",
          "282:                 byte v;",
          "286:                     v = transparencyTable[idx];",
          "291:                     v = (byte) 0xFF;",
          "293:                 bytes[i] = v;",
          "",
          "[Added Lines]",
          "285:                     bytes[i] = transparencyTable[idx];",
          "290:                     bytes[i] = (byte) 0xFF;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5afeaa71feedfb617b4ca2d43d42903955f6aaf5",
      "candidate_info": {
        "commit_hash": "5afeaa71feedfb617b4ca2d43d42903955f6aaf5",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/5afeaa71feedfb617b4ca2d43d42903955f6aaf5",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java"
        ],
        "message": "PDFBOX-5048: fix assert calls and make public\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884498 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:     @Test",
          "282:     {",
          "283:         InputStream is = new URL(\"https://issues.apache.org/jira/secure/attachment/13017227/stringwidth.pdf\").openStream();",
          "284:         PDDocument doc = PDDocument.load(is);",
          "285:         PDPage page = doc.getPage(0);",
          "286:         PDFont font = page.getResources().getFont(COSName.getPDFName(\"F70\"));",
          "287:         Assert.assertTrue(font.isDamaged());",
          "290:         doc.close();",
          "291:         is.close();",
          "292:     }",
          "",
          "[Removed Lines]",
          "281:     void testPDFox5048() throws IOException",
          "288:         Assert.assertEquals(0, font.getHeight(0));",
          "289:         Assert.assertEquals(0, font.getStringWidth(\"Pa\"));",
          "",
          "[Added Lines]",
          "281:     public void testPDFox5048() throws IOException",
          "288:         Assert.assertEquals(0f, font.getHeight(0), 0);",
          "289:         Assert.assertEquals(0f, font.getStringWidth(\"Pa\"), 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}