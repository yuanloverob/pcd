{
  "cve_id": "CVE-2017-1000084",
  "cve_desc": "Parameterized Trigger Plugin fails to check Item/Build permission: The Parameterized Trigger Plugin did not check the build authentication it was running as and allowed triggering any other project in Jenkins.",
  "repo": "fbelzunc/parameterized-trigger-plugin",
  "patch_hash": "345d54f8f031bef68ecb6fd4e7eee0be720162e4",
  "patch_info": {
    "commit_hash": "345d54f8f031bef68ecb6fd4e7eee0be720162e4",
    "repo": "fbelzunc/parameterized-trigger-plugin",
    "commit_url": "https://github.com/fbelzunc/parameterized-trigger-plugin/commit/345d54f8f031bef68ecb6fd4e7eee0be720162e4",
    "files": [
      "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
    ],
    "message": "[JENKINS-45471] Not add null values to the list",
    "before_after_code_files": [
      "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
    ]
  },
  "patch_diff": {
    "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java": [
      "File: src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java -> src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "388:         try {",
      "389:    if (condition.isMet(build.getResult())) {",
      "390:                 List<Future<AbstractBuild>> futures = new ArrayList<Future<AbstractBuild>>();",
      "392:                 for (List<AbstractBuildParameters> addConfigs : getDynamicBuildParameters(build, listener)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "390:                 Future future = null;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "395:                             build, listener);",
      "396:                     for (Job project : getJobs(build.getRootBuild().getProject().getParent(), env)) {",
      "397:                         List<Action> list = getBuildActions(actions, project);",
      "400:                     }",
      "401:                 }",
      "",
      "[Removed Lines]",
      "399:                         futures.add(schedule(build, project, list, listener));",
      "",
      "[Added Lines]",
      "400:                         future = schedule(build, project, list, listener);",
      "401:                         if (future != null) {",
      "402:                             futures.add(future);",
      "403:                         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b76c2a458434d1242e6976c4eaeeab4fbea4a0c4",
      "candidate_info": {
        "commit_hash": "b76c2a458434d1242e6976c4eaeeab4fbea4a0c4",
        "repo": "fbelzunc/parameterized-trigger-plugin",
        "commit_url": "https://github.com/fbelzunc/parameterized-trigger-plugin/commit/b76c2a458434d1242e6976c4eaeeab4fbea4a0c4",
        "files": [
          "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
        ],
        "message": "[JENKINS-45471] Add a logger in the else",
        "before_after_code_files": [
          "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/parameterized-trigger-plugin/pull/114"
        ],
        "olp_code_files": {
          "patch": [
            "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
          ],
          "candidate": [
            "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java": [
          "File: src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java -> src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:                         future = schedule(build, project, list, listener);",
          "401:                         if (future != null) {",
          "402:                             futures.add(future);",
          "403:                         }",
          "404:                     }",
          "405:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "403:                         } else {",
          "404:                             LOGGER.log(Level.FINE, \"The schedule for project {0} and build {1} failed due either security reasons or the trigger is not compatible with un-parameterized jobs\", new Object[]{project.getFullName(), build.number});",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89a6148414f48430f36d05973a803b0bb581f732",
      "candidate_info": {
        "commit_hash": "89a6148414f48430f36d05973a803b0bb581f732",
        "repo": "fbelzunc/parameterized-trigger-plugin",
        "commit_url": "https://github.com/fbelzunc/parameterized-trigger-plugin/commit/89a6148414f48430f36d05973a803b0bb581f732",
        "files": [
          "src/main/java/hudson/plugins/parameterizedtrigger/BlockableBuildTriggerConfig.java",
          "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java",
          "src/test/java/hudson/plugins/parameterizedtrigger/test/ParameterizedTriggerPermissionTest.java"
        ],
        "message": "[SECURITY-201] - UX: Also report information about missing BUILD permissions in the build log",
        "before_after_code_files": [
          "src/main/java/hudson/plugins/parameterizedtrigger/BlockableBuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BlockableBuildTriggerConfig.java",
          "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java",
          "src/test/java/hudson/plugins/parameterizedtrigger/test/ParameterizedTriggerPermissionTest.java||src/test/java/hudson/plugins/parameterizedtrigger/test/ParameterizedTriggerPermissionTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
          ],
          "candidate": [
            "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/hudson/plugins/parameterizedtrigger/BlockableBuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BlockableBuildTriggerConfig.java": [
          "File: src/main/java/hudson/plugins/parameterizedtrigger/BlockableBuildTriggerConfig.java -> src/main/java/hudson/plugins/parameterizedtrigger/BlockableBuildTriggerConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import com.google.common.collect.ArrayListMultimap;",
          "19: import com.google.common.collect.ListMultimap;",
          "21: import java.io.IOException;",
          "22: import java.util.Collection;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import hudson.model.TaskListener;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:     }",
          "71:     @Override",
          "73:         if (block!=null) {",
          "74:             while (true) {",
          "",
          "[Removed Lines]",
          "72:     protected Future schedule(AbstractBuild<?, ?> build, Job project, List<Action> list) throws InterruptedException, IOException {",
          "",
          "[Added Lines]",
          "73:     protected Future schedule(AbstractBuild<?, ?> build, Job project, List<Action> list, TaskListener listener) throws InterruptedException, IOException {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:                 if (f!=null || (f==null && !canBeScheduled(project))){",
          "84:                     return f;",
          "",
          "[Removed Lines]",
          "81:                 Future f = schedule(build, project, 0, list);",
          "",
          "[Added Lines]",
          "82:                 Future f = schedule(build, project, 0, list, listener);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:                 Thread.sleep(1000);",
          "87:             }",
          "88:         } else {",
          "90:         }",
          "91:     }",
          "",
          "[Removed Lines]",
          "89:             return super.schedule(build,project,list);",
          "",
          "[Added Lines]",
          "90:             return super.schedule(build,project,list,listener);",
          "",
          "---------------"
        ],
        "src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java||src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java": [
          "File: src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java -> src/main/java/hudson/plugins/parameterizedtrigger/BuildTriggerConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "396:                     for (Job project : getJobs(build.getRootBuild().getProject().getParent(), env)) {",
          "397:                         List<Action> list = getBuildActions(actions, project);",
          "400:                     }",
          "401:                 }",
          "",
          "[Removed Lines]",
          "399:                         futures.add(schedule(build, project, list));",
          "",
          "[Added Lines]",
          "399:                         futures.add(schedule(build, project, list, listener));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "443:                     for (Job project : getJobs(build.getRootBuild().getProject().getParent(), env)) {",
          "444:                         List<Action> list = getBuildActions(actions, project);",
          "447:                     }",
          "448:                 }",
          "449:                 return futures;",
          "",
          "[Removed Lines]",
          "446:                         futures.put(project, schedule(build, project, list));",
          "",
          "[Added Lines]",
          "446:                         futures.put(project, schedule(build, project, list, listener));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "511:         return new UpstreamCause(build);",
          "512:     }",
          "514:     @CheckForNull",
          "515:     protected Future schedule(AbstractBuild<?, ?> build, final Job project, int quietPeriod, List<Action> list) throws InterruptedException, IOException {",
          "518:         Cause cause = createUpstreamCause(build);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518:     @Deprecated",
          "520:         return schedule(build, project, quietPeriod, list, TaskListener.NULL);",
          "521:     }",
          "523:     @CheckForNull",
          "524:     protected Future schedule(@Nonnull AbstractBuild<?, ?> build, @Nonnull final Job project, int quietPeriod,",
          "525:             @Nonnull List<Action> list, @Nonnull TaskListener listener) throws InterruptedException, IOException {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "537:                 return null;",
          "538:             }",
          "",
          "[Removed Lines]",
          "536:             if (!canTriggerProject(build, project, null)) {",
          "",
          "[Added Lines]",
          "546:             if (!canTriggerProject(build, project, listener)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "557:         if (!job.hasPermission(Item.BUILD)) {",
          "562:                         + \"The authenticated build user %s has no Item.BUILD permission\",",
          "563:                         job, build, Jenkins.getAuthentication());",
          "574:             return false;",
          "575:         }",
          "576:         return true;",
          "",
          "[Removed Lines]",
          "556:             @Nonnull final Job job, @CheckForNull TaskListener taskListener) {",
          "559:             String message = null;",
          "560:             if (LOGGER.isLoggable(Level.WARNING) || taskListener != null) {",
          "561:                message = String.format(\"Cannot schedule the build of %s from %s. \"",
          "564:             }",
          "566:             if (message != null) {",
          "567:                 LOGGER.log(Level.WARNING, message);",
          "568:             }",
          "570:             if (taskListener != null) {",
          "571:                 taskListener.error(message);",
          "572:             }",
          "",
          "[Added Lines]",
          "566:             @Nonnull final Job job, @Nonnull TaskListener taskListener) {",
          "569:             String message = String.format(\"Cannot schedule the build of %s from %s. \"",
          "572:             LOGGER.log(Level.WARNING, message);",
          "573:             taskListener.error(message);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "590:         return job.hasPermission(Item.BUILD);",
          "591:     }",
          "593:     protected Future schedule(AbstractBuild<?, ?> build, Job project, List<Action> list) throws InterruptedException, IOException {",
          "594:         if (project instanceof ParameterizedJobMixIn.ParameterizedJob) {",
          "596:         } else {",
          "598:         }",
          "600:     }",
          "",
          "[Removed Lines]",
          "595:             return schedule(build, project, ((ParameterizedJobMixIn.ParameterizedJob) project).getQuietPeriod(), list);",
          "597:             return schedule(build, project, 0, list);",
          "",
          "[Added Lines]",
          "596:     @Deprecated",
          "598:         return schedule(build, project, list, TaskListener.NULL);",
          "599:     }",
          "601:     protected Future schedule(@Nonnull AbstractBuild<?, ?> build, @Nonnull Job project, @Nonnull List<Action> list, @Nonnull TaskListener listener) throws InterruptedException, IOException {",
          "603:             return schedule(build, project, ((ParameterizedJobMixIn.ParameterizedJob) project).getQuietPeriod(), list, listener);",
          "605:             return schedule(build, project, 0, list, listener);",
          "",
          "---------------"
        ],
        "src/test/java/hudson/plugins/parameterizedtrigger/test/ParameterizedTriggerPermissionTest.java||src/test/java/hudson/plugins/parameterizedtrigger/test/ParameterizedTriggerPermissionTest.java": [
          "File: src/test/java/hudson/plugins/parameterizedtrigger/test/ParameterizedTriggerPermissionTest.java -> src/test/java/hudson/plugins/parameterizedtrigger/test/ParameterizedTriggerPermissionTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:         assertTrue(\"The subproject1 has been triggered, but it should not happen due to the build permissions\",",
          "125:                 subproject1.getBuilds().isEmpty());",
          "127:         if (!useBuildStep) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:         r.assertLogContains(\"has no Item.BUILD permission\", build);",
          "",
          "---------------"
        ]
      }
    }
  ]
}