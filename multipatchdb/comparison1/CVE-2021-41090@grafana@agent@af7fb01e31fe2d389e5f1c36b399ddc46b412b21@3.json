{
  "cve_id": "CVE-2021-41090",
  "cve_desc": "Grafana Agent is a telemetry collector for sending metrics, logs, and trace data to the opinionated Grafana observability stack. Prior to versions 0.20.1 and 0.21.2, inline secrets defined within a metrics instance config are exposed in plaintext over two endpoints: metrics instance configs defined in the base YAML file are exposed at `/-/config` and metrics instance configs defined for the scraping service are exposed at `/agent/api/v1/configs/:key`. Inline secrets will be exposed to anyone being able to reach these endpoints. If HTTPS with client authentication is not configured, these endpoints are accessible to unauthenticated users. Secrets found in these sections are used for delivering metrics to a Prometheus Remote Write system, authenticating against a system for discovering Prometheus targets, and authenticating against a system for collecting metrics. This does not apply for non-inlined secrets, such as `*_file` based secrets. This issue is patched in Grafana Agent versions 0.20.1 and 0.21.2. A few workarounds are available. Users who cannot upgrade should use non-inline secrets where possible. Users may also desire to restrict API access to Grafana Agent with some combination of restricting the network interfaces Grafana Agent listens on through `http_listen_address` in the `server` block, configuring Grafana Agent to use HTTPS with client authentication, and/or using firewall rules to restrict external access to Grafana Agent's API.",
  "repo": "grafana/agent",
  "patch_hash": "af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
  "patch_info": {
    "commit_hash": "af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
    "repo": "grafana/agent",
    "commit_url": "https://github.com/grafana/agent/commit/af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
    "files": [
      "CHANGELOG.md",
      "docs/configuration/integrations/node-exporter-config.md",
      "docs/configuration/integrations/process-exporter-config.md",
      "docs/getting-started/_index.md",
      "docs/operator/custom-resource-quickstart.md",
      "docs/operator/getting-started.md",
      "docs/upgrade-guide/_index.md",
      "pkg/operator/defaults.go",
      "production/README.md",
      "production/grafanacloud-install.sh",
      "production/kubernetes/agent-bare.yaml",
      "production/kubernetes/agent-loki.yaml",
      "production/kubernetes/agent-traces.yaml",
      "production/kubernetes/build/lib/version.libsonnet",
      "production/kubernetes/install-bare.sh",
      "production/tanka/grafana-agent/v1/main.libsonnet",
      "production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
    ],
    "message": "announce patch releases for cve-2021-41090 (#1152)",
    "before_after_code_files": [
      "pkg/operator/defaults.go||pkg/operator/defaults.go",
      "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
      "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
      "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
      "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
      "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
    ]
  },
  "patch_diff": {
    "pkg/operator/defaults.go||pkg/operator/defaults.go": [
      "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:   \"v0.18.4\",",
      "16:   \"v0.19.0\",",
      "17:   \"v0.20.0\",",
      "18:   \"v0.21.0\",",
      "19:   \"v0.21.1\",",
      "22:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18:   \"v0.20.1\",",
      "21:   \"v0.21.2\",",
      "",
      "---------------"
    ],
    "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
      "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "50: #",
      "51: # Global constants.",
      "52: #",
      "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
      "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
      "",
      "[Removed Lines]",
      "53: RELEASE_VERSION=\"0.21.1\"",
      "",
      "[Added Lines]",
      "53: RELEASE_VERSION=\"0.21.2\"",
      "",
      "---------------"
    ],
    "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
      "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 'grafana/agent:v0.21.1'",
      "",
      "[Added Lines]",
      "1: 'grafana/agent:v0.21.2'",
      "",
      "---------------"
    ],
    "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
      "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: check_installed curl",
      "26: check_installed envsubst",
      "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
      "30: NAMESPACE=${NAMESPACE:-default}",
      "",
      "[Removed Lines]",
      "28: MANIFEST_BRANCH=v0.21.1",
      "",
      "[Added Lines]",
      "28: MANIFEST_BRANCH=v0.21.2",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
      "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "15: (import './lib/traces.libsonnet') +",
      "16: {",
      "17:   _images:: {",
      "20:   },",
      "",
      "[Removed Lines]",
      "18:     agent: 'grafana/agent:v0.21.1',",
      "19:     agentctl: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "18:     agent: 'grafana/agent:v0.21.2',",
      "19:     agentctl: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
      "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "10:   local this = self,",
      "12:   _images:: {",
      "15:   },",
      "16:   _config:: {",
      "17:     name: name,",
      "",
      "[Removed Lines]",
      "13:     agent: 'grafana/agent:v0.21.1',",
      "14:     agentctl: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "13:     agent: 'grafana/agent:v0.21.2',",
      "14:     agentctl: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
      "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "14: ) {",
      "15:   local _config = {",
      "16:     api: error 'api must be set',",
      "18:     schedule: '*/5 * * * *',",
      "19:     configs: [],",
      "20:   } + config,",
      "",
      "[Removed Lines]",
      "17:     image: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "17:     image: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "022b9c1725cc61ef397be5c1ec9f437b678361cd",
      "candidate_info": {
        "commit_hash": "022b9c1725cc61ef397be5c1ec9f437b678361cd",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/022b9c1725cc61ef397be5c1ec9f437b678361cd",
        "files": [
          "CHANGELOG.md",
          "component/otelcol/exporter/prometheus/internal/convert/convert.go",
          "docs/sources/configuration/integrations/node-exporter-config.md",
          "docs/sources/configuration/integrations/process-exporter-config.md",
          "docs/sources/operator/custom-resource-quickstart.md",
          "docs/sources/operator/getting-started.md",
          "docs/sources/set-up/install-agent-docker.md",
          "pkg/operator/defaults.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh",
          "production/operator/templates/agent-operator.yaml",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "Update CHANGELOG for release v0.28.1 (#2470)",
        "before_after_code_files": [
          "component/otelcol/exporter/prometheus/internal/convert/convert.go||component/otelcol/exporter/prometheus/internal/convert/convert.go",
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "component/otelcol/exporter/prometheus/internal/convert/convert.go||component/otelcol/exporter/prometheus/internal/convert/convert.go": [
          "File: component/otelcol/exporter/prometheus/internal/convert/convert.go -> component/otelcol/exporter/prometheus/internal/convert/convert.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:  for rcount := 0; rcount < md.ResourceMetrics().Len(); rcount++ {",
          "117:   rm := md.ResourceMetrics().At(rcount)",
          "122:  }",
          "124:  return app.Commit()",
          "125: }",
          "128:  resourceMD := conv.createOrUpdateMetadata(\"target_info\", metadata.Metadata{",
          "129:   Type: textparse.MetricTypeGauge,",
          "130:   Help: \"Target metadata\",",
          "",
          "[Removed Lines]",
          "118:   if err := conv.consumeResourceMetrics(app, rm); err != nil {",
          "119:    level.Error(conv.log).Log(\"msg\", \"failed to consume resource metrics\", \"err\", err)",
          "120:    continue",
          "121:   }",
          "127: func (conv *Converter) consumeResourceMetrics(app storage.Appender, rm pmetric.ResourceMetrics) error {",
          "",
          "[Added Lines]",
          "118:   conv.consumeResourceMetrics(app, rm)",
          "124: func (conv *Converter) consumeResourceMetrics(app storage.Appender, rm pmetric.ResourceMetrics) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145:  for smcount := 0; smcount < rm.ScopeMetrics().Len(); smcount++ {",
          "146:   sm := rm.ScopeMetrics().At(smcount)",
          "152:  }",
          "155: }",
          "157: func (conv *Converter) createOrUpdateMetadata(name string, md metadata.Metadata) *memoryMetadata {",
          "",
          "[Removed Lines]",
          "148:   if err := conv.consumeScopeMetrics(app, memResource, sm); err != nil {",
          "149:    level.Error(conv.log).Log(\"msg\", \"failed to write scope metrics\", \"err\", err)",
          "150:    continue",
          "151:   }",
          "154:  return nil",
          "",
          "[Added Lines]",
          "144:   conv.consumeScopeMetrics(app, memResource, sm)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "223:  return entry",
          "224: }",
          "227:  scopeMD := conv.createOrUpdateMetadata(\"otel_scope_info\", metadata.Metadata{",
          "228:   Type: textparse.MetricTypeGauge,",
          "229:  })",
          "",
          "[Removed Lines]",
          "226: func (conv *Converter) consumeScopeMetrics(app storage.Appender, memResource *memorySeries, sm pmetric.ScopeMetrics) error {",
          "",
          "[Added Lines]",
          "217: func (conv *Converter) consumeScopeMetrics(app storage.Appender, memResource *memorySeries, sm pmetric.ScopeMetrics) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "243:  for mcount := 0; mcount < sm.Metrics().Len(); mcount++ {",
          "244:   m := sm.Metrics().At(mcount)",
          "250:  }",
          "253: }",
          "",
          "[Removed Lines]",
          "246:   if err := conv.consumeMetric(app, memResource, memScope, m); err != nil {",
          "247:    level.Error(conv.log).Log(\"msg\", \"failed to write metric\", \"err\", err)",
          "248:    continue",
          "249:   }",
          "252:  return nil",
          "",
          "[Added Lines]",
          "236:   conv.consumeMetric(app, memResource, memScope, m)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "284:  return entry",
          "285: }",
          "288:  switch m.Type() {",
          "289:  case pmetric.MetricTypeGauge:",
          "291:  case pmetric.MetricTypeSum:",
          "293:  case pmetric.MetricTypeHistogram:",
          "295:  case pmetric.MetricTypeSummary:",
          "297:  }",
          "299: }",
          "302:  metricName := prometheus.BuildPromCompliantName(m, \"\")",
          "304:  metricMD := conv.createOrUpdateMetadata(metricName, metadata.Metadata{",
          "",
          "[Removed Lines]",
          "287: func (conv *Converter) consumeMetric(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) error {",
          "290:   return conv.consumeGauge(app, memResource, memScope, m)",
          "292:   return conv.consumeSum(app, memResource, memScope, m)",
          "294:   return conv.consumeHistogram(app, memResource, memScope, m)",
          "296:   return conv.consumeSummary(app, memResource, memScope, m)",
          "298:  return nil",
          "301: func (conv *Converter) consumeGauge(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) error {",
          "",
          "[Added Lines]",
          "272: func (conv *Converter) consumeMetric(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) {",
          "275:   conv.consumeGauge(app, memResource, memScope, m)",
          "277:   conv.consumeSum(app, memResource, memScope, m)",
          "279:   conv.consumeHistogram(app, memResource, memScope, m)",
          "281:   conv.consumeSummary(app, memResource, memScope, m)",
          "285: func (conv *Converter) consumeGauge(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "320:    level.Error(conv.log).Log(\"msg\", \"failed to write metric sample\", \"err\", err)",
          "321:   }",
          "322:  }",
          "325: }",
          "327: type otelcolDataPoint interface {",
          "",
          "[Removed Lines]",
          "324:  return nil",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "392:  return 0",
          "393: }",
          "396:  metricName := prometheus.BuildPromCompliantName(m, \"\")",
          "",
          "[Removed Lines]",
          "395: func (conv *Converter) consumeSum(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) error {",
          "",
          "[Added Lines]",
          "377: func (conv *Converter) consumeSum(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "419:  default:",
          "422:  }",
          "424:  metricMD := conv.createOrUpdateMetadata(metricName, metadata.Metadata{",
          "",
          "[Removed Lines]",
          "418:   return nil",
          "421:   return nil",
          "",
          "[Added Lines]",
          "400:   return",
          "403:   return",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "442:    level.Error(conv.log).Log(\"msg\", \"failed to write metric sample\", \"err\", err)",
          "443:   }",
          "444:  }",
          "447: }",
          "450:  metricName := prometheus.BuildPromCompliantName(m, \"\")",
          "452:  if m.Histogram().AggregationTemporality() != pmetric.MetricAggregationTemporalityCumulative {",
          "457:  }",
          "459:  metricMD := conv.createOrUpdateMetadata(metricName, metadata.Metadata{",
          "",
          "[Removed Lines]",
          "446:  return nil",
          "449: func (conv *Converter) consumeHistogram(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) error {",
          "456:   return nil",
          "",
          "[Added Lines]",
          "429: func (conv *Converter) consumeHistogram(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) {",
          "436:   return",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "525:    }",
          "526:   }",
          "527:  }",
          "530: }",
          "533:  metricName := prometheus.BuildPromCompliantName(m, \"\")",
          "535:  metricMD := conv.createOrUpdateMetadata(metricName, metadata.Metadata{",
          "",
          "[Removed Lines]",
          "529:  return nil",
          "532: func (conv *Converter) consumeSummary(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) error {",
          "",
          "[Added Lines]",
          "510: func (conv *Converter) consumeSummary(app storage.Appender, memResource *memorySeries, memScope *memorySeries, m pmetric.Metric) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "583:    }",
          "584:   }",
          "585:  }",
          "587: }",
          "",
          "[Removed Lines]",
          "586:  return nil",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:   \"v0.27.0\",",
          "32:   \"v0.27.1\",",
          "33:   \"v0.28.0\",",
          "35:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:   \"v0.28.1\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: # The DEB and RPM urls don't include the `v` version prefix in the file names,",
          "56: # so we trim it out using ${RELEASE_VERSION#v} below.",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"v0.28.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"v0.28.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.28.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.28.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet": [
          "File: production/kubernetes/build/templates/operator/main.jsonnet -> production/kubernetes/build/templates/operator/main.jsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   local this = self,",
          "25:   _images:: {",
          "28:     ksm: 'registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.5.0',",
          "29:   },",
          "",
          "[Removed Lines]",
          "26:     agent: 'grafana/agent:v0.28.0',",
          "27:     agent_operator: 'grafana/agent-operator:v0.28.0',",
          "",
          "[Added Lines]",
          "26:     agent: 'grafana/agent:v0.28.1',",
          "27:     agent_operator: 'grafana/agent-operator:v0.28.1',",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.28.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.28.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.28.0',",
          "19:     agentctl: 'grafana/agentctl:v0.28.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.28.1',",
          "19:     agentctl: 'grafana/agentctl:v0.28.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.28.0',",
          "15:     agentctl: 'grafana/agentctl:v0.28.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.28.1',",
          "15:     agentctl: 'grafana/agentctl:v0.28.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.28.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.28.1',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5416fd0fce27ee6c1e9899ab6cc7808c459a197",
      "candidate_info": {
        "commit_hash": "b5416fd0fce27ee6c1e9899ab6cc7808c459a197",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/b5416fd0fce27ee6c1e9899ab6cc7808c459a197",
        "files": [
          "CHANGELOG.md",
          "docs/operator/getting-started.md",
          "pkg/operator/defaults.go",
          "pkg/prom/instance/configstore/remote.go",
          "production/README.md",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-tempo.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet"
        ],
        "message": "Merge v0.18.2 to main (#822)\n\n* Initialize biggest ref to existing ref when reading a segment (#676)\n\n* initialize biggest ref to existing ref when reading a segment\n\n* changelog\n\n* allow new test to be less hard-coded\n\n* explain error if test fails\n\n* clarify changelog issue\n\n* prepare for v0.16.1 release (#679)\n\n* adding docker-compose example for local testing\n\n(cherry picked from commit 992e3cf26362dc55c28d035bb512d44163370ebd)\n\n* Cherry picking kafka importer\n\n* update Operator FAQ to describe custom scrape jobs (#658)\n\n* Merge\n\n* merge for race condition\n\n* Wall cherry pick\n\n* Import Kafka\n\n* Bump version number to v0.17.0\n\n* Initial release of v0.18.0 includes github_exporter, enabled flag issue, OTLP HTPP, and updated postgres exporter\n\n* Tempo/traces docs fixes for v0.18.0 (#784)\n\n* Needs to be loki for the naming change\n\n* Update date\n\n* No change, just trying to trigger drone\n\n* Fix for drone naming\n\n* Changes that needed to me imported for drone to work.\n\n* Update drone issues\n\n* sign drone\n\n* Drone changes\n\n* Update operator\n\n* standardize on seego\n\n* Test tag\n\n* fix tag\n\n* updated makefile\n\n* release tag fixing\n\n* remove extra tag\n\n* consul specific list support added\n\n* Fix type\n\n* Add comment\n\n* Fix for etcd issue that I introduced\n\n* Update to v0.18.1\n\n* Fix for test error\n\n* Fix small naming/style issues\n\n* Update version number to v0.18.2 and fix issues with prefixes.\n\n* Update missed merges\n\n* Add operate allowed version\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Gabriel <g.amaral.antunes@gmail.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "pkg/prom/instance/configstore/remote.go||pkg/prom/instance/configstore/remote.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   \"v0.17.0\",",
          "11:   \"v0.18.0\",",
          "12:   \"v0.18.1\",",
          "15:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:   \"v0.18.2\",",
          "",
          "---------------"
        ],
        "pkg/prom/instance/configstore/remote.go||pkg/prom/instance/configstore/remote.go": [
          "File: pkg/prom/instance/configstore/remote.go -> pkg/prom/instance/configstore/remote.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  \"github.com/weaveworks/common/instrument\"",
          "15:  \"github.com/hashicorp/go-cleanhttp\"",
          "17:  \"github.com/hashicorp/consul/api\"",
          "",
          "[Removed Lines]",
          "13:  \"github.com/cortexproject/cortex/pkg/ring/kv/consul\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: type agentRemoteClient struct {",
          "61:  kv.Client",
          "64: }",
          "",
          "[Removed Lines]",
          "62:  consul       *api.Client",
          "63:  consulConfig consul.Config",
          "",
          "[Added Lines]",
          "60:  consul *api.Client",
          "61:  config kv.Config",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:  r.reg.UnregisterAll()",
          "104:  if !enable {",
          "106:   return nil",
          "107:  }",
          "",
          "[Removed Lines]",
          "105:   r.setClient(nil, nil)",
          "",
          "[Added Lines]",
          "103:   r.setClient(nil, nil, kv.Config{})",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:   return fmt.Errorf(\"failed to create kv client: %w\", err)",
          "130:  }",
          "133:  return nil",
          "134: }",
          "139:  if client == nil && consulClient == nil {",
          "140:   r.kv = nil",
          "141:  } else {",
          "142:   r.kv = &agentRemoteClient{",
          "143:    Client: client,",
          "144:    consul: consulClient,",
          "145:   }",
          "146:  }",
          "147:  r.reloadKV <- struct{}{}",
          "",
          "[Removed Lines]",
          "132:  r.setClient(cli, consulClient)",
          "138: func (r *Remote) setClient(client kv.Client, consulClient *api.Client) {",
          "",
          "[Added Lines]",
          "130:  r.setClient(cli, consulClient, cfg)",
          "136: func (r *Remote) setClient(client kv.Client, consulClient *api.Client, config kv.Config) {",
          "143:    config: config,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "228:  var pairs api.KVPairs",
          "229:  options := &api.QueryOptions{",
          "232:  }",
          "234:  err := instrument.CollectedRequest(ctx, \"List\", consulRequestDuration, instrument.ErrorCode, func(ctx context.Context) error {",
          "235:   var err error",
          "238:   return err",
          "239:  })",
          "",
          "[Removed Lines]",
          "230:   AllowStale:        !r.kv.consulConfig.ConsistentReads,",
          "231:   RequireConsistent: r.kv.consulConfig.ConsistentReads,",
          "237:   pairs, _, err = r.kv.consul.KV().List(\"configurations/\", options.WithContext(ctx))",
          "",
          "[Added Lines]",
          "229:   AllowStale:        !r.kv.config.Consul.ConsistentReads,",
          "230:   RequireConsistent: r.kv.config.Consul.ConsistentReads,",
          "235:   pairs, _, err = r.kv.consul.KV().List(r.kv.config.Prefix, options.WithContext(ctx))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "246:   blankPairs := make(api.KVPairs, 0)",
          "247:   return blankPairs, nil",
          "248:  }",
          "249:  return pairs, nil",
          "250: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247:  for _, kvp := range pairs {",
          "248:   kvp.Key = strings.TrimPrefix(kvp.Key, r.kv.config.Prefix)",
          "249:  }",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #",
          "48: # Global constants.",
          "49: #",
          "52: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "53: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "50: RELEASE_VERSION=\"0.18.1\"",
          "",
          "[Added Lines]",
          "50: RELEASE_VERSION=\"0.18.2\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.18.1'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.18.2'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.18.1",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.18.2",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/tempo.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.18.1',",
          "19:     agentctl: 'grafana/agentctl:v0.18.1',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.18.2',",
          "19:     agentctl: 'grafana/agentctl:v0.18.2',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1079e7b9bfee772da508dcca56e283ff53a82bd8",
      "candidate_info": {
        "commit_hash": "1079e7b9bfee772da508dcca56e283ff53a82bd8",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/1079e7b9bfee772da508dcca56e283ff53a82bd8",
        "files": [
          "CHANGELOG.md",
          "docs/user/configuration/integrations/node-exporter-config.md",
          "docs/user/configuration/integrations/process-exporter-config.md",
          "docs/user/operator/custom-resource-quickstart.md",
          "docs/user/operator/getting-started.md",
          "docs/user/set-up/install-agent-docker.md",
          "pkg/operator/defaults.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "v0.25.1 image tags (#1801) (#1803)\n\n* v0.25.1 image tags (#1801)\n\n* update images tags for v0.25.1\n\n* changelog date\n\n* update image tag\n\n* update image tag\n\n* fix changelog",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   \"v0.24.1\",",
          "26:   \"v0.24.2\",",
          "27:   \"v0.25.0\",",
          "30:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   \"v0.25.1\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.24.2\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.25.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.25.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.25.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.25.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.25.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.25.0',",
          "19:     agentctl: 'grafana/agentctl:v0.25.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.25.1',",
          "19:     agentctl: 'grafana/agentctl:v0.25.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.25.0',",
          "15:     agentctl: 'grafana/agentctl:v0.25.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.25.1',",
          "15:     agentctl: 'grafana/agentctl:v0.25.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.25.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.25.1',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0cf2a6c9f1148efdbd4b3fe3d85588406e07293",
      "candidate_info": {
        "commit_hash": "e0cf2a6c9f1148efdbd4b3fe3d85588406e07293",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/e0cf2a6c9f1148efdbd4b3fe3d85588406e07293",
        "files": [
          "CHANGELOG.md",
          "docs/sources/configuration/integrations/node-exporter-config.md",
          "docs/sources/configuration/integrations/process-exporter-config.md",
          "docs/sources/operator/custom-resource-quickstart.md",
          "docs/sources/operator/getting-started.md",
          "docs/sources/set-up/install-agent-docker.md",
          "pkg/operator/defaults.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh",
          "production/operator/templates/agent-operator.yaml",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "Prepare for release v0.28.1",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:   \"v0.27.0\",",
          "32:   \"v0.27.1\",",
          "33:   \"v0.28.0\",",
          "35:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:   \"v0.28.1\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: # The DEB and RPM urls don't include the `v` version prefix in the file names,",
          "56: # so we trim it out using ${RELEASE_VERSION#v} below.",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"v0.28.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"v0.28.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.28.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.28.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet": [
          "File: production/kubernetes/build/templates/operator/main.jsonnet -> production/kubernetes/build/templates/operator/main.jsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   local this = self,",
          "25:   _images:: {",
          "28:     ksm: 'registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.5.0',",
          "29:   },",
          "",
          "[Removed Lines]",
          "26:     agent: 'grafana/agent:v0.28.0',",
          "27:     agent_operator: 'grafana/agent-operator:v0.28.0',",
          "",
          "[Added Lines]",
          "26:     agent: 'grafana/agent:v0.28.1',",
          "27:     agent_operator: 'grafana/agent-operator:v0.28.1',",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.28.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.28.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.28.0',",
          "19:     agentctl: 'grafana/agentctl:v0.28.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.28.1',",
          "19:     agentctl: 'grafana/agentctl:v0.28.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.28.0',",
          "15:     agentctl: 'grafana/agentctl:v0.28.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.28.1',",
          "15:     agentctl: 'grafana/agentctl:v0.28.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.28.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.28.1',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a30ee4b2193fcd18da9e2184331f6aa0874b0b6",
      "candidate_info": {
        "commit_hash": "0a30ee4b2193fcd18da9e2184331f6aa0874b0b6",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/0a30ee4b2193fcd18da9e2184331f6aa0874b0b6",
        "files": [
          "CHANGELOG.md",
          "docs/configuration/integrations/node-exporter-config.md",
          "docs/configuration/integrations/process-exporter-config.md",
          "docs/getting-started/_index.md",
          "docs/operator/getting-started.md",
          "pkg/operator/defaults.go",
          "production/README.md",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-tempo.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "prepare for v0.18.3 release (#899)",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   \"v0.18.0\",",
          "12:   \"v0.18.1\",",
          "13:   \"v0.18.2\",",
          "16:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:   \"v0.18.3\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: #",
          "49: # Global constants.",
          "50: #",
          "53: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "54: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "51: RELEASE_VERSION=\"0.18.2\"",
          "",
          "[Added Lines]",
          "51: RELEASE_VERSION=\"0.18.3\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.18.2'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.18.3'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.18.2",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.18.3",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/tempo.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.18.2',",
          "19:     agentctl: 'grafana/agentctl:v0.18.2',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.18.3',",
          "19:     agentctl: 'grafana/agentctl:v0.18.3',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   local this = self,",
          "12:   _images:: {",
          "15:   },",
          "16:   _config:: {",
          "17:     name: name,",
          "",
          "[Removed Lines]",
          "13:     agent: 'grafana/agent:v0.16.1',",
          "14:     agentctl: 'grafana/agentctl:v0.16.1',",
          "",
          "[Added Lines]",
          "13:     agent: 'grafana/agent:v0.18.3',",
          "14:     agentctl: 'grafana/agentctl:v0.18.3',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.16.1',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.18.3',",
          "",
          "---------------"
        ]
      }
    }
  ]
}