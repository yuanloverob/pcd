{
  "cve_id": "CVE-2012-6431",
  "cve_desc": "Symfony 2.0.x before 2.0.20 does not process URL encoded data consistently within the Routing and Security components, which allows remote attackers to bypass intended URI restrictions via a doubly encoded string.",
  "repo": "symfony/symfony",
  "patch_hash": "55014a6841bec50046e8329a4835c160ac31a496",
  "patch_info": {
    "commit_hash": "55014a6841bec50046e8329a4835c160ac31a496",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/55014a6841bec50046e8329a4835c160ac31a496",
    "files": [
      "CHANGELOG-2.1.md",
      "src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php",
      "src/Symfony/Bundle/SecurityBundle/DependencyInjection/MainConfiguration.php",
      "src/Symfony/Component/HttpFoundation/Request.php",
      "src/Symfony/Component/HttpFoundation/RequestMatcher.php",
      "src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php",
      "src/Symfony/Component/HttpFoundation/Tests/RequestTest.php",
      "src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php",
      "src/Symfony/Component/Routing/Matcher/TraceableUrlMatcher.php",
      "src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
      "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php",
      "src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher1.php",
      "src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher2.php",
      "src/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php"
    ],
    "message": "[Routing] Request methods always return a raw path, fix the matcher to decode only once\n\nsq",
    "before_after_code_files": [
      "src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php||src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php",
      "src/Symfony/Bundle/SecurityBundle/DependencyInjection/MainConfiguration.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/MainConfiguration.php",
      "src/Symfony/Component/HttpFoundation/Request.php||src/Symfony/Component/HttpFoundation/Request.php",
      "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php",
      "src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php||src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php",
      "src/Symfony/Component/HttpFoundation/Tests/RequestTest.php||src/Symfony/Component/HttpFoundation/Tests/RequestTest.php",
      "src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php||src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php",
      "src/Symfony/Component/Routing/Matcher/TraceableUrlMatcher.php||src/Symfony/Component/Routing/Matcher/TraceableUrlMatcher.php",
      "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
      "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php",
      "src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher1.php||src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher1.php",
      "src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher2.php||src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher2.php",
      "src/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php||src/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php||src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php": [
      "File: src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php -> src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "130:                             ->performNoDeepMerging()",
      "131:                             ->children()",
      "132:                                 ->scalarNode('ip')->end()",
      "134:                                 ->scalarNode('service')->end()",
      "135:                             ->end()",
      "136:                         ->end()",
      "",
      "[Removed Lines]",
      "133:                                 ->scalarNode('path')->end()",
      "",
      "[Added Lines]",
      "133:                                 ->scalarNode('path')",
      "134:                                     ->setInfo('use the urldecoded format')",
      "135:                                     ->setExample('^/path to resource/')",
      "136:                                 ->end()",
      "",
      "---------------"
    ],
    "src/Symfony/Bundle/SecurityBundle/DependencyInjection/MainConfiguration.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/MainConfiguration.php": [
      "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/MainConfiguration.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/MainConfiguration.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "154:                     ->prototype('array')",
      "155:                         ->children()",
      "156:                             ->scalarNode('requires_channel')->defaultNull()->end()",
      "158:                             ->scalarNode('host')->defaultNull()->end()",
      "159:                             ->scalarNode('ip')->defaultNull()->end()",
      "160:                             ->arrayNode('methods')",
      "",
      "[Removed Lines]",
      "157:                             ->scalarNode('path')->defaultNull()->end()",
      "",
      "[Added Lines]",
      "157:                             ->scalarNode('path')",
      "158:                                 ->defaultNull()",
      "159:                                 ->setInfo('use the urldecoded format')",
      "160:                                 ->setExample('^/path to resource/')",
      "161:                             ->end()",
      "",
      "---------------"
    ],
    "src/Symfony/Component/HttpFoundation/Request.php||src/Symfony/Component/HttpFoundation/Request.php": [
      "File: src/Symfony/Component/HttpFoundation/Request.php -> src/Symfony/Component/HttpFoundation/Request.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1317:         }",
      "1319:         $basename = basename($baseUrl);",
      "1322:             return '';",
      "1323:         }",
      "",
      "[Removed Lines]",
      "1320:         if (empty($basename) || !strpos(urldecode($truncatedRequestUri), $basename)) {",
      "",
      "[Added Lines]",
      "1330:         if (empty($basename) || !strpos(rawurldecode($truncatedRequestUri), $basename)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1385:             return $requestUri;",
      "1386:         }",
      "1389:     }",
      "",
      "[Removed Lines]",
      "1388:         return rawurldecode((string) $pathInfo);",
      "",
      "[Added Lines]",
      "1398:         return (string) $pathInfo;",
      "",
      "---------------"
    ],
    "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php": [
      "File: src/Symfony/Component/HttpFoundation/RequestMatcher.php -> src/Symfony/Component/HttpFoundation/RequestMatcher.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:         if (null !== $this->path) {",
      "128:             $path = str_replace('#', '\\\\#', $this->path);",
      "131:                 return false;",
      "132:             }",
      "133:         }",
      "",
      "[Removed Lines]",
      "130:             if (!preg_match('#'.$path.'#', $request->getPathInfo())) {",
      "",
      "[Added Lines]",
      "130:             if (!preg_match('#'.$path.'#', rawurldecode($request->getPathInfo()))) {",
      "",
      "---------------"
    ],
    "src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php||src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php": [
      "File: src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php -> src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "150:         $this->assertFalse($matcher->matches($request));",
      "151:     }",
      "153:     public function testAttributes()",
      "154:     {",
      "155:         $matcher = new RequestMatcher();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "153:     public function testPathWithEncodedCharacters()",
      "154:     {",
      "155:         $matcher = new RequestMatcher();",
      "156:         $request = Request::create('/admin/fo%20o');",
      "157:         $matcher->matchPath('^/admin/fo o*$');",
      "158:         $this->assertTrue($matcher->matches($request));",
      "159:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/HttpFoundation/Tests/RequestTest.php||src/Symfony/Component/HttpFoundation/Tests/RequestTest.php": [
      "File: src/Symfony/Component/HttpFoundation/Tests/RequestTest.php -> src/Symfony/Component/HttpFoundation/Tests/RequestTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "315:         $request->initialize(array(), array(), array(), array(), array(), $server);",
      "317:         $this->assertEquals('http://servername/path/info?query=string', $request->getUri(), '->getUri() with rewrite, default port without HOST_HEADER');",
      "318:    }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "321:         $server = array(",
      "322:             'HTTP_HOST'       => 'hostname:8080',",
      "323:             'SERVER_NAME'     => 'servername',",
      "324:             'SERVER_PORT'     => '8080',",
      "325:             'QUERY_STRING'    => 'query=string',",
      "326:             'REQUEST_URI'     => '/ba%20se/index_dev.php/foo%20bar/in+fo?query=string',",
      "327:             'SCRIPT_NAME'     => '/ba se/index_dev.php',",
      "328:             'PATH_TRANSLATED' => 'redirect:/index.php/foo bar/in+fo',",
      "329:             'PHP_SELF'        => '/ba se/index_dev.php/path/info',",
      "330:             'SCRIPT_FILENAME' => '/some/where/ba se/index_dev.php',",
      "331:         );",
      "333:         $request->initialize(array(), array(), array(), array(), array(), $server);",
      "335:         $this->assertEquals(",
      "336:             'http://hostname:8080/ba%20se/index_dev.php/foo%20bar/in+fo?query=string',",
      "337:             $request->getUri()",
      "338:         );",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "984:                 '/home',",
      "985:             ),",
      "986:             array(",
      "988:                 array(",
      "989:                     'SCRIPT_FILENAME' => '/home/John Doe/public_html/foo bar/app.php',",
      "990:                     'SCRIPT_NAME'     => '/foo bar/app.php',",
      "991:                     'PHP_SELF'        => '/foo bar/app.php',",
      "992:                 ),",
      "993:                 '/foo%20bar/app.php',",
      "995:             ),",
      "996:             array(",
      "997:                 '/foo/bar+baz',",
      "",
      "[Removed Lines]",
      "987:                 '/foo%20bar/app.php/home%2Fbaz',",
      "994:                 '/home%2Fbaz',",
      "",
      "[Added Lines]",
      "1008:                 '/foo%20bar/app.php/home%3Dbaz',",
      "1015:                 '/home%3Dbaz',",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php||src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php": [
      "File: src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php -> src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "62:     public function match(\\$pathinfo)",
      "63:     {",
      "64:         \\$allow = array();",
      "67: $code",
      "",
      "[Removed Lines]",
      "65:         \\$pathinfo = urldecode(\\$pathinfo);",
      "",
      "[Added Lines]",
      "65:         \\$pathinfo = rawurldecode(\\$pathinfo);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Routing/Matcher/TraceableUrlMatcher.php||src/Symfony/Component/Routing/Matcher/TraceableUrlMatcher.php": [
      "File: src/Symfony/Component/Routing/Matcher/TraceableUrlMatcher.php -> src/Symfony/Component/Routing/Matcher/TraceableUrlMatcher.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:     protected function matchCollection($pathinfo, RouteCollection $routes)",
      "45:     {",
      "48:         foreach ($routes as $name => $route) {",
      "49:             if ($route instanceof RouteCollection) {",
      "50:                 if (!$ret = $this->matchCollection($pathinfo, $route)) {",
      "",
      "[Removed Lines]",
      "46:         $pathinfo = urldecode($pathinfo);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php": [
      "File: src/Symfony/Component/Routing/Matcher/UrlMatcher.php -> src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:     {",
      "81:         $this->allow = array();",
      "84:             return $ret;",
      "85:         }",
      "",
      "[Removed Lines]",
      "83:         if ($ret = $this->matchCollection(urldecode($pathinfo), $this->routes)) {",
      "",
      "[Added Lines]",
      "90:         if ($ret = $this->matchCollection(rawurldecode($pathinfo), $this->routes)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "177:         $parameters = $defaults;",
      "178:         foreach ($params as $key => $value) {",
      "179:             if (!is_int($key)) {",
      "181:             }",
      "182:         }",
      "",
      "[Removed Lines]",
      "180:                 $parameters[$key] = rawurldecode($value);",
      "",
      "[Added Lines]",
      "187:                 $parameters[$key] = $value;",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php": [
      "File: src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php -> src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php"
    ],
    "src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher1.php||src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher1.php": [
      "File: src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher1.php -> src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher1.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:     public function match($pathinfo)",
      "24:     {",
      "25:         $allow = array();",
      "29:         if (0 === strpos($pathinfo, '/foo') && preg_match('#^/foo/(?P<bar>baz|symfony)$#xs', $pathinfo, $matches)) {",
      "",
      "[Removed Lines]",
      "26:         $pathinfo = urldecode($pathinfo);",
      "",
      "[Added Lines]",
      "26:         $pathinfo = rawurldecode($pathinfo);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher2.php||src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher2.php": [
      "File: src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher2.php -> src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher2.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:     public function match($pathinfo)",
      "24:     {",
      "25:         $allow = array();",
      "29:         if (0 === strpos($pathinfo, '/foo') && preg_match('#^/foo/(?P<bar>baz|symfony)$#xs', $pathinfo, $matches)) {",
      "",
      "[Removed Lines]",
      "26:         $pathinfo = urldecode($pathinfo);",
      "",
      "[Added Lines]",
      "26:         $pathinfo = rawurldecode($pathinfo);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php||src/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php": [
      "File: src/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php -> src/Symfony/Component/Routing/Tests/Matcher/UrlMatcherTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "157:         $collection->add('foo', new Route('/{foo}/bar', array(), array('foo' => '['.preg_quote($chars).']+')));",
      "159:         $matcher = new UrlMatcher($collection, new RequestContext(), array());",
      "162:     }",
      "164:     public function testMatchWithDotMetacharacterInRequirements()",
      "",
      "[Removed Lines]",
      "160:         $this->assertEquals(array('_route' => 'foo', 'foo' => $chars), $matcher->match('/'.urlencode($chars).'/bar'));",
      "161:         $this->assertEquals(array('_route' => 'foo', 'foo' => $chars), $matcher->match('/'.strtr($chars, array('%' => '%25', '+' => '%2B')).'/bar'));",
      "",
      "[Added Lines]",
      "160:         $this->assertEquals(array('_route' => 'foo', 'foo' => $chars), $matcher->match('/'.rawurlencode($chars).'/bar'));",
      "161:         $this->assertEquals(array('_route' => 'foo', 'foo' => $chars), $matcher->match('/'.strtr($chars, array('%' => '%25')).'/bar'));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:         $matcher = new UrlMatcher($coll, new RequestContext());",
      "217:         $matcher->match('/foo');",
      "218:     }",
      "219: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "220:     public function testDecodeOnce()",
      "221:     {",
      "222:         $coll = new RouteCollection();",
      "223:         $coll->add('foo', new Route('/foo/{foo}'));",
      "225:         $matcher = new UrlMatcher($coll, new RequestContext());",
      "226:         $this->assertEquals(array('foo' => 'bar%23', '_route' => 'foo'), $matcher->match('/foo/bar%2523'));",
      "227:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "88becfe3f874bd82529c49fd3709a0223e18a2aa",
      "candidate_info": {
        "commit_hash": "88becfe3f874bd82529c49fd3709a0223e18a2aa",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/88becfe3f874bd82529c49fd3709a0223e18a2aa",
        "files": [
          "src/Symfony/Component/HttpFoundation/RequestMatcher.php",
          "tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php"
        ],
        "message": "[HttpFoundation] allow locale in RequestMatcher path",
        "before_after_code_files": [
          "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php",
          "tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php||tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php"
          ],
          "candidate": [
            "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/HttpFoundation/RequestMatcher.php||src/Symfony/Component/HttpFoundation/RequestMatcher.php": [
          "File: src/Symfony/Component/HttpFoundation/RequestMatcher.php -> src/Symfony/Component/HttpFoundation/RequestMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: class RequestMatcher implements RequestMatcherInterface",
          "20: {",
          "27:     public function __construct($path = null, $host = null, $methods = null, $ip = null, array $attributes = array())",
          "28:     {",
          "",
          "[Removed Lines]",
          "21:     protected $path;",
          "22:     protected $host;",
          "23:     protected $methods;",
          "24:     protected $ip;",
          "25:     protected $attributes;",
          "",
          "[Added Lines]",
          "21:     private $path;",
          "22:     private $host;",
          "23:     private $methods;",
          "24:     private $ip;",
          "25:     private $attributes;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:             }",
          "106:         }",
          "110:         }",
          "112:         if (null !== $this->host && !preg_match('#'.str_replace('#', '\\\\#', $this->host).'#', $request->getHost())) {",
          "",
          "[Removed Lines]",
          "108:         if (null !== $this->path && !preg_match('#'.str_replace('#', '\\\\#', $this->path).'#', $request->getPathInfo())) {",
          "109:             return false;",
          "",
          "[Added Lines]",
          "108:         if (null !== $this->path) {",
          "109:             if (null !== $session = $request->getSession()) {",
          "110:                 $path = strtr($this->path, array('{_locale}' => $session->getLocale(), '#' => '\\\\#'));",
          "111:             } else {",
          "112:                 $path = str_replace('#', '\\\\#', $this->path);",
          "113:             }",
          "115:             if (!preg_match('#'.$path.'#', $request->getPathInfo())) {",
          "116:                 return false;",
          "117:             }",
          "",
          "---------------"
        ],
        "tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php||tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php": [
          "File: tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php -> tests/Symfony/Tests/Component/HttpFoundation/RequestMatcherTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Tests\\Component\\HttpFoundation;",
          "14: use Symfony\\Component\\HttpFoundation\\RequestMatcher;",
          "15: use Symfony\\Component\\HttpFoundation\\Request;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use Symfony\\Component\\HttpFoundation\\SessionStorage\\ArraySessionStorage;",
          "16: use Symfony\\Component\\HttpFoundation\\Session;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:         $this->assertFalse($matcher->matches($request));",
          "94:     }",
          "96:     public function testAttributes()",
          "97:     {",
          "98:         $matcher = new RequestMatcher();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     public function testPathWithLocale()",
          "101:     {",
          "102:         $matcher = new RequestMatcher();",
          "103:         $request = Request::create('/en/login');",
          "105:         $session = new Session(new ArraySessionStorage());",
          "106:         $session->setLocale('en');",
          "107:         $request->setSession($session);",
          "109:         $matcher->matchPath('^/{_locale}/login$');",
          "110:         $this->assertTrue($matcher->matches($request));",
          "112:         $session->setLocale('de');",
          "113:         $this->assertFalse($matcher->matches($request));",
          "114:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7447ef7171b1a40aff0fcbbf8785dc06a22155c8",
      "candidate_info": {
        "commit_hash": "7447ef7171b1a40aff0fcbbf8785dc06a22155c8",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/7447ef7171b1a40aff0fcbbf8785dc06a22155c8",
        "files": [
          "src/Symfony/Component/Routing/Matcher/UrlMatcher.php"
        ],
        "message": "slight refactoring in UrlMatcher",
        "before_after_code_files": [
          "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php"
          ],
          "candidate": [
            "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php": [
          "File: src/Symfony/Component/Routing/Matcher/UrlMatcher.php -> src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:     protected function mergeDefaults($params, $defaults)",
          "176:     {",
          "178:         foreach ($params as $key => $value) {",
          "179:             if (!is_int($key)) {",
          "181:             }",
          "182:         }",
          "185:     }",
          "186: }",
          "",
          "[Removed Lines]",
          "177:         $parameters = $defaults;",
          "180:                 $parameters[$key] = $value;",
          "184:         return $parameters;",
          "",
          "[Added Lines]",
          "179:                 $defaults[$key] = $value;",
          "183:         return $defaults;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d86e1eb71c403459335e92635f6c944521aca6b8",
      "candidate_info": {
        "commit_hash": "d86e1eb71c403459335e92635f6c944521aca6b8",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/d86e1eb71c403459335e92635f6c944521aca6b8",
        "files": [
          "CHANGELOG-2.1.md",
          "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php",
          "src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
          "tests/Symfony/Tests/Component/Routing/Matcher/UrlMatcherTest.php"
        ],
        "message": "[Routing] Remove a weird dependency",
        "before_after_code_files": [
          "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php||src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php",
          "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
          "tests/Symfony/Tests/Component/Routing/Matcher/UrlMatcherTest.php||tests/Symfony/Tests/Component/Routing/Matcher/UrlMatcherTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php"
          ],
          "candidate": [
            "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php||src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php": [
          "File: src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php -> src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace Symfony\\Component\\Routing\\Matcher;",
          "14: use Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: use Symfony\\Component\\Routing\\Route;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21: abstract class RedirectableUrlMatcher extends UrlMatcher implements RedirectableUrlMatcherInterface",
          "22: {",
          "",
          "[Removed Lines]",
          "23:     private $trailingSlashTest = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "36:                 throw $e;",
          "37:             }",
          "43:         }",
          "49:         }",
          "52:     }",
          "53: }",
          "",
          "[Removed Lines]",
          "40:             $this->trailingSlashTest = true;",
          "42:             return $this->match($pathinfo.'/');",
          "45:         if ($this->trailingSlashTest) {",
          "46:             $this->trailingSlashTest = false;",
          "48:             return $this->redirect($pathinfo, null);",
          "51:         return $parameters;",
          "",
          "[Added Lines]",
          "38:             try {",
          "39:                 parent::match($pathinfo.'/');",
          "40:                 return $this->redirect($pathinfo.'/', null);",
          "41:             } catch (ResourceNotFoundException $e2) {",
          "42:                 throw $e;",
          "43:             }",
          "46:         return $parameters;",
          "47:     }",
          "52:     protected function handleRouteRequirements($pathinfo, $name, Route $route)",
          "53:     {",
          "55:         $scheme = $route->getRequirement('_scheme');",
          "56:         if ($scheme && $this->context->getScheme() !== $scheme) {",
          "57:             return array(self::ROUTE_MATCH, $this->redirect($pathinfo, $name, $scheme));",
          "60:         return array(self::REQUIREMENT_MATCH, null);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php": [
          "File: src/Symfony/Component/Routing/Matcher/UrlMatcher.php -> src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: use Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException;",
          "16: use Symfony\\Component\\Routing\\RouteCollection;",
          "17: use Symfony\\Component\\Routing\\RequestContext;",
          "",
          "[Removed Lines]",
          "18: use Symfony\\Component\\Routing\\Matcher\\RedirectableUrlMatcherInterface;",
          "",
          "[Added Lines]",
          "18: use Symfony\\Component\\Routing\\Route;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: class UrlMatcher implements UrlMatcherInterface",
          "28: {",
          "29:     protected $context;",
          "31:     private $routes;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:     const REQUIREMENT_MATCH     = 0;",
          "30:     const REQUIREMENT_MISMATCH  = 1;",
          "31:     const ROUTE_MATCH           = 2;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "126:                 }",
          "127:             }",
          "138:             }",
          "140:             return array_merge($this->mergeDefaults($matches, $route->getDefaults()), array('_route' => $name));",
          "141:         }",
          "142:     }",
          "144:     protected function mergeDefaults($params, $defaults)",
          "145:     {",
          "146:         $parameters = $defaults;",
          "",
          "[Removed Lines]",
          "130:             if ($scheme = $route->getRequirement('_scheme')) {",
          "131:                 if (!$this instanceof RedirectableUrlMatcherInterface) {",
          "132:                     throw new \\LogicException('The \"_scheme\" requirement is only supported for URL matchers that implement RedirectableUrlMatcherInterface.');",
          "133:                 }",
          "135:                 if ($this->context->getScheme() !== $scheme) {",
          "136:                     return $this->redirect($pathinfo, $name, $scheme);",
          "137:                 }",
          "",
          "[Added Lines]",
          "144:             $status = $this->handleRouteRequirements($pathinfo, $name, $route);",
          "146:             if (self::ROUTE_MATCH === $status[0]) {",
          "147:                 return $status[1];",
          "148:             }",
          "150:             if (self::REQUIREMENT_MISMATCH === $status[0]) {",
          "151:                 continue;",
          "167:     protected function handleRouteRequirements($pathinfo, $name, Route $route)",
          "168:     {",
          "170:             $scheme = $route->getRequirement('_scheme');",
          "171:             $status = $scheme && $scheme !== $this->context->getScheme() ? self::REQUIREMENT_MISMATCH : self::REQUIREMENT_MATCH;",
          "173:             return array($status, null);",
          "174:    }",
          "",
          "---------------"
        ],
        "tests/Symfony/Tests/Component/Routing/Matcher/UrlMatcherTest.php||tests/Symfony/Tests/Component/Routing/Matcher/UrlMatcherTest.php": [
          "File: tests/Symfony/Tests/Component/Routing/Matcher/UrlMatcherTest.php -> tests/Symfony/Tests/Component/Routing/Matcher/UrlMatcherTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:     }",
          "212:     public function testSchemeRequirement()",
          "213:     {",
          "214:         $coll = new RouteCollection();",
          "215:         $coll->add('foo', new Route('/foo', array(), array('_scheme' => 'https')));",
          "217:         $matcher = new UrlMatcher($coll, new RequestContext());",
          "218:         $matcher->match('/foo');",
          "219:     }",
          "",
          "[Removed Lines]",
          "220: }",
          "",
          "[Added Lines]",
          "219: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72483f946baa0ae89b56cd497a1a7f088b9413e1",
      "candidate_info": {
        "commit_hash": "72483f946baa0ae89b56cd497a1a7f088b9413e1",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/72483f946baa0ae89b56cd497a1a7f088b9413e1",
        "files": [
          "src/Symfony/Component/Routing/Generator/Dumper/GeneratorDumperInterface.php",
          "src/Symfony/Component/Routing/Generator/Dumper/PhpGeneratorDumper.php",
          "src/Symfony/Component/Routing/Generator/UrlGenerator.php",
          "src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php",
          "src/Symfony/Component/Routing/Loader/ClosureLoader.php",
          "src/Symfony/Component/Routing/Loader/PhpFileLoader.php",
          "src/Symfony/Component/Routing/Loader/XmlFileLoader.php",
          "src/Symfony/Component/Routing/Loader/YamlFileLoader.php",
          "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php",
          "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcherInterface.php",
          "src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
          "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php",
          "src/Symfony/Component/Routing/RequestContext.php",
          "src/Symfony/Component/Routing/RequestContextAwareInterface.php",
          "src/Symfony/Component/Routing/Route.php",
          "src/Symfony/Component/Routing/RouteCollection.php"
        ],
        "message": "[Routing] tagged the public @api",
        "before_after_code_files": [
          "src/Symfony/Component/Routing/Generator/Dumper/GeneratorDumperInterface.php||src/Symfony/Component/Routing/Generator/Dumper/GeneratorDumperInterface.php",
          "src/Symfony/Component/Routing/Generator/Dumper/PhpGeneratorDumper.php||src/Symfony/Component/Routing/Generator/Dumper/PhpGeneratorDumper.php",
          "src/Symfony/Component/Routing/Generator/UrlGenerator.php||src/Symfony/Component/Routing/Generator/UrlGenerator.php",
          "src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php||src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php",
          "src/Symfony/Component/Routing/Loader/ClosureLoader.php||src/Symfony/Component/Routing/Loader/ClosureLoader.php",
          "src/Symfony/Component/Routing/Loader/PhpFileLoader.php||src/Symfony/Component/Routing/Loader/PhpFileLoader.php",
          "src/Symfony/Component/Routing/Loader/XmlFileLoader.php||src/Symfony/Component/Routing/Loader/XmlFileLoader.php",
          "src/Symfony/Component/Routing/Loader/YamlFileLoader.php||src/Symfony/Component/Routing/Loader/YamlFileLoader.php",
          "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php||src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php",
          "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcherInterface.php",
          "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
          "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php",
          "src/Symfony/Component/Routing/RequestContext.php||src/Symfony/Component/Routing/RequestContext.php",
          "src/Symfony/Component/Routing/RequestContextAwareInterface.php||src/Symfony/Component/Routing/RequestContextAwareInterface.php",
          "src/Symfony/Component/Routing/Route.php||src/Symfony/Component/Routing/Route.php",
          "src/Symfony/Component/Routing/RouteCollection.php||src/Symfony/Component/Routing/RouteCollection.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
            "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php"
          ],
          "candidate": [
            "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php",
            "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/Routing/Generator/Dumper/GeneratorDumperInterface.php||src/Symfony/Component/Routing/Generator/Dumper/GeneratorDumperInterface.php": [
          "File: src/Symfony/Component/Routing/Generator/Dumper/GeneratorDumperInterface.php -> src/Symfony/Component/Routing/Generator/Dumper/GeneratorDumperInterface.php"
        ],
        "src/Symfony/Component/Routing/Generator/Dumper/PhpGeneratorDumper.php||src/Symfony/Component/Routing/Generator/Dumper/PhpGeneratorDumper.php": [
          "File: src/Symfony/Component/Routing/Generator/Dumper/PhpGeneratorDumper.php -> src/Symfony/Component/Routing/Generator/Dumper/PhpGeneratorDumper.php"
        ],
        "src/Symfony/Component/Routing/Generator/UrlGenerator.php||src/Symfony/Component/Routing/Generator/UrlGenerator.php": [
          "File: src/Symfony/Component/Routing/Generator/UrlGenerator.php -> src/Symfony/Component/Routing/Generator/UrlGenerator.php"
        ],
        "src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php||src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php": [
          "File: src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php -> src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php"
        ],
        "src/Symfony/Component/Routing/Loader/ClosureLoader.php||src/Symfony/Component/Routing/Loader/ClosureLoader.php": [
          "File: src/Symfony/Component/Routing/Loader/ClosureLoader.php -> src/Symfony/Component/Routing/Loader/ClosureLoader.php"
        ],
        "src/Symfony/Component/Routing/Loader/PhpFileLoader.php||src/Symfony/Component/Routing/Loader/PhpFileLoader.php": [
          "File: src/Symfony/Component/Routing/Loader/PhpFileLoader.php -> src/Symfony/Component/Routing/Loader/PhpFileLoader.php"
        ],
        "src/Symfony/Component/Routing/Loader/XmlFileLoader.php||src/Symfony/Component/Routing/Loader/XmlFileLoader.php": [
          "File: src/Symfony/Component/Routing/Loader/XmlFileLoader.php -> src/Symfony/Component/Routing/Loader/XmlFileLoader.php"
        ],
        "src/Symfony/Component/Routing/Loader/YamlFileLoader.php||src/Symfony/Component/Routing/Loader/YamlFileLoader.php": [
          "File: src/Symfony/Component/Routing/Loader/YamlFileLoader.php -> src/Symfony/Component/Routing/Loader/YamlFileLoader.php"
        ],
        "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php||src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php": [
          "File: src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php -> src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcher.php"
        ],
        "src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcherInterface.php": [
          "File: src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcherInterface.php -> src/Symfony/Component/Routing/Matcher/RedirectableUrlMatcherInterface.php"
        ],
        "src/Symfony/Component/Routing/Matcher/UrlMatcher.php||src/Symfony/Component/Routing/Matcher/UrlMatcher.php": [
          "File: src/Symfony/Component/Routing/Matcher/UrlMatcher.php -> src/Symfony/Component/Routing/Matcher/UrlMatcher.php"
        ],
        "src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php||src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php": [
          "File: src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php -> src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php"
        ],
        "src/Symfony/Component/Routing/RequestContext.php||src/Symfony/Component/Routing/RequestContext.php": [
          "File: src/Symfony/Component/Routing/RequestContext.php -> src/Symfony/Component/Routing/RequestContext.php"
        ],
        "src/Symfony/Component/Routing/RequestContextAwareInterface.php||src/Symfony/Component/Routing/RequestContextAwareInterface.php": [
          "File: src/Symfony/Component/Routing/RequestContextAwareInterface.php -> src/Symfony/Component/Routing/RequestContextAwareInterface.php"
        ],
        "src/Symfony/Component/Routing/Route.php||src/Symfony/Component/Routing/Route.php": [
          "File: src/Symfony/Component/Routing/Route.php -> src/Symfony/Component/Routing/Route.php"
        ],
        "src/Symfony/Component/Routing/RouteCollection.php||src/Symfony/Component/Routing/RouteCollection.php": [
          "File: src/Symfony/Component/Routing/RouteCollection.php -> src/Symfony/Component/Routing/RouteCollection.php"
        ]
      }
    }
  ]
}