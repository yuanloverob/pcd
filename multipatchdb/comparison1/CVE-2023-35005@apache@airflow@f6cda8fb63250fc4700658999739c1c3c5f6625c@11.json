{
  "cve_id": "CVE-2023-35005",
  "cve_desc": "In Apache Airflow, some potentially sensitive values were being shown to the user in certain situations.\n\nThis vulnerability is mitigated by the fact configuration is not shown in the UI by default (only if `[webserver] expose_config` is set to `non-sensitive-only`), and not all uncensored values are actually sentitive.\n\n\nThis issue affects Apache Airflow: from 2.5.0 before 2.6.2. Users are recommended to update to version 2.6.2 or later.\n\n\n",
  "repo": "apache/airflow",
  "patch_hash": "f6cda8fb63250fc4700658999739c1c3c5f6625c",
  "patch_info": {
    "commit_hash": "f6cda8fb63250fc4700658999739c1c3c5f6625c",
    "repo": "apache/airflow",
    "commit_url": "https://github.com/apache/airflow/commit/f6cda8fb63250fc4700658999739c1c3c5f6625c",
    "files": [
      "airflow/configuration.py"
    ],
    "message": "Mark `[secrets] backend_kwargs` as a sensitive config (#31788)\n\n(cherry picked from commit 8062756fa9e01eeeee1f2c6df74f376c0a526bd5)",
    "before_after_code_files": [
      "airflow/configuration.py||airflow/configuration.py"
    ]
  },
  "patch_diff": {
    "airflow/configuration.py||airflow/configuration.py": [
      "File: airflow/configuration.py -> airflow/configuration.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "156:     (\"atlas\", \"password\"),",
      "157:     (\"smtp\", \"smtp_password\"),",
      "158:     (\"webserver\", \"secret_key\"),",
      "159:     # The following options are deprecated",
      "160:     (\"core\", \"sql_alchemy_conn\"),",
      "161: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "159:     (\"secrets\", \"backend_kwargs\"),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1cfdefeba3a29b08bc0f72e2b5d4ee93343e31ce",
      "candidate_info": {
        "commit_hash": "1cfdefeba3a29b08bc0f72e2b5d4ee93343e31ce",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/1cfdefeba3a29b08bc0f72e2b5d4ee93343e31ce",
        "files": [
          "airflow/triggers/external_task.py"
        ],
        "message": "Workaround mypy confusing default with necessary arguments (#31562)\n\nMypy heuristics gets the typing wrong in those cases, so we\nneed to ignore them for now\n\n(cherry picked from commit a6bef887298dbbe107efbc0e4634998f1b60f0e7)",
        "before_after_code_files": [
          "airflow/triggers/external_task.py||airflow/triggers/external_task.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/31796"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/triggers/external_task.py||airflow/triggers/external_task.py": [
          "File: airflow/triggers/external_task.py -> airflow/triggers/external_task.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:         hit one of the states yet, or not.",
          "78:         \"\"\"",
          "79:         while True:",
          "81:             if num_tasks == len(self.execution_dates):",
          "82:                 yield TriggerEvent(True)",
          "83:             await asyncio.sleep(self.poll_interval)",
          "",
          "[Removed Lines]",
          "80:             num_tasks = await self.count_tasks()",
          "",
          "[Added Lines]",
          "80:             # mypy confuses typing here",
          "81:             num_tasks = await self.count_tasks()  # type: ignore[call-arg]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:         hit one of the states yet, or not.",
          "142:         \"\"\"",
          "143:         while True:",
          "145:             if num_dags == len(self.execution_dates):",
          "146:                 yield TriggerEvent(self.serialize())",
          "147:             await asyncio.sleep(self.poll_interval)",
          "",
          "[Removed Lines]",
          "144:             num_dags = await self.count_dags()",
          "",
          "[Added Lines]",
          "145:             # mypy confuses typing here",
          "146:             num_dags = await self.count_dags()  # type: ignore[call-arg]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbdc2a4e6f14de542f215556ce96a4e2a038d218",
      "candidate_info": {
        "commit_hash": "bbdc2a4e6f14de542f215556ce96a4e2a038d218",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/bbdc2a4e6f14de542f215556ce96a4e2a038d218",
        "files": [
          "airflow/www/static/js/connection_form.js"
        ],
        "message": "Hide old alert box when testing conn with different value (#31606)\n\n(cherry picked from commit efe8473385426bf8c1e23a845f1ba26482843855)",
        "before_after_code_files": [
          "airflow/www/static/js/connection_form.js||airflow/www/static/js/connection_form.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/31796"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/www/static/js/connection_form.js||airflow/www/static/js/connection_form.js": [
          "File: airflow/www/static/js/connection_form.js -> airflow/www/static/js/connection_form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     }",
          "229:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:   function hideAlert() {",
          "232:     const alertBox = $(\".container .row .alert\");",
          "233:     alertBox.hide();",
          "234:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "300:   $(\"#test-connection\").on(\"click\", (e) => {",
          "301:     e.preventDefault();",
          "302:     $.ajax({",
          "303:       url: connectionTestUrl,",
          "304:       type: \"post\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "307:     hideAlert();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb785eae472e51cb5769738f092927eb9dc7f2be",
      "candidate_info": {
        "commit_hash": "cb785eae472e51cb5769738f092927eb9dc7f2be",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/cb785eae472e51cb5769738f092927eb9dc7f2be",
        "files": [
          "airflow/www/extensions/init_manifest_files.py",
          "airflow/www/templates/airflow/dag_audit_log.html"
        ],
        "message": "Fix `url_for_asset` fallback and 404 on DAG Audit Log (#31233)\n\nThere was a 404 on the DAG Audit Log for bootstrap toggle css, which as\nfar as I can tell, we aren't even trying to use. So we will no longer\ntry and add it to the page.\n\nThis highlighted the fact that if we don't have an asset in the\nmanifest, `url_for_asset` would just leave off the filename completely.\nThis resulted in the href being just `/static/`, with no filename as a\nbreadcrumb in the eventual 404. Now we will just use the filename as-is\nso the 404 is more meaningful.\n\n(cherry picked from commit 2b4ad8a18c7c3975a30afe86030b2db9f8daf6f6)",
        "before_after_code_files": [
          "airflow/www/extensions/init_manifest_files.py||airflow/www/extensions/init_manifest_files.py",
          "airflow/www/templates/airflow/dag_audit_log.html||airflow/www/templates/airflow/dag_audit_log.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/31796"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/www/extensions/init_manifest_files.py||airflow/www/extensions/init_manifest_files.py": [
          "File: airflow/www/extensions/init_manifest_files.py -> airflow/www/extensions/init_manifest_files.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     def get_asset_url(filename):",
          "47:         if app.debug:",
          "48:             parse_manifest_json()",
          "51:     parse_manifest_json()",
          "",
          "[Removed Lines]",
          "49:         return url_for(\"static\", filename=manifest.get(filename, \"\"))",
          "",
          "[Added Lines]",
          "49:         return url_for(\"static\", filename=manifest.get(filename, filename))",
          "",
          "---------------"
        ],
        "airflow/www/templates/airflow/dag_audit_log.html||airflow/www/templates/airflow/dag_audit_log.html": [
          "File: airflow/www/templates/airflow/dag_audit_log.html -> airflow/www/templates/airflow/dag_audit_log.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: {% block head_css %}",
          "50: {{ super() }}",
          "51: <link href=\"{{ url_for_asset('dataTables.bootstrap.min.css') }}\" rel=\"stylesheet\" type=\"text/css\" >",
          "53: {% endblock %}",
          "55: {% block content %}",
          "",
          "[Removed Lines]",
          "52: <link href=\"{{ url_for_asset('bootstrap-toggle.min.css') }}\" rel=\"stylesheet\" type=\"text/css\">",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38c290ab15128e64fbf540abc245ab3897910430",
      "candidate_info": {
        "commit_hash": "38c290ab15128e64fbf540abc245ab3897910430",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/38c290ab15128e64fbf540abc245ab3897910430",
        "files": [
          "airflow/www/templates/airflow/dags.html"
        ],
        "message": "Wording the next and last run DAG columns better (#31467)\n\n* Better wording the next and last run DAG columns\n\n* review comments from brent\n\n* review comments from Jed\n\n* Undoing test changes\n\n---------\n\nCo-authored-by: Amogh <adesai@cloudera.com>\n(cherry picked from commit 7db42fe6655c28330e80b8a062ef3e07968d6e76)",
        "before_after_code_files": [
          "airflow/www/templates/airflow/dags.html||airflow/www/templates/airflow/dags.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/31796"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/www/templates/airflow/dags.html||airflow/www/templates/airflow/dags.html": [
          "File: airflow/www/templates/airflow/dags.html -> airflow/www/templates/airflow/dags.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "209:           <th>Schedule</th>",
          "210:           <th style=\"width:180px;\">Last Run",
          "211:             <span class=\"material-icons text-muted js-tooltip\" aria-hidden=\"true\"",
          "213:           </th>",
          "214:           <th style=\"width:180px;\">{{ sortable_column(\"Next Run\", \"next_dagrun\") }}",
          "215:             <span class=\"material-icons text-muted js-tooltip\" aria-hidden=\"true\"",
          "217:           </th>",
          "218:           <th>Recent Tasks",
          "219:             <span class=\"material-icons text-muted js-tooltip\" aria-hidden=\"true\"",
          "",
          "[Removed Lines]",
          "212:                   title=\"Date/Time of the latest Dag Run.\">info</span>",
          "216:                   title=\"Expected date/time of the next DAG Run, or for dataset triggered DAGs, how many datasets have been updated since the last DAG Run.\">info</span>",
          "",
          "[Added Lines]",
          "212:                   title=\"Logical Date/Time of the latest Dag Run.\">info</span>",
          "216:                   title=\"Logical Date/Time interval of the next DAG Run, or for dataset triggered DAGs, how many datasets have been updated since the last DAG Run.\">info</span>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc3cd20dce547843125701b2cbc0ef2660c4e452",
      "candidate_info": {
        "commit_hash": "cc3cd20dce547843125701b2cbc0ef2660c4e452",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/cc3cd20dce547843125701b2cbc0ef2660c4e452",
        "files": [
          "airflow/api_connexion/endpoints/user_endpoint.py",
          "tests/api_connexion/endpoints/test_user_endpoint.py"
        ],
        "message": "Fix typing for POST user endpoint (#31767)\n\n* Fix typing for POST user endpoint\n\nThis should raise exception not return it.\n\n* fixup! Fix typing for POST user endpoint\n\n(cherry picked from commit f7ed87823afb2871d8f11e615d96693db3a6c2b8)",
        "before_after_code_files": [
          "airflow/api_connexion/endpoints/user_endpoint.py||airflow/api_connexion/endpoints/user_endpoint.py",
          "tests/api_connexion/endpoints/test_user_endpoint.py||tests/api_connexion/endpoints/test_user_endpoint.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/31796"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/api_connexion/endpoints/user_endpoint.py||airflow/api_connexion/endpoints/user_endpoint.py": [
          "File: airflow/api_connexion/endpoints/user_endpoint.py -> airflow/api_connexion/endpoints/user_endpoint.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:     user = security_manager.add_user(role=roles_to_add, **data)",
          "120:     if not user:",
          "121:         detail = f\"Failed to add user `{username}`.\"",
          "124:     return user_schema.dump(user)",
          "",
          "[Removed Lines]",
          "122:         return Unknown(detail=detail)",
          "",
          "[Added Lines]",
          "122:         raise Unknown(detail=detail)",
          "",
          "---------------"
        ],
        "tests/api_connexion/endpoints/test_user_endpoint.py||tests/api_connexion/endpoints/test_user_endpoint.py": [
          "File: tests/api_connexion/endpoints/test_user_endpoint.py -> tests/api_connexion/endpoints/test_user_endpoint.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "525:             \"type\": EXCEPTIONS_LINK_MAP[400],",
          "526:         }",
          "529: class TestPatchUser(TestUserEndpoint):",
          "530:     @pytest.mark.usefixtures(\"autoclean_admin_user\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "528:     def test_internal_server_error(self, autoclean_user_payload):",
          "529:         with unittest.mock.patch.object(self.app.appbuilder.sm, \"add_user\", return_value=None):",
          "530:             response = self.client.post(",
          "531:                 \"/api/v1/users\",",
          "532:                 json=autoclean_user_payload,",
          "533:                 environ_overrides={\"REMOTE_USER\": \"test\"},",
          "534:             )",
          "535:             assert response.json == {",
          "536:                 \"detail\": \"Failed to add user `example_user`.\",",
          "537:                 \"status\": 500,",
          "538:                 \"title\": \"Internal Server Error\",",
          "539:                 \"type\": EXCEPTIONS_LINK_MAP[500],",
          "540:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}