{
  "cve_id": "CVE-2012-0818",
  "cve_desc": "RESTEasy before 2.3.1 allows remote attackers to read arbitrary files via an external entity reference in a DOM document, aka an XML external entity (XXE) injection attack.",
  "repo": "resteasy/resteasy",
  "patch_hash": "71ace879cf92d323bfa4d3e88db0c3059109bbf6",
  "patch_info": {
    "commit_hash": "71ace879cf92d323bfa4d3e88db0c3059109bbf6",
    "repo": "resteasy/resteasy",
    "commit_url": "https://github.com/resteasy/resteasy/commit/71ace879cf92d323bfa4d3e88db0c3059109bbf6",
    "files": [
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java",
      "resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java",
      "resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/testpasswd"
    ],
    "message": "RESTEASY-637",
    "before_after_code_files": [
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java",
      "resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java",
      "resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java||resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java"
    ]
  },
  "patch_diff": {
    "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java": [
      "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package org.jboss.resteasy.plugins.providers;",
      "3: import org.jboss.resteasy.spi.ReaderException;",
      "4: import org.jboss.resteasy.spi.WriterException;",
      "5: import org.w3c.dom.Document;",
      "7: import javax.ws.rs.Consumes;",
      "8: import javax.ws.rs.Produces;",
      "9: import javax.ws.rs.WebApplicationException;",
      "10: import javax.ws.rs.core.MediaType;",
      "11: import javax.ws.rs.core.MultivaluedMap;",
      "12: import javax.ws.rs.ext.Provider;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import org.jboss.resteasy.core.request.AcceptHeaders;",
      "4: import org.jboss.resteasy.logging.Logger;",
      "5: import org.jboss.resteasy.plugins.server.servlet.ResteasyContextParameters;",
      "10: import javax.servlet.ServletConfig;",
      "11: import javax.servlet.ServletContext;",
      "15: import javax.ws.rs.core.Context;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "32: @Consumes({\"text/*+xml\", \"application/*+xml\"})",
      "33: public class DocumentProvider extends AbstractEntityProvider<Document>",
      "34: {",
      "35:    private final TransformerFactory transformerFactory;",
      "36:    private final DocumentBuilderFactory documentBuilder;",
      "39:    {",
      "40:       this.documentBuilder = DocumentBuilderFactory.newInstance();",
      "41:       this.transformerFactory = TransformerFactory.newInstance();",
      "42:    }",
      "44:    public boolean isReadable(Class<?> clazz, Type type,",
      "",
      "[Removed Lines]",
      "38:    public DocumentProvider()",
      "",
      "[Added Lines]",
      "41:    private static final Logger logger = Logger.getLogger(DocumentProvider.class);",
      "45:    private boolean expandEntityReferences = true;",
      "47:    public DocumentProvider(@Context ServletConfig servletConfig)",
      "51:       try",
      "52:       {",
      "53:          ServletContext context = servletConfig.getServletContext();",
      "54:          String s = context.getInitParameter(ResteasyContextParameters.RESTEASY_EXPAND_ENTITY_REFERENCES);",
      "55:          expandEntityReferences = (s == null ? true : Boolean.parseBoolean(s));",
      "56:       }",
      "57:       catch (Exception e)",
      "58:       {",
      "59:          logger.debug(\"Unable to retrieve ServletContext: expandEntityReferences defaults to true\");",
      "60:       }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "54:    {",
      "55:       try",
      "56:       {",
      "57:          return documentBuilder.newDocumentBuilder().parse(input);",
      "58:       }",
      "59:       catch (Exception e)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:          documentBuilder.setExpandEntityReferences(expandEntityReferences);",
      "",
      "---------------"
    ],
    "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java": [
      "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "31:    String RESTEASY_SCANNED_BY_DEPLOYER = \"resteasy.scanned.by.deployer\";",
      "32:    String RESTEASY_JNDI_COMPONENT_RESOURCES = \"resteasy.jndi.component.resources\";",
      "33:    String RESTEASY_UNWRAPPED_EXCEPTIONS = \"resteasy.unwrapped.exceptions\";",
      "36:    String RESTEASY_SCANNED_RESOURCES = \"resteasy.scanned.resources\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34:    String RESTEASY_EXPAND_ENTITY_REFERENCES = \"resteasy.document.expand.entity.references\";",
      "",
      "---------------"
    ],
    "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java": [
      "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package org.jboss.resteasy.plugins.server.tjws;",
      "3: import Acme.Serve.Serve;",
      "4: import org.jboss.resteasy.plugins.server.embedded.EmbeddedJaxrsServer;",
      "5: import org.jboss.resteasy.plugins.server.embedded.SecurityDomain;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import java.util.Hashtable;",
      "4: import java.util.Map;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "15:    protected TJWSServletDispatcher servlet = new TJWSServletDispatcher();",
      "17:    protected String rootResourcePath = \"\";",
      "19:    public void setRootResourcePath(String rootResourcePath)",
      "20:    {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21:    protected Hashtable<String,String> initParameters;",
      "22:    protected Hashtable<String,String> contextParameters;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "35:       this.deployment = deployment;",
      "36:    }",
      "38:    @Override",
      "39:    public void start()",
      "40:    {",
      "41:       server.setAttribute(ResteasyDeployment.class.getName(), deployment);",
      "43:       servlet.setContextPath(rootResourcePath);",
      "44:       super.start();",
      "45:    }",
      "",
      "[Removed Lines]",
      "42:       addServlet(rootResourcePath, servlet);",
      "",
      "[Added Lines]",
      "43:    public void setInitParameters(Hashtable<String,String> initParameters)",
      "44:    {",
      "45:       this.initParameters = initParameters;",
      "46:    }",
      "48:    public void setContextParameters(Hashtable<String,String> contextParameters)",
      "49:    {",
      "50:       this.contextParameters = contextParameters;",
      "51:    }",
      "57:       addServlet(rootResourcePath, servlet, initParameters, contextParameters);",
      "",
      "---------------"
    ],
    "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java": [
      "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "28:    {",
      "29:       private static final long serialVersionUID = -5031104686755790970L;",
      "30:       private PathTreeDictionary mappingTable = null;",
      "32:       public void initFileMappings()",
      "33:       {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31:       private Hashtable<String,String> initParams = null;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "46:          }",
      "47:          mappingTable.put(context, directory);",
      "48:       }",
      "49:    }",
      "51:    protected FileMappingServe server = new FileMappingServe();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51:       public String getInitParameter(String param)",
      "52:       {",
      "53:          if (initParams == null)",
      "54:          {",
      "55:             return null;",
      "56:          }",
      "57:          return initParams.get(param);",
      "58:       }",
      "60:       public Hashtable<String, String> getInitParams()",
      "61:       {",
      "62:          return initParams;",
      "63:       }",
      "65:       public void setInitParams(Hashtable<String, String> initParams)",
      "66:       {",
      "67:          this.initParams = initParams;",
      "68:       }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "61:    {",
      "62:       server.addServlet(bindPath, servlet, initParams);",
      "63:    }",
      "65:    public void setProps(Properties props)",
      "66:    {",
      "67:       this.props.putAll(props);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "85:    public void addServlet(String bindPath, HttpServlet servlet, Hashtable<String,String> initParams, Hashtable<String,String> contextParams)",
      "86:    {",
      "87:       server.setInitParams(contextParams);",
      "88:       server.addServlet(bindPath, servlet, initParams);",
      "89:    }",
      "",
      "---------------"
    ],
    "resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java": [
      "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: import org.jboss.resteasy.spi.ResteasyDeployment;",
      "6: import java.lang.reflect.Method;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7: import java.util.Hashtable;",
      "8: import java.util.Map;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "12: public class EmbeddedContainer",
      "13: {",
      "16:    public static Class getBootstrap()",
      "17:    {",
      "",
      "[Removed Lines]",
      "14:    private static Class bootstrap = TJWSServletContainer.class;",
      "",
      "[Added Lines]",
      "16:    private static Class<?> bootstrap = TJWSServletContainer.class;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "52:    public static ResteasyDeployment start() throws Exception",
      "53:    {",
      "55:    }",
      "58:    {",
      "62:    }",
      "65:    {",
      "68:    }",
      "70:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain) throws Exception",
      "71:    {",
      "72:       Method start = bootstrap.getMethod(\"start\", String.class, SecurityDomain.class);",
      "",
      "[Removed Lines]",
      "54:       return start(\"/\");",
      "57:    public static void start(ResteasyDeployment deployment) throws Exception",
      "59:       Method start = bootstrap.getMethod(\"start\", ResteasyDeployment.class);",
      "60:       start.invoke(null, deployment);",
      "64:    public static ResteasyDeployment start(String bindPath) throws Exception",
      "66:       Method start = bootstrap.getMethod(\"start\", String.class);",
      "67:       return (ResteasyDeployment) start.invoke(null, bindPath);",
      "",
      "[Added Lines]",
      "56:       return start(\"/\", (Hashtable<String,String>) null);",
      "59:    public static ResteasyDeployment start(String bindPath) throws Exception",
      "61:       return start(bindPath, null, null);",
      "62:    }",
      "64:    public static ResteasyDeployment start(Hashtable<String,String> initParams) throws Exception",
      "65:    {",
      "66:       return start(\"/\", initParams);",
      "69:    public static ResteasyDeployment start(Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
      "71:       return start(\"/\", initParams, contextParams);",
      "72:    }",
      "74:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams) throws Exception",
      "75:    {",
      "76:       Method start = bootstrap.getMethod(\"start\", String.class, Hashtable.class);",
      "77:       return (ResteasyDeployment) start.invoke(null, bindPath, initParams);",
      "80:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
      "81:    {",
      "82:       Method start = bootstrap.getMethod(\"start\", String.class, Hashtable.class, Hashtable.class);",
      "83:       return (ResteasyDeployment) start.invoke(null, bindPath, initParams, contextParams);",
      "84:    }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "75:    }",
      "78:    public static void stop() throws Exception",
      "79:    {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "93:    public static void start(ResteasyDeployment deployment) throws Exception",
      "94:    {",
      "95:       Method start = bootstrap.getMethod(\"start\", ResteasyDeployment.class);",
      "96:       start.invoke(null, deployment);",
      "98:    }",
      "",
      "---------------"
    ],
    "resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java": [
      "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package org.jboss.resteasy.test;",
      "3: import org.jboss.resteasy.plugins.server.embedded.SecurityDomain;",
      "4: import org.jboss.resteasy.plugins.server.tjws.TJWSEmbeddedJaxrsServer;",
      "5: import org.jboss.resteasy.spi.ResteasyDeployment;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import java.util.Hashtable;",
      "4: import java.util.Map;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "20:    public static ResteasyDeployment start(String bindPath) throws Exception",
      "21:    {",
      "23:    }",
      "25:    public static void start(ResteasyDeployment deployment) throws Exception",
      "26:    {",
      "27:       System.out.println(\"[Embedded Container Start]\");",
      "",
      "[Removed Lines]",
      "22:       return start(bindPath, null);",
      "",
      "[Added Lines]",
      "25:       return start(bindPath, null, null, null);",
      "26:    }",
      "28:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams) throws Exception",
      "29:    {",
      "30:       return start(bindPath, null, initParams, null);",
      "33:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
      "34:    {",
      "35:       return start(bindPath, null, initParams, contextParams);",
      "36:    }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "34:    }",
      "36:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain) throws Exception",
      "37:    {",
      "38:       ResteasyDeployment deployment = new ResteasyDeployment();",
      "39:       deployment.setSecurityEnabled(true);",
      "41:    }",
      "44:    {",
      "45:       tjws = new TJWSEmbeddedJaxrsServer();",
      "46:       tjws.setDeployment(deployment);",
      "47:       tjws.setPort(TestPortProvider.getPort());",
      "48:       tjws.setRootResourcePath(bindPath);",
      "49:       tjws.setSecurityDomain(domain);",
      "50:       tjws.start();",
      "51:       return tjws.getDeployment();",
      "52:    }",
      "",
      "[Removed Lines]",
      "40:       return start(bindPath, domain, deployment);",
      "43:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain, ResteasyDeployment deployment) throws Exception",
      "",
      "[Added Lines]",
      "50:    {",
      "51:       return start(bindPath, domain, null, null);",
      "52:    }",
      "54:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
      "58:       return start(bindPath, domain, deployment, initParams, contextParams);",
      "61:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain, ResteasyDeployment deployment, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
      "68:       tjws.setInitParameters(initParams);",
      "69:       tjws.setContextParameters(contextParams);",
      "",
      "---------------"
    ],
    "resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java||resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java": [
      "File: resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java -> resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package org.jboss.resteasy.test.xxe;",
      "3: import static org.jboss.resteasy.test.TestPortProvider.generateURL;",
      "5: import java.util.Hashtable;",
      "7: import javax.ws.rs.Consumes;",
      "8: import javax.ws.rs.POST;",
      "9: import javax.ws.rs.Path;",
      "11: import junit.framework.Assert;",
      "13: import org.jboss.resteasy.client.ClientRequest;",
      "14: import org.jboss.resteasy.client.ClientResponse;",
      "15: import org.jboss.resteasy.core.Dispatcher;",
      "16: import org.jboss.resteasy.plugins.server.servlet.ResteasyContextParameters;",
      "17: import org.jboss.resteasy.spi.ResteasyDeployment;",
      "18: import org.jboss.resteasy.test.EmbeddedContainer;",
      "19: import org.junit.Test;",
      "20: import org.w3c.dom.Document;",
      "21: import org.w3c.dom.Node;",
      "22: import org.w3c.dom.NodeList;",
      "28: public class TestXXE",
      "29: {",
      "30:    protected static ResteasyDeployment deployment;",
      "31:    protected static Dispatcher dispatcher;",
      "33:    @Path(\"/\")",
      "34:    public static class TestResource",
      "35:    {",
      "36:       @Consumes(\"application/xml\")",
      "37:       @POST",
      "38:       public String doPost(Document doc)",
      "39:       {",
      "40:          Node node = doc.getDocumentElement();",
      "41:          System.out.println(\"name: \" + node.getNodeName());",
      "42:          NodeList children = doc.getDocumentElement().getChildNodes();",
      "44:          node = children.item(0);",
      "45:          System.out.println(\"name: \" + node.getNodeName());",
      "46:          children = node.getChildNodes();",
      "48:          node = children.item(0);",
      "49:          System.out.println(\"name: \" + node.getNodeName());",
      "50:          children = node.getChildNodes();",
      "52:          System.out.println(node.getNodeValue());",
      "53:          return node.getNodeValue();",
      "54:       }",
      "55:    }",
      "57:    public static void before(String expandEntityReferences) throws Exception",
      "58:    {",
      "59:       Hashtable<String,String> initParams = new Hashtable<String,String>();",
      "60:       Hashtable<String,String> contextParams = new Hashtable<String,String>();",
      "61:       contextParams.put(ResteasyContextParameters.RESTEASY_EXPAND_ENTITY_REFERENCES, expandEntityReferences);",
      "62:       deployment = EmbeddedContainer.start(initParams, contextParams);",
      "63:       dispatcher = deployment.getDispatcher();",
      "64:       deployment.getRegistry().addPerRequestResource(TestResource.class);",
      "65:    }",
      "67:    public static void after() throws Exception",
      "68:    {",
      "69:       EmbeddedContainer.stop();",
      "70:       dispatcher = null;",
      "71:       deployment = null;",
      "72:    }",
      "74:    @Test",
      "75:    public void testXXEWithoutExpansion() throws Exception",
      "76:    {",
      "77:       before(\"false\");",
      "78:       ClientRequest request = new ClientRequest(generateURL(\"/\"));",
      "79:       String filename = \"src/test/java/org/jboss/resteasy/test/xxe/testpasswd\";",
      "80:       String str = \"<?xml version=\\\"1.0\\\"?>\\r\" +",
      "81:                    \"<!DOCTYPE foo\\r\" +",
      "82:                    \"[<!ENTITY xxe SYSTEM \\\"\" + filename + \"\\\">\\r\" +",
      "83:                    \"]>\\r\" +",
      "84:                    \"<search><user>&xxe;</user></search>\";",
      "85:       System.out.println(str);",
      "86:       request.body(\"application/xml\", str);",
      "87:       ClientResponse<?> response = request.post();",
      "88:       Assert.assertEquals(204, response.getStatus());",
      "89:       String entity = response.getEntity(String.class);",
      "90:       System.out.println(\"result: \" + entity);",
      "91:       Assert.assertEquals(entity, null);",
      "92:       after();",
      "93:    }",
      "95:    @Test",
      "96:    public void testXXEWithExpansion() throws Exception",
      "97:    {",
      "98:       before(\"true\");",
      "99:       ClientRequest request = new ClientRequest(generateURL(\"/\"));",
      "100:       String filename = \"src/test/java/org/jboss/resteasy/test/xxe/testpasswd\";",
      "101:       String str = \"<?xml version=\\\"1.0\\\"?>\\r\" +",
      "102:                    \"<!DOCTYPE foo\\r\" +",
      "103:                    \"[<!ENTITY xxe SYSTEM \\\"\" + filename + \"\\\">\\r\" +",
      "104:                    \"]>\\r\" +",
      "105:                    \"<search><user>&xxe;</user></search>\";",
      "106:       System.out.println(str);",
      "107:       request.body(\"application/xml\", str);",
      "108:       ClientResponse<?> response = request.post();",
      "109:       Assert.assertEquals(200, response.getStatus());",
      "110:       String entity = response.getEntity(String.class);",
      "111:       System.out.println(\"result: \" + entity);",
      "112:       Assert.assertEquals(\"xx:xx:xx:xx:xx:xx:xx\", entity);",
      "113:       after();",
      "114:    }",
      "115: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b00a5a1e5f4aeabcefcffa3e7c4ae2ad1c81a57",
      "candidate_info": {
        "commit_hash": "6b00a5a1e5f4aeabcefcffa3e7c4ae2ad1c81a57",
        "repo": "resteasy/resteasy",
        "commit_url": "https://github.com/resteasy/resteasy/commit/6b00a5a1e5f4aeabcefcffa3e7c4ae2ad1c81a57",
        "files": [
          "docbook/reference/en/modules/RESTEasy_Embedded_Container.xml",
          "pom.xml",
          "providers/fastinfoset/pom.xml",
          "providers/jaxb/pom.xml",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/AbstractJAXBProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/CollectionProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBElementProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlRootElementProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlTypeProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/MapProvider.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/RegisterBuiltin.java",
          "server-adapters/pom.xml",
          "server-adapters/resteasy-jdk-http/pom.xml",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/BasicAuthFilter.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextBuilder.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextResteasyConfiguration.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpExchangeUtil.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerRequest.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerResponse.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyHttpHandler.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/SunHttpJaxrsServer.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/test/HttpServerContainer.java",
          "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/HttpContextTest.java",
          "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/SimpleResource.java",
          "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/security/BasicAuthTest.java"
        ],
        "message": "sun.http and jaxb fixes",
        "before_after_code_files": [
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/AbstractJAXBProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/AbstractJAXBProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/CollectionProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/CollectionProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBElementProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBElementProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlRootElementProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlRootElementProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlTypeProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlTypeProvider.java",
          "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/MapProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/MapProvider.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/RegisterBuiltin.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/RegisterBuiltin.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyContext.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextBuilder.java",
          "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextResteasyConfiguration.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextResteasyConfiguration.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerResponse.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerResponse.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyHttpHandler.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyHttpHandler.java",
          "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/SunHttpJaxrsServer.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/SunHttpJaxrsServer.java",
          "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/HttpContextTest.java||server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/HttpContextTest.java",
          "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/SimpleResource.java||server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/SimpleResource.java",
          "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/security/BasicAuthTest.java||server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/security/BasicAuthTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java"
          ],
          "candidate": [
            "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java"
          ]
        }
      },
      "candidate_diff": {
        "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/AbstractJAXBProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/AbstractJAXBProvider.java": [
          "File: providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/AbstractJAXBProvider.java -> providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/AbstractJAXBProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import org.jboss.resteasy.core.interception.DecoratorMatcher;",
          "10: import org.jboss.resteasy.plugins.providers.AbstractEntityProvider;",
          "11: import org.jboss.resteasy.spi.ResteasyProviderFactory;",
          "12: import org.jboss.resteasy.util.TypeConverter;",
          "15: import javax.ws.rs.core.Context;",
          "16: import javax.ws.rs.core.MediaType;",
          "17: import javax.ws.rs.core.MultivaluedMap;",
          "",
          "[Removed Lines]",
          "14: import javax.servlet.ServletContext;",
          "",
          "[Added Lines]",
          "11: import org.jboss.resteasy.spi.ResteasyConfiguration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:    public AbstractJAXBProvider()",
          "47:    {",
          "49:       if (context != null)",
          "50:       {",
          "52:          if (s != null)",
          "53:          {",
          "54:             setExpandEntityReferences(Boolean.parseBoolean(s));",
          "",
          "[Removed Lines]",
          "48:       ServletContext context = ResteasyProviderFactory.getContextData(ServletContext.class);",
          "51:          String s = context.getInitParameter(\"resteasy.document.expand.entity.references\");",
          "",
          "[Added Lines]",
          "48:       ResteasyConfiguration context = ResteasyProviderFactory.getContextData(ResteasyConfiguration.class);",
          "51:          String s = context.getParameter(\"resteasy.document.expand.entity.references\");",
          "",
          "---------------"
        ],
        "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/CollectionProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/CollectionProvider.java": [
          "File: providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/CollectionProvider.java -> providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/CollectionProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import org.jboss.resteasy.annotations.providers.jaxb.DoNotUseJAXBProvider;",
          "4: import org.jboss.resteasy.annotations.providers.jaxb.Wrapped;",
          "5: import org.jboss.resteasy.spi.ResteasyProviderFactory;",
          "6: import org.jboss.resteasy.util.FindAnnotation;",
          "7: import org.jboss.resteasy.util.Types;",
          "8: import org.w3c.dom.Element;",
          "9: import org.xml.sax.InputSource;",
          "12: import javax.ws.rs.Consumes;",
          "13: import javax.ws.rs.Produces;",
          "14: import javax.ws.rs.WebApplicationException;",
          "",
          "[Removed Lines]",
          "11: import javax.servlet.ServletContext;",
          "",
          "[Added Lines]",
          "5: import org.jboss.resteasy.spi.ResteasyConfiguration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:    public CollectionProvider()",
          "60:    {",
          "62:       if (context != null)",
          "63:       {",
          "65:          if (s != null)",
          "66:          {",
          "67:             setExpandEntityReferences(Boolean.parseBoolean(s));",
          "",
          "[Removed Lines]",
          "61:       ServletContext context = ResteasyProviderFactory.getContextData(ServletContext.class);",
          "64:          String s = context.getInitParameter(\"resteasy.document.expand.entity.references\");",
          "",
          "[Added Lines]",
          "61:       ResteasyConfiguration context = ResteasyProviderFactory.getContextData(ResteasyConfiguration.class);",
          "64:          String s = context.getParameter(\"resteasy.document.expand.entity.references\");",
          "",
          "---------------"
        ],
        "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBElementProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBElementProvider.java": [
          "File: providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBElementProvider.java -> providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBElementProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import org.jboss.resteasy.util.Types;",
          "7: import org.xml.sax.InputSource;",
          "10: import javax.ws.rs.Consumes;",
          "11: import javax.ws.rs.Produces;",
          "12: import javax.ws.rs.core.Context;",
          "",
          "[Removed Lines]",
          "9: import javax.servlet.ServletContext;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlRootElementProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlRootElementProvider.java": [
          "File: providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlRootElementProvider.java -> providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlRootElementProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import org.jboss.resteasy.annotations.providers.jaxb.DoNotUseJAXBProvider;",
          "7: import org.jboss.resteasy.util.FindAnnotation;",
          "10: import javax.ws.rs.Consumes;",
          "11: import javax.ws.rs.Produces;",
          "12: import javax.ws.rs.core.Context;",
          "",
          "[Removed Lines]",
          "9: import javax.servlet.ServletContext;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlTypeProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlTypeProvider.java": [
          "File: providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlTypeProvider.java -> providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/JAXBXmlTypeProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import org.jboss.resteasy.annotations.providers.jaxb.DoNotUseJAXBProvider;",
          "7: import org.jboss.resteasy.util.FindAnnotation;",
          "10: import javax.ws.rs.Consumes;",
          "11: import javax.ws.rs.Produces;",
          "12: import javax.ws.rs.core.Context;",
          "",
          "[Removed Lines]",
          "9: import javax.servlet.ServletContext;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/MapProvider.java||providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/MapProvider.java": [
          "File: providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/MapProvider.java -> providers/jaxb/src/main/java/org/jboss/resteasy/plugins/providers/jaxb/MapProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import org.jboss.resteasy.annotations.providers.jaxb.DoNotUseJAXBProvider;",
          "4: import org.jboss.resteasy.annotations.providers.jaxb.WrappedMap;",
          "5: import org.jboss.resteasy.spi.ResteasyProviderFactory;",
          "6: import org.jboss.resteasy.util.FindAnnotation;",
          "7: import org.jboss.resteasy.util.Types;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import org.jboss.resteasy.spi.ResteasyConfiguration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10: import org.w3c.dom.NamedNodeMap;",
          "11: import org.xml.sax.InputSource;",
          "14: import javax.ws.rs.Consumes;",
          "15: import javax.ws.rs.Produces;",
          "16: import javax.ws.rs.WebApplicationException;",
          "",
          "[Removed Lines]",
          "13: import javax.servlet.ServletContext;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57:    public MapProvider()",
          "58:    {",
          "60:       if (context != null)",
          "61:       {",
          "63:          if (s != null)",
          "64:          {",
          "65:             setExpandEntityReferences(Boolean.parseBoolean(s));",
          "",
          "[Removed Lines]",
          "59:       ServletContext context = ResteasyProviderFactory.getContextData(ServletContext.class);",
          "62:          String s = context.getInitParameter(\"resteasy.document.expand.entity.references\");",
          "",
          "[Added Lines]",
          "59:       ResteasyConfiguration context = ResteasyProviderFactory.getContextData(ResteasyConfiguration.class);",
          "62:          String s = context.getParameter(\"resteasy.document.expand.entity.references\");",
          "",
          "---------------"
        ],
        "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java": [
          "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jboss.resteasy.plugins.providers;",
          "4: import org.jboss.resteasy.logging.Logger;",
          "5: import org.jboss.resteasy.plugins.server.servlet.ResteasyContextParameters;",
          "6: import org.jboss.resteasy.spi.ReaderException;",
          "7: import org.jboss.resteasy.spi.WriterException;",
          "8: import org.w3c.dom.Document;",
          "12: import javax.ws.rs.Consumes;",
          "13: import javax.ws.rs.Produces;",
          "14: import javax.ws.rs.WebApplicationException;",
          "",
          "[Removed Lines]",
          "3: import org.jboss.resteasy.core.request.AcceptHeaders;",
          "10: import javax.servlet.ServletConfig;",
          "11: import javax.servlet.ServletContext;",
          "",
          "[Added Lines]",
          "6: import org.jboss.resteasy.spi.ResteasyConfiguration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:    private final DocumentBuilderFactory documentBuilder;",
          "45:    private boolean expandEntityReferences = true;",
          "48:    {",
          "49:       this.documentBuilder = DocumentBuilderFactory.newInstance();",
          "50:       this.transformerFactory = TransformerFactory.newInstance();",
          "51:       try",
          "52:       {",
          "55:          expandEntityReferences = (s == null ? true : Boolean.parseBoolean(s));",
          "56:       }",
          "57:       catch (Exception e)",
          "58:       {",
          "60:       }",
          "61:    }",
          "",
          "[Removed Lines]",
          "47:    public DocumentProvider(@Context ServletConfig servletConfig)",
          "53:          ServletContext context = servletConfig.getServletContext();",
          "54:          String s = context.getInitParameter(ResteasyContextParameters.RESTEASY_EXPAND_ENTITY_REFERENCES);",
          "59:          logger.debug(\"Unable to retrieve ServletContext: expandEntityReferences defaults to true\");",
          "",
          "[Added Lines]",
          "45:    public DocumentProvider(@Context ResteasyConfiguration config)",
          "51:          String s = config.getParameter(ResteasyContextParameters.RESTEASY_EXPAND_ENTITY_REFERENCES);",
          "56:          logger.debug(\"Unable to retrieve config: expandEntityReferences defaults to true\");",
          "",
          "---------------"
        ],
        "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/RegisterBuiltin.java||resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/RegisterBuiltin.java": [
          "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/RegisterBuiltin.java -> resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/RegisterBuiltin.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:          }",
          "72:          catch (NoClassDefFoundError e)",
          "73:          {",
          "75:          }",
          "76:          catch (ClassNotFoundException e)",
          "77:          {",
          "",
          "[Removed Lines]",
          "74:             logger.warn(\"NoClassDefFoundError: Unable to load builtin provider: \" + line);",
          "",
          "[Added Lines]",
          "74:             logger.error(\"NoClassDefFoundError: Unable to load builtin provider: \" + line, e);",
          "",
          "---------------"
        ],
        "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyContext.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextBuilder.java": [
          "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyContext.java -> server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import com.sun.net.httpserver.HttpContext;",
          "4: import com.sun.net.httpserver.HttpServer;",
          "5: import org.jboss.resteasy.plugins.server.embedded.SecurityDomain;",
          "6: import org.jboss.resteasy.spi.ResteasyDeployment;",
          "16: {",
          "17:    protected ResteasyDeployment deployment = new ResteasyDeployment();",
          "19:    protected ResteasyHttpHandler handler;",
          "20:    protected SecurityDomain securityDomain;",
          "21:    protected HttpContext boundContext;",
          "",
          "[Removed Lines]",
          "15: public class ResteasyContext",
          "18:    protected String path = \"\";",
          "",
          "[Added Lines]",
          "6: import org.jboss.resteasy.spi.ResteasyConfiguration;",
          "16:      HttpServer httpServer = HttpServer.create(new InetSocketAddress(port), 10);",
          "17:      contextBuilder = new HttpContextBuilder();",
          "18:      contextBuilder.getDeployment().getActualResourceClasses().add(SimpleResource.class);",
          "19:      HttpContext context = contextBuilder.bind(httpServer);",
          "20:      context.getAttributes().put(\"some.config.info\", \"42\");",
          "21:      httpServer.start();",
          "23:      contextBuilder.cleanup();",
          "24:      httpServer.stop(0);",
          "25:    </pre>",
          "34: public class HttpContextBuilder",
          "37:    protected String path = \"/\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:       }",
          "45:    }",
          "57:    public SecurityDomain getSecurityDomain()",
          "58:    {",
          "59:       return securityDomain;",
          "",
          "[Removed Lines]",
          "47:    public ResteasyHttpHandler getHandler()",
          "48:    {",
          "49:       return handler;",
          "50:    }",
          "52:    public void setHandler(ResteasyHttpHandler handler)",
          "53:    {",
          "54:       this.handler = handler;",
          "55:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72:    public HttpContext bind(HttpServer server)",
          "73:    {",
          "75:       handler = new ResteasyHttpHandler();",
          "78:       boundContext = server.createContext(path, handler);",
          "79:       if (securityDomain != null)",
          "80:       {",
          "81:          boundContext.getFilters().add(new BasicAuthFilter(securityDomain));",
          "82:       }",
          "83:       return boundContext;",
          "85:    }",
          "",
          "[Removed Lines]",
          "74:       deployment.start();",
          "76:       handler.setDispatcher(deployment.getDispatcher());",
          "77:       handler.setProviderFactory(deployment.getProviderFactory());",
          "",
          "[Added Lines]",
          "90:       HttpContextResteasyConfiguration config = new HttpContextResteasyConfiguration(boundContext);",
          "91:       deployment.getDefaultContextObjects().put(ResteasyConfiguration.class, config);",
          "96:       deployment.start();",
          "97:       handler.setDispatcher(deployment.getDispatcher());",
          "98:       handler.setProviderFactory(deployment.getProviderFactory());",
          "",
          "---------------"
        ],
        "server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextResteasyConfiguration.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextResteasyConfiguration.java": [
          "File: server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextResteasyConfiguration.java -> server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpContextResteasyConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jboss.resteasy.plugins.server.sun.http;",
          "3: import com.sun.net.httpserver.HttpContext;",
          "4: import org.jboss.resteasy.spi.ResteasyConfiguration;",
          "6: import java.util.Set;",
          "14: public class HttpContextResteasyConfiguration implements ResteasyConfiguration",
          "15: {",
          "16:    protected HttpContext context;",
          "18:    public HttpContextResteasyConfiguration(HttpContext context)",
          "19:    {",
          "20:       this.context = context;",
          "21:    }",
          "23:    @Override",
          "24:    public String getParameter(String name)",
          "25:    {",
          "26:       Object val = context.getAttributes().get(name);",
          "27:       if (val == null) return null;",
          "28:       return val.toString();",
          "29:    }",
          "31:    @Override",
          "32:    public Set<String> getParameterNames()",
          "33:    {",
          "34:       return context.getAttributes().keySet();",
          "35:    }",
          "37:    @Override",
          "38:    public String getInitParameter(String name)",
          "39:    {",
          "40:       return getParameter(name);",
          "41:    }",
          "43:    @Override",
          "44:    public Set<String> getInitParameterNames()",
          "45:    {",
          "46:       return getParameterNames();",
          "47:    }",
          "48: }",
          "",
          "---------------"
        ],
        "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerResponse.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerResponse.java": [
          "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerResponse.java -> server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/HttpServerResponse.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jboss.resteasy.plugins.server.sun.http;",
          "3: import com.sun.net.httpserver.HttpExchange;",
          "5: import org.jboss.resteasy.spi.HttpResponse;",
          "6: import org.jboss.resteasy.spi.ResteasyProviderFactory;",
          "7: import org.jboss.resteasy.util.CaseInsensitiveMap;",
          "",
          "[Removed Lines]",
          "4: import org.jboss.resteasy.specimpl.MultivaluedMapImpl;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyHttpHandler.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyHttpHandler.java": [
          "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyHttpHandler.java -> server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/ResteasyHttpHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import org.jboss.resteasy.core.SynchronousDispatcher;",
          "8: import org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory;",
          "9: import org.jboss.resteasy.logging.Logger;",
          "13: import org.jboss.resteasy.spi.HttpRequest;",
          "15: import org.jboss.resteasy.spi.ResteasyProviderFactory;",
          "20: import java.io.IOException;",
          "",
          "[Removed Lines]",
          "10: import org.jboss.resteasy.plugins.server.embedded.SecurityDomain;",
          "11: import org.jboss.resteasy.plugins.server.embedded.SimplePrincipal;",
          "12: import org.jboss.resteasy.specimpl.UriInfoImpl;",
          "14: import org.jboss.resteasy.spi.HttpResponse;",
          "17: import javax.servlet.http.HttpServletResponse;",
          "18: import javax.ws.rs.core.HttpHeaders;",
          "19: import javax.ws.rs.core.SecurityContext;",
          "21: import java.security.Principal;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/SunHttpJaxrsServer.java||server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/SunHttpJaxrsServer.java": [
          "File: resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/sun/http/SunHttpJaxrsServer.java -> server-adapters/resteasy-jdk-http/src/main/java/org/jboss/resteasy/plugins/server/sun/http/SunHttpJaxrsServer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jboss.resteasy.plugins.server.sun.http;",
          "4: import com.sun.net.httpserver.HttpServer;",
          "5: import org.jboss.resteasy.plugins.server.embedded.EmbeddedJaxrsServer;",
          "6: import org.jboss.resteasy.plugins.server.embedded.SecurityDomain;",
          "",
          "[Removed Lines]",
          "3: import com.sun.net.httpserver.HttpContext;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10: import java.net.InetSocketAddress;",
          "16: public class SunHttpJaxrsServer implements EmbeddedJaxrsServer",
          "17: {",
          "19:    protected HttpServer httpServer;",
          "20:    protected int port = 8080;",
          "",
          "[Removed Lines]",
          "18:    protected ResteasyContext context = new ResteasyContext();",
          "",
          "[Added Lines]",
          "20:    protected HttpContextBuilder context = new HttpContextBuilder();",
          "",
          "---------------"
        ],
        "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/HttpContextTest.java||server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/HttpContextTest.java": [
          "File: server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/HttpContextTest.java -> server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/HttpContextTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jboss.resteasy.test;",
          "3: import com.sun.net.httpserver.HttpServer;",
          "4: import org.jboss.resteasy.client.ClientRequest;",
          "5: import org.jboss.resteasy.client.ClientResponse;",
          "6: import org.jboss.resteasy.plugins.server.sun.http.HttpContextBuilder;",
          "7: import org.junit.AfterClass;",
          "8: import org.junit.Assert;",
          "9: import org.junit.BeforeClass;",
          "10: import org.junit.Test;",
          "13: import java.net.InetSocketAddress;",
          "15: import static org.jboss.resteasy.test.TestPortProvider.*;",
          "23: public class HttpContextTest",
          "24: {",
          "26:    private static HttpServer httpServer;",
          "27:    private static HttpContextBuilder contextBuilder;",
          "29:    @BeforeClass",
          "30:    public static void before() throws Exception",
          "31:    {",
          "32:       int port = TestPortProvider.getPort();",
          "33:       httpServer = HttpServer.create(new InetSocketAddress(port), 10);",
          "34:       contextBuilder = new HttpContextBuilder();",
          "35:       contextBuilder.getDeployment().getActualResourceClasses().add(SimpleResource.class);",
          "36:       contextBuilder.bind(httpServer);",
          "37:       httpServer.start();",
          "39:    }",
          "41:    @AfterClass",
          "42:    public static void after() throws Exception",
          "43:    {",
          "44:       contextBuilder.cleanup();",
          "45:       httpServer.stop(0);",
          "46:    }",
          "48:    @Test",
          "49:    public void testNoDefaultsResource() throws Exception",
          "50:    {",
          "51:       {",
          "52:          ClientRequest request = new ClientRequest(generateURL(\"/basic\"));",
          "53:          ClientResponse<String> response = request.get(String.class);",
          "54:          Assert.assertEquals(200, response.getStatus());",
          "55:          Assert.assertEquals(\"basic\", response.getEntity());",
          "56:       }",
          "58:       {",
          "59:          ClientRequest request = new ClientRequest(generateURL(\"/basic\"));",
          "60:          request.body(\"text/plain\", \"basic\");",
          "61:          ClientResponse<?> response = request.put();",
          "62:          Assert.assertEquals(204, response.getStatus());",
          "63:       }",
          "65:       {",
          "66:          ClientRequest request = new ClientRequest(generateURL(\"/queryParam\"));",
          "67:          request.queryParameter(\"param\", \"hello world\");",
          "68:          ClientResponse<String> response = request.get(String.class);",
          "69:          Assert.assertEquals(200, response.getStatus());",
          "70:          Assert.assertEquals(\"hello world\", response.getEntity());",
          "71:       }",
          "73:       {",
          "74:          ClientRequest request = new ClientRequest(generateURL(\"/uriParam/1234\"));",
          "75:          ClientResponse<String> response = request.get(String.class);",
          "76:          Assert.assertEquals(200, response.getStatus());",
          "77:          Assert.assertEquals(\"1234\", response.getEntity());",
          "78:       }",
          "79:    }",
          "81: }",
          "",
          "---------------"
        ],
        "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/SimpleResource.java||server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/SimpleResource.java": [
          "File: server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/SimpleResource.java -> server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/SimpleResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jboss.resteasy.test;",
          "3: import javax.ws.rs.Consumes;",
          "4: import javax.ws.rs.GET;",
          "5: import javax.ws.rs.MatrixParam;",
          "6: import javax.ws.rs.PUT;",
          "7: import javax.ws.rs.Path;",
          "8: import javax.ws.rs.PathParam;",
          "9: import javax.ws.rs.Produces;",
          "10: import javax.ws.rs.QueryParam;",
          "11: import javax.ws.rs.core.Response;",
          "17: @Path(\"/\")",
          "18: public class SimpleResource",
          "19: {",
          "20:    @GET",
          "21:    @Path(\"basic\")",
          "22:    @Produces(\"text/plain\")",
          "23:    public String getBasic()",
          "24:    {",
          "25:       System.out.println(\"getBasic()\");",
          "26:       return \"basic\";",
          "27:    }",
          "29:    @PUT",
          "30:    @Path(\"basic\")",
          "31:    @Consumes(\"text/plain\")",
          "32:    public void putBasic(String body)",
          "33:    {",
          "34:       System.out.println(body);",
          "35:    }",
          "37:    @GET",
          "38:    @Path(\"queryParam\")",
          "39:    @Produces(\"text/plain\")",
          "40:    public String getQueryParam(@QueryParam(\"param\") String param)",
          "41:    {",
          "42:       System.out.println(\"query param: \" + param);",
          "43:       return param;",
          "44:    }",
          "46:    @GET",
          "47:    @Path(\"matrixParam\")",
          "48:    @Produces(\"text/plain\")",
          "49:    public String getMatrixParam(@MatrixParam(\"param\") String param)",
          "50:    {",
          "51:       return param;",
          "52:    }",
          "54:    @GET",
          "55:    @Path(\"uriParam/{param}\")",
          "56:    @Produces(\"text/plain\")",
          "57:    public int getUriParam(@PathParam(\"param\") int param)",
          "58:    {",
          "59:       return param;",
          "60:    }",
          "62:    @GET",
          "63:    @Path(\"header\")",
          "64:    public Response getHeader()",
          "65:    {",
          "66:       return Response.ok().header(\"header\", \"headervalue\").build();",
          "67:    }",
          "68: }",
          "",
          "---------------"
        ],
        "server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/security/BasicAuthTest.java||server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/security/BasicAuthTest.java": [
          "File: server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/security/BasicAuthTest.java -> server-adapters/resteasy-jdk-http/src/test/java/org/jboss/resteasy/test/security/BasicAuthTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jboss.resteasy.test.security;",
          "3: import org.apache.http.HttpHost;",
          "4: import org.apache.http.HttpResponse;",
          "5: import org.apache.http.auth.AuthScope;",
          "6: import org.apache.http.auth.UsernamePasswordCredentials;",
          "7: import org.apache.http.client.AuthCache;",
          "8: import org.apache.http.client.methods.HttpGet;",
          "9: import org.apache.http.client.protocol.ClientContext;",
          "10: import org.apache.http.impl.auth.BasicScheme;",
          "11: import org.apache.http.impl.client.BasicAuthCache;",
          "12: import org.apache.http.impl.client.DefaultHttpClient;",
          "13: import org.apache.http.protocol.BasicHttpContext;",
          "14: import org.apache.http.util.EntityUtils;",
          "15: import org.jboss.resteasy.client.ClientExecutor;",
          "16: import org.jboss.resteasy.client.ClientRequest;",
          "17: import org.jboss.resteasy.client.ClientResponse;",
          "18: import org.jboss.resteasy.client.ClientResponseFailure;",
          "19: import org.jboss.resteasy.client.ProxyFactory;",
          "20: import org.jboss.resteasy.client.core.executors.ApacheHttpClient4Executor;",
          "21: import org.jboss.resteasy.core.Dispatcher;",
          "22: import org.jboss.resteasy.plugins.server.embedded.SimpleSecurityDomain;",
          "23: import org.jboss.resteasy.test.EmbeddedContainer;",
          "24: import org.jboss.resteasy.test.HttpServerContainer;",
          "25: import org.jboss.resteasy.util.HttpResponseCodes;",
          "26: import org.junit.AfterClass;",
          "27: import org.junit.Assert;",
          "28: import org.junit.BeforeClass;",
          "29: import org.junit.Test;",
          "31: import javax.annotation.security.DenyAll;",
          "32: import javax.annotation.security.RolesAllowed;",
          "33: import javax.ws.rs.GET;",
          "34: import javax.ws.rs.Path;",
          "35: import javax.ws.rs.WebApplicationException;",
          "36: import javax.ws.rs.core.Context;",
          "37: import javax.ws.rs.core.SecurityContext;",
          "38: import java.util.List;",
          "40: import static org.jboss.resteasy.test.TestPortProvider.*;",
          "46: public class BasicAuthTest",
          "47: {",
          "48:    private static Dispatcher dispatcher;",
          "50:    @Path(\"/secured\")",
          "51:    public static interface BaseProxy",
          "52:    {",
          "53:       @GET",
          "54:       String get();",
          "56:       @GET",
          "57:       @Path(\"/authorized\")",
          "58:       String getAuthorized();",
          "60:       @GET",
          "61:       @Path(\"/deny\")",
          "62:       String deny();",
          "64:       @GET",
          "65:       @Path(\"/failure\")",
          "66:       List<String> getFailure();",
          "67:    }",
          "69:    @Path(\"/secured\")",
          "70:    public static class BaseResource",
          "71:    {",
          "72:       @GET",
          "73:       @Path(\"/failure\")",
          "74:       @RolesAllowed(\"admin\")",
          "75:       public List<String> getFailure()",
          "76:       {",
          "77:          return null;",
          "78:       }",
          "80:       @GET",
          "81:       public String get(@Context SecurityContext ctx)",
          "82:       {",
          "83:          System.out.println(\"********* IN SECURE CLIENT\");",
          "84:          if (!ctx.isUserInRole(\"admin\"))",
          "85:          {",
          "86:             System.out.println(\"NOT IN ROLE!!!!\");",
          "87:             throw new WebApplicationException(401);",
          "88:          }",
          "89:          return \"hello\";",
          "90:       }",
          "92:       @GET",
          "93:       @Path(\"/authorized\")",
          "94:       @RolesAllowed(\"admin\")",
          "95:       public String getAuthorized()",
          "96:       {",
          "97:          return \"authorized\";",
          "98:       }",
          "100:       @GET",
          "101:       @Path(\"/deny\")",
          "102:       @DenyAll",
          "103:       public String deny()",
          "104:       {",
          "105:          return \"SHOULD NOT BE REACHED\";",
          "106:       }",
          "107:    }",
          "109:    @Path(\"/secured2\")",
          "110:    public static class BaseResource2",
          "111:    {",
          "112:       public String get(@Context SecurityContext ctx)",
          "113:       {",
          "114:          System.out.println(\"********* IN SECURE CLIENT\");",
          "115:          if (!ctx.isUserInRole(\"admin\"))",
          "116:          {",
          "117:             System.out.println(\"NOT IN ROLE!!!!\");",
          "118:             throw new WebApplicationException(401);",
          "119:          }",
          "120:          return \"hello\";",
          "121:       }",
          "123:       @GET",
          "124:       @Path(\"/authorized\")",
          "125:       @RolesAllowed(\"admin\")",
          "126:       public String getAuthorized()",
          "127:       {",
          "128:          return \"authorized\";",
          "129:       }",
          "131:    }",
          "133:    @BeforeClass",
          "134:    public static void before() throws Exception",
          "135:    {",
          "136:       SimpleSecurityDomain domain = new SimpleSecurityDomain();",
          "137:       String[] roles =",
          "138:               {\"admin\"};",
          "139:       String[] basic =",
          "140:               {\"user\"};",
          "141:       domain.addUser(\"bill\", \"password\", roles);",
          "142:       domain.addUser(\"mo\", \"password\", basic);",
          "143:       dispatcher = HttpServerContainer.start(\"\", domain).getDispatcher();",
          "144:       dispatcher.getRegistry().addPerRequestResource(BaseResource.class);",
          "145:       dispatcher.getRegistry().addPerRequestResource(BaseResource2.class);",
          "146:    }",
          "148:    @AfterClass",
          "149:    public static void after() throws Exception",
          "150:    {",
          "151:       HttpServerContainer.stop();",
          "152:    }",
          "154:    @Test",
          "155:    public void testProxy() throws Exception",
          "156:    {",
          "157:       DefaultHttpClient client = new DefaultHttpClient();",
          "158:       UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(\"bill\", \"password\");",
          "159:       client.getCredentialsProvider().setCredentials(new AuthScope(AuthScope.ANY), credentials);",
          "160:       ClientExecutor executor = createAuthenticatingExecutor(client);",
          "161:       BaseProxy proxy = ProxyFactory.create(BaseProxy.class, generateURL(\"\"), executor);",
          "162:       String val = proxy.get();",
          "163:       Assert.assertEquals(val, \"hello\");",
          "164:       val = proxy.getAuthorized();",
          "165:       Assert.assertEquals(val, \"authorized\");",
          "166:    }",
          "168:    @Test",
          "169:    public void testProxyFailure() throws Exception",
          "170:    {",
          "171:       BaseProxy proxy = ProxyFactory.create(BaseProxy.class, generateURL(\"\"));",
          "172:       try",
          "173:       {",
          "174:          proxy.getFailure();",
          "175:       }",
          "176:       catch (ClientResponseFailure e)",
          "177:       {",
          "178:          Assert.assertEquals(e.getResponse().getStatus(), 401);",
          "179:       }",
          "180:    }",
          "182:    @Test",
          "183:    public void testSecurity() throws Exception",
          "184:    {",
          "185:       DefaultHttpClient client = new DefaultHttpClient();",
          "186:       UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(\"bill\", \"password\");",
          "187:       client.getCredentialsProvider().setCredentials(new AuthScope(AuthScope.ANY), credentials);",
          "188:       ClientExecutor executor = createAuthenticatingExecutor(client);",
          "190:       {",
          "191:          ClientRequest request = new ClientRequest(generateURL(\"/secured\"), executor);",
          "192:          ClientResponse<String> response = request.get(String.class);",
          "193:          Assert.assertEquals(HttpResponseCodes.SC_OK, response.getStatus());",
          "194:          Assert.assertEquals(\"hello\", response.getEntity());",
          "195:       }",
          "197:       {",
          "198:          ClientRequest request = new ClientRequest(generateURL(\"/secured/authorized\"), executor);",
          "199:          ClientResponse<String> response = request.get(String.class);",
          "200:          Assert.assertEquals(HttpResponseCodes.SC_OK, response.getStatus());",
          "201:          Assert.assertEquals(\"authorized\", response.getEntity());",
          "202:       }",
          "204:       {",
          "205:          ClientRequest request = new ClientRequest(generateURL(\"/secured/deny\"), executor);",
          "206:          ClientResponse<String> response = request.get(String.class);",
          "207:          Assert.assertEquals(HttpResponseCodes.SC_UNAUTHORIZED, response.getStatus());",
          "208:       }",
          "209:    }",
          "218:    @Test",
          "219:    public void test579() throws Exception",
          "220:    {",
          "221:       DefaultHttpClient client = new DefaultHttpClient();",
          "222:       UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(\"bill\", \"password\");",
          "223:       client.getCredentialsProvider().setCredentials(new AuthScope(AuthScope.ANY), credentials);",
          "224:       ClientExecutor executor = createAuthenticatingExecutor(client);",
          "225:       ClientRequest request = new ClientRequest(generateURL(\"/secured2\"), executor);",
          "226:       ClientResponse<?> response = request.get();",
          "227:       Assert.assertEquals(404, response.getStatus());",
          "228:       response.releaseConnection();",
          "229:    }",
          "231:    @Test",
          "232:    public void testSecurityFailure() throws Exception",
          "233:    {",
          "234:       DefaultHttpClient client = new DefaultHttpClient();",
          "236:       {",
          "237:          HttpGet method = new HttpGet(generateURL(\"/secured\"));",
          "238:          HttpResponse response = client.execute(method);",
          "239:          Assert.assertEquals(401, response.getStatusLine().getStatusCode());",
          "240:          EntityUtils.consume(response.getEntity());",
          "241:       }",
          "243:       ClientExecutor executor = createAuthenticatingExecutor(client);",
          "245:       {",
          "246:          UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(\"bill\", \"password\");",
          "247:          client.getCredentialsProvider().setCredentials(new AuthScope(AuthScope.ANY), credentials);",
          "248:          ClientRequest request = new ClientRequest(generateURL(\"/secured/authorized\"), executor);",
          "249:          ClientResponse<String> response = request.get(String.class);",
          "250:          Assert.assertEquals(HttpResponseCodes.SC_OK, response.getStatus());",
          "251:          Assert.assertEquals(\"authorized\", response.getEntity());",
          "252:       }",
          "254:       {",
          "255:          UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(\"mo\", \"password\");",
          "256:          client.getCredentialsProvider().setCredentials(new AuthScope(AuthScope.ANY), credentials);",
          "257:          ClientRequest request = new ClientRequest(generateURL(\"/secured/authorized\"), executor);",
          "258:          ClientResponse<?> response = request.get();",
          "259:          Assert.assertEquals(HttpResponseCodes.SC_UNAUTHORIZED, response.getStatus());",
          "260:          response.releaseConnection();",
          "261:       }",
          "262:    }",
          "268:    static private ClientExecutor createAuthenticatingExecutor(DefaultHttpClient client)",
          "269:    {",
          "271:       AuthCache authCache = new BasicAuthCache();",
          "274:       BasicScheme basicAuth = new BasicScheme();",
          "275:       HttpHost targetHost = new HttpHost(\"localhost\", 8081);",
          "276:       authCache.put(targetHost, basicAuth);",
          "279:       BasicHttpContext localContext = new BasicHttpContext();",
          "280:       localContext.setAttribute(ClientContext.AUTH_CACHE, authCache);",
          "283:       ApacheHttpClient4Executor executor = new ApacheHttpClient4Executor(client, localContext);",
          "284:       return executor;",
          "285:    }",
          "286: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ddd469a1ddcf51796f1926477903915e41e94b8",
      "candidate_info": {
        "commit_hash": "1ddd469a1ddcf51796f1926477903915e41e94b8",
        "repo": "resteasy/resteasy",
        "commit_url": "https://github.com/resteasy/resteasy/commit/1ddd469a1ddcf51796f1926477903915e41e94b8",
        "files": [
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java",
          "jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java",
          "jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/testpasswd"
        ],
        "message": "RESTEASY-637",
        "before_after_code_files": [
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java",
          "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java",
          "jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java||jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java": [
          "File: jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java -> jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/providers/DocumentProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jboss.resteasy.plugins.providers;",
          "3: import org.jboss.resteasy.spi.ReaderException;",
          "4: import org.jboss.resteasy.spi.WriterException;",
          "5: import org.w3c.dom.Document;",
          "7: import javax.ws.rs.Consumes;",
          "8: import javax.ws.rs.Produces;",
          "9: import javax.ws.rs.WebApplicationException;",
          "10: import javax.ws.rs.core.MediaType;",
          "11: import javax.ws.rs.core.MultivaluedMap;",
          "12: import javax.ws.rs.ext.Provider;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import org.jboss.resteasy.core.request.AcceptHeaders;",
          "4: import org.jboss.resteasy.logging.Logger;",
          "5: import org.jboss.resteasy.plugins.server.servlet.ResteasyContextParameters;",
          "10: import javax.servlet.ServletConfig;",
          "11: import javax.servlet.ServletContext;",
          "15: import javax.ws.rs.core.Context;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: @Consumes({\"text/*+xml\", \"application/*+xml\"})",
          "33: public class DocumentProvider extends AbstractEntityProvider<Document>",
          "34: {",
          "35:    private final TransformerFactory transformerFactory;",
          "36:    private final DocumentBuilderFactory documentBuilder;",
          "39:    {",
          "40:       this.documentBuilder = DocumentBuilderFactory.newInstance();",
          "41:       this.transformerFactory = TransformerFactory.newInstance();",
          "42:    }",
          "44:    public boolean isReadable(Class<?> clazz, Type type,",
          "",
          "[Removed Lines]",
          "38:    public DocumentProvider()",
          "",
          "[Added Lines]",
          "41:    private static final Logger logger = Logger.getLogger(DocumentProvider.class);",
          "45:    private boolean expandEntityReferences = true;",
          "47:    public DocumentProvider(@Context ServletConfig servletConfig)",
          "51:       try",
          "52:       {",
          "53:          ServletContext context = servletConfig.getServletContext();",
          "54:          String s = context.getInitParameter(ResteasyContextParameters.RESTEASY_EXPAND_ENTITY_REFERENCES);",
          "55:          expandEntityReferences = (s == null ? true : Boolean.parseBoolean(s));",
          "56:       }",
          "57:       catch (Exception e)",
          "58:       {",
          "59:          logger.debug(\"Unable to retrieve ServletContext: expandEntityReferences defaults to true\");",
          "60:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:    {",
          "55:       try",
          "56:       {",
          "57:          return documentBuilder.newDocumentBuilder().parse(input);",
          "58:       }",
          "59:       catch (Exception e)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:          documentBuilder.setExpandEntityReferences(expandEntityReferences);",
          "",
          "---------------"
        ],
        "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java": [
          "File: jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java -> jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/servlet/ResteasyContextParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:    String RESTEASY_SCANNED_BY_DEPLOYER = \"resteasy.scanned.by.deployer\";",
          "32:    String RESTEASY_JNDI_COMPONENT_RESOURCES = \"resteasy.jndi.component.resources\";",
          "33:    String RESTEASY_UNWRAPPED_EXCEPTIONS = \"resteasy.unwrapped.exceptions\";",
          "36:    String RESTEASY_SCANNED_RESOURCES = \"resteasy.scanned.resources\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:    String RESTEASY_EXPAND_ENTITY_REFERENCES = \"resteasy.document.expand.entity.references\";",
          "",
          "---------------"
        ],
        "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java": [
          "File: jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java -> jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSEmbeddedJaxrsServer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jboss.resteasy.plugins.server.tjws;",
          "3: import Acme.Serve.Serve;",
          "4: import org.jboss.resteasy.plugins.server.embedded.EmbeddedJaxrsServer;",
          "5: import org.jboss.resteasy.plugins.server.embedded.SecurityDomain;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import java.util.Hashtable;",
          "4: import java.util.Map;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:    protected TJWSServletDispatcher servlet = new TJWSServletDispatcher();",
          "17:    protected String rootResourcePath = \"\";",
          "19:    public void setRootResourcePath(String rootResourcePath)",
          "20:    {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:    protected Hashtable<String,String> initParameters;",
          "22:    protected Hashtable<String,String> contextParameters;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:       this.deployment = deployment;",
          "36:    }",
          "38:    @Override",
          "39:    public void start()",
          "40:    {",
          "41:       server.setAttribute(ResteasyDeployment.class.getName(), deployment);",
          "43:       servlet.setContextPath(rootResourcePath);",
          "44:       super.start();",
          "45:    }",
          "",
          "[Removed Lines]",
          "42:       addServlet(rootResourcePath, servlet);",
          "",
          "[Added Lines]",
          "43:    public void setInitParameters(Hashtable<String,String> initParameters)",
          "44:    {",
          "45:       this.initParameters = initParameters;",
          "46:    }",
          "48:    public void setContextParameters(Hashtable<String,String> contextParameters)",
          "49:    {",
          "50:       this.contextParameters = contextParameters;",
          "51:    }",
          "57:       addServlet(rootResourcePath, servlet, initParameters, contextParameters);",
          "",
          "---------------"
        ],
        "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java": [
          "File: jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java -> jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/plugins/server/tjws/TJWSServletServer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:    {",
          "29:       private static final long serialVersionUID = -5031104686755790970L;",
          "30:       private PathTreeDictionary mappingTable = null;",
          "32:       public void initFileMappings()",
          "33:       {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:       private Hashtable<String,String> initParams = null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:          }",
          "47:          mappingTable.put(context, directory);",
          "48:       }",
          "49:    }",
          "51:    protected FileMappingServe server = new FileMappingServe();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:       public String getInitParameter(String param)",
          "52:       {",
          "53:          if (initParams == null)",
          "54:          {",
          "55:             return null;",
          "56:          }",
          "57:          return initParams.get(param);",
          "58:       }",
          "60:       public Hashtable<String, String> getInitParams()",
          "61:       {",
          "62:          return initParams;",
          "63:       }",
          "65:       public void setInitParams(Hashtable<String, String> initParams)",
          "66:       {",
          "67:          this.initParams = initParams;",
          "68:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:    {",
          "62:       server.addServlet(bindPath, servlet, initParams);",
          "63:    }",
          "65:    public void setProps(Properties props)",
          "66:    {",
          "67:       this.props.putAll(props);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:    public void addServlet(String bindPath, HttpServlet servlet, Hashtable<String,String> initParams, Hashtable<String,String> contextParams)",
          "86:    {",
          "87:       server.setInitParams(contextParams);",
          "88:       server.addServlet(bindPath, servlet, initParams);",
          "89:    }",
          "",
          "---------------"
        ],
        "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java": [
          "File: jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java -> jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/EmbeddedContainer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import org.jboss.resteasy.spi.ResteasyDeployment;",
          "6: import java.lang.reflect.Method;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import java.util.Hashtable;",
          "8: import java.util.Map;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12: public class EmbeddedContainer",
          "13: {",
          "16:    public static Class getBootstrap()",
          "17:    {",
          "",
          "[Removed Lines]",
          "14:    private static Class bootstrap = TJWSServletContainer.class;",
          "",
          "[Added Lines]",
          "16:    private static Class<?> bootstrap = TJWSServletContainer.class;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:    public static ResteasyDeployment start() throws Exception",
          "53:    {",
          "55:    }",
          "58:    {",
          "62:    }",
          "65:    {",
          "68:    }",
          "70:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain) throws Exception",
          "71:    {",
          "72:       Method start = bootstrap.getMethod(\"start\", String.class, SecurityDomain.class);",
          "",
          "[Removed Lines]",
          "54:       return start(\"/\");",
          "57:    public static void start(ResteasyDeployment deployment) throws Exception",
          "59:       Method start = bootstrap.getMethod(\"start\", ResteasyDeployment.class);",
          "60:       start.invoke(null, deployment);",
          "64:    public static ResteasyDeployment start(String bindPath) throws Exception",
          "66:       Method start = bootstrap.getMethod(\"start\", String.class);",
          "67:       return (ResteasyDeployment) start.invoke(null, bindPath);",
          "",
          "[Added Lines]",
          "56:       return start(\"/\", (Hashtable<String,String>) null);",
          "59:    public static ResteasyDeployment start(String bindPath) throws Exception",
          "61:       return start(bindPath, null, null);",
          "62:    }",
          "64:    public static ResteasyDeployment start(Hashtable<String,String> initParams) throws Exception",
          "65:    {",
          "66:       return start(\"/\", initParams);",
          "69:    public static ResteasyDeployment start(Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
          "71:       return start(\"/\", initParams, contextParams);",
          "72:    }",
          "74:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams) throws Exception",
          "75:    {",
          "76:       Method start = bootstrap.getMethod(\"start\", String.class, Hashtable.class);",
          "77:       return (ResteasyDeployment) start.invoke(null, bindPath, initParams);",
          "80:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
          "81:    {",
          "82:       Method start = bootstrap.getMethod(\"start\", String.class, Hashtable.class, Hashtable.class);",
          "83:       return (ResteasyDeployment) start.invoke(null, bindPath, initParams, contextParams);",
          "84:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:    }",
          "78:    public static void stop() throws Exception",
          "79:    {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:    public static void start(ResteasyDeployment deployment) throws Exception",
          "94:    {",
          "95:       Method start = bootstrap.getMethod(\"start\", ResteasyDeployment.class);",
          "96:       start.invoke(null, deployment);",
          "98:    }",
          "",
          "---------------"
        ],
        "jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java||jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java": [
          "File: jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java -> jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/test/TJWSServletContainer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package org.jboss.resteasy.test;",
          "3: import org.jboss.resteasy.plugins.server.embedded.SecurityDomain;",
          "4: import org.jboss.resteasy.plugins.server.tjws.TJWSEmbeddedJaxrsServer;",
          "5: import org.jboss.resteasy.spi.ResteasyDeployment;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import java.util.Hashtable;",
          "4: import java.util.Map;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:    public static ResteasyDeployment start(String bindPath) throws Exception",
          "21:    {",
          "23:    }",
          "25:    public static void start(ResteasyDeployment deployment) throws Exception",
          "26:    {",
          "27:       System.out.println(\"[Embedded Container Start]\");",
          "",
          "[Removed Lines]",
          "22:       return start(bindPath, null);",
          "",
          "[Added Lines]",
          "25:       return start(bindPath, null, null, null);",
          "26:    }",
          "28:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams) throws Exception",
          "29:    {",
          "30:       return start(bindPath, null, initParams, null);",
          "33:    public static ResteasyDeployment start(String bindPath, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
          "34:    {",
          "35:       return start(bindPath, null, initParams, contextParams);",
          "36:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:    }",
          "36:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain) throws Exception",
          "37:    {",
          "38:       ResteasyDeployment deployment = new ResteasyDeployment();",
          "39:       deployment.setSecurityEnabled(true);",
          "41:    }",
          "44:    {",
          "45:       tjws = new TJWSEmbeddedJaxrsServer();",
          "46:       tjws.setDeployment(deployment);",
          "47:       tjws.setPort(TestPortProvider.getPort());",
          "48:       tjws.setRootResourcePath(bindPath);",
          "49:       tjws.setSecurityDomain(domain);",
          "50:       tjws.start();",
          "51:       return tjws.getDeployment();",
          "52:    }",
          "",
          "[Removed Lines]",
          "40:       return start(bindPath, domain, deployment);",
          "43:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain, ResteasyDeployment deployment) throws Exception",
          "",
          "[Added Lines]",
          "50:    {",
          "51:       return start(bindPath, domain, null, null);",
          "52:    }",
          "54:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
          "58:       return start(bindPath, domain, deployment, initParams, contextParams);",
          "61:    public static ResteasyDeployment start(String bindPath, SecurityDomain domain, ResteasyDeployment deployment, Hashtable<String,String> initParams, Hashtable<String,String> contextParams) throws Exception",
          "68:       tjws.setInitParameters(initParams);",
          "69:       tjws.setContextParameters(contextParams);",
          "",
          "---------------"
        ],
        "jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java||jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java": [
          "File: jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java -> jaxrs/resteasy-jaxrs/src/test/java/org/jboss/resteasy/test/xxe/TestXXE.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.jboss.resteasy.test.xxe;",
          "3: import static org.jboss.resteasy.test.TestPortProvider.generateURL;",
          "5: import java.util.Hashtable;",
          "7: import javax.ws.rs.Consumes;",
          "8: import javax.ws.rs.POST;",
          "9: import javax.ws.rs.Path;",
          "11: import junit.framework.Assert;",
          "13: import org.jboss.resteasy.client.ClientRequest;",
          "14: import org.jboss.resteasy.client.ClientResponse;",
          "15: import org.jboss.resteasy.core.Dispatcher;",
          "16: import org.jboss.resteasy.plugins.server.servlet.ResteasyContextParameters;",
          "17: import org.jboss.resteasy.spi.ResteasyDeployment;",
          "18: import org.jboss.resteasy.test.EmbeddedContainer;",
          "19: import org.junit.Test;",
          "20: import org.w3c.dom.Document;",
          "21: import org.w3c.dom.Node;",
          "22: import org.w3c.dom.NodeList;",
          "28: public class TestXXE",
          "29: {",
          "30:    protected static ResteasyDeployment deployment;",
          "31:    protected static Dispatcher dispatcher;",
          "33:    @Path(\"/\")",
          "34:    public static class TestResource",
          "35:    {",
          "36:       @Consumes(\"application/xml\")",
          "37:       @POST",
          "38:       public String doPost(Document doc)",
          "39:       {",
          "40:          Node node = doc.getDocumentElement();",
          "41:          System.out.println(\"name: \" + node.getNodeName());",
          "42:          NodeList children = doc.getDocumentElement().getChildNodes();",
          "44:          node = children.item(0);",
          "45:          System.out.println(\"name: \" + node.getNodeName());",
          "46:          children = node.getChildNodes();",
          "48:          node = children.item(0);",
          "49:          System.out.println(\"name: \" + node.getNodeName());",
          "50:          children = node.getChildNodes();",
          "52:          System.out.println(node.getNodeValue());",
          "53:          return node.getNodeValue();",
          "54:       }",
          "55:    }",
          "57:    public static void before(String expandEntityReferences) throws Exception",
          "58:    {",
          "59:       Hashtable<String,String> initParams = new Hashtable<String,String>();",
          "60:       Hashtable<String,String> contextParams = new Hashtable<String,String>();",
          "61:       contextParams.put(ResteasyContextParameters.RESTEASY_EXPAND_ENTITY_REFERENCES, expandEntityReferences);",
          "62:       deployment = EmbeddedContainer.start(initParams, contextParams);",
          "63:       dispatcher = deployment.getDispatcher();",
          "64:       deployment.getRegistry().addPerRequestResource(TestResource.class);",
          "65:    }",
          "67:    public static void after() throws Exception",
          "68:    {",
          "69:       EmbeddedContainer.stop();",
          "70:       dispatcher = null;",
          "71:       deployment = null;",
          "72:    }",
          "74:    @Test",
          "75:    public void testXXEWithoutExpansion() throws Exception",
          "76:    {",
          "77:       before(\"false\");",
          "78:       ClientRequest request = new ClientRequest(generateURL(\"/\"));",
          "79:       String filename = \"src/test/java/org/jboss/resteasy/test/xxe/testpasswd\";",
          "80:       String str = \"<?xml version=\\\"1.0\\\"?>\\r\" +",
          "81:                    \"<!DOCTYPE foo\\r\" +",
          "82:                    \"[<!ENTITY xxe SYSTEM \\\"\" + filename + \"\\\">\\r\" +",
          "83:                    \"]>\\r\" +",
          "84:                    \"<search><user>&xxe;</user></search>\";",
          "85:       System.out.println(str);",
          "86:       request.body(\"application/xml\", str);",
          "87:       ClientResponse<?> response = request.post();",
          "88:       Assert.assertEquals(204, response.getStatus());",
          "89:       String entity = response.getEntity(String.class);",
          "90:       System.out.println(\"result: \" + entity);",
          "91:       Assert.assertEquals(entity, null);",
          "92:       after();",
          "93:    }",
          "95:    @Test",
          "96:    public void testXXEWithExpansion() throws Exception",
          "97:    {",
          "98:       before(\"true\");",
          "99:       ClientRequest request = new ClientRequest(generateURL(\"/\"));",
          "100:       String filename = \"src/test/java/org/jboss/resteasy/test/xxe/testpasswd\";",
          "101:       String str = \"<?xml version=\\\"1.0\\\"?>\\r\" +",
          "102:                    \"<!DOCTYPE foo\\r\" +",
          "103:                    \"[<!ENTITY xxe SYSTEM \\\"\" + filename + \"\\\">\\r\" +",
          "104:                    \"]>\\r\" +",
          "105:                    \"<search><user>&xxe;</user></search>\";",
          "106:       System.out.println(str);",
          "107:       request.body(\"application/xml\", str);",
          "108:       ClientResponse<?> response = request.post();",
          "109:       Assert.assertEquals(200, response.getStatus());",
          "110:       String entity = response.getEntity(String.class);",
          "111:       System.out.println(\"result: \" + entity);",
          "112:       Assert.assertEquals(\"xx:xx:xx:xx:xx:xx:xx\", entity);",
          "113:       after();",
          "114:    }",
          "115: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}