{
  "cve_id": "CVE-2024-29190",
  "cve_desc": "Mobile Security Framework (MobSF) is a pen-testing, malware analysis and security assessment framework capable of performing static and dynamic analysis. In version 3.9.5 Beta and prior, MobSF does not perform any input validation when extracting the hostnames in `android:host`, so requests can also be sent to local hostnames. This can lead to server-side request forgery. An attacker can cause the server to make a connection to internal-only services within the organization's infrastructure. Commit 5a8eeee73c5f504a6c3abdf2a139a13804efdb77 has a hotfix for this issue.\n",
  "repo": "MobSF/Mobile-Security-Framework-MobSF",
  "patch_hash": "5a8eeee73c5f504a6c3abdf2a139a13804efdb77",
  "patch_info": {
    "commit_hash": "5a8eeee73c5f504a6c3abdf2a139a13804efdb77",
    "repo": "MobSF/Mobile-Security-Framework-MobSF",
    "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/5a8eeee73c5f504a6c3abdf2a139a13804efdb77",
    "files": [
      ".github/workflows/docker-release.yml",
      ".github/workflows/docker-test.yml",
      "mobsf/MobSF/init.py",
      "mobsf/MobSF/utils.py",
      "mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
      "poetry.lock",
      "pyproject.toml"
    ],
    "message": "HOTFIX:[SECURITY] Fix GHSA-wfgj-wrgh-h3r3, dep bump, docker build qa",
    "before_after_code_files": [
      "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
      "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
      "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
      "poetry.lock||poetry.lock"
    ]
  },
  "patch_diff": {
    "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
      "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "11: logger = logging.getLogger(__name__)",
      "14: BANNER = \"\"\"",
      "15:   __  __       _    ____  _____       _____ ___",
      "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ // _ \\",
      "",
      "[Removed Lines]",
      "13: VERSION = '3.9.5'",
      "",
      "[Added Lines]",
      "13: VERSION = '3.9.6'",
      "",
      "---------------"
    ],
    "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py": [
      "File: mobsf/MobSF/utils.py -> mobsf/MobSF/utils.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: import string",
      "17: import subprocess",
      "18: import stat",
      "19: import sqlite3",
      "20: import unicodedata",
      "21: import threading",
      "22: from pathlib import Path",
      "23: from distutils.version import StrictVersion",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import socket",
      "23: from urllib.parse import urlparse",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "848: def id_generator(size=6, chars=string.ascii_uppercase + string.digits):",
      "849:     \"\"\"Generate random string.\"\"\"",
      "850:     return ''.join(random.choice(chars) for _ in range(size))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "855: def valid_host(host):",
      "856:     \"\"\"Check if host is valid.\"\"\"",
      "857:     try:",
      "858:         prefixs = ('http://', 'https://')",
      "859:         if not host.startswith(prefixs):",
      "860:             host = f'http://{host}'",
      "861:         parsed = urlparse(host)",
      "862:         domain = parsed.netloc",
      "863:         path = parsed.path",
      "864:         if len(domain) == 0:",
      "865:             # No valid domain",
      "866:             return False",
      "867:         if len(path) > 0:",
      "868:             # Only host is allowed",
      "869:             return False",
      "870:         if ':' in domain:",
      "871:             # IPv6",
      "872:             return False",
      "873:         # Local network",
      "874:         invalid_prefix = (",
      "875:             '127.',",
      "876:             '192.',",
      "877:             '10.',",
      "878:             '172.',",
      "879:             '169',",
      "880:             '0.',",
      "881:             'localhost')",
      "882:         if domain.startswith(invalid_prefix):",
      "883:             return False",
      "884:         ip = socket.gethostbyname(domain)",
      "885:         if ip.startswith(invalid_prefix):",
      "886:             # Resolve dns to get IP",
      "887:             return False",
      "888:         return True",
      "889:     except Exception:",
      "890:         return False",
      "",
      "---------------"
    ],
    "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py": [
      "File: mobsf/StaticAnalyzer/views/android/manifest_analysis.py -> mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: from concurrent.futures import ThreadPoolExecutor",
      "9: from mobsf.MobSF.utils import (",
      "10:     upstream_proxy,",
      "11: )",
      "12: from mobsf.StaticAnalyzer.views.android import (",
      "13:     android_manifest_desc,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10:     is_number,",
      "12:     valid_host,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "148:                           and scheme in ('http', 'https')",
      "149:                           and host",
      "150:                           and host != '*'):",
      "152:                         shost = f'{scheme}://{host}'",
      "154:                             c_url = f'{shost}:{port}{well_known_path}'",
      "155:                         else:",
      "156:                             c_url = f'{shost}{well_known_path}'",
      "",
      "[Removed Lines]",
      "151:                         host = host.replace('*.', '')",
      "153:                         if port:",
      "",
      "[Added Lines]",
      "153:                         host = host.replace('*.', '').replace('#', '')",
      "154:                         if not valid_host(host):",
      "155:                             continue",
      "157:                         if port and is_number(port):",
      "",
      "---------------"
    ],
    "poetry.lock||poetry.lock": [
      "File: poetry.lock -> poetry.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "101: [[package]]",
      "102: name = \"apkinspector\"",
      "104: description = \"apkInspector is a tool designed to provide detailed insights into the zip structure of APK files, offering the capability to extract content and decode the AndroidManifest.xml file.\"",
      "105: optional = false",
      "106: python-versions = \">=3.5,<4.0\"",
      "107: files = [",
      "110: ]",
      "112: [[package]]",
      "",
      "[Removed Lines]",
      "103: version = \"1.2.1\"",
      "108:     {file = \"apkinspector-1.2.1-py3-none-any.whl\", hash = \"sha256:4736719884e92dfbe3203103ad46deb22b4683e208ae66972236a052c5d23e37\"},",
      "109:     {file = \"apkinspector-1.2.1.tar.gz\", hash = \"sha256:6c1fd678246760e75f8386e6f4d9686b640cc6bd88256f0865dfacbd49e8e0dd\"},",
      "",
      "[Added Lines]",
      "103: version = \"1.2.2\"",
      "108:     {file = \"apkinspector-1.2.2-py3-none-any.whl\", hash = \"sha256:ad55200bd72eb1edeeb5fb114e3bb576ec825feef54fb8727173f1f02fa12bb7\"},",
      "109:     {file = \"apkinspector-1.2.2.tar.gz\", hash = \"sha256:ea7e56090e95eb791b593e9beedf4f1056eb269c4483558e13d5d5ef4b479c60\"},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "951: [[package]]",
      "952: name = \"fonttools\"",
      "954: description = \"Tools to manipulate font files\"",
      "955: optional = false",
      "956: python-versions = \">=3.8\"",
      "957: files = [",
      "1000: ]",
      "1002: [package.extras]",
      "",
      "[Removed Lines]",
      "953: version = \"4.49.0\"",
      "958:     {file = \"fonttools-4.49.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d970ecca0aac90d399e458f0b7a8a597e08f95de021f17785fb68e2dc0b99717\"},",
      "959:     {file = \"fonttools-4.49.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:ac9a745b7609f489faa65e1dc842168c18530874a5f5b742ac3dd79e26bca8bc\"},",
      "960:     {file = \"fonttools-4.49.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ba0e00620ca28d4ca11fc700806fd69144b463aa3275e1b36e56c7c09915559\"},",
      "961:     {file = \"fonttools-4.49.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cdee3ab220283057e7840d5fb768ad4c2ebe65bdba6f75d5d7bf47f4e0ed7d29\"},",
      "962:     {file = \"fonttools-4.49.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:ce7033cb61f2bb65d8849658d3786188afd80f53dad8366a7232654804529532\"},",
      "963:     {file = \"fonttools-4.49.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:07bc5ea02bb7bc3aa40a1eb0481ce20e8d9b9642a9536cde0218290dd6085828\"},",
      "964:     {file = \"fonttools-4.49.0-cp310-cp310-win32.whl\", hash = \"sha256:86eef6aab7fd7c6c8545f3ebd00fd1d6729ca1f63b0cb4d621bccb7d1d1c852b\"},",
      "965:     {file = \"fonttools-4.49.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:1fac1b7eebfce75ea663e860e7c5b4a8831b858c17acd68263bc156125201abf\"},",
      "966:     {file = \"fonttools-4.49.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:edc0cce355984bb3c1d1e89d6a661934d39586bb32191ebff98c600f8957c63e\"},",
      "967:     {file = \"fonttools-4.49.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:83a0d9336de2cba86d886507dd6e0153df333ac787377325a39a2797ec529814\"},",
      "968:     {file = \"fonttools-4.49.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:36c8865bdb5cfeec88f5028e7e592370a0657b676c6f1d84a2108e0564f90e22\"},",
      "969:     {file = \"fonttools-4.49.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:33037d9e56e2562c710c8954d0f20d25b8386b397250d65581e544edc9d6b942\"},",
      "970:     {file = \"fonttools-4.49.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:8fb022d799b96df3eaa27263e9eea306bd3d437cc9aa981820850281a02b6c9a\"},",
      "971:     {file = \"fonttools-4.49.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:33c584c0ef7dc54f5dd4f84082eabd8d09d1871a3d8ca2986b0c0c98165f8e86\"},",
      "972:     {file = \"fonttools-4.49.0-cp311-cp311-win32.whl\", hash = \"sha256:cbe61b158deb09cffdd8540dc4a948d6e8f4d5b4f3bf5cd7db09bd6a61fee64e\"},",
      "973:     {file = \"fonttools-4.49.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:fc11e5114f3f978d0cea7e9853627935b30d451742eeb4239a81a677bdee6bf6\"},",
      "974:     {file = \"fonttools-4.49.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:d647a0e697e5daa98c87993726da8281c7233d9d4ffe410812a4896c7c57c075\"},",
      "975:     {file = \"fonttools-4.49.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:f3bbe672df03563d1f3a691ae531f2e31f84061724c319652039e5a70927167e\"},",
      "976:     {file = \"fonttools-4.49.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bebd91041dda0d511b0d303180ed36e31f4f54b106b1259b69fade68413aa7ff\"},",
      "977:     {file = \"fonttools-4.49.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4145f91531fd43c50f9eb893faa08399816bb0b13c425667c48475c9f3a2b9b5\"},",
      "978:     {file = \"fonttools-4.49.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:ea329dafb9670ffbdf4dbc3b0e5c264104abcd8441d56de77f06967f032943cb\"},",
      "979:     {file = \"fonttools-4.49.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:c076a9e548521ecc13d944b1d261ff3d7825048c338722a4bd126d22316087b7\"},",
      "980:     {file = \"fonttools-4.49.0-cp312-cp312-win32.whl\", hash = \"sha256:b607ea1e96768d13be26d2b400d10d3ebd1456343eb5eaddd2f47d1c4bd00880\"},",
      "981:     {file = \"fonttools-4.49.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:a974c49a981e187381b9cc2c07c6b902d0079b88ff01aed34695ec5360767034\"},",
      "982:     {file = \"fonttools-4.49.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:b85ec0bdd7bdaa5c1946398cbb541e90a6dfc51df76dfa88e0aaa41b335940cb\"},",
      "983:     {file = \"fonttools-4.49.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:af20acbe198a8a790618ee42db192eb128afcdcc4e96d99993aca0b60d1faeb4\"},",
      "984:     {file = \"fonttools-4.49.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4d418b1fee41a1d14931f7ab4b92dc0bc323b490e41d7a333eec82c9f1780c75\"},",
      "985:     {file = \"fonttools-4.49.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b44a52b8e6244b6548851b03b2b377a9702b88ddc21dcaf56a15a0393d425cb9\"},",
      "986:     {file = \"fonttools-4.49.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:7c7125068e04a70739dad11857a4d47626f2b0bd54de39e8622e89701836eabd\"},",
      "987:     {file = \"fonttools-4.49.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:29e89d0e1a7f18bc30f197cfadcbef5a13d99806447c7e245f5667579a808036\"},",
      "988:     {file = \"fonttools-4.49.0-cp38-cp38-win32.whl\", hash = \"sha256:9d95fa0d22bf4f12d2fb7b07a46070cdfc19ef5a7b1c98bc172bfab5bf0d6844\"},",
      "989:     {file = \"fonttools-4.49.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:768947008b4dc552d02772e5ebd49e71430a466e2373008ce905f953afea755a\"},",
      "990:     {file = \"fonttools-4.49.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:08877e355d3dde1c11973bb58d4acad1981e6d1140711230a4bfb40b2b937ccc\"},",
      "991:     {file = \"fonttools-4.49.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:fdb54b076f25d6b0f0298dc706acee5052de20c83530fa165b60d1f2e9cbe3cb\"},",
      "992:     {file = \"fonttools-4.49.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0af65c720520710cc01c293f9c70bd69684365c6015cc3671db2b7d807fe51f2\"},",
      "993:     {file = \"fonttools-4.49.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1f255ce8ed7556658f6d23f6afd22a6d9bbc3edb9b96c96682124dc487e1bf42\"},",
      "994:     {file = \"fonttools-4.49.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:d00af0884c0e65f60dfaf9340e26658836b935052fdd0439952ae42e44fdd2be\"},",
      "995:     {file = \"fonttools-4.49.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:263832fae27481d48dfafcc43174644b6706639661e242902ceb30553557e16c\"},",
      "996:     {file = \"fonttools-4.49.0-cp39-cp39-win32.whl\", hash = \"sha256:0404faea044577a01bb82d47a8fa4bc7a54067fa7e324785dd65d200d6dd1133\"},",
      "997:     {file = \"fonttools-4.49.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:b050d362df50fc6e38ae3954d8c29bf2da52be384649ee8245fdb5186b620836\"},",
      "998:     {file = \"fonttools-4.49.0-py3-none-any.whl\", hash = \"sha256:af281525e5dd7fa0b39fb1667b8d5ca0e2a9079967e14c4bfe90fd1cd13e0f18\"},",
      "999:     {file = \"fonttools-4.49.0.tar.gz\", hash = \"sha256:ebf46e7f01b7af7861310417d7c49591a85d99146fc23a5ba82fdb28af156321\"},",
      "",
      "[Added Lines]",
      "953: version = \"4.50.0\"",
      "958:     {file = \"fonttools-4.50.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:effd303fb422f8ce06543a36ca69148471144c534cc25f30e5be752bc4f46736\"},",
      "959:     {file = \"fonttools-4.50.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:7913992ab836f621d06aabac118fc258b9947a775a607e1a737eb3a91c360335\"},",
      "960:     {file = \"fonttools-4.50.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8e0a1c5bd2f63da4043b63888534b52c5a1fd7ae187c8ffc64cbb7ae475b9dab\"},",
      "961:     {file = \"fonttools-4.50.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d40fc98540fa5360e7ecf2c56ddf3c6e7dd04929543618fd7b5cc76e66390562\"},",
      "962:     {file = \"fonttools-4.50.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:9fff65fbb7afe137bac3113827855e0204482727bddd00a806034ab0d3951d0d\"},",
      "963:     {file = \"fonttools-4.50.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:b1aeae3dd2ee719074a9372c89ad94f7c581903306d76befdaca2a559f802472\"},",
      "964:     {file = \"fonttools-4.50.0-cp310-cp310-win32.whl\", hash = \"sha256:e9623afa319405da33b43c85cceb0585a6f5d3a1d7c604daf4f7e1dd55c03d1f\"},",
      "965:     {file = \"fonttools-4.50.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:778c5f43e7e654ef7fe0605e80894930bc3a7772e2f496238e57218610140f54\"},",
      "966:     {file = \"fonttools-4.50.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:3dfb102e7f63b78c832e4539969167ffcc0375b013080e6472350965a5fe8048\"},",
      "967:     {file = \"fonttools-4.50.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:9e58fe34cb379ba3d01d5d319d67dd3ce7ca9a47ad044ea2b22635cd2d1247fc\"},",
      "968:     {file = \"fonttools-4.50.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2c673ab40d15a442a4e6eb09bf007c1dda47c84ac1e2eecbdf359adacb799c24\"},",
      "969:     {file = \"fonttools-4.50.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9b3ac35cdcd1a4c90c23a5200212c1bb74fa05833cc7c14291d7043a52ca2aaa\"},",
      "970:     {file = \"fonttools-4.50.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:8844e7a2c5f7ecf977e82eb6b3014f025c8b454e046d941ece05b768be5847ae\"},",
      "971:     {file = \"fonttools-4.50.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:f849bd3c5c2249b49c98eca5aaebb920d2bfd92b3c69e84ca9bddf133e9f83f0\"},",
      "972:     {file = \"fonttools-4.50.0-cp311-cp311-win32.whl\", hash = \"sha256:39293ff231b36b035575e81c14626dfc14407a20de5262f9596c2cbb199c3625\"},",
      "973:     {file = \"fonttools-4.50.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:c33d5023523b44d3481624f840c8646656a1def7630ca562f222eb3ead16c438\"},",
      "974:     {file = \"fonttools-4.50.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:b4a886a6dbe60100ba1cd24de962f8cd18139bd32808da80de1fa9f9f27bf1dc\"},",
      "975:     {file = \"fonttools-4.50.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:b2ca1837bfbe5eafa11313dbc7edada79052709a1fffa10cea691210af4aa1fa\"},",
      "976:     {file = \"fonttools-4.50.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a0493dd97ac8977e48ffc1476b932b37c847cbb87fd68673dee5182004906828\"},",
      "977:     {file = \"fonttools-4.50.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:77844e2f1b0889120b6c222fc49b2b75c3d88b930615e98893b899b9352a27ea\"},",
      "978:     {file = \"fonttools-4.50.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:3566bfb8c55ed9100afe1ba6f0f12265cd63a1387b9661eb6031a1578a28bad1\"},",
      "979:     {file = \"fonttools-4.50.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:35e10ddbc129cf61775d58a14f2d44121178d89874d32cae1eac722e687d9019\"},",
      "980:     {file = \"fonttools-4.50.0-cp312-cp312-win32.whl\", hash = \"sha256:cc8140baf9fa8f9b903f2b393a6c413a220fa990264b215bf48484f3d0bf8710\"},",
      "981:     {file = \"fonttools-4.50.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:0ccc85fd96373ab73c59833b824d7a73846670a0cb1f3afbaee2b2c426a8f931\"},",
      "982:     {file = \"fonttools-4.50.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:e270a406219af37581d96c810172001ec536e29e5593aa40d4c01cca3e145aa6\"},",
      "983:     {file = \"fonttools-4.50.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:ac2463de667233372e9e1c7e9de3d914b708437ef52a3199fdbf5a60184f190c\"},",
      "984:     {file = \"fonttools-4.50.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:47abd6669195abe87c22750dbcd366dc3a0648f1b7c93c2baa97429c4dc1506e\"},",
      "985:     {file = \"fonttools-4.50.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:074841375e2e3d559aecc86e1224caf78e8b8417bb391e7d2506412538f21adc\"},",
      "986:     {file = \"fonttools-4.50.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:0743fd2191ad7ab43d78cd747215b12033ddee24fa1e088605a3efe80d6984de\"},",
      "987:     {file = \"fonttools-4.50.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:3d7080cce7be5ed65bee3496f09f79a82865a514863197ff4d4d177389e981b0\"},",
      "988:     {file = \"fonttools-4.50.0-cp38-cp38-win32.whl\", hash = \"sha256:a467ba4e2eadc1d5cc1a11d355abb945f680473fbe30d15617e104c81f483045\"},",
      "989:     {file = \"fonttools-4.50.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:f77e048f805e00870659d6318fd89ef28ca4ee16a22b4c5e1905b735495fc422\"},",
      "990:     {file = \"fonttools-4.50.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b6245eafd553c4e9a0708e93be51392bd2288c773523892fbd616d33fd2fda59\"},",
      "991:     {file = \"fonttools-4.50.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:a4062cc7e8de26f1603323ef3ae2171c9d29c8a9f5e067d555a2813cd5c7a7e0\"},",
      "992:     {file = \"fonttools-4.50.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:34692850dfd64ba06af61e5791a441f664cb7d21e7b544e8f385718430e8f8e4\"},",
      "993:     {file = \"fonttools-4.50.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:678dd95f26a67e02c50dcb5bf250f95231d455642afbc65a3b0bcdacd4e4dd38\"},",
      "994:     {file = \"fonttools-4.50.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:4f2ce7b0b295fe64ac0a85aef46a0f2614995774bd7bc643b85679c0283287f9\"},",
      "995:     {file = \"fonttools-4.50.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:d346f4dc2221bfb7ab652d1e37d327578434ce559baf7113b0f55768437fe6a0\"},",
      "996:     {file = \"fonttools-4.50.0-cp39-cp39-win32.whl\", hash = \"sha256:a51eeaf52ba3afd70bf489be20e52fdfafe6c03d652b02477c6ce23c995222f4\"},",
      "997:     {file = \"fonttools-4.50.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:8639be40d583e5d9da67795aa3eeeda0488fb577a1d42ae11a5036f18fb16d93\"},",
      "998:     {file = \"fonttools-4.50.0-py3-none-any.whl\", hash = \"sha256:48fa36da06247aa8282766cfd63efff1bb24e55f020f29a335939ed3844d20d3\"},",
      "999:     {file = \"fonttools-4.50.0.tar.gz\", hash = \"sha256:fa5cf61058c7dbb104c2ac4e782bf1b2016a8cf2f69de6e4dd6a865d2c969bb5\"},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2538: [[package]]",
      "2539: name = \"pyqt5-qt5\"",
      "2541: description = \"The subset of a Qt installation needed by PyQt5.\"",
      "2542: optional = false",
      "2543: python-versions = \"*\"",
      "2544: files = [",
      "2549: ]",
      "2551: [[package]]",
      "",
      "[Removed Lines]",
      "2540: version = \"5.15.2\"",
      "2545:     {file = \"PyQt5_Qt5-5.15.2-py3-none-macosx_10_13_intel.whl\", hash = \"sha256:76980cd3d7ae87e3c7a33bfebfaee84448fd650bad6840471d6cae199b56e154\"},",
      "2546:     {file = \"PyQt5_Qt5-5.15.2-py3-none-manylinux2014_x86_64.whl\", hash = \"sha256:1988f364ec8caf87a6ee5d5a3a5210d57539988bf8e84714c7d60972692e2f4a\"},",
      "2547:     {file = \"PyQt5_Qt5-5.15.2-py3-none-win32.whl\", hash = \"sha256:9cc7a768b1921f4b982ebc00a318ccb38578e44e45316c7a4a850e953e1dd327\"},",
      "2548:     {file = \"PyQt5_Qt5-5.15.2-py3-none-win_amd64.whl\", hash = \"sha256:750b78e4dba6bdf1607febedc08738e318ea09e9b10aea9ff0d73073f11f6962\"},",
      "",
      "[Added Lines]",
      "2540: version = \"5.15.13\"",
      "2545:     {file = \"PyQt5_Qt5-5.15.13-py3-none-macosx_10_13_x86_64.whl\", hash = \"sha256:92575a9e96a27c4ed67c56c7048ded7461a1655d5d21f0e05064664e6e9fcbdf\"},",
      "2546:     {file = \"PyQt5_Qt5-5.15.13-py3-none-macosx_11_0_arm64.whl\", hash = \"sha256:141859f2ffe04cc6c5db970e2b6ad9f98897805d886a14c52614e3799daab6d6\"},",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "27d165872847f5ae7417caf09f37edeeba741e1e",
      "candidate_info": {
        "commit_hash": "27d165872847f5ae7417caf09f37edeeba741e1e",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/27d165872847f5ae7417caf09f37edeeba741e1e",
        "files": [
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/views/home.py",
          "mobsf/MobSF/views/scanning.py",
          "mobsf/templates/general/recent.html",
          "pyproject.toml"
        ],
        "message": "Fixes a stored XSS in Recent Scans diff APK, GHSA-5jc6-h9w7-jm3p",
        "before_after_code_files": [
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/views/home.py||mobsf/MobSF/views/home.py",
          "mobsf/MobSF/views/scanning.py||mobsf/MobSF/views/scanning.py",
          "mobsf/templates/general/recent.html||mobsf/templates/general/recent.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: logger = logging.getLogger(__name__)",
          "22: BANNER = r\"\"\"",
          "23:   __  __       _    ____  _____       _  _    ____",
          "24:  |  \\/  | ___ | |__/ ___||  ___|_   _| || |  |___ \\",
          "",
          "[Removed Lines]",
          "21: VERSION = '4.2.8'",
          "",
          "[Added Lines]",
          "21: VERSION = '4.2.9'",
          "",
          "---------------"
        ],
        "mobsf/MobSF/views/home.py||mobsf/MobSF/views/home.py": [
          "File: mobsf/MobSF/views/home.py -> mobsf/MobSF/views/home.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:         request = self.request",
          "164:         scanning = Scanning(request)",
          "165:         content_type = self.file.content_type",
          "167:         logger.info('MIME Type: %s FILE: %s', content_type, file_name)",
          "168:         if self.file_type.is_apk():",
          "169:             return scanning.scan_apk()",
          "",
          "[Removed Lines]",
          "166:         file_name = self.file.name",
          "",
          "[Added Lines]",
          "166:         file_name = sanitize_filename(self.file.name)",
          "",
          "---------------"
        ],
        "mobsf/MobSF/views/scanning.py||mobsf/MobSF/views/scanning.py": [
          "File: mobsf/MobSF/views/scanning.py -> mobsf/MobSF/views/scanning.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: from django.utils import timezone",
          "10: from mobsf.StaticAnalyzer.models import RecentScansDB",
          "12: logger = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: from mobsf.MobSF.security import sanitize_filename",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     def __init__(self, request):",
          "64:         self.file = request.FILES['file']",
          "66:         self.data = {",
          "67:             'analyzer': 'static_analyzer',",
          "68:             'status': 'success',",
          "",
          "[Removed Lines]",
          "65:         self.file_name = request.FILES['file'].name",
          "",
          "[Added Lines]",
          "66:         self.file_name = sanitize_filename(",
          "67:             request.FILES['file'].name)",
          "",
          "---------------"
        ],
        "mobsf/templates/general/recent.html||mobsf/templates/general/recent.html": [
          "File: mobsf/templates/general/recent.html -> mobsf/templates/general/recent.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "184: {% block extra_scripts %}",
          "185: <script src=\"{% static \"adminlte/plugins/sweetalert2/sweetalert2.min.js\" %}\"></script>",
          "186: <script>",
          "188:     var diff_first_md5 = '';",
          "189:     var diff_first_name = '';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:     function escapeHtml(unsafe)",
          "190:     {",
          "191:         return unsafe",
          "192:             .replace(/&/g, \"&amp;\")",
          "193:             .replace(/</g, \"&lt;\")",
          "194:             .replace(/>/g, \"&gt;\")",
          "195:             .replace(/\"/g, \"&quot;\")",
          "196:             .replace(/'/g, \"&#039;\");",
          "197:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "231:     }",
          "233:     function diff_cleanup() {",
          "235:         $('[id=\"' + first_td_id + '\"]').closest(\"tr\").removeClass(\"selected\");",
          "236:         $('[id=\"' + first_td_id + '\"]').closest(\"tbody\").removeClass(\"selectable_table\");",
          "237:         diff_first_md5 = \"\";",
          "",
          "[Removed Lines]",
          "234:         first_td_id = diff_first_md5 + '_' + diff_first_name;",
          "",
          "[Added Lines]",
          "246:         first_td_id = diff_first_md5 + '_' + escapeHtml(diff_first_name);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "254:             title: '<strong>Diff confirmation</strong>',",
          "255:             type: 'info',",
          "256:             html:",
          "260:             showCancelButton: true,",
          "261:             cancelButtonText: 'Cancel',",
          "",
          "[Removed Lines]",
          "257:                 '<strong>Do you want to diff - </strong><br />' + diff_first_name +",
          "258:                 '<br /> <strong>with - <br /> </strong>' + diff_second_name + ' <br /> <strong>?</strong>',",
          "",
          "[Added Lines]",
          "269:                 '<strong>Do you want to diff - </strong><br />' + escapeHtml(diff_first_name) +",
          "270:                 '<br /> <strong>with - <br /> </strong>' + escapeHtml(diff_second_name) + ' <br /> <strong>?</strong>',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "334231140f8c570ee47e9b462a32cc8ba60d3c86",
      "candidate_info": {
        "commit_hash": "334231140f8c570ee47e9b462a32cc8ba60d3c86",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/334231140f8c570ee47e9b462a32cc8ba60d3c86",
        "files": [
          "README.md",
          "mobsf/MalwareAnalyzer/views/android/apkid.py",
          "mobsf/MalwareAnalyzer/views/android/permissions.py",
          "mobsf/MalwareAnalyzer/views/android/quark.py",
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/settings.py",
          "mobsf/MobSF/utils.py",
          "mobsf/StaticAnalyzer/models.py",
          "mobsf/StaticAnalyzer/views/android/code_analysis.py",
          "mobsf/StaticAnalyzer/views/android/db_interaction.py",
          "mobsf/StaticAnalyzer/views/android/jar_aar.py",
          "mobsf/StaticAnalyzer/views/android/rules/android_apis.yaml",
          "mobsf/StaticAnalyzer/views/android/so.py",
          "mobsf/StaticAnalyzer/views/android/static_analyzer.py",
          "mobsf/StaticAnalyzer/views/common/binary/lib_analysis.py",
          "mobsf/templates/general/about.html",
          "mobsf/templates/pdf/android_report.html",
          "mobsf/templates/static_analysis/android_binary_analysis.html",
          "mobsf/templates/static_analysis/android_source_analysis.html",
          "pyproject.toml"
        ],
        "message": "[HOTFIX] Malware Permission Check for Android, API Rules + Version Bump (#2313)\n\n* Malware Permission Check for Android\n* New Android API rule to support Passkeys\n* Updated Readme\n* Version Bump",
        "before_after_code_files": [
          "mobsf/MalwareAnalyzer/views/android/permissions.py||mobsf/MalwareAnalyzer/views/android/permissions.py",
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/settings.py||mobsf/MobSF/settings.py",
          "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
          "mobsf/StaticAnalyzer/models.py||mobsf/StaticAnalyzer/models.py",
          "mobsf/StaticAnalyzer/views/android/code_analysis.py||mobsf/StaticAnalyzer/views/android/code_analysis.py",
          "mobsf/StaticAnalyzer/views/android/db_interaction.py||mobsf/StaticAnalyzer/views/android/db_interaction.py",
          "mobsf/StaticAnalyzer/views/android/jar_aar.py||mobsf/StaticAnalyzer/views/android/jar_aar.py",
          "mobsf/StaticAnalyzer/views/android/so.py||mobsf/StaticAnalyzer/views/android/so.py",
          "mobsf/StaticAnalyzer/views/android/static_analyzer.py||mobsf/StaticAnalyzer/views/android/static_analyzer.py",
          "mobsf/StaticAnalyzer/views/common/binary/lib_analysis.py||mobsf/StaticAnalyzer/views/common/binary/lib_analysis.py",
          "mobsf/templates/general/about.html||mobsf/templates/general/about.html",
          "mobsf/templates/pdf/android_report.html||mobsf/templates/pdf/android_report.html",
          "mobsf/templates/static_analysis/android_binary_analysis.html||mobsf/templates/static_analysis/android_binary_analysis.html",
          "mobsf/templates/static_analysis/android_source_analysis.html||mobsf/templates/static_analysis/android_source_analysis.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/MalwareAnalyzer/views/android/permissions.py||mobsf/MalwareAnalyzer/views/android/permissions.py": [
          "File: mobsf/MalwareAnalyzer/views/android/permissions.py -> mobsf/MalwareAnalyzer/views/android/permissions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # -*- coding: utf_8 -*-",
          "2: # Check against most common malware permissions.",
          "3: import logging",
          "6: TOP_MALWARE_PERMISSIONS = [",
          "7:     'android.permission.ACCEPT_HANDOVER',",
          "8:     'android.permission.ACCESS_COARSE_LOCATION',",
          "9:     'android.permission.ACCESS_FINE_LOCATION',",
          "10:     'android.permission.ACCESS_NETWORK_STATE',",
          "11:     'android.permission.CAMERA',",
          "12:     'android.permission.GET_ACCOUNTS',",
          "13:     'android.permission.GET_TASKS',",
          "14:     'android.permission.INTERNET',",
          "15:     'android.permission.SET_WALLPAPER',",
          "16:     'android.permission.WRITE_SETTINGS',",
          "17:     'android.permission.READ_SMS',",
          "18:     'android.permission.SEND_SMS',",
          "19:     'android.permission.RECEIVE_SMS',",
          "20:     'android.permission.READ_CALL_LOG',",
          "21:     'android.permission.READ_CONTACTS',",
          "22:     'android.permission.RECORD_AUDIO',",
          "23:     'android.permission.ACCESS_WIFI_STATE',",
          "24:     'android.permission.READ_PHONE_STATE',",
          "25:     'android.permission.RECEIVE_BOOT_COMPLETED',",
          "26:     'android.permission.SYSTEM_ALERT_WINDOW',",
          "27:     'android.permission.WAKE_LOCK',",
          "28:     'android.permission.WRITE_EXTERNAL_STORAGE',",
          "29:     'android.permission.READ_EXTERNAL_STORAGE',",
          "30:     'android.permission.VIBRATE',",
          "31: ]",
          "32: OTHER_PERMISSIONS = [",
          "33:     'android.permission.ACCESS_BACKGROUND_LOCATION',",
          "34:     'android.permission.ACCESS_CHECKIN_PROPERTIES',",
          "35:     'android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',",
          "36:     'android.permission.ACCESS_MOCK_LOCATION',",
          "37:     'android.permission.ACCESS_NOTIFICATION_POLICY',",
          "38:     'android.permission.ACCESS_SUPERUSER',",
          "39:     'android.permission.ACCESS_SURFACE_FLINGER',",
          "40:     'android.permission.ACCOUNT_MANAGER',",
          "41:     'android.permission.ACTIVITY_RECOGNITION',",
          "42:     'android.permission.AUTHENTICATE_ACCOUNTS',",
          "43:     'android.permission.BATTERY_STATS',",
          "44:     'android.permission.BIND_APPWIDGET',",
          "45:     'android.permission.BIND_DEVICE_ADMIN',",
          "46:     'android.permission.BIND_INPUT_METHOD',",
          "47:     'android.permission.BIND_REMOTEVIEWS',",
          "48:     'android.permission.BIND_WALLPAPER',",
          "49:     'android.permission.BLUETOOTH',",
          "50:     'android.permission.BLUETOOTH_ADMIN',",
          "51:     'android.permission.BRICK',",
          "52:     'android.permission.BROADCAST_PACKAGE_REMOVED',",
          "53:     'android.permission.BROADCAST_SMS',",
          "54:     'android.permission.BROADCAST_STICKY',",
          "55:     'android.permission.BROADCAST_WAP_PUSH',",
          "56:     'android.permission.CALL_PHONE',",
          "57:     'android.permission.CHANGE_NETWORK_STATE',",
          "58:     'android.permission.CHANGE_WIFI_STATE',",
          "59:     'android.permission.DIAGNOSTIC',",
          "60:     'android.permission.FLASHLIGHT',",
          "61:     'android.permission.FORCE_STOP_PACKAGES',",
          "62:     'android.permission.FOREGROUND_SERVICE',",
          "63:     'android.permission.GET_ACCOUNTS_PRIVELEGED',",
          "64:     'android.permission.MODIFY_AUDIO_SETTINGS',",
          "65:     'android.permission.MOUNT_FORMAT_FILESYSTEMS',",
          "66:     'android.permission.PROCESS_OUTGOING_CALLS',",
          "67:     'android.permission.READ_CALENDAR',",
          "68:     'android.permission.PACKAGE_USAGE_STATS',",
          "69:     'android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS',",
          "70:     'android.permission.REQUEST_INSTALL_PACKAGES',",
          "71:     'android.permission.WRITE_CONTACTS',",
          "72:     'android.permission.WRITE_SMS',",
          "73:     'com.android.launcher.permission.INSTALL_SHORTCUT',",
          "74:     'com.google.android.c2dm.permission.RECEIVE',",
          "75:     'com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE',",
          "76:     'com.google.android.gms.permission.ACTIVITY_RECOGNITION',",
          "77:     'com.google.android.gms.permission.AD_ID',",
          "78: ]",
          "81: logger = logging.getLogger(__name__)",
          "84: def check_malware_permission(perms):",
          "85:     \"\"\"Check against most common malware permissions.\"\"\"",
          "86:     logger.info('Checking for Malware Permissions')",
          "87:     malware_perms = []",
          "88:     other_perms = []",
          "89:     for permission in perms:",
          "90:         if permission in TOP_MALWARE_PERMISSIONS:",
          "91:             malware_perms.append(permission)",
          "92:         if permission in OTHER_PERMISSIONS:",
          "93:             other_perms.append(permission)",
          "94:     data = {",
          "95:         'top_malware_permissions': malware_perms,",
          "96:         'other_abused_permissions': other_perms,",
          "97:         'total_malware_permissions': len(TOP_MALWARE_PERMISSIONS),",
          "98:         'total_other_permissions': len(OTHER_PERMISSIONS),",
          "99:     }",
          "100:     return data",
          "",
          "---------------"
        ],
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "20: \"\"\"  # noqa: W291",
          "21: # ASCII Font: Standard",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.8.9'",
          "15:   __  __       _    ____  _____       _____  ___",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ / ( _ )",
          "17:  | |\\/| |/ _ \\| '_ \\___ \\| |_  \\ \\ / / |_ \\ / _ \\",
          "18:  | |  | | (_) | |_) |__) |  _|  \\ V / ___) | (_) |",
          "19:  |_|  |_|\\___/|_.__/____/|_|     \\_/ |____(_)___/",
          "",
          "[Added Lines]",
          "13: VERSION = '3.9.0'",
          "15:   __  __       _    ____  _____       _____ ___",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ // _ \\",
          "17:  | |\\/| |/ _ \\| '_ \\___ \\| |_  \\ \\ / / |_ \\ (_) |",
          "18:  | |  | | (_) | |_) |__) |  _|  \\ V / ___) \\__, |",
          "19:  |_|  |_|\\___/|_.__/____/|_|     \\_/ |____(_)/_/",
          "",
          "---------------"
        ],
        "mobsf/MobSF/settings.py||mobsf/MobSF/settings.py": [
          "File: mobsf/MobSF/settings.py -> mobsf/MobSF/settings.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "334:     CVSS_SCORE_ENABLED = bool(os.getenv('MOBSF_CVSS_SCORE_ENABLED', ''))",
          "335:     # NIAP Scan",
          "336:     NIAP_ENABLED = os.getenv('MOBSF_NIAP_ENABLED', '')",
          "337:     # Dex 2 Smali Conversion",
          "338:     DEX2SMALI_ENABLED = os.getenv('MOBSF_DEX2SMALI_ENABLED', '1')",
          "339:     # Android Shared Object Binary Analysis",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337:     # Permission to Code Mapping",
          "338:     PERM_MAPPING_ENABLED = os.getenv('MOBSF_PERM_MAPPING_ENABLED', '1')",
          "",
          "---------------"
        ],
        "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py": [
          "File: mobsf/MobSF/utils.py -> mobsf/MobSF/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:     \"\"\"Print MobSF Version.\"\"\"",
          "102:     logger.info(settings.BANNER)",
          "103:     ver = settings.MOBSF_VER",
          "104:     if platform.system() == 'Windows':",
          "105:         logger.info('Mobile Security Framework %s', ver)",
          "106:         print('REST API Key: ' + api_key())",
          "107:     else:",
          "108:         logger.info('\\033[1m\\033[34mMobile Security Framework %s\\033[0m', ver)",
          "109:         print('REST API Key: ' + Color.BOLD + api_key() + Color.END)",
          "115:     find_java_binary()",
          "116:     check_basic_env()",
          "117:     thread = threading.Thread(target=check_update, name='check_update')",
          "",
          "[Removed Lines]",
          "110:     logger.info('OS: %s', platform.system())",
          "111:     logger.info('Platform: %s', platform.platform())",
          "112:     dist = ' '.join(distro.linux_distribution(full_distribution_name=False))",
          "113:     if dist.strip():",
          "114:         logger.info('Dist: %s', dist)",
          "",
          "[Added Lines]",
          "104:     logger.info('Author: Ajin Abraham | opensecurity.in')",
          "111:     os = platform.system()",
          "112:     pltfm = platform.platform()",
          "113:     dist = ' '.join(distro.linux_distribution(",
          "114:         full_distribution_name=False)).strip()",
          "115:     dst_str = ' '",
          "116:     if dist:",
          "117:         dst_str = f' ({dist}) '",
          "118:     env_str = f'OS Environment: {os}{dst_str}{pltfm}'",
          "119:     logger.info(env_str)",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/models.py||mobsf/StaticAnalyzer/models.py": [
          "File: mobsf/StaticAnalyzer/models.py -> mobsf/StaticAnalyzer/models.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:     VERSION_CODE = models.CharField(max_length=50, default='')",
          "40:     ICON_PATH = models.TextField(default='')",
          "41:     PERMISSIONS = models.TextField(default={})",
          "42:     CERTIFICATE_ANALYSIS = models.TextField(default={})",
          "43:     MANIFEST_ANALYSIS = models.TextField(default=[])",
          "44:     BINARY_ANALYSIS = models.TextField(default=[])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     MALWARE_PERMISSIONS = models.TextField(default={})",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/code_analysis.py||mobsf/StaticAnalyzer/views/android/code_analysis.py": [
          "File: mobsf/StaticAnalyzer/views/android/code_analysis.py -> mobsf/StaticAnalyzer/views/android/code_analysis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: from mobsf.MobSF.utils import (",
          "14:     filename_from_path,",
          "15:     get_android_src_dir,",
          "16: )",
          "17: from mobsf.StaticAnalyzer.views.common.shared_func import (",
          "18:     url_n_email_extract,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:     settings_enabled,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28: def get_perm_rules(perm_rules, android_permissions):",
          "29:     \"\"\"Get applicablepermission rules.\"\"\"",
          "30:     try:",
          "31:         if not android_permissions:",
          "32:             return None",
          "33:         dynamic_rules = []",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:         if not settings_enabled('PERM_MAPPING_ENABLED'):",
          "33:             return None",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/db_interaction.py||mobsf/StaticAnalyzer/views/android/db_interaction.py": [
          "File: mobsf/StaticAnalyzer/views/android/db_interaction.py -> mobsf/StaticAnalyzer/views/android/db_interaction.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:             'version_code': db_entry[0].VERSION_CODE,",
          "58:             'icon_path': db_entry[0].ICON_PATH,",
          "59:             'permissions': python_dict(db_entry[0].PERMISSIONS),",
          "60:             'certificate_analysis': python_dict(",
          "61:                 db_entry[0].CERTIFICATE_ANALYSIS),",
          "62:             'manifest_analysis': manifest_analysis,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:             'malware_permissions': python_dict(",
          "61:                 db_entry[0].MALWARE_PERMISSIONS),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:             'icon_path': app_dic['icon_path'],",
          "131:             'certificate_analysis': cert_dic,",
          "132:             'permissions': man_an_dic['permissions'],",
          "133:             'manifest_analysis': manifest_analysis,",
          "134:             'network_security': man_an_dic['network_security'],",
          "135:             'binary_analysis': bin_anal,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:             'malware_permissions': man_an_dic['malware_permissions'],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "193:             'ICON_PATH': app_dic['icon_path'],",
          "194:             'CERTIFICATE_ANALYSIS': cert_dic,",
          "195:             'PERMISSIONS': man_an_dic['permissions'],",
          "196:             'MANIFEST_ANALYSIS': man_an_dic['manifest_anal'],",
          "197:             'BINARY_ANALYSIS': bin_anal,",
          "198:             'FILE_ANALYSIS': app_dic['certz'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "199:             'MALWARE_PERMISSIONS': man_an_dic['malware_permissions'],",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/jar_aar.py||mobsf/StaticAnalyzer/views/android/jar_aar.py": [
          "File: mobsf/StaticAnalyzer/views/android/jar_aar.py -> mobsf/StaticAnalyzer/views/android/jar_aar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import mobsf.MalwareAnalyzer.views.Trackers as Trackers",
          "9: import mobsf.MalwareAnalyzer.views.VirusTotal as VirusTotal",
          "10: from mobsf.MobSF.utils import (",
          "11:     file_size,",
          "12:     print_n_send_error_response,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: from mobsf.MalwareAnalyzer.views.android import permissions",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:                 '',",
          "97:                 app_dic['app_dir'],",
          "98:             )",
          "99:             cert_dic = cert_info(",
          "100:                 apk,",
          "101:                 app_dic,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:             # Malware Permission check",
          "102:             mal_perms = permissions.check_malware_permission(",
          "103:                 man_data_dic['perm'])",
          "104:             man_an_dic['malware_permissions'] = mal_perms",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "135:                     'network_findings': [],",
          "136:                     'network_summary': {},",
          "137:                 },",
          "138:             }",
          "139:             cert_dic = {",
          "140:                 'certificate_info': '',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:                 'malware_permissions': {},",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/so.py||mobsf/StaticAnalyzer/views/android/so.py": [
          "File: mobsf/StaticAnalyzer/views/android/so.py -> mobsf/StaticAnalyzer/views/android/so.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:                 'network_findings': [],",
          "82:                 'network_summary': {},",
          "83:             },",
          "84:         }",
          "85:         cert_dic = {",
          "86:             'certificate_info': '',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:             'malware_permissions': {},",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/static_analyzer.py||mobsf/StaticAnalyzer/views/android/static_analyzer.py": [
          "File: mobsf/StaticAnalyzer/views/android/static_analyzer.py -> mobsf/StaticAnalyzer/views/android/static_analyzer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import mobsf.MalwareAnalyzer.views.Trackers as Trackers",
          "10: import mobsf.MalwareAnalyzer.views.VirusTotal as VirusTotal",
          "13: from mobsf.MalwareAnalyzer.views.MalwareDomainCheck import MalwareDomainCheck",
          "15: from django.conf import settings",
          "",
          "[Removed Lines]",
          "11: from mobsf.MalwareAnalyzer.views.apkid import apkid_analysis",
          "12: from mobsf.MalwareAnalyzer.views.quark import quark_analysis",
          "",
          "[Added Lines]",
          "11: from mobsf.MalwareAnalyzer.views.android import (",
          "12:     apkid,",
          "13:     permissions,",
          "14:     quark,",
          "15: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:                     '',",
          "223:                     app_dic['app_dir'],",
          "224:                 )",
          "225:                 # Get icon",
          "226:                 # apktool should run before this",
          "227:                 get_icon_apk(apk, app_dic)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228:                 # Malware Permission check",
          "229:                 mal_perms = permissions.check_malware_permission(",
          "230:                     man_data_dic['perm'])",
          "231:                 man_an_dic['malware_permissions'] = mal_perms",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "234:                     apk,",
          "235:                     app_dic,",
          "236:                     man_data_dic)",
          "238:                     'app_dir'], app_dic['app_path'], app_dic['app_name'])",
          "239:                 tracker = Trackers.Trackers(",
          "240:                     app_dic['app_dir'], app_dic['tools_dir'])",
          "",
          "[Removed Lines]",
          "237:                 apkid_results = apkid_analysis(app_dic[",
          "",
          "[Added Lines]",
          "245:                 apkid_results = apkid.apkid_analysis(app_dic[",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "251:                     app_dic['manifest_file'],",
          "252:                     man_data_dic['perm'])",
          "255:                     app_dic['app_dir'],",
          "256:                     app_dic['app_path'])",
          "",
          "[Removed Lines]",
          "254:                 quark_results = quark_analysis(",
          "",
          "[Added Lines]",
          "262:                 quark_results = quark.quark_analysis(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "402:                         pro_type,",
          "403:                         app_dic['app_dir'],",
          "404:                     )",
          "405:                     # Get icon",
          "406:                     get_icon_from_src(app_dic, man_data_dic['icons'])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:                     # Malware Permission check",
          "415:                     mal_perms = permissions.check_malware_permission(",
          "416:                         man_data_dic['perm'])",
          "417:                     man_an_dic['malware_permissions'] = mal_perms",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/common/binary/lib_analysis.py||mobsf/StaticAnalyzer/views/common/binary/lib_analysis.py": [
          "File: mobsf/StaticAnalyzer/views/common/binary/lib_analysis.py -> mobsf/StaticAnalyzer/views/common/binary/lib_analysis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         # Supports Static Library, Shared objects, Dynamic Library,",
          "46:         # from APK, SO, AAR, JAR, IPA, DYLIB, and A",
          "47:         for libfile in Path(src).rglob(ext):",
          "48:             rel_path = libfile.relative_to(base_dir).as_posix()",
          "49:             logger.info('Analyzing %s', rel_path)",
          "50:             if arch == 'ar':",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:             if '__MACOSX' in libfile.as_posix():",
          "49:                 continue",
          "",
          "---------------"
        ],
        "mobsf/templates/general/about.html||mobsf/templates/general/about.html": [
          "File: mobsf/templates/general/about.html -> mobsf/templates/general/about.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:                 <h1>About Mobile Security Framework</h1>",
          "16:                   <p class=\"lead\">",
          "18:                  </p>",
          "19:                   <p> <strong>Author:</strong> <a href=\"//twitter.com/ajinabraham\">Ajin Abraham</a> </p>",
          "20:                   <h2>Active Collaborators</h2>",
          "",
          "[Removed Lines]",
          "17:                   Mobile Security Framework (MobSF) is an automated, all-in-one mobile application (Android/iOS/Windows) pen-testing, malware analysis and security assessment framework capable of performing static and dynamic analysis. MobSF support mobile app binaries (APK, XAPK, IPA & APPX) along with zipped source code and provides APIs for seamless integration with your CI/CD or DevSecOps pipeline. The Dynamic Analyzer helps you to perform runtime security assessment and interactive instrumented testing.",
          "",
          "[Added Lines]",
          "17:                     Mobile Security Framework (MobSF) is a security research platform for mobile applications in Android, iOS and Windows Mobile. MobSF can be used for a variety of use cases such as mobile application security, penetration testing, malware analysis, and privacy analysis. The Static Analyzer supports popular mobile app binaries like APK, IPA, APPX and source code. Meanwhile, the Dynamic Analyzer supports both Android and iOS applications and offers a platform for interactive instrumented testing, runtime data and network traffic analysis. MobSF seamlessly integrates with your DevSecOps or CI/CD pipeline, facilitated by REST APIs and CLI tools, enhancing your security workflow with ease.",
          "",
          "---------------"
        ],
        "mobsf/templates/pdf/android_report.html||mobsf/templates/pdf/android_report.html": [
          "File: mobsf/templates/pdf/android_report.html -> mobsf/templates/pdf/android_report.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:           </table>",
          "745:         {% endif %}",
          "746: -->",
          "747:       {% if domains  %}",
          "748:       <h2><i class=\"fa fa-exclamation\"></i> OFAC SANCTIONED COUNTRIES</h2>",
          "749:       <p>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "748:     {% if malware_permissions %}",
          "749:     <h2><i class=\"fa fa-braille\"></i> ABUSED PERMISSIONS</h2>",
          "751:     <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "752:       <thead>",
          "753:       <tr>",
          "754:          <th>TYPE</th>",
          "755:          <th>MATCHES</th>",
          "756:          <th>PERMISSIONS</th>",
          "757:       </tr>",
          "758:      </thead>",
          "759:      <tbody>",
          "760:       <tr>",
          "761:         <td>Malware Permissions</td>",
          "762:         <td>{{ malware_permissions.top_malware_permissions | length}}</b>/{{malware_permissions.total_malware_permissions}}</td>",
          "763:         <td>",
          "764:           {{ malware_permissions.top_malware_permissions | join:\", \"}}",
          "765:       </td>",
          "766:       </tr>",
          "767:       <tr>",
          "768:         <td>Other Common Permissions</td>",
          "769:         <td>{{ malware_permissions.other_abused_permissions | length}}</b>/{{malware_permissions.total_other_permissions}}</td>",
          "770:         <td>",
          "771:           {{ malware_permissions.other_abused_permissions | join:\", \"}}",
          "772:       </td>",
          "773:       </tr>",
          "774:     </tbody>",
          "775: </table>",
          "776:     <hr>",
          "777:     <p>",
          "778:       <h3>Malware Permissions:</h3> Top permissions that are widely abused by known malware.",
          "779:       <br/>",
          "780:       <h3>Other Common Permissions:</h3> Permissions that are commonly abused by known malware.",
          "781:     </p>",
          "782:       {% endif %}",
          "784:  <!-- ===========================end malware permissions  ================================== -->",
          "",
          "---------------"
        ],
        "mobsf/templates/static_analysis/android_binary_analysis.html||mobsf/templates/static_analysis/android_binary_analysis.html": [
          "File: mobsf/templates/static_analysis/android_binary_analysis.html -> mobsf/templates/static_analysis/android_binary_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:                 </a>",
          "202:               </li>",
          "203:               {% endif %}",
          "204:               <li class=\"nav-item\">",
          "205:                 <a href=\"#serverlocations\" class=\"nav-link\">",
          "206:                   <i class=\"fas fa-globe-asia nav-icon\"></i>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:               <li class=\"nav-item\">",
          "205:                 <a href=\"#malware_permissions\" class=\"nav-link\">",
          "206:                   <i class=\"fa fa-braille nav-icon\"></i>",
          "207:                   <p>Abused Permissions</p>",
          "208:                 </a>",
          "209:               </li>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1738: </section>",
          "1739: {% endif %}",
          "1740: <!-- ===========================end virus total ================================== -->",
          "1741: <style>",
          "1742:   #chartdiv {",
          "1743:   width: 100%;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1748: <a id=\"malware_permissions\" class=\"anchor\"></a>",
          "1749: <section class=\"content\">",
          "1750:   <div class=\"container-fluid\">",
          "1751:     <div class=\"row\">",
          "1752:         <div class=\"col-lg-12\">",
          "1753:         <div class=\"card\">",
          "1754:           <div class=\"card-body\">",
          "1755:             <p>",
          "1756:              <strong><i class=\"fa fa-braille\"></i> ABUSED PERMISSIONS</strong>",
          "1757:              </p>",
          "1758:               <div class=\"table-responsive\">",
          "1760:                 {% if malware_permissions %}",
          "1762:                 <div class=\"container\">",
          "1763:                   <div class=\"row\">",
          "1764:                     <div class=\"col-sm\">",
          "1765:                 <div class=\"progress-group\">",
          "1766:                   <strong>Top Malware Permissions</strong>",
          "1767:                   <span class=\"float-right\"><b>{{ malware_permissions.top_malware_permissions | length}}</b>/{{malware_permissions.total_malware_permissions}}</span>",
          "1768:                   <div class=\"progress progress-sm\">",
          "1769:                   <div class=\"progress-bar bg-danger\" aria-valuemin=\"0\" style=\"width: {% widthratio malware_permissions.top_malware_permissions|length malware_permissions.total_malware_permissions 100 %}%;\" aria-valuenow=\"{{ malware_permissions.top_malware_permissions | length}}\" aria-valuemax=\"{{malware_permissions.total_malware_permissions}}\"></div>",
          "1770:                 </div>",
          "1771:                   <span class=\"product-description\">",
          "1772:                       {{ malware_permissions.top_malware_permissions | join:\", \"}}",
          "1773:                     </span>",
          "1774:                 </div>",
          "1775:               </div>",
          "1776:               <div class=\"col-sm\">",
          "1777:                 <div class=\"progress-group\">",
          "1778:                   <strong>Other Common Permissions</strong>",
          "1779:                   <span class=\"float-right\"><b>{{ malware_permissions.other_abused_permissions | length}}</b>/{{ malware_permissions.total_other_permissions}}</span>",
          "1780:                   <div class=\"progress progress-sm\">",
          "1781:                   <div class=\"progress-bar bg-warning\" aria-valuemin=\"0\" style=\"width: {% widthratio malware_permissions.other_abused_permissions|length malware_permissions.total_other_permissions 100 %}%;\" aria-valuenow=\"{{ malware_permissions.other_abused_permissions | length}}\" aria-valuemax=\"{{ malware_permissions.total_other_permissions}}\"></div>",
          "1782:                 </div>",
          "1783:                 <span class=\"product-description\">",
          "1784:                   {{ malware_permissions.other_abused_permissions | join:\", \"}}",
          "1785:                   </span>",
          "1786:                   </div>",
          "1787:                   </div>",
          "1788:                  </div>",
          "1789:                 </div>",
          "1790:                 <hr>",
          "1791:                 <p>",
          "1792:                   <strong>Malware Permissions</strong> are the top permissions that are widely abused by known malware.",
          "1793:                   <br/>",
          "1794:                   <strong>Other Common Permissions</strong> are permissions that are commonly abused by known malware.",
          "1795:                 </p>",
          "1796:                  {% endif %}",
          "1797:             </div>",
          "1798:           </div>",
          "1799:         </div><!-- /.card -->",
          "1800:         </div>",
          "1801:         <!-- end row -->",
          "1802:         </div>",
          "1803:     </div>",
          "1804: </section>",
          "1805:  <!-- ===========================end malware permissions  ================================== -->",
          "",
          "---------------"
        ],
        "mobsf/templates/static_analysis/android_source_analysis.html||mobsf/templates/static_analysis/android_source_analysis.html": [
          "File: mobsf/templates/static_analysis/android_source_analysis.html -> mobsf/templates/static_analysis/android_source_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:               </p>",
          "131:             </a>",
          "132:             <ul class=\"nav nav-treeview\">",
          "133:               <li class=\"nav-item\">",
          "134:                 <a href=\"#serverlocations\" class=\"nav-link\">",
          "135:                   <i class=\"fas fa-globe-asia nav-icon\"></i>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:               <li class=\"nav-item\">",
          "134:                 <a href=\"#malware_permissions\" class=\"nav-link\">",
          "135:                   <i class=\"fa fa-braille nav-icon\"></i>",
          "136:                   <p>Abused Permissions</p>",
          "137:                 </a>",
          "138:               </li>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1211:     </div>",
          "1212: </section>",
          "1213:  <!-- ===========================end file analysis ================================== -->",
          "1214:  <style>",
          "1215:   #chartdiv {",
          "1216:   width: 100%;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1220:  <a id=\"malware_permissions\" class=\"anchor\"></a>",
          "1221: <section class=\"content\">",
          "1222:   <div class=\"container-fluid\">",
          "1223:     <div class=\"row\">",
          "1224:         <div class=\"col-lg-12\">",
          "1225:         <div class=\"card\">",
          "1226:           <div class=\"card-body\">",
          "1227:             <p>",
          "1228:              <strong><i class=\"fa fa-braille\"></i> ABUSED PERMISSIONS</strong>",
          "1229:              </p>",
          "1230:               <div class=\"table-responsive\">",
          "1232:                 {% if malware_permissions %}",
          "1234:                 <div class=\"container\">",
          "1235:                   <div class=\"row\">",
          "1236:                     <div class=\"col-sm\">",
          "1237:                 <div class=\"progress-group\">",
          "1238:                   <strong>Top Malware Permissions</strong>",
          "1239:                   <span class=\"float-right\"><b>{{ malware_permissions.top_malware_permissions | length}}</b>/{{malware_permissions.total_malware_permissions}}</span>",
          "1240:                   <div class=\"progress progress-sm\">",
          "1241:                   <div class=\"progress-bar bg-danger\" aria-valuemin=\"0\" style=\"width: {% widthratio malware_permissions.top_malware_permissions|length malware_permissions.total_malware_permissions 100 %}%;\" aria-valuenow=\"{{ malware_permissions.top_malware_permissions | length}}\" aria-valuemax=\"{{malware_permissions.total_malware_permissions}}\"></div>",
          "1242:                 </div>",
          "1243:                   <span class=\"product-description\">",
          "1244:                       {{ malware_permissions.top_malware_permissions | join:\", \"}}",
          "1245:                     </span>",
          "1246:                 </div>",
          "1247:               </div>",
          "1248:               <div class=\"col-sm\">",
          "1249:                 <div class=\"progress-group\">",
          "1250:                   <strong>Other Common Permissions</strong>",
          "1251:                   <span class=\"float-right\"><b>{{ malware_permissions.other_abused_permissions | length}}</b>/{{ malware_permissions.total_other_permissions}}</span>",
          "1252:                   <div class=\"progress progress-sm\">",
          "1253:                   <div class=\"progress-bar bg-warning\" aria-valuemin=\"0\" style=\"width: {% widthratio malware_permissions.other_abused_permissions|length malware_permissions.total_other_permissions 100 %}%;\" aria-valuenow=\"{{ malware_permissions.other_abused_permissions | length}}\" aria-valuemax=\"{{ malware_permissions.total_other_permissions}}\"></div>",
          "1254:                 </div>",
          "1255:                 <span class=\"product-description\">",
          "1256:                   {{ malware_permissions.other_abused_permissions | join:\", \"}}",
          "1257:                   </span>",
          "1258:                   </div>",
          "1259:                   </div>",
          "1260:                  </div>",
          "1261:                 </div>",
          "1262:                 <hr>",
          "1263:                 <p>",
          "1264:                   <strong>Malware Permissions</strong> are the top permissions that are widely abused by known malware.",
          "1265:                   <br/>",
          "1266:                   <strong>Other Common Permissions</strong> are permissions that are commonly abused by known malware.",
          "1267:                 </p>",
          "1268:                  {% endif %}",
          "1269:             </div>",
          "1270:           </div>",
          "1271:         </div><!-- /.card -->",
          "1272:         </div>",
          "1273:         <!-- end row -->",
          "1274:         </div>",
          "1275:     </div>",
          "1276: </section>",
          "1277:  <!-- ===========================end malware permissions  ================================== -->",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5af3a8219e2a7b4078fab6a3b5d5a66900e7cf1",
      "candidate_info": {
        "commit_hash": "e5af3a8219e2a7b4078fab6a3b5d5a66900e7cf1",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/e5af3a8219e2a7b4078fab6a3b5d5a66900e7cf1",
        "files": [
          ".sonarcloud.properties",
          "docker-compose.yml",
          "docker/docker-compose.yml",
          "docker/docker-compose_swarm.yml",
          "docker/nginx.conf",
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/settings.py",
          "mobsf/MobSF/utils.py",
          "mobsf/MobSF/views/api/api_middleware.py",
          "mobsf/MobSF/views/home.py",
          "mobsf/StaticAnalyzer/tests.py",
          "mobsf/StaticAnalyzer/tools/ios/CgbiPngFix/CgbiPngFix.exe",
          "mobsf/StaticAnalyzer/tools/ios/CgbiPngFix/CgbiPngFix_amd64",
          "mobsf/StaticAnalyzer/tools/ios/CgbiPngFix/CgbiPngFix_arm64",
          "mobsf/StaticAnalyzer/views/android/views/source_tree.py",
          "mobsf/StaticAnalyzer/views/ios/icon_analysis.py",
          "mobsf/StaticAnalyzer/views/ios/rules/ipa_rules.py",
          "poetry.lock",
          "pyproject.toml"
        ],
        "message": "4.1.5 (#2445)\n\n* Support custom home from environment variables\n* Reduce iOS binary findings severity to warning from high\n* Code QA and dependency updates\n* docker-compose QA, added example nginx config\n* Added docker-compose_swarm.yml by @antonkap add support for docker secrets\n* IPA PNG Uncrush support for Windows and Linux #2397",
        "before_after_code_files": [
          ".sonarcloud.properties||.sonarcloud.properties",
          "docker/nginx.conf||docker/nginx.conf",
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/settings.py||mobsf/MobSF/settings.py",
          "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
          "mobsf/MobSF/views/api/api_middleware.py||mobsf/MobSF/views/api/api_middleware.py",
          "mobsf/MobSF/views/home.py||mobsf/MobSF/views/home.py",
          "mobsf/StaticAnalyzer/tests.py||mobsf/StaticAnalyzer/tests.py",
          "mobsf/StaticAnalyzer/views/android/views/source_tree.py||mobsf/StaticAnalyzer/views/android/views/source_tree.py",
          "mobsf/StaticAnalyzer/views/ios/icon_analysis.py||mobsf/StaticAnalyzer/views/ios/icon_analysis.py",
          "mobsf/StaticAnalyzer/views/ios/rules/ipa_rules.py||mobsf/StaticAnalyzer/views/ios/rules/ipa_rules.py",
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        ".sonarcloud.properties||.sonarcloud.properties": [
          "File: .sonarcloud.properties -> .sonarcloud.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: sonar.sources=.",
          "2: sonar.exclusions=mobsf/static/**/*,mobsf/templates/**/*",
          "3: sonar.sourceEncoding=UTF-8",
          "",
          "[Removed Lines]",
          "4: sonar.python.version=3.10, 3.11",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "docker/nginx.conf||docker/nginx.conf": [
          "File: docker/nginx.conf -> docker/nginx.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: user  nginx;",
          "2: events {",
          "3:     worker_connections   1000;",
          "4: }",
          "5: http {",
          "6:         server {",
          "7:               listen 4000;",
          "8:               location / {",
          "9:                 proxy_set_header        X-Forwarded-Host    $host;",
          "10:                 proxy_set_header        X-Forwarded-Port    443;",
          "11:                 proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;",
          "13:                 proxy_pass http://mobsf:8000;",
          "14:                 proxy_redirect         off;",
          "15:                 proxy_read_timeout     900;",
          "16:                 proxy_buffering        on;",
          "17:               }",
          "18:               client_max_body_size 256M;",
          "19:         }",
          "20: }",
          "",
          "---------------"
        ],
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import sys",
          "7: import shutil",
          "8: import threading",
          "9: from importlib import (",
          "10:     machinery,",
          "11:     util,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: from hashlib import sha256",
          "10: from pathlib import Path",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17: logger = logging.getLogger(__name__)",
          "20: BANNER = r\"\"\"",
          "21:   __  __       _    ____  _____       _  _    _",
          "22:  |  \\/  | ___ | |__/ ___||  ___|_   _| || |  / |",
          "",
          "[Removed Lines]",
          "19: VERSION = '4.1.4'",
          "",
          "[Added Lines]",
          "21: VERSION = '4.1.5'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "30: def first_run(secret_file, base_dir, mobsf_home):",
          "31:     # Based on https://gist.github.com/ndarville/3452907#file-secret-key-gen-py",
          "33:         secret_key = os.environ['MOBSF_SECRET_KEY']",
          "36:     else:",
          "37:         try:",
          "38:             secret_key = get_random()",
          "42:         except IOError:",
          "43:             raise Exception('Secret file generation failed' % secret_file)",
          "44:         # Run Once",
          "",
          "[Removed Lines]",
          "32:     if 'MOBSF_SECRET_KEY' in os.environ:",
          "34:     elif os.path.isfile(secret_file):",
          "35:         secret_key = open(secret_file).read().strip()",
          "39:             secret = open(secret_file, 'w')",
          "40:             secret.write(secret_key)",
          "41:             secret.close()",
          "",
          "[Added Lines]",
          "34:     base_dir = Path(base_dir)",
          "35:     mobsf_home = Path(mobsf_home)",
          "36:     secret_file = Path(secret_file)",
          "37:     if os.getenv('MOBSF_SECRET_KEY'):",
          "39:     elif secret_file.exists() and secret_file.is_file():",
          "40:         secret_key = secret_file.read_text().strip()",
          "44:             secret_file.write_text(secret_key)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "48:         thread = threading.Thread(",
          "49:             target=install_jadx,",
          "50:             name='install_jadx',",
          "52:         thread.start()",
          "53:         # Windows Setup",
          "55:     return secret_key",
          "58: def create_user_conf(mobsf_home, base_dir):",
          "59:     try:",
          "65:             config = []",
          "66:             add = False",
          "67:             for line in dat:",
          "",
          "[Removed Lines]",
          "51:             args=(mobsf_home,))",
          "54:         windows_config_local(mobsf_home)",
          "60:         config_path = os.path.join(mobsf_home, 'config.py')",
          "61:         if not os.path.isfile(config_path):",
          "62:             sample_conf = os.path.join(base_dir, 'MobSF/settings.py')",
          "63:             with open(sample_conf, 'r') as f:",
          "64:                 dat = f.readlines()",
          "",
          "[Added Lines]",
          "54:             args=(mobsf_home.as_posix(),))",
          "57:         windows_config_local(mobsf_home.as_posix())",
          "63:         config_path = mobsf_home / 'config.py'",
          "64:         if not config_path.exists():",
          "65:             sample_conf = base_dir / 'MobSF' / 'settings.py'",
          "66:             dat = sample_conf.read_text().splitlines()",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "72:                 if add:",
          "73:                     config.append(line.lstrip())",
          "74:             config.pop(0)",
          "78:     except Exception:",
          "79:         logger.exception('Cannot create config file')",
          "82: def django_operation(cmds, base_dir):",
          "83:     \"\"\"Generic Function for Djano operations.\"\"\"",
          "86:         # Bail out for package",
          "87:         return",
          "89:     args.extend(cmds)",
          "90:     subprocess.call(args)",
          "",
          "[Removed Lines]",
          "75:             conf_str = ''.join(config)",
          "76:             with open(config_path, 'w') as f:",
          "77:                 f.write(conf_str)",
          "84:     manage = os.path.join(base_dir, '../manage.py')",
          "85:     if not os.path.exists(manage):",
          "88:     args = [sys.executable, manage]",
          "",
          "[Added Lines]",
          "77:             conf_str = '\\n'.join(config)",
          "78:             config_path.write_text(conf_str)",
          "85:     manage = base_dir.parent / 'manage.py'",
          "86:     if manage.exists() and manage.is_file():",
          "89:     print(manage)",
          "90:     args = [sys.executable, manage.as_posix()]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "117: def get_mobsf_home(use_home, base_dir):",
          "118:     try:",
          "119:         mobsf_home = ''",
          "120:         if use_home:",
          "122:             # MobSF Home Directory",
          "125:             create_user_conf(mobsf_home, base_dir)",
          "126:         else:",
          "127:             mobsf_home = base_dir",
          "128:         # Download Directory",
          "132:         # Screenshot Directory",
          "136:         # Upload Directory",
          "140:         # Downloaded tools",
          "146:         if use_home:",
          "148:             try:",
          "149:                 shutil.copytree(src, sig_dir, dirs_exist_ok=True)",
          "150:             except Exception:",
          "151:                 pass",
          "155:     except Exception:",
          "156:         logger.exception('Creating MobSF Home Directory')",
          "",
          "[Removed Lines]",
          "121:             mobsf_home = os.path.join(os.path.expanduser('~'), '.MobSF')",
          "123:             if not os.path.exists(mobsf_home):",
          "124:                 os.makedirs(mobsf_home)",
          "129:         dwd_dir = os.path.join(mobsf_home, 'downloads/')",
          "130:         if not os.path.exists(dwd_dir):",
          "131:             os.makedirs(dwd_dir)",
          "133:         screen_dir = os.path.join(dwd_dir, 'screen/')",
          "134:         if not os.path.exists(screen_dir):",
          "135:             os.makedirs(screen_dir)",
          "137:         upload_dir = os.path.join(mobsf_home, 'uploads/')",
          "138:         if not os.path.exists(upload_dir):",
          "139:             os.makedirs(upload_dir)",
          "141:         downloaded_tools_dir = os.path.join(mobsf_home, 'tools/')",
          "142:         if not os.path.exists(downloaded_tools_dir):",
          "143:             os.makedirs(downloaded_tools_dir)",
          "144:         # Signature Directory",
          "145:         sig_dir = os.path.join(mobsf_home, 'signatures/')",
          "147:             src = os.path.join(base_dir, 'signatures/')",
          "152:         elif not os.path.exists(sig_dir):",
          "153:             os.makedirs(sig_dir)",
          "154:         return mobsf_home",
          "",
          "[Added Lines]",
          "121:         base_dir = Path(base_dir)",
          "124:             mobsf_home = Path.home() / '.MobSF'",
          "125:             custom_home = os.getenv('MOBSF_HOME_DIR')",
          "126:             if custom_home:",
          "127:                 p = Path(custom_home)",
          "128:                 if p.exists() and p.is_absolute() and p.is_dir():",
          "129:                     mobsf_home = p",
          "131:             if not mobsf_home.exists():",
          "132:                 mobsf_home.mkdir(parents=True, exist_ok=True)",
          "137:         dwd_dir = mobsf_home / 'downloads'",
          "138:         dwd_dir.mkdir(parents=True, exist_ok=True)",
          "140:         screen_dir = mobsf_home / 'screen'",
          "141:         screen_dir.mkdir(parents=True, exist_ok=True)",
          "143:         upload_dir = mobsf_home / 'uploads'",
          "144:         upload_dir.mkdir(parents=True, exist_ok=True)",
          "146:         downloaded_tools_dir = mobsf_home / 'tools'",
          "147:         downloaded_tools_dir.mkdir(parents=True, exist_ok=True)",
          "148:         # Signatures Directory",
          "149:         sig_dir = mobsf_home / 'signatures'",
          "150:         sig_dir.mkdir(parents=True, exist_ok=True)",
          "152:             src = Path(base_dir) / 'signatures'",
          "157:         return mobsf_home.as_posix()",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "166:     module = util.module_from_spec(spec)",
          "167:     loader.exec_module(module)",
          "168:     return module",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174: def get_docker_secret_by_file(secret_key):",
          "175:     try:",
          "176:         secret_path = os.environ.get(secret_key)",
          "177:         path = Path(secret_path)",
          "178:         if path.exists() and path.is_file():",
          "179:             return path.read_text().strip()",
          "180:     except Exception:",
          "181:         logger.exception('Cannot read secret from %s', secret_path)",
          "182:     raise Exception('Cannot read secret from file')",
          "185: def get_secret_from_file_or_env(env_secret_key):",
          "186:     docker_secret_key = f'{env_secret_key}_FILE'",
          "187:     if os.environ.get(docker_secret_key):",
          "188:         return get_docker_secret_by_file(docker_secret_key)",
          "189:     else:",
          "190:         return os.environ[env_secret_key]",
          "193: def api_key(home_dir):",
          "194:     \"\"\"Print REST API Key.\"\"\"",
          "195:     # Form Docker Secrets",
          "196:     if os.environ.get('MOBSF_API_KEY_FILE'):",
          "197:         logger.info('\\nAPI Key read from docker secrets')",
          "198:         try:",
          "199:             return get_docker_secret_by_file('MOBSF_API_KEY_FILE')",
          "200:         except Exception:",
          "201:             logger.exception('Cannot read API Key from docker secrets')",
          "202:     # From Environment Variable",
          "203:     if os.environ.get('MOBSF_API_KEY'):",
          "204:         logger.info('\\nAPI Key read from environment variable')",
          "205:         return os.environ['MOBSF_API_KEY']",
          "206:     home_dir = Path(home_dir)",
          "207:     secret_file = home_dir / 'secret'",
          "208:     if secret_file.exists() and secret_file.is_file():",
          "209:         try:",
          "210:             _api_key = secret_file.read_bytes().strip()",
          "211:             return sha256(_api_key).hexdigest()",
          "212:         except Exception:",
          "213:             logger.exception('Cannot Read API Key')",
          "214:     return None",
          "",
          "---------------"
        ],
        "mobsf/MobSF/settings.py||mobsf/MobSF/settings.py": [
          "File: mobsf/MobSF/settings.py -> mobsf/MobSF/settings.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:     first_run,",
          "13:     get_mobsf_home,",
          "14:     get_mobsf_version,",
          "15:     load_source,",
          "16: )",
          "18: logger = logging.getLogger(__name__)",
          "20: # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
          "21: #       MOBSF CONFIGURATION",
          "22: # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:     get_secret_from_file_or_env,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28: # MobSF Data Directory",
          "29: BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))",
          "31: # Download Directory",
          "33: # Screenshot Directory",
          "35: # Upload Directory",
          "37: # Database Directory",
          "39: # Signatures used by modules",
          "41: # Tools Directory",
          "42: TOOLS_DIR = os.path.join(BASE_DIR, 'DynamicAnalyzer/tools/')",
          "43: # Downloaded Tools Directory",
          "45: # Secret File",
          "48: # ==========Load MobSF User Settings==========",
          "49: try:",
          "50:     if USE_HOME:",
          "52:         sett = load_source('user_settings', USER_CONFIG)",
          "53:         locals().update(  # lgtm [py/modification-of-locals]",
          "54:             {k: v for k, v in list(sett.__dict__.items())",
          "",
          "[Removed Lines]",
          "30: MobSF_HOME = get_mobsf_home(USE_HOME, BASE_DIR)",
          "32: DWD_DIR = os.path.join(MobSF_HOME, 'downloads/')",
          "34: SCREEN_DIR = os.path.join(MobSF_HOME, 'downloads/screen/')",
          "36: UPLD_DIR = os.path.join(MobSF_HOME, 'uploads/')",
          "38: DB_DIR = os.path.join(MobSF_HOME, 'db.sqlite3')",
          "40: SIGNATURE_DIR = os.path.join(MobSF_HOME, 'signatures/')",
          "44: DOWNLOADED_TOOLS_DIR = os.path.join(MobSF_HOME, 'tools/')",
          "46: SECRET_FILE = os.path.join(MobSF_HOME, 'secret')",
          "51:         USER_CONFIG = os.path.join(MobSF_HOME, 'config.py')",
          "",
          "[Added Lines]",
          "30: MOBSF_HOME = get_mobsf_home(USE_HOME, BASE_DIR)",
          "32: DWD_DIR = os.path.join(MOBSF_HOME, 'downloads/')",
          "34: SCREEN_DIR = os.path.join(MOBSF_HOME, 'downloads/screen/')",
          "36: UPLD_DIR = os.path.join(MOBSF_HOME, 'uploads/')",
          "38: DB_DIR = os.path.join(MOBSF_HOME, 'db.sqlite3')",
          "40: SIGNATURE_DIR = os.path.join(MOBSF_HOME, 'signatures/')",
          "44: DOWNLOADED_TOOLS_DIR = os.path.join(MOBSF_HOME, 'tools/')",
          "46: SECRET_FILE = os.path.join(MOBSF_HOME, 'secret')",
          "51:         USER_CONFIG = os.path.join(MOBSF_HOME, 'config.py')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:     CONFIG_HOME = False",
          "63: # ===MOBSF SECRET GENERATION AND DB MIGRATION====",
          "66: # =============ALLOWED DOWNLOAD EXTENSIONS=====",
          "67: ALLOWED_EXTENSIONS = {",
          "",
          "[Removed Lines]",
          "64: SECRET_KEY = first_run(SECRET_FILE, BASE_DIR, MobSF_HOME)",
          "",
          "[Added Lines]",
          "64: SECRET_KEY = first_run(SECRET_FILE, BASE_DIR, MOBSF_HOME)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150: # Database",
          "151: # https://docs.djangoproject.com/en/dev/ref/settings/#databases",
          "152: if (os.environ.get('POSTGRES_USER')",
          "154:         and os.environ.get('POSTGRES_HOST')):",
          "155:     # Postgres support",
          "156:     default = {",
          "157:         'ENGINE': 'django.db.backends.postgresql_psycopg2',",
          "158:         'NAME': os.getenv('POSTGRES_DB', 'mobsf'),",
          "159:         'USER': os.environ['POSTGRES_USER'],",
          "161:         'HOST': os.environ['POSTGRES_HOST'],",
          "162:         'PORT': int(os.getenv('POSTGRES_PORT', 5432)),",
          "163:     }",
          "",
          "[Removed Lines]",
          "153:         and os.environ.get('POSTGRES_PASSWORD')",
          "160:         'PASSWORD': os.environ['POSTGRES_PASSWORD'],",
          "",
          "[Added Lines]",
          "153:         and (os.environ.get('POSTGRES_PASSWORD')",
          "154:              or os.environ.get('POSTGRES_PASSWORD_FILE'))",
          "161:         'PASSWORD': get_secret_from_file_or_env('POSTGRES_PASSWORD'),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "291:         'logfile': {",
          "292:             'level': 'DEBUG',",
          "293:             'class': 'logging.FileHandler',",
          "295:             'formatter': 'standard',",
          "296:         },",
          "297:         'console': {",
          "",
          "[Removed Lines]",
          "294:             'filename': os.path.join(MobSF_HOME, 'debug.log'),",
          "",
          "[Added Lines]",
          "295:             'filename': os.path.join(MOBSF_HOME, 'debug.log'),",
          "",
          "---------------"
        ],
        "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py": [
          "File: mobsf/MobSF/utils.py -> mobsf/MobSF/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: from django.utils import timezone",
          "37: from mobsf.StaticAnalyzer.models import RecentScansDB",
          "39: from . import settings",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: from mobsf.MobSF. init import api_key",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:     return proxies, verify",
          "109: def print_version():",
          "110:     \"\"\"Print MobSF Version.\"\"\"",
          "111:     logger.info(settings.BANNER)",
          "112:     ver = settings.MOBSF_VER",
          "113:     logger.info('Author: Ajin Abraham | opensecurity.in')",
          "114:     if platform.system() == 'Windows':",
          "115:         logger.info('Mobile Security Framework %s', ver)",
          "117:         print('Default Credentials: mobsf/mobsf')",
          "118:     else:",
          "119:         logger.info(",
          "120:             '%sMobile Security Framework %s%s', Color.GREY, ver, Color.END)",
          "122:         print(f'Default Credentials: {Color.BOLD}mobsf/mobsf{Color.END}')",
          "123:     os = platform.system()",
          "124:     pltfm = platform.platform()",
          "",
          "[Removed Lines]",
          "94: def api_key():",
          "95:     \"\"\"Print REST API Key.\"\"\"",
          "96:     if os.environ.get('MOBSF_API_KEY'):",
          "97:         logger.info('\\nAPI Key read from environment variable')",
          "98:         return os.environ['MOBSF_API_KEY']",
          "100:     secret_file = os.path.join(settings.MobSF_HOME, 'secret')",
          "101:     if is_file_exists(secret_file):",
          "102:         try:",
          "103:             _api_key = open(secret_file).read().strip()",
          "104:             return gen_sha256_hash(_api_key)",
          "105:         except Exception:",
          "106:             logger.exception('Cannot Read API Key')",
          "116:         print('REST API Key: ' + api_key())",
          "121:         print(f'REST API Key: {Color.BOLD}{api_key()}{Color.END}')",
          "",
          "[Added Lines]",
          "100:     mobsf_api_key = api_key(settings.MOBSF_HOME)",
          "103:         print(f'REST API Key: {mobsf_api_key}')",
          "108:         print(f'REST API Key: {Color.BOLD}{mobsf_api_key}{Color.END}')",
          "",
          "---------------"
        ],
        "mobsf/MobSF/views/api/api_middleware.py||mobsf/MobSF/views/api/api_middleware.py": [
          "File: mobsf/MobSF/views/api/api_middleware.py -> mobsf/MobSF/views/api/api_middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # -*- coding: utf_8 -*-",
          "2: \"\"\"REST API Middleware.\"\"\"",
          "3: from django.http import JsonResponse",
          "4: from django.utils.deprecation import MiddlewareMixin",
          "8: OK = 200",
          "",
          "[Removed Lines]",
          "6: from mobsf.MobSF.utils import api_key",
          "",
          "[Added Lines]",
          "3: from hmac import compare_digest",
          "7: from django.conf import settings",
          "9: from mobsf.MobSF.init import api_key",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23: def api_auth(meta):",
          "24:     \"\"\"Check if API Key Matches.\"\"\"",
          "25:     if 'HTTP_X_MOBSF_API_KEY' in meta:",
          "27:     elif 'HTTP_AUTHORIZATION' in meta:",
          "29:     return False",
          "",
          "[Removed Lines]",
          "26:         return bool(api_key() == meta['HTTP_X_MOBSF_API_KEY'])",
          "28:         return bool(api_key() == meta['HTTP_AUTHORIZATION'])",
          "",
          "[Added Lines]",
          "28:     mobsf_api_key = api_key(settings.MOBSF_HOME)",
          "30:         return compare_digest(mobsf_api_key, meta['HTTP_X_MOBSF_API_KEY'])",
          "32:         return compare_digest(mobsf_api_key, meta['HTTP_AUTHORIZATION'])",
          "",
          "---------------"
        ],
        "mobsf/MobSF/views/home.py||mobsf/MobSF/views/home.py": [
          "File: mobsf/MobSF/views/home.py -> mobsf/MobSF/views/home.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: from mobsf.MobSF.forms import FormUtil, UploadFileForm",
          "24: from mobsf.MobSF.utils import (",
          "25:     MD5_REGEX,",
          "27:     get_md5,",
          "28:     is_dir_exists,",
          "29:     is_file_exists,",
          "",
          "[Removed Lines]",
          "26:     api_key,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:     print_n_send_error_response,",
          "34:     python_dict,",
          "35: )",
          "36: from mobsf.MobSF.views.helpers import FileType",
          "37: from mobsf.MobSF.views.scanning import Scanning",
          "38: from mobsf.MobSF.views.apk_downloader import apk_download",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: from mobsf.MobSF.init import api_key",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "195:         if (settings.DISABLE_AUTHENTICATION == '1'",
          "196:                 or request.user.is_staff",
          "197:                 or request.user.groups.filter(name=MAINTAINER_GROUP).exists()):",
          "199:     except Exception:",
          "200:         logger.exception('[ERROR] Failed to get API key')",
          "201:     context = {",
          "",
          "[Removed Lines]",
          "198:             key = api_key()",
          "",
          "[Added Lines]",
          "198:             key = api_key(settings.MOBSF_HOME)",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/tests.py||mobsf/StaticAnalyzer/tests.py": [
          "File: mobsf/StaticAnalyzer/tests.py -> mobsf/StaticAnalyzer/tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import os",
          "5: import platform",
          "7: from django.conf import settings",
          "8: from django.http import HttpResponse",
          "9: from django.test import Client, TestCase",
          "13: logger = logging.getLogger(__name__)",
          "15: RESCAN = False",
          "",
          "[Removed Lines]",
          "11: from mobsf.MobSF.utils import api_key",
          "",
          "[Added Lines]",
          "7: from mobsf.MobSF.init import api_key",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175: def api_test():",
          "176:     \"\"\"View for Handling REST API Test.\"\"\"",
          "177:     logger.info('\\nRunning REST API Unit test')",
          "179:     try:",
          "180:         uploaded = []",
          "181:         logger.info('Running Test on Upload API')",
          "",
          "[Removed Lines]",
          "178:     auth = api_key()",
          "",
          "[Added Lines]",
          "178:     auth = api_key(settings.MOBSF_HOME)",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/views/source_tree.py||mobsf/StaticAnalyzer/views/android/views/source_tree.py": [
          "File: mobsf/StaticAnalyzer/views/android/views/source_tree.py -> mobsf/StaticAnalyzer/views/android/views/source_tree.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:     render,",
          "11: )",
          "13: from mobsf.MobSF.utils import (",
          "15:     is_md5,",
          "16:     print_n_send_error_response,",
          "17: )",
          "",
          "[Removed Lines]",
          "14:     api_key,",
          "",
          "[Added Lines]",
          "13: from mobsf.MobSF.init import api_key",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:             'hash': md5,",
          "72:             'source_type': typ,",
          "73:             'version': settings.MOBSF_VER,",
          "75:         }",
          "76:         template = 'static_analysis/source_tree.html'",
          "77:         return render(request, template, context)",
          "",
          "[Removed Lines]",
          "74:             'api_key': api_key(),",
          "",
          "[Added Lines]",
          "74:             'api_key': api_key(settings.MOBSF_HOME),",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/ios/icon_analysis.py||mobsf/StaticAnalyzer/views/ios/icon_analysis.py": [
          "File: mobsf/StaticAnalyzer/views/ios/icon_analysis.py -> mobsf/StaticAnalyzer/views/ios/icon_analysis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:             return",
          "38:         icon_file = icons.pop()",
          "39:         outfile = Path(settings.DWD_DIR) / f'{md5}-icon.png'",
          "41:             args = ['xcrun', '-sdk', 'iphoneos', 'pngcrush', '-q',",
          "42:                     '-revert-iphone-optimizations',",
          "43:                     icon_file, outfile.as_posix()]",
          "46:             try:",
          "47:                 out = subprocess.run(args, capture_output=True)",
          "48:                 if b'libpng error:' in out.stdout:",
          "",
          "[Removed Lines]",
          "40:         if platform.system() == 'Darwin':",
          "44:             # Uncrush PNG. CgBI -> PNG, Mac only",
          "45:             # https://iphonedevwiki.net/index.php/CgBI_file_format",
          "",
          "[Added Lines]",
          "40:         tools_dir = Path(settings.BASE_DIR) / 'StaticAnalyzer' / 'tools' / 'ios'",
          "41:         cgbipng_bin = None",
          "42:         arch = platform.machine()",
          "43:         system = platform.system()",
          "44:         # Uncrush PNG. CgBI -> PNG",
          "45:         # https://iphonedevwiki.net/index.php/CgBI_file_format",
          "46:         if system == 'Darwin':",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:                     raise ValueError('PNG is not CgBI')",
          "51:             except Exception:",
          "52:                 shutil.copy2(icon_file, outfile.as_posix())",
          "53:         else:",
          "54:             shutil.copy2(icon_file, outfile.as_posix())",
          "55:         app_dict['icon_path'] = outfile.name",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:         elif system == 'Windows' and arch in ('AMD64', 'x86'):",
          "58:             cgbipng_bin = 'CgbiPngFix.exe'",
          "59:         elif system == 'Linux' and arch == 'x86_64':",
          "60:             cgbipng_bin = 'CgbiPngFix_amd64'",
          "61:         elif system == 'Linux' and arch == 'aarch64':",
          "62:             cgbipng_bin = 'CgbiPngFix_arm64'",
          "63:         if cgbipng_bin:",
          "64:             cbin = tools_dir / 'CgbiPngFix' / cgbipng_bin",
          "65:             args = [cbin.as_posix(), '-i',",
          "66:                     icon_file, '-o', outfile.as_posix()]",
          "67:             try:",
          "68:                 out = subprocess.run(args, capture_output=True)",
          "69:             except Exception:",
          "70:                 # Fails or PNG is not crushed",
          "71:                 shutil.copy2(icon_file, outfile.as_posix())",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/ios/rules/ipa_rules.py||mobsf/StaticAnalyzer/views/ios/rules/ipa_rules.py": [
          "File: mobsf/StaticAnalyzer/views/ios/rules/ipa_rules.py -> mobsf/StaticAnalyzer/views/ios/rules/ipa_rules.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: \"\"\"IPA Binary Analysis Rules.\"\"\"",
          "3: from libsast.standards import get_standards",
          "6: STDS = get_standards()",
          "7: IPA_RULES = [",
          "8:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: HIGH = 'high'",
          "6: WARNING = 'warning'",
          "7: INFO = 'info'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:             rb'\\b_wcslen\\n\\b|\\b_wcsncat\\n\\b|\\b_wcsncpy\\n\\b|\\b_wcstok\\n\\b|'",
          "21:             rb'\\b_wmemcpy\\n\\b|\\b_fopen\\n\\b|\\b_chmod\\n\\b|\\b_chown\\n\\b|'",
          "22:             rb'\\b_stat\\n\\b|\\b_mktemp\\n\\b'),",
          "24:         'input_case': 'exact',",
          "25:         'cvss': 6,",
          "26:         'cwe': STDS['cwe']['cwe-676'],",
          "",
          "[Removed Lines]",
          "23:         'severity': 'high',",
          "",
          "[Added Lines]",
          "25:         'severity': WARNING,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:             rb'\\bkCCAlgorithmRC4\\b|'",
          "40:             rb'\\bkCCOptionECBMode\\b|'",
          "41:             rb'\\bkCCOptionCBCMode\\b'),",
          "43:         'input_case': 'exact',",
          "44:         'cvss': 3,",
          "45:         'cwe': STDS['cwe']['cwe-327'],",
          "",
          "[Removed Lines]",
          "42:         'severity': 'high',",
          "",
          "[Added Lines]",
          "44:         'severity': WARNING,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:             rb'SecTrustSetVerifyDate\\b|\\bSecCertificateRef\\b|\\b'",
          "89:             rb'SecIdentityRef\\b|\\bSecKeyRef\\b|\\bSecPolicyRef\\b|\\b'",
          "90:             rb'SecTrustRef\\b'),",
          "92:         'input_case': 'exact',",
          "93:         'cvss': 0,",
          "94:         'cwe': '',",
          "",
          "[Removed Lines]",
          "91:         'severity': 'info',",
          "",
          "[Added Lines]",
          "93:         'severity': INFO,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "113:             rb'CC_SHA1_Update\\b|\\b'",
          "114:             rb'CC_SHA1_Final\\b|\\bCC_SHA1\\b|\\bSHA1_Init\\b|\\b'",
          "115:             rb'SHA1_Update\\b|\\bSHA1_Final\\b'),",
          "117:         'input_case': 'exact',",
          "118:         'cvss': 3,",
          "119:         'cwe': STDS['cwe']['cwe-327'],",
          "",
          "[Removed Lines]",
          "116:         'severity': 'high',",
          "",
          "[Added Lines]",
          "118:         'severity': WARNING,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "140:             rb'CC_SHA512_Update\\b|\\bCC_SHA512_Final\\b|\\b'",
          "141:             rb'CC_SHA512\\b|\\bSHA512_Init\\b|\\b'",
          "142:             rb'SHA512_Update\\b|\\bSHA512_Final\\b'),",
          "144:         'input_case': 'exact',",
          "145:         'cvss': 0,",
          "146:         'cwe': '',",
          "",
          "[Removed Lines]",
          "143:         'severity': 'info',",
          "",
          "[Added Lines]",
          "145:         'severity': INFO,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "154:             'insecure Random function(s) {}'),",
          "155:         'type': 'Regex',",
          "156:         'pattern': rb'\\b_srand\\n\\b|\\b_random\\n\\b',",
          "158:         'input_case': 'exact',",
          "159:         'cvss': 3,",
          "160:         'cwe': STDS['cwe']['cwe-330'],",
          "",
          "[Removed Lines]",
          "157:         'severity': 'high',",
          "",
          "[Added Lines]",
          "159:         'severity': WARNING,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "167:             'The binary may use {} function for logging.'),",
          "168:         'type': 'Regex',",
          "169:         'pattern': rb'\\b_NSLog\\n\\b',",
          "171:         'input_case': 'exact',",
          "172:         'cvss': 7.5,",
          "173:         'cwe': STDS['cwe']['cwe-532'],",
          "",
          "[Removed Lines]",
          "170:         'severity': 'info',",
          "",
          "[Added Lines]",
          "172:         'severity': INFO,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "180:             'The binary may use {} function instead of calloc'),",
          "181:         'type': 'Regex',",
          "182:         'pattern': rb'_malloc\\n',",
          "184:         'input_case': 'exact',",
          "185:         'cvss': 2,",
          "186:         'cwe': STDS['cwe']['cwe-789'],",
          "",
          "[Removed Lines]",
          "183:         'severity': 'high',",
          "",
          "[Added Lines]",
          "185:         'severity': WARNING,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "197:             ' from AppStore.'),",
          "198:         'type': 'Regex',",
          "199:         'pattern': rb'\\b_ptrace\\b',",
          "201:         'input_case': 'exact',",
          "202:         'cvss': 0,",
          "203:         'cwe': '',",
          "",
          "[Removed Lines]",
          "200:         'severity': 'warning',",
          "",
          "[Added Lines]",
          "202:         'severity': WARNING,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "209:         'detailed_desc': 'The binary may use UIWebView Component.',",
          "210:         'type': 'Regex',",
          "211:         'pattern': b'UIWebView',",
          "213:         'input_case': 'exact',",
          "214:         'cvss': 0,",
          "215:         'cwe': '',",
          "",
          "[Removed Lines]",
          "212:         'severity': 'info',",
          "",
          "[Added Lines]",
          "214:         'severity': INFO,",
          "",
          "---------------"
        ],
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "2387: [[package]]",
          "2388: name = \"rpds-py\"",
          "2390: description = \"Python bindings to Rust's persistent data structures (rpds)\"",
          "2391: optional = false",
          "2393: files = [",
          "2497: ]",
          "2499: [[package]]",
          "",
          "[Removed Lines]",
          "2389: version = \"0.20.1\"",
          "2392: python-versions = \">=3.8\"",
          "2394:     {file = \"rpds_py-0.20.1-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:a649dfd735fff086e8a9d0503a9f0c7d01b7912a333c7ae77e1515c08c146dad\"},",
          "2395:     {file = \"rpds_py-0.20.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:f16bc1334853e91ddaaa1217045dd7be166170beec337576818461268a3de67f\"},",
          "2396:     {file = \"rpds_py-0.20.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:14511a539afee6f9ab492b543060c7491c99924314977a55c98bfa2ee29ce78c\"},",
          "2397:     {file = \"rpds_py-0.20.1-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:3ccb8ac2d3c71cda472b75af42818981bdacf48d2e21c36331b50b4f16930163\"},",
          "2398:     {file = \"rpds_py-0.20.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c142b88039b92e7e0cb2552e8967077e3179b22359e945574f5e2764c3953dcf\"},",
          "2399:     {file = \"rpds_py-0.20.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f19169781dddae7478a32301b499b2858bc52fc45a112955e798ee307e294977\"},",
          "2400:     {file = \"rpds_py-0.20.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:13c56de6518e14b9bf6edde23c4c39dac5b48dcf04160ea7bce8fca8397cdf86\"},",
          "2401:     {file = \"rpds_py-0.20.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:925d176a549f4832c6f69fa6026071294ab5910e82a0fe6c6228fce17b0706bd\"},",
          "2402:     {file = \"rpds_py-0.20.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:78f0b6877bfce7a3d1ff150391354a410c55d3cdce386f862926a4958ad5ab7e\"},",
          "2403:     {file = \"rpds_py-0.20.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:3dd645e2b0dcb0fd05bf58e2e54c13875847687d0b71941ad2e757e5d89d4356\"},",
          "2404:     {file = \"rpds_py-0.20.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:4f676e21db2f8c72ff0936f895271e7a700aa1f8d31b40e4e43442ba94973899\"},",
          "2405:     {file = \"rpds_py-0.20.1-cp310-none-win32.whl\", hash = \"sha256:648386ddd1e19b4a6abab69139b002bc49ebf065b596119f8f37c38e9ecee8ff\"},",
          "2406:     {file = \"rpds_py-0.20.1-cp310-none-win_amd64.whl\", hash = \"sha256:d9ecb51120de61e4604650666d1f2b68444d46ae18fd492245a08f53ad2b7711\"},",
          "2407:     {file = \"rpds_py-0.20.1-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:762703bdd2b30983c1d9e62b4c88664df4a8a4d5ec0e9253b0231171f18f6d75\"},",
          "2408:     {file = \"rpds_py-0.20.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:0b581f47257a9fce535c4567782a8976002d6b8afa2c39ff616edf87cbeff712\"},",
          "2409:     {file = \"rpds_py-0.20.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:842c19a6ce894493563c3bd00d81d5100e8e57d70209e84d5491940fdb8b9e3a\"},",
          "2410:     {file = \"rpds_py-0.20.1-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:42cbde7789f5c0bcd6816cb29808e36c01b960fb5d29f11e052215aa85497c93\"},",
          "2411:     {file = \"rpds_py-0.20.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6c8e9340ce5a52f95fa7d3b552b35c7e8f3874d74a03a8a69279fd5fca5dc751\"},",
          "2412:     {file = \"rpds_py-0.20.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8ba6f89cac95c0900d932c9efb7f0fb6ca47f6687feec41abcb1bd5e2bd45535\"},",
          "2413:     {file = \"rpds_py-0.20.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4a916087371afd9648e1962e67403c53f9c49ca47b9680adbeef79da3a7811b0\"},",
          "2414:     {file = \"rpds_py-0.20.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:200a23239781f46149e6a415f1e870c5ef1e712939fe8fa63035cd053ac2638e\"},",
          "2415:     {file = \"rpds_py-0.20.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:58b1d5dd591973d426cbb2da5e27ba0339209832b2f3315928c9790e13f159e8\"},",
          "2416:     {file = \"rpds_py-0.20.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:6b73c67850ca7cae0f6c56f71e356d7e9fa25958d3e18a64927c2d930859b8e4\"},",
          "2417:     {file = \"rpds_py-0.20.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:d8761c3c891cc51e90bc9926d6d2f59b27beaf86c74622c8979380a29cc23ac3\"},",
          "2418:     {file = \"rpds_py-0.20.1-cp311-none-win32.whl\", hash = \"sha256:cd945871335a639275eee904caef90041568ce3b42f402c6959b460d25ae8732\"},",
          "2419:     {file = \"rpds_py-0.20.1-cp311-none-win_amd64.whl\", hash = \"sha256:7e21b7031e17c6b0e445f42ccc77f79a97e2687023c5746bfb7a9e45e0921b84\"},",
          "2420:     {file = \"rpds_py-0.20.1-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:36785be22066966a27348444b40389f8444671630063edfb1a2eb04318721e17\"},",
          "2421:     {file = \"rpds_py-0.20.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:142c0a5124d9bd0e2976089484af5c74f47bd3298f2ed651ef54ea728d2ea42c\"},",
          "2422:     {file = \"rpds_py-0.20.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dbddc10776ca7ebf2a299c41a4dde8ea0d8e3547bfd731cb87af2e8f5bf8962d\"},",
          "2423:     {file = \"rpds_py-0.20.1-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:15a842bb369e00295392e7ce192de9dcbf136954614124a667f9f9f17d6a216f\"},",
          "2424:     {file = \"rpds_py-0.20.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:be5ef2f1fc586a7372bfc355986226484e06d1dc4f9402539872c8bb99e34b01\"},",
          "2425:     {file = \"rpds_py-0.20.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:dbcf360c9e3399b056a238523146ea77eeb2a596ce263b8814c900263e46031a\"},",
          "2426:     {file = \"rpds_py-0.20.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ecd27a66740ffd621d20b9a2f2b5ee4129a56e27bfb9458a3bcc2e45794c96cb\"},",
          "2427:     {file = \"rpds_py-0.20.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:d0b937b2a1988f184a3e9e577adaa8aede21ec0b38320d6009e02bd026db04fa\"},",
          "2428:     {file = \"rpds_py-0.20.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6889469bfdc1eddf489729b471303739bf04555bb151fe8875931f8564309afc\"},",
          "2429:     {file = \"rpds_py-0.20.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:19b73643c802f4eaf13d97f7855d0fb527fbc92ab7013c4ad0e13a6ae0ed23bd\"},",
          "2430:     {file = \"rpds_py-0.20.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:3c6afcf2338e7f374e8edc765c79fbcb4061d02b15dd5f8f314a4af2bdc7feb5\"},",
          "2431:     {file = \"rpds_py-0.20.1-cp312-none-win32.whl\", hash = \"sha256:dc73505153798c6f74854aba69cc75953888cf9866465196889c7cdd351e720c\"},",
          "2432:     {file = \"rpds_py-0.20.1-cp312-none-win_amd64.whl\", hash = \"sha256:8bbe951244a838a51289ee53a6bae3a07f26d4e179b96fc7ddd3301caf0518eb\"},",
          "2433:     {file = \"rpds_py-0.20.1-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:6ca91093a4a8da4afae7fe6a222c3b53ee4eef433ebfee4d54978a103435159e\"},",
          "2434:     {file = \"rpds_py-0.20.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:b9c2fe36d1f758b28121bef29ed1dee9b7a2453e997528e7d1ac99b94892527c\"},",
          "2435:     {file = \"rpds_py-0.20.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f009c69bc8c53db5dfab72ac760895dc1f2bc1b62ab7408b253c8d1ec52459fc\"},",
          "2436:     {file = \"rpds_py-0.20.1-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:6740a3e8d43a32629bb9b009017ea5b9e713b7210ba48ac8d4cb6d99d86c8ee8\"},",
          "2437:     {file = \"rpds_py-0.20.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:32b922e13d4c0080d03e7b62991ad7f5007d9cd74e239c4b16bc85ae8b70252d\"},",
          "2438:     {file = \"rpds_py-0.20.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fe00a9057d100e69b4ae4a094203a708d65b0f345ed546fdef86498bf5390982\"},",
          "2439:     {file = \"rpds_py-0.20.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:49fe9b04b6fa685bd39237d45fad89ba19e9163a1ccaa16611a812e682913496\"},",
          "2440:     {file = \"rpds_py-0.20.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:aa7ac11e294304e615b43f8c441fee5d40094275ed7311f3420d805fde9b07b4\"},",
          "2441:     {file = \"rpds_py-0.20.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:6aa97af1558a9bef4025f8f5d8c60d712e0a3b13a2fe875511defc6ee77a1ab7\"},",
          "2442:     {file = \"rpds_py-0.20.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:483b29f6f7ffa6af845107d4efe2e3fa8fb2693de8657bc1849f674296ff6a5a\"},",
          "2443:     {file = \"rpds_py-0.20.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:37fe0f12aebb6a0e3e17bb4cd356b1286d2d18d2e93b2d39fe647138458b4bcb\"},",
          "2444:     {file = \"rpds_py-0.20.1-cp313-none-win32.whl\", hash = \"sha256:a624cc00ef2158e04188df5e3016385b9353638139a06fb77057b3498f794782\"},",
          "2445:     {file = \"rpds_py-0.20.1-cp313-none-win_amd64.whl\", hash = \"sha256:b71b8666eeea69d6363248822078c075bac6ed135faa9216aa85f295ff009b1e\"},",
          "2446:     {file = \"rpds_py-0.20.1-cp38-cp38-macosx_10_12_x86_64.whl\", hash = \"sha256:5b48e790e0355865197ad0aca8cde3d8ede347831e1959e158369eb3493d2191\"},",
          "2447:     {file = \"rpds_py-0.20.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:3e310838a5801795207c66c73ea903deda321e6146d6f282e85fa7e3e4854804\"},",
          "2448:     {file = \"rpds_py-0.20.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2249280b870e6a42c0d972339e9cc22ee98730a99cd7f2f727549af80dd5a963\"},",
          "2449:     {file = \"rpds_py-0.20.1-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:e79059d67bea28b53d255c1437b25391653263f0e69cd7dec170d778fdbca95e\"},",
          "2450:     {file = \"rpds_py-0.20.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2b431c777c9653e569986ecf69ff4a5dba281cded16043d348bf9ba505486f36\"},",
          "2451:     {file = \"rpds_py-0.20.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:da584ff96ec95e97925174eb8237e32f626e7a1a97888cdd27ee2f1f24dd0ad8\"},",
          "2452:     {file = \"rpds_py-0.20.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:02a0629ec053fc013808a85178524e3cb63a61dbc35b22499870194a63578fb9\"},",
          "2453:     {file = \"rpds_py-0.20.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:fbf15aff64a163db29a91ed0868af181d6f68ec1a3a7d5afcfe4501252840bad\"},",
          "2454:     {file = \"rpds_py-0.20.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:07924c1b938798797d60c6308fa8ad3b3f0201802f82e4a2c41bb3fafb44cc28\"},",
          "2455:     {file = \"rpds_py-0.20.1-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:4a5a844f68776a7715ecb30843b453f07ac89bad393431efbf7accca3ef599c1\"},",
          "2456:     {file = \"rpds_py-0.20.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:518d2ca43c358929bf08f9079b617f1c2ca6e8848f83c1225c88caeac46e6cbc\"},",
          "2457:     {file = \"rpds_py-0.20.1-cp38-none-win32.whl\", hash = \"sha256:3aea7eed3e55119635a74bbeb80b35e776bafccb70d97e8ff838816c124539f1\"},",
          "2458:     {file = \"rpds_py-0.20.1-cp38-none-win_amd64.whl\", hash = \"sha256:7dca7081e9a0c3b6490a145593f6fe3173a94197f2cb9891183ef75e9d64c425\"},",
          "2459:     {file = \"rpds_py-0.20.1-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:b41b6321805c472f66990c2849e152aff7bc359eb92f781e3f606609eac877ad\"},",
          "2460:     {file = \"rpds_py-0.20.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:0a90c373ea2975519b58dece25853dbcb9779b05cc46b4819cb1917e3b3215b6\"},",
          "2461:     {file = \"rpds_py-0.20.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:16d4477bcb9fbbd7b5b0e4a5d9b493e42026c0bf1f06f723a9353f5153e75d30\"},",
          "2462:     {file = \"rpds_py-0.20.1-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:84b8382a90539910b53a6307f7c35697bc7e6ffb25d9c1d4e998a13e842a5e83\"},",
          "2463:     {file = \"rpds_py-0.20.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4888e117dd41b9d34194d9e31631af70d3d526efc363085e3089ab1a62c32ed1\"},",
          "2464:     {file = \"rpds_py-0.20.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5265505b3d61a0f56618c9b941dc54dc334dc6e660f1592d112cd103d914a6db\"},",
          "2465:     {file = \"rpds_py-0.20.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e75ba609dba23f2c95b776efb9dd3f0b78a76a151e96f96cc5b6b1b0004de66f\"},",
          "2466:     {file = \"rpds_py-0.20.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:1791ff70bc975b098fe6ecf04356a10e9e2bd7dc21fa7351c1742fdeb9b4966f\"},",
          "2467:     {file = \"rpds_py-0.20.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:d126b52e4a473d40232ec2052a8b232270ed1f8c9571aaf33f73a14cc298c24f\"},",
          "2468:     {file = \"rpds_py-0.20.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:c14937af98c4cc362a1d4374806204dd51b1e12dded1ae30645c298e5a5c4cb1\"},",
          "2469:     {file = \"rpds_py-0.20.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:3d089d0b88996df627693639d123c8158cff41c0651f646cd8fd292c7da90eaf\"},",
          "2470:     {file = \"rpds_py-0.20.1-cp39-none-win32.whl\", hash = \"sha256:653647b8838cf83b2e7e6a0364f49af96deec64d2a6578324db58380cff82aca\"},",
          "2471:     {file = \"rpds_py-0.20.1-cp39-none-win_amd64.whl\", hash = \"sha256:fa41a64ac5b08b292906e248549ab48b69c5428f3987b09689ab2441f267d04d\"},",
          "2472:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:7a07ced2b22f0cf0b55a6a510078174c31b6d8544f3bc00c2bcee52b3d613f74\"},",
          "2473:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:68cb0a499f2c4a088fd2f521453e22ed3527154136a855c62e148b7883b99f9a\"},",
          "2474:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fa3060d885657abc549b2a0f8e1b79699290e5d83845141717c6c90c2df38311\"},",
          "2475:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:95f3b65d2392e1c5cec27cff08fdc0080270d5a1a4b2ea1d51d5f4a2620ff08d\"},",
          "2476:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2cc3712a4b0b76a1d45a9302dd2f53ff339614b1c29603a911318f2357b04dd2\"},",
          "2477:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5d4eea0761e37485c9b81400437adb11c40e13ef513375bbd6973e34100aeb06\"},",
          "2478:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7f5179583d7a6cdb981151dd349786cbc318bab54963a192692d945dd3f6435d\"},",
          "2479:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:2fbb0ffc754490aff6dabbf28064be47f0f9ca0b9755976f945214965b3ace7e\"},",
          "2480:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:a94e52537a0e0a85429eda9e49f272ada715506d3b2431f64b8a3e34eb5f3e75\"},",
          "2481:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:92b68b79c0da2a980b1c4197e56ac3dd0c8a149b4603747c4378914a68706979\"},",
          "2482:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:93da1d3db08a827eda74356f9f58884adb254e59b6664f64cc04cdff2cc19b0d\"},",
          "2483:     {file = \"rpds_py-0.20.1-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:754bbed1a4ca48479e9d4182a561d001bbf81543876cdded6f695ec3d465846b\"},",
          "2484:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:ca449520e7484534a2a44faf629362cae62b660601432d04c482283c47eaebab\"},",
          "2485:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:9c4cb04a16b0f199a8c9bf807269b2f63b7b5b11425e4a6bd44bd6961d28282c\"},",
          "2486:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bb63804105143c7e24cee7db89e37cb3f3941f8e80c4379a0b355c52a52b6780\"},",
          "2487:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:55cd1fa4ecfa6d9f14fbd97ac24803e6f73e897c738f771a9fe038f2f11ff07c\"},",
          "2488:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:0f8f741b6292c86059ed175d80eefa80997125b7c478fb8769fd9ac8943a16c0\"},",
          "2489:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0fc212779bf8411667234b3cdd34d53de6c2b8b8b958e1e12cb473a5f367c338\"},",
          "2490:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0ad56edabcdb428c2e33bbf24f255fe2b43253b7d13a2cdbf05de955217313e6\"},",
          "2491:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:0a3a1e9ee9728b2c1734f65d6a1d376c6f2f6fdcc13bb007a08cc4b1ff576dc5\"},",
          "2492:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:e13de156137b7095442b288e72f33503a469aa1980ed856b43c353ac86390519\"},",
          "2493:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:07f59760ef99f31422c49038964b31c4dfcfeb5d2384ebfc71058a7c9adae2d2\"},",
          "2494:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:59240685e7da61fb78f65a9f07f8108e36a83317c53f7b276b4175dc44151684\"},",
          "2495:     {file = \"rpds_py-0.20.1-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:83cba698cfb3c2c5a7c3c6bac12fe6c6a51aae69513726be6411076185a8b24a\"},",
          "2496:     {file = \"rpds_py-0.20.1.tar.gz\", hash = \"sha256:e1791c4aabd117653530dccd24108fa03cc6baf21f58b950d0a73c3b3b29a350\"},",
          "",
          "[Added Lines]",
          "2389: version = \"0.21.0\"",
          "2392: python-versions = \">=3.9\"",
          "2394:     {file = \"rpds_py-0.21.0-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:a017f813f24b9df929674d0332a374d40d7f0162b326562daae8066b502d0590\"},",
          "2395:     {file = \"rpds_py-0.21.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:20cc1ed0bcc86d8e1a7e968cce15be45178fd16e2ff656a243145e0b439bd250\"},",
          "2396:     {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ad116dda078d0bc4886cb7840e19811562acdc7a8e296ea6ec37e70326c1b41c\"},",
          "2397:     {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:808f1ac7cf3b44f81c9475475ceb221f982ef548e44e024ad5f9e7060649540e\"},",
          "2398:     {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:de552f4a1916e520f2703ec474d2b4d3f86d41f353e7680b597512ffe7eac5d0\"},",
          "2399:     {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:efec946f331349dfc4ae9d0e034c263ddde19414fe5128580f512619abed05f1\"},",
          "2400:     {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b80b4690bbff51a034bfde9c9f6bf9357f0a8c61f548942b80f7b66356508bf5\"},",
          "2401:     {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:085ed25baac88953d4283e5b5bd094b155075bb40d07c29c4f073e10623f9f2e\"},",
          "2402:     {file = \"rpds_py-0.21.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:daa8efac2a1273eed2354397a51216ae1e198ecbce9036fba4e7610b308b6153\"},",
          "2403:     {file = \"rpds_py-0.21.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:95a5bad1ac8a5c77b4e658671642e4af3707f095d2b78a1fdd08af0dfb647624\"},",
          "2404:     {file = \"rpds_py-0.21.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:3e53861b29a13d5b70116ea4230b5f0f3547b2c222c5daa090eb7c9c82d7f664\"},",
          "2405:     {file = \"rpds_py-0.21.0-cp310-none-win32.whl\", hash = \"sha256:ea3a6ac4d74820c98fcc9da4a57847ad2cc36475a8bd9683f32ab6d47a2bd682\"},",
          "2406:     {file = \"rpds_py-0.21.0-cp310-none-win_amd64.whl\", hash = \"sha256:b8f107395f2f1d151181880b69a2869c69e87ec079c49c0016ab96860b6acbe5\"},",
          "2407:     {file = \"rpds_py-0.21.0-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:5555db3e618a77034954b9dc547eae94166391a98eb867905ec8fcbce1308d95\"},",
          "2408:     {file = \"rpds_py-0.21.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:97ef67d9bbc3e15584c2f3c74bcf064af36336c10d2e21a2131e123ce0f924c9\"},",
          "2409:     {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4ab2c2a26d2f69cdf833174f4d9d86118edc781ad9a8fa13970b527bf8236027\"},",
          "2410:     {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:4e8921a259f54bfbc755c5bbd60c82bb2339ae0324163f32868f63f0ebb873d9\"},",
          "2411:     {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8a7ff941004d74d55a47f916afc38494bd1cfd4b53c482b77c03147c91ac0ac3\"},",
          "2412:     {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5145282a7cd2ac16ea0dc46b82167754d5e103a05614b724457cffe614f25bd8\"},",
          "2413:     {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:de609a6f1b682f70bb7163da745ee815d8f230d97276db049ab447767466a09d\"},",
          "2414:     {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:40c91c6e34cf016fa8e6b59d75e3dbe354830777fcfd74c58b279dceb7975b75\"},",
          "2415:     {file = \"rpds_py-0.21.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:d2132377f9deef0c4db89e65e8bb28644ff75a18df5293e132a8d67748397b9f\"},",
          "2416:     {file = \"rpds_py-0.21.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:0a9e0759e7be10109645a9fddaaad0619d58c9bf30a3f248a2ea57a7c417173a\"},",
          "2417:     {file = \"rpds_py-0.21.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:9e20da3957bdf7824afdd4b6eeb29510e83e026473e04952dca565170cd1ecc8\"},",
          "2418:     {file = \"rpds_py-0.21.0-cp311-none-win32.whl\", hash = \"sha256:f71009b0d5e94c0e86533c0b27ed7cacc1239cb51c178fd239c3cfefefb0400a\"},",
          "2419:     {file = \"rpds_py-0.21.0-cp311-none-win_amd64.whl\", hash = \"sha256:e168afe6bf6ab7ab46c8c375606298784ecbe3ba31c0980b7dcbb9631dcba97e\"},",
          "2420:     {file = \"rpds_py-0.21.0-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:30b912c965b2aa76ba5168fd610087bad7fcde47f0a8367ee8f1876086ee6d1d\"},",
          "2421:     {file = \"rpds_py-0.21.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ca9989d5d9b1b300bc18e1801c67b9f6d2c66b8fd9621b36072ed1df2c977f72\"},",
          "2422:     {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6f54e7106f0001244a5f4cf810ba8d3f9c542e2730821b16e969d6887b664266\"},",
          "2423:     {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:fed5dfefdf384d6fe975cc026886aece4f292feaf69d0eeb716cfd3c5a4dd8be\"},",
          "2424:     {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:590ef88db231c9c1eece44dcfefd7515d8bf0d986d64d0caf06a81998a9e8cab\"},",
          "2425:     {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f983e4c2f603c95dde63df633eec42955508eefd8d0f0e6d236d31a044c882d7\"},",
          "2426:     {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b229ce052ddf1a01c67d68166c19cb004fb3612424921b81c46e7ea7ccf7c3bf\"},",
          "2427:     {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:ebf64e281a06c904a7636781d2e973d1f0926a5b8b480ac658dc0f556e7779f4\"},",
          "2428:     {file = \"rpds_py-0.21.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:998a8080c4495e4f72132f3d66ff91f5997d799e86cec6ee05342f8f3cda7dca\"},",
          "2429:     {file = \"rpds_py-0.21.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:98486337f7b4f3c324ab402e83453e25bb844f44418c066623db88e4c56b7c7b\"},",
          "2430:     {file = \"rpds_py-0.21.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:a78d8b634c9df7f8d175451cfeac3810a702ccb85f98ec95797fa98b942cea11\"},",
          "2431:     {file = \"rpds_py-0.21.0-cp312-none-win32.whl\", hash = \"sha256:a58ce66847711c4aa2ecfcfaff04cb0327f907fead8945ffc47d9407f41ff952\"},",
          "2432:     {file = \"rpds_py-0.21.0-cp312-none-win_amd64.whl\", hash = \"sha256:e860f065cc4ea6f256d6f411aba4b1251255366e48e972f8a347cf88077b24fd\"},",
          "2433:     {file = \"rpds_py-0.21.0-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:ee4eafd77cc98d355a0d02f263efc0d3ae3ce4a7c24740010a8b4012bbb24937\"},",
          "2434:     {file = \"rpds_py-0.21.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:688c93b77e468d72579351a84b95f976bd7b3e84aa6686be6497045ba84be560\"},",
          "2435:     {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c38dbf31c57032667dd5a2f0568ccde66e868e8f78d5a0d27dcc56d70f3fcd3b\"},",
          "2436:     {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:2d6129137f43f7fa02d41542ffff4871d4aefa724a5fe38e2c31a4e0fd343fb0\"},",
          "2437:     {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:520ed8b99b0bf86a176271f6fe23024323862ac674b1ce5b02a72bfeff3fff44\"},",
          "2438:     {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:aaeb25ccfb9b9014a10eaf70904ebf3f79faaa8e60e99e19eef9f478651b9b74\"},",
          "2439:     {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:af04ac89c738e0f0f1b913918024c3eab6e3ace989518ea838807177d38a2e94\"},",
          "2440:     {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:b9b76e2afd585803c53c5b29e992ecd183f68285b62fe2668383a18e74abe7a3\"},",
          "2441:     {file = \"rpds_py-0.21.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:5afb5efde74c54724e1a01118c6e5c15e54e642c42a1ba588ab1f03544ac8c7a\"},",
          "2442:     {file = \"rpds_py-0.21.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:52c041802a6efa625ea18027a0723676a778869481d16803481ef6cc02ea8cb3\"},",
          "2443:     {file = \"rpds_py-0.21.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:ee1e4fc267b437bb89990b2f2abf6c25765b89b72dd4a11e21934df449e0c976\"},",
          "2444:     {file = \"rpds_py-0.21.0-cp313-none-win32.whl\", hash = \"sha256:0c025820b78817db6a76413fff6866790786c38f95ea3f3d3c93dbb73b632202\"},",
          "2445:     {file = \"rpds_py-0.21.0-cp313-none-win_amd64.whl\", hash = \"sha256:320c808df533695326610a1b6a0a6e98f033e49de55d7dc36a13c8a30cfa756e\"},",
          "2446:     {file = \"rpds_py-0.21.0-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:2c51d99c30091f72a3c5d126fad26236c3f75716b8b5e5cf8effb18889ced928\"},",
          "2447:     {file = \"rpds_py-0.21.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:cbd7504a10b0955ea287114f003b7ad62330c9e65ba012c6223dba646f6ffd05\"},",
          "2448:     {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6dcc4949be728ede49e6244eabd04064336012b37f5c2200e8ec8eb2988b209c\"},",
          "2449:     {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:f414da5c51bf350e4b7960644617c130140423882305f7574b6cf65a3081cecb\"},",
          "2450:     {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9afe42102b40007f588666bc7de82451e10c6788f6f70984629db193849dced1\"},",
          "2451:     {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3b929c2bb6e29ab31f12a1117c39f7e6d6450419ab7464a4ea9b0b417174f044\"},",
          "2452:     {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8404b3717da03cbf773a1d275d01fec84ea007754ed380f63dfc24fb76ce4592\"},",
          "2453:     {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:e12bb09678f38b7597b8346983d2323a6482dcd59e423d9448108c1be37cac9d\"},",
          "2454:     {file = \"rpds_py-0.21.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:58a0e345be4b18e6b8501d3b0aa540dad90caeed814c515e5206bb2ec26736fd\"},",
          "2455:     {file = \"rpds_py-0.21.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:c3761f62fcfccf0864cc4665b6e7c3f0c626f0380b41b8bd1ce322103fa3ef87\"},",
          "2456:     {file = \"rpds_py-0.21.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:c2b2f71c6ad6c2e4fc9ed9401080badd1469fa9889657ec3abea42a3d6b2e1ed\"},",
          "2457:     {file = \"rpds_py-0.21.0-cp39-none-win32.whl\", hash = \"sha256:b21747f79f360e790525e6f6438c7569ddbfb1b3197b9e65043f25c3c9b489d8\"},",
          "2458:     {file = \"rpds_py-0.21.0-cp39-none-win_amd64.whl\", hash = \"sha256:0626238a43152918f9e72ede9a3b6ccc9e299adc8ade0d67c5e142d564c9a83d\"},",
          "2459:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:6b4ef7725386dc0762857097f6b7266a6cdd62bfd209664da6712cb26acef035\"},",
          "2460:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:6bc0e697d4d79ab1aacbf20ee5f0df80359ecf55db33ff41481cf3e24f206919\"},",
          "2461:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da52d62a96e61c1c444f3998c434e8b263c384f6d68aca8274d2e08d1906325c\"},",
          "2462:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:98e4fe5db40db87ce1c65031463a760ec7906ab230ad2249b4572c2fc3ef1f9f\"},",
          "2463:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:30bdc973f10d28e0337f71d202ff29345320f8bc49a31c90e6c257e1ccef4333\"},",
          "2464:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:faa5e8496c530f9c71f2b4e1c49758b06e5f4055e17144906245c99fa6d45356\"},",
          "2465:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:32eb88c30b6a4f0605508023b7141d043a79b14acb3b969aa0b4f99b25bc7d4a\"},",
          "2466:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:a89a8ce9e4e75aeb7fa5d8ad0f3fecdee813802592f4f46a15754dcb2fd6b061\"},",
          "2467:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:241e6c125568493f553c3d0fdbb38c74babf54b45cef86439d4cd97ff8feb34d\"},",
          "2468:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:3b766a9f57663396e4f34f5140b3595b233a7b146e94777b97a8413a1da1be18\"},",
          "2469:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:af4a644bf890f56e41e74be7d34e9511e4954894d544ec6b8efe1e21a1a8da6c\"},",
          "2470:     {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:3e30a69a706e8ea20444b98a49f386c17b26f860aa9245329bab0851ed100677\"},",
          "2471:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:031819f906bb146561af051c7cef4ba2003d28cff07efacef59da973ff7969ba\"},",
          "2472:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:b876f2bc27ab5954e2fd88890c071bd0ed18b9c50f6ec3de3c50a5ece612f7a6\"},",
          "2473:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dc5695c321e518d9f03b7ea6abb5ea3af4567766f9852ad1560f501b17588c7b\"},",
          "2474:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:b4de1da871b5c0fd5537b26a6fc6814c3cc05cabe0c941db6e9044ffbb12f04a\"},",
          "2475:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:878f6fea96621fda5303a2867887686d7a198d9e0f8a40be100a63f5d60c88c9\"},",
          "2476:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a8eeec67590e94189f434c6d11c426892e396ae59e4801d17a93ac96b8c02a6c\"},",
          "2477:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1ff2eba7f6c0cb523d7e9cff0903f2fe1feff8f0b2ceb6bd71c0e20a4dcee271\"},",
          "2478:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:a429b99337062877d7875e4ff1a51fe788424d522bd64a8c0a20ef3021fdb6ed\"},",
          "2479:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:d167e4dbbdac48bd58893c7e446684ad5d425b407f9336e04ab52e8b9194e2ed\"},",
          "2480:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:4eb2de8a147ffe0626bfdc275fc6563aa7bf4b6db59cf0d44f0ccd6ca625a24e\"},",
          "2481:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:e78868e98f34f34a88e23ee9ccaeeec460e4eaf6db16d51d7a9b883e5e785a5e\"},",
          "2482:     {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:4991ca61656e3160cdaca4851151fd3f4a92e9eba5c7a530ab030d6aee96ec89\"},",
          "2483:     {file = \"rpds_py-0.21.0.tar.gz\", hash = \"sha256:ed6378c9d66d0de903763e7706383d60c33829581f0adff47b6535f1802fa6db\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e932050fca9ac767a731f4232485f4f8be2044f",
      "candidate_info": {
        "commit_hash": "1e932050fca9ac767a731f4232485f4f8be2044f",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/1e932050fca9ac767a731f4232485f4f8be2044f",
        "files": [
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/urls.py",
          "mobsf/MobSF/views/api/api_ios_dynamic_analysis.py",
          "mobsf/templates/general/apidocs.html",
          "poetry.lock",
          "pyproject.toml"
        ],
        "message": "HOTFIX: Bump deps + expose Corellium stop app api",
        "before_after_code_files": [
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/urls.py||mobsf/MobSF/urls.py",
          "mobsf/MobSF/views/api/api_ios_dynamic_analysis.py||mobsf/MobSF/views/api/api_ios_dynamic_analysis.py",
          "mobsf/templates/general/apidocs.html||mobsf/templates/general/apidocs.html",
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_instance.py -> mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "462: # AJAX",
          "465: @require_http_methods(['POST'])",
          "466: def remove_app(request, api=False):",
          "467:     \"\"\"Remove an app from the device.\"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "465: @require_http_methods(['POST'])",
          "466: def stop_app(request, api=False):",
          "467:     \"\"\"Stop an App.\"\"\"",
          "468:     data = {",
          "469:         'status': 'failed',",
          "470:         'message': 'Failed to stop the app'}",
          "471:     try:",
          "472:         instance_id = request.POST['instance_id']",
          "473:         bundle_id = request.POST['bundle_id']",
          "474:         failed = common_check(instance_id)",
          "475:         if failed:",
          "476:             return send_response(failed, api)",
          "477:         if not strict_package_check(bundle_id):",
          "478:             data['message'] = 'Invalid iOS Bundle id'",
          "479:             return send_response(data, api)",
          "480:         ca = CorelliumAgentAPI(instance_id)",
          "481:         if (ca.agent_ready()",
          "482:                 and ca.unlock_device()",
          "483:                 and ca.stop_app(bundle_id) == OK):",
          "484:             data['status'] = OK",
          "485:             data['message'] = 'App Killed'",
          "486:     except Exception as exp:",
          "487:         logger.exception('Failed to stop the app')",
          "488:         data['message'] = str(exp)",
          "489:     return send_response(data, api)",
          "490: # AJAX",
          "",
          "---------------"
        ],
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "15:   __  __       _    ____  _____       _____ ___",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ // _ \\",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.9.4'",
          "",
          "[Added Lines]",
          "13: VERSION = '3.9.5'",
          "",
          "---------------"
        ],
        "mobsf/MobSF/urls.py||mobsf/MobSF/urls.py": [
          "File: mobsf/MobSF/urls.py -> mobsf/MobSF/urls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:             api_idz.api_ios_dynamic_analyzer),",
          "116:     re_path(r'^api/v1/ios/run_app$',",
          "117:             api_idz.api_run_app),",
          "118:     re_path(r'^api/v1/ios/remove_app$',",
          "119:             api_idz.api_remove_app),",
          "120:     re_path(r'^api/v1/ios/take_screenshot$',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:     re_path(r'^api/v1/ios/stop_app$',",
          "119:             api_idz.api_stop_app),",
          "",
          "---------------"
        ],
        "mobsf/MobSF/views/api/api_ios_dynamic_analysis.py||mobsf/MobSF/views/api/api_ios_dynamic_analysis.py": [
          "File: mobsf/MobSF/views/api/api_ios_dynamic_analysis.py -> mobsf/MobSF/views/api/api_ios_dynamic_analysis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:     return make_api_response(resp, 200)",
          "195: @request_method(['POST'])",
          "196: @csrf_exempt",
          "197: def api_remove_app(request):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195: @request_method(['POST'])",
          "196: @csrf_exempt",
          "197: def api_stop_app(request):",
          "198:     \"\"\"POST - Run an App.\"\"\"",
          "199:     params = {INSTANCE_ID, BUNDLE_ID}",
          "200:     if set(request.POST) < params:",
          "201:         return make_api_response(",
          "202:             {'error': 'Missing Parameters'}, 422)",
          "203:     resp = corellium_instance.stop_app(request, True)",
          "204:     if resp.get('status') == FAILED:",
          "205:         return make_api_response(resp, 500)",
          "206:     return make_api_response(resp, 200)",
          "",
          "---------------"
        ],
        "mobsf/templates/general/apidocs.html||mobsf/templates/general/apidocs.html": [
          "File: mobsf/templates/general/apidocs.html -> mobsf/templates/general/apidocs.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:               <li><code>api/v1/ios/setup_environment</code> - <a href=\"#ios-setup-environment-api\">Setup iOS Dynamic Analysis Environment</a></li>",
          "82:               <li><code>api/v1/ios/dynamic_analyzer</code> - <a href=\"#ios-dynamic-analyzer-api\">iOS Dynamic Analyzer</a></li>",
          "83:               <li><code>api/v1/ios/run_app</code> - <a href=\"#ios-run-app-api\">Run App</a></li>",
          "84:               <li><code>api/v1/ios/remove_app</code> - <a href=\"#ios-remove-app-api\">Remove App</a></li>",
          "85:               <li><code>api/v1/ios/take_screenshot</code> - <a href=\"#ios-takescreenshot-api\">Take Screenshot</a></li>",
          "86:               <li><code>api/v1/ios/get_app_container_path</code> - <a href=\"#ios-get-app-container-path-api\">Get App Container Path</a></li>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:               <li><code>api/v1/ios/stop_app</code> - <a href=\"#ios-stop-app-api\">Stop App</a></li>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3733:               </li>",
          "3734:             </ul>",
          "3736:             <hr />",
          "3737:             <h2><a id=\"ios-remove-app-api\"></a><strong>Remove App API</strong></h2>",
          "3738:             <p>Remove an app from the Corellium VM.</p>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3737:             <hr />",
          "3738:             <h2><a id=\"ios-stop-app-api\"></a><strong>Stop App API</strong></h2>",
          "3739:             <p>Kill the app in the Corellium VM.</p>",
          "3740:             <ul>",
          "3741:               <li>",
          "3742:                 <p><strong>URL:</strong> <code>/api/v1/ios/stop_app</code></p>",
          "3743:               </li>",
          "3744:               <li>",
          "3745:                 <p><strong>Method:</strong> <code>POST</code></p>",
          "3746:               </li>",
          "3747:               <li>",
          "3748:                 <p><strong>Header:</strong> <code>Authorization:&lt;api_key&gt;</code> <strong>Or</strong> <code>X-Mobsf-Api-Key:&lt;api_key&gt;</code></p>",
          "3749:               </li>",
          "3750:             </ul>",
          "3751:             <table class=\"table table-striped table-bordered\">",
          "3752:               <thead>",
          "3753:                 <tr>",
          "3754:                   <th>Param Name</th>",
          "3755:                   <th>Param Value</th>",
          "3756:                   <th>Required</th>",
          "3757:                 </tr>",
          "3758:               </thead>",
          "3759:               <tbody>",
          "3760:                 <tr>",
          "3761:                   <td>instance_id</td>",
          "3762:                   <td>iOS instance id (Available from /api/v1/ios/dynamic_analysis)</td>",
          "3763:                   <td>Yes</td>",
          "3764:                 </tr>",
          "3765:                 <tr>",
          "3766:                   <td>bundle_id</td>",
          "3767:                   <td>iOS app bundle id (Available from /api/v1/ios/dynamic_analysis)</td>",
          "3768:                   <td>Yes</td>",
          "3769:                 </tr>",
          "3770:               </tbody>",
          "3771:             </table>",
          "3772:             <br />",
          "3773:             <ul>",
          "3774:               <li>",
          "3775:                 <p><strong>Success Response:</strong></p>",
          "3776:                 <ul>",
          "3777:                   <li>",
          "3778:                     <strong>Code:</strong> <code>200</code><br />",
          "3779:                     <strong>Content-Type:</strong> <code>application/json; charset=utf-8</code> <br />",
          "3780:                     <strong>Content:</strong> <code>{\"status\": \"ok\", \"message\": \"App Killed\"}</code>",
          "3781:                   </li>",
          "3782:                 </ul>",
          "3783:               </li>",
          "3784:               <li>",
          "3785:                 <p><strong>Error Response:</strong></p>",
          "3786:                 <ul>",
          "3787:                   <li>",
          "3788:                     <strong>Code:</strong> <code>500 Internal Server Error</code> or <code>405 Method Not Allowed</code> or <code>422 Unprocessable Entity</code> <br />",
          "3789:                     <strong>Content-Type:</strong> <code>application/json; charset=utf-8</code> <br />",
          "3790:                     <strong>Content:</strong> <code>{&quot;error&quot;: &lt;error message&gt; }</code>",
          "3791:                   </li>",
          "3792:                 </ul>",
          "3793:                 <p>OR</p>",
          "3794:                 <ul>",
          "3795:                   <li>",
          "3796:                     <strong>Code:</strong> <code>401 Unauthorized</code> <br />",
          "3797:                     <strong>Content-Type:</strong> <code>application/json; charset=utf-8</code> <br />",
          "3798:                     <strong>Content:</strong> <code>{&quot;error&quot;: &quot;You are unauthorized to make this request.&quot; }</code>",
          "3799:                   </li>",
          "3800:                 </ul>",
          "3801:               </li>",
          "3802:               <li>",
          "3803:                 <p><strong>Sample Call:</strong></p>",
          "3804:                 <ul>",
          "3805:                   <li>",
          "3806:                     <pre><code>curl -X POST --url http://localhost:8000/api/v1/ios/stop_app --data \"instance_id=bd057756-87a8-45a6-945d-35c7ce48eafe&bundle_id=com.highaltitudehacks.DVIAswiftv2\" -H \"Authorization:{{ api_key}}\"",
          "3807:                   </code></pre>",
          "3808:                   </li>",
          "3809:                 </ul>",
          "3810:               </li>",
          "3811:             </ul>",
          "",
          "---------------"
        ],
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "2345: [[package]]",
          "2346: name = \"pyparsing\"",
          "2348: description = \"pyparsing module - Classes and methods to define and execute parsing grammars\"",
          "2349: optional = false",
          "2350: python-versions = \">=3.6.8\"",
          "2351: files = [",
          "2354: ]",
          "2356: [package.extras]",
          "",
          "[Removed Lines]",
          "2347: version = \"3.1.1\"",
          "2352:     {file = \"pyparsing-3.1.1-py3-none-any.whl\", hash = \"sha256:32c7c0b711493c72ff18a981d24f28aaf9c1fb7ed5e9667c9e84e3db623bdbfb\"},",
          "2353:     {file = \"pyparsing-3.1.1.tar.gz\", hash = \"sha256:ede28a1a32462f5a9705e07aea48001a08f7cf81a021585011deba701581a0db\"},",
          "",
          "[Added Lines]",
          "2347: version = \"3.1.2\"",
          "2352:     {file = \"pyparsing-3.1.2-py3-none-any.whl\", hash = \"sha256:f9db75911801ed778fe61bb643079ff86601aca99fcae6345aa67292038fb742\"},",
          "2353:     {file = \"pyparsing-3.1.2.tar.gz\", hash = \"sha256:a1bac0ce561155ecc3ed78ca94d3c9378656ad4c94c1270de543f621420f94ad\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "361e76a390749779d14097132eab90d17018bb4a",
      "candidate_info": {
        "commit_hash": "361e76a390749779d14097132eab90d17018bb4a",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/361e76a390749779d14097132eab90d17018bb4a",
        "files": [
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/helper-early-java.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass2.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/others/helper-backtrace.js",
          "mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "mobsf/DynamicAnalyzer/views/android/frida_scripts.py",
          "mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_ssh.py",
          "mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "mobsf/DynamicAnalyzer/views/ios/tests_frida.py",
          "mobsf/MobSF/init.py",
          "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html",
          "pyproject.toml"
        ],
        "message": "[HOTFIX] Android script loading,  frida injected code view, paramiko SSH issues (#2300)\n\n* Android script loading bug fix\n* Frida injected code view\n* Paramiko SSH reactor to address some host key issues, revert from warning to autoadd.\n* Frida Injection refactoring",
        "before_after_code_files": [
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass2.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass2.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/others/helper-backtrace.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/others/helper-backtrace.js",
          "mobsf/DynamicAnalyzer/views/android/frida_core.py||mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "mobsf/DynamicAnalyzer/views/android/frida_scripts.py||mobsf/DynamicAnalyzer/views/android/frida_scripts.py",
          "mobsf/DynamicAnalyzer/views/android/tests_frida.py||mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py||mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_ssh.py||mobsf/DynamicAnalyzer/views/ios/corellium_ssh.py",
          "mobsf/DynamicAnalyzer/views/ios/frida_core.py||mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "mobsf/DynamicAnalyzer/views/ios/tests_frida.py||mobsf/DynamicAnalyzer/views/ios/tests_frida.py",
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:         }",
          "13:         return response;",
          "14:     }",
          "",
          "[Removed Lines]",
          "15: });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:     }",
          "135: }",
          "142:     }",
          "",
          "[Removed Lines]",
          "137: try {",
          "138:     if (ObjC.available) {",
          "139:         bypassJailbreakDetection();",
          "140:     } else {",
          "141:         send('[Jailbreak Detection Bypass] error: Objective-C Runtime is not available!');",
          "143: } catch(err) {}",
          "",
          "[Added Lines]",
          "138: function bypassJailbreakDetection2() {",
          "139:     try {",
          "141:             var resolver = new ApiResolver('objc');",
          "143:             resolver.enumerateMatches('*[* *jail**]', {",
          "144:                 onMatch: function(match) {",
          "145:                     var ptr = match[\"address\"];",
          "146:                     Interceptor.attach(ptr, {",
          "147:                         onEnter: function() {},",
          "148:                         onLeave: function(retval) {",
          "149:                             retval.replace(0x0);",
          "150:                         }",
          "151:                     });",
          "152:                 },",
          "153:                 onComplete: function() {}",
          "154:             });",
          "156:             resolver.enumerateMatches('*[* fileExistsAtPath*]', {",
          "157:                 onMatch: function(match) {",
          "158:                     var ptr = match[\"address\"];",
          "159:                     Interceptor.attach(ptr, {",
          "160:                         onEnter: function(args) {",
          "161:                             var path = ObjC.Object(args[2]).toString();",
          "162:                             this.jailbreakCall = false;",
          "163:                             for (var i = 0; i < paths.length; i++) {",
          "164:                                 if (paths[i] == path) {",
          "165:                                     this.jailbreakCall = true;",
          "166:                                 }",
          "167:                             }",
          "168:                         },",
          "169:                         onLeave: function(retval) {",
          "170:                             if (this.jailbreakCall) {",
          "171:                                 retval.replace(0x0);",
          "172:                             }",
          "173:                         }",
          "174:                     });",
          "175:                 },",
          "176:                 onComplete: function() {}",
          "177:             });",
          "179:             resolver.enumerateMatches('*[* canOpenURL*]', {",
          "180:                 onMatch: function(match) {",
          "181:                     var ptr = match[\"address\"];",
          "182:                     Interceptor.attach(ptr, {",
          "183:                         onEnter: function(args) {",
          "184:                             var url = ObjC.Object(args[2]).toString();",
          "185:                             this.jailbreakCall = false;",
          "186:                             if (url.indexOf(\"cydia\") >= 0) {",
          "187:                                 this.jailbreakCall = true;",
          "188:                             }",
          "189:                         },",
          "190:                         onLeave: function(retval) {",
          "191:                             if (this.jailbreakCall) {",
          "192:                                 retval.replace(0x0);",
          "193:                             }",
          "194:                         }",
          "195:                     });",
          "196:                 },",
          "197:                 onComplete: function() {}",
          "198:             });",
          "199:             send(\"[Jailbreak Detection Bypass 2] success\");",
          "200:         }",
          "201:         catch(e) {",
          "202:             send('[Jailbreak Detection Bypass 2] script error:' + e.toString());",
          "203:         }",
          "207:         if (ObjC.available) {",
          "208:             bypassJailbreakDetection();",
          "210:             setTimeout(() => {",
          "211:                 bypassJailbreakDetection2();",
          "212:             }, \"1000\");",
          "213:         } else {",
          "214:             send('[Jailbreak Detection Bypass] error: Objective-C Runtime is not available!');",
          "215:         }",
          "216:     } catch(err) {}",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass2.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass2.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass2.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass2.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: send('Dumping Application Directory file information');",
          "61: try {",
          "63: } catch(err) {}",
          "",
          "[Removed Lines]",
          "62:     send(JSON.stringify({'[MBSFDUMP] datadir': getDataProtectionKeysForAllPaths()}));",
          "",
          "[Added Lines]",
          "62:     setTimeout(() => {",
          "63:         send(JSON.stringify({'[MBSFDUMP] datadir': getDataProtectionKeysForAllPaths()}));",
          "64:     }, \"2000\");",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: }",
          "30: try{",
          "32: } catch(err) {}",
          "",
          "[Removed Lines]",
          "31:     ns_userdefaults();",
          "",
          "[Added Lines]",
          "31:     setTimeout(() => {",
          "32:         ns_userdefaults();",
          "33:     }, \"2000\");",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/others/helper-backtrace.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/others/helper-backtrace.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/others/helper-backtrace.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/others/helper-backtrace.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: function getBacktrace(){",
          "5:  send('Get the caller of the function using backtrace');",
          "6:  Interceptor.attach(ObjC.classes.NSFileManager['- fileExistsAtPath:'].implementation, {",
          "7:   onEnter: function (args) {",
          "8:    const backtrace = Thread.backtrace(this.context, Backtracer.ACCURATE).map(DebugSymbol.fromAddress).join(\"\\n\");",
          "9:    console.log(backtrace + \"\\n\");",
          "10:    console.log(ObjC.Object(args[2]).toString());",
          "11:   }",
          "12:  });",
          "13: }",
          "14: try {",
          "15:  getBacktrace();",
          "16: } catch(err) {}",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/frida_core.py||mobsf/DynamicAnalyzer/views/android/frida_core.py": [
          "File: mobsf/DynamicAnalyzer/views/android/frida_core.py -> mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "147:         except frida.TimedOutError:",
          "148:             logger.error('Timed out while waiting for device to appear')",
          "149:         except (frida.ProcessNotFoundError,",
          "150:                 frida.TransportError,",
          "151:                 frida.InvalidOperationError):",
          "152:             pass",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:                 frida.ProcessNotRespondingError,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:         except frida.NotSupportedError:",
          "185:             logger.exception('Not Supported Error')",
          "186:         except (frida.ProcessNotFoundError,",
          "187:                 frida.TransportError,",
          "188:                 frida.InvalidOperationError):",
          "189:             pass",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "188:                 frida.ProcessNotRespondingError,",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/frida_scripts.py||mobsf/DynamicAnalyzer/views/android/frida_scripts.py": [
          "File: mobsf/DynamicAnalyzer/views/android/frida_scripts.py -> mobsf/DynamicAnalyzer/views/android/frida_scripts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: def get_content(file_name):",
          "9:     tools_dir = Path(settings.TOOLS_DIR)",
          "11:     script = aux_dir / file_name",
          "13:     if script.exists():",
          "",
          "[Removed Lines]",
          "10:     aux_dir = tools_dir / 'frida_scripts' / 'ios' / 'auxiliary'",
          "",
          "[Added Lines]",
          "10:     aux_dir = tools_dir / 'frida_scripts' / 'android' / 'auxiliary'",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/tests_frida.py||mobsf/DynamicAnalyzer/views/android/tests_frida.py": [
          "File: mobsf/DynamicAnalyzer/views/android/tests_frida.py -> mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:         elif action == 'ps':",
          "103:             logger.info('Enumerating running applications')",
          "104:             data['message'] = frida_obj.ps()",
          "105:         if action in ('spawn', 'session'):",
          "106:             if pid and pid.isdigit():",
          "107:                 # Attach to a different pid/bundle id",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:         elif action == 'get':",
          "106:             # Get injected Frida script.",
          "107:             data['message'] = frida_obj.get_script()",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py||mobsf/DynamicAnalyzer/views/ios/corellium_apis.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_apis.py -> mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "344:             # Should not be greater than max screen size",
          "345:             swipe_x = min(int(x) + 200, int(max_x))",
          "346:             swipe_y = min(int(y) + 400, int(max_y))",
          "347:             if event == 'home':",
          "348:                 data = [{",
          "349:                     'buttons': ['holdButton'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "347:             # Just to prevent linter complaining",
          "348:             # Make use of these variables in future",
          "349:             swipe_x = swipe_y",
          "350:             swipe_y = swipe_x",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "374:             elif event == 'swipe_down':",
          "375:                 data = [{",
          "376:                     'startButtons': ['finger'],",
          "379:                     'duration': 200,",
          "380:                 }]",
          "381:             elif event == 'swipe_left':",
          "",
          "[Removed Lines]",
          "377:                     'start': [[x, swipe_y]],",
          "378:                     'end': [[swipe_x, y]],",
          "",
          "[Added Lines]",
          "381:                     'start': [[300, 600]],",
          "382:                     'bezierPoints': [[[700, 350]], [[850, 375]]],",
          "383:                     'end': [[950, 400]],",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_instance.py -> mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:     out = ssh_execute_cmd(target, 'appinst /tmp/app.ipa')",
          "359:     target.close()",
          "360:     jumpbox.close()",
          "362:         logger.error('AppSync IPA Install Failed.\\n%s', out)",
          "363:         return out",
          "364:     logger.info(out)",
          "",
          "[Removed Lines]",
          "361:     if 'Failed' in out:",
          "",
          "[Added Lines]",
          "361:     if 'Successfully installed' not in out:",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/corellium_ssh.py||mobsf/DynamicAnalyzer/views/ios/corellium_ssh.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_ssh.py -> mobsf/DynamicAnalyzer/views/ios/corellium_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "212:     generate_keypair_if_not_exists(home)",
          "213:     keyf = home / 'ssh_key.private'",
          "214:     jumpbox = paramiko.SSHClient()",
          "217:     jumpbox.connect(",
          "218:         bastion_host,",
          "219:         username=bastion_user,",
          "",
          "[Removed Lines]",
          "215:     jumpbox.load_system_host_keys()",
          "216:     jumpbox.set_missing_host_key_policy(paramiko.WarningPolicy())",
          "",
          "[Added Lines]",
          "215:     jumpbox.set_missing_host_key_policy(paramiko.AutoAddPolicy())",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "226:         'direct-tcpip', dest_addr, src_addr)",
          "228:     target = paramiko.SSHClient()",
          "231:     target.connect(",
          "232:         private_ip,",
          "233:         username=user,",
          "",
          "[Removed Lines]",
          "229:     target.load_system_host_keys()",
          "230:     target.set_missing_host_key_policy(paramiko.WarningPolicy())",
          "",
          "[Added Lines]",
          "228:     target.set_missing_host_key_policy(paramiko.AutoAddPolicy())",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/frida_core.py||mobsf/DynamicAnalyzer/views/ios/frida_core.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/frida_core.py -> mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         self.frida_log = self.ipa_dir / 'mobsf_frida_out.txt'",
          "54:         self.dump_file = self.ipa_dir / 'mobsf_dump_file.txt'",
          "55:         self.container_file = self.ipa_dir / 'mobsf_app_container_path.txt'",
          "57:     def get_scripts(self, script_type, selected_scripts):",
          "58:         \"\"\"Get Frida Scripts.\"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:         self.not_supported_text = (",
          "57:             'Failed to instrument the app with Frida. '",
          "58:             'This app is not supported by Frida. '",
          "59:             'Are you able to run the app on '",
          "60:             'this device?')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:                 self.clean_up()",
          "160:                 _PID = frida.get_remote_device().spawn([self.bundle_id])",
          "161:             except frida.NotSupportedError:",
          "163:                 return",
          "164:             except frida.ServerNotRunningError:",
          "165:                 self.frida_ssh_forward()",
          "",
          "[Removed Lines]",
          "162:                 logger.exception('Not Supported Error')",
          "",
          "[Added Lines]",
          "167:                 logger.error(self.not_supported_text)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "170:         except frida.TimedOutError:",
          "171:             logger.error('Timed out while waiting for device to appear')",
          "172:         except frida.NotSupportedError:",
          "174:             return",
          "175:         except (frida.ProcessNotFoundError,",
          "176:                 frida.TransportError,",
          "177:                 frida.InvalidOperationError):",
          "178:             pass",
          "",
          "[Removed Lines]",
          "173:             logger.exception('Not Supported Error')",
          "",
          "[Added Lines]",
          "178:             logger.error(self.not_supported_text)",
          "181:                 frida.ProcessNotRespondingError,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "193:                     # No front most app, spawn the app or",
          "194:                     # pid is not the front most app",
          "195:                     _PID = device.spawn([self.bundle_id])",
          "196:                 # pid is the fornt most app",
          "197:                 session = device.attach(_PID)",
          "198:             except frida.NotSupportedError:",
          "200:                 return",
          "201:             except Exception:",
          "202:                 logger.warning('Cannot attach to pid, spawning again')",
          "",
          "[Removed Lines]",
          "199:                 logger.exception('Not Supported Error')",
          "",
          "[Added Lines]",
          "202:                     logger.info('Spawning %s', self.bundle_id)",
          "206:                 logger.error(self.not_supported_text)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "214:                 script.unload()",
          "215:                 session.detach()",
          "216:         except frida.NotSupportedError:",
          "218:         except (frida.ProcessNotFoundError,",
          "219:                 frida.TransportError,",
          "220:                 frida.InvalidOperationError):",
          "221:             pass",
          "",
          "[Removed Lines]",
          "217:             logger.exception('Not Supported Error')",
          "",
          "[Added Lines]",
          "224:             logger.error(self.not_supported_text)",
          "226:                 frida.ProcessNotRespondingError,",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/tests_frida.py||mobsf/DynamicAnalyzer/views/ios/tests_frida.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/tests_frida.py -> mobsf/DynamicAnalyzer/views/ios/tests_frida.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:         elif action == 'ps':",
          "93:             logger.info('Enumerating running applications')",
          "94:             data['message'] = frida_obj.ps()",
          "95:         if action in ('spawn', 'session'):",
          "96:             if pid and pid.isdigit():",
          "97:                 # Attach to a different pid/bundle id",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:         elif action == 'get':",
          "96:             # Get injected Frida script.",
          "97:             data['message'] = frida_obj.get_script()",
          "",
          "---------------"
        ],
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "15:   __  __       _    ____  _____       _____  ___",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ / ( _ )",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.8.3'",
          "",
          "[Added Lines]",
          "13: VERSION = '3.8.4'",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html": [
          "File: mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html -> mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: <link rel=\"stylesheet\" href=\"{% static \"others/css/terminal.css\" %}\" type=\"text/css\">",
          "9: <link rel=\"stylesheet\" href=\"{% static \"others/css/devices.min.css\" %}\" type=\"text/css\">",
          "10: <link rel=\"stylesheet\" href=\"{% static \"codemirror/codemirror.css\" %}\" type=\"text/css\">",
          "11: <link rel=\"stylesheet\" href=\"{% static \"codemirror/lint.css\" %}\" type=\"text/css\">",
          "12: <link rel=\"stylesheet\" href=\"{% static \"others/css/spinner.css\" %}\">",
          "13: <style>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: <link rel=\"stylesheet\" href=\"{% static \"enlighterjs/enlighterjs.min.css\" %}\" />",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:                       </div>",
          "240:                       <!-- /.box-body -->",
          "241:                       <div class=\"box-footer\">",
          "245:                       </div>",
          "247:                     </form>",
          "",
          "[Removed Lines]",
          "242:                         <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success\"><i class=\"far fa-play-circle\"></i> Spawn & Inject</button>",
          "243:                         <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-redo\"></i> Inject </button>",
          "244:                         <button id=\"frida_attach\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-bug\"></i> Attach </button>",
          "",
          "[Added Lines]",
          "243:                         <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"far fa-play-circle\"></i> Spawn & Inject</button>",
          "244:                         <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-redo\"></i> Inject </button>",
          "245:                         <button id=\"frida_attach\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-bug\"></i> Attach </button>",
          "246:                         <button id=\"frida_get\" class=\"btn btn-primary btn-sm\" hidden><i class=\"fas fa-code\"></i> Injected Code</button>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "402:   </div>",
          "403: </div>",
          "405: <!-- Modal -->",
          "406: <div class=\"modal\" id=\"tls_modal\" tabindex=\"-1\" role=\"dialog\">",
          "407:   <div class=\"modal-dialog modal-xl\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:  <!-- Modal -->",
          "408:  <div class=\"modal fade\" id=\"get_code_modal\" tabindex=\"-1\" role=\"dialog\">",
          "409:   <div class=\"modal-dialog modal-xl\">",
          "410:     <div class=\"modal-content\">",
          "411:       <div class=\"modal-header\">",
          "412:         <h4 class=\"modal-title\">Injected Frida Script</h4>",
          "413:         <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>",
          "414:       </div>",
          "415:       <div class=\"modal-body\" id=\"injected_content\">",
          "416:       </div>",
          "417:     </div>",
          "418:   </div>",
          "419: </div>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "486: <script src=\"{% static \"codemirror/lint.js\" %}\"></script>",
          "487: <script src=\"{% static \"codemirror/javascript-lint.js\" %}\"></script>",
          "488: <script src=\"{% static \"others/js/swipe.js\" %}\"></script>",
          "489: <script>",
          "491: function dynamic_loader(){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "506: <script src=\"{% static \"enlighterjs/enlighterjs.min.js\" %}\"></script>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1196:     var code = editor.getDoc().getValue();",
          "1197:     window.sessionStorage.setItem('code_android', code);",
          "1199:     document.getElementById('frida-logs').style.display = 'block';",
          "1202:     $.each($(\"input[name='default_hooks']:checked\"), function(){",
          "1203:         default_hooks.push($(this).val());",
          "",
          "[Removed Lines]",
          "1200:     var default_hooks = [];",
          "",
          "[Added Lines]",
          "1219:     document.getElementById('frida_get').hidden = false;",
          "1220:      var default_hooks = [];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1219:       print_status(\"Attaching to PID: \" + parseInt(pid));",
          "1220:     } else if (frida_action == 'ps'){",
          "1221:       print_status(\"Enumerating running processes.\");",
          "1222:     }",
          "1223:     action('{% url 'android_instrument' %}', {",
          "1224:       frida_action,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1242:     } else if (frida_action == 'get'){",
          "1243:       print_status(\"Getting injected frida script.\");",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1232:       class_trace:  $('#class_trace').val(),",
          "1233:       frida_code: editor.getDoc().getValue(),",
          "1234:     }, function(json) {",
          "1238:       if (frida_action == 'ps' && json.message && json.message.length > 0 && Array.isArray(json.message)){",
          "1239:         $(\"#process_select\").empty();",
          "",
          "[Removed Lines]",
          "1235:     if (json.status !== \"ok\")",
          "1236:       print_status(json.message);",
          "",
          "[Added Lines]",
          "1257:       if (json.status !== \"ok\")",
          "1258:         print_status(json.message);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1242:             '<option value=' + escape(p.pid.toString()) + ',' + escape(p.identifier.toString()) + '>' +  escape(p.pid.toString()) + ': ' + escapeHtml(p.name.toString()) + ' - ' + escape(p.identifier.toString()) + '</option>');",
          "1243:         });",
          "1244:         $('#frida_attach_mdl').modal('toggle');",
          "1245:       }",
          "1246:   });",
          "1247: }",
          "1251: $(\"#frida_spawn\").click(function() {",
          "1252:   frida_instrument('spawn');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1267:       } else if (frida_action =='get'){",
          "1268:         var injected = document.getElementById(\"injected_content\");",
          "1269:         injected.innerHTML = '<pre id=\"injected-pre\"></pre>';",
          "1270:         document.getElementById(\"injected-pre\").textContent = json.message;",
          "1271:         EnlighterJS.enlight( document.getElementById('injected-pre'), {",
          "1272:           theme: 'enlighter',",
          "1273:           linehover: false,",
          "1274:           textOverflow: 'scroll',",
          "1275:           language: 'javascript',",
          "1276:         });",
          "1277:         $('#get_code_modal').modal('toggle');",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1257: $(\"#frida_session\").click(function() {",
          "1259:   frida_instrument('session');",
          "1260:   return false;",
          "1261: });",
          "",
          "[Removed Lines]",
          "1258:   $( \"input[name='default_hooks']:checkbox\" ).prop( \"checked\", false );",
          "",
          "[Added Lines]",
          "1290:   var default_hooks = \"input[name='default_hooks']\";",
          "1291:   if ($(default_hooks + \":checked\").length == $(default_hooks).length)",
          "1293:       $(default_hooks + ':checkbox').prop(\"checked\", false );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1277:   return false;",
          "1278: });",
          "1282: $(\"#deps\").click(function() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1316: $(\"#frida_get\").click(function() {",
          "1317:   frida_instrument('get');",
          "1318:   return false;",
          "1319: });",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html": [
          "File: mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html -> mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: <link rel=\"stylesheet\" href=\"{% static \"others/css/terminal.css\" %}\" type=\"text/css\">",
          "9: <link rel=\"stylesheet\" href=\"{% static \"others/css/devices.min.css\" %}\" type=\"text/css\">",
          "10: <link rel=\"stylesheet\" href=\"{% static \"codemirror/codemirror.css\" %}\" type=\"text/css\">",
          "11: <link rel=\"stylesheet\" href=\"{% static \"codemirror/lint.css\" %}\" type=\"text/css\">",
          "12: <link rel=\"stylesheet\" href=\"{% static \"others/css/spinner.css\" %}\">",
          "13: <link href=\"{% static \"adminlte/plugins/sweetalert2/sweetalert2.min.css\" %}\" rel=\"stylesheet\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: <link rel=\"stylesheet\" href=\"{% static \"enlighterjs/enlighterjs.min.css\" %}\" />",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:                               Jailbreak Detection Bypass",
          "175:                             </label>",
          "176:                             <label>",
          "180:                         </div>",
          "181:                         <hr/>",
          "182:                           <div class=\"form-group\">",
          "",
          "[Removed Lines]",
          "177:                             <input name=\"default_hooks\" type=\"checkbox\" value=\"jailbreak_bypass2\">",
          "178:                               Jailbreak Detection Bypass 2",
          "179:                             </label>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:                       <!-- /.box-body -->",
          "282:                       <div class=\"box-footer\">",
          "287:                     </div>",
          "288:                     </form>",
          "289:                   </div>",
          "",
          "[Removed Lines]",
          "283:                       <button id=\"run\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-play\"></i> Run</button>",
          "284:                       <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success\"><i class=\"far fa-play-circle\"></i> Spawn & Inject</button>",
          "285:                       <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-redo\"></i> Inject </button>",
          "286:                       <button id=\"frida_attach\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-bug\"></i> Attach </button>",
          "",
          "[Added Lines]",
          "281:                       <button id=\"run\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-play\"></i> Run</button>",
          "282:                       <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"far fa-play-circle\"></i> Spawn & Inject</button>",
          "283:                       <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-redo\"></i> Inject </button>",
          "284:                       <button id=\"frida_attach\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-bug\"></i> Attach </button>",
          "285:                       <button id=\"frida_get\" class=\"btn btn-primary btn-sm\" hidden><i class=\"fas fa-code\"></i> Injected Code</button>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "399:   </div>",
          "402: <!-- Modal -->",
          "403: <div class=\"modal fade\" id=\"frida_attach_mdl\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">",
          "404:   <div class=\"modal-dialog\" role=\"document\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:   <!-- Modal -->",
          "402:  <div class=\"modal fade\" id=\"get_code_modal\" tabindex=\"-1\" role=\"dialog\">",
          "403:   <div class=\"modal-dialog modal-xl\">",
          "404:     <div class=\"modal-content\">",
          "405:       <div class=\"modal-header\">",
          "406:         <h4 class=\"modal-title\">Injected Frida Script</h4>",
          "407:         <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>",
          "408:       </div>",
          "409:       <div class=\"modal-body\" id=\"injected_content\">",
          "410:       </div>",
          "411:     </div>",
          "412:   </div>",
          "413: </div>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "442: <script src=\"{% static \"codemirror/javascript-lint.js\" %}\"></script>",
          "443: <script src=\"{% static \"others/js/swipe.js\" %}\"></script>",
          "444: <script src=\"{% static \"adminlte/plugins/sweetalert2/sweetalert2.min.js\" %}\"></script>",
          "445: <script>",
          "447: var appContainerPath;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "460: <script src=\"{% static \"enlighterjs/enlighterjs.min.js\" %}\"></script>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1013:         print_status('Runnning application');",
          "1014:     } else {",
          "1015:         print_status('Failed to run the application');",
          "1016:     }",
          "1017:   });",
          "1018:   return false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1032:         Swal.fire('Failed!', escape(json.message), 'error')",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1042:     var code = editor.getDoc().getValue();",
          "1043:     window.sessionStorage.setItem('code', code);",
          "1045:     document.getElementById('frida-logs').style.display = 'block';",
          "1046:     var default_hooks = [];",
          "1047:     var dump_hooks = [];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1064:     document.getElementById('frida_get').hidden = false;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1065:       print_status(\"Attaching to PID: \" + parseInt(pid));",
          "1066:     } else if (frida_action == 'ps'){",
          "1067:       print_status(\"Enumerating running processes.\");",
          "1068:     }",
          "1069:     action('{% url 'ios_instrument' %}', {",
          "1070:       frida_action,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1087:     } else if (frida_action == 'get'){",
          "1088:       print_status(\"Getting injected frida script.\");",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1095:               '<option value=' + escape(p.pid.toString()) + ',' + escape(p.identifier.toString()) + '>' +  escape(p.pid.toString()) + ': ' + escapeHtml(p.name.toString()) + ' - ' + escape(p.identifier.toString()) + '</option>');",
          "1096:           });",
          "1097:           $('#frida_attach_mdl').modal('toggle');",
          "1098:         }",
          "1099:       }",
          "1100:   });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1119:         } else if (frida_action =='get'){",
          "1120:           var injected = document.getElementById(\"injected_content\");",
          "1121:           injected.innerHTML = '<pre id=\"injected-pre\"></pre>';",
          "1122:           document.getElementById(\"injected-pre\").textContent = json.message;",
          "1123:           EnlighterJS.enlight( document.getElementById('injected-pre'), {",
          "1124:             theme: 'enlighter',",
          "1125:             linehover: false,",
          "1126:             textOverflow: 'scroll',",
          "1127:             language: 'javascript',",
          "1128:           });",
          "1129:           $('#get_code_modal').modal('toggle');",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1112: $(\"#frida_session\").click(function() {",
          "1115:   start_network_capture();",
          "1116:   frida_instrument('session');",
          "1117:   enableReportBtn(2);",
          "",
          "[Removed Lines]",
          "1113:   $( \"input[name='default_hooks']:checkbox\" ).prop( \"checked\", false );",
          "1114:   $( \"input[name='dump_hooks']:checkbox\" ).prop( \"checked\", false );",
          "",
          "[Added Lines]",
          "1145:   var default_hooks = \"input[name='default_hooks']\";",
          "1146:   var dump_hooks = \"input[name='dump_hooks']\";",
          "1148:   if ($(default_hooks + \":checked\").length == $(default_hooks).length && $(dump_hooks + \":checked\").length == $(dump_hooks).length){",
          "1150:     $( default_hooks + \":checkbox\" ).prop( \"checked\", false );",
          "1151:     $( dump_hooks + \":checkbox\" ).prop( \"checked\", false );",
          "1152:   }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1123: $(\"#frida_attach\").click(function() {",
          "1124:   frida_instrument('ps');",
          "1125:   return false;",
          "1129: $(\"#attach_to_pid\").click(function() {",
          "",
          "[Removed Lines]",
          "1126: });",
          "",
          "[Added Lines]",
          "1166: });",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1135:   $('#frida_attach_mdl').modal('hide');",
          "1136:   enableReportBtn(2);",
          "1137:   return false;",
          "1141: $(\"#report\").one( \"click\", function() {",
          "",
          "[Removed Lines]",
          "1138: });",
          "",
          "[Added Lines]",
          "1178: });",
          "1181: $(\"#frida_get\").click(function() {",
          "1182:   frida_instrument('get');",
          "1183:   return false;",
          "1184: });",
          "",
          "---------------"
        ]
      }
    }
  ]
}