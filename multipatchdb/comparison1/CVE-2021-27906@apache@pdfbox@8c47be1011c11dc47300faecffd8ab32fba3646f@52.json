{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "298f43e05c8d7dadf4e13644309d28f62288b252",
      "candidate_info": {
        "commit_hash": "298f43e05c8d7dadf4e13644309d28f62288b252",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/298f43e05c8d7dadf4e13644309d28f62288b252",
        "files": [
          "tools/src/main/java/org/apache/pdfbox/tools/PrintPDF.java"
        ],
        "message": "PDFBOX-4892: refactor, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888094 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "tools/src/main/java/org/apache/pdfbox/tools/PrintPDF.java||tools/src/main/java/org/apache/pdfbox/tools/PrintPDF.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/src/main/java/org/apache/pdfbox/tools/PrintPDF.java||tools/src/main/java/org/apache/pdfbox/tools/PrintPDF.java": [
          "File: tools/src/main/java/org/apache/pdfbox/tools/PrintPDF.java -> tools/src/main/java/org/apache/pdfbox/tools/PrintPDF.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:             {",
          "170:                 PrintService[] printServices = PrinterJob.lookupPrintServices();",
          "171:                 boolean printerFound = false;",
          "173:                 {",
          "174:                     if (printServices[i].getName().equals(printerName))",
          "175:                     {",
          "176:                         printJob.setPrintService(printServices[i]);",
          "177:                         printerFound = true;",
          "178:                     }",
          "179:                 }",
          "180:                 if (!printerFound)",
          "",
          "[Removed Lines]",
          "172:                 for (int i = 0; !printerFound && i < printServices.length; i++)",
          "",
          "[Added Lines]",
          "172:                 for (int i = 0; i < printServices.length; i++)",
          "178:                         break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc5fdf45a6f4db4b01e563bbb664eefee9e6633e",
      "candidate_info": {
        "commit_hash": "cc5fdf45a6f4db4b01e563bbb664eefee9e6633e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/cc5fdf45a6f4db4b01e563bbb664eefee9e6633e",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java"
        ],
        "message": "PDFBOX-4892: avoid ClassCastException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884433 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     {",
          "75:         if (efDictionary == null && fs != null)",
          "76:         {",
          "78:         }",
          "79:         return efDictionary;",
          "80:     }",
          "",
          "[Removed Lines]",
          "77:             efDictionary = (COSDictionary)fs.getDictionaryObject( COSName.EF );",
          "",
          "[Added Lines]",
          "77:             efDictionary = fs.getCOSDictionary(COSName.EF);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:     public PDEmbeddedFile getEmbeddedFile()",
          "262:     {",
          "266:         {",
          "268:         }",
          "270:     }",
          "",
          "[Removed Lines]",
          "263:         PDEmbeddedFile file = null;",
          "264:         COSStream stream = (COSStream)getObjectFromEFDictionary(COSName.F);",
          "265:         if( stream != null )",
          "267:             file = new PDEmbeddedFile( stream );",
          "269:         return file;",
          "",
          "[Added Lines]",
          "263:         COSBase base = getObjectFromEFDictionary(COSName.F);",
          "264:         if (base instanceof COSStream)",
          "266:             return new PDEmbeddedFile((COSStream) base);",
          "268:         return null;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:     public PDEmbeddedFile getEmbeddedFileDos()",
          "303:         {",
          "305:         }",
          "307:     }",
          "",
          "[Removed Lines]",
          "299:     {",
          "300:         PDEmbeddedFile file = null;",
          "301:         COSStream stream = (COSStream)getObjectFromEFDictionary( COSName.DOS );",
          "302:         if( stream != null )",
          "304:             file = new PDEmbeddedFile( stream );",
          "306:         return file;",
          "",
          "[Added Lines]",
          "298:     {",
          "299:         COSBase base = getObjectFromEFDictionary( COSName.DOS );",
          "300:         if (base instanceof COSStream)",
          "302:             return new PDEmbeddedFile((COSStream) base);",
          "304:         return null;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "335:     public PDEmbeddedFile getEmbeddedFileMac()",
          "340:         {",
          "342:         }",
          "344:     }",
          "",
          "[Removed Lines]",
          "336:     {",
          "337:         PDEmbeddedFile file = null;",
          "338:         COSStream stream = (COSStream)getObjectFromEFDictionary( COSName.MAC );",
          "339:         if( stream != null )",
          "341:             file = new PDEmbeddedFile( stream );",
          "343:         return file;",
          "",
          "[Added Lines]",
          "334:     {",
          "335:         COSBase base = getObjectFromEFDictionary( COSName.MAC );",
          "336:         if (base instanceof COSStream)",
          "338:             return new PDEmbeddedFile((COSStream) base);",
          "340:         return null;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "372:     public PDEmbeddedFile getEmbeddedFileUnix()",
          "377:         {",
          "379:         }",
          "381:     }",
          "",
          "[Removed Lines]",
          "373:     {",
          "374:         PDEmbeddedFile file = null;",
          "375:         COSStream stream = (COSStream)getObjectFromEFDictionary( COSName.UNIX );",
          "376:         if( stream != null )",
          "378:             file = new PDEmbeddedFile( stream );",
          "380:         return file;",
          "",
          "[Added Lines]",
          "370:     {",
          "371:         COSBase base = getObjectFromEFDictionary( COSName.UNIX );",
          "372:         if (base instanceof COSStream)",
          "374:             return new PDEmbeddedFile((COSStream) base);",
          "376:         return null;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "409:     public PDEmbeddedFile getEmbeddedFileUnicode()",
          "414:         {",
          "416:         }",
          "418:     }",
          "",
          "[Removed Lines]",
          "410:     {",
          "411:         PDEmbeddedFile file = null;",
          "412:         COSStream stream = (COSStream)getObjectFromEFDictionary( COSName.UF );",
          "413:         if( stream != null )",
          "415:             file = new PDEmbeddedFile( stream );",
          "417:         return file;",
          "",
          "[Added Lines]",
          "406:     {",
          "407:         COSBase base = getObjectFromEFDictionary( COSName.UF );",
          "408:         if (base instanceof COSStream)",
          "410:             return new PDEmbeddedFile((COSStream) base);",
          "412:         return null;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c689202a556d75b5b3fc742529e9b1a9bd5ac746",
      "candidate_info": {
        "commit_hash": "c689202a556d75b5b3fc742529e9b1a9bd5ac746",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c689202a556d75b5b3fc742529e9b1a9bd5ac746",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ],
        "message": "PDFBOX-4955: add test\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881661 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "287:         flattenAndCompare(sourceUrl, targetFileName);",
          "288:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:     @Test",
          "296:     public void testFlattenPDFBox4955() throws IOException",
          "297:     {",
          "298:         String sourceUrl = \"https://issues.apache.org/jira/secure/attachment/13011410/PDFBOX-4955.pdf\";",
          "299:         String targetFileName = \"PDFBOX-4955.pdf\";",
          "301:         flattenAndCompare(sourceUrl, targetFileName);",
          "302:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "781aec5333633db48b65649f60dc7ca417730e46",
      "candidate_info": {
        "commit_hash": "781aec5333633db48b65649f60dc7ca417730e46",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/781aec5333633db48b65649f60dc7ca417730e46",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java"
        ],
        "message": "PDFBOX-4892: make field private final, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888350 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java||fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java||fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java -> fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     private final Map<Integer,String> charToUnicode = new HashMap<Integer,String>();",
          "59:     private final Map<Integer,Integer> codeToCid = new HashMap<Integer,Integer>();",
          "",
          "[Removed Lines]",
          "56:     Map <String, byte[]> unicodeToByteCodes = new HashMap<String, byte[]>();",
          "",
          "[Added Lines]",
          "56:     private final Map <String, byte[]> unicodeToByteCodes = new HashMap<String, byte[]>();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0c4eb4510e1fcb30d599bbc54cad08dd04387834",
      "candidate_info": {
        "commit_hash": "0c4eb4510e1fcb30d599bbc54cad08dd04387834",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0c4eb4510e1fcb30d599bbc54cad08dd04387834",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java"
        ],
        "message": "PDFBOX-4892: fix typo, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889411 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java"
        ]
      }
    }
  ]
}