{
  "cve_id": "CVE-2022-25295",
  "cve_desc": "This affects the package github.com/gophish/gophish before 0.12.0. The Open Redirect vulnerability exists in the next query parameter. The application uses url.Parse(r.FormValue(\"next\")) to extract path and eventually redirect user to a relative URL, but if next parameter starts with multiple backslashes like \\\\\\\\\\\\example.com, browser will redirect user to http://example.com.",
  "repo": "gophish/gophish",
  "patch_hash": "2a452bda89ffdb85f929fa78290bce1f456881dc",
  "patch_info": {
    "commit_hash": "2a452bda89ffdb85f929fa78290bce1f456881dc",
    "repo": "gophish/gophish",
    "commit_url": "https://github.com/gophish/gophish/commit/2a452bda89ffdb85f929fa78290bce1f456881dc",
    "files": [
      "controllers/route.go"
    ],
    "message": "Fix open redirect vulnerability on the login page",
    "before_after_code_files": [
      "controllers/route.go||controllers/route.go"
    ]
  },
  "patch_diff": {
    "controllers/route.go||controllers/route.go": [
      "File: controllers/route.go -> controllers/route.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  \"html/template\"",
      "8:  \"net/http\"",
      "9:  \"net/url\"",
      "10:  \"time\"",
      "12:  \"github.com/NYTimes/gziphandler\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10:  \"strings\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "296:  next := \"/\"",
      "297:  url, err := url.Parse(r.FormValue(\"next\"))",
      "298:  if err == nil {",
      "300:   if path != \"\" {",
      "302:   }",
      "303:  }",
      "304:  http.Redirect(w, r, next, http.StatusFound)",
      "",
      "[Removed Lines]",
      "299:   path := url.Path",
      "301:    next = path",
      "",
      "[Added Lines]",
      "300:   path := url.EscapedPath()",
      "302:    next = \"/\" + strings.TrimLeft(path, \"/\")",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "67e304f3724e25254822a8c661a67b70f3ab6a6a",
      "candidate_info": {
        "commit_hash": "67e304f3724e25254822a8c661a67b70f3ab6a6a",
        "repo": "gophish/gophish",
        "commit_url": "https://github.com/gophish/gophish/commit/67e304f3724e25254822a8c661a67b70f3ab6a6a",
        "files": [
          "controllers/route.go"
        ],
        "message": "Fix open redirect vulnerability on the login page (#2262)",
        "before_after_code_files": [
          "controllers/route.go||controllers/route.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/gophish/gophish/pull/2262"
        ],
        "olp_code_files": {
          "patch": [
            "controllers/route.go||controllers/route.go"
          ],
          "candidate": [
            "controllers/route.go||controllers/route.go"
          ]
        }
      },
      "candidate_diff": {
        "controllers/route.go||controllers/route.go": [
          "File: controllers/route.go -> controllers/route.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"html/template\"",
          "8:  \"net/http\"",
          "9:  \"net/url\"",
          "10:  \"time\"",
          "12:  \"github.com/NYTimes/gziphandler\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "296:  next := \"/\"",
          "297:  url, err := url.Parse(r.FormValue(\"next\"))",
          "298:  if err == nil {",
          "300:   if path != \"\" {",
          "302:   }",
          "303:  }",
          "304:  http.Redirect(w, r, next, http.StatusFound)",
          "",
          "[Removed Lines]",
          "299:   path := url.Path",
          "301:    next = path",
          "",
          "[Added Lines]",
          "300:   path := url.EscapedPath()",
          "302:    next = \"/\" + strings.TrimLeft(path, \"/\")",
          "",
          "---------------"
        ]
      }
    }
  ]
}