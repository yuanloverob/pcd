{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "563e46590989664f325e1109ef43c74e9dbc6e57",
      "candidate_info": {
        "commit_hash": "563e46590989664f325e1109ef43c74e9dbc6e57",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/563e46590989664f325e1109ef43c74e9dbc6e57",
        "files": [
          "src/resources/js/pages/crud-generated/edit.vue"
        ],
        "message": "commit",
        "before_after_code_files": [
          "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue": [
          "File: src/resources/js/pages/crud-generated/edit.vue -> src/resources/js/pages/crud-generated/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "536:               data.value = [];",
          "537:               Object.entries(record).filter(function (item, key) {",
          "538:                 return (data.value[key] = item[1][destinationTableId]);",
          "542:               data.value =",
          "543:                 this.record[this.$caseConvert.stringSnakeToCamel(data.field)];",
          "544:             }",
          "",
          "[Removed Lines]",
          "539:               });",
          "540:             }",
          "541:              else {",
          "",
          "[Added Lines]",
          "539:               })",
          "540:             } else {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "911ec2b7d1f64833ca5587517d1d91528253e923",
      "candidate_info": {
        "commit_hash": "911ec2b7d1f64833ca5587517d1d91528253e923",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/911ec2b7d1f64833ca5587517d1d91528253e923",
        "files": [
          "src/Config/lfm.php"
        ],
        "message": "update config",
        "before_after_code_files": [
          "src/Config/lfm.php||src/Config/lfm.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Config/lfm.php||src/Config/lfm.php": [
          "File: src/Config/lfm.php -> src/Config/lfm.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             'startup_view' => 'list',",
          "54:             'max_size' => 50000, // size in KB",
          "55:             'valid_mime' => [",
          "56:                 'application/pdf',",
          "57:                 'text/plain',",
          "58:             ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:                 'image/jpeg',",
          "57:                 'image/jpg',",
          "58:                 'image/pjpeg',",
          "59:                 'image/png',",
          "60:                 'image/gif',",
          "61:                 'image/svg+xml',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:             'max_size' => 50000, // size in KB",
          "64:             'valid_mime' => [",
          "65:                 'image/jpeg',",
          "66:                 'image/pjpeg',",
          "67:                 'image/png',",
          "68:                 'image/gif',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:                 'image/jpg',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "127:     'raster_mimetypes' => [",
          "128:         'image/jpeg',",
          "129:         'image/pjpeg',",
          "130:         'image/png',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:         'image/jpg',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "180:     'middleware' => [",
          "181:         'web',",
          "182:         'auth',",
          "184:     ],",
          "185: ];",
          "",
          "[Removed Lines]",
          "183:         BadasoCheckPermissions::class.':browse_file_manager',",
          "",
          "[Added Lines]",
          "191:         BadasoCheckPermissions::class . ':browse_file_manager',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9045832bb5ab24f12f26c41811d2c9e624d6eab9",
      "candidate_info": {
        "commit_hash": "9045832bb5ab24f12f26c41811d2c9e624d6eab9",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/9045832bb5ab24f12f26c41811d2c9e624d6eab9",
        "files": [
          "src/Helpers/GetData.php"
        ],
        "message": "update get data code",
        "before_after_code_files": [
          "src/Helpers/GetData.php||src/Helpers/GetData.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         foreach ($collection as $row) {",
          "54:             $class = new ReflectionClass(get_class($row));",
          "55:             $class_methods = $class->getMethods();",
          "57:             foreach ($class_methods as $class_method) {",
          "58:                 if ($class_method->class == $class->name) {",
          "59:                     try {",
          "",
          "[Removed Lines]",
          "56:             $record = json_decode(json_encode($row));",
          "",
          "[Added Lines]",
          "56:             $record = $row;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99857e2f0ebbc53346e6ec29ce4d067cdc9dd528",
      "candidate_info": {
        "commit_hash": "99857e2f0ebbc53346e6ec29ce4d067cdc9dd528",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/99857e2f0ebbc53346e6ec29ce4d067cdc9dd528",
        "files": [
          "phpstan.neon.dist"
        ],
        "message": "test1",
        "before_after_code_files": [
          "phpstan.neon.dist||phpstan.neon.dist"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpstan.neon.dist||phpstan.neon.dist": [
          "File: phpstan.neon.dist -> phpstan.neon.dist",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: parameters:",
          "5:     paths:",
          "6:         - src",
          "9:     level: 1",
          "",
          "[Removed Lines]",
          "7:         - tests",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88a974113e206d2c0d88ef940a9fc94b3358a960",
      "candidate_info": {
        "commit_hash": "88a974113e206d2c0d88ef940a9fc94b3358a960",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/88a974113e206d2c0d88ef940a9fc94b3358a960",
        "files": [
          "src/Helpers/GetData.php",
          "src/resources/js/pages/crud-generated/browse.vue"
        ],
        "message": "bugfix multiple relation same table",
        "before_after_code_files": [
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:         $relational_fields = collect($data_type->dataRows)->filter(function ($value, $key) {",
          "282:             return $value->relation != null;",
          "283:         })->all();",
          "285:         foreach ($relational_fields as $field) {",
          "286:             $relation_detail = [];",
          "288:             try {",
          "289:                 $relation_detail = is_string($field->relation) ? json_decode($field->relation) : $field->relation;",
          "290:                 $relation_detail = CaseConvert::snake($relation_detail);",
          "291:             } catch (\\Exception $e) {",
          "292:             }",
          "294:             $relation_type = array_key_exists('relation_type', $relation_detail) ? $relation_detail['relation_type'] : null;",
          "295:             $destination_table = array_key_exists('destination_table', $relation_detail) ? $relation_detail['destination_table'] : null;",
          "296:             $destination_table_column = array_key_exists('destination_table_column', $relation_detail) ? $relation_detail['destination_table_column'] : null;",
          "297:             $destination_table_display_column = array_key_exists('destination_table_display_column', $relation_detail) ? $relation_detail['destination_table_display_column'] : null;",
          "299:             if (",
          "300:                 $relation_type",
          "301:                 && $destination_table",
          "302:                 && $destination_table_column",
          "303:                 && $destination_table_display_column",
          "305:                 if (isset($row->{$field->field})) {",
          "306:                     $relation_data = DB::table($destination_table)->select([",
          "307:                         $destination_table_column,",
          "308:                         $destination_table_display_column,",
          "310:                         ->where($destination_table_column, $row->{$field->field})",
          "311:                         ->get();",
          "313:                     switch ($relation_type) {",
          "314:                         case 'belongs_to':",
          "316:                             break;",
          "318:                         case 'has_many':",
          "",
          "[Removed Lines]",
          "304:             ) {",
          "309:                     ])",
          "315:                             $row->{$destination_table} = collect($relation_data)->first();",
          "",
          "[Added Lines]",
          "303:                 ) {",
          "308:                         ])",
          "314:                             if (isset($row->{$destination_table})) {",
          "315:                                 array_push($row->{$destination_table}, collect($relation_data)->first());",
          "316:                             } else {",
          "317:                                 $row->{$destination_table} = collect($relation_data)->toArray();",
          "318:                             }",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue": [
          "File: src/resources/js/pages/crud-generated/browse.vue -> src/resources/js/pages/crud-generated/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1032:     handleSelect(data) {",
          "1033:       this.selected = data;",
          "1034:     },",
          "1036:       if (dataRow.relation) {",
          "1037:         const relationType = dataRow.relation.relationType;",
          "1038:         const table = this.$caseConvert.stringSnakeToCamel(",
          "1039:           dataRow.relation.destinationTable",
          "1041:         this.$caseConvert.stringSnakeToCamel(",
          "1042:           dataRow.relation.destinationTableColumn",
          "1043:         );",
          "",
          "[Removed Lines]",
          "1035:     displayRelationData(record, dataRow) {",
          "1040:         );",
          "",
          "[Added Lines]",
          "1035:     displayRelationData(record, dataRow) {",
          "1040:           );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1047:         if (relationType == \"has_many\") {",
          "1048:           const list = record[table];",
          "1049:           const flatList = list.map((ls) => {",
          "1051:           });",
          "1052:           return flatList.join(\", \");",
          "1053:         } else {",
          "1054:           return record[table] ? record[table][displayColumn] : null;",
          "1055:         }",
          "",
          "[Removed Lines]",
          "1050:             return ls[displayColumn];",
          "",
          "[Added Lines]",
          "1050:               return ls[displayColumn];",
          "1053:         } else if(relationType == \"belongs_to\"){",
          "1054:           const list = record[table];",
          "1055:           let field = this.$caseConvert.stringSnakeToCamel(dataRow.field)",
          "1056:           const flatList = list.map((ls) => {",
          "1057:             if(ls.id == record[field]){",
          "1058:               return ls[displayColumn];",
          "1059:             }",
          "1060:           });",
          "1061:           console.log(flatList)",
          "1062:           return flatList.join(\",\").replace(\",\", \"\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}