{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d58a2ad29cd9ee2ffb1a7c0cc2beda7c13effd1",
      "candidate_info": {
        "commit_hash": "1d58a2ad29cd9ee2ffb1a7c0cc2beda7c13effd1",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/1d58a2ad29cd9ee2ffb1a7c0cc2beda7c13effd1",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java",
          "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java",
          "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/UsersTest.java"
        ],
        "message": "AMBARI-25201 check acting users password on change password request (#2924)\n\n* AMBARI-25201 check acting users password on change password request\n\n* AMBARI-25201 fix failing unit tests (benyoka)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java||ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java",
          "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java||ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java",
          "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/UsersTest.java||ambari-server/src/test/java/org/apache/ambari/server/security/authorization/UsersTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java||ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java -> ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.util.LinkedList;",
          "27: import java.util.List;",
          "28: import java.util.Map;",
          "29: import java.util.Set;",
          "31: import javax.persistence.EntityManager;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import java.util.Optional;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1231:     if (userAuthenticationEntity != null) {",
          "1232:       if (userAuthenticationEntity.getAuthenticationType() == UserAuthenticationType.LOCAL) {",
          "1241:           throw new AmbariException(\"Wrong current password provided\");",
          "1242:         }",
          "",
          "[Removed Lines]",
          "1237:         if (isSelf &&",
          "1238:             (StringUtils.isEmpty(currentKey) || !passwordEncoder.matches(currentKey, userAuthenticationEntity.getAuthenticationKey()))) {",
          "",
          "[Added Lines]",
          "1235:         String expectedCurrentKey = isSelf",
          "1236:           ? userAuthenticationEntity.getAuthenticationKey()",
          "1237:           : getAuthenticatedUserLocalAuthenticationMethod().",
          "1238:               orElseThrow(() -> new AmbariException(\"Authentication error\")).getAuthenticationKey();",
          "1240:         if (StringUtils.isEmpty(currentKey) || !passwordEncoder.matches(currentKey, expectedCurrentKey)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1255:     }",
          "1256:   }",
          "1258:   public void removeAuthentication(String username, Long authenticationId) {",
          "1259:     removeAuthentication(getUserEntity(username), authenticationId);",
          "1260:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1258:   private Optional<AuthenticationMethod> getAuthenticatedUserLocalAuthenticationMethod() {",
          "1259:     User authenticatedUser = getUser(AuthorizationHelper.getAuthenticatedId());",
          "1260:     return authenticatedUser.getAuthenticationMethods().stream()",
          "1261:       .filter(am -> UserAuthenticationType.LOCAL.equals(am.getAuthenticationType()))",
          "1262:       .findAny();",
          "1263:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java||ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java -> ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.server.security.authorization;",
          "20: import static org.junit.Assert.assertEquals;",
          "21: import static org.junit.Assert.assertNotNull;",
          "22: import static org.junit.Assert.assertNotSame;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static java.util.Collections.emptySet;",
          "21: import static org.easymock.EasyMock.expect;",
          "22: import static org.easymock.EasyMock.mock;",
          "23: import static org.easymock.EasyMock.replay;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: import org.apache.ambari.server.orm.entities.ResourceTypeEntity;",
          "50: import org.apache.ambari.server.orm.entities.UserAuthenticationEntity;",
          "51: import org.apache.ambari.server.orm.entities.UserEntity;",
          "52: import org.apache.ambari.server.security.ldap.LdapBatchDto;",
          "53: import org.apache.ambari.server.security.ldap.LdapGroupDto;",
          "54: import org.apache.ambari.server.security.ldap.LdapUserDto;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: import org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57: import org.junit.After;",
          "58: import org.junit.Before;",
          "59: import org.junit.Test;",
          "60: import org.springframework.security.crypto.password.PasswordEncoder;",
          "62: import com.google.inject.Guice;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: import org.springframework.security.core.Authentication;",
          "66: import org.springframework.security.core.context.SecurityContext;",
          "67: import org.springframework.security.core.context.SecurityContextHolder;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "161:     users.grantAdminPrivilege(userEntity);",
          "162:     users.addLocalAuthentication(userEntity, \"admin\");",
          "164:     userEntity = users.createUser(\"user\", \"user\", \"user\");",
          "165:     users.addLocalAuthentication(userEntity, \"user\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     setAuthenticatedUser(userEntity);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "176:     foundUserEntity = userDAO.findUserByName(\"admin\");",
          "177:     assertNotNull(foundUserEntity);",
          "180:     foundUserEntity = userDAO.findUserByName(\"user\");",
          "181:     assertNotNull(foundUserEntity);",
          "",
          "[Removed Lines]",
          "178:     users.modifyAuthentication(foundLocalAuthenticationEntity, \"user\", \"user_new_password\", false);",
          "",
          "[Added Lines]",
          "188:     users.modifyAuthentication(foundLocalAuthenticationEntity, \"admin\", \"user_new_password\", false);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "201:     assertTrue(passwordEncoder.matches(\"user\", foundLocalAuthenticationEntity.getAuthenticationKey()));",
          "203:     try {",
          "205:       fail(\"Null password should not be allowed\");",
          "206:     } catch (AmbariException e) {",
          "207:       assertEquals(\"The new password does not meet the Ambari password requirements\", e.getLocalizedMessage());",
          "",
          "[Removed Lines]",
          "204:       users.modifyAuthentication(foundLocalAuthenticationEntity, \"user\", null, false);",
          "",
          "[Added Lines]",
          "214:       users.modifyAuthentication(foundLocalAuthenticationEntity, \"user\", null, true);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "603:     return null;",
          "604:   }",
          "605: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "616:   private void setAuthenticatedUser(UserEntity userEntity) {",
          "617:     AmbariUserDetailsImpl principal = new AmbariUserDetailsImpl(new User(userEntity), \"\", emptySet());",
          "618:     Authentication auth = mock(Authentication.class);",
          "619:     expect(auth.getPrincipal()).andReturn(principal).anyTimes();",
          "620:     SecurityContext securityContext = mock(SecurityContext.class);",
          "621:     expect(securityContext.getAuthentication()).andReturn(auth).anyTimes();",
          "622:     replay(auth, securityContext);",
          "623:     SecurityContextHolder.setContext(securityContext);",
          "624:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/UsersTest.java||ambari-server/src/test/java/org/apache/ambari/server/security/authorization/UsersTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/security/authorization/UsersTest.java -> ambari-server/src/test/java/org/apache/ambari/server/security/authorization/UsersTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.ambari.server.security.authorization;",
          "21: import static org.easymock.EasyMock.anyObject;",
          "22: import static org.easymock.EasyMock.anyString;",
          "23: import static org.easymock.EasyMock.capture;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import static org.easymock.EasyMock.anyInt;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: import static org.easymock.EasyMock.expect;",
          "26: import static org.easymock.EasyMock.expectLastCall;",
          "27: import static org.easymock.EasyMock.newCapture;",
          "29: import java.util.ArrayList;",
          "30: import java.util.Collection;",
          "31: import java.util.Collections;",
          "32: import java.util.List;",
          "34: import javax.annotation.Nullable;",
          "35: import javax.persistence.EntityManager;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import static org.junit.Assert.assertEquals;",
          "35: import java.util.Objects;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49: import org.apache.ambari.server.orm.entities.PermissionEntity;",
          "50: import org.apache.ambari.server.orm.entities.PrincipalEntity;",
          "51: import org.apache.ambari.server.orm.entities.PrivilegeEntity;",
          "52: import org.apache.ambari.server.orm.entities.UserEntity;",
          "53: import org.apache.ambari.server.state.stack.OsFamily;",
          "54: import org.easymock.Capture;",
          "55: import org.easymock.EasyMock;",
          "56: import org.easymock.EasyMockSupport;",
          "57: import org.junit.Test;",
          "58: import org.springframework.security.crypto.password.PasswordEncoder;",
          "60: import com.google.inject.AbstractModule;",
          "61: import com.google.inject.Guice;",
          "62: import com.google.inject.Injector;",
          "66: public class UsersTest extends EasyMockSupport {",
          "68:   private static final String SERVICEOP_USER_NAME = \"serviceopuser\";",
          "",
          "[Removed Lines]",
          "64: import junit.framework.Assert;",
          "",
          "[Added Lines]",
          "55: import org.apache.ambari.server.orm.entities.UserAuthenticationEntity;",
          "61: import org.junit.Assert;",
          "65: import com.google.common.collect.ImmutableList;",
          "66: import com.google.common.collect.ImmutableSet;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "175:     users.createUser(SERVICEOP_USER_NAME, SERVICEOP_USER_NAME, SERVICEOP_USER_NAME);",
          "176:   }",
          "178:   private void initForCreateUser(@Nullable UserEntity existingUser) {",
          "179:     UserDAO userDao = createStrictMock(UserDAO.class);",
          "180:     expect(userDao.findUserByName(anyString())).andReturn(existingUser);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:   @Test",
          "184:   public void modifyAuthentication_local_bySameUser() throws AmbariException {",
          "186:     UserAuthenticationEntity entity = initForModifyAuthentication();",
          "189:     Users users = injector.getInstance(Users.class);",
          "190:     users.modifyAuthentication(entity, \"hello\", \"world\", true);",
          "193:     assertEquals(\"world\", entity.getAuthenticationKey());",
          "194:   }",
          "196:   @Test(expected = AmbariException.class)",
          "197:   public void modifyAuthentication_local_bySameUser_wrongPassword() throws AmbariException {",
          "199:     UserAuthenticationEntity entity = initForModifyAuthentication();",
          "202:     Users users = injector.getInstance(Users.class);",
          "203:     users.modifyAuthentication(entity, \"12345\", \"world\", true);",
          "204:   }",
          "206:   @Test",
          "207:   public void modifyAuthentication_local_byAdminUser() throws AmbariException {",
          "209:     UserAuthenticationEntity entity = initForModifyAuthentication();",
          "212:     Users users = injector.getInstance(Users.class);",
          "213:     users.modifyAuthentication(entity, \"admin1234\", \"world\", false);",
          "216:     assertEquals(\"world\", entity.getAuthenticationKey());",
          "217:   }",
          "219:   @Test(expected = AmbariException.class)",
          "220:   public void modifyAuthentication_local_byAdminUser_wrongPassword() throws AmbariException {",
          "222:     UserAuthenticationEntity entity = initForModifyAuthentication();",
          "225:     Users users = injector.getInstance(Users.class);",
          "226:     users.modifyAuthentication(entity, \"wrong password\", \"world\", false);",
          "227:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "186:     createInjector(userDao, entityManager);",
          "187:   }",
          "189:   private void createInjector() {",
          "190:     createInjector(createMock(UserDAO.class), createMock(EntityManager.class));",
          "191:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240:   private UserAuthenticationEntity initForModifyAuthentication() {",
          "241:     UserAuthenticationEntity userEntity = new UserAuthenticationEntity();",
          "242:     userEntity.setAuthenticationKey(\"hello\");",
          "243:     userEntity.setAuthenticationType(UserAuthenticationType.LOCAL);",
          "245:     EntityManager manager = mock(EntityManager.class);",
          "246:     expect(manager.merge(userEntity)).andReturn(userEntity).once();",
          "248:     UserDAO dao = createMock(UserDAO.class);",
          "249:     UserEntity admin = new UserEntity();",
          "250:     admin.setUserId(-1);",
          "251:     admin.setUserName(\"admin\");",
          "252:     PrincipalEntity principalEntity = new PrincipalEntity();",
          "253:     admin.setPrincipal(principalEntity);",
          "254:     PrivilegeEntity privilegeEntity = new PrivilegeEntity();",
          "255:     principalEntity.setPrivileges(ImmutableSet.of(privilegeEntity));",
          "256:     PermissionEntity permissionEntity = new PermissionEntity();",
          "257:     privilegeEntity.setPermission(permissionEntity);",
          "258:     permissionEntity.setPermissionName(PermissionEntity.AMBARI_ADMINISTRATOR_PERMISSION_NAME);",
          "259:     UserAuthenticationEntity adminAuthentication = new UserAuthenticationEntity();",
          "260:     admin.setAuthenticationEntities(ImmutableList.of(adminAuthentication));",
          "261:     adminAuthentication.setAuthenticationKey(\"admin1234\");",
          "262:     expect(dao.findByPK(anyInt())).andReturn(admin).anyTimes();",
          "264:     createInjector(dao, manager);",
          "265:     replayAll();",
          "266:     return userEntity;",
          "267:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "200:         bind(UserDAO.class).toInstance(mockUserDao);",
          "201:         bind(MemberDAO.class).toInstance(createMock(MemberDAO.class));",
          "202:         bind(PrivilegeDAO.class).toInstance(createMock(PrivilegeDAO.class));",
          "204:         bind(HookService.class).toInstance(createMock(HookService.class));",
          "205:         bind(HookContextFactory.class).toInstance(createMock(HookContextFactory.class));",
          "206:         bind(PrincipalDAO.class).toInstance(createMock(PrincipalDAO.class));",
          "207:         bind(Configuration.class).toInstance(createNiceMock(Configuration.class));",
          "208:         bind(AmbariLdapConfigurationProvider.class).toInstance(createMock(AmbariLdapConfigurationProvider.class));",
          "209:       }",
          "210:     });",
          "211:   }",
          "",
          "[Removed Lines]",
          "203:         bind(PasswordEncoder.class).toInstance(createMock(PasswordEncoder.class));",
          "",
          "[Added Lines]",
          "289:         PasswordEncoder nopEncoder = createMock(PasswordEncoder.class);",
          "290:         expect(nopEncoder.matches(anyString(), anyString())).andAnswer(",
          "291:           () -> Objects.equals(EasyMock.getCurrentArguments()[0], EasyMock.getCurrentArguments()[1])).anyTimes();",
          "292:         expect(nopEncoder.encode(anyString())).andAnswer(",
          "293:           () -> (String)EasyMock.getCurrentArguments()[0]).anyTimes();",
          "294:         bind(PasswordEncoder.class).toInstance(nopEncoder);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d7dba90c34af4d8ba0579d86e6b65e9b43acdd2d",
      "candidate_info": {
        "commit_hash": "d7dba90c34af4d8ba0579d86e6b65e9b43acdd2d",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/d7dba90c34af4d8ba0579d86e6b65e9b43acdd2d",
        "files": [
          "ambari-metrics/ambari-metrics-timelineservice/conf/unix/amshbase_metrics_whitelist",
          "ambari-metrics/ambari-metrics-timelineservice/conf/unix/metrics_whitelist",
          "ambari-metrics/ambari-metrics-timelineservice/conf/windows/amshbase_metrics_whitelist",
          "ambari-metrics/ambari-metrics-timelineservice/conf/windows/metrics_whitelist",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/AMS-HBASE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HBASE_MASTER.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/AMS-HBASE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/HBASE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NAMENODE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NIMBUS.dat",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/metrics.json",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/grafana-dashboards/HDP/grafana-hbase-misc.json",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/grafana-dashboards/default/grafana-ams-hbase-misc.json",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/service-metrics/AMBARI_METRICS.txt",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/service-metrics/HBASE.txt",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/metrics.json",
          "ambari-server/src/main/resources/stacks/HDP/2.3/services/HBASE/metrics.json",
          "ambari-server/src/main/resources/stacks/PERF/1.0/services/FAKEHBASE/metrics.json",
          "ambari-server/src/test/resources/hbase_hbasemaster_jmx_2.json",
          "ambari-web/app/controllers/global/update_controller.js",
          "ambari-web/app/mappers/service_metrics_mapper.js",
          "ambari-web/test/controllers/global/update_controller_test.js",
          "ambari-web/test/mappers/service_mapper_test.js"
        ],
        "message": "[AMBARI-24494] Ambari API does not return AssignmentManager HBase point in time metrics through API. (#2104)",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/AMS-HBASE.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/AMS-HBASE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HBASE_MASTER.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HBASE_MASTER.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/AMS-HBASE.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/AMS-HBASE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/HBASE.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/HBASE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NAMENODE.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NAMENODE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NIMBUS.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NIMBUS.dat",
          "ambari-web/app/controllers/global/update_controller.js||ambari-web/app/controllers/global/update_controller.js",
          "ambari-web/app/mappers/service_metrics_mapper.js||ambari-web/app/mappers/service_metrics_mapper.js",
          "ambari-web/test/controllers/global/update_controller_test.js||ambari-web/test/controllers/global/update_controller_test.js",
          "ambari-web/test/mappers/service_mapper_test.js||ambari-web/test/mappers/service_mapper_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/AMS-HBASE.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/AMS-HBASE.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/AMS-HBASE.dat -> ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/AMS-HBASE.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: jvm.JvmMetrics.ThreadsRunnable",
          "29: jvm.JvmMetrics.ThreadsTerminated",
          "30: jvm.JvmMetrics.ThreadsTimedWaiting",
          "38: jvm.JvmMetrics.ThreadsWaiting",
          "51: master.Balancer.BalancerCluster_75th_percentile",
          "52: master.Balancer.BalancerCluster_95th_percentile",
          "53: master.Balancer.BalancerCluster_99th_percentile",
          "",
          "[Removed Lines]",
          "31: master.AssignmentManger.Assign_75th_percentile",
          "32: master.AssignmentManger.Assign_95th_percentile",
          "33: master.AssignmentManger.Assign_99th_percentile",
          "34: master.AssignmentManger.Assign_max",
          "35: master.AssignmentManger.Assign_mean",
          "36: master.AssignmentManger.Assign_median",
          "37: master.AssignmentManger.Assign_min",
          "39: master.AssignmentManger.Assign_num_ops",
          "40: master.AssignmentManger.BulkAssign_75th_percentile",
          "41: master.AssignmentManger.BulkAssign_95th_percentile",
          "42: master.AssignmentManger.BulkAssign_99th_percentile",
          "43: master.AssignmentManger.BulkAssign_max",
          "44: master.AssignmentManger.BulkAssign_mean",
          "45: master.AssignmentManger.BulkAssign_median",
          "46: master.AssignmentManger.BulkAssign_min",
          "47: master.AssignmentManger.BulkAssign_num_ops",
          "48: master.AssignmentManger.ritCount",
          "49: master.AssignmentManger.ritCountOverThreshold",
          "50: master.AssignmentManger.ritOldestAge",
          "",
          "[Added Lines]",
          "31: master.AssignmentManager.Assign_75th_percentile",
          "32: master.AssignmentManager.Assign_95th_percentile",
          "33: master.AssignmentManager.Assign_99th_percentile",
          "34: master.AssignmentManager.Assign_max",
          "35: master.AssignmentManager.Assign_mean",
          "36: master.AssignmentManager.Assign_median",
          "37: master.AssignmentManager.Assign_min",
          "39: master.AssignmentManager.Assign_num_ops",
          "40: master.AssignmentManager.BulkAssign_75th_percentile",
          "41: master.AssignmentManager.BulkAssign_95th_percentile",
          "42: master.AssignmentManager.BulkAssign_99th_percentile",
          "43: master.AssignmentManager.BulkAssign_max",
          "44: master.AssignmentManager.BulkAssign_mean",
          "45: master.AssignmentManager.BulkAssign_median",
          "46: master.AssignmentManager.BulkAssign_min",
          "47: master.AssignmentManager.BulkAssign_num_ops",
          "48: master.AssignmentManager.ritCount",
          "49: master.AssignmentManager.ritCountOverThreshold",
          "50: master.AssignmentManager.ritOldestAge",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HBASE_MASTER.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HBASE_MASTER.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HBASE_MASTER.dat -> ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HBASE_MASTER.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: jvm.Master.JvmMetrics.ThreadsTerminated",
          "49: jvm.Master.JvmMetrics.ThreadsTimedWaiting",
          "50: jvm.Master.JvmMetrics.ThreadsWaiting",
          "78: master.Balancer.BalancerCluster_25th_percentile",
          "79: master.Balancer.BalancerCluster_75th_percentile",
          "80: master.Balancer.BalancerCluster_90th_percentile",
          "",
          "[Removed Lines]",
          "51: master.AssignmentManger.Assign_25th_percentile",
          "52: master.AssignmentManger.Assign_75th_percentile",
          "53: master.AssignmentManger.Assign_90th_percentile",
          "54: master.AssignmentManger.Assign_95th_percentile",
          "55: master.AssignmentManger.Assign_98th_percentile",
          "56: master.AssignmentManger.Assign_99.9th_percentile",
          "57: master.AssignmentManger.Assign_99th_percentile",
          "58: master.AssignmentManger.Assign_max",
          "59: master.AssignmentManger.Assign_mean",
          "60: master.AssignmentManger.Assign_median",
          "61: master.AssignmentManger.Assign_min",
          "62: master.AssignmentManger.Assign_num_ops",
          "63: master.AssignmentManger.BulkAssign_25th_percentile",
          "64: master.AssignmentManger.BulkAssign_75th_percentile",
          "65: master.AssignmentManger.BulkAssign_90th_percentile",
          "66: master.AssignmentManger.BulkAssign_95th_percentile",
          "67: master.AssignmentManger.BulkAssign_98th_percentile",
          "68: master.AssignmentManger.BulkAssign_99.9th_percentile",
          "69: master.AssignmentManger.BulkAssign_99th_percentile",
          "70: master.AssignmentManger.BulkAssign_max",
          "71: master.AssignmentManger.BulkAssign_mean",
          "72: master.AssignmentManger.BulkAssign_median",
          "73: master.AssignmentManger.BulkAssign_min",
          "74: master.AssignmentManger.BulkAssign_num_ops",
          "75: master.AssignmentManger.ritCount",
          "76: master.AssignmentManger.ritCountOverThreshold",
          "77: master.AssignmentManger.ritOldestAge",
          "",
          "[Added Lines]",
          "51: master.AssignmentManager.Assign_25th_percentile",
          "52: master.AssignmentManager.Assign_75th_percentile",
          "53: master.AssignmentManager.Assign_90th_percentile",
          "54: master.AssignmentManager.Assign_95th_percentile",
          "55: master.AssignmentManager.Assign_98th_percentile",
          "56: master.AssignmentManager.Assign_99.9th_percentile",
          "57: master.AssignmentManager.Assign_99th_percentile",
          "58: master.AssignmentManager.Assign_max",
          "59: master.AssignmentManager.Assign_mean",
          "60: master.AssignmentManager.Assign_median",
          "61: master.AssignmentManager.Assign_min",
          "62: master.AssignmentManager.Assign_num_ops",
          "63: master.AssignmentManager.BulkAssign_25th_percentile",
          "64: master.AssignmentManager.BulkAssign_75th_percentile",
          "65: master.AssignmentManager.BulkAssign_90th_percentile",
          "66: master.AssignmentManager.BulkAssign_95th_percentile",
          "67: master.AssignmentManager.BulkAssign_98th_percentile",
          "68: master.AssignmentManager.BulkAssign_99.9th_percentile",
          "69: master.AssignmentManager.BulkAssign_99th_percentile",
          "70: master.AssignmentManager.BulkAssign_max",
          "71: master.AssignmentManager.BulkAssign_mean",
          "72: master.AssignmentManager.BulkAssign_median",
          "73: master.AssignmentManager.BulkAssign_min",
          "74: master.AssignmentManager.BulkAssign_num_ops",
          "75: master.AssignmentManager.ritCount",
          "76: master.AssignmentManager.ritCountOverThreshold",
          "77: master.AssignmentManager.ritOldestAge",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat -> ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: jvm.JvmMetrics.ThreadsRunnable",
          "85: jvm.JvmMetrics.ThreadsTerminated",
          "86: jvm.JvmMetrics.ThreadsTimedWaiting",
          "94: jvm.JvmMetrics.ThreadsWaiting",
          "107: master.Balancer.BalancerCluster_75th_percentile",
          "108: master.Balancer.BalancerCluster_95th_percentile",
          "109: master.Balancer.BalancerCluster_99th_percentile",
          "",
          "[Removed Lines]",
          "87: master.AssignmentManger.Assign_75th_percentile",
          "88: master.AssignmentManger.Assign_95th_percentile",
          "89: master.AssignmentManger.Assign_99th_percentile",
          "90: master.AssignmentManger.Assign_max",
          "91: master.AssignmentManger.Assign_mean",
          "92: master.AssignmentManger.Assign_median",
          "93: master.AssignmentManger.Assign_min",
          "95: master.AssignmentManger.Assign_num_ops",
          "96: master.AssignmentManger.BulkAssign_75th_percentile",
          "97: master.AssignmentManger.BulkAssign_95th_percentile",
          "98: master.AssignmentManger.BulkAssign_99th_percentile",
          "99: master.AssignmentManger.BulkAssign_max",
          "100: master.AssignmentManger.BulkAssign_mean",
          "101: master.AssignmentManger.BulkAssign_median",
          "102: master.AssignmentManger.BulkAssign_min",
          "103: master.AssignmentManger.BulkAssign_num_ops",
          "104: master.AssignmentManger.ritCount",
          "105: master.AssignmentManger.ritCountOverThreshold",
          "106: master.AssignmentManger.ritOldestAge",
          "",
          "[Added Lines]",
          "87: master.AssignmentManager.Assign_75th_percentile",
          "88: master.AssignmentManager.Assign_95th_percentile",
          "89: master.AssignmentManager.Assign_99th_percentile",
          "90: master.AssignmentManager.Assign_max",
          "91: master.AssignmentManager.Assign_mean",
          "92: master.AssignmentManager.Assign_median",
          "93: master.AssignmentManager.Assign_min",
          "95: master.AssignmentManager.Assign_num_ops",
          "96: master.AssignmentManager.BulkAssign_75th_percentile",
          "97: master.AssignmentManager.BulkAssign_95th_percentile",
          "98: master.AssignmentManager.BulkAssign_99th_percentile",
          "99: master.AssignmentManager.BulkAssign_max",
          "100: master.AssignmentManager.BulkAssign_mean",
          "101: master.AssignmentManager.BulkAssign_median",
          "102: master.AssignmentManager.BulkAssign_min",
          "103: master.AssignmentManager.BulkAssign_num_ops",
          "104: master.AssignmentManager.ritCount",
          "105: master.AssignmentManager.ritCountOverThreshold",
          "106: master.AssignmentManager.ritOldestAge",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346: jvm.JvmMetrics.ThreadsRunnable",
          "347: jvm.JvmMetrics.ThreadsTerminated",
          "348: jvm.JvmMetrics.ThreadsTimedWaiting",
          "356: jvm.JvmMetrics.ThreadsWaiting",
          "369: master.Balancer.BalancerCluster_75th_percentile",
          "370: master.Balancer.BalancerCluster_95th_percentile",
          "371: master.Balancer.BalancerCluster_99th_percentile",
          "",
          "[Removed Lines]",
          "349: master.AssignmentManger.Assign_75th_percentile",
          "350: master.AssignmentManger.Assign_95th_percentile",
          "351: master.AssignmentManger.Assign_99th_percentile",
          "352: master.AssignmentManger.Assign_max",
          "353: master.AssignmentManger.Assign_mean",
          "354: master.AssignmentManger.Assign_median",
          "355: master.AssignmentManger.Assign_min",
          "357: master.AssignmentManger.Assign_num_ops",
          "358: master.AssignmentManger.BulkAssign_75th_percentile",
          "359: master.AssignmentManger.BulkAssign_95th_percentile",
          "360: master.AssignmentManger.BulkAssign_99th_percentile",
          "361: master.AssignmentManger.BulkAssign_max",
          "362: master.AssignmentManger.BulkAssign_mean",
          "363: master.AssignmentManger.BulkAssign_median",
          "364: master.AssignmentManger.BulkAssign_min",
          "365: master.AssignmentManger.BulkAssign_num_ops",
          "366: master.AssignmentManger.ritCount",
          "367: master.AssignmentManger.ritCountOverThreshold",
          "368: master.AssignmentManger.ritOldestAge",
          "",
          "[Added Lines]",
          "349: master.AssignmentManager.Assign_75th_percentile",
          "350: master.AssignmentManager.Assign_95th_percentile",
          "351: master.AssignmentManager.Assign_99th_percentile",
          "352: master.AssignmentManager.Assign_max",
          "353: master.AssignmentManager.Assign_mean",
          "354: master.AssignmentManager.Assign_median",
          "355: master.AssignmentManager.Assign_min",
          "357: master.AssignmentManager.Assign_num_ops",
          "358: master.AssignmentManager.BulkAssign_75th_percentile",
          "359: master.AssignmentManager.BulkAssign_95th_percentile",
          "360: master.AssignmentManager.BulkAssign_99th_percentile",
          "361: master.AssignmentManager.BulkAssign_max",
          "362: master.AssignmentManager.BulkAssign_mean",
          "363: master.AssignmentManager.BulkAssign_median",
          "364: master.AssignmentManager.BulkAssign_min",
          "365: master.AssignmentManager.BulkAssign_num_ops",
          "366: master.AssignmentManager.ritCount",
          "367: master.AssignmentManager.ritCountOverThreshold",
          "368: master.AssignmentManager.ritOldestAge",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "648: jvm.JvmMetrics.ThreadsRunnable",
          "649: jvm.JvmMetrics.ThreadsTerminated",
          "650: jvm.JvmMetrics.ThreadsTimedWaiting",
          "655: regionserver.Server.Append_95th_percentile",
          "658: regionserver.Replication.sink.appliedOps",
          "659: regionserver.Replication.sink.appliedBatches",
          "660: regionserver.Replication.sink.ageOfLastAppliedOp",
          "",
          "[Removed Lines]",
          "651: master.AssignmentManger.Assign_75th_percentile",
          "652: master.AssignmentManger.Assign_95th_percentile",
          "653: master.AssignmentManger.Assign_99th_percentile",
          "654: master.AssignmentManger.Assign_max",
          "656: master.AssignmentManger.Assign_mean",
          "657: master.AssignmentManger.Assign_median",
          "",
          "[Added Lines]",
          "651: master.AssignmentManager.Assign_75th_percentile",
          "652: master.AssignmentManager.Assign_95th_percentile",
          "653: master.AssignmentManager.Assign_99th_percentile",
          "654: master.AssignmentManager.Assign_max",
          "656: master.AssignmentManager.Assign_mean",
          "657: master.AssignmentManager.Assign_median",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "664: regionserver.RegionServer.numOpenConnections",
          "665: regionserver.RegionServer.numCallsInPriorityQueue",
          "666: regionserver.Server.Replay_num_ops",
          "669: regionserver.Server.checkMutateFailedCount",
          "670: regionserver.RegionServer.exceptions.RegionTooBusyException",
          "671: regionserver.RegionServer.exceptions.RegionMovedException",
          "672: regionserver.RegionServer.exceptions.OutOfOrderScannerNextException",
          "675: regionserver.RegionServer.exceptions.FailedSanityCheckException",
          "676: regionserver.RegionServer.exceptions",
          "677: regionserver.RegionServer.authorizationSuccesses",
          "678: regionserver.RegionServer.authenticationSuccesses",
          "679: regionserver.RegionServer.authenticationFailures",
          "680: regionserver.RegionServer.TotalCallTime_num_ops",
          "682: jvm.JvmMetrics.ThreadsWaiting",
          "683: regionserver.RegionServer.TotalCallTime_median",
          "684: regionserver.RegionServer.TotalCallTime_mean",
          "686: regionserver.RegionServer.TotalCallTime_95th_percentile",
          "687: regionserver.RegionServer.TotalCallTime_75th_percentile",
          "688: regionserver.RegionServer.QueueCallTime_num_ops",
          "691: regionserver.RegionServer.QueueCallTime_median",
          "692: regionserver.RegionServer.QueueCallTime_mean",
          "693: regionserver.RegionServer.QueueCallTime_max",
          "",
          "[Removed Lines]",
          "667: master.AssignmentManger.Assign_min",
          "668: master.AssignmentManger.Assign_num_ops",
          "673: master.AssignmentManger.BulkAssign_75th_percentile",
          "674: master.AssignmentManger.BulkAssign_95th_percentile",
          "681: master.AssignmentManger.BulkAssign_99th_percentile",
          "685: master.AssignmentManger.BulkAssign_max",
          "689: master.AssignmentManger.BulkAssign_mean",
          "690: master.AssignmentManger.BulkAssign_median",
          "",
          "[Added Lines]",
          "667: master.AssignmentManager.Assign_min",
          "668: master.AssignmentManager.Assign_num_ops",
          "673: master.AssignmentManager.BulkAssign_75th_percentile",
          "674: master.AssignmentManager.BulkAssign_95th_percentile",
          "681: master.AssignmentManager.BulkAssign_99th_percentile",
          "685: master.AssignmentManager.BulkAssign_max",
          "689: master.AssignmentManager.BulkAssign_mean",
          "690: master.AssignmentManager.BulkAssign_median",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "697: regionserver.RegionServer.ProcessCallTime_median",
          "698: regionserver.RegionServer.ProcessCallTime_mean",
          "699: regionserver.Server.ScanNext_num_ops",
          "702: regionserver.RegionServer.ProcessCallTime_95th_percentile",
          "706: master.Balancer.BalancerCluster_75th_percentile",
          "707: master.Balancer.BalancerCluster_95th_percentile",
          "708: master.Balancer.BalancerCluster_99th_percentile",
          "",
          "[Removed Lines]",
          "700: master.AssignmentManger.BulkAssign_num_ops",
          "701: master.AssignmentManger.BulkAssign_min",
          "703: master.AssignmentManger.ritCount",
          "704: master.AssignmentManger.ritCountOverThreshold",
          "705: master.AssignmentManger.ritOldestAge",
          "",
          "[Added Lines]",
          "700: master.AssignmentManager.BulkAssign_num_ops",
          "701: master.AssignmentManager.BulkAssign_min",
          "703: master.AssignmentManager.ritCount",
          "704: master.AssignmentManager.ritCountOverThreshold",
          "705: master.AssignmentManager.ritOldestAge",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/AMS-HBASE.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/AMS-HBASE.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/AMS-HBASE.dat -> ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/AMS-HBASE.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: dfs.FSNamesystem.TransactionsSinceLastLogRoll",
          "14: master.Server.averageLoad",
          "15: jvm.JvmMetrics.MemHeapUsedM",
          "17: dfs.FSNamesystem.PendingDataNodeMessageCount",
          "18: dfs.FSNamesystem.StaleDataNodes",
          "19: |hostname|",
          "",
          "[Removed Lines]",
          "16: master.AssignmentManger.ritCount",
          "",
          "[Added Lines]",
          "16: master.AssignmentManager.ritCount",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/HBASE.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/HBASE.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/HBASE.dat -> ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/HBASE.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: dfs.FSNamesystem.TransactionsSinceLastLogRoll",
          "14: master.Server.averageLoad",
          "15: jvm.JvmMetrics.MemHeapUsedM",
          "17: dfs.FSNamesystem.PendingDataNodeMessageCount",
          "18: dfs.FSNamesystem.StaleDataNodes",
          "19: |hostname|",
          "",
          "[Removed Lines]",
          "16: master.AssignmentManger.ritCount",
          "",
          "[Added Lines]",
          "16: master.AssignmentManager.ritCount",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NAMENODE.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NAMENODE.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NAMENODE.dat -> ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NAMENODE.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: dfs.FSNamesystem.TransactionsSinceLastLogRoll",
          "14: master.Server.averageLoad",
          "15: jvm.JvmMetrics.MemHeapUsedM",
          "17: dfs.FSNamesystem.PendingDataNodeMessageCount",
          "18: dfs.FSNamesystem.StaleDataNodes",
          "19: |hostname|",
          "",
          "[Removed Lines]",
          "16: master.AssignmentManger.ritCount",
          "",
          "[Added Lines]",
          "16: master.AssignmentManager.ritCount",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NIMBUS.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NIMBUS.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NIMBUS.dat -> ambari-metrics/ambari-metrics-timelineservice/src/test/resources/ui_metrics_def/NIMBUS.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: dfs.FSNamesystem.Snapshots",
          "13: dfs.FSNamesystem.TransactionsSinceLastLogRoll",
          "14: master.Server.averageLoad",
          "16: dfs.FSNamesystem.PendingDataNodeMessageCount",
          "17: dfs.FSNamesystem.StaleDataNodes",
          "18: |hostname|",
          "",
          "[Removed Lines]",
          "15: jvm.JvmMetrics.MemHeapUsedM,master.AssignmentManger.ritCount",
          "",
          "[Added Lines]",
          "15: jvm.JvmMetrics.MemHeapUsedM,master.AssignmentManager.ritCount",
          "",
          "---------------"
        ],
        "ambari-web/app/controllers/global/update_controller.js||ambari-web/app/controllers/global/update_controller.js": [
          "File: ambari-web/app/controllers/global/update_controller.js -> ambari-web/app/controllers/global/update_controller.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:              \"host_components/metrics/hbase/master/MasterStartTime,\" +",
          "68:              \"host_components/metrics/hbase/master/MasterActiveTime,\" +",
          "69:              \"host_components/metrics/hbase/master/AverageLoad,\" +",
          "71:     'STORM': 'metrics/api/v1/cluster/summary,metrics/api/v1/topology/summary,metrics/api/v1/nimbus/summary',",
          "72:     'HDFS': 'host_components/metrics/dfs/namenode/ClusterId'",
          "73:   },",
          "",
          "[Removed Lines]",
          "70:              \"host_components/metrics/master/AssignmentManger/ritCount\",",
          "",
          "[Added Lines]",
          "70:              \"host_components/metrics/master/AssignmentManager/ritCount\",",
          "",
          "---------------"
        ],
        "ambari-web/app/mappers/service_metrics_mapper.js||ambari-web/app/mappers/service_metrics_mapper.js": [
          "File: ambari-web/app/mappers/service_metrics_mapper.js -> ambari-web/app/mappers/service_metrics_mapper.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:           var activeHostComponentIndex = component.host_components.indexOf(activeMaster);",
          "738:           self.setActiveAsFirstHostComponent(component, activeHostComponentIndex);",
          "739:           var regionsArray = null;",
          "742:           }",
          "744:           if (Array.isArray(regionsArray)) {",
          "",
          "[Removed Lines]",
          "740:           if (!Em.none(Em.get(component.host_components[0], 'metrics.master.AssignmentManger.ritCount'))) {",
          "741:             regionsArray = App.parseJSON(component.host_components[0].metrics.master.AssignmentManger.ritCount);",
          "",
          "[Added Lines]",
          "740:           if (!Em.none(Em.get(component.host_components[0], 'metrics.master.AssignmentManager.ritCount'))) {",
          "741:             regionsArray = App.parseJSON(component.host_components[0].metrics.master.AssignmentManager.ritCount);",
          "",
          "---------------"
        ],
        "ambari-web/test/controllers/global/update_controller_test.js||ambari-web/test/controllers/global/update_controller_test.js": [
          "File: ambari-web/test/controllers/global/update_controller_test.js -> ambari-web/test/controllers/global/update_controller_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:         \"host_components/metrics/hbase/master/MasterStartTime,\" +",
          "162:         \"host_components/metrics/hbase/master/MasterActiveTime,\" +",
          "163:         \"host_components/metrics/hbase/master/AverageLoad,\" +",
          "165:       },",
          "166:       {",
          "167:         title: 'STORM service',",
          "",
          "[Removed Lines]",
          "164:         \"host_components/metrics/master/AssignmentManger/ritCount\"]",
          "",
          "[Added Lines]",
          "164:         \"host_components/metrics/master/AssignmentManager/ritCount\"]",
          "",
          "---------------"
        ],
        "ambari-web/test/mappers/service_mapper_test.js||ambari-web/test/mappers/service_mapper_test.js": [
          "File: ambari-web/test/mappers/service_mapper_test.js -> ambari-web/test/mappers/service_mapper_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:                       }",
          "46:                     },",
          "47:                     master: {",
          "49:                         ritCount: 0",
          "50:                       }",
          "51:                     }",
          "",
          "[Removed Lines]",
          "48:                       AssignmentManger: {",
          "",
          "[Added Lines]",
          "48:                       AssignmentManager: {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:                       }",
          "77:                     },",
          "78:                     master: {",
          "80:                         ritCount: 0",
          "81:                       }",
          "82:                     }",
          "",
          "[Removed Lines]",
          "79:                       AssignmentManger: {",
          "",
          "[Added Lines]",
          "79:                       AssignmentManager: {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:                       }",
          "108:                     },",
          "109:                     master: {",
          "111:                         ritCount: 0",
          "112:                       }",
          "113:                     }",
          "",
          "[Removed Lines]",
          "110:                       AssignmentManger: {",
          "",
          "[Added Lines]",
          "110:                       AssignmentManager: {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "138:                       }",
          "139:                     },",
          "140:                     master: {",
          "142:                         ritCount: 0",
          "143:                       }",
          "144:                     }",
          "",
          "[Removed Lines]",
          "141:                       AssignmentManger: {",
          "",
          "[Added Lines]",
          "141:                       AssignmentManager: {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77d348c6dd8173b01f3319a61ca757e4fd9d0182",
      "candidate_info": {
        "commit_hash": "77d348c6dd8173b01f3319a61ca757e4fd9d0182",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/77d348c6dd8173b01f3319a61ca757e4fd9d0182",
        "files": [
          "ambari-server/conf/unix/ambari.properties",
          "ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java",
          "ambari-server/src/main/java/org/apache/ambari/server/view/ViewExtractor.java",
          "ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java",
          "ambari-server/src/test/java/org/apache/ambari/server/view/ViewExtractorTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java"
        ],
        "message": "AMBARI-24231 : Adding additional jars in classpath of ambari views (nitirajrathore)  (#2161)\n\n* AMBARI-24231 : Adding additional jars in classpath of ambari views (nitirajrathore)\n\n* AMBARI-24231 : (review comments) Adding additional jars in classpath of ambari views (nitirajrathore)",
        "before_after_code_files": [
          "ambari-server/conf/unix/ambari.properties||ambari-server/conf/unix/ambari.properties",
          "ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java||ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java",
          "ambari-server/src/main/java/org/apache/ambari/server/view/ViewExtractor.java||ambari-server/src/main/java/org/apache/ambari/server/view/ViewExtractor.java",
          "ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java||ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java",
          "ambari-server/src/test/java/org/apache/ambari/server/view/ViewExtractorTest.java||ambari-server/src/test/java/org/apache/ambari/server/view/ViewExtractorTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java||ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/conf/unix/ambari.properties||ambari-server/conf/unix/ambari.properties": [
          "File: ambari-server/conf/unix/ambari.properties -> ambari-server/conf/unix/ambari.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "124: views.http.x-frame-options=SAMEORIGIN",
          "125: views.http.x-content-type-options=nosniff",
          "126: views.http.cache-control=no-store",
          "127: views.http.pragma=no-cache",
          "128: views.http.charset=utf-8",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127: #views.additional.classpath=<comma separated list of dir and jars>",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java||ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java -> ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2268:   public static final ConfigurationProperty<String> VIEWS_HTTP_CACHE_CONTROL_HEADER_VALUE = new ConfigurationProperty<>(",
          "2269:       \"views.http.cache-control\", \"no-store\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2276:   @Markdown(description = \"Additional class path added to each Ambari View. Comma separated jars or directories\")",
          "2277:   public static final ConfigurationProperty<String> VIEWS_ADDITIONAL_CLASSPATH_VALUE = new ConfigurationProperty<>(",
          "2278:       \"views.additional.classpath\", \"\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3746:     return getProperty(VIEWS_HTTP_CACHE_CONTROL_HEADER_VALUE);",
          "3747:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3767:   public String getViewsAdditionalClasspath() {",
          "3768:     return getProperty(VIEWS_ADDITIONAL_CLASSPATH_VALUE);",
          "3769:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/view/ViewExtractor.java||ambari-server/src/main/java/org/apache/ambari/server/view/ViewExtractor.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/view/ViewExtractor.java -> ambari-server/src/main/java/org/apache/ambari/server/view/ViewExtractor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import java.io.File;",
          "21: import java.io.FileOutputStream;",
          "22: import java.io.IOException;",
          "23: import java.net.URL;",
          "24: import java.util.LinkedList;",
          "25: import java.util.List;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.net.MalformedURLException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:       throws ExtractionException {",
          "74:     String archivePath = archiveDir.getAbsolutePath();",
          "",
          "[Removed Lines]",
          "71:   public ClassLoader extractViewArchive(ViewEntity view, File viewArchive, File archiveDir)",
          "",
          "[Added Lines]",
          "73:   public ClassLoader extractViewArchive(ViewEntity view, File viewArchive, File archiveDir, List<File> viewsAdditionalClasspath)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160:       ViewConfig viewConfig = archiveUtility.getViewConfigFromExtractedArchive(archivePath, false);",
          "164:     } catch (Exception e) {",
          "165:       String msg = \"Caught exception trying to extract the view archive \" + archivePath + \".\";",
          "",
          "[Removed Lines]",
          "162:       return getArchiveClassLoader(viewConfig, archiveDir);",
          "",
          "[Added Lines]",
          "164:       return getArchiveClassLoader(viewConfig, archiveDir, viewsAdditionalClasspath);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192:       throws IOException {",
          "194:     String    archivePath = archiveDir.getAbsolutePath();",
          "",
          "[Removed Lines]",
          "191:   private ClassLoader getArchiveClassLoader(ViewConfig viewConfig, File archiveDir)",
          "",
          "[Added Lines]",
          "193:   private ClassLoader getArchiveClassLoader(ViewConfig viewConfig, File archiveDir, List<File> viewsAdditionalClasspath)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "201:       urlList.add(classesDir.toURI().toURL());",
          "202:     }",
          "205:     String libPath = archivePath + File.separator + ARCHIVE_LIB_DIR;",
          "207:     if (libDir.exists()) {",
          "208:       File[] files = libDir.listFiles();",
          "209:       if (files != null) {",
          "",
          "[Removed Lines]",
          "206:     File   libDir  = archiveUtility.getFile(libPath);",
          "",
          "[Added Lines]",
          "207:     for (File file : viewsAdditionalClasspath) {",
          "208:       if (file.isDirectory()) {",
          "210:         addDirToClasspath(urlList, file);",
          "211:       } else if (file.isFile()) {",
          "212:         urlList.add(file.toURI().toURL());",
          "213:       }",
          "214:     }",
          "218:     File libDir = archiveUtility.getFile(libPath);",
          "219:     addDirToClasspath(urlList, libDir);",
          "222:     urlList.add(archiveDir.toURI().toURL());",
          "224:     LOG.trace(\"classpath for view {} is : {}\", viewConfig.getName(), urlList);",
          "225:     return new ViewClassLoader(viewConfig, urlList.toArray(new URL[urlList.size()]));",
          "226:   }",
          "233:   private void addDirToClasspath(List<URL> urlList, File libDir) throws MalformedURLException {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "214:         }",
          "215:       }",
          "216:     }",
          "222:   }",
          "",
          "[Removed Lines]",
          "219:     urlList.add(archiveDir.toURI().toURL());",
          "221:     return new ViewClassLoader(viewConfig, urlList.toArray(new URL[urlList.size()]));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java||ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java -> ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import java.util.Collections;",
          "30: import java.util.HashMap;",
          "31: import java.util.HashSet;",
          "32: import java.util.List;",
          "33: import java.util.Map;",
          "34: import java.util.Properties;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import java.util.LinkedList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1815:     try {",
          "1819:       configureViewLogging(viewDefinition, cl);",
          "",
          "[Removed Lines]",
          "1817:       ClassLoader cl = extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile);",
          "",
          "[Added Lines]",
          "1818:       List<File> additionalPaths = getViewsAdditionalClasspath(configuration);",
          "1820:       ClassLoader cl = extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile, additionalPaths);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1854:     }",
          "1855:   }",
          "1857:   private void migrateDataFromPreviousVersion(ViewEntity viewDefinition, String serverVersion) {",
          "1858:     if (!viewDefinitions.containsKey(viewDefinition.getName())) { // migrate only registered views to avoid recursive calls",
          "1859:       LOG.debug(\"Cancel auto migration of not loaded view: {}.\", viewDefinition.getName());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1860:   private static List<File> getViewsAdditionalClasspath(Configuration configuration) {",
          "1861:     String viewsAdditionalClasspath = configuration.getViewsAdditionalClasspath();",
          "1862:     List<File> additionalPaths = new LinkedList<>();",
          "1863:     if(null != viewsAdditionalClasspath && !viewsAdditionalClasspath.trim().isEmpty()) {",
          "1864:       String[] paths = viewsAdditionalClasspath.trim().split(\",\");",
          "1865:       for(String path : paths) {",
          "1866:         if(null != path && !path.trim().isEmpty())",
          "1867:         additionalPaths.add(new File(path));",
          "1868:       }",
          "1869:     }",
          "1870:     return additionalPaths;",
          "1871:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2110:         if (!systemOnly || viewDefinition.isSystem()) {",
          "2111:           ClassLoader classLoader = null;",
          "2112:           try {",
          "2114:             return true;",
          "2115:           } finally {",
          "2116:             if (classLoader instanceof Closeable) {",
          "",
          "[Removed Lines]",
          "2113:             classLoader = extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile);",
          "",
          "[Added Lines]",
          "2129:             List<File> additionalPaths = getViewsAdditionalClasspath(configuration);",
          "2130:             classLoader = extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile, additionalPaths);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/view/ViewExtractorTest.java||ambari-server/src/test/java/org/apache/ambari/server/view/ViewExtractorTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/view/ViewExtractorTest.java -> ambari-server/src/test/java/org/apache/ambari/server/view/ViewExtractorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: import java.io.IOException;",
          "34: import java.net.MalformedURLException;",
          "35: import java.net.URI;",
          "36: import java.util.Collections;",
          "37: import java.util.HashMap;",
          "38: import java.util.Map;",
          "39: import java.util.jar.JarEntry;",
          "40: import java.util.jar.JarInputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import java.util.Arrays;",
          "39: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:   @Test",
          "81:   public void testExtractViewArchive() throws Exception {",
          "83:     ResourceTypeEntity resourceTypeEntity = new ResourceTypeEntity();",
          "84:     resourceTypeEntity.setId(10);",
          "85:     resourceTypeEntity.setName(\"MY_VIEW{1.0.0}\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:     File addDirPath = createNiceMock(File.class);",
          "86:     File addDirPathFile1 = createNiceMock(File.class);",
          "87:     File addDirPathFile2 = createNiceMock(File.class);",
          "88:     File addDirPath2 = createNiceMock(File.class);",
          "89:     File addFilePath = createNiceMock(File.class);",
          "90:     List<File> viewsAdditionalClasspath = Arrays.asList(addDirPath, addDirPath2, addFilePath);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "132:     expect(libDir.listFiles()).andReturn(new File[]{fileEntry});",
          "133:     expect(fileEntry.toURI()).andReturn(new URI(\"file:./\"));",
          "135:     replay(extractedArchiveDir, viewArchive, archiveDir, entryFile, classesDir, libDir, metaInfDir, viewJarFile,",
          "138:     ViewExtractor viewExtractor = getViewExtractor(viewDefinition);",
          "141:     verify(extractedArchiveDir, viewArchive, archiveDir, entryFile, classesDir, libDir, metaInfDir, viewJarFile,",
          "143:   }",
          "145:   @Test",
          "",
          "[Removed Lines]",
          "136:         jarEntry, fos, configuration, viewDir, fileEntry, viewDAO);",
          "139:     viewExtractor.extractViewArchive(viewDefinition, viewArchive, archiveDir);",
          "142:         jarEntry, fos, configuration, viewDir, fileEntry, viewDAO);",
          "",
          "[Added Lines]",
          "144:     expect(addDirPath.isDirectory()).andReturn(true);",
          "145:     expect(addDirPath.exists()).andReturn(true);",
          "146:     expect(addDirPath.listFiles()).andReturn(new File[]{addDirPathFile1, addDirPathFile2});",
          "147:     expect(addDirPathFile1.isDirectory()).andReturn(false);",
          "148:     expect(addDirPathFile1.toURI()).andReturn(new URI(\"file://file1\"));",
          "149:     expect(addDirPathFile2.isDirectory()).andReturn(false);",
          "150:     expect(addDirPathFile2.toURI()).andReturn(new URI(\"file://file2\"));",
          "152:     expect(addDirPath2.isDirectory()).andReturn(true);",
          "153:     expect(addDirPath2.exists()).andReturn(true);",
          "154:     expect(addDirPath2.listFiles()).andReturn(new File[]{});",
          "156:     expect(addFilePath.isDirectory()).andReturn(false);",
          "157:     expect(addFilePath.isFile()).andReturn(true);",
          "158:     expect(addFilePath.toURI()).andReturn(new URI(\"file://file3\"));",
          "161:         jarEntry, fos, configuration, viewDir, fileEntry, viewDAO,",
          "162:             addDirPath, addDirPathFile1, addDirPathFile2, addDirPath2, addFilePath);",
          "165:     viewExtractor.extractViewArchive(viewDefinition, viewArchive, archiveDir, viewsAdditionalClasspath);",
          "168:         jarEntry, fos, configuration, viewDir, fileEntry, viewDAO,",
          "169:             addDirPath, addDirPathFile1, addDirPathFile2, addDirPath2, addFilePath);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java||ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java -> ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1613:     else {",
          "1614:       expect(viewExtractor.ensureExtractedArchiveDirectory(\"/var/lib/ambari-server/resources/views/work\")).andReturn(true);",
          "1615:     }",
          "1619:     replay(configuration, viewDir, extractedArchiveDir, viewArchive, archiveDir, entryFile, classesDir,",
          "",
          "[Removed Lines]",
          "1616:     expect(viewExtractor.extractViewArchive(capture(viewEntityCapture), eq(viewArchive), eq(archiveDir))).andReturn(null);",
          "",
          "[Added Lines]",
          "1617:     expect(viewExtractor.extractViewArchive(capture(viewEntityCapture), eq(viewArchive), eq(archiveDir), anyObject(List.class))).andReturn(null);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e7602a087ef4ca759f6aed7b8f37e5ef3a20dcd5",
      "candidate_info": {
        "commit_hash": "e7602a087ef4ca759f6aed7b8f37e5ef3a20dcd5",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/e7602a087ef4ca759f6aed7b8f37e5ef3a20dcd5",
        "files": [
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/FileCheckInHelper.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/ResumeLineNumberHelper.java"
        ],
        "message": "AMBARI-25293 - Logsearch: logfeeder throws NPE when updating checkpoint (#2998)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/FileCheckInHelper.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/FileCheckInHelper.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/ResumeLineNumberHelper.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/ResumeLineNumberHelper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/FileCheckInHelper.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/FileCheckInHelper.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/FileCheckInHelper.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/FileCheckInHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.ambari.logfeeder.input.file;",
          "21: import org.apache.ambari.logfeeder.input.InputFile;",
          "22: import org.apache.ambari.logfeeder.input.InputFileMarker;",
          "23: import org.apache.ambari.logfeeder.util.FileUtil;",
          "24: import org.apache.ambari.logfeeder.util.LogFeederUtil;",
          "26: import org.apache.log4j.Logger;",
          "33: public class FileCheckInHelper {",
          "35:   private static final Logger LOG = Logger.getLogger(FileCheckInHelper.class);",
          "",
          "[Removed Lines]",
          "25: import org.apache.log4j.Level;",
          "28: import java.io.File;",
          "29: import java.io.RandomAccessFile;",
          "30: import java.util.Date;",
          "31: import java.util.Map;",
          "",
          "[Added Lines]",
          "21: import java.io.File;",
          "22: import java.io.RandomAccessFile;",
          "23: import java.util.Date;",
          "24: import java.util.HashMap;",
          "25: import java.util.Map;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:   public static void checkIn(InputFile inputFile, InputFileMarker inputMarker) {",
          "41:     try {",
          "42:       Map<String, Object> jsonCheckPoint = inputFile.getJsonCheckPoints().get(inputMarker.getBase64FileKey());",
          "43:       File checkPointFile = inputFile.getCheckPointFiles().get(inputMarker.getBase64FileKey());",
          "45:       int lineNumber = LogFeederUtil.objectToInt(jsonCheckPoint.get(\"line_number\"), 0, \"line_number\");",
          "46:       if (lineNumber > inputMarker.getLineNumber()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:       if (jsonCheckPoint == null) {",
          "44:         jsonCheckPoint = createNewCheckpointObject(inputFile);",
          "45:         attachCheckpointToInput(inputFile, jsonCheckPoint);",
          "46:       }",
          "48:       if (checkPointFile == null || !checkPointFile.exists()) {",
          "49:         checkPointFile = FileCheckInHelper.attachCheckpointFileToInput(inputFile);",
          "50:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:       FileUtil.move(tmpCheckPointFile, checkPointFile);",
          "82:       if (inputFile.isClosed()) {",
          "86:       }",
          "87:     } catch (Throwable t) {",
          "91:     }",
          "92:   }",
          "",
          "[Removed Lines]",
          "83:         String logMessageKey = inputFile.getClass().getSimpleName() + \"_FINAL_CHECKIN\";",
          "84:         LogFeederUtil.logErrorMessageByInterval(logMessageKey, \"Wrote final checkPoint, input=\" + inputFile.getShortDescription() +",
          "85:           \", checkPointFile=\" + checkPointFile.getAbsolutePath() + \", checkPoint=\" + jsonStr, null, LOG, Level.INFO);",
          "88:       String logMessageKey = inputFile.getClass().getSimpleName() + \"_CHECKIN_EXCEPTION\";",
          "89:       LogFeederUtil.logErrorMessageByInterval(logMessageKey, \"Caught exception checkIn. , input=\" + inputFile.getShortDescription(), t,",
          "90:         LOG, Level.ERROR);",
          "",
          "[Added Lines]",
          "90:         LOG.info(String.format(\"Wrote final checkPoint, input=%s, checkPointFile=%s, checkPoint=%s\", inputFile.getShortDescription(), checkPointFile.getAbsolutePath(), jsonStr));",
          "93:       LOG.error(\"Caught exception checkIn. , input=\" + inputFile.getShortDescription(), t);",
          "94:     }",
          "95:   }",
          "102:   static Map<String, Object> createNewCheckpointObject(final InputFile inputFile) {",
          "103:     Map<String, Object> jsonCheckPoint = new HashMap<>();",
          "104:     jsonCheckPoint.put(\"file_path\", inputFile.getFilePath());",
          "105:     try {",
          "106:       jsonCheckPoint.put(\"file_key\", inputFile.getBase64FileKey());",
          "107:     } catch (Exception e) {",
          "108:       LOG.error(String.format(\"Error during checkpoint object (path: %s) creationg: %s\", inputFile.getFilePath(), e.getMessage()));",
          "110:     return jsonCheckPoint;",
          "111:   }",
          "118:   static void attachCheckpointToInput(final InputFile inputFile, final Map<String, Object> jsonCheckPoint) throws Exception {",
          "119:     inputFile.getJsonCheckPoints().put(inputFile.getBase64FileKey(), jsonCheckPoint);",
          "120:   }",
          "127:   static File attachCheckpointFileToInput(final InputFile inputFile) throws Exception {",
          "128:     String checkPointFileName = inputFile.getBase64FileKey() + inputFile.getCheckPointExtension();",
          "129:     File checkPointFolder = inputFile.getInputManager().getCheckPointFolderFile();",
          "130:     File checkPointFile = new File(checkPointFolder, checkPointFileName);",
          "131:     inputFile.getCheckPointFiles().put(inputFile.getBase64FileKey(), checkPointFile);",
          "132:     return checkPointFile;",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/ResumeLineNumberHelper.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/ResumeLineNumberHelper.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/ResumeLineNumberHelper.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/input/file/ResumeLineNumberHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.ambari.logfeeder.input.file;",
          "26: import java.io.EOFException;",
          "27: import java.io.File;",
          "28: import java.io.RandomAccessFile;",
          "30: import java.util.Map;",
          "32: public class ResumeLineNumberHelper {",
          "34:   private static final Logger LOG = LoggerFactory.getLogger(ResumeLineNumberHelper.class);",
          "",
          "[Removed Lines]",
          "21: import org.apache.ambari.logfeeder.input.InputFile;",
          "22: import org.apache.ambari.logfeeder.util.LogFeederUtil;",
          "23: import org.slf4j.Logger;",
          "24: import org.slf4j.LoggerFactory;",
          "29: import java.util.HashMap;",
          "",
          "[Added Lines]",
          "26: import org.apache.ambari.logfeeder.input.InputFile;",
          "27: import org.apache.ambari.logfeeder.util.LogFeederUtil;",
          "28: import org.slf4j.Logger;",
          "29: import org.slf4j.LoggerFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     try {",
          "44:       LOG.info(\"Checking existing checkpoint file. \" + inputFile.getShortDescription());",
          "50:       Map<String, Object> jsonCheckPoint = null;",
          "51:       if (!checkPointFile.exists()) {",
          "52:         LOG.info(\"Checkpoint file for log file \" + inputFile.getFilePath() + \" doesn't exist, starting to read it from the beginning\");",
          "",
          "[Removed Lines]",
          "46:       String checkPointFileName = inputFile.getBase64FileKey() + inputFile.getCheckPointExtension();",
          "47:       File checkPointFolder = inputFile.getInputManager().getCheckPointFolderFile();",
          "48:       checkPointFile = new File(checkPointFolder, checkPointFileName);",
          "49:       inputFile.getCheckPointFiles().put(inputFile.getBase64FileKey(), checkPointFile);",
          "",
          "[Added Lines]",
          "45:       checkPointFile = FileCheckInHelper.attachCheckpointFileToInput(inputFile);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:       }",
          "75:       if (jsonCheckPoint == null) {",
          "80:       }",
          "84:     } catch (Throwable t) {",
          "85:       LOG.error(\"Error while configuring checkpoint file. Will reset file. checkPointFile=\" + checkPointFile, t);",
          "",
          "[Removed Lines]",
          "77:         jsonCheckPoint = new HashMap<String, Object>();",
          "78:         jsonCheckPoint.put(\"file_path\", inputFile.getFilePath());",
          "79:         jsonCheckPoint.put(\"file_key\", inputFile.getBase64FileKey());",
          "82:       inputFile.getJsonCheckPoints().put(inputFile.getBase64FileKey(), jsonCheckPoint);",
          "",
          "[Added Lines]",
          "73:         FileCheckInHelper.createNewCheckpointObject(inputFile);",
          "76:       FileCheckInHelper.attachCheckpointToInput(inputFile, jsonCheckPoint);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb64138a7159a837aec846777a33169109fba9cf",
      "candidate_info": {
        "commit_hash": "fb64138a7159a837aec846777a33169109fba9cf",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/fb64138a7159a837aec846777a33169109fba9cf",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/ActionExecutionContext.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinition.java",
          "ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinitionManager.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/StageWrapper.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActionResourceProviderTest.java"
        ],
        "message": "AMBARI-25290. Custom timeout ignored, python script has been killed d\u2026 (#2992)\n\n* AMBARI-25290. Custom timeout ignored, python script has been killed due to timeout after waiting 2700 secs during HDP upgrade (dlysnichenko)\n\n* AMBARI-25290. Custom timeout ignored, python script has been killed due to timeout after waiting 2700 secs during HDP upgrade - address review comment (dlysnichenko)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/ActionExecutionContext.java||ambari-server/src/main/java/org/apache/ambari/server/controller/ActionExecutionContext.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinition.java||ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinition.java",
          "ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinitionManager.java||ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinitionManager.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/StageWrapper.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/StageWrapper.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActionResourceProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActionResourceProviderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/ActionExecutionContext.java||ambari-server/src/main/java/org/apache/ambari/server/controller/ActionExecutionContext.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/ActionExecutionContext.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/ActionExecutionContext.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   private RequestOperationLevel operationLevel;",
          "40:   private Map<String, String> parameters;",
          "41:   private TargetHostType targetType;",
          "43:   private String expectedServiceName;",
          "44:   private String expectedComponentName;",
          "45:   private boolean hostsInMaintenanceModeExcluded = true;",
          "",
          "[Removed Lines]",
          "42:   private Short timeout;",
          "",
          "[Added Lines]",
          "42:   private Integer timeout;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:   public ActionExecutionContext(String clusterName, String actionName,",
          "69:       List<RequestResourceFilter> resourceFilters,",
          "70:       Map<String, String> parameters, TargetHostType targetType,",
          "72:       String expectedComponentName) {",
          "74:     this.clusterName = clusterName;",
          "",
          "[Removed Lines]",
          "71:       Short timeout, String expectedServiceName,",
          "",
          "[Added Lines]",
          "71:       Integer timeout, String expectedServiceName,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "113:     return targetType;",
          "114:   }",
          "117:     return timeout;",
          "118:   }",
          "121:     this.timeout = timeout;",
          "122:   }",
          "",
          "[Removed Lines]",
          "116:   public Short getTimeout() {",
          "120:   public void setTimeout(Short timeout) {",
          "",
          "[Added Lines]",
          "116:   public Integer getTimeout() {",
          "120:   public void setTimeout(Integer timeout) {",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "435:       commandParams.put(CUSTOM_COMMAND, commandName);",
          "437:       boolean isInstallCommand = commandName.equals(RoleCommand.INSTALL.toString());",
          "440:       ComponentInfo componentInfo = ambariMetaInfo.getComponent(",
          "441:           stackId.getStackName(), stackId.getStackVersion(),",
          "",
          "[Removed Lines]",
          "438:       int commandTimeout = Short.valueOf(configs.getDefaultAgentTaskTimeout(isInstallCommand)).intValue();",
          "",
          "[Added Lines]",
          "438:       int commandTimeout = Integer.valueOf(configs.getDefaultAgentTaskTimeout(isInstallCommand));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "686:         INSTALL_PACKAGES_ACTION, Collections.singletonList(filter), roleParams);",
          "688:     actionContext.setStackId(repoVersion.getStackId());",
          "691:     repoVersionHelper.addCommandRepositoryToContext(actionContext, repoVersion, osEntity);",
          "",
          "[Removed Lines]",
          "689:     actionContext.setTimeout(Short.valueOf(configuration.getDefaultAgentTaskTimeout(true)));",
          "",
          "[Added Lines]",
          "689:     actionContext.setTimeout(Integer.valueOf(configuration.getDefaultAgentTaskTimeout(true)));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "445:             cluster.getClusterName(), INSTALL_PACKAGES_ACTION,",
          "446:             Collections.singletonList(filter),",
          "447:             roleParams);",
          "449:     actionContext.setStackId(repoVersionEnt.getStackId());",
          "451:     repoVersionHelper.addCommandRepositoryToContext(actionContext, repoVersionEnt, osEntity);",
          "",
          "[Removed Lines]",
          "448:     actionContext.setTimeout(Short.valueOf(configuration.getDefaultAgentTaskTimeout(true)));",
          "",
          "[Added Lines]",
          "448:     actionContext.setTimeout(Integer.valueOf(configuration.getDefaultAgentTaskTimeout(true)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "530:       cluster.getClusterName(), STACK_SELECT_ACTION,",
          "531:       Collections.singletonList(filter),",
          "532:       Collections.emptyMap());",
          "535:     try {",
          "536:       actionExecutionHelper.get().addExecutionCommandsToStage(actionContext, stage, null, !forceInstallOnNonMemberHost);",
          "",
          "[Removed Lines]",
          "533:     actionContext.setTimeout(Short.valueOf(configuration.getDefaultAgentTaskTimeout(true)));",
          "",
          "[Added Lines]",
          "533:     actionContext.setTimeout(Integer.valueOf(configuration.getDefaultAgentTaskTimeout(true)));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1424:     ActionExecutionContext actionContext = buildActionExecutionContext(cluster, context,",
          "1425:         Role.AMBARI_SERVER_ACTION.toString(), stackId, Collections.emptyList(),",
          "1428:     ExecuteCommandJson jsons = s_commandExecutionHelper.get().getCommandJson(actionContext,",
          "1429:         cluster, context.getRepositoryVersion().getStackId(), null);",
          "",
          "[Removed Lines]",
          "1426:         commandParams, group.allowRetry, Short.valueOf((short) -1));",
          "",
          "[Added Lines]",
          "1426:         commandParams, group.allowRetry, -1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1649:   private ActionExecutionContext buildActionExecutionContext(Cluster cluster,",
          "1650:       UpgradeContext context, String role, StackId stackId,",
          "1651:       List<RequestResourceFilter> resourceFilters, Map<String, String> commandParams,",
          "1654:     ActionExecutionContext actionContext = new ActionExecutionContext(cluster.getClusterName(),",
          "1655:         role, resourceFilters, commandParams);",
          "",
          "[Removed Lines]",
          "1652:       boolean allowRetry, short timeout) {",
          "",
          "[Added Lines]",
          "1652:       boolean allowRetry, int timeout) {",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinition.java||ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinition.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinition.java -> ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   private String targetComponent;",
          "37:   private String description;",
          "38:   private TargetHostType targetType;",
          "40:   private Set<RoleAuthorization> permissions;",
          "",
          "[Removed Lines]",
          "39:   private Short defaultTimeout;",
          "",
          "[Added Lines]",
          "39:   private Integer defaultTimeout;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:   public ActionDefinition(String actionName, ActionType actionType, String inputs,",
          "56:                           String targetService, String targetComponent, String description,",
          "58:     setActionName(actionName);",
          "59:     setActionType(actionType);",
          "60:     setInputs(inputs);",
          "",
          "[Removed Lines]",
          "57:                           TargetHostType targetType, Short defaultTimeout, Set<RoleAuthorization> permissions) {",
          "",
          "[Added Lines]",
          "57:                           TargetHostType targetType, Integer defaultTimeout, Set<RoleAuthorization> permissions) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122:     this.targetType = targetType;",
          "123:   }",
          "126:     return defaultTimeout;",
          "127:   }",
          "130:     this.defaultTimeout = defaultTimeout;",
          "131:   }",
          "",
          "[Removed Lines]",
          "125:   public Short getDefaultTimeout() {",
          "129:   public void setDefaultTimeout(Short defaultTimeout) {",
          "",
          "[Added Lines]",
          "125:   public Integer getDefaultTimeout() {",
          "129:   public void setDefaultTimeout(Integer defaultTimeout) {",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinitionManager.java||ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinitionManager.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinitionManager.java -> ambari-server/src/main/java/org/apache/ambari/server/customactions/ActionDefinitionManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: public class ActionDefinitionManager {",
          "48:   private final static Logger LOG = LoggerFactory",
          "49:       .getLogger(ActionDefinitionManager.class);",
          "50:   private static final Map<Class<?>, JAXBContext> _jaxbContexts =",
          "51:     new HashMap<>();",
          "54:   static {",
          "55:     try {",
          "",
          "[Removed Lines]",
          "47:   public static final Short MIN_TIMEOUT = 60;",
          "52:   private static final Short MAX_TIMEOUT = Short.MAX_VALUE-1;",
          "",
          "[Added Lines]",
          "47:   public static final Integer MIN_TIMEOUT = 60;",
          "52:   private static final Integer MAX_TIMEOUT = Integer.MAX_VALUE-1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:           TargetHostType targetType = safeValueOf(TargetHostType.class, ad.getTargetType(), errorReason);",
          "113:           ActionType actionType = safeValueOf(ActionType.class, ad.getActionType(), errorReason);",
          "116:           if (ad.getDefaultTimeout() != null && !ad.getDefaultTimeout().isEmpty()) {",
          "118:           }",
          "120:           if (isValidActionDefinition(ad, actionType, defaultTimeout, errorReason)) {",
          "",
          "[Removed Lines]",
          "115:           Short defaultTimeout = MIN_TIMEOUT;",
          "117:             defaultTimeout = Short.parseShort(ad.getDefaultTimeout());",
          "",
          "[Added Lines]",
          "115:           Integer defaultTimeout = MIN_TIMEOUT;",
          "117:             defaultTimeout = Integer.parseInt(ad.getDefaultTimeout());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:   }",
          "140:   private boolean isValidActionDefinition(ActionDefinitionSpec ad, ActionType actionType,",
          "142:     if (isValidActionName(ad.getActionName(), reason)) {",
          "144:       if (defaultTimeout < MIN_TIMEOUT || defaultTimeout > MAX_TIMEOUT) {",
          "",
          "[Removed Lines]",
          "141:                                           Short defaultTimeout, StringBuilder reason) {",
          "",
          "[Added Lines]",
          "141:                                           Integer defaultTimeout, StringBuilder reason) {",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/StageWrapper.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/StageWrapper.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/StageWrapper.java -> ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/StageWrapper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:     Set<String> timeoutKeys = new HashSet<>();",
          "",
          "[Removed Lines]",
          "194:   public Short getMaxTimeout(Configuration configuration) {",
          "",
          "[Added Lines]",
          "194:   public Integer getMaxTimeout(Configuration configuration) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:       timeoutKeys.addAll(wrapper.getTimeoutKeys());",
          "201:     }",
          "205:     if (CollectionUtils.isEmpty(timeoutKeys)) {",
          "206:       return defaultTimeout;",
          "207:     }",
          "211:     for (String key : timeoutKeys) {",
          "212:       String configValue = configuration.getProperty(key);",
          "214:       if (StringUtils.isNotBlank(configValue)) {",
          "215:         try {",
          "218:           if (null == timeout || configTimeout > timeout) {",
          "219:             timeout = configTimeout;",
          "",
          "[Removed Lines]",
          "203:     Short defaultTimeout = Short.valueOf(configuration.getDefaultAgentTaskTimeout(false));",
          "209:     Short timeout = null;",
          "216:           Short configTimeout = Short.valueOf(configValue);",
          "",
          "[Added Lines]",
          "203:     Integer defaultTimeout = Integer.valueOf(configuration.getDefaultAgentTaskTimeout(false));",
          "209:     Integer timeout = null;",
          "216:           Integer configTimeout = Integer.valueOf(configValue);",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3944:     ActionDefinition a1 = new ActionDefinition(actionDef1, ActionType.SYSTEM,",
          "3946:     controller.getAmbariMetaInfo().addActionDefinition(a1);",
          "3947:     controller.getAmbariMetaInfo().addActionDefinition(new ActionDefinition(",
          "3948:         actionDef2, ActionType.SYSTEM, \"\", \"HDFS\", \"DATANODE\", \"Does file exist\",",
          "3951:     Map<String, String> params = new HashMap<String, String>() {{",
          "3952:       put(\"test\", \"test\");",
          "",
          "[Removed Lines]",
          "3945:         \"test,[optional1]\", \"\", \"\", \"Does file exist\", TargetHostType.SPECIFIC, Short.valueOf(\"100\"), null);",
          "3949:         TargetHostType.ALL, Short.valueOf(\"1000\"), null));",
          "",
          "[Added Lines]",
          "3945:         \"test,[optional1]\", \"\", \"\", \"Does file exist\", TargetHostType.SPECIFIC, Integer.valueOf(\"100\"), null);",
          "3949:         TargetHostType.ALL, Integer.valueOf(\"1000\"), null));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3999:     Assert.assertEquals(requestProperties.get(REQUEST_CONTEXT_PROPERTY), response.getRequestContext());",
          "4003:     actionRequest = new ExecuteActionRequest(cluster1, null, actionDef1, resourceFilters, null, params, false);",
          "4004:     response = controller.createAction(actionRequest, requestProperties);",
          "",
          "[Removed Lines]",
          "4002:     a1.setDefaultTimeout((short) 1800);",
          "",
          "[Added Lines]",
          "4002:     a1.setDefaultTimeout(1800);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4320:     controller.getAmbariMetaInfo().addActionDefinition(new ActionDefinition(",
          "4321:         actionDef1, ActionType.SYSTEM, \"test,dirName\", \"\", \"\", \"Does file exist\",",
          "4324:     controller.getAmbariMetaInfo().addActionDefinition(new ActionDefinition(",
          "4325:         actionDef2, ActionType.SYSTEM, \"\", \"HDFS\", \"DATANODE\", \"Does file exist\",",
          "4328:     controller.getAmbariMetaInfo().addActionDefinition(new ActionDefinition(",
          "4329:             \"update_repo\", ActionType.SYSTEM, \"\", \"HDFS\", \"DATANODE\", \"Does file exist\",",
          "4332:     controller.getAmbariMetaInfo().addActionDefinition(new ActionDefinition(",
          "4333:         actionDef3, ActionType.SYSTEM, \"\", \"MAPREDUCE\", \"MAPREDUCE_CLIENT\", \"Does file exist\",",
          "4336:     controller.getAmbariMetaInfo().addActionDefinition(new ActionDefinition(",
          "4337:         actionDef4, ActionType.SYSTEM, \"\", \"HIVE\", \"\", \"Does file exist\",",
          "4340:     actionRequest = new ExecuteActionRequest(cluster1, null, actionDef1, null, null, null, false);",
          "4341:     expectActionCreationErrorWithMessage(actionRequest, requestProperties,",
          "",
          "[Removed Lines]",
          "4322:         TargetHostType.SPECIFIC, Short.valueOf(\"100\"), null));",
          "4326:         TargetHostType.ANY, Short.valueOf(\"100\"), null));",
          "4330:             TargetHostType.ANY, Short.valueOf(\"100\"), null));",
          "4334:         TargetHostType.ANY, Short.valueOf(\"100\"), null));",
          "4338:         TargetHostType.ANY, Short.valueOf(\"100\"), null));",
          "",
          "[Added Lines]",
          "4322:         TargetHostType.SPECIFIC, Integer.valueOf(\"100\"), null));",
          "4326:         TargetHostType.ANY, Integer.valueOf(\"100\"), null));",
          "4330:             TargetHostType.ANY, Integer.valueOf(\"100\"), null));",
          "4334:         TargetHostType.ANY, Integer.valueOf(\"100\"), null));",
          "4338:         TargetHostType.ANY, Integer.valueOf(\"100\"), null));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6081:     controller.getAmbariMetaInfo().addActionDefinition(new ActionDefinition(",
          "6082:       action1, ActionType.SYSTEM, \"\", \"HDFS\", \"\", \"Some custom action.\",",
          "6085:     Map<String, String> params = new HashMap<String, String>() {{",
          "6086:       put(\"test\", \"test\");",
          "",
          "[Removed Lines]",
          "6083:       TargetHostType.ALL, Short.valueOf(\"10010\"), null));",
          "",
          "[Added Lines]",
          "6083:       TargetHostType.ALL, Integer.valueOf(\"10010\"), null));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9857:     ambariMetaInfo.addActionDefinition(new ActionDefinition(action1, ActionType.SYSTEM,",
          "9858:         \"\", \"\", \"\", \"action def description\", TargetHostType.ANY,",
          "9861:     Map<String, String> requestProperties = new HashMap<>();",
          "9862:     requestProperties.put(REQUEST_CONTEXT_PROPERTY, \"Called from a test\");",
          "",
          "[Removed Lines]",
          "9859:         Short.valueOf(\"60\"), null));",
          "",
          "[Added Lines]",
          "9859:         Integer.valueOf(\"60\"), null));",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActionResourceProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActionResourceProviderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActionResourceProviderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActionResourceProviderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     List<ActionDefinition> allDefinition = new ArrayList<>();",
          "98:     allDefinition.add(new ActionDefinition(",
          "99:         \"a1\", ActionType.SYSTEM, \"fileName\", \"HDFS\", \"DATANODE\", \"Does file exist\", TargetHostType.ANY,",
          "101:     allDefinition.add(new ActionDefinition(",
          "102:         \"a2\", ActionType.SYSTEM, \"fileName\", \"HDFS\", \"DATANODE\", \"Does file exist\", TargetHostType.ANY,",
          "104:     allDefinition.add(new ActionDefinition(",
          "105:         \"a3\", ActionType.SYSTEM, \"fileName\", \"HDFS\", \"DATANODE\", \"Does file exist\", TargetHostType.ANY,",
          "108:     Set<ActionResponse> allResponse = new HashSet<>();",
          "109:     for (ActionDefinition definition : allDefinition) {",
          "",
          "[Removed Lines]",
          "100:         Short.valueOf(\"100\"), null));",
          "103:         Short.valueOf(\"100\"), null));",
          "106:         Short.valueOf(\"100\"), null));",
          "",
          "[Added Lines]",
          "100:         Integer.valueOf(\"100\"), null));",
          "103:         Integer.valueOf(\"100\"), null));",
          "106:         Integer.valueOf(\"100\"), null));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:     ActionDefinition namedDefinition = new ActionDefinition(",
          "114:         \"a1\", ActionType.SYSTEM, \"fileName\", \"HDFS\", \"DATANODE\", \"Does file exist\", TargetHostType.ANY,",
          "117:     Set<ActionResponse> nameResponse = new HashSet<>();",
          "118:     nameResponse.add(namedDefinition.convertToResponse());",
          "",
          "[Removed Lines]",
          "115:         Short.valueOf(\"100\"), null);",
          "",
          "[Added Lines]",
          "115:         Integer.valueOf(\"100\"), null);",
          "",
          "---------------"
        ]
      }
    }
  ]
}