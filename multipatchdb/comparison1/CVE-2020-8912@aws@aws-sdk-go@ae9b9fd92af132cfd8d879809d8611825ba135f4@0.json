{
  "cve_id": "CVE-2020-8912",
  "cve_desc": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
      "candidate_info": {
        "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/apis/organizations/2016-11-28/api-2.json",
          "models/apis/organizations/2016-11-28/docs-2.json",
          "models/apis/s3/2006-03-01/docs-2.json",
          "models/apis/s3/2006-03-01/examples-1.json",
          "models/apis/sms/2016-10-24/api-2.json",
          "models/apis/sms/2016-10-24/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/glue/api.go",
          "service/organizations/api.go",
          "service/s3/api.go",
          "service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go",
          "service/sms/api.go",
          "service/sms/doc.go",
          "service/sms/errors.go",
          "service/sms/smsiface/interface.go"
        ],
        "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/glue/api.go||service/glue/api.go",
          "service/organizations/api.go||service/organizations/api.go",
          "service/s3/api.go||service/s3/api.go",
          "service/s3/examples_test.go||service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
          "service/sms/api.go||service/sms/api.go",
          "service/sms/doc.go||service/sms/doc.go",
          "service/sms/errors.go||service/sms/errors.go",
          "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go",
            "service/organizations/api.go||service/organizations/api.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
            "service/sms/api.go||service/sms/api.go",
            "service/sms/doc.go||service/sms/doc.go",
            "service/sms/errors.go||service/sms/errors.go",
            "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go",
            "service/organizations/api.go||service/organizations/api.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
            "service/sms/api.go||service/sms/api.go",
            "service/sms/doc.go||service/sms/doc.go",
            "service/sms/errors.go||service/sms/errors.go",
            "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2084:     Protocols: []string{\"http\", \"https\"},",
          "2085:    },",
          "2086:    Endpoints: endpoints{",
          "2087:     \"ap-east-1\":      endpoint{},",
          "2088:     \"ap-northeast-1\": endpoint{},",
          "2089:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2087:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2093:     \"ca-central-1\":   endpoint{},",
          "2094:     \"eu-central-1\":   endpoint{},",
          "2095:     \"eu-north-1\":     endpoint{},",
          "2096:     \"eu-west-1\":      endpoint{},",
          "2097:     \"eu-west-2\":      endpoint{},",
          "2098:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2097:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3959:   \"neptune\": service{",
          "3961:    Endpoints: endpoints{",
          "3962:     \"ap-northeast-1\": endpoint{",
          "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
          "3964:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3964:     \"ap-east-1\": endpoint{",
          "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
          "3966:      CredentialScope: credentialScope{",
          "3967:       Region: \"ap-east-1\",",
          "3968:      },",
          "3969:     },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4031:       Region: \"me-south-1\",",
          "4032:      },",
          "4033:     },",
          "4034:     \"us-east-1\": endpoint{",
          "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
          "4036:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4042:     \"sa-east-1\": endpoint{",
          "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
          "4044:      CredentialScope: credentialScope{",
          "4045:       Region: \"sa-east-1\",",
          "4046:      },",
          "4047:     },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.21\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.0\"",
          "",
          "---------------"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31277: type S3Target struct {",
          "31278:  _ struct{} `type:\"structure\"`",
          "31282:  Exclusions []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31285:  ConnectionName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31295:  return s.String()",
          "31296: }",
          "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
          "31300:  s.Exclusions = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
          "31307:  s.ConnectionName = &v",
          "31308:  return s",
          "31309: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37451:  ConnectionTypeKafka = \"KAFKA\"",
          "37452: )",
          "37454: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37467:  ConnectionTypeNetwork = \"NETWORK\"",
          "",
          "---------------"
        ],
        "service/organizations/api.go||service/organizations/api.go": [
          "File: service/organizations/api.go -> service/organizations/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
          "22130: )",
          "22132: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
          "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
          "",
          "---------------"
        ],
        "service/s3/api.go||service/s3/api.go": [
          "File: service/s3/api.go -> service/s3/api.go"
        ],
        "service/s3/examples_test.go||service/s3/examples_test.go": [
          "File: service/s3/examples_test.go -> service/s3/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:  fmt.Println(result)",
          "468: }",
          "474: func ExampleS3_DeleteObjectTagging_shared00() {",
          "475:  svc := s3.New(session.New())",
          "476:  input := &s3.DeleteObjectTaggingInput{",
          "480:  }",
          "482:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "477:   Bucket:    aws.String(\"examplebucket\"),",
          "478:   Key:       aws.String(\"HappyFace.jpg\"),",
          "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "[Added Lines]",
          "478:   Bucket: aws.String(\"examplebucket\"),",
          "479:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:  fmt.Println(result)",
          "498: }",
          "505: func ExampleS3_DeleteObjectTagging_shared01() {",
          "506:  svc := s3.New(session.New())",
          "507:  input := &s3.DeleteObjectTaggingInput{",
          "510:  }",
          "512:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "508:   Bucket: aws.String(\"examplebucket\"),",
          "509:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "507:   Bucket:    aws.String(\"examplebucket\"),",
          "508:   Key:       aws.String(\"HappyFace.jpg\"),",
          "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1197:  fmt.Println(result)",
          "1198: }",
          "1204: func ExampleS3_ListMultipartUploads_shared00() {",
          "1205:  svc := s3.New(session.New())",
          "1206:  input := &s3.ListMultipartUploadsInput{",
          "1211:  }",
          "1213:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1207:   Bucket:         aws.String(\"examplebucket\"),",
          "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1209:   MaxUploads:     aws.Int64(2),",
          "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "[Added Lines]",
          "1206:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1228:  fmt.Println(result)",
          "1229: }",
          "1234: func ExampleS3_ListMultipartUploads_shared01() {",
          "1235:  svc := s3.New(session.New())",
          "1236:  input := &s3.ListMultipartUploadsInput{",
          "1238:  }",
          "1240:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1237:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "[Added Lines]",
          "1234:   Bucket:         aws.String(\"examplebucket\"),",
          "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1236:   MaxUploads:     aws.Int64(2),",
          "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1804:  fmt.Println(result)",
          "1805: }",
          "1812: func ExampleS3_PutObject_shared00() {",
          "1813:  svc := s3.New(session.New())",
          "1814:  input := &s3.PutObjectInput{",
          "1820:  }",
          "1822:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1816:   Bucket:               aws.String(\"examplebucket\"),",
          "1817:   Key:                  aws.String(\"exampleobject\"),",
          "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1815:   Bucket: aws.String(\"examplebucket\"),",
          "1816:   Key:    aws.String(\"exampleobject\"),",
          "1817:   Metadata: map[string]*string{",
          "1818:    \"metadata1\": aws.String(\"value1\"),",
          "1819:    \"metadata2\": aws.String(\"value2\"),",
          "1820:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1837:  fmt.Println(result)",
          "1838: }",
          "1844: func ExampleS3_PutObject_shared01() {",
          "1845:  svc := s3.New(session.New())",
          "1846:  input := &s3.PutObjectInput{",
          "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1848:   Bucket: aws.String(\"examplebucket\"),",
          "1850:  }",
          "1852:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1849:   Key:    aws.String(\"objectkey\"),",
          "",
          "[Added Lines]",
          "1849:   ACL:    aws.String(\"authenticated-read\"),",
          "1852:   Key:    aws.String(\"exampleobject\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1867:  fmt.Println(result)",
          "1868: }",
          "1874: func ExampleS3_PutObject_shared02() {",
          "1875:  svc := s3.New(session.New())",
          "1876:  input := &s3.PutObjectInput{",
          "1881:  }",
          "1883:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1878:   Bucket:  aws.String(\"examplebucket\"),",
          "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1881:   Bucket: aws.String(\"examplebucket\"),",
          "1882:   Key:    aws.String(\"objectkey\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1898:  fmt.Println(result)",
          "1899: }",
          "1905: func ExampleS3_PutObject_shared03() {",
          "1906:  svc := s3.New(session.New())",
          "1907:  input := &s3.PutObjectInput{",
          "1913:  }",
          "1915:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1909:   Bucket:               aws.String(\"examplebucket\"),",
          "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "[Added Lines]",
          "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1912:   Bucket: aws.String(\"examplebucket\"),",
          "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1930:  fmt.Println(result)",
          "1931: }",
          "1937: func ExampleS3_PutObject_shared04() {",
          "1938:  svc := s3.New(session.New())",
          "1939:  input := &s3.PutObjectInput{",
          "1947:  }",
          "1949:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1941:   Bucket: aws.String(\"examplebucket\"),",
          "1942:   Key:    aws.String(\"exampleobject\"),",
          "1943:   Metadata: map[string]*string{",
          "1944:    \"metadata1\": aws.String(\"value1\"),",
          "1945:    \"metadata2\": aws.String(\"value2\"),",
          "1946:   },",
          "",
          "[Added Lines]",
          "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1942:   Bucket:  aws.String(\"examplebucket\"),",
          "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1964:  fmt.Println(result)",
          "1965: }",
          "1972: func ExampleS3_PutObject_shared05() {",
          "1973:  svc := s3.New(session.New())",
          "1974:  input := &s3.PutObjectInput{",
          "1979:  }",
          "1981:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1975:   ACL:    aws.String(\"authenticated-read\"),",
          "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1977:   Bucket: aws.String(\"examplebucket\"),",
          "1978:   Key:    aws.String(\"exampleobject\"),",
          "",
          "[Added Lines]",
          "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1974:   Bucket:               aws.String(\"examplebucket\"),",
          "1975:   Key:                  aws.String(\"exampleobject\"),",
          "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1996:  fmt.Println(result)",
          "1997: }",
          "2004: func ExampleS3_PutObject_shared06() {",
          "2005:  svc := s3.New(session.New())",
          "2006:  input := &s3.PutObjectInput{",
          "2010:  }",
          "2012:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2008:   Bucket: aws.String(\"examplebucket\"),",
          "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2006:   Bucket:               aws.String(\"examplebucket\"),",
          "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
          "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2171:  fmt.Println(result)",
          "2172: }",
          "2178: func ExampleS3_UploadPartCopy_shared00() {",
          "2179:  svc := s3.New(session.New())",
          "2180:  input := &s3.UploadPartCopyInput{",
          "2186:  }",
          "2188:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2181:   Bucket:     aws.String(\"examplebucket\"),",
          "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   Key:        aws.String(\"examplelargeobject\"),",
          "2184:   PartNumber: aws.Int64(1),",
          "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2181:   Bucket:          aws.String(\"examplebucket\"),",
          "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2184:   Key:             aws.String(\"examplelargeobject\"),",
          "2185:   PartNumber:      aws.Int64(2),",
          "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2203:  fmt.Println(result)",
          "2204: }",
          "2210: func ExampleS3_UploadPartCopy_shared01() {",
          "2211:  svc := s3.New(session.New())",
          "2212:  input := &s3.UploadPartCopyInput{",
          "2219:  }",
          "2221:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2213:   Bucket:          aws.String(\"examplebucket\"),",
          "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2216:   Key:             aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber:      aws.Int64(2),",
          "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2214:   Bucket:     aws.String(\"examplebucket\"),",
          "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2216:   Key:        aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber: aws.Int64(1),",
          "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------"
        ],
        "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
          "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
        ],
        "service/sms/api.go||service/sms/api.go": [
          "File: service/sms/api.go -> service/sms/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:  return out, req.Send()",
          "494: }",
          "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
          "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
          "523:  op := &request.Operation{",
          "524:   Name:       opDeleteAppValidationConfiguration,",
          "525:   HTTPMethod: \"POST\",",
          "526:   HTTPPath:   \"/\",",
          "527:  }",
          "529:  if input == nil {",
          "530:   input = &DeleteAppValidationConfigurationInput{}",
          "531:  }",
          "533:  output = &DeleteAppValidationConfigurationOutput{}",
          "534:  req = c.newRequest(op, input, output)",
          "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "536:  return",
          "537: }",
          "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
          "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
          "570:  return out, req.Send()",
          "571: }",
          "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
          "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
          "584:  req.SetContext(ctx)",
          "585:  req.ApplyOptions(opts...)",
          "586:  return out, req.Send()",
          "587: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1235:  return out, req.Send()",
          "1236: }",
          "1238: const opGetConnectors = \"GetConnectors\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
          "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
          "1360:  op := &request.Operation{",
          "1361:   Name:       opGetAppValidationConfiguration,",
          "1362:   HTTPMethod: \"POST\",",
          "1363:   HTTPPath:   \"/\",",
          "1364:  }",
          "1366:  if input == nil {",
          "1367:   input = &GetAppValidationConfigurationInput{}",
          "1368:  }",
          "1370:  output = &GetAppValidationConfigurationOutput{}",
          "1371:  req = c.newRequest(op, input, output)",
          "1372:  return",
          "1373: }",
          "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
          "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
          "1406:  return out, req.Send()",
          "1407: }",
          "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
          "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
          "1420:  req.SetContext(ctx)",
          "1421:  req.ApplyOptions(opts...)",
          "1422:  return out, req.Send()",
          "1423: }",
          "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
          "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
          "1452:  op := &request.Operation{",
          "1453:   Name:       opGetAppValidationOutput,",
          "1454:   HTTPMethod: \"POST\",",
          "1455:   HTTPPath:   \"/\",",
          "1456:  }",
          "1458:  if input == nil {",
          "1459:   input = &GetAppValidationOutputInput{}",
          "1460:  }",
          "1462:  output = &GetAppValidationOutputOutput{}",
          "1463:  req = c.newRequest(op, input, output)",
          "1464:  return",
          "1465: }",
          "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
          "1497:  req, out := c.GetAppValidationOutputRequest(input)",
          "1498:  return out, req.Send()",
          "1499: }",
          "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
          "1511:  req, out := c.GetAppValidationOutputRequest(input)",
          "1512:  req.SetContext(ctx)",
          "1513:  req.ApplyOptions(opts...)",
          "1514:  return out, req.Send()",
          "1515: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1801:  return p.Err()",
          "1802: }",
          "1831:  op := &request.Operation{",
          "1833:   HTTPMethod: \"POST\",",
          "1834:   HTTPPath:   \"/\",",
          "1835:  }",
          "1837:  if input == nil {",
          "1839:  }",
          "1842:  req = c.newRequest(op, input, output)",
          "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1844:  return",
          "1845: }",
          "1882:  return out, req.Send()",
          "1883: }",
          "",
          "[Removed Lines]",
          "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
          "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
          "1832:   Name:       opImportServerCatalog,",
          "1838:   input = &ImportServerCatalogInput{}",
          "1841:  output = &ImportServerCatalogOutput{}",
          "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
          "1881:  req, out := c.ImportServerCatalogRequest(input)",
          "",
          "[Added Lines]",
          "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
          "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
          "2120:   Name:       opImportAppCatalog,",
          "2126:   input = &ImportAppCatalogInput{}",
          "2129:  output = &ImportAppCatalogOutput{}",
          "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
          "2165:  req, out := c.ImportAppCatalogRequest(input)",
          "2166:  return out, req.Send()",
          "2167: }",
          "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
          "2179:  req, out := c.ImportAppCatalogRequest(input)",
          "2180:  req.SetContext(ctx)",
          "2181:  req.ApplyOptions(opts...)",
          "2182:  return out, req.Send()",
          "2183: }",
          "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
          "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
          "2212:  op := &request.Operation{",
          "2213:   Name:       opImportServerCatalog,",
          "2214:   HTTPMethod: \"POST\",",
          "2215:   HTTPPath:   \"/\",",
          "2216:  }",
          "2218:  if input == nil {",
          "2219:   input = &ImportServerCatalogInput{}",
          "2220:  }",
          "2222:  output = &ImportServerCatalogOutput{}",
          "2223:  req = c.newRequest(op, input, output)",
          "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2225:  return",
          "2226: }",
          "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
          "2262:  req, out := c.ImportServerCatalogRequest(input)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2083:  return out, req.Send()",
          "2084: }",
          "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
          "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
          "2494:  op := &request.Operation{",
          "2495:   Name:       opNotifyAppValidationOutput,",
          "2496:   HTTPMethod: \"POST\",",
          "2497:   HTTPPath:   \"/\",",
          "2498:  }",
          "2500:  if input == nil {",
          "2501:   input = &NotifyAppValidationOutputInput{}",
          "2502:  }",
          "2504:  output = &NotifyAppValidationOutputOutput{}",
          "2505:  req = c.newRequest(op, input, output)",
          "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2507:  return",
          "2508: }",
          "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
          "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
          "2541:  return out, req.Send()",
          "2542: }",
          "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
          "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
          "2555:  req.SetContext(ctx)",
          "2556:  req.ApplyOptions(opts...)",
          "2557:  return out, req.Send()",
          "2558: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2269:  return out, req.Send()",
          "2270: }",
          "2272: const opStartAppReplication = \"StartAppReplication\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
          "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
          "2773:  op := &request.Operation{",
          "2774:   Name:       opPutAppValidationConfiguration,",
          "2775:   HTTPMethod: \"POST\",",
          "2776:   HTTPPath:   \"/\",",
          "2777:  }",
          "2779:  if input == nil {",
          "2780:   input = &PutAppValidationConfigurationInput{}",
          "2781:  }",
          "2783:  output = &PutAppValidationConfigurationOutput{}",
          "2784:  req = c.newRequest(op, input, output)",
          "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2786:  return",
          "2787: }",
          "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
          "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
          "2820:  return out, req.Send()",
          "2821: }",
          "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
          "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
          "2834:  req.SetContext(ctx)",
          "2835:  req.ApplyOptions(opts...)",
          "2836:  return out, req.Send()",
          "2837: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2362:  return out, req.Send()",
          "2363: }",
          "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
          "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
          "2960:  op := &request.Operation{",
          "2961:   Name:       opStartOnDemandAppReplication,",
          "2962:   HTTPMethod: \"POST\",",
          "2963:   HTTPPath:   \"/\",",
          "2964:  }",
          "2966:  if input == nil {",
          "2967:   input = &StartOnDemandAppReplicationInput{}",
          "2968:  }",
          "2970:  output = &StartOnDemandAppReplicationOutput{}",
          "2971:  req = c.newRequest(op, input, output)",
          "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2973:  return",
          "2974: }",
          "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
          "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
          "3007:  return out, req.Send()",
          "3008: }",
          "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
          "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
          "3021:  req.SetContext(ctx)",
          "3022:  req.ApplyOptions(opts...)",
          "3023:  return out, req.Send()",
          "3024: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2844: type AppSummary struct {",
          "2845:  _ struct{} `type:\"structure\"`",
          "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
          "2854:  Description *string `locationName:\"description\" type:\"string\"`",
          "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
          "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
          "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
          "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
          "2872:  Name *string `locationName:\"name\" type:\"string\"`",
          "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
          "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
          "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
          "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
          "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2921:  return s",
          "2922: }",
          "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
          "2926:  s.LastModified = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
          "3601:  s.ImportedAppId = &v",
          "3602:  return s",
          "3603: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2933:  return s",
          "2934: }",
          "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
          "2938:  s.LaunchDetails = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
          "3619:  s.LaunchConfigurationStatus = &v",
          "3620:  return s",
          "3621: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2957:  return s",
          "2958: }",
          "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
          "2962:  s.ReplicationStatus = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
          "3649:  s.ReplicationConfigurationStatus = &v",
          "3650:  return s",
          "3651: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2999:  return s",
          "3000: }",
          "3003: type Connector struct {",
          "3004:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3696: type AppValidationConfiguration struct {",
          "3697:  _ struct{} `type:\"structure\"`",
          "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
          "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
          "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "3710: }",
          "3713: func (s AppValidationConfiguration) String() string {",
          "3714:  return awsutil.Prettify(s)",
          "3715: }",
          "3718: func (s AppValidationConfiguration) GoString() string {",
          "3719:  return s.String()",
          "3720: }",
          "3723: func (s *AppValidationConfiguration) Validate() error {",
          "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
          "3725:  if s.Name != nil && len(*s.Name) < 1 {",
          "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "3727:  }",
          "3728:  if s.SsmValidationParameters != nil {",
          "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
          "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
          "3731:   }",
          "3732:  }",
          "3734:  if invalidParams.Len() > 0 {",
          "3735:   return invalidParams",
          "3736:  }",
          "3737:  return nil",
          "3738: }",
          "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
          "3742:  s.AppValidationStrategy = &v",
          "3743:  return s",
          "3744: }",
          "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
          "3748:  s.Name = &v",
          "3749:  return s",
          "3750: }",
          "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
          "3754:  s.SsmValidationParameters = v",
          "3755:  return s",
          "3756: }",
          "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
          "3760:  s.ValidationId = &v",
          "3761:  return s",
          "3762: }",
          "3765: type AppValidationOutput struct {",
          "3766:  _ struct{} `type:\"structure\"`",
          "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
          "3770: }",
          "3773: func (s AppValidationOutput) String() string {",
          "3774:  return awsutil.Prettify(s)",
          "3775: }",
          "3778: func (s AppValidationOutput) GoString() string {",
          "3779:  return s.String()",
          "3780: }",
          "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
          "3784:  s.SsmOutput = v",
          "3785:  return s",
          "3786: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3481:  return awsutil.Prettify(s)",
          "3482: }",
          "3487: }",
          "3491:  s.AppId = &v",
          "3492:  return s",
          "3493: }",
          "3496:  _ struct{} `type:\"structure\"`",
          "3497: }",
          "3501:  return awsutil.Prettify(s)",
          "3502: }",
          "3506:  return s.String()",
          "3507: }",
          "3509: type DeleteReplicationJobInput struct {",
          "3510:  _ struct{} `type:\"structure\"`",
          "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
          "3486:  return s.String()",
          "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
          "3495: type DeleteAppReplicationConfigurationOutput struct {",
          "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
          "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
          "",
          "[Added Lines]",
          "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
          "4273:  return s.String()",
          "4274: }",
          "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
          "4278:  s.AppId = &v",
          "4279:  return s",
          "4280: }",
          "4282: type DeleteAppReplicationConfigurationOutput struct {",
          "4283:  _ struct{} `type:\"structure\"`",
          "4284: }",
          "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
          "4288:  return awsutil.Prettify(s)",
          "4289: }",
          "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
          "4293:  return s.String()",
          "4294: }",
          "4296: type DeleteAppValidationConfigurationInput struct {",
          "4297:  _ struct{} `type:\"structure\"`",
          "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "4303: }",
          "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
          "4307:  return awsutil.Prettify(s)",
          "4308: }",
          "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
          "4312:  return s.String()",
          "4313: }",
          "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
          "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
          "4318:  if s.AppId == nil {",
          "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "4320:  }",
          "4322:  if invalidParams.Len() > 0 {",
          "4323:   return invalidParams",
          "4324:  }",
          "4325:  return nil",
          "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
          "4334: type DeleteAppValidationConfigurationOutput struct {",
          "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
          "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3638:  return s.String()",
          "3639: }",
          "3641: type GenerateChangeSetInput struct {",
          "3642:  _ struct{} `type:\"structure\"`",
          "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
          "3649: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4482: type DryRunOperationException struct {",
          "4483:  _            struct{}                  `type:\"structure\"`",
          "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4487: }",
          "4490: func (s DryRunOperationException) String() string {",
          "4491:  return awsutil.Prettify(s)",
          "4492: }",
          "4495: func (s DryRunOperationException) GoString() string {",
          "4496:  return s.String()",
          "4497: }",
          "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
          "4500:  return &DryRunOperationException{",
          "4501:   RespMetadata: v,",
          "4502:  }",
          "4503: }",
          "4506: func (s *DryRunOperationException) Code() string {",
          "4507:  return \"DryRunOperationException\"",
          "4508: }",
          "4511: func (s *DryRunOperationException) Message() string {",
          "4512:  if s.Message_ != nil {",
          "4513:   return *s.Message_",
          "4514:  }",
          "4515:  return \"\"",
          "4516: }",
          "4519: func (s *DryRunOperationException) OrigErr() error {",
          "4520:  return nil",
          "4521: }",
          "4523: func (s *DryRunOperationException) Error() string {",
          "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4525: }",
          "4528: func (s *DryRunOperationException) StatusCode() int {",
          "4529:  return s.RespMetadata.StatusCode",
          "4530: }",
          "4533: func (s *DryRunOperationException) RequestID() string {",
          "4534:  return s.RespMetadata.RequestID",
          "4535: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3797: type GetAppLaunchConfigurationOutput struct {",
          "3798:  _ struct{} `type:\"structure\"`",
          "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
          "3809: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3824:  return s",
          "3825: }",
          "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
          "3829:  s.RoleName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
          "4729:  s.AutoLaunch = &v",
          "4730:  return s",
          "4731: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3923:  return s",
          "3924: }",
          "3926: type GetConnectorsInput struct {",
          "3927:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4832: type GetAppValidationConfigurationInput struct {",
          "4833:  _ struct{} `type:\"structure\"`",
          "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "4839: }",
          "4842: func (s GetAppValidationConfigurationInput) String() string {",
          "4843:  return awsutil.Prettify(s)",
          "4844: }",
          "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
          "4848:  return s.String()",
          "4849: }",
          "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
          "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
          "4854:  if s.AppId == nil {",
          "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "4856:  }",
          "4858:  if invalidParams.Len() > 0 {",
          "4859:   return invalidParams",
          "4860:  }",
          "4861:  return nil",
          "4862: }",
          "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
          "4866:  s.AppId = &v",
          "4867:  return s",
          "4868: }",
          "4870: type GetAppValidationConfigurationOutput struct {",
          "4871:  _ struct{} `type:\"structure\"`",
          "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
          "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
          "4878: }",
          "4881: func (s GetAppValidationConfigurationOutput) String() string {",
          "4882:  return awsutil.Prettify(s)",
          "4883: }",
          "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
          "4887:  return s.String()",
          "4888: }",
          "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
          "4892:  s.AppValidationConfigurations = v",
          "4893:  return s",
          "4894: }",
          "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
          "4898:  s.ServerGroupValidationConfigurations = v",
          "4899:  return s",
          "4900: }",
          "4902: type GetAppValidationOutputInput struct {",
          "4903:  _ struct{} `type:\"structure\"`",
          "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "4909: }",
          "4912: func (s GetAppValidationOutputInput) String() string {",
          "4913:  return awsutil.Prettify(s)",
          "4914: }",
          "4917: func (s GetAppValidationOutputInput) GoString() string {",
          "4918:  return s.String()",
          "4919: }",
          "4922: func (s *GetAppValidationOutputInput) Validate() error {",
          "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
          "4924:  if s.AppId == nil {",
          "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "4926:  }",
          "4928:  if invalidParams.Len() > 0 {",
          "4929:   return invalidParams",
          "4930:  }",
          "4931:  return nil",
          "4932: }",
          "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
          "4936:  s.AppId = &v",
          "4937:  return s",
          "4938: }",
          "4940: type GetAppValidationOutputOutput struct {",
          "4941:  _ struct{} `type:\"structure\"`",
          "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
          "4945: }",
          "4948: func (s GetAppValidationOutputOutput) String() string {",
          "4949:  return awsutil.Prettify(s)",
          "4950: }",
          "4953: func (s GetAppValidationOutputOutput) GoString() string {",
          "4954:  return s.String()",
          "4955: }",
          "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
          "4959:  s.ValidationOutputList = v",
          "4960:  return s",
          "4961: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4260:  return s",
          "4261: }",
          "4263: type ImportServerCatalogInput struct {",
          "4264:  _ struct{} `type:\"structure\"`",
          "4265: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5300: type ImportAppCatalogInput struct {",
          "5301:  _ struct{} `type:\"structure\"`",
          "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "5308: }",
          "5311: func (s ImportAppCatalogInput) String() string {",
          "5312:  return awsutil.Prettify(s)",
          "5313: }",
          "5316: func (s ImportAppCatalogInput) GoString() string {",
          "5317:  return s.String()",
          "5318: }",
          "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
          "5322:  s.RoleName = &v",
          "5323:  return s",
          "5324: }",
          "5326: type ImportAppCatalogOutput struct {",
          "5327:  _ struct{} `type:\"structure\"`",
          "5328: }",
          "5331: func (s ImportAppCatalogOutput) String() string {",
          "5332:  return awsutil.Prettify(s)",
          "5333: }",
          "5336: func (s ImportAppCatalogOutput) GoString() string {",
          "5337:  return s.String()",
          "5338: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4615:  _            struct{}                  `type:\"structure\"`",
          "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4619: }",
          "4623:  return awsutil.Prettify(s)",
          "4624: }",
          "4628:  return s.String()",
          "4629: }",
          "4634:  }",
          "4640: }",
          "4648: }",
          "4653: }",
          "4657: }",
          "4662: }",
          "4667: }",
          "",
          "[Removed Lines]",
          "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4622: func (s NoConnectorsAvailableException) String() string {",
          "4627: func (s NoConnectorsAvailableException) GoString() string {",
          "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
          "4632:  return &NoConnectorsAvailableException{",
          "4633:   RespMetadata: v,",
          "4635: }",
          "4638: func (s *NoConnectorsAvailableException) Code() string {",
          "4639:  return \"NoConnectorsAvailableException\"",
          "4643: func (s *NoConnectorsAvailableException) Message() string {",
          "4644:  if s.Message_ != nil {",
          "4645:   return *s.Message_",
          "4646:  }",
          "4647:  return \"\"",
          "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
          "4652:  return nil",
          "4655: func (s *NoConnectorsAvailableException) Error() string {",
          "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
          "4661:  return s.RespMetadata.StatusCode",
          "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
          "4666:  return s.RespMetadata.RequestID",
          "",
          "[Added Lines]",
          "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5697: }",
          "5700: func (s NoConnectorsAvailableException) String() string {",
          "5701:  return awsutil.Prettify(s)",
          "5702: }",
          "5705: func (s NoConnectorsAvailableException) GoString() string {",
          "5706:  return s.String()",
          "5707: }",
          "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
          "5710:  return &NoConnectorsAvailableException{",
          "5711:   RespMetadata: v,",
          "5712:  }",
          "5713: }",
          "5716: func (s *NoConnectorsAvailableException) Code() string {",
          "5717:  return \"NoConnectorsAvailableException\"",
          "5718: }",
          "5721: func (s *NoConnectorsAvailableException) Message() string {",
          "5722:  if s.Message_ != nil {",
          "5723:   return *s.Message_",
          "5724:  }",
          "5725:  return \"\"",
          "5726: }",
          "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
          "5730:  return nil",
          "5731: }",
          "5733: func (s *NoConnectorsAvailableException) Error() string {",
          "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5735: }",
          "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
          "5739:  return s.RespMetadata.StatusCode",
          "5740: }",
          "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
          "5744:  return s.RespMetadata.RequestID",
          "5745: }",
          "5748: type NotificationContext struct {",
          "5749:  _ struct{} `type:\"structure\"`",
          "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
          "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
          "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "5759: }",
          "5762: func (s NotificationContext) String() string {",
          "5763:  return awsutil.Prettify(s)",
          "5764: }",
          "5767: func (s NotificationContext) GoString() string {",
          "5768:  return s.String()",
          "5769: }",
          "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
          "5773:  s.Status = &v",
          "5774:  return s",
          "5775: }",
          "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
          "5779:  s.StatusMessage = &v",
          "5780:  return s",
          "5781: }",
          "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
          "5785:  s.ValidationId = &v",
          "5786:  return s",
          "5787: }",
          "5789: type NotifyAppValidationOutputInput struct {",
          "5790:  _ struct{} `type:\"structure\"`",
          "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
          "5802: func (s NotifyAppValidationOutputInput) String() string {",
          "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
          "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
          "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
          "5814:  if s.AppId == nil {",
          "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "5818:  if invalidParams.Len() > 0 {",
          "5819:   return invalidParams",
          "5820:  }",
          "5821:  return nil",
          "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
          "5826:  s.AppId = &v",
          "5827:  return s",
          "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
          "5832:  s.NotificationContext = v",
          "5833:  return s",
          "5836: type NotifyAppValidationOutputOutput struct {",
          "5837:  _ struct{} `type:\"structure\"`",
          "5841: func (s NotifyAppValidationOutputOutput) String() string {",
          "5842:  return awsutil.Prettify(s)",
          "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
          "5847:  return s.String()",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4725: type PutAppLaunchConfigurationInput struct {",
          "4726:  _ struct{} `type:\"structure\"`",
          "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
          "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
          "4737: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4746:  return s.String()",
          "4747: }",
          "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
          "4751:  s.AppId = &v",
          "4752:  return s",
          "4753: }",
          "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
          "4757:  s.RoleName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
          "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
          "5937:  if s.ServerGroupLaunchConfigurations != nil {",
          "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
          "5939:    if v == nil {",
          "5940:     continue",
          "5941:    }",
          "5942:    if err := v.Validate(); err != nil {",
          "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
          "5944:    }",
          "5945:   }",
          "5946:  }",
          "5948:  if invalidParams.Len() > 0 {",
          "5949:   return invalidParams",
          "5950:  }",
          "5951:  return nil",
          "5952: }",
          "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
          "5962:  s.AutoLaunch = &v",
          "5963:  return s",
          "5964: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4824:  return s.String()",
          "4825: }",
          "4828: type ReplicationJob struct {",
          "4829:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6039: type PutAppValidationConfigurationInput struct {",
          "6040:  _ struct{} `type:\"structure\"`",
          "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
          "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
          "6052: }",
          "6055: func (s PutAppValidationConfigurationInput) String() string {",
          "6056:  return awsutil.Prettify(s)",
          "6057: }",
          "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
          "6061:  return s.String()",
          "6062: }",
          "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
          "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
          "6067:  if s.AppId == nil {",
          "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "6069:  }",
          "6070:  if s.AppValidationConfigurations != nil {",
          "6071:   for i, v := range s.AppValidationConfigurations {",
          "6072:    if v == nil {",
          "6073:     continue",
          "6074:    }",
          "6075:    if err := v.Validate(); err != nil {",
          "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
          "6077:    }",
          "6078:   }",
          "6079:  }",
          "6080:  if s.ServerGroupValidationConfigurations != nil {",
          "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
          "6082:    if v == nil {",
          "6083:     continue",
          "6084:    }",
          "6085:    if err := v.Validate(); err != nil {",
          "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
          "6087:    }",
          "6088:   }",
          "6089:  }",
          "6091:  if invalidParams.Len() > 0 {",
          "6092:   return invalidParams",
          "6093:  }",
          "6094:  return nil",
          "6095: }",
          "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
          "6099:  s.AppId = &v",
          "6100:  return s",
          "6101: }",
          "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
          "6105:  s.AppValidationConfigurations = v",
          "6106:  return s",
          "6107: }",
          "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
          "6111:  s.ServerGroupValidationConfigurations = v",
          "6112:  return s",
          "6113: }",
          "6115: type PutAppValidationConfigurationOutput struct {",
          "6116:  _ struct{} `type:\"structure\"`",
          "6117: }",
          "6120: func (s PutAppValidationConfigurationOutput) String() string {",
          "6121:  return awsutil.Prettify(s)",
          "6122: }",
          "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
          "6126:  return s.String()",
          "6127: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "5344:  return s",
          "5345: }",
          "5348: type S3Location struct {",
          "5349:  _ struct{} `type:\"structure\"`",
          "5355:  Key *string `locationName:\"key\" type:\"string\"`",
          "5356: }",
          "",
          "[Removed Lines]",
          "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
          "",
          "[Added Lines]",
          "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5365:  return s.String()",
          "5366: }",
          "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
          "5370:  s.Bucket = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6670: func (s *S3Location) Validate() error {",
          "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
          "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
          "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
          "6674:  }",
          "6676:  if invalidParams.Len() > 0 {",
          "6677:   return invalidParams",
          "6678:  }",
          "6679:  return nil",
          "6680: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5377:  return s",
          "5378: }",
          "5381: type Server struct {",
          "5382:  _ struct{} `type:\"structure\"`",
          "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
          "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
          "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6695: type SSMOutput struct {",
          "6696:  _ struct{} `type:\"structure\"`",
          "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
          "6700: }",
          "6703: func (s SSMOutput) String() string {",
          "6704:  return awsutil.Prettify(s)",
          "6705: }",
          "6708: func (s SSMOutput) GoString() string {",
          "6709:  return s.String()",
          "6710: }",
          "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
          "6714:  s.S3Location = v",
          "6715:  return s",
          "6716: }",
          "6719: type SSMValidationParameters struct {",
          "6720:  _ struct{} `type:\"structure\"`",
          "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
          "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
          "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
          "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
          "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
          "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
          "6739: }",
          "6742: func (s SSMValidationParameters) String() string {",
          "6743:  return awsutil.Prettify(s)",
          "6744: }",
          "6747: func (s SSMValidationParameters) GoString() string {",
          "6748:  return s.String()",
          "6749: }",
          "6752: func (s *SSMValidationParameters) Validate() error {",
          "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
          "6754:  if s.Command != nil && len(*s.Command) < 1 {",
          "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
          "6756:  }",
          "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
          "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
          "6759:  }",
          "6760:  if s.Source != nil {",
          "6761:   if err := s.Source.Validate(); err != nil {",
          "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "6763:   }",
          "6764:  }",
          "6766:  if invalidParams.Len() > 0 {",
          "6767:   return invalidParams",
          "6768:  }",
          "6769:  return nil",
          "6770: }",
          "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
          "6774:  s.Command = &v",
          "6775:  return s",
          "6776: }",
          "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
          "6780:  s.ExecutionTimeoutSeconds = &v",
          "6781:  return s",
          "6782: }",
          "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
          "6786:  s.InstanceId = &v",
          "6787:  return s",
          "6788: }",
          "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
          "6792:  s.OutputS3BucketName = &v",
          "6793:  return s",
          "6794: }",
          "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
          "6798:  s.ScriptType = &v",
          "6799:  return s",
          "6800: }",
          "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
          "6804:  s.Source = v",
          "6805:  return s",
          "6806: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "5559:  return s.String()",
          "5560: }",
          "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
          "5564:  s.LaunchOrder = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
          "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
          "6993:  if s.ServerLaunchConfigurations != nil {",
          "6994:   for i, v := range s.ServerLaunchConfigurations {",
          "6995:    if v == nil {",
          "6996:     continue",
          "6997:    }",
          "6998:    if err := v.Validate(); err != nil {",
          "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
          "7000:    }",
          "7001:   }",
          "7002:  }",
          "7004:  if invalidParams.Len() > 0 {",
          "7005:   return invalidParams",
          "7006:  }",
          "7007:  return nil",
          "7008: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "5611:  return s",
          "5612: }",
          "5615: type ServerLaunchConfiguration struct {",
          "5616:  _ struct{} `type:\"structure\"`",
          "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
          "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
          "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
          "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
          "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
          "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
          "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
          "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
          "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
          "5644: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7062: type ServerGroupValidationConfiguration struct {",
          "7063:  _ struct{} `type:\"structure\"`",
          "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
          "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
          "7070: }",
          "7073: func (s ServerGroupValidationConfiguration) String() string {",
          "7074:  return awsutil.Prettify(s)",
          "7075: }",
          "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
          "7079:  return s.String()",
          "7080: }",
          "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
          "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
          "7085:  if s.ServerValidationConfigurations != nil {",
          "7086:   for i, v := range s.ServerValidationConfigurations {",
          "7087:    if v == nil {",
          "7088:     continue",
          "7089:    }",
          "7090:    if err := v.Validate(); err != nil {",
          "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
          "7092:    }",
          "7093:   }",
          "7094:  }",
          "7096:  if invalidParams.Len() > 0 {",
          "7097:   return invalidParams",
          "7098:  }",
          "7099:  return nil",
          "7100: }",
          "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
          "7104:  s.ServerGroupId = &v",
          "7105:  return s",
          "7106: }",
          "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
          "7110:  s.ServerValidationConfigurations = v",
          "7111:  return s",
          "7112: }",
          "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
          "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
          "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5653:  return s.String()",
          "5654: }",
          "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
          "5658:  s.AssociatePublicIpAddress = &v",
          "5659:  return s",
          "5660: }",
          "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
          "5664:  s.Ec2KeyName = &v",
          "5665:  return s",
          "5666: }",
          "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
          "5670:  s.InstanceType = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7168: func (s *ServerLaunchConfiguration) Validate() error {",
          "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
          "7170:  if s.ConfigureScript != nil {",
          "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
          "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
          "7173:   }",
          "7174:  }",
          "7175:  if s.UserData != nil {",
          "7176:   if err := s.UserData.Validate(); err != nil {",
          "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
          "7178:   }",
          "7179:  }",
          "7181:  if invalidParams.Len() > 0 {",
          "7182:   return invalidParams",
          "7183:  }",
          "7184:  return nil",
          "7185: }",
          "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
          "7195:  s.ConfigureScript = v",
          "7196:  return s",
          "7197: }",
          "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
          "7201:  s.ConfigureScriptType = &v",
          "7202:  return s",
          "7203: }",
          "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
          "7213:  s.IamInstanceProfileName = &v",
          "7214:  return s",
          "7215: }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5830:  return s",
          "5831: }",
          "5833: type StartAppReplicationInput struct {",
          "5834:  _ struct{} `type:\"structure\"`",
          "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
          "5838: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7384: type ServerValidationConfiguration struct {",
          "7385:  _ struct{} `type:\"structure\"`",
          "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
          "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
          "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
          "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "7401: }",
          "7404: func (s ServerValidationConfiguration) String() string {",
          "7405:  return awsutil.Prettify(s)",
          "7406: }",
          "7409: func (s ServerValidationConfiguration) GoString() string {",
          "7410:  return s.String()",
          "7411: }",
          "7414: func (s *ServerValidationConfiguration) Validate() error {",
          "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
          "7416:  if s.Name != nil && len(*s.Name) < 1 {",
          "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "7418:  }",
          "7419:  if s.UserDataValidationParameters != nil {",
          "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
          "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
          "7422:   }",
          "7423:  }",
          "7425:  if invalidParams.Len() > 0 {",
          "7426:   return invalidParams",
          "7427:  }",
          "7428:  return nil",
          "7429: }",
          "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
          "7433:  s.Name = &v",
          "7434:  return s",
          "7435: }",
          "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
          "7439:  s.Server = v",
          "7440:  return s",
          "7441: }",
          "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
          "7445:  s.ServerValidationStrategy = &v",
          "7446:  return s",
          "7447: }",
          "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
          "7451:  s.UserDataValidationParameters = v",
          "7452:  return s",
          "7453: }",
          "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
          "7457:  s.ValidationId = &v",
          "7458:  return s",
          "7459: }",
          "7462: type ServerValidationOutput struct {",
          "7463:  _ struct{} `type:\"structure\"`",
          "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
          "7467: }",
          "7470: func (s ServerValidationOutput) String() string {",
          "7471:  return awsutil.Prettify(s)",
          "7472: }",
          "7475: func (s ServerValidationOutput) GoString() string {",
          "7476:  return s.String()",
          "7477: }",
          "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
          "7481:  s.Server = v",
          "7482:  return s",
          "7483: }",
          "7486: type Source struct {",
          "7487:  _ struct{} `type:\"structure\"`",
          "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
          "7491: }",
          "7494: func (s Source) String() string {",
          "7495:  return awsutil.Prettify(s)",
          "7496: }",
          "7499: func (s Source) GoString() string {",
          "7500:  return s.String()",
          "7501: }",
          "7504: func (s *Source) Validate() error {",
          "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
          "7506:  if s.S3Location != nil {",
          "7507:   if err := s.S3Location.Validate(); err != nil {",
          "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
          "7509:   }",
          "7510:  }",
          "7512:  if invalidParams.Len() > 0 {",
          "7513:   return invalidParams",
          "7514:  }",
          "7515:  return nil",
          "7516: }",
          "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
          "7520:  s.S3Location = v",
          "7521:  return s",
          "7522: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "5867:  return s.String()",
          "5868: }",
          "5870: type StartOnDemandReplicationRunInput struct {",
          "5871:  _ struct{} `type:\"structure\"`",
          "5874:  Description *string `locationName:\"description\" type:\"string\"`",
          "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7561: type StartOnDemandAppReplicationInput struct {",
          "7562:  _ struct{} `type:\"structure\"`",
          "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
          "7570:  Description *string `locationName:\"description\" type:\"string\"`",
          "7571: }",
          "7574: func (s StartOnDemandAppReplicationInput) String() string {",
          "7575:  return awsutil.Prettify(s)",
          "7576: }",
          "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
          "7580:  return s.String()",
          "7581: }",
          "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
          "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
          "7586:  if s.AppId == nil {",
          "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
          "7588:  }",
          "7590:  if invalidParams.Len() > 0 {",
          "7591:   return invalidParams",
          "7592:  }",
          "7593:  return nil",
          "7594: }",
          "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
          "7598:  s.AppId = &v",
          "7599:  return s",
          "7600: }",
          "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
          "7604:  s.Description = &v",
          "7605:  return s",
          "7606: }",
          "7608: type StartOnDemandAppReplicationOutput struct {",
          "7609:  _ struct{} `type:\"structure\"`",
          "7610: }",
          "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
          "7614:  return awsutil.Prettify(s)",
          "7615: }",
          "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
          "7619:  return s.String()",
          "7620: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "6424:  return s.String()",
          "6425: }",
          "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
          "6429:  s.S3Location = v",
          "6430:  return s",
          "6431: }",
          "6434: type VmServer struct {",
          "6435:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8180: func (s *UserData) Validate() error {",
          "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
          "8182:  if s.S3Location != nil {",
          "8183:   if err := s.S3Location.Validate(); err != nil {",
          "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
          "8185:   }",
          "8186:  }",
          "8188:  if invalidParams.Len() > 0 {",
          "8189:   return invalidParams",
          "8190:  }",
          "8191:  return nil",
          "8192: }",
          "8201: type UserDataValidationParameters struct {",
          "8202:  _ struct{} `type:\"structure\"`",
          "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
          "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
          "8209: }",
          "8212: func (s UserDataValidationParameters) String() string {",
          "8213:  return awsutil.Prettify(s)",
          "8214: }",
          "8217: func (s UserDataValidationParameters) GoString() string {",
          "8218:  return s.String()",
          "8219: }",
          "8222: func (s *UserDataValidationParameters) Validate() error {",
          "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
          "8224:  if s.Source != nil {",
          "8225:   if err := s.Source.Validate(); err != nil {",
          "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "8227:   }",
          "8228:  }",
          "8230:  if invalidParams.Len() > 0 {",
          "8231:   return invalidParams",
          "8232:  }",
          "8233:  return nil",
          "8234: }",
          "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
          "8238:  s.ScriptType = &v",
          "8239:  return s",
          "8240: }",
          "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
          "8244:  s.Source = v",
          "8245:  return s",
          "8246: }",
          "8249: type ValidationOutput struct {",
          "8250:  _ struct{} `type:\"structure\"`",
          "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
          "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
          "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
          "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
          "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
          "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
          "8272: }",
          "8275: func (s ValidationOutput) String() string {",
          "8276:  return awsutil.Prettify(s)",
          "8277: }",
          "8280: func (s ValidationOutput) GoString() string {",
          "8281:  return s.String()",
          "8282: }",
          "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
          "8286:  s.AppValidationOutput = v",
          "8287:  return s",
          "8288: }",
          "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
          "8292:  s.LatestValidationTime = &v",
          "8293:  return s",
          "8294: }",
          "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
          "8298:  s.Name = &v",
          "8299:  return s",
          "8300: }",
          "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
          "8304:  s.ServerValidationOutput = v",
          "8305:  return s",
          "8306: }",
          "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
          "8310:  s.Status = &v",
          "8311:  return s",
          "8312: }",
          "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
          "8316:  s.StatusMessage = &v",
          "8317:  return s",
          "8318: }",
          "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
          "8322:  s.ValidationId = &v",
          "8323:  return s",
          "8324: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "6523:  return s",
          "6524: }",
          "6526: const (",
          "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8419: const (",
          "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
          "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
          "8425: )",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
          "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
          "6568: )",
          "6570: const (",
          "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8474: const (",
          "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
          "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
          "8480: )",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
          "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
          "6635: )",
          "6637: const (",
          "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8552: const (",
          "8554:  AppValidationStrategySsm = \"SSM\"",
          "8555: )",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
          "6649: )",
          "6651: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
          "6730: )",
          "6732: const (",
          "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8655: const (",
          "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
          "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
          "8661: )",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
          "6752: )",
          "6754: const (",
          "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8685: const (",
          "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
          "8688: )",
          "8690: const (",
          "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
          "8695:  ValidationStatusPending = \"PENDING\"",
          "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
          "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
          "8704:  ValidationStatusFailed = \"FAILED\"",
          "8705: )",
          "",
          "---------------"
        ],
        "service/sms/doc.go||service/sms/doc.go": [
          "File: service/sms/doc.go -> service/sms/doc.go"
        ],
        "service/sms/errors.go||service/sms/errors.go": [
          "File: service/sms/errors.go -> service/sms/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78: )",
          "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "81:  \"InternalError\":                        newErrorInternalError,",
          "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
          "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
          "",
          "---------------"
        ],
        "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
          "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
          "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
          "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
          "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
          "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
          "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
          "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
          "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
          "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
          "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
          "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
          "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
          "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
          "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
          "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
          "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
          "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
          "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
          "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
          "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
          "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
          "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
          "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
          "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
          "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
          "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
          "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
          "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
          "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
          "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
          "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
          "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
          "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
          "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
          "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
          "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
          "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
          "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
          "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
          "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e3ed9d2b7f4e07122e74dc4c5da9e6cd698ebfd",
      "candidate_info": {
        "commit_hash": "6e3ed9d2b7f4e07122e74dc4c5da9e6cd698ebfd",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/6e3ed9d2b7f4e07122e74dc4c5da9e6cd698ebfd",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/apis/glue/2017-03-31/paginators-1.json",
          "models/apis/kinesisanalyticsv2/2018-05-23/api-2.json",
          "models/apis/kinesisanalyticsv2/2018-05-23/docs-2.json",
          "models/apis/redshift-data/2019-12-20/api-2.json",
          "models/apis/redshift-data/2019-12-20/docs-2.json",
          "models/apis/redshift-data/2019-12-20/examples-1.json",
          "models/apis/redshift-data/2019-12-20/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/glue/api.go",
          "service/glue/errors.go",
          "service/glue/glueiface/interface.go",
          "service/kinesisanalyticsv2/api.go",
          "service/redshiftdataapiservice/api.go",
          "service/redshiftdataapiservice/doc.go",
          "service/redshiftdataapiservice/errors.go",
          "service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go",
          "service/redshiftdataapiservice/service.go"
        ],
        "message": "Release v1.34.20 (2020-09-09) (#3530)\n\nRelease v1.34.20 (2020-09-09)\n===\n\n### Service Client Updates\n* `service/glue`: Updates service API, documentation, and paginators\n  * Adding support for partitionIndexes to improve GetPartitions performance.\n* `service/kinesisanalyticsv2`: Updates service API and documentation\n* `service/redshift-data`: Adds new service",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/glue/api.go||service/glue/api.go",
          "service/glue/errors.go||service/glue/errors.go",
          "service/glue/glueiface/interface.go||service/glue/glueiface/interface.go",
          "service/kinesisanalyticsv2/api.go||service/kinesisanalyticsv2/api.go",
          "service/redshiftdataapiservice/api.go||service/redshiftdataapiservice/api.go",
          "service/redshiftdataapiservice/doc.go||service/redshiftdataapiservice/doc.go",
          "service/redshiftdataapiservice/errors.go||service/redshiftdataapiservice/errors.go",
          "service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go||service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go",
          "service/redshiftdataapiservice/service.go||service/redshiftdataapiservice/service.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "789:     \"ca-central-1\":   endpoint{},",
          "790:     \"eu-central-1\":   endpoint{},",
          "791:     \"eu-north-1\":     endpoint{},",
          "792:     \"eu-west-1\":      endpoint{},",
          "793:     \"eu-west-2\":      endpoint{},",
          "794:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "792:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2929:     \"ca-central-1\":   endpoint{},",
          "2930:     \"eu-central-1\":   endpoint{},",
          "2931:     \"eu-north-1\":     endpoint{},",
          "2932:     \"eu-west-1\":      endpoint{},",
          "2933:     \"eu-west-2\":      endpoint{},",
          "2934:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2933:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3468:     \"ca-central-1\":   endpoint{},",
          "3469:     \"eu-central-1\":   endpoint{},",
          "3470:     \"eu-north-1\":     endpoint{},",
          "3471:     \"eu-west-1\":      endpoint{},",
          "3472:     \"eu-west-2\":      endpoint{},",
          "3473:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3473:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.19\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.20\"",
          "",
          "---------------"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6992:  return out, req.Send()",
          "6993: }",
          "6995: const opGetPartitions = \"GetPartitions\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6995: const opGetPartitionIndexes = \"GetPartitionIndexes\"",
          "7021: func (c *Glue) GetPartitionIndexesRequest(input *GetPartitionIndexesInput) (req *request.Request, output *GetPartitionIndexesOutput) {",
          "7022:  op := &request.Operation{",
          "7023:   Name:       opGetPartitionIndexes,",
          "7024:   HTTPMethod: \"POST\",",
          "7025:   HTTPPath:   \"/\",",
          "7026:   Paginator: &request.Paginator{",
          "7027:    InputTokens:     []string{\"NextToken\"},",
          "7028:    OutputTokens:    []string{\"NextToken\"},",
          "7029:    LimitToken:      \"\",",
          "7030:    TruncationToken: \"\",",
          "7031:   },",
          "7032:  }",
          "7034:  if input == nil {",
          "7035:   input = &GetPartitionIndexesInput{}",
          "7036:  }",
          "7038:  output = &GetPartitionIndexesOutput{}",
          "7039:  req = c.newRequest(op, input, output)",
          "7040:  return",
          "7041: }",
          "7071: func (c *Glue) GetPartitionIndexes(input *GetPartitionIndexesInput) (*GetPartitionIndexesOutput, error) {",
          "7072:  req, out := c.GetPartitionIndexesRequest(input)",
          "7073:  return out, req.Send()",
          "7074: }",
          "7085: func (c *Glue) GetPartitionIndexesWithContext(ctx aws.Context, input *GetPartitionIndexesInput, opts ...request.Option) (*GetPartitionIndexesOutput, error) {",
          "7086:  req, out := c.GetPartitionIndexesRequest(input)",
          "7087:  req.SetContext(ctx)",
          "7088:  req.ApplyOptions(opts...)",
          "7089:  return out, req.Send()",
          "7090: }",
          "7109: func (c *Glue) GetPartitionIndexesPages(input *GetPartitionIndexesInput, fn func(*GetPartitionIndexesOutput, bool) bool) error {",
          "7110:  return c.GetPartitionIndexesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "7111: }",
          "7120: func (c *Glue) GetPartitionIndexesPagesWithContext(ctx aws.Context, input *GetPartitionIndexesInput, fn func(*GetPartitionIndexesOutput, bool) bool, opts ...request.Option) error {",
          "7121:  p := request.Pagination{",
          "7122:   NewRequest: func() (*request.Request, error) {",
          "7123:    var inCpy *GetPartitionIndexesInput",
          "7124:    if input != nil {",
          "7125:     tmp := *input",
          "7126:     inCpy = &tmp",
          "7127:    }",
          "7128:    req, _ := c.GetPartitionIndexesRequest(inCpy)",
          "7129:    req.SetContext(ctx)",
          "7130:    req.ApplyOptions(opts...)",
          "7131:    return req, nil",
          "7132:   },",
          "7133:  }",
          "7135:  for p.Next() {",
          "7136:   if !fn(p.Page().(*GetPartitionIndexesOutput), !p.HasNextPage()) {",
          "7137:    break",
          "7138:   }",
          "7139:  }",
          "7141:  return p.Err()",
          "7142: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16218:  return s.RespMetadata.RequestID",
          "16219: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16371: type ConflictException struct {",
          "16372:  _            struct{}                  `type:\"structure\"`",
          "16373:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "16376:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "16377: }",
          "16380: func (s ConflictException) String() string {",
          "16381:  return awsutil.Prettify(s)",
          "16382: }",
          "16385: func (s ConflictException) GoString() string {",
          "16386:  return s.String()",
          "16387: }",
          "16389: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "16390:  return &ConflictException{",
          "16391:   RespMetadata: v,",
          "16392:  }",
          "16393: }",
          "16396: func (s *ConflictException) Code() string {",
          "16397:  return \"ConflictException\"",
          "16398: }",
          "16401: func (s *ConflictException) Message() string {",
          "16402:  if s.Message_ != nil {",
          "16403:   return *s.Message_",
          "16404:  }",
          "16405:  return \"\"",
          "16406: }",
          "16409: func (s *ConflictException) OrigErr() error {",
          "16410:  return nil",
          "16411: }",
          "16413: func (s *ConflictException) Error() string {",
          "16414:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "16415: }",
          "16418: func (s *ConflictException) StatusCode() int {",
          "16419:  return s.RespMetadata.StatusCode",
          "16420: }",
          "16423: func (s *ConflictException) RequestID() string {",
          "16424:  return s.RespMetadata.RequestID",
          "16425: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "19234:  DatabaseName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19431:  PartitionIndexes []*PartitionIndex `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "19264:  if s.TableInput == nil {",
          "19265:   invalidParams.Add(request.NewErrParamRequired(\"TableInput\"))",
          "19266:  }",
          "19267:  if s.TableInput != nil {",
          "19268:   if err := s.TableInput.Validate(); err != nil {",
          "19269:    invalidParams.AddNested(\"TableInput\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19464:  if s.PartitionIndexes != nil {",
          "19465:   for i, v := range s.PartitionIndexes {",
          "19466:    if v == nil {",
          "19467:     continue",
          "19468:    }",
          "19469:    if err := v.Validate(); err != nil {",
          "19470:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"PartitionIndexes\", i), err.(request.ErrInvalidParams))",
          "19471:    }",
          "19472:   }",
          "19473:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "19288:  return s",
          "19289: }",
          "19292: func (s *CreateTableInput) SetTableInput(v *TableInput) *CreateTableInput {",
          "19293:  s.TableInput = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19499: func (s *CreateTableInput) SetPartitionIndexes(v []*PartitionIndex) *CreateTableInput {",
          "19500:  s.PartitionIndexes = v",
          "19501:  return s",
          "19502: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "25214:  return s",
          "25215: }",
          "25217: type GetPartitionInput struct {",
          "25218:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25430: type GetPartitionIndexesInput struct {",
          "25431:  _ struct{} `type:\"structure\"`",
          "25434:  CatalogId *string `min:\"1\" type:\"string\"`",
          "25440:  DatabaseName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "25443:  NextToken *string `type:\"string\"`",
          "25449:  TableName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "25450: }",
          "25453: func (s GetPartitionIndexesInput) String() string {",
          "25454:  return awsutil.Prettify(s)",
          "25455: }",
          "25458: func (s GetPartitionIndexesInput) GoString() string {",
          "25459:  return s.String()",
          "25460: }",
          "25463: func (s *GetPartitionIndexesInput) Validate() error {",
          "25464:  invalidParams := request.ErrInvalidParams{Context: \"GetPartitionIndexesInput\"}",
          "25465:  if s.CatalogId != nil && len(*s.CatalogId) < 1 {",
          "25466:   invalidParams.Add(request.NewErrParamMinLen(\"CatalogId\", 1))",
          "25467:  }",
          "25468:  if s.DatabaseName == nil {",
          "25469:   invalidParams.Add(request.NewErrParamRequired(\"DatabaseName\"))",
          "25470:  }",
          "25471:  if s.DatabaseName != nil && len(*s.DatabaseName) < 1 {",
          "25472:   invalidParams.Add(request.NewErrParamMinLen(\"DatabaseName\", 1))",
          "25473:  }",
          "25474:  if s.TableName == nil {",
          "25475:   invalidParams.Add(request.NewErrParamRequired(\"TableName\"))",
          "25476:  }",
          "25477:  if s.TableName != nil && len(*s.TableName) < 1 {",
          "25478:   invalidParams.Add(request.NewErrParamMinLen(\"TableName\", 1))",
          "25479:  }",
          "25481:  if invalidParams.Len() > 0 {",
          "25482:   return invalidParams",
          "25483:  }",
          "25484:  return nil",
          "25485: }",
          "25488: func (s *GetPartitionIndexesInput) SetCatalogId(v string) *GetPartitionIndexesInput {",
          "25489:  s.CatalogId = &v",
          "25490:  return s",
          "25491: }",
          "25494: func (s *GetPartitionIndexesInput) SetDatabaseName(v string) *GetPartitionIndexesInput {",
          "25495:  s.DatabaseName = &v",
          "25496:  return s",
          "25497: }",
          "25500: func (s *GetPartitionIndexesInput) SetNextToken(v string) *GetPartitionIndexesInput {",
          "25501:  s.NextToken = &v",
          "25502:  return s",
          "25503: }",
          "25506: func (s *GetPartitionIndexesInput) SetTableName(v string) *GetPartitionIndexesInput {",
          "25507:  s.TableName = &v",
          "25508:  return s",
          "25509: }",
          "25511: type GetPartitionIndexesOutput struct {",
          "25512:  _ struct{} `type:\"structure\"`",
          "25515:  NextToken *string `type:\"string\"`",
          "25518:  PartitionIndexDescriptorList []*PartitionIndexDescriptor `type:\"list\"`",
          "25519: }",
          "25522: func (s GetPartitionIndexesOutput) String() string {",
          "25523:  return awsutil.Prettify(s)",
          "25524: }",
          "25527: func (s GetPartitionIndexesOutput) GoString() string {",
          "25528:  return s.String()",
          "25529: }",
          "25532: func (s *GetPartitionIndexesOutput) SetNextToken(v string) *GetPartitionIndexesOutput {",
          "25533:  s.NextToken = &v",
          "25534:  return s",
          "25535: }",
          "25538: func (s *GetPartitionIndexesOutput) SetPartitionIndexDescriptorList(v []*PartitionIndexDescriptor) *GetPartitionIndexesOutput {",
          "25539:  s.PartitionIndexDescriptorList = v",
          "25540:  return s",
          "25541: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "28758:  return s",
          "28759: }",
          "28762: type LabelingSetGenerationTaskRunProperties struct {",
          "28763:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29088: type KeySchemaElement struct {",
          "29089:  _ struct{} `type:\"structure\"`",
          "29094:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "29099:  Type *string `type:\"string\" required:\"true\"`",
          "29100: }",
          "29103: func (s KeySchemaElement) String() string {",
          "29104:  return awsutil.Prettify(s)",
          "29105: }",
          "29108: func (s KeySchemaElement) GoString() string {",
          "29109:  return s.String()",
          "29110: }",
          "29113: func (s *KeySchemaElement) SetName(v string) *KeySchemaElement {",
          "29114:  s.Name = &v",
          "29115:  return s",
          "29116: }",
          "29119: func (s *KeySchemaElement) SetType(v string) *KeySchemaElement {",
          "29120:  s.Type = &v",
          "29121:  return s",
          "29122: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "30347:  return s",
          "30348: }",
          "30351: type PartitionInput struct {",
          "30352:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30714: type PartitionIndex struct {",
          "30715:  _ struct{} `type:\"structure\"`",
          "30720:  IndexName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "30725:  Keys []*string `min:\"1\" type:\"list\" required:\"true\"`",
          "30726: }",
          "30729: func (s PartitionIndex) String() string {",
          "30730:  return awsutil.Prettify(s)",
          "30731: }",
          "30734: func (s PartitionIndex) GoString() string {",
          "30735:  return s.String()",
          "30736: }",
          "30739: func (s *PartitionIndex) Validate() error {",
          "30740:  invalidParams := request.ErrInvalidParams{Context: \"PartitionIndex\"}",
          "30741:  if s.IndexName == nil {",
          "30742:   invalidParams.Add(request.NewErrParamRequired(\"IndexName\"))",
          "30743:  }",
          "30744:  if s.IndexName != nil && len(*s.IndexName) < 1 {",
          "30745:   invalidParams.Add(request.NewErrParamMinLen(\"IndexName\", 1))",
          "30746:  }",
          "30747:  if s.Keys == nil {",
          "30748:   invalidParams.Add(request.NewErrParamRequired(\"Keys\"))",
          "30749:  }",
          "30750:  if s.Keys != nil && len(s.Keys) < 1 {",
          "30751:   invalidParams.Add(request.NewErrParamMinLen(\"Keys\", 1))",
          "30752:  }",
          "30754:  if invalidParams.Len() > 0 {",
          "30755:   return invalidParams",
          "30756:  }",
          "30757:  return nil",
          "30758: }",
          "30761: func (s *PartitionIndex) SetIndexName(v string) *PartitionIndex {",
          "30762:  s.IndexName = &v",
          "30763:  return s",
          "30764: }",
          "30767: func (s *PartitionIndex) SetKeys(v []*string) *PartitionIndex {",
          "30768:  s.Keys = v",
          "30769:  return s",
          "30770: }",
          "30773: type PartitionIndexDescriptor struct {",
          "30774:  _ struct{} `type:\"structure\"`",
          "30779:  IndexName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "30784:  IndexStatus *string `type:\"string\" required:\"true\" enum:\"PartitionIndexStatus\"`",
          "30790:  Keys []*KeySchemaElement `min:\"1\" type:\"list\" required:\"true\"`",
          "30791: }",
          "30794: func (s PartitionIndexDescriptor) String() string {",
          "30795:  return awsutil.Prettify(s)",
          "30796: }",
          "30799: func (s PartitionIndexDescriptor) GoString() string {",
          "30800:  return s.String()",
          "30801: }",
          "30804: func (s *PartitionIndexDescriptor) SetIndexName(v string) *PartitionIndexDescriptor {",
          "30805:  s.IndexName = &v",
          "30806:  return s",
          "30807: }",
          "30810: func (s *PartitionIndexDescriptor) SetIndexStatus(v string) *PartitionIndexDescriptor {",
          "30811:  s.IndexStatus = &v",
          "30812:  return s",
          "30813: }",
          "30816: func (s *PartitionIndexDescriptor) SetKeys(v []*KeySchemaElement) *PartitionIndexDescriptor {",
          "30817:  s.Keys = v",
          "30818:  return s",
          "30819: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "37856:  }",
          "37857: }",
          "37859: const (",
          "37861:  PermissionAll = \"ALL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38330: const (",
          "38332:  PartitionIndexStatusActive = \"ACTIVE\"",
          "38333: )",
          "38336: func PartitionIndexStatus_Values() []string {",
          "38337:  return []string{",
          "38338:   PartitionIndexStatusActive,",
          "38339:  }",
          "38340: }",
          "",
          "---------------"
        ],
        "service/glue/errors.go||service/glue/errors.go": [
          "File: service/glue/errors.go -> service/glue/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:  ErrCodeConditionCheckFailureException = \"ConditionCheckFailureException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:  ErrCodeConflictException = \"ConflictException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:  \"ConcurrentModificationException\":      newErrorConcurrentModificationException,",
          "154:  \"ConcurrentRunsExceededException\":      newErrorConcurrentRunsExceededException,",
          "155:  \"ConditionCheckFailureException\":       newErrorConditionCheckFailureException,",
          "156:  \"CrawlerNotRunningException\":           newErrorCrawlerNotRunningException,",
          "157:  \"CrawlerRunningException\":              newErrorCrawlerRunningException,",
          "158:  \"CrawlerStoppingException\":             newErrorCrawlerStoppingException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:  \"ConflictException\":                    newErrorConflictException,",
          "",
          "---------------"
        ],
        "service/glue/glueiface/interface.go||service/glue/glueiface/interface.go": [
          "File: service/glue/glueiface/interface.go -> service/glue/glueiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "374:  GetPartitionWithContext(aws.Context, *glue.GetPartitionInput, ...request.Option) (*glue.GetPartitionOutput, error)",
          "375:  GetPartitionRequest(*glue.GetPartitionInput) (*request.Request, *glue.GetPartitionOutput)",
          "377:  GetPartitions(*glue.GetPartitionsInput) (*glue.GetPartitionsOutput, error)",
          "378:  GetPartitionsWithContext(aws.Context, *glue.GetPartitionsInput, ...request.Option) (*glue.GetPartitionsOutput, error)",
          "379:  GetPartitionsRequest(*glue.GetPartitionsInput) (*request.Request, *glue.GetPartitionsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "377:  GetPartitionIndexes(*glue.GetPartitionIndexesInput) (*glue.GetPartitionIndexesOutput, error)",
          "378:  GetPartitionIndexesWithContext(aws.Context, *glue.GetPartitionIndexesInput, ...request.Option) (*glue.GetPartitionIndexesOutput, error)",
          "379:  GetPartitionIndexesRequest(*glue.GetPartitionIndexesInput) (*request.Request, *glue.GetPartitionIndexesOutput)",
          "381:  GetPartitionIndexesPages(*glue.GetPartitionIndexesInput, func(*glue.GetPartitionIndexesOutput, bool) bool) error",
          "382:  GetPartitionIndexesPagesWithContext(aws.Context, *glue.GetPartitionIndexesInput, func(*glue.GetPartitionIndexesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/kinesisanalyticsv2/api.go||service/kinesisanalyticsv2/api.go": [
          "File: service/kinesisanalyticsv2/api.go -> service/kinesisanalyticsv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7116:  RecordFormatUpdate *RecordFormat `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "7113:  RecordEncodingUpdate *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "7122:  RecordEncodingUpdate *string `min:\"5\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7132:  if s.RecordColumnUpdates != nil && len(s.RecordColumnUpdates) < 1 {",
          "7133:   invalidParams.Add(request.NewErrParamMinLen(\"RecordColumnUpdates\", 1))",
          "7134:  }",
          "7135:  if s.RecordColumnUpdates != nil {",
          "7136:   for i, v := range s.RecordColumnUpdates {",
          "7137:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7144:  if s.RecordEncodingUpdate != nil && len(*s.RecordEncodingUpdate) < 5 {",
          "7145:   invalidParams.Add(request.NewErrParamMinLen(\"RecordEncodingUpdate\", 5))",
          "7146:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "9342:  Name *string `type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "9354:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9364:  if s.Name == nil {",
          "9365:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "9366:  }",
          "9367:  if s.SqlType == nil {",
          "9368:   invalidParams.Add(request.NewErrParamRequired(\"SqlType\"))",
          "9369:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9379:  if s.Name != nil && len(*s.Name) < 1 {",
          "9380:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "9381:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9938:  ApplicationRestoreConfigurationDescription *ApplicationRestoreConfiguration `type:\"structure\"`",
          "9939: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9957:  FlinkRunConfigurationDescription *FlinkRunConfiguration `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9954:  return s",
          "9955: }",
          "9959: type RunConfigurationUpdate struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9977: func (s *RunConfigurationDescription) SetFlinkRunConfigurationDescription(v *FlinkRunConfiguration) *RunConfigurationDescription {",
          "9978:  s.FlinkRunConfigurationDescription = v",
          "9979:  return s",
          "9980: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10532:  RecordEncoding *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "10557:  RecordEncoding *string `min:\"5\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "10556:  if s.RecordColumns != nil && len(s.RecordColumns) < 1 {",
          "10557:   invalidParams.Add(request.NewErrParamMinLen(\"RecordColumns\", 1))",
          "10558:  }",
          "10559:  if s.RecordFormat == nil {",
          "10560:   invalidParams.Add(request.NewErrParamRequired(\"RecordFormat\"))",
          "10561:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10584:  if s.RecordEncoding != nil && len(*s.RecordEncoding) < 5 {",
          "10585:   invalidParams.Add(request.NewErrParamMinLen(\"RecordEncoding\", 5))",
          "10586:  }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11768:  ApplicationStatusUpdating = \"UPDATING\"",
          "11769: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11799:  ApplicationStatusAutoscaling = \"AUTOSCALING\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11777:   ApplicationStatusReady,",
          "11778:   ApplicationStatusRunning,",
          "11779:   ApplicationStatusUpdating,",
          "11780:  }",
          "11781: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11811:   ApplicationStatusAutoscaling,",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/api.go||service/redshiftdataapiservice/api.go": [
          "File: service/redshiftdataapiservice/api.go -> service/redshiftdataapiservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package redshiftdataapiservice",
          "5: import (",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/aws/aws-sdk-go/aws\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13: )",
          "15: const opCancelStatement = \"CancelStatement\"",
          "41: func (c *RedshiftDataAPIService) CancelStatementRequest(input *CancelStatementInput) (req *request.Request, output *CancelStatementOutput) {",
          "42:  op := &request.Operation{",
          "43:   Name:       opCancelStatement,",
          "44:   HTTPMethod: \"POST\",",
          "45:   HTTPPath:   \"/\",",
          "46:  }",
          "48:  if input == nil {",
          "49:   input = &CancelStatementInput{}",
          "50:  }",
          "52:  output = &CancelStatementOutput{}",
          "53:  req = c.newRequest(op, input, output)",
          "54:  return",
          "55: }",
          "76: func (c *RedshiftDataAPIService) CancelStatement(input *CancelStatementInput) (*CancelStatementOutput, error) {",
          "77:  req, out := c.CancelStatementRequest(input)",
          "78:  return out, req.Send()",
          "79: }",
          "90: func (c *RedshiftDataAPIService) CancelStatementWithContext(ctx aws.Context, input *CancelStatementInput, opts ...request.Option) (*CancelStatementOutput, error) {",
          "91:  req, out := c.CancelStatementRequest(input)",
          "92:  req.SetContext(ctx)",
          "93:  req.ApplyOptions(opts...)",
          "94:  return out, req.Send()",
          "95: }",
          "97: const opDescribeStatement = \"DescribeStatement\"",
          "123: func (c *RedshiftDataAPIService) DescribeStatementRequest(input *DescribeStatementInput) (req *request.Request, output *DescribeStatementOutput) {",
          "124:  op := &request.Operation{",
          "125:   Name:       opDescribeStatement,",
          "126:   HTTPMethod: \"POST\",",
          "127:   HTTPPath:   \"/\",",
          "128:  }",
          "130:  if input == nil {",
          "131:   input = &DescribeStatementInput{}",
          "132:  }",
          "134:  output = &DescribeStatementOutput{}",
          "135:  req = c.newRequest(op, input, output)",
          "136:  return",
          "137: }",
          "164: func (c *RedshiftDataAPIService) DescribeStatement(input *DescribeStatementInput) (*DescribeStatementOutput, error) {",
          "165:  req, out := c.DescribeStatementRequest(input)",
          "166:  return out, req.Send()",
          "167: }",
          "178: func (c *RedshiftDataAPIService) DescribeStatementWithContext(ctx aws.Context, input *DescribeStatementInput, opts ...request.Option) (*DescribeStatementOutput, error) {",
          "179:  req, out := c.DescribeStatementRequest(input)",
          "180:  req.SetContext(ctx)",
          "181:  req.ApplyOptions(opts...)",
          "182:  return out, req.Send()",
          "183: }",
          "185: const opDescribeTable = \"DescribeTable\"",
          "211: func (c *RedshiftDataAPIService) DescribeTableRequest(input *DescribeTableInput) (req *request.Request, output *DescribeTableOutput) {",
          "212:  op := &request.Operation{",
          "213:   Name:       opDescribeTable,",
          "214:   HTTPMethod: \"POST\",",
          "215:   HTTPPath:   \"/\",",
          "216:   Paginator: &request.Paginator{",
          "217:    InputTokens:     []string{\"NextToken\"},",
          "218:    OutputTokens:    []string{\"NextToken\"},",
          "219:    LimitToken:      \"MaxResults\",",
          "220:    TruncationToken: \"\",",
          "221:   },",
          "222:  }",
          "224:  if input == nil {",
          "225:   input = &DescribeTableInput{}",
          "226:  }",
          "228:  output = &DescribeTableOutput{}",
          "229:  req = c.newRequest(op, input, output)",
          "230:  return",
          "231: }",
          "262: func (c *RedshiftDataAPIService) DescribeTable(input *DescribeTableInput) (*DescribeTableOutput, error) {",
          "263:  req, out := c.DescribeTableRequest(input)",
          "264:  return out, req.Send()",
          "265: }",
          "276: func (c *RedshiftDataAPIService) DescribeTableWithContext(ctx aws.Context, input *DescribeTableInput, opts ...request.Option) (*DescribeTableOutput, error) {",
          "277:  req, out := c.DescribeTableRequest(input)",
          "278:  req.SetContext(ctx)",
          "279:  req.ApplyOptions(opts...)",
          "280:  return out, req.Send()",
          "281: }",
          "300: func (c *RedshiftDataAPIService) DescribeTablePages(input *DescribeTableInput, fn func(*DescribeTableOutput, bool) bool) error {",
          "301:  return c.DescribeTablePagesWithContext(aws.BackgroundContext(), input, fn)",
          "302: }",
          "311: func (c *RedshiftDataAPIService) DescribeTablePagesWithContext(ctx aws.Context, input *DescribeTableInput, fn func(*DescribeTableOutput, bool) bool, opts ...request.Option) error {",
          "312:  p := request.Pagination{",
          "313:   NewRequest: func() (*request.Request, error) {",
          "314:    var inCpy *DescribeTableInput",
          "315:    if input != nil {",
          "316:     tmp := *input",
          "317:     inCpy = &tmp",
          "318:    }",
          "319:    req, _ := c.DescribeTableRequest(inCpy)",
          "320:    req.SetContext(ctx)",
          "321:    req.ApplyOptions(opts...)",
          "322:    return req, nil",
          "323:   },",
          "324:  }",
          "326:  for p.Next() {",
          "327:   if !fn(p.Page().(*DescribeTableOutput), !p.HasNextPage()) {",
          "328:    break",
          "329:   }",
          "330:  }",
          "332:  return p.Err()",
          "333: }",
          "335: const opExecuteStatement = \"ExecuteStatement\"",
          "361: func (c *RedshiftDataAPIService) ExecuteStatementRequest(input *ExecuteStatementInput) (req *request.Request, output *ExecuteStatementOutput) {",
          "362:  op := &request.Operation{",
          "363:   Name:       opExecuteStatement,",
          "364:   HTTPMethod: \"POST\",",
          "365:   HTTPPath:   \"/\",",
          "366:  }",
          "368:  if input == nil {",
          "369:   input = &ExecuteStatementInput{}",
          "370:  }",
          "372:  output = &ExecuteStatementOutput{}",
          "373:  req = c.newRequest(op, input, output)",
          "374:  return",
          "375: }",
          "406: func (c *RedshiftDataAPIService) ExecuteStatement(input *ExecuteStatementInput) (*ExecuteStatementOutput, error) {",
          "407:  req, out := c.ExecuteStatementRequest(input)",
          "408:  return out, req.Send()",
          "409: }",
          "420: func (c *RedshiftDataAPIService) ExecuteStatementWithContext(ctx aws.Context, input *ExecuteStatementInput, opts ...request.Option) (*ExecuteStatementOutput, error) {",
          "421:  req, out := c.ExecuteStatementRequest(input)",
          "422:  req.SetContext(ctx)",
          "423:  req.ApplyOptions(opts...)",
          "424:  return out, req.Send()",
          "425: }",
          "427: const opGetStatementResult = \"GetStatementResult\"",
          "453: func (c *RedshiftDataAPIService) GetStatementResultRequest(input *GetStatementResultInput) (req *request.Request, output *GetStatementResultOutput) {",
          "454:  op := &request.Operation{",
          "455:   Name:       opGetStatementResult,",
          "456:   HTTPMethod: \"POST\",",
          "457:   HTTPPath:   \"/\",",
          "458:   Paginator: &request.Paginator{",
          "459:    InputTokens:     []string{\"NextToken\"},",
          "460:    OutputTokens:    []string{\"NextToken\"},",
          "461:    LimitToken:      \"\",",
          "462:    TruncationToken: \"\",",
          "463:   },",
          "464:  }",
          "466:  if input == nil {",
          "467:   input = &GetStatementResultInput{}",
          "468:  }",
          "470:  output = &GetStatementResultOutput{}",
          "471:  req = c.newRequest(op, input, output)",
          "472:  return",
          "473: }",
          "498: func (c *RedshiftDataAPIService) GetStatementResult(input *GetStatementResultInput) (*GetStatementResultOutput, error) {",
          "499:  req, out := c.GetStatementResultRequest(input)",
          "500:  return out, req.Send()",
          "501: }",
          "512: func (c *RedshiftDataAPIService) GetStatementResultWithContext(ctx aws.Context, input *GetStatementResultInput, opts ...request.Option) (*GetStatementResultOutput, error) {",
          "513:  req, out := c.GetStatementResultRequest(input)",
          "514:  req.SetContext(ctx)",
          "515:  req.ApplyOptions(opts...)",
          "516:  return out, req.Send()",
          "517: }",
          "536: func (c *RedshiftDataAPIService) GetStatementResultPages(input *GetStatementResultInput, fn func(*GetStatementResultOutput, bool) bool) error {",
          "537:  return c.GetStatementResultPagesWithContext(aws.BackgroundContext(), input, fn)",
          "538: }",
          "547: func (c *RedshiftDataAPIService) GetStatementResultPagesWithContext(ctx aws.Context, input *GetStatementResultInput, fn func(*GetStatementResultOutput, bool) bool, opts ...request.Option) error {",
          "548:  p := request.Pagination{",
          "549:   NewRequest: func() (*request.Request, error) {",
          "550:    var inCpy *GetStatementResultInput",
          "551:    if input != nil {",
          "552:     tmp := *input",
          "553:     inCpy = &tmp",
          "554:    }",
          "555:    req, _ := c.GetStatementResultRequest(inCpy)",
          "556:    req.SetContext(ctx)",
          "557:    req.ApplyOptions(opts...)",
          "558:    return req, nil",
          "559:   },",
          "560:  }",
          "562:  for p.Next() {",
          "563:   if !fn(p.Page().(*GetStatementResultOutput), !p.HasNextPage()) {",
          "564:    break",
          "565:   }",
          "566:  }",
          "568:  return p.Err()",
          "569: }",
          "571: const opListDatabases = \"ListDatabases\"",
          "597: func (c *RedshiftDataAPIService) ListDatabasesRequest(input *ListDatabasesInput) (req *request.Request, output *ListDatabasesOutput) {",
          "598:  op := &request.Operation{",
          "599:   Name:       opListDatabases,",
          "600:   HTTPMethod: \"POST\",",
          "601:   HTTPPath:   \"/\",",
          "602:   Paginator: &request.Paginator{",
          "603:    InputTokens:     []string{\"NextToken\"},",
          "604:    OutputTokens:    []string{\"NextToken\"},",
          "605:    LimitToken:      \"MaxResults\",",
          "606:    TruncationToken: \"\",",
          "607:   },",
          "608:  }",
          "610:  if input == nil {",
          "611:   input = &ListDatabasesInput{}",
          "612:  }",
          "614:  output = &ListDatabasesOutput{}",
          "615:  req = c.newRequest(op, input, output)",
          "616:  return",
          "617: }",
          "647: func (c *RedshiftDataAPIService) ListDatabases(input *ListDatabasesInput) (*ListDatabasesOutput, error) {",
          "648:  req, out := c.ListDatabasesRequest(input)",
          "649:  return out, req.Send()",
          "650: }",
          "661: func (c *RedshiftDataAPIService) ListDatabasesWithContext(ctx aws.Context, input *ListDatabasesInput, opts ...request.Option) (*ListDatabasesOutput, error) {",
          "662:  req, out := c.ListDatabasesRequest(input)",
          "663:  req.SetContext(ctx)",
          "664:  req.ApplyOptions(opts...)",
          "665:  return out, req.Send()",
          "666: }",
          "685: func (c *RedshiftDataAPIService) ListDatabasesPages(input *ListDatabasesInput, fn func(*ListDatabasesOutput, bool) bool) error {",
          "686:  return c.ListDatabasesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "687: }",
          "696: func (c *RedshiftDataAPIService) ListDatabasesPagesWithContext(ctx aws.Context, input *ListDatabasesInput, fn func(*ListDatabasesOutput, bool) bool, opts ...request.Option) error {",
          "697:  p := request.Pagination{",
          "698:   NewRequest: func() (*request.Request, error) {",
          "699:    var inCpy *ListDatabasesInput",
          "700:    if input != nil {",
          "701:     tmp := *input",
          "702:     inCpy = &tmp",
          "703:    }",
          "704:    req, _ := c.ListDatabasesRequest(inCpy)",
          "705:    req.SetContext(ctx)",
          "706:    req.ApplyOptions(opts...)",
          "707:    return req, nil",
          "708:   },",
          "709:  }",
          "711:  for p.Next() {",
          "712:   if !fn(p.Page().(*ListDatabasesOutput), !p.HasNextPage()) {",
          "713:    break",
          "714:   }",
          "715:  }",
          "717:  return p.Err()",
          "718: }",
          "720: const opListSchemas = \"ListSchemas\"",
          "746: func (c *RedshiftDataAPIService) ListSchemasRequest(input *ListSchemasInput) (req *request.Request, output *ListSchemasOutput) {",
          "747:  op := &request.Operation{",
          "748:   Name:       opListSchemas,",
          "749:   HTTPMethod: \"POST\",",
          "750:   HTTPPath:   \"/\",",
          "751:   Paginator: &request.Paginator{",
          "752:    InputTokens:     []string{\"NextToken\"},",
          "753:    OutputTokens:    []string{\"NextToken\"},",
          "754:    LimitToken:      \"MaxResults\",",
          "755:    TruncationToken: \"\",",
          "756:   },",
          "757:  }",
          "759:  if input == nil {",
          "760:   input = &ListSchemasInput{}",
          "761:  }",
          "763:  output = &ListSchemasOutput{}",
          "764:  req = c.newRequest(op, input, output)",
          "765:  return",
          "766: }",
          "796: func (c *RedshiftDataAPIService) ListSchemas(input *ListSchemasInput) (*ListSchemasOutput, error) {",
          "797:  req, out := c.ListSchemasRequest(input)",
          "798:  return out, req.Send()",
          "799: }",
          "810: func (c *RedshiftDataAPIService) ListSchemasWithContext(ctx aws.Context, input *ListSchemasInput, opts ...request.Option) (*ListSchemasOutput, error) {",
          "811:  req, out := c.ListSchemasRequest(input)",
          "812:  req.SetContext(ctx)",
          "813:  req.ApplyOptions(opts...)",
          "814:  return out, req.Send()",
          "815: }",
          "834: func (c *RedshiftDataAPIService) ListSchemasPages(input *ListSchemasInput, fn func(*ListSchemasOutput, bool) bool) error {",
          "835:  return c.ListSchemasPagesWithContext(aws.BackgroundContext(), input, fn)",
          "836: }",
          "845: func (c *RedshiftDataAPIService) ListSchemasPagesWithContext(ctx aws.Context, input *ListSchemasInput, fn func(*ListSchemasOutput, bool) bool, opts ...request.Option) error {",
          "846:  p := request.Pagination{",
          "847:   NewRequest: func() (*request.Request, error) {",
          "848:    var inCpy *ListSchemasInput",
          "849:    if input != nil {",
          "850:     tmp := *input",
          "851:     inCpy = &tmp",
          "852:    }",
          "853:    req, _ := c.ListSchemasRequest(inCpy)",
          "854:    req.SetContext(ctx)",
          "855:    req.ApplyOptions(opts...)",
          "856:    return req, nil",
          "857:   },",
          "858:  }",
          "860:  for p.Next() {",
          "861:   if !fn(p.Page().(*ListSchemasOutput), !p.HasNextPage()) {",
          "862:    break",
          "863:   }",
          "864:  }",
          "866:  return p.Err()",
          "867: }",
          "869: const opListStatements = \"ListStatements\"",
          "895: func (c *RedshiftDataAPIService) ListStatementsRequest(input *ListStatementsInput) (req *request.Request, output *ListStatementsOutput) {",
          "896:  op := &request.Operation{",
          "897:   Name:       opListStatements,",
          "898:   HTTPMethod: \"POST\",",
          "899:   HTTPPath:   \"/\",",
          "900:   Paginator: &request.Paginator{",
          "901:    InputTokens:     []string{\"NextToken\"},",
          "902:    OutputTokens:    []string{\"NextToken\"},",
          "903:    LimitToken:      \"MaxResults\",",
          "904:    TruncationToken: \"\",",
          "905:   },",
          "906:  }",
          "908:  if input == nil {",
          "909:   input = &ListStatementsInput{}",
          "910:  }",
          "912:  output = &ListStatementsOutput{}",
          "913:  req = c.newRequest(op, input, output)",
          "914:  return",
          "915: }",
          "937: func (c *RedshiftDataAPIService) ListStatements(input *ListStatementsInput) (*ListStatementsOutput, error) {",
          "938:  req, out := c.ListStatementsRequest(input)",
          "939:  return out, req.Send()",
          "940: }",
          "951: func (c *RedshiftDataAPIService) ListStatementsWithContext(ctx aws.Context, input *ListStatementsInput, opts ...request.Option) (*ListStatementsOutput, error) {",
          "952:  req, out := c.ListStatementsRequest(input)",
          "953:  req.SetContext(ctx)",
          "954:  req.ApplyOptions(opts...)",
          "955:  return out, req.Send()",
          "956: }",
          "975: func (c *RedshiftDataAPIService) ListStatementsPages(input *ListStatementsInput, fn func(*ListStatementsOutput, bool) bool) error {",
          "976:  return c.ListStatementsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "977: }",
          "986: func (c *RedshiftDataAPIService) ListStatementsPagesWithContext(ctx aws.Context, input *ListStatementsInput, fn func(*ListStatementsOutput, bool) bool, opts ...request.Option) error {",
          "987:  p := request.Pagination{",
          "988:   NewRequest: func() (*request.Request, error) {",
          "989:    var inCpy *ListStatementsInput",
          "990:    if input != nil {",
          "991:     tmp := *input",
          "992:     inCpy = &tmp",
          "993:    }",
          "994:    req, _ := c.ListStatementsRequest(inCpy)",
          "995:    req.SetContext(ctx)",
          "996:    req.ApplyOptions(opts...)",
          "997:    return req, nil",
          "998:   },",
          "999:  }",
          "1001:  for p.Next() {",
          "1002:   if !fn(p.Page().(*ListStatementsOutput), !p.HasNextPage()) {",
          "1003:    break",
          "1004:   }",
          "1005:  }",
          "1007:  return p.Err()",
          "1008: }",
          "1010: const opListTables = \"ListTables\"",
          "1036: func (c *RedshiftDataAPIService) ListTablesRequest(input *ListTablesInput) (req *request.Request, output *ListTablesOutput) {",
          "1037:  op := &request.Operation{",
          "1038:   Name:       opListTables,",
          "1039:   HTTPMethod: \"POST\",",
          "1040:   HTTPPath:   \"/\",",
          "1041:   Paginator: &request.Paginator{",
          "1042:    InputTokens:     []string{\"NextToken\"},",
          "1043:    OutputTokens:    []string{\"NextToken\"},",
          "1044:    LimitToken:      \"MaxResults\",",
          "1045:    TruncationToken: \"\",",
          "1046:   },",
          "1047:  }",
          "1049:  if input == nil {",
          "1050:   input = &ListTablesInput{}",
          "1051:  }",
          "1053:  output = &ListTablesOutput{}",
          "1054:  req = c.newRequest(op, input, output)",
          "1055:  return",
          "1056: }",
          "1087: func (c *RedshiftDataAPIService) ListTables(input *ListTablesInput) (*ListTablesOutput, error) {",
          "1088:  req, out := c.ListTablesRequest(input)",
          "1089:  return out, req.Send()",
          "1090: }",
          "1101: func (c *RedshiftDataAPIService) ListTablesWithContext(ctx aws.Context, input *ListTablesInput, opts ...request.Option) (*ListTablesOutput, error) {",
          "1102:  req, out := c.ListTablesRequest(input)",
          "1103:  req.SetContext(ctx)",
          "1104:  req.ApplyOptions(opts...)",
          "1105:  return out, req.Send()",
          "1106: }",
          "1125: func (c *RedshiftDataAPIService) ListTablesPages(input *ListTablesInput, fn func(*ListTablesOutput, bool) bool) error {",
          "1126:  return c.ListTablesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1127: }",
          "1136: func (c *RedshiftDataAPIService) ListTablesPagesWithContext(ctx aws.Context, input *ListTablesInput, fn func(*ListTablesOutput, bool) bool, opts ...request.Option) error {",
          "1137:  p := request.Pagination{",
          "1138:   NewRequest: func() (*request.Request, error) {",
          "1139:    var inCpy *ListTablesInput",
          "1140:    if input != nil {",
          "1141:     tmp := *input",
          "1142:     inCpy = &tmp",
          "1143:    }",
          "1144:    req, _ := c.ListTablesRequest(inCpy)",
          "1145:    req.SetContext(ctx)",
          "1146:    req.ApplyOptions(opts...)",
          "1147:    return req, nil",
          "1148:   },",
          "1149:  }",
          "1151:  for p.Next() {",
          "1152:   if !fn(p.Page().(*ListTablesOutput), !p.HasNextPage()) {",
          "1153:    break",
          "1154:   }",
          "1155:  }",
          "1157:  return p.Err()",
          "1158: }",
          "1160: type CancelStatementInput struct {",
          "1161:  _ struct{} `type:\"structure\"`",
          "1168:  Id *string `type:\"string\" required:\"true\"`",
          "1169: }",
          "1172: func (s CancelStatementInput) String() string {",
          "1173:  return awsutil.Prettify(s)",
          "1174: }",
          "1177: func (s CancelStatementInput) GoString() string {",
          "1178:  return s.String()",
          "1179: }",
          "1182: func (s *CancelStatementInput) Validate() error {",
          "1183:  invalidParams := request.ErrInvalidParams{Context: \"CancelStatementInput\"}",
          "1184:  if s.Id == nil {",
          "1185:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "1186:  }",
          "1188:  if invalidParams.Len() > 0 {",
          "1189:   return invalidParams",
          "1190:  }",
          "1191:  return nil",
          "1192: }",
          "1195: func (s *CancelStatementInput) SetId(v string) *CancelStatementInput {",
          "1196:  s.Id = &v",
          "1197:  return s",
          "1198: }",
          "1200: type CancelStatementOutput struct {",
          "1201:  _ struct{} `type:\"structure\"`",
          "1204:  Status *bool `type:\"boolean\"`",
          "1205: }",
          "1208: func (s CancelStatementOutput) String() string {",
          "1209:  return awsutil.Prettify(s)",
          "1210: }",
          "1213: func (s CancelStatementOutput) GoString() string {",
          "1214:  return s.String()",
          "1215: }",
          "1218: func (s *CancelStatementOutput) SetStatus(v bool) *CancelStatementOutput {",
          "1219:  s.Status = &v",
          "1220:  return s",
          "1221: }",
          "1224: type ColumnMetadata struct {",
          "1225:  _ struct{} `type:\"structure\"`",
          "1228:  ColumnDefault *string `locationName:\"columnDefault\" type:\"string\"`",
          "1231:  IsCaseSensitive *bool `locationName:\"isCaseSensitive\" type:\"boolean\"`",
          "1234:  IsCurrency *bool `locationName:\"isCurrency\" type:\"boolean\"`",
          "1237:  IsSigned *bool `locationName:\"isSigned\" type:\"boolean\"`",
          "1240:  Label *string `locationName:\"label\" type:\"string\"`",
          "1243:  Length *int64 `locationName:\"length\" type:\"integer\"`",
          "1246:  Name *string `locationName:\"name\" type:\"string\"`",
          "1249:  Nullable *int64 `locationName:\"nullable\" type:\"integer\"`",
          "1252:  Precision *int64 `locationName:\"precision\" type:\"integer\"`",
          "1255:  Scale *int64 `locationName:\"scale\" type:\"integer\"`",
          "1258:  SchemaName *string `locationName:\"schemaName\" type:\"string\"`",
          "1261:  TableName *string `locationName:\"tableName\" type:\"string\"`",
          "1264:  TypeName *string `locationName:\"typeName\" type:\"string\"`",
          "1265: }",
          "1268: func (s ColumnMetadata) String() string {",
          "1269:  return awsutil.Prettify(s)",
          "1270: }",
          "1273: func (s ColumnMetadata) GoString() string {",
          "1274:  return s.String()",
          "1275: }",
          "1278: func (s *ColumnMetadata) SetColumnDefault(v string) *ColumnMetadata {",
          "1279:  s.ColumnDefault = &v",
          "1280:  return s",
          "1281: }",
          "1284: func (s *ColumnMetadata) SetIsCaseSensitive(v bool) *ColumnMetadata {",
          "1285:  s.IsCaseSensitive = &v",
          "1286:  return s",
          "1287: }",
          "1290: func (s *ColumnMetadata) SetIsCurrency(v bool) *ColumnMetadata {",
          "1291:  s.IsCurrency = &v",
          "1292:  return s",
          "1293: }",
          "1296: func (s *ColumnMetadata) SetIsSigned(v bool) *ColumnMetadata {",
          "1297:  s.IsSigned = &v",
          "1298:  return s",
          "1299: }",
          "1302: func (s *ColumnMetadata) SetLabel(v string) *ColumnMetadata {",
          "1303:  s.Label = &v",
          "1304:  return s",
          "1305: }",
          "1308: func (s *ColumnMetadata) SetLength(v int64) *ColumnMetadata {",
          "1309:  s.Length = &v",
          "1310:  return s",
          "1311: }",
          "1314: func (s *ColumnMetadata) SetName(v string) *ColumnMetadata {",
          "1315:  s.Name = &v",
          "1316:  return s",
          "1317: }",
          "1320: func (s *ColumnMetadata) SetNullable(v int64) *ColumnMetadata {",
          "1321:  s.Nullable = &v",
          "1322:  return s",
          "1323: }",
          "1326: func (s *ColumnMetadata) SetPrecision(v int64) *ColumnMetadata {",
          "1327:  s.Precision = &v",
          "1328:  return s",
          "1329: }",
          "1332: func (s *ColumnMetadata) SetScale(v int64) *ColumnMetadata {",
          "1333:  s.Scale = &v",
          "1334:  return s",
          "1335: }",
          "1338: func (s *ColumnMetadata) SetSchemaName(v string) *ColumnMetadata {",
          "1339:  s.SchemaName = &v",
          "1340:  return s",
          "1341: }",
          "1344: func (s *ColumnMetadata) SetTableName(v string) *ColumnMetadata {",
          "1345:  s.TableName = &v",
          "1346:  return s",
          "1347: }",
          "1350: func (s *ColumnMetadata) SetTypeName(v string) *ColumnMetadata {",
          "1351:  s.TypeName = &v",
          "1352:  return s",
          "1353: }",
          "1355: type DescribeStatementInput struct {",
          "1356:  _ struct{} `type:\"structure\"`",
          "1363:  Id *string `type:\"string\" required:\"true\"`",
          "1364: }",
          "1367: func (s DescribeStatementInput) String() string {",
          "1368:  return awsutil.Prettify(s)",
          "1369: }",
          "1372: func (s DescribeStatementInput) GoString() string {",
          "1373:  return s.String()",
          "1374: }",
          "1377: func (s *DescribeStatementInput) Validate() error {",
          "1378:  invalidParams := request.ErrInvalidParams{Context: \"DescribeStatementInput\"}",
          "1379:  if s.Id == nil {",
          "1380:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "1381:  }",
          "1383:  if invalidParams.Len() > 0 {",
          "1384:   return invalidParams",
          "1385:  }",
          "1386:  return nil",
          "1387: }",
          "1390: func (s *DescribeStatementInput) SetId(v string) *DescribeStatementInput {",
          "1391:  s.Id = &v",
          "1392:  return s",
          "1393: }",
          "1395: type DescribeStatementOutput struct {",
          "1396:  _ struct{} `type:\"structure\"`",
          "1399:  ClusterIdentifier *string `type:\"string\"`",
          "1402:  CreatedAt *time.Time `type:\"timestamp\"`",
          "1405:  Database *string `type:\"string\"`",
          "1408:  DbUser *string `type:\"string\"`",
          "1411:  Duration *int64 `type:\"long\"`",
          "1415:  Error *string `type:\"string\"`",
          "1421:  Id *string `type:\"string\" required:\"true\"`",
          "1424:  QueryString *string `type:\"string\"`",
          "1427:  RedshiftPid *int64 `type:\"long\"`",
          "1431:  RedshiftQueryId *int64 `type:\"long\"`",
          "1437:  ResultRows *int64 `type:\"long\"`",
          "1440:  ResultSize *int64 `type:\"long\"`",
          "1444:  SecretArn *string `type:\"string\"`",
          "1463:  Status *string `type:\"string\" enum:\"StatusString\"`",
          "1467:  UpdatedAt *time.Time `type:\"timestamp\"`",
          "1468: }",
          "1471: func (s DescribeStatementOutput) String() string {",
          "1472:  return awsutil.Prettify(s)",
          "1473: }",
          "1476: func (s DescribeStatementOutput) GoString() string {",
          "1477:  return s.String()",
          "1478: }",
          "1481: func (s *DescribeStatementOutput) SetClusterIdentifier(v string) *DescribeStatementOutput {",
          "1482:  s.ClusterIdentifier = &v",
          "1483:  return s",
          "1484: }",
          "1487: func (s *DescribeStatementOutput) SetCreatedAt(v time.Time) *DescribeStatementOutput {",
          "1488:  s.CreatedAt = &v",
          "1489:  return s",
          "1490: }",
          "1493: func (s *DescribeStatementOutput) SetDatabase(v string) *DescribeStatementOutput {",
          "1494:  s.Database = &v",
          "1495:  return s",
          "1496: }",
          "1499: func (s *DescribeStatementOutput) SetDbUser(v string) *DescribeStatementOutput {",
          "1500:  s.DbUser = &v",
          "1501:  return s",
          "1502: }",
          "1505: func (s *DescribeStatementOutput) SetDuration(v int64) *DescribeStatementOutput {",
          "1506:  s.Duration = &v",
          "1507:  return s",
          "1508: }",
          "1511: func (s *DescribeStatementOutput) SetError(v string) *DescribeStatementOutput {",
          "1512:  s.Error = &v",
          "1513:  return s",
          "1514: }",
          "1517: func (s *DescribeStatementOutput) SetId(v string) *DescribeStatementOutput {",
          "1518:  s.Id = &v",
          "1519:  return s",
          "1520: }",
          "1523: func (s *DescribeStatementOutput) SetQueryString(v string) *DescribeStatementOutput {",
          "1524:  s.QueryString = &v",
          "1525:  return s",
          "1526: }",
          "1529: func (s *DescribeStatementOutput) SetRedshiftPid(v int64) *DescribeStatementOutput {",
          "1530:  s.RedshiftPid = &v",
          "1531:  return s",
          "1532: }",
          "1535: func (s *DescribeStatementOutput) SetRedshiftQueryId(v int64) *DescribeStatementOutput {",
          "1536:  s.RedshiftQueryId = &v",
          "1537:  return s",
          "1538: }",
          "1541: func (s *DescribeStatementOutput) SetResultRows(v int64) *DescribeStatementOutput {",
          "1542:  s.ResultRows = &v",
          "1543:  return s",
          "1544: }",
          "1547: func (s *DescribeStatementOutput) SetResultSize(v int64) *DescribeStatementOutput {",
          "1548:  s.ResultSize = &v",
          "1549:  return s",
          "1550: }",
          "1553: func (s *DescribeStatementOutput) SetSecretArn(v string) *DescribeStatementOutput {",
          "1554:  s.SecretArn = &v",
          "1555:  return s",
          "1556: }",
          "1559: func (s *DescribeStatementOutput) SetStatus(v string) *DescribeStatementOutput {",
          "1560:  s.Status = &v",
          "1561:  return s",
          "1562: }",
          "1565: func (s *DescribeStatementOutput) SetUpdatedAt(v time.Time) *DescribeStatementOutput {",
          "1566:  s.UpdatedAt = &v",
          "1567:  return s",
          "1568: }",
          "1570: type DescribeTableInput struct {",
          "1571:  _ struct{} `type:\"structure\"`",
          "1577:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "1581:  Database *string `type:\"string\"`",
          "1585:  DbUser *string `type:\"string\"`",
          "1590:  MaxResults *int64 `type:\"integer\"`",
          "1597:  NextToken *string `type:\"string\"`",
          "1601:  Schema *string `type:\"string\"`",
          "1605:  SecretArn *string `type:\"string\"`",
          "1610:  Table *string `type:\"string\"`",
          "1611: }",
          "1614: func (s DescribeTableInput) String() string {",
          "1615:  return awsutil.Prettify(s)",
          "1616: }",
          "1619: func (s DescribeTableInput) GoString() string {",
          "1620:  return s.String()",
          "1621: }",
          "1624: func (s *DescribeTableInput) Validate() error {",
          "1625:  invalidParams := request.ErrInvalidParams{Context: \"DescribeTableInput\"}",
          "1626:  if s.ClusterIdentifier == nil {",
          "1627:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "1628:  }",
          "1630:  if invalidParams.Len() > 0 {",
          "1631:   return invalidParams",
          "1632:  }",
          "1633:  return nil",
          "1634: }",
          "1637: func (s *DescribeTableInput) SetClusterIdentifier(v string) *DescribeTableInput {",
          "1638:  s.ClusterIdentifier = &v",
          "1639:  return s",
          "1640: }",
          "1643: func (s *DescribeTableInput) SetDatabase(v string) *DescribeTableInput {",
          "1644:  s.Database = &v",
          "1645:  return s",
          "1646: }",
          "1649: func (s *DescribeTableInput) SetDbUser(v string) *DescribeTableInput {",
          "1650:  s.DbUser = &v",
          "1651:  return s",
          "1652: }",
          "1655: func (s *DescribeTableInput) SetMaxResults(v int64) *DescribeTableInput {",
          "1656:  s.MaxResults = &v",
          "1657:  return s",
          "1658: }",
          "1661: func (s *DescribeTableInput) SetNextToken(v string) *DescribeTableInput {",
          "1662:  s.NextToken = &v",
          "1663:  return s",
          "1664: }",
          "1667: func (s *DescribeTableInput) SetSchema(v string) *DescribeTableInput {",
          "1668:  s.Schema = &v",
          "1669:  return s",
          "1670: }",
          "1673: func (s *DescribeTableInput) SetSecretArn(v string) *DescribeTableInput {",
          "1674:  s.SecretArn = &v",
          "1675:  return s",
          "1676: }",
          "1679: func (s *DescribeTableInput) SetTable(v string) *DescribeTableInput {",
          "1680:  s.Table = &v",
          "1681:  return s",
          "1682: }",
          "1684: type DescribeTableOutput struct {",
          "1685:  _ struct{} `type:\"structure\"`",
          "1688:  ColumnList []*ColumnMetadata `type:\"list\"`",
          "1695:  NextToken *string `type:\"string\"`",
          "1698:  TableName *string `type:\"string\"`",
          "1699: }",
          "1702: func (s DescribeTableOutput) String() string {",
          "1703:  return awsutil.Prettify(s)",
          "1704: }",
          "1707: func (s DescribeTableOutput) GoString() string {",
          "1708:  return s.String()",
          "1709: }",
          "1712: func (s *DescribeTableOutput) SetColumnList(v []*ColumnMetadata) *DescribeTableOutput {",
          "1713:  s.ColumnList = v",
          "1714:  return s",
          "1715: }",
          "1718: func (s *DescribeTableOutput) SetNextToken(v string) *DescribeTableOutput {",
          "1719:  s.NextToken = &v",
          "1720:  return s",
          "1721: }",
          "1724: func (s *DescribeTableOutput) SetTableName(v string) *DescribeTableOutput {",
          "1725:  s.TableName = &v",
          "1726:  return s",
          "1727: }",
          "1730: type ExecuteStatementException struct {",
          "1731:  _            struct{}                  `type:\"structure\"`",
          "1732:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "1735:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "1740:  StatementId *string `type:\"string\" required:\"true\"`",
          "1741: }",
          "1744: func (s ExecuteStatementException) String() string {",
          "1745:  return awsutil.Prettify(s)",
          "1746: }",
          "1749: func (s ExecuteStatementException) GoString() string {",
          "1750:  return s.String()",
          "1751: }",
          "1753: func newErrorExecuteStatementException(v protocol.ResponseMetadata) error {",
          "1754:  return &ExecuteStatementException{",
          "1755:   RespMetadata: v,",
          "1756:  }",
          "1757: }",
          "1760: func (s *ExecuteStatementException) Code() string {",
          "1761:  return \"ExecuteStatementException\"",
          "1762: }",
          "1765: func (s *ExecuteStatementException) Message() string {",
          "1766:  if s.Message_ != nil {",
          "1767:   return *s.Message_",
          "1768:  }",
          "1769:  return \"\"",
          "1770: }",
          "1773: func (s *ExecuteStatementException) OrigErr() error {",
          "1774:  return nil",
          "1775: }",
          "1777: func (s *ExecuteStatementException) Error() string {",
          "1778:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "1779: }",
          "1782: func (s *ExecuteStatementException) StatusCode() int {",
          "1783:  return s.RespMetadata.StatusCode",
          "1784: }",
          "1787: func (s *ExecuteStatementException) RequestID() string {",
          "1788:  return s.RespMetadata.RequestID",
          "1789: }",
          "1791: type ExecuteStatementInput struct {",
          "1792:  _ struct{} `type:\"structure\"`",
          "1798:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "1802:  Database *string `type:\"string\"`",
          "1806:  DbUser *string `type:\"string\"`",
          "1810:  SecretArn *string `type:\"string\"`",
          "1815:  Sql *string `type:\"string\" required:\"true\"`",
          "1819:  StatementName *string `type:\"string\"`",
          "1823:  WithEvent *bool `type:\"boolean\"`",
          "1824: }",
          "1827: func (s ExecuteStatementInput) String() string {",
          "1828:  return awsutil.Prettify(s)",
          "1829: }",
          "1832: func (s ExecuteStatementInput) GoString() string {",
          "1833:  return s.String()",
          "1834: }",
          "1837: func (s *ExecuteStatementInput) Validate() error {",
          "1838:  invalidParams := request.ErrInvalidParams{Context: \"ExecuteStatementInput\"}",
          "1839:  if s.ClusterIdentifier == nil {",
          "1840:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "1841:  }",
          "1842:  if s.Sql == nil {",
          "1843:   invalidParams.Add(request.NewErrParamRequired(\"Sql\"))",
          "1844:  }",
          "1846:  if invalidParams.Len() > 0 {",
          "1847:   return invalidParams",
          "1848:  }",
          "1849:  return nil",
          "1850: }",
          "1853: func (s *ExecuteStatementInput) SetClusterIdentifier(v string) *ExecuteStatementInput {",
          "1854:  s.ClusterIdentifier = &v",
          "1855:  return s",
          "1856: }",
          "1859: func (s *ExecuteStatementInput) SetDatabase(v string) *ExecuteStatementInput {",
          "1860:  s.Database = &v",
          "1861:  return s",
          "1862: }",
          "1865: func (s *ExecuteStatementInput) SetDbUser(v string) *ExecuteStatementInput {",
          "1866:  s.DbUser = &v",
          "1867:  return s",
          "1868: }",
          "1871: func (s *ExecuteStatementInput) SetSecretArn(v string) *ExecuteStatementInput {",
          "1872:  s.SecretArn = &v",
          "1873:  return s",
          "1874: }",
          "1877: func (s *ExecuteStatementInput) SetSql(v string) *ExecuteStatementInput {",
          "1878:  s.Sql = &v",
          "1879:  return s",
          "1880: }",
          "1883: func (s *ExecuteStatementInput) SetStatementName(v string) *ExecuteStatementInput {",
          "1884:  s.StatementName = &v",
          "1885:  return s",
          "1886: }",
          "1889: func (s *ExecuteStatementInput) SetWithEvent(v bool) *ExecuteStatementInput {",
          "1890:  s.WithEvent = &v",
          "1891:  return s",
          "1892: }",
          "1894: type ExecuteStatementOutput struct {",
          "1895:  _ struct{} `type:\"structure\"`",
          "1898:  ClusterIdentifier *string `type:\"string\"`",
          "1901:  CreatedAt *time.Time `type:\"timestamp\"`",
          "1904:  Database *string `type:\"string\"`",
          "1907:  DbUser *string `type:\"string\"`",
          "1911:  Id *string `type:\"string\"`",
          "1914:  SecretArn *string `type:\"string\"`",
          "1915: }",
          "1918: func (s ExecuteStatementOutput) String() string {",
          "1919:  return awsutil.Prettify(s)",
          "1920: }",
          "1923: func (s ExecuteStatementOutput) GoString() string {",
          "1924:  return s.String()",
          "1925: }",
          "1928: func (s *ExecuteStatementOutput) SetClusterIdentifier(v string) *ExecuteStatementOutput {",
          "1929:  s.ClusterIdentifier = &v",
          "1930:  return s",
          "1931: }",
          "1934: func (s *ExecuteStatementOutput) SetCreatedAt(v time.Time) *ExecuteStatementOutput {",
          "1935:  s.CreatedAt = &v",
          "1936:  return s",
          "1937: }",
          "1940: func (s *ExecuteStatementOutput) SetDatabase(v string) *ExecuteStatementOutput {",
          "1941:  s.Database = &v",
          "1942:  return s",
          "1943: }",
          "1946: func (s *ExecuteStatementOutput) SetDbUser(v string) *ExecuteStatementOutput {",
          "1947:  s.DbUser = &v",
          "1948:  return s",
          "1949: }",
          "1952: func (s *ExecuteStatementOutput) SetId(v string) *ExecuteStatementOutput {",
          "1953:  s.Id = &v",
          "1954:  return s",
          "1955: }",
          "1958: func (s *ExecuteStatementOutput) SetSecretArn(v string) *ExecuteStatementOutput {",
          "1959:  s.SecretArn = &v",
          "1960:  return s",
          "1961: }",
          "1964: type Field struct {",
          "1965:  _ struct{} `type:\"structure\"`",
          "1970:  BlobValue []byte `locationName:\"blobValue\" type:\"blob\"`",
          "1973:  BooleanValue *bool `locationName:\"booleanValue\" type:\"boolean\"`",
          "1976:  DoubleValue *float64 `locationName:\"doubleValue\" type:\"double\"`",
          "1979:  IsNull *bool `locationName:\"isNull\" type:\"boolean\"`",
          "1982:  LongValue *int64 `locationName:\"longValue\" type:\"long\"`",
          "1985:  StringValue *string `locationName:\"stringValue\" type:\"string\"`",
          "1986: }",
          "1989: func (s Field) String() string {",
          "1990:  return awsutil.Prettify(s)",
          "1991: }",
          "1994: func (s Field) GoString() string {",
          "1995:  return s.String()",
          "1996: }",
          "1999: func (s *Field) SetBlobValue(v []byte) *Field {",
          "2000:  s.BlobValue = v",
          "2001:  return s",
          "2002: }",
          "2005: func (s *Field) SetBooleanValue(v bool) *Field {",
          "2006:  s.BooleanValue = &v",
          "2007:  return s",
          "2008: }",
          "2011: func (s *Field) SetDoubleValue(v float64) *Field {",
          "2012:  s.DoubleValue = &v",
          "2013:  return s",
          "2014: }",
          "2017: func (s *Field) SetIsNull(v bool) *Field {",
          "2018:  s.IsNull = &v",
          "2019:  return s",
          "2020: }",
          "2023: func (s *Field) SetLongValue(v int64) *Field {",
          "2024:  s.LongValue = &v",
          "2025:  return s",
          "2026: }",
          "2029: func (s *Field) SetStringValue(v string) *Field {",
          "2030:  s.StringValue = &v",
          "2031:  return s",
          "2032: }",
          "2034: type GetStatementResultInput struct {",
          "2035:  _ struct{} `type:\"structure\"`",
          "2042:  Id *string `type:\"string\" required:\"true\"`",
          "2049:  NextToken *string `type:\"string\"`",
          "2050: }",
          "2053: func (s GetStatementResultInput) String() string {",
          "2054:  return awsutil.Prettify(s)",
          "2055: }",
          "2058: func (s GetStatementResultInput) GoString() string {",
          "2059:  return s.String()",
          "2060: }",
          "2063: func (s *GetStatementResultInput) Validate() error {",
          "2064:  invalidParams := request.ErrInvalidParams{Context: \"GetStatementResultInput\"}",
          "2065:  if s.Id == nil {",
          "2066:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "2067:  }",
          "2069:  if invalidParams.Len() > 0 {",
          "2070:   return invalidParams",
          "2071:  }",
          "2072:  return nil",
          "2073: }",
          "2076: func (s *GetStatementResultInput) SetId(v string) *GetStatementResultInput {",
          "2077:  s.Id = &v",
          "2078:  return s",
          "2079: }",
          "2082: func (s *GetStatementResultInput) SetNextToken(v string) *GetStatementResultInput {",
          "2083:  s.NextToken = &v",
          "2084:  return s",
          "2085: }",
          "2087: type GetStatementResultOutput struct {",
          "2088:  _ struct{} `type:\"structure\"`",
          "2091:  ColumnMetadata []*ColumnMetadata `type:\"list\"`",
          "2098:  NextToken *string `type:\"string\"`",
          "2103:  Records [][]*Field `type:\"list\" required:\"true\"`",
          "2108:  TotalNumRows *int64 `type:\"long\"`",
          "2109: }",
          "2112: func (s GetStatementResultOutput) String() string {",
          "2113:  return awsutil.Prettify(s)",
          "2114: }",
          "2117: func (s GetStatementResultOutput) GoString() string {",
          "2118:  return s.String()",
          "2119: }",
          "2122: func (s *GetStatementResultOutput) SetColumnMetadata(v []*ColumnMetadata) *GetStatementResultOutput {",
          "2123:  s.ColumnMetadata = v",
          "2124:  return s",
          "2125: }",
          "2128: func (s *GetStatementResultOutput) SetNextToken(v string) *GetStatementResultOutput {",
          "2129:  s.NextToken = &v",
          "2130:  return s",
          "2131: }",
          "2134: func (s *GetStatementResultOutput) SetRecords(v [][]*Field) *GetStatementResultOutput {",
          "2135:  s.Records = v",
          "2136:  return s",
          "2137: }",
          "2140: func (s *GetStatementResultOutput) SetTotalNumRows(v int64) *GetStatementResultOutput {",
          "2141:  s.TotalNumRows = &v",
          "2142:  return s",
          "2143: }",
          "2146: type InternalServerException struct {",
          "2147:  _            struct{}                  `type:\"structure\"`",
          "2148:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2151:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2152: }",
          "2155: func (s InternalServerException) String() string {",
          "2156:  return awsutil.Prettify(s)",
          "2157: }",
          "2160: func (s InternalServerException) GoString() string {",
          "2161:  return s.String()",
          "2162: }",
          "2164: func newErrorInternalServerException(v protocol.ResponseMetadata) error {",
          "2165:  return &InternalServerException{",
          "2166:   RespMetadata: v,",
          "2167:  }",
          "2168: }",
          "2171: func (s *InternalServerException) Code() string {",
          "2172:  return \"InternalServerException\"",
          "2173: }",
          "2176: func (s *InternalServerException) Message() string {",
          "2177:  if s.Message_ != nil {",
          "2178:   return *s.Message_",
          "2179:  }",
          "2180:  return \"\"",
          "2181: }",
          "2184: func (s *InternalServerException) OrigErr() error {",
          "2185:  return nil",
          "2186: }",
          "2188: func (s *InternalServerException) Error() string {",
          "2189:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2190: }",
          "2193: func (s *InternalServerException) StatusCode() int {",
          "2194:  return s.RespMetadata.StatusCode",
          "2195: }",
          "2198: func (s *InternalServerException) RequestID() string {",
          "2199:  return s.RespMetadata.RequestID",
          "2200: }",
          "2202: type ListDatabasesInput struct {",
          "2203:  _ struct{} `type:\"structure\"`",
          "2209:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "2213:  Database *string `type:\"string\"`",
          "2217:  DbUser *string `type:\"string\"`",
          "2222:  MaxResults *int64 `type:\"integer\"`",
          "2229:  NextToken *string `type:\"string\"`",
          "2233:  SecretArn *string `type:\"string\"`",
          "2234: }",
          "2237: func (s ListDatabasesInput) String() string {",
          "2238:  return awsutil.Prettify(s)",
          "2239: }",
          "2242: func (s ListDatabasesInput) GoString() string {",
          "2243:  return s.String()",
          "2244: }",
          "2247: func (s *ListDatabasesInput) Validate() error {",
          "2248:  invalidParams := request.ErrInvalidParams{Context: \"ListDatabasesInput\"}",
          "2249:  if s.ClusterIdentifier == nil {",
          "2250:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "2251:  }",
          "2253:  if invalidParams.Len() > 0 {",
          "2254:   return invalidParams",
          "2255:  }",
          "2256:  return nil",
          "2257: }",
          "2260: func (s *ListDatabasesInput) SetClusterIdentifier(v string) *ListDatabasesInput {",
          "2261:  s.ClusterIdentifier = &v",
          "2262:  return s",
          "2263: }",
          "2266: func (s *ListDatabasesInput) SetDatabase(v string) *ListDatabasesInput {",
          "2267:  s.Database = &v",
          "2268:  return s",
          "2269: }",
          "2272: func (s *ListDatabasesInput) SetDbUser(v string) *ListDatabasesInput {",
          "2273:  s.DbUser = &v",
          "2274:  return s",
          "2275: }",
          "2278: func (s *ListDatabasesInput) SetMaxResults(v int64) *ListDatabasesInput {",
          "2279:  s.MaxResults = &v",
          "2280:  return s",
          "2281: }",
          "2284: func (s *ListDatabasesInput) SetNextToken(v string) *ListDatabasesInput {",
          "2285:  s.NextToken = &v",
          "2286:  return s",
          "2287: }",
          "2290: func (s *ListDatabasesInput) SetSecretArn(v string) *ListDatabasesInput {",
          "2291:  s.SecretArn = &v",
          "2292:  return s",
          "2293: }",
          "2295: type ListDatabasesOutput struct {",
          "2296:  _ struct{} `type:\"structure\"`",
          "2299:  Databases []*string `type:\"list\"`",
          "2306:  NextToken *string `type:\"string\"`",
          "2307: }",
          "2310: func (s ListDatabasesOutput) String() string {",
          "2311:  return awsutil.Prettify(s)",
          "2312: }",
          "2315: func (s ListDatabasesOutput) GoString() string {",
          "2316:  return s.String()",
          "2317: }",
          "2320: func (s *ListDatabasesOutput) SetDatabases(v []*string) *ListDatabasesOutput {",
          "2321:  s.Databases = v",
          "2322:  return s",
          "2323: }",
          "2326: func (s *ListDatabasesOutput) SetNextToken(v string) *ListDatabasesOutput {",
          "2327:  s.NextToken = &v",
          "2328:  return s",
          "2329: }",
          "2331: type ListSchemasInput struct {",
          "2332:  _ struct{} `type:\"structure\"`",
          "2338:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "2344:  Database *string `type:\"string\" required:\"true\"`",
          "2348:  DbUser *string `type:\"string\"`",
          "2353:  MaxResults *int64 `type:\"integer\"`",
          "2360:  NextToken *string `type:\"string\"`",
          "2365:  SchemaPattern *string `type:\"string\"`",
          "2369:  SecretArn *string `type:\"string\"`",
          "2370: }",
          "2373: func (s ListSchemasInput) String() string {",
          "2374:  return awsutil.Prettify(s)",
          "2375: }",
          "2378: func (s ListSchemasInput) GoString() string {",
          "2379:  return s.String()",
          "2380: }",
          "2383: func (s *ListSchemasInput) Validate() error {",
          "2384:  invalidParams := request.ErrInvalidParams{Context: \"ListSchemasInput\"}",
          "2385:  if s.ClusterIdentifier == nil {",
          "2386:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "2387:  }",
          "2388:  if s.Database == nil {",
          "2389:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "2390:  }",
          "2392:  if invalidParams.Len() > 0 {",
          "2393:   return invalidParams",
          "2394:  }",
          "2395:  return nil",
          "2396: }",
          "2399: func (s *ListSchemasInput) SetClusterIdentifier(v string) *ListSchemasInput {",
          "2400:  s.ClusterIdentifier = &v",
          "2401:  return s",
          "2402: }",
          "2405: func (s *ListSchemasInput) SetDatabase(v string) *ListSchemasInput {",
          "2406:  s.Database = &v",
          "2407:  return s",
          "2408: }",
          "2411: func (s *ListSchemasInput) SetDbUser(v string) *ListSchemasInput {",
          "2412:  s.DbUser = &v",
          "2413:  return s",
          "2414: }",
          "2417: func (s *ListSchemasInput) SetMaxResults(v int64) *ListSchemasInput {",
          "2418:  s.MaxResults = &v",
          "2419:  return s",
          "2420: }",
          "2423: func (s *ListSchemasInput) SetNextToken(v string) *ListSchemasInput {",
          "2424:  s.NextToken = &v",
          "2425:  return s",
          "2426: }",
          "2429: func (s *ListSchemasInput) SetSchemaPattern(v string) *ListSchemasInput {",
          "2430:  s.SchemaPattern = &v",
          "2431:  return s",
          "2432: }",
          "2435: func (s *ListSchemasInput) SetSecretArn(v string) *ListSchemasInput {",
          "2436:  s.SecretArn = &v",
          "2437:  return s",
          "2438: }",
          "2440: type ListSchemasOutput struct {",
          "2441:  _ struct{} `type:\"structure\"`",
          "2448:  NextToken *string `type:\"string\"`",
          "2451:  Schemas []*string `type:\"list\"`",
          "2452: }",
          "2455: func (s ListSchemasOutput) String() string {",
          "2456:  return awsutil.Prettify(s)",
          "2457: }",
          "2460: func (s ListSchemasOutput) GoString() string {",
          "2461:  return s.String()",
          "2462: }",
          "2465: func (s *ListSchemasOutput) SetNextToken(v string) *ListSchemasOutput {",
          "2466:  s.NextToken = &v",
          "2467:  return s",
          "2468: }",
          "2471: func (s *ListSchemasOutput) SetSchemas(v []*string) *ListSchemasOutput {",
          "2472:  s.Schemas = v",
          "2473:  return s",
          "2474: }",
          "2476: type ListStatementsInput struct {",
          "2477:  _ struct{} `type:\"structure\"`",
          "2482:  MaxResults *int64 `type:\"integer\"`",
          "2489:  NextToken *string `type:\"string\"`",
          "2497:  StatementName *string `type:\"string\"`",
          "2515:  Status *string `type:\"string\" enum:\"StatusString\"`",
          "2516: }",
          "2519: func (s ListStatementsInput) String() string {",
          "2520:  return awsutil.Prettify(s)",
          "2521: }",
          "2524: func (s ListStatementsInput) GoString() string {",
          "2525:  return s.String()",
          "2526: }",
          "2529: func (s *ListStatementsInput) SetMaxResults(v int64) *ListStatementsInput {",
          "2530:  s.MaxResults = &v",
          "2531:  return s",
          "2532: }",
          "2535: func (s *ListStatementsInput) SetNextToken(v string) *ListStatementsInput {",
          "2536:  s.NextToken = &v",
          "2537:  return s",
          "2538: }",
          "2541: func (s *ListStatementsInput) SetStatementName(v string) *ListStatementsInput {",
          "2542:  s.StatementName = &v",
          "2543:  return s",
          "2544: }",
          "2547: func (s *ListStatementsInput) SetStatus(v string) *ListStatementsInput {",
          "2548:  s.Status = &v",
          "2549:  return s",
          "2550: }",
          "2552: type ListStatementsOutput struct {",
          "2553:  _ struct{} `type:\"structure\"`",
          "2560:  NextToken *string `type:\"string\"`",
          "2565:  Statements []*StatementData `type:\"list\" required:\"true\"`",
          "2566: }",
          "2569: func (s ListStatementsOutput) String() string {",
          "2570:  return awsutil.Prettify(s)",
          "2571: }",
          "2574: func (s ListStatementsOutput) GoString() string {",
          "2575:  return s.String()",
          "2576: }",
          "2579: func (s *ListStatementsOutput) SetNextToken(v string) *ListStatementsOutput {",
          "2580:  s.NextToken = &v",
          "2581:  return s",
          "2582: }",
          "2585: func (s *ListStatementsOutput) SetStatements(v []*StatementData) *ListStatementsOutput {",
          "2586:  s.Statements = v",
          "2587:  return s",
          "2588: }",
          "2590: type ListTablesInput struct {",
          "2591:  _ struct{} `type:\"structure\"`",
          "2597:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "2603:  Database *string `type:\"string\" required:\"true\"`",
          "2607:  DbUser *string `type:\"string\"`",
          "2612:  MaxResults *int64 `type:\"integer\"`",
          "2619:  NextToken *string `type:\"string\"`",
          "2627:  SchemaPattern *string `type:\"string\"`",
          "2631:  SecretArn *string `type:\"string\"`",
          "2639:  TablePattern *string `type:\"string\"`",
          "2640: }",
          "2643: func (s ListTablesInput) String() string {",
          "2644:  return awsutil.Prettify(s)",
          "2645: }",
          "2648: func (s ListTablesInput) GoString() string {",
          "2649:  return s.String()",
          "2650: }",
          "2653: func (s *ListTablesInput) Validate() error {",
          "2654:  invalidParams := request.ErrInvalidParams{Context: \"ListTablesInput\"}",
          "2655:  if s.ClusterIdentifier == nil {",
          "2656:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "2657:  }",
          "2658:  if s.Database == nil {",
          "2659:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "2660:  }",
          "2662:  if invalidParams.Len() > 0 {",
          "2663:   return invalidParams",
          "2664:  }",
          "2665:  return nil",
          "2666: }",
          "2669: func (s *ListTablesInput) SetClusterIdentifier(v string) *ListTablesInput {",
          "2670:  s.ClusterIdentifier = &v",
          "2671:  return s",
          "2672: }",
          "2675: func (s *ListTablesInput) SetDatabase(v string) *ListTablesInput {",
          "2676:  s.Database = &v",
          "2677:  return s",
          "2678: }",
          "2681: func (s *ListTablesInput) SetDbUser(v string) *ListTablesInput {",
          "2682:  s.DbUser = &v",
          "2683:  return s",
          "2684: }",
          "2687: func (s *ListTablesInput) SetMaxResults(v int64) *ListTablesInput {",
          "2688:  s.MaxResults = &v",
          "2689:  return s",
          "2690: }",
          "2693: func (s *ListTablesInput) SetNextToken(v string) *ListTablesInput {",
          "2694:  s.NextToken = &v",
          "2695:  return s",
          "2696: }",
          "2699: func (s *ListTablesInput) SetSchemaPattern(v string) *ListTablesInput {",
          "2700:  s.SchemaPattern = &v",
          "2701:  return s",
          "2702: }",
          "2705: func (s *ListTablesInput) SetSecretArn(v string) *ListTablesInput {",
          "2706:  s.SecretArn = &v",
          "2707:  return s",
          "2708: }",
          "2711: func (s *ListTablesInput) SetTablePattern(v string) *ListTablesInput {",
          "2712:  s.TablePattern = &v",
          "2713:  return s",
          "2714: }",
          "2716: type ListTablesOutput struct {",
          "2717:  _ struct{} `type:\"structure\"`",
          "2724:  NextToken *string `type:\"string\"`",
          "2727:  Tables []*TableMember `type:\"list\"`",
          "2728: }",
          "2731: func (s ListTablesOutput) String() string {",
          "2732:  return awsutil.Prettify(s)",
          "2733: }",
          "2736: func (s ListTablesOutput) GoString() string {",
          "2737:  return s.String()",
          "2738: }",
          "2741: func (s *ListTablesOutput) SetNextToken(v string) *ListTablesOutput {",
          "2742:  s.NextToken = &v",
          "2743:  return s",
          "2744: }",
          "2747: func (s *ListTablesOutput) SetTables(v []*TableMember) *ListTablesOutput {",
          "2748:  s.Tables = v",
          "2749:  return s",
          "2750: }",
          "2753: type ResourceNotFoundException struct {",
          "2754:  _            struct{}                  `type:\"structure\"`",
          "2755:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2758:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2763:  ResourceId *string `type:\"string\" required:\"true\"`",
          "2764: }",
          "2767: func (s ResourceNotFoundException) String() string {",
          "2768:  return awsutil.Prettify(s)",
          "2769: }",
          "2772: func (s ResourceNotFoundException) GoString() string {",
          "2773:  return s.String()",
          "2774: }",
          "2776: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "2777:  return &ResourceNotFoundException{",
          "2778:   RespMetadata: v,",
          "2779:  }",
          "2780: }",
          "2783: func (s *ResourceNotFoundException) Code() string {",
          "2784:  return \"ResourceNotFoundException\"",
          "2785: }",
          "2788: func (s *ResourceNotFoundException) Message() string {",
          "2789:  if s.Message_ != nil {",
          "2790:   return *s.Message_",
          "2791:  }",
          "2792:  return \"\"",
          "2793: }",
          "2796: func (s *ResourceNotFoundException) OrigErr() error {",
          "2797:  return nil",
          "2798: }",
          "2800: func (s *ResourceNotFoundException) Error() string {",
          "2801:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "2802: }",
          "2805: func (s *ResourceNotFoundException) StatusCode() int {",
          "2806:  return s.RespMetadata.StatusCode",
          "2807: }",
          "2810: func (s *ResourceNotFoundException) RequestID() string {",
          "2811:  return s.RespMetadata.RequestID",
          "2812: }",
          "2815: type StatementData struct {",
          "2816:  _ struct{} `type:\"structure\"`",
          "2819:  CreatedAt *time.Time `type:\"timestamp\"`",
          "2825:  Id *string `type:\"string\" required:\"true\"`",
          "2828:  QueryString *string `type:\"string\"`",
          "2832:  SecretArn *string `type:\"string\"`",
          "2835:  StatementName *string `type:\"string\"`",
          "2839:  Status *string `type:\"string\" enum:\"StatusString\"`",
          "2842:  UpdatedAt *time.Time `type:\"timestamp\"`",
          "2843: }",
          "2846: func (s StatementData) String() string {",
          "2847:  return awsutil.Prettify(s)",
          "2848: }",
          "2851: func (s StatementData) GoString() string {",
          "2852:  return s.String()",
          "2853: }",
          "2856: func (s *StatementData) SetCreatedAt(v time.Time) *StatementData {",
          "2857:  s.CreatedAt = &v",
          "2858:  return s",
          "2859: }",
          "2862: func (s *StatementData) SetId(v string) *StatementData {",
          "2863:  s.Id = &v",
          "2864:  return s",
          "2865: }",
          "2868: func (s *StatementData) SetQueryString(v string) *StatementData {",
          "2869:  s.QueryString = &v",
          "2870:  return s",
          "2871: }",
          "2874: func (s *StatementData) SetSecretArn(v string) *StatementData {",
          "2875:  s.SecretArn = &v",
          "2876:  return s",
          "2877: }",
          "2880: func (s *StatementData) SetStatementName(v string) *StatementData {",
          "2881:  s.StatementName = &v",
          "2882:  return s",
          "2883: }",
          "2886: func (s *StatementData) SetStatus(v string) *StatementData {",
          "2887:  s.Status = &v",
          "2888:  return s",
          "2889: }",
          "2892: func (s *StatementData) SetUpdatedAt(v time.Time) *StatementData {",
          "2893:  s.UpdatedAt = &v",
          "2894:  return s",
          "2895: }",
          "2898: type TableMember struct {",
          "2899:  _ struct{} `type:\"structure\"`",
          "2902:  Name *string `locationName:\"name\" type:\"string\"`",
          "2905:  Schema *string `locationName:\"schema\" type:\"string\"`",
          "2909:  Type *string `locationName:\"type\" type:\"string\"`",
          "2910: }",
          "2913: func (s TableMember) String() string {",
          "2914:  return awsutil.Prettify(s)",
          "2915: }",
          "2918: func (s TableMember) GoString() string {",
          "2919:  return s.String()",
          "2920: }",
          "2923: func (s *TableMember) SetName(v string) *TableMember {",
          "2924:  s.Name = &v",
          "2925:  return s",
          "2926: }",
          "2929: func (s *TableMember) SetSchema(v string) *TableMember {",
          "2930:  s.Schema = &v",
          "2931:  return s",
          "2932: }",
          "2935: func (s *TableMember) SetType(v string) *TableMember {",
          "2936:  s.Type = &v",
          "2937:  return s",
          "2938: }",
          "2941: type ValidationException struct {",
          "2942:  _            struct{}                  `type:\"structure\"`",
          "2943:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2946:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2947: }",
          "2950: func (s ValidationException) String() string {",
          "2951:  return awsutil.Prettify(s)",
          "2952: }",
          "2955: func (s ValidationException) GoString() string {",
          "2956:  return s.String()",
          "2957: }",
          "2959: func newErrorValidationException(v protocol.ResponseMetadata) error {",
          "2960:  return &ValidationException{",
          "2961:   RespMetadata: v,",
          "2962:  }",
          "2963: }",
          "2966: func (s *ValidationException) Code() string {",
          "2967:  return \"ValidationException\"",
          "2968: }",
          "2971: func (s *ValidationException) Message() string {",
          "2972:  if s.Message_ != nil {",
          "2973:   return *s.Message_",
          "2974:  }",
          "2975:  return \"\"",
          "2976: }",
          "2979: func (s *ValidationException) OrigErr() error {",
          "2980:  return nil",
          "2981: }",
          "2983: func (s *ValidationException) Error() string {",
          "2984:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2985: }",
          "2988: func (s *ValidationException) StatusCode() int {",
          "2989:  return s.RespMetadata.StatusCode",
          "2990: }",
          "2993: func (s *ValidationException) RequestID() string {",
          "2994:  return s.RespMetadata.RequestID",
          "2995: }",
          "2997: const (",
          "2999:  StatusStringAborted = \"ABORTED\"",
          "3002:  StatusStringAll = \"ALL\"",
          "3005:  StatusStringFailed = \"FAILED\"",
          "3008:  StatusStringFinished = \"FINISHED\"",
          "3011:  StatusStringPicked = \"PICKED\"",
          "3014:  StatusStringStarted = \"STARTED\"",
          "3017:  StatusStringSubmitted = \"SUBMITTED\"",
          "3018: )",
          "3021: func StatusString_Values() []string {",
          "3022:  return []string{",
          "3023:   StatusStringAborted,",
          "3024:   StatusStringAll,",
          "3025:   StatusStringFailed,",
          "3026:   StatusStringFinished,",
          "3027:   StatusStringPicked,",
          "3028:   StatusStringStarted,",
          "3029:   StatusStringSubmitted,",
          "3030:  }",
          "3031: }",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/doc.go||service/redshiftdataapiservice/doc.go": [
          "File: service/redshiftdataapiservice/doc.go -> service/redshiftdataapiservice/doc.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: package redshiftdataapiservice",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/errors.go||service/redshiftdataapiservice/errors.go": [
          "File: service/redshiftdataapiservice/errors.go -> service/redshiftdataapiservice/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package redshiftdataapiservice",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "7: )",
          "9: const (",
          "15:  ErrCodeExecuteStatementException = \"ExecuteStatementException\"",
          "21:  ErrCodeInternalServerException = \"InternalServerException\"",
          "27:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "33:  ErrCodeValidationException = \"ValidationException\"",
          "34: )",
          "36: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "37:  \"ExecuteStatementException\": newErrorExecuteStatementException,",
          "38:  \"InternalServerException\":   newErrorInternalServerException,",
          "39:  \"ResourceNotFoundException\": newErrorResourceNotFoundException,",
          "40:  \"ValidationException\":       newErrorValidationException,",
          "41: }",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go||service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go": [
          "File: service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go -> service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: package redshiftdataapiserviceiface",
          "11: import (",
          "12:  \"github.com/aws/aws-sdk-go/aws\"",
          "13:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "14:  \"github.com/aws/aws-sdk-go/service/redshiftdataapiservice\"",
          "15: )",
          "62: type RedshiftDataAPIServiceAPI interface {",
          "63:  CancelStatement(*redshiftdataapiservice.CancelStatementInput) (*redshiftdataapiservice.CancelStatementOutput, error)",
          "64:  CancelStatementWithContext(aws.Context, *redshiftdataapiservice.CancelStatementInput, ...request.Option) (*redshiftdataapiservice.CancelStatementOutput, error)",
          "65:  CancelStatementRequest(*redshiftdataapiservice.CancelStatementInput) (*request.Request, *redshiftdataapiservice.CancelStatementOutput)",
          "67:  DescribeStatement(*redshiftdataapiservice.DescribeStatementInput) (*redshiftdataapiservice.DescribeStatementOutput, error)",
          "68:  DescribeStatementWithContext(aws.Context, *redshiftdataapiservice.DescribeStatementInput, ...request.Option) (*redshiftdataapiservice.DescribeStatementOutput, error)",
          "69:  DescribeStatementRequest(*redshiftdataapiservice.DescribeStatementInput) (*request.Request, *redshiftdataapiservice.DescribeStatementOutput)",
          "71:  DescribeTable(*redshiftdataapiservice.DescribeTableInput) (*redshiftdataapiservice.DescribeTableOutput, error)",
          "72:  DescribeTableWithContext(aws.Context, *redshiftdataapiservice.DescribeTableInput, ...request.Option) (*redshiftdataapiservice.DescribeTableOutput, error)",
          "73:  DescribeTableRequest(*redshiftdataapiservice.DescribeTableInput) (*request.Request, *redshiftdataapiservice.DescribeTableOutput)",
          "75:  DescribeTablePages(*redshiftdataapiservice.DescribeTableInput, func(*redshiftdataapiservice.DescribeTableOutput, bool) bool) error",
          "76:  DescribeTablePagesWithContext(aws.Context, *redshiftdataapiservice.DescribeTableInput, func(*redshiftdataapiservice.DescribeTableOutput, bool) bool, ...request.Option) error",
          "78:  ExecuteStatement(*redshiftdataapiservice.ExecuteStatementInput) (*redshiftdataapiservice.ExecuteStatementOutput, error)",
          "79:  ExecuteStatementWithContext(aws.Context, *redshiftdataapiservice.ExecuteStatementInput, ...request.Option) (*redshiftdataapiservice.ExecuteStatementOutput, error)",
          "80:  ExecuteStatementRequest(*redshiftdataapiservice.ExecuteStatementInput) (*request.Request, *redshiftdataapiservice.ExecuteStatementOutput)",
          "82:  GetStatementResult(*redshiftdataapiservice.GetStatementResultInput) (*redshiftdataapiservice.GetStatementResultOutput, error)",
          "83:  GetStatementResultWithContext(aws.Context, *redshiftdataapiservice.GetStatementResultInput, ...request.Option) (*redshiftdataapiservice.GetStatementResultOutput, error)",
          "84:  GetStatementResultRequest(*redshiftdataapiservice.GetStatementResultInput) (*request.Request, *redshiftdataapiservice.GetStatementResultOutput)",
          "86:  GetStatementResultPages(*redshiftdataapiservice.GetStatementResultInput, func(*redshiftdataapiservice.GetStatementResultOutput, bool) bool) error",
          "87:  GetStatementResultPagesWithContext(aws.Context, *redshiftdataapiservice.GetStatementResultInput, func(*redshiftdataapiservice.GetStatementResultOutput, bool) bool, ...request.Option) error",
          "89:  ListDatabases(*redshiftdataapiservice.ListDatabasesInput) (*redshiftdataapiservice.ListDatabasesOutput, error)",
          "90:  ListDatabasesWithContext(aws.Context, *redshiftdataapiservice.ListDatabasesInput, ...request.Option) (*redshiftdataapiservice.ListDatabasesOutput, error)",
          "91:  ListDatabasesRequest(*redshiftdataapiservice.ListDatabasesInput) (*request.Request, *redshiftdataapiservice.ListDatabasesOutput)",
          "93:  ListDatabasesPages(*redshiftdataapiservice.ListDatabasesInput, func(*redshiftdataapiservice.ListDatabasesOutput, bool) bool) error",
          "94:  ListDatabasesPagesWithContext(aws.Context, *redshiftdataapiservice.ListDatabasesInput, func(*redshiftdataapiservice.ListDatabasesOutput, bool) bool, ...request.Option) error",
          "96:  ListSchemas(*redshiftdataapiservice.ListSchemasInput) (*redshiftdataapiservice.ListSchemasOutput, error)",
          "97:  ListSchemasWithContext(aws.Context, *redshiftdataapiservice.ListSchemasInput, ...request.Option) (*redshiftdataapiservice.ListSchemasOutput, error)",
          "98:  ListSchemasRequest(*redshiftdataapiservice.ListSchemasInput) (*request.Request, *redshiftdataapiservice.ListSchemasOutput)",
          "100:  ListSchemasPages(*redshiftdataapiservice.ListSchemasInput, func(*redshiftdataapiservice.ListSchemasOutput, bool) bool) error",
          "101:  ListSchemasPagesWithContext(aws.Context, *redshiftdataapiservice.ListSchemasInput, func(*redshiftdataapiservice.ListSchemasOutput, bool) bool, ...request.Option) error",
          "103:  ListStatements(*redshiftdataapiservice.ListStatementsInput) (*redshiftdataapiservice.ListStatementsOutput, error)",
          "104:  ListStatementsWithContext(aws.Context, *redshiftdataapiservice.ListStatementsInput, ...request.Option) (*redshiftdataapiservice.ListStatementsOutput, error)",
          "105:  ListStatementsRequest(*redshiftdataapiservice.ListStatementsInput) (*request.Request, *redshiftdataapiservice.ListStatementsOutput)",
          "107:  ListStatementsPages(*redshiftdataapiservice.ListStatementsInput, func(*redshiftdataapiservice.ListStatementsOutput, bool) bool) error",
          "108:  ListStatementsPagesWithContext(aws.Context, *redshiftdataapiservice.ListStatementsInput, func(*redshiftdataapiservice.ListStatementsOutput, bool) bool, ...request.Option) error",
          "110:  ListTables(*redshiftdataapiservice.ListTablesInput) (*redshiftdataapiservice.ListTablesOutput, error)",
          "111:  ListTablesWithContext(aws.Context, *redshiftdataapiservice.ListTablesInput, ...request.Option) (*redshiftdataapiservice.ListTablesOutput, error)",
          "112:  ListTablesRequest(*redshiftdataapiservice.ListTablesInput) (*request.Request, *redshiftdataapiservice.ListTablesOutput)",
          "114:  ListTablesPages(*redshiftdataapiservice.ListTablesInput, func(*redshiftdataapiservice.ListTablesOutput, bool) bool) error",
          "115:  ListTablesPagesWithContext(aws.Context, *redshiftdataapiservice.ListTablesInput, func(*redshiftdataapiservice.ListTablesOutput, bool) bool, ...request.Option) error",
          "116: }",
          "118: var _ RedshiftDataAPIServiceAPI = (*redshiftdataapiservice.RedshiftDataAPIService)(nil)",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/service.go||service/redshiftdataapiservice/service.go": [
          "File: service/redshiftdataapiservice/service.go -> service/redshiftdataapiservice/service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package redshiftdataapiservice",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/aws\"",
          "7:  \"github.com/aws/aws-sdk-go/aws/client\"",
          "8:  \"github.com/aws/aws-sdk-go/aws/client/metadata\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/signer/v4\"",
          "11:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol/jsonrpc\"",
          "13: )",
          "21: type RedshiftDataAPIService struct {",
          "23: }",
          "26: var initClient func(*client.Client)",
          "29: var initRequest func(*request.Request)",
          "32: const (",
          "33:  ServiceName = \"Redshift Data\" // Name of service.",
          "34:  EndpointsID = \"redshift-data\" // ID to lookup a service endpoint with.",
          "35:  ServiceID   = \"Redshift Data\" // ServiceID is a unique identifier of a specific service.",
          "36: )",
          "50: func New(p client.ConfigProvider, cfgs ...*aws.Config) *RedshiftDataAPIService {",
          "51:  c := p.ClientConfig(EndpointsID, cfgs...)",
          "52:  if c.SigningNameDerived || len(c.SigningName) == 0 {",
          "53:   c.SigningName = \"redshift-data\"",
          "54:  }",
          "55:  return newClient(*c.Config, c.Handlers, c.PartitionID, c.Endpoint, c.SigningRegion, c.SigningName)",
          "56: }",
          "59: func newClient(cfg aws.Config, handlers request.Handlers, partitionID, endpoint, signingRegion, signingName string) *RedshiftDataAPIService {",
          "60:  svc := &RedshiftDataAPIService{",
          "61:   Client: client.New(",
          "62:    cfg,",
          "63:    metadata.ClientInfo{",
          "64:     ServiceName:   ServiceName,",
          "65:     ServiceID:     ServiceID,",
          "66:     SigningName:   signingName,",
          "67:     SigningRegion: signingRegion,",
          "68:     PartitionID:   partitionID,",
          "69:     Endpoint:      endpoint,",
          "70:     APIVersion:    \"2019-12-20\",",
          "71:     JSONVersion:   \"1.1\",",
          "72:     TargetPrefix:  \"RedshiftData\",",
          "73:    },",
          "74:    handlers,",
          "75:   ),",
          "76:  }",
          "79:  svc.Handlers.Sign.PushBackNamed(v4.SignRequestHandler)",
          "80:  svc.Handlers.Build.PushBackNamed(jsonrpc.BuildHandler)",
          "81:  svc.Handlers.Unmarshal.PushBackNamed(jsonrpc.UnmarshalHandler)",
          "82:  svc.Handlers.UnmarshalMeta.PushBackNamed(jsonrpc.UnmarshalMetaHandler)",
          "83:  svc.Handlers.UnmarshalError.PushBackNamed(",
          "84:   protocol.NewUnmarshalErrorHandler(jsonrpc.NewUnmarshalTypedError(exceptionFromCode)).NamedHandler(),",
          "85:  )",
          "88:  if initClient != nil {",
          "89:   initClient(svc.Client)",
          "90:  }",
          "92:  return svc",
          "93: }",
          "97: func (c *RedshiftDataAPIService) newRequest(op *request.Operation, params, data interface{}) *request.Request {",
          "98:  req := c.NewRequest(op, params, data)",
          "101:  if initRequest != nil {",
          "102:   initRequest(req)",
          "103:  }",
          "105:  return req",
          "106: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aced03738bccc0594e9e2c759ef122cdc21e5dba",
      "candidate_info": {
        "commit_hash": "aced03738bccc0594e9e2c759ef122cdc21e5dba",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/aced03738bccc0594e9e2c759ef122cdc21e5dba",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/mediaconvert/2017-08-29/api-2.json",
          "models/apis/mediaconvert/2017-08-29/docs-2.json",
          "models/apis/meteringmarketplace/2016-01-14/docs-2.json",
          "models/apis/rds/2014-10-31/api-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/sesv2/2019-09-27/api-2.json",
          "models/apis/sesv2/2019-09-27/docs-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/apis/support/2013-04-15/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/marketplacemetering/api.go",
          "service/marketplacemetering/errors.go",
          "service/mediaconvert/api.go",
          "service/rds/api.go",
          "service/route53/api.go",
          "service/route53/route53iface/interface.go",
          "service/sesv2/api.go",
          "service/ssm/api.go",
          "service/support/api.go",
          "service/support/doc.go"
        ],
        "message": "Release v1.32.5 (2020-06-18) (#3381)\n\nRelease v1.32.5 (2020-06-18)\n===\n\n### Service Client Updates\n* `service/mediaconvert`: Updates service API and documentation\n  * AWS Elemental MediaConvert SDK has added support for NexGuard FileMarker SDK, which allows NexGuard partners to watermark proprietary content in mezzanine and OTT streaming contexts.\n* `service/meteringmarketplace`: Updates service documentation\n  * Documentation updates for meteringmarketplace\n* `service/rds`: Updates service API and documentation\n  * Adding support for global write forwarding on secondary clusters in an Aurora global database.\n* `service/route53`: Updates service API and documentation\n  * Added a new ListHostedZonesByVPC API for customers to list all the private hosted zones that a specified VPC is associated with.\n* `service/sesv2`: Updates service API and documentation\n* `service/ssm`: Updates service API and documentation\n  * Added offset support for specifying the number of days to wait after the date and time specified by a CRON expression before running the maintenance window.\n* `service/support`: Updates service documentation\n  * Documentation updates for support",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/marketplacemetering/api.go||service/marketplacemetering/api.go",
          "service/marketplacemetering/errors.go||service/marketplacemetering/errors.go",
          "service/mediaconvert/api.go||service/mediaconvert/api.go",
          "service/rds/api.go||service/rds/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go",
          "service/sesv2/api.go||service/sesv2/api.go",
          "service/ssm/api.go||service/ssm/api.go",
          "service/support/api.go||service/support/api.go",
          "service/support/doc.go||service/support/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5000:   \"servicecatalog\": service{",
          "5002:    Endpoints: endpoints{",
          "5003:     \"ap-east-1\":      endpoint{},",
          "5004:     \"ap-northeast-1\": endpoint{},",
          "5005:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5003:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5009:     \"ca-central-1\":   endpoint{},",
          "5010:     \"eu-central-1\":   endpoint{},",
          "5011:     \"eu-north-1\":     endpoint{},",
          "5012:     \"eu-west-1\":      endpoint{},",
          "5013:     \"eu-west-2\":      endpoint{},",
          "5014:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5013:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8946:     \"us-isob-east-1\": endpoint{},",
          "8947:    },",
          "8948:   },",
          "8949:   \"license-manager\": service{",
          "8951:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8949:    },",
          "8950:   },",
          "8951:   \"lambda\": service{",
          "8953:    Endpoints: endpoints{",
          "8954:     \"us-isob-east-1\": endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.32.4\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.32.5\"",
          "",
          "---------------"
        ],
        "service/marketplacemetering/api.go||service/marketplacemetering/api.go": [
          "File: service/marketplacemetering/api.go -> service/marketplacemetering/api.go"
        ],
        "service/marketplacemetering/errors.go||service/marketplacemetering/errors.go": [
          "File: service/marketplacemetering/errors.go -> service/marketplacemetering/errors.go"
        ],
        "service/mediaconvert/api.go||service/mediaconvert/api.go": [
          "File: service/mediaconvert/api.go -> service/mediaconvert/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14988:  return s",
          "14989: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15027: type NexGuardFileMarkerSettings struct {",
          "15028:  _ struct{} `type:\"structure\"`",
          "15034:  License *string `locationName:\"license\" min:\"1\" type:\"string\"`",
          "15047:  Payload *int64 `locationName:\"payload\" type:\"integer\"`",
          "15052:  Preset *string `locationName:\"preset\" min:\"1\" type:\"string\"`",
          "15057:  Strength *string `locationName:\"strength\" type:\"string\" enum:\"WatermarkingStrength\"`",
          "15058: }",
          "15061: func (s NexGuardFileMarkerSettings) String() string {",
          "15062:  return awsutil.Prettify(s)",
          "15063: }",
          "15066: func (s NexGuardFileMarkerSettings) GoString() string {",
          "15067:  return s.String()",
          "15068: }",
          "15071: func (s *NexGuardFileMarkerSettings) Validate() error {",
          "15072:  invalidParams := request.ErrInvalidParams{Context: \"NexGuardFileMarkerSettings\"}",
          "15073:  if s.License != nil && len(*s.License) < 1 {",
          "15074:   invalidParams.Add(request.NewErrParamMinLen(\"License\", 1))",
          "15075:  }",
          "15076:  if s.Preset != nil && len(*s.Preset) < 1 {",
          "15077:   invalidParams.Add(request.NewErrParamMinLen(\"Preset\", 1))",
          "15078:  }",
          "15080:  if invalidParams.Len() > 0 {",
          "15081:   return invalidParams",
          "15082:  }",
          "15083:  return nil",
          "15084: }",
          "15087: func (s *NexGuardFileMarkerSettings) SetLicense(v string) *NexGuardFileMarkerSettings {",
          "15088:  s.License = &v",
          "15089:  return s",
          "15090: }",
          "15093: func (s *NexGuardFileMarkerSettings) SetPayload(v int64) *NexGuardFileMarkerSettings {",
          "15094:  s.Payload = &v",
          "15095:  return s",
          "15096: }",
          "15099: func (s *NexGuardFileMarkerSettings) SetPreset(v string) *NexGuardFileMarkerSettings {",
          "15100:  s.Preset = &v",
          "15101:  return s",
          "15102: }",
          "15105: func (s *NexGuardFileMarkerSettings) SetStrength(v string) *NexGuardFileMarkerSettings {",
          "15106:  s.Strength = &v",
          "15107:  return s",
          "15108: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15832:  return s",
          "15833: }",
          "15837: type Preset struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15957: type PartnerWatermarking struct {",
          "15958:  _ struct{} `type:\"structure\"`",
          "15963:  NexguardFileMarkerSettings *NexGuardFileMarkerSettings `locationName:\"nexguardFileMarkerSettings\" type:\"structure\"`",
          "15964: }",
          "15967: func (s PartnerWatermarking) String() string {",
          "15968:  return awsutil.Prettify(s)",
          "15969: }",
          "15972: func (s PartnerWatermarking) GoString() string {",
          "15973:  return s.String()",
          "15974: }",
          "15977: func (s *PartnerWatermarking) Validate() error {",
          "15978:  invalidParams := request.ErrInvalidParams{Context: \"PartnerWatermarking\"}",
          "15979:  if s.NexguardFileMarkerSettings != nil {",
          "15980:   if err := s.NexguardFileMarkerSettings.Validate(); err != nil {",
          "15981:    invalidParams.AddNested(\"NexguardFileMarkerSettings\", err.(request.ErrInvalidParams))",
          "15982:   }",
          "15983:  }",
          "15985:  if invalidParams.Len() > 0 {",
          "15986:   return invalidParams",
          "15987:  }",
          "15988:  return nil",
          "15989: }",
          "15992: func (s *PartnerWatermarking) SetNexguardFileMarkerSettings(v *NexGuardFileMarkerSettings) *PartnerWatermarking {",
          "15993:  s.NexguardFileMarkerSettings = v",
          "15994:  return s",
          "15995: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "18438:  NoiseReducer *NoiseReducer `locationName:\"noiseReducer\" type:\"structure\"`",
          "18442:  TimecodeBurnin *TimecodeBurnin `locationName:\"timecodeBurnin\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18616:  PartnerWatermarking *PartnerWatermarking `locationName:\"partnerWatermarking\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "18470:    invalidParams.AddNested(\"NoiseReducer\", err.(request.ErrInvalidParams))",
          "18471:   }",
          "18472:  }",
          "18473:  if s.TimecodeBurnin != nil {",
          "18474:   if err := s.TimecodeBurnin.Validate(); err != nil {",
          "18475:    invalidParams.AddNested(\"TimecodeBurnin\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18651:  if s.PartnerWatermarking != nil {",
          "18652:   if err := s.PartnerWatermarking.Validate(); err != nil {",
          "18653:    invalidParams.AddNested(\"PartnerWatermarking\", err.(request.ErrInvalidParams))",
          "18654:   }",
          "18655:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "18512:  return s",
          "18513: }",
          "18516: func (s *VideoPreprocessor) SetTimecodeBurnin(v *TimecodeBurnin) *VideoPreprocessor {",
          "18517:  s.TimecodeBurnin = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18699: func (s *VideoPreprocessor) SetPartnerWatermarking(v *PartnerWatermarking) *VideoPreprocessor {",
          "18700:  s.PartnerWatermarking = v",
          "18701:  return s",
          "18702: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "23822:  Vp9RateControlModeVbr = \"VBR\"",
          "23823: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24023: const (",
          "24025:  WatermarkingStrengthLightest = \"LIGHTEST\"",
          "24028:  WatermarkingStrengthLighter = \"LIGHTER\"",
          "24031:  WatermarkingStrengthDefault = \"DEFAULT\"",
          "24034:  WatermarkingStrengthStronger = \"STRONGER\"",
          "24037:  WatermarkingStrengthStrongest = \"STRONGEST\"",
          "24038: )",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16580:  EnableCloudwatchLogsExports []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16593:  EnableGlobalWriteForwarding *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16911:  return s",
          "16912: }",
          "16915: func (s *CreateDBClusterInput) SetEnableHttpEndpoint(v bool) *CreateDBClusterInput {",
          "16916:  s.EnableHttpEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16928: func (s *CreateDBClusterInput) SetEnableGlobalWriteForwarding(v bool) *CreateDBClusterInput {",
          "16929:  s.EnableGlobalWriteForwarding = &v",
          "16930:  return s",
          "16931: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "20135:  EngineVersion *string `type:\"string\"`",
          "20138:  HostedZoneId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20174:  GlobalWriteForwardingRequested *bool `type:\"boolean\"`",
          "20178:  GlobalWriteForwardingStatus *string `type:\"string\" enum:\"WriteForwardingStatus\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "20432:  return s",
          "20433: }",
          "20436: func (s *DBCluster) SetHostedZoneId(v string) *DBCluster {",
          "20437:  s.HostedZoneId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20479: func (s *DBCluster) SetGlobalWriteForwardingRequested(v bool) *DBCluster {",
          "20480:  s.GlobalWriteForwardingRequested = &v",
          "20481:  return s",
          "20482: }",
          "20485: func (s *DBCluster) SetGlobalWriteForwardingStatus(v string) *DBCluster {",
          "20486:  s.GlobalWriteForwardingStatus = &v",
          "20487:  return s",
          "20488: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "30859:  DBClusterArn *string `type:\"string\"`",
          "30863:  IsWriter *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30926:  GlobalWriteForwardingStatus *string `type:\"string\" enum:\"WriteForwardingStatus\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "30883:  return s",
          "30884: }",
          "30887: func (s *GlobalClusterMember) SetIsWriter(v bool) *GlobalClusterMember {",
          "30888:  s.IsWriter = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30954: func (s *GlobalClusterMember) SetGlobalWriteForwardingStatus(v string) *GlobalClusterMember {",
          "30955:  s.GlobalWriteForwardingStatus = &v",
          "30956:  return s",
          "30957: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "31879:  DomainIAMRoleName *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31961:  EnableGlobalWriteForwarding *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "32093:  return s",
          "32094: }",
          "32097: func (s *ModifyDBClusterInput) SetEnableHttpEndpoint(v bool) *ModifyDBClusterInput {",
          "32098:  s.EnableHttpEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32179: func (s *ModifyDBClusterInput) SetEnableGlobalWriteForwarding(v bool) *ModifyDBClusterInput {",
          "32180:  s.EnableGlobalWriteForwarding = &v",
          "32181:  return s",
          "32182: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "41537:  TargetTypeTrackedCluster = \"TRACKED_CLUSTER\"",
          "41538: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41667: const (",
          "41669:  WriteForwardingStatusEnabled = \"enabled\"",
          "41672:  WriteForwardingStatusDisabled = \"disabled\"",
          "41675:  WriteForwardingStatusEnabling = \"enabling\"",
          "41678:  WriteForwardingStatusDisabling = \"disabling\"",
          "41681:  WriteForwardingStatusUnknown = \"unknown\"",
          "41682: )",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4304:  return out, req.Send()",
          "4305: }",
          "4307: const opListQueryLoggingConfigs = \"ListQueryLoggingConfigs\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4316: const opListHostedZonesByVPC = \"ListHostedZonesByVPC\"",
          "4342: func (c *Route53) ListHostedZonesByVPCRequest(input *ListHostedZonesByVPCInput) (req *request.Request, output *ListHostedZonesByVPCOutput) {",
          "4343:  op := &request.Operation{",
          "4344:   Name:       opListHostedZonesByVPC,",
          "4345:   HTTPMethod: \"GET\",",
          "4346:   HTTPPath:   \"/2013-04-01/hostedzonesbyvpc\",",
          "4347:  }",
          "4349:  if input == nil {",
          "4350:   input = &ListHostedZonesByVPCInput{}",
          "4351:  }",
          "4353:  output = &ListHostedZonesByVPCOutput{}",
          "4354:  req = c.newRequest(op, input, output)",
          "4355:  return",
          "4356: }",
          "4388: func (c *Route53) ListHostedZonesByVPC(input *ListHostedZonesByVPCInput) (*ListHostedZonesByVPCOutput, error) {",
          "4389:  req, out := c.ListHostedZonesByVPCRequest(input)",
          "4390:  return out, req.Send()",
          "4391: }",
          "4402: func (c *Route53) ListHostedZonesByVPCWithContext(ctx aws.Context, input *ListHostedZonesByVPCInput, opts ...request.Option) (*ListHostedZonesByVPCOutput, error) {",
          "4403:  req, out := c.ListHostedZonesByVPCRequest(input)",
          "4404:  req.SetContext(ctx)",
          "4405:  req.ApplyOptions(opts...)",
          "4406:  return out, req.Send()",
          "4407: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10783:  return s",
          "10784: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10891: type HostedZoneOwner struct {",
          "10892:  _ struct{} `type:\"structure\"`",
          "10899:  OwningAccount *string `type:\"string\"`",
          "10906:  OwningService *string `type:\"string\"`",
          "10907: }",
          "10910: func (s HostedZoneOwner) String() string {",
          "10911:  return awsutil.Prettify(s)",
          "10912: }",
          "10915: func (s HostedZoneOwner) GoString() string {",
          "10916:  return s.String()",
          "10917: }",
          "10920: func (s *HostedZoneOwner) SetOwningAccount(v string) *HostedZoneOwner {",
          "10921:  s.OwningAccount = &v",
          "10922:  return s",
          "10923: }",
          "10926: func (s *HostedZoneOwner) SetOwningService(v string) *HostedZoneOwner {",
          "10927:  s.OwningService = &v",
          "10928:  return s",
          "10929: }",
          "10936: type HostedZoneSummary struct {",
          "10937:  _ struct{} `type:\"structure\"`",
          "10943:  HostedZoneId *string `type:\"string\" required:\"true\"`",
          "10948:  Name *string `type:\"string\" required:\"true\"`",
          "10954:  Owner *HostedZoneOwner `type:\"structure\" required:\"true\"`",
          "10955: }",
          "10958: func (s HostedZoneSummary) String() string {",
          "10959:  return awsutil.Prettify(s)",
          "10960: }",
          "10963: func (s HostedZoneSummary) GoString() string {",
          "10964:  return s.String()",
          "10965: }",
          "10968: func (s *HostedZoneSummary) SetHostedZoneId(v string) *HostedZoneSummary {",
          "10969:  s.HostedZoneId = &v",
          "10970:  return s",
          "10971: }",
          "10974: func (s *HostedZoneSummary) SetName(v string) *HostedZoneSummary {",
          "10975:  s.Name = &v",
          "10976:  return s",
          "10977: }",
          "10980: func (s *HostedZoneSummary) SetOwner(v *HostedZoneOwner) *HostedZoneSummary {",
          "10981:  s.Owner = v",
          "10982:  return s",
          "10983: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11285:  return s",
          "11286: }",
          "11290: type ListHostedZonesInput struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11489: type ListHostedZonesByVPCInput struct {",
          "11490:  _ struct{} `locationName:\"ListHostedZonesByVPCRequest\" type:\"structure\"`",
          "11497:  MaxItems *string `location:\"querystring\" locationName:\"maxitems\" type:\"string\"`",
          "11508:  NextToken *string `location:\"querystring\" locationName:\"nexttoken\" type:\"string\"`",
          "11513:  VPCId *string `location:\"querystring\" locationName:\"vpcid\" type:\"string\" required:\"true\"`",
          "11519:  VPCRegion *string `location:\"querystring\" locationName:\"vpcregion\" min:\"1\" type:\"string\" required:\"true\" enum:\"VPCRegion\"`",
          "11520: }",
          "11523: func (s ListHostedZonesByVPCInput) String() string {",
          "11524:  return awsutil.Prettify(s)",
          "11525: }",
          "11528: func (s ListHostedZonesByVPCInput) GoString() string {",
          "11529:  return s.String()",
          "11530: }",
          "11533: func (s *ListHostedZonesByVPCInput) Validate() error {",
          "11534:  invalidParams := request.ErrInvalidParams{Context: \"ListHostedZonesByVPCInput\"}",
          "11535:  if s.VPCId == nil {",
          "11536:   invalidParams.Add(request.NewErrParamRequired(\"VPCId\"))",
          "11537:  }",
          "11538:  if s.VPCRegion == nil {",
          "11539:   invalidParams.Add(request.NewErrParamRequired(\"VPCRegion\"))",
          "11540:  }",
          "11541:  if s.VPCRegion != nil && len(*s.VPCRegion) < 1 {",
          "11542:   invalidParams.Add(request.NewErrParamMinLen(\"VPCRegion\", 1))",
          "11543:  }",
          "11545:  if invalidParams.Len() > 0 {",
          "11546:   return invalidParams",
          "11547:  }",
          "11548:  return nil",
          "11549: }",
          "11552: func (s *ListHostedZonesByVPCInput) SetMaxItems(v string) *ListHostedZonesByVPCInput {",
          "11553:  s.MaxItems = &v",
          "11554:  return s",
          "11555: }",
          "11558: func (s *ListHostedZonesByVPCInput) SetNextToken(v string) *ListHostedZonesByVPCInput {",
          "11559:  s.NextToken = &v",
          "11560:  return s",
          "11561: }",
          "11564: func (s *ListHostedZonesByVPCInput) SetVPCId(v string) *ListHostedZonesByVPCInput {",
          "11565:  s.VPCId = &v",
          "11566:  return s",
          "11567: }",
          "11570: func (s *ListHostedZonesByVPCInput) SetVPCRegion(v string) *ListHostedZonesByVPCInput {",
          "11571:  s.VPCRegion = &v",
          "11572:  return s",
          "11573: }",
          "11575: type ListHostedZonesByVPCOutput struct {",
          "11576:  _ struct{} `type:\"structure\"`",
          "11584:  HostedZoneSummaries []*HostedZoneSummary `locationNameList:\"HostedZoneSummary\" type:\"list\" required:\"true\"`",
          "11590:  MaxItems *string `type:\"string\" required:\"true\"`",
          "11594:  NextToken *string `type:\"string\"`",
          "11595: }",
          "11598: func (s ListHostedZonesByVPCOutput) String() string {",
          "11599:  return awsutil.Prettify(s)",
          "11600: }",
          "11603: func (s ListHostedZonesByVPCOutput) GoString() string {",
          "11604:  return s.String()",
          "11605: }",
          "11608: func (s *ListHostedZonesByVPCOutput) SetHostedZoneSummaries(v []*HostedZoneSummary) *ListHostedZonesByVPCOutput {",
          "11609:  s.HostedZoneSummaries = v",
          "11610:  return s",
          "11611: }",
          "11614: func (s *ListHostedZonesByVPCOutput) SetMaxItems(v string) *ListHostedZonesByVPCOutput {",
          "11615:  s.MaxItems = &v",
          "11616:  return s",
          "11617: }",
          "11620: func (s *ListHostedZonesByVPCOutput) SetNextToken(v string) *ListHostedZonesByVPCOutput {",
          "11621:  s.NextToken = &v",
          "11622:  return s",
          "11623: }",
          "",
          "---------------"
        ],
        "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go": [
          "File: service/route53/route53iface/interface.go -> service/route53/route53iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:  ListHostedZonesByNameWithContext(aws.Context, *route53.ListHostedZonesByNameInput, ...request.Option) (*route53.ListHostedZonesByNameOutput, error)",
          "227:  ListHostedZonesByNameRequest(*route53.ListHostedZonesByNameInput) (*request.Request, *route53.ListHostedZonesByNameOutput)",
          "229:  ListQueryLoggingConfigs(*route53.ListQueryLoggingConfigsInput) (*route53.ListQueryLoggingConfigsOutput, error)",
          "230:  ListQueryLoggingConfigsWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error)",
          "231:  ListQueryLoggingConfigsRequest(*route53.ListQueryLoggingConfigsInput) (*request.Request, *route53.ListQueryLoggingConfigsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229:  ListHostedZonesByVPC(*route53.ListHostedZonesByVPCInput) (*route53.ListHostedZonesByVPCOutput, error)",
          "230:  ListHostedZonesByVPCWithContext(aws.Context, *route53.ListHostedZonesByVPCInput, ...request.Option) (*route53.ListHostedZonesByVPCOutput, error)",
          "231:  ListHostedZonesByVPCRequest(*route53.ListHostedZonesByVPCInput) (*request.Request, *route53.ListHostedZonesByVPCOutput)",
          "",
          "---------------"
        ],
        "service/sesv2/api.go||service/sesv2/api.go": [
          "File: service/sesv2/api.go -> service/sesv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12260:  EventTypeRenderingFailure = \"RENDERING_FAILURE\"",
          "12261: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12263:  EventTypeDeliveryDelay = \"DELIVERY_DELAY\"",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17137:  Schedule *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17154:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17207:  if s.Schedule != nil && len(*s.Schedule) < 1 {",
          "17208:   invalidParams.Add(request.NewErrParamMinLen(\"Schedule\", 1))",
          "17209:  }",
          "17210:  if s.Tags != nil {",
          "17211:   for i, v := range s.Tags {",
          "17212:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17227:  if s.ScheduleOffset != nil && *s.ScheduleOffset < 1 {",
          "17228:   invalidParams.Add(request.NewErrParamMinValue(\"ScheduleOffset\", 1))",
          "17229:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "17272:  return s",
          "17273: }",
          "17276: func (s *CreateMaintenanceWindowInput) SetScheduleTimezone(v string) *CreateMaintenanceWindowInput {",
          "17277:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17296: func (s *CreateMaintenanceWindowInput) SetScheduleOffset(v int64) *CreateMaintenanceWindowInput {",
          "17297:  s.ScheduleOffset = &v",
          "17298:  return s",
          "17299: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "25639:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25669:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "25729:  return s",
          "25730: }",
          "25733: func (s *GetMaintenanceWindowOutput) SetScheduleTimezone(v string) *GetMaintenanceWindowOutput {",
          "25734:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25763: func (s *GetMaintenanceWindowOutput) SetScheduleOffset(v int64) *GetMaintenanceWindowOutput {",
          "25764:  s.ScheduleOffset = &v",
          "25765:  return s",
          "25766: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "33642:  Schedule *string `min:\"1\" type:\"string\"`",
          "33646:  ScheduleTimezone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33682:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "33711:  return s",
          "33712: }",
          "33715: func (s *MaintenanceWindowIdentity) SetScheduleTimezone(v string) *MaintenanceWindowIdentity {",
          "33716:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33755: func (s *MaintenanceWindowIdentity) SetScheduleOffset(v int64) *MaintenanceWindowIdentity {",
          "33756:  s.ScheduleOffset = &v",
          "33757:  return s",
          "33758: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "43528:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43591:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "43570:  if s.Schedule != nil && len(*s.Schedule) < 1 {",
          "43571:   invalidParams.Add(request.NewErrParamMinLen(\"Schedule\", 1))",
          "43572:  }",
          "43573:  if s.WindowId == nil {",
          "43574:   invalidParams.Add(request.NewErrParamRequired(\"WindowId\"))",
          "43575:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43636:  if s.ScheduleOffset != nil && *s.ScheduleOffset < 1 {",
          "43637:   invalidParams.Add(request.NewErrParamMinValue(\"ScheduleOffset\", 1))",
          "43638:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "43637:  return s",
          "43638: }",
          "43641: func (s *UpdateMaintenanceWindowInput) SetScheduleTimezone(v string) *UpdateMaintenanceWindowInput {",
          "43642:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43707: func (s *UpdateMaintenanceWindowInput) SetScheduleOffset(v int64) *UpdateMaintenanceWindowInput {",
          "43708:  s.ScheduleOffset = &v",
          "43709:  return s",
          "43710: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "43687:  Schedule *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43763:  ScheduleOffset *int64 `min:\"1\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "43759:  return s",
          "43760: }",
          "43763: func (s *UpdateMaintenanceWindowOutput) SetScheduleTimezone(v string) *UpdateMaintenanceWindowOutput {",
          "43764:  s.ScheduleTimezone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43839: func (s *UpdateMaintenanceWindowOutput) SetScheduleOffset(v int64) *UpdateMaintenanceWindowOutput {",
          "43840:  s.ScheduleOffset = &v",
          "43841:  return s",
          "43842: }",
          "",
          "---------------"
        ],
        "service/support/api.go||service/support/api.go": [
          "File: service/support/api.go -> service/support/api.go"
        ],
        "service/support/doc.go||service/support/doc.go": [
          "File: service/support/doc.go -> service/support/doc.go"
        ]
      }
    },
    {
      "candidate_hash": "9617ad0d9d6afffa6b557bc26e8419bc732a60b7",
      "candidate_info": {
        "commit_hash": "9617ad0d9d6afffa6b557bc26e8419bc732a60b7",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/9617ad0d9d6afffa6b557bc26e8419bc732a60b7",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/devops-guru/2020-12-01/api-2.json",
          "models/apis/devops-guru/2020-12-01/docs-2.json",
          "models/apis/devops-guru/2020-12-01/examples-1.json",
          "models/apis/devops-guru/2020-12-01/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/globalaccelerator/2018-08-08/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/devopsguru/api.go",
          "service/devopsguru/doc.go",
          "service/devopsguru/errors.go",
          "service/ec2/api.go",
          "service/globalaccelerator/api.go",
          "service/globalaccelerator/globalacceleratoriface/interface.go"
        ],
        "message": "Release v1.36.8 (2020-12-14) (#3696)\n\nRelease v1.36.8 (2020-12-14)\n===\n\n### Service Client Updates\n* `service/devops-guru`: Updates service API, documentation, paginators, and examples\n* `service/ec2`: Updates service API\n  * Add c5n.metal to ec2 instance types list\n* `service/globalaccelerator`: Updates service paginators",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/devopsguru/api.go||service/devopsguru/api.go",
          "service/devopsguru/doc.go||service/devopsguru/doc.go",
          "service/devopsguru/errors.go||service/devopsguru/errors.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/globalaccelerator/api.go||service/globalaccelerator/api.go",
          "service/globalaccelerator/globalacceleratoriface/interface.go||service/globalaccelerator/globalacceleratoriface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5636:   \"servicediscovery\": service{",
          "5638:    Endpoints: endpoints{",
          "5639:     \"ap-east-1\":      endpoint{},",
          "5640:     \"ap-northeast-1\": endpoint{},",
          "5641:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5639:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5645:     \"ca-central-1\":   endpoint{},",
          "5646:     \"eu-central-1\":   endpoint{},",
          "5647:     \"eu-north-1\":     endpoint{},",
          "5648:     \"eu-west-1\":      endpoint{},",
          "5649:     \"eu-west-2\":      endpoint{},",
          "5650:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5649:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.36.7\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.36.8\"",
          "",
          "---------------"
        ],
        "service/devopsguru/api.go||service/devopsguru/api.go": [
          "File: service/devopsguru/api.go -> service/devopsguru/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2086: type AddNotificationChannelOutput struct {",
          "2087:  _ struct{} `type:\"structure\"`",
          "2090: }",
          "",
          "[Removed Lines]",
          "2089:  Id *string `min:\"36\" type:\"string\"`",
          "",
          "[Added Lines]",
          "2364:  Id *string `min:\"36\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2127:  return s",
          "2128: }",
          "2130: type AnomalyTimeRange struct {",
          "2131:  _ struct{} `type:\"structure\"`",
          "2137: }",
          "",
          "[Removed Lines]",
          "2133:  EndTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "2136:  StartTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\" required:\"true\"`",
          "",
          "[Added Lines]",
          "2415:  EndTime *time.Time `type:\"timestamp\"`",
          "2420:  StartTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2402: type DescribeAccountHealthOutput struct {",
          "2403:  _ struct{} `type:\"structure\"`",
          "2410: }",
          "",
          "[Removed Lines]",
          "2405:  MetricsAnalyzed *int64 `type:\"integer\"`",
          "2407:  OpenProactiveInsights *int64 `type:\"integer\"`",
          "2409:  OpenReactiveInsights *int64 `type:\"integer\"`",
          "",
          "[Added Lines]",
          "2733:  MetricsAnalyzed *int64 `type:\"integer\" required:\"true\"`",
          "2739:  OpenProactiveInsights *int64 `type:\"integer\" required:\"true\"`",
          "2745:  OpenReactiveInsights *int64 `type:\"integer\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2440: type DescribeAccountOverviewInput struct {",
          "2441:  _ struct{} `type:\"structure\"`",
          "2447: }",
          "",
          "[Removed Lines]",
          "2444:  FromTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\" required:\"true\"`",
          "2446:  ToTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "",
          "[Added Lines]",
          "2784:  FromTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "2789:  ToTime *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2484: type DescribeAccountOverviewOutput struct {",
          "2485:  _ struct{} `type:\"structure\"`",
          "2492: }",
          "",
          "[Removed Lines]",
          "2487:  MeanTimeToRecoverInMilliseconds *int64 `type:\"long\"`",
          "2489:  ProactiveInsights *int64 `type:\"integer\"`",
          "2491:  ReactiveInsights *int64 `type:\"integer\"`",
          "",
          "[Added Lines]",
          "2834:  MeanTimeToRecoverInMilliseconds *int64 `type:\"long\" required:\"true\"`",
          "2840:  ProactiveInsights *int64 `type:\"integer\" required:\"true\"`",
          "2846:  ReactiveInsights *int64 `type:\"integer\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2522: type DescribeAnomalyInput struct {",
          "2523:  _ struct{} `type:\"structure\"`",
          "2527: }",
          "",
          "[Removed Lines]",
          "2526:  Id *string `location:\"uri\" locationName:\"Id\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "2883:  Id *string `location:\"uri\" locationName:\"Id\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2591: type DescribeInsightInput struct {",
          "2592:  _ struct{} `type:\"structure\"`",
          "2596: }",
          "",
          "[Removed Lines]",
          "2595:  Id *string `location:\"uri\" locationName:\"Id\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "2956:  Id *string `location:\"uri\" locationName:\"Id\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2660: type DescribeResourceCollectionHealthInput struct {",
          "2661:  _ struct{} `type:\"structure\"`",
          "2667: }",
          "",
          "[Removed Lines]",
          "2663:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "2666:  ResourceCollectionType *string `location:\"uri\" locationName:\"ResourceCollectionType\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "3028:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"36\" type:\"string\"`",
          "3036:  ResourceCollectionType *string `location:\"uri\" locationName:\"ResourceCollectionType\" type:\"string\" required:\"true\" enum:\"ResourceCollectionType\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2680: func (s *DescribeResourceCollectionHealthInput) Validate() error {",
          "2681:  invalidParams := request.ErrInvalidParams{Context: \"DescribeResourceCollectionHealthInput\"}",
          "2682:  if s.ResourceCollectionType == nil {",
          "2683:   invalidParams.Add(request.NewErrParamRequired(\"ResourceCollectionType\"))",
          "2684:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3052:  if s.NextToken != nil && len(*s.NextToken) < 36 {",
          "3053:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 36))",
          "3054:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2707: type DescribeResourceCollectionHealthOutput struct {",
          "2708:  _ struct{} `type:\"structure\"`",
          "2712:  NextToken *string `min:\"36\" type:\"string\"`",
          "2713: }",
          "",
          "[Removed Lines]",
          "2710:  CloudFormation []*CloudFormationHealth `type:\"list\"`",
          "",
          "[Added Lines]",
          "3087:  CloudFormation []*CloudFormationHealth `type:\"list\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2770:  return s",
          "2771: }",
          "2773: type EndTimeRange struct {",
          "2774:  _ struct{} `type:\"structure\"`",
          "2779: }",
          "",
          "[Removed Lines]",
          "2776:  FromTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "2778:  ToTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "",
          "[Added Lines]",
          "3160:  FromTime *time.Time `type:\"timestamp\"`",
          "3163:  ToTime *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2800:  return s",
          "2801: }",
          "2803: type Event struct {",
          "2804:  _ struct{} `type:\"structure\"`",
          "2806:  DataSource *string `type:\"string\" enum:\"EventDataSource\"`",
          "2808:  EventClass *string `type:\"string\" enum:\"EventClass\"`",
          "2810:  EventSource *string `min:\"10\" type:\"string\"`",
          "2812:  Id *string `type:\"string\"`",
          "2814:  Name *string `type:\"string\"`",
          "2816:  ResourceCollection *ResourceCollection `type:\"structure\"`",
          "2818:  Resources []*EventResource `type:\"list\"`",
          "2821: }",
          "",
          "[Removed Lines]",
          "2820:  Time *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "",
          "[Added Lines]",
          "3221:  Time *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2916:  return s",
          "2917: }",
          "2919: type EventTimeRange struct {",
          "2920:  _ struct{} `type:\"structure\"`",
          "2927: }",
          "",
          "[Removed Lines]",
          "2923:  FromTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\" required:\"true\"`",
          "2926:  ToTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\" required:\"true\"`",
          "",
          "[Added Lines]",
          "3335:  FromTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "3340:  ToTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2967: type GetResourceCollectionInput struct {",
          "2968:  _ struct{} `type:\"structure\"`",
          "2974: }",
          "",
          "[Removed Lines]",
          "2970:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "2973:  ResourceCollectionType *string `location:\"uri\" locationName:\"ResourceCollectionType\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "3386:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" min:\"36\" type:\"string\"`",
          "3392:  ResourceCollectionType *string `location:\"uri\" locationName:\"ResourceCollectionType\" type:\"string\" required:\"true\" enum:\"ResourceCollectionType\"`",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2987: func (s *GetResourceCollectionInput) Validate() error {",
          "2988:  invalidParams := request.ErrInvalidParams{Context: \"GetResourceCollectionInput\"}",
          "2989:  if s.ResourceCollectionType == nil {",
          "2990:   invalidParams.Add(request.NewErrParamRequired(\"ResourceCollectionType\"))",
          "2991:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3408:  if s.NextToken != nil && len(*s.NextToken) < 36 {",
          "3409:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 36))",
          "3410:  }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3122:  return s",
          "3123: }",
          "3125: type InsightTimeRange struct {",
          "3126:  _ struct{} `type:\"structure\"`",
          "3132: }",
          "",
          "[Removed Lines]",
          "3128:  EndTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "3131:  StartTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\" required:\"true\"`",
          "",
          "[Added Lines]",
          "3566:  EndTime *time.Time `type:\"timestamp\"`",
          "3571:  StartTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3153:  return s",
          "3154: }",
          "3156: type InternalServerException struct {",
          "3157:  _            struct{}                  `type:\"structure\"`",
          "3158:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3160:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "3161: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3605:  RetryAfterSeconds *int64 `location:\"header\" locationName:\"Retry-After\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3195: }",
          "3197: func (s *InternalServerException) Error() string {",
          "3199: }",
          "",
          "[Removed Lines]",
          "3198:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "",
          "[Added Lines]",
          "3643:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3211: type ListAnomaliesForInsightInput struct {",
          "3212:  _ struct{} `type:\"structure\"`",
          "3217:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "3219:  NextToken *string `min:\"36\" type:\"string\"`",
          "3221:  StartTimeRange *StartTimeRange `type:\"structure\"`",
          "3222: }",
          "",
          "[Removed Lines]",
          "3215:  InsightId *string `location:\"uri\" locationName:\"InsightId\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "3662:  InsightId *string `location:\"uri\" locationName:\"InsightId\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3464: type ListEventsOutput struct {",
          "3465:  _ struct{} `type:\"structure\"`",
          "3469:  NextToken *string `min:\"36\" type:\"string\"`",
          "3470: }",
          "",
          "[Removed Lines]",
          "3467:  Events []*Event `type:\"list\"`",
          "",
          "[Added Lines]",
          "3945:  Events []*Event `type:\"list\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4047:  return s",
          "4048: }",
          "4050: type PredictionTimeRange struct {",
          "4051:  _ struct{} `type:\"structure\"`",
          "4057: }",
          "",
          "[Removed Lines]",
          "4053:  EndTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "4056:  StartTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\" required:\"true\"`",
          "",
          "[Added Lines]",
          "4621:  EndTime *time.Time `type:\"timestamp\"`",
          "4627:  StartTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "4078:  return s",
          "4079: }",
          "4081: type ProactiveAnomaly struct {",
          "4082:  _ struct{} `type:\"structure\"`",
          "4084:  AnomalyTimeRange *AnomalyTimeRange `type:\"structure\"`",
          "4086:  AssociatedInsightId *string `min:\"1\" type:\"string\"`",
          "4088:  Id *string `min:\"1\" type:\"string\"`",
          "4090:  Limit *float64 `type:\"double\"`",
          "4092:  PredictionTimeRange *PredictionTimeRange `type:\"structure\"`",
          "4094:  ResourceCollection *ResourceCollection `type:\"structure\"`",
          "4096:  Severity *string `type:\"string\" enum:\"AnomalySeverity\"`",
          "4098:  SourceDetails *AnomalySourceDetails `type:\"structure\"`",
          "4100:  Status *string `type:\"string\" enum:\"AnomalyStatus\"`",
          "4103: }",
          "",
          "[Removed Lines]",
          "4102:  UpdateTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "",
          "[Added Lines]",
          "4691:  UpdateTime *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "4172:  return s",
          "4173: }",
          "4175: type ProactiveAnomalySummary struct {",
          "4176:  _ struct{} `type:\"structure\"`",
          "4178:  AnomalyTimeRange *AnomalyTimeRange `type:\"structure\"`",
          "4180:  AssociatedInsightId *string `min:\"1\" type:\"string\"`",
          "4182:  Id *string `min:\"1\" type:\"string\"`",
          "4184:  Limit *float64 `type:\"double\"`",
          "4186:  PredictionTimeRange *PredictionTimeRange `type:\"structure\"`",
          "4188:  ResourceCollection *ResourceCollection `type:\"structure\"`",
          "4190:  Severity *string `type:\"string\" enum:\"AnomalySeverity\"`",
          "4192:  SourceDetails *AnomalySourceDetails `type:\"structure\"`",
          "4194:  Status *string `type:\"string\" enum:\"AnomalyStatus\"`",
          "4197: }",
          "",
          "[Removed Lines]",
          "4196:  UpdateTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "",
          "[Added Lines]",
          "4803:  UpdateTime *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "4974: type RemoveNotificationChannelInput struct {",
          "4975:  _ struct{} `type:\"structure\"`",
          "4979: }",
          "",
          "[Removed Lines]",
          "4978:  Id *string `location:\"uri\" locationName:\"Id\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "5701:  Id *string `location:\"uri\" locationName:\"Id\" min:\"36\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "4994:  if s.Id == nil {",
          "4995:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "4996:  }",
          "4999:  }",
          "5001:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "4997:  if s.Id != nil && len(*s.Id) < 1 {",
          "4998:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "",
          "[Added Lines]",
          "5720:  if s.Id != nil && len(*s.Id) < 36 {",
          "5721:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 36))",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "5395:  return s",
          "5396: }",
          "5398: type StartTimeRange struct {",
          "5399:  _ struct{} `type:\"structure\"`",
          "5404: }",
          "",
          "[Removed Lines]",
          "5401:  FromTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "5403:  ToTime *time.Time `type:\"timestamp\" timestampFormat:\"unixTimestamp\"`",
          "",
          "[Added Lines]",
          "6183:  FromTime *time.Time `type:\"timestamp\"`",
          "6186:  ToTime *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5425:  return s",
          "5426: }",
          "5428: type ThrottlingException struct {",
          "5429:  _            struct{}                  `type:\"structure\"`",
          "5430:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5432:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "5434:  QuotaCode *string `type:\"string\"`",
          "5436:  ServiceCode *string `type:\"string\"`",
          "5437: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6223:  RetryAfterSeconds *int64 `location:\"header\" locationName:\"Retry-After\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5969:  }",
          "5970: }",
          "5972: const (",
          "5974:  UpdateResourceCollectionActionAdd = \"ADD\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6792: const (",
          "6794:  ResourceCollectionTypeAwsCloudFormation = \"AWS_CLOUD_FORMATION\"",
          "6795: )",
          "6798: func ResourceCollectionType_Values() []string {",
          "6799:  return []string{",
          "6800:   ResourceCollectionTypeAwsCloudFormation,",
          "6801:  }",
          "6802: }",
          "",
          "---------------"
        ],
        "service/devopsguru/doc.go||service/devopsguru/doc.go": [
          "File: service/devopsguru/doc.go -> service/devopsguru/doc.go"
        ],
        "service/devopsguru/errors.go||service/devopsguru/errors.go": [
          "File: service/devopsguru/errors.go -> service/devopsguru/errors.go"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "123656:  InstanceTypeC5n18xlarge = \"c5n.18xlarge\"",
          "123659:  InstanceTypeC6gMetal = \"c6g.metal\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123659:  InstanceTypeC5nMetal = \"c5n.metal\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124399:   InstanceTypeC5n4xlarge,",
          "124400:   InstanceTypeC5n9xlarge,",
          "124401:   InstanceTypeC5n18xlarge,",
          "124402:   InstanceTypeC6gMetal,",
          "124403:   InstanceTypeC6gMedium,",
          "124404:   InstanceTypeC6gLarge,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124405:   InstanceTypeC5nMetal,",
          "",
          "---------------"
        ],
        "service/globalaccelerator/api.go||service/globalaccelerator/api.go": [
          "File: service/globalaccelerator/api.go -> service/globalaccelerator/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2522:   Name:       opListByoipCidrs,",
          "2523:   HTTPMethod: \"POST\",",
          "2524:   HTTPPath:   \"/\",",
          "2525:  }",
          "2527:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2525:   Paginator: &request.Paginator{",
          "2526:    InputTokens:     []string{\"NextToken\"},",
          "2527:    OutputTokens:    []string{\"NextToken\"},",
          "2528:    LimitToken:      \"MaxResults\",",
          "2529:    TruncationToken: \"\",",
          "2530:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2581:  return out, req.Send()",
          "2582: }",
          "2584: const opListCustomRoutingAccelerators = \"ListCustomRoutingAccelerators\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2607: func (c *GlobalAccelerator) ListByoipCidrsPages(input *ListByoipCidrsInput, fn func(*ListByoipCidrsOutput, bool) bool) error {",
          "2608:  return c.ListByoipCidrsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2609: }",
          "2618: func (c *GlobalAccelerator) ListByoipCidrsPagesWithContext(ctx aws.Context, input *ListByoipCidrsInput, fn func(*ListByoipCidrsOutput, bool) bool, opts ...request.Option) error {",
          "2619:  p := request.Pagination{",
          "2620:   NewRequest: func() (*request.Request, error) {",
          "2621:    var inCpy *ListByoipCidrsInput",
          "2622:    if input != nil {",
          "2623:     tmp := *input",
          "2624:     inCpy = &tmp",
          "2625:    }",
          "2626:    req, _ := c.ListByoipCidrsRequest(inCpy)",
          "2627:    req.SetContext(ctx)",
          "2628:    req.ApplyOptions(opts...)",
          "2629:    return req, nil",
          "2630:   },",
          "2631:  }",
          "2633:  for p.Next() {",
          "2634:   if !fn(p.Page().(*ListByoipCidrsOutput), !p.HasNextPage()) {",
          "2635:    break",
          "2636:   }",
          "2637:  }",
          "2639:  return p.Err()",
          "2640: }",
          "",
          "---------------"
        ],
        "service/globalaccelerator/globalacceleratoriface/interface.go||service/globalaccelerator/globalacceleratoriface/interface.go": [
          "File: service/globalaccelerator/globalacceleratoriface/interface.go -> service/globalaccelerator/globalacceleratoriface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:  ListByoipCidrsWithContext(aws.Context, *globalaccelerator.ListByoipCidrsInput, ...request.Option) (*globalaccelerator.ListByoipCidrsOutput, error)",
          "172:  ListByoipCidrsRequest(*globalaccelerator.ListByoipCidrsInput) (*request.Request, *globalaccelerator.ListByoipCidrsOutput)",
          "174:  ListCustomRoutingAccelerators(*globalaccelerator.ListCustomRoutingAcceleratorsInput) (*globalaccelerator.ListCustomRoutingAcceleratorsOutput, error)",
          "175:  ListCustomRoutingAcceleratorsWithContext(aws.Context, *globalaccelerator.ListCustomRoutingAcceleratorsInput, ...request.Option) (*globalaccelerator.ListCustomRoutingAcceleratorsOutput, error)",
          "176:  ListCustomRoutingAcceleratorsRequest(*globalaccelerator.ListCustomRoutingAcceleratorsInput) (*request.Request, *globalaccelerator.ListCustomRoutingAcceleratorsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:  ListByoipCidrsPages(*globalaccelerator.ListByoipCidrsInput, func(*globalaccelerator.ListByoipCidrsOutput, bool) bool) error",
          "175:  ListByoipCidrsPagesWithContext(aws.Context, *globalaccelerator.ListByoipCidrsInput, func(*globalaccelerator.ListByoipCidrsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9d4f9468a931e755f61f41d6238bbc618051742",
      "candidate_info": {
        "commit_hash": "c9d4f9468a931e755f61f41d6238bbc618051742",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/c9d4f9468a931e755f61f41d6238bbc618051742",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/databrew/2017-07-25/api-2.json",
          "models/apis/databrew/2017-07-25/docs-2.json",
          "models/apis/iot/2015-05-28/docs-2.json",
          "models/apis/managedblockchain/2018-09-24/api-2.json",
          "models/apis/managedblockchain/2018-09-24/docs-2.json",
          "models/apis/monitoring/2010-08-01/api-2.json",
          "models/apis/monitoring/2010-08-01/docs-2.json",
          "models/apis/robomaker/2018-06-29/api-2.json",
          "models/apis/robomaker/2018-06-29/docs-2.json",
          "models/apis/wellarchitected/2020-03-31/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/cloudwatch/api.go",
          "service/gluedatabrew/api.go",
          "service/iot/api.go",
          "service/managedblockchain/api.go",
          "service/managedblockchain/doc.go",
          "service/managedblockchain/errors.go",
          "service/managedblockchain/managedblockchainiface/interface.go",
          "service/robomaker/api.go",
          "service/wellarchitected/api.go",
          "service/wellarchitected/doc.go"
        ],
        "message": "Release v1.37.0 (2021-01-28) (#3761)\n\nRelease v1.37.0 (2021-01-28)\n===\n\n### Service Client Updates\n* `service/databrew`: Updates service API and documentation\n* `service/iot`: Updates service documentation\n  * Documentation updates for IoT DeleteOTAUpdate API\n* `service/managedblockchain`: Updates service API and documentation\n* `service/monitoring`: Updates service API and documentation\n  * Update to SDK to support label time zones in CloudWatch GetMetricData\n* `service/robomaker`: Updates service API and documentation\n* `service/wellarchitected`: Updates service documentation\n\n### SDK Features\n* `aws/credentials/ssocreds`: Add support for AWS Single Sign-On (SSO) Credential Provider ([#3755](https://github.com/aws/aws-sdk-go/pull/3755))\n* `aws/session`: Support has been added to resolve shared configuration profiles that are configured for AWS Single Sign-On (SSO) ([#3755](https://github.com/aws/aws-sdk-go/pull/3755))",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/cloudwatch/api.go||service/cloudwatch/api.go",
          "service/gluedatabrew/api.go||service/gluedatabrew/api.go",
          "service/iot/api.go||service/iot/api.go",
          "service/managedblockchain/api.go||service/managedblockchain/api.go",
          "service/managedblockchain/doc.go||service/managedblockchain/doc.go",
          "service/managedblockchain/errors.go||service/managedblockchain/errors.go",
          "service/managedblockchain/managedblockchainiface/interface.go||service/managedblockchain/managedblockchainiface/interface.go",
          "service/robomaker/api.go||service/robomaker/api.go",
          "service/wellarchitected/api.go||service/wellarchitected/api.go",
          "service/wellarchitected/doc.go||service/wellarchitected/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1438:     \"ca-central-1\":   endpoint{},",
          "1439:     \"eu-central-1\":   endpoint{},",
          "1440:     \"eu-north-1\":     endpoint{},",
          "1441:     \"eu-west-1\":      endpoint{},",
          "1442:     \"eu-west-2\":      endpoint{},",
          "1443:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1441:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3078:   \"fsx\": service{",
          "3080:    Endpoints: endpoints{",
          "3081:     \"ap-east-1\":      endpoint{},",
          "3082:     \"ap-northeast-1\": endpoint{},",
          "3083:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3082:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3087:     \"ca-central-1\":   endpoint{},",
          "3088:     \"eu-central-1\":   endpoint{},",
          "3089:     \"eu-north-1\":     endpoint{},",
          "3090:     \"eu-west-1\":      endpoint{},",
          "3091:     \"eu-west-2\":      endpoint{},",
          "3092:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3092:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3120:       Region: \"us-west-2\",",
          "3121:      },",
          "3122:     },",
          "3128:    },",
          "3129:   },",
          "3130:   \"gamelift\": service{",
          "",
          "[Removed Lines]",
          "3123:     \"sa-east-1\": endpoint{},",
          "3124:     \"us-east-1\": endpoint{},",
          "3125:     \"us-east-2\": endpoint{},",
          "3126:     \"us-west-1\": endpoint{},",
          "3127:     \"us-west-2\": endpoint{},",
          "",
          "[Added Lines]",
          "3126:     \"me-south-1\": endpoint{},",
          "3127:     \"sa-east-1\":  endpoint{},",
          "3128:     \"us-east-1\":  endpoint{},",
          "3129:     \"us-east-2\":  endpoint{},",
          "3130:     \"us-west-1\":  endpoint{},",
          "3131:     \"us-west-2\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3784:   \"lakeformation\": service{",
          "3786:    Endpoints: endpoints{",
          "3787:     \"ap-northeast-1\": endpoint{},",
          "3788:     \"ap-northeast-2\": endpoint{},",
          "3789:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3791:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9963:     },",
          "9964:    },",
          "9965:   },",
          "9966:   \"states\": service{",
          "9968:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9971:   \"ssm\": service{",
          "9973:    Endpoints: endpoints{",
          "9974:     \"us-iso-east-1\": endpoint{},",
          "9975:    },",
          "9976:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.36.33\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.37.0\"",
          "",
          "---------------"
        ],
        "service/cloudwatch/api.go||service/cloudwatch/api.go": [
          "File: service/cloudwatch/api.go -> service/cloudwatch/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5363:  EndTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "5367:  MaxDatapoints *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5368:  LabelOptions *LabelOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5463:  return s",
          "5464: }",
          "5467: func (s *GetMetricDataInput) SetMaxDatapoints(v int64) *GetMetricDataInput {",
          "5468:  s.MaxDatapoints = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: func (s *GetMetricDataInput) SetLabelOptions(v *LabelOptions) *GetMetricDataInput {",
          "5473:  s.LabelOptions = v",
          "5474:  return s",
          "5475: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6182:  return s",
          "6183: }",
          "6185: type ListDashboardsInput struct {",
          "6186:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6203: type LabelOptions struct {",
          "6204:  _ struct{} `type:\"structure\"`",
          "6211:  Timezone *string `type:\"string\"`",
          "6212: }",
          "6215: func (s LabelOptions) String() string {",
          "6216:  return awsutil.Prettify(s)",
          "6217: }",
          "6220: func (s LabelOptions) GoString() string {",
          "6221:  return s.String()",
          "6222: }",
          "6225: func (s *LabelOptions) SetTimezone(v string) *LabelOptions {",
          "6226:  s.Timezone = &v",
          "6227:  return s",
          "6228: }",
          "",
          "---------------"
        ],
        "service/gluedatabrew/api.go||service/gluedatabrew/api.go": [
          "File: service/gluedatabrew/api.go -> service/gluedatabrew/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4737:  return s",
          "4738: }",
          "4742: type DataCatalogInputDefinition struct {",
          "4743:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4838: type CsvOptions struct {",
          "4839:  _ struct{} `type:\"structure\"`",
          "4842:  Delimiter *string `min:\"1\" type:\"string\"`",
          "4843: }",
          "4846: func (s CsvOptions) String() string {",
          "4847:  return awsutil.Prettify(s)",
          "4848: }",
          "4851: func (s CsvOptions) GoString() string {",
          "4852:  return s.String()",
          "4853: }",
          "4856: func (s *CsvOptions) Validate() error {",
          "4857:  invalidParams := request.ErrInvalidParams{Context: \"CsvOptions\"}",
          "4858:  if s.Delimiter != nil && len(*s.Delimiter) < 1 {",
          "4859:   invalidParams.Add(request.NewErrParamMinLen(\"Delimiter\", 1))",
          "4860:  }",
          "4862:  if invalidParams.Len() > 0 {",
          "4863:   return invalidParams",
          "4864:  }",
          "4865:  return nil",
          "4866: }",
          "4869: func (s *CsvOptions) SetDelimiter(v string) *CsvOptions {",
          "4870:  s.Delimiter = &v",
          "4871:  return s",
          "4872: }",
          "4875: type CsvOutputOptions struct {",
          "4876:  _ struct{} `type:\"structure\"`",
          "4879:  Delimiter *string `min:\"1\" type:\"string\"`",
          "4880: }",
          "4883: func (s CsvOutputOptions) String() string {",
          "4884:  return awsutil.Prettify(s)",
          "4885: }",
          "4888: func (s CsvOutputOptions) GoString() string {",
          "4889:  return s.String()",
          "4890: }",
          "4893: func (s *CsvOutputOptions) Validate() error {",
          "4894:  invalidParams := request.ErrInvalidParams{Context: \"CsvOutputOptions\"}",
          "4895:  if s.Delimiter != nil && len(*s.Delimiter) < 1 {",
          "4896:   invalidParams.Add(request.NewErrParamMinLen(\"Delimiter\", 1))",
          "4897:  }",
          "4899:  if invalidParams.Len() > 0 {",
          "4900:   return invalidParams",
          "4901:  }",
          "4902:  return nil",
          "4903: }",
          "4906: func (s *CsvOutputOptions) SetDelimiter(v string) *CsvOutputOptions {",
          "4907:  s.Delimiter = &v",
          "4908:  return s",
          "4909: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6267:  return s",
          "6268: }",
          "6271: type FormatOptions struct {",
          "6272:  _ struct{} `type:\"structure\"`",
          "6275:  Excel *ExcelOptions `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6447:  Csv *CsvOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6292: func (s *FormatOptions) Validate() error {",
          "6293:  invalidParams := request.ErrInvalidParams{Context: \"FormatOptions\"}",
          "6294:  if s.Excel != nil {",
          "6295:   if err := s.Excel.Validate(); err != nil {",
          "6296:    invalidParams.AddNested(\"Excel\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6469:  if s.Csv != nil {",
          "6470:   if err := s.Csv.Validate(); err != nil {",
          "6471:    invalidParams.AddNested(\"Csv\", err.(request.ErrInvalidParams))",
          "6472:   }",
          "6473:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6303:  return nil",
          "6304: }",
          "6307: func (s *FormatOptions) SetExcel(v *ExcelOptions) *FormatOptions {",
          "6308:  s.Excel = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6487: func (s *FormatOptions) SetCsv(v *CsvOptions) *FormatOptions {",
          "6488:  s.Csv = v",
          "6489:  return s",
          "6490: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7557:  Format *string `type:\"string\" enum:\"OutputFormat\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7740:  FormatOptions *OutputFormatOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7585:  if s.Location == nil {",
          "7586:   invalidParams.Add(request.NewErrParamRequired(\"Location\"))",
          "7587:  }",
          "7588:  if s.Location != nil {",
          "7589:   if err := s.Location.Validate(); err != nil {",
          "7590:    invalidParams.AddNested(\"Location\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7771:  if s.FormatOptions != nil {",
          "7772:   if err := s.FormatOptions.Validate(); err != nil {",
          "7773:    invalidParams.AddNested(\"FormatOptions\", err.(request.ErrInvalidParams))",
          "7774:   }",
          "7775:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7609:  return s",
          "7610: }",
          "7613: func (s *Output) SetLocation(v *S3Location) *Output {",
          "7614:  s.Location = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7801: func (s *Output) SetFormatOptions(v *OutputFormatOptions) *Output {",
          "7802:  s.FormatOptions = v",
          "7803:  return s",
          "7804: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7627:  return s",
          "7628: }",
          "7631: type Project struct {",
          "7632:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7825: type OutputFormatOptions struct {",
          "7826:  _ struct{} `type:\"structure\"`",
          "7829:  Csv *CsvOutputOptions `type:\"structure\"`",
          "7830: }",
          "7833: func (s OutputFormatOptions) String() string {",
          "7834:  return awsutil.Prettify(s)",
          "7835: }",
          "7838: func (s OutputFormatOptions) GoString() string {",
          "7839:  return s.String()",
          "7840: }",
          "7843: func (s *OutputFormatOptions) Validate() error {",
          "7844:  invalidParams := request.ErrInvalidParams{Context: \"OutputFormatOptions\"}",
          "7845:  if s.Csv != nil {",
          "7846:   if err := s.Csv.Validate(); err != nil {",
          "7847:    invalidParams.AddNested(\"Csv\", err.(request.ErrInvalidParams))",
          "7848:   }",
          "7849:  }",
          "7851:  if invalidParams.Len() > 0 {",
          "7852:   return invalidParams",
          "7853:  }",
          "7854:  return nil",
          "7855: }",
          "7858: func (s *OutputFormatOptions) SetCsv(v *CsvOutputOptions) *OutputFormatOptions {",
          "7859:  s.Csv = v",
          "7860:  return s",
          "7861: }",
          "",
          "---------------"
        ],
        "service/iot/api.go||service/iot/api.go": [
          "File: service/iot/api.go -> service/iot/api.go"
        ],
        "service/managedblockchain/api.go||service/managedblockchain/api.go": [
          "File: service/managedblockchain/api.go -> service/managedblockchain/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1986:  return p.Err()",
          "1987: }",
          "1989: const opRejectInvitation = \"RejectInvitation\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1999: const opListTagsForResource = \"ListTagsForResource\"",
          "2025: func (c *ManagedBlockchain) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "2026:  op := &request.Operation{",
          "2027:   Name:       opListTagsForResource,",
          "2028:   HTTPMethod: \"GET\",",
          "2029:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2030:  }",
          "2032:  if input == nil {",
          "2033:   input = &ListTagsForResourceInput{}",
          "2034:  }",
          "2036:  output = &ListTagsForResourceOutput{}",
          "2037:  req = c.newRequest(op, input, output)",
          "2038:  return",
          "2039: }",
          "2076: func (c *ManagedBlockchain) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "2077:  req, out := c.ListTagsForResourceRequest(input)",
          "2078:  return out, req.Send()",
          "2079: }",
          "2090: func (c *ManagedBlockchain) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "2091:  req, out := c.ListTagsForResourceRequest(input)",
          "2092:  req.SetContext(ctx)",
          "2093:  req.ApplyOptions(opts...)",
          "2094:  return out, req.Send()",
          "2095: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2090:  return out, req.Send()",
          "2091: }",
          "2093: const opUpdateMember = \"UpdateMember\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2201: const opTagResource = \"TagResource\"",
          "2227: func (c *ManagedBlockchain) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "2228:  op := &request.Operation{",
          "2229:   Name:       opTagResource,",
          "2230:   HTTPMethod: \"POST\",",
          "2231:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2232:  }",
          "2234:  if input == nil {",
          "2235:   input = &TagResourceInput{}",
          "2236:  }",
          "2238:  output = &TagResourceOutput{}",
          "2239:  req = c.newRequest(op, input, output)",
          "2240:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2241:  return",
          "2242: }",
          "2287: func (c *ManagedBlockchain) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "2288:  req, out := c.TagResourceRequest(input)",
          "2289:  return out, req.Send()",
          "2290: }",
          "2301: func (c *ManagedBlockchain) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "2302:  req, out := c.TagResourceRequest(input)",
          "2303:  req.SetContext(ctx)",
          "2304:  req.ApplyOptions(opts...)",
          "2305:  return out, req.Send()",
          "2306: }",
          "2308: const opUntagResource = \"UntagResource\"",
          "2334: func (c *ManagedBlockchain) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "2335:  op := &request.Operation{",
          "2336:   Name:       opUntagResource,",
          "2337:   HTTPMethod: \"DELETE\",",
          "2338:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2339:  }",
          "2341:  if input == nil {",
          "2342:   input = &UntagResourceInput{}",
          "2343:  }",
          "2345:  output = &UntagResourceOutput{}",
          "2346:  req = c.newRequest(op, input, output)",
          "2347:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2348:  return",
          "2349: }",
          "2385: func (c *ManagedBlockchain) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "2386:  req, out := c.UntagResourceRequest(input)",
          "2387:  return out, req.Send()",
          "2388: }",
          "2399: func (c *ManagedBlockchain) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "2400:  req, out := c.UntagResourceRequest(input)",
          "2401:  req.SetContext(ctx)",
          "2402:  req.ApplyOptions(opts...)",
          "2403:  return out, req.Send()",
          "2404: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2674:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2998:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2780:  return s",
          "2781: }",
          "2784: func (s *CreateNetworkInput) SetVotingPolicy(v *VotingPolicy) *CreateNetworkInput {",
          "2785:  s.VotingPolicy = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3108: func (s *CreateNetworkInput) SetTags(v map[string]*string) *CreateNetworkInput {",
          "3109:  s.Tags = v",
          "3110:  return s",
          "3111: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2852:  NodeConfiguration *NodeConfiguration `type:\"structure\" required:\"true\"`",
          "2853: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3193:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2916:  return s",
          "2917: }",
          "2919: type CreateNodeOutput struct {",
          "2920:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3261: func (s *CreateNodeInput) SetTags(v map[string]*string) *CreateNodeInput {",
          "3262:  s.Tags = v",
          "3263:  return s",
          "3264: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2973:  NetworkId *string `location:\"uri\" locationName:\"networkId\" min:\"1\" type:\"string\" required:\"true\"`",
          "2974: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3333:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3046:  return s",
          "3047: }",
          "3049: type CreateProposalOutput struct {",
          "3050:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3410: func (s *CreateProposalInput) SetTags(v map[string]*string) *CreateProposalInput {",
          "3411:  s.Tags = v",
          "3412:  return s",
          "3413: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3731: type Invitation struct {",
          "3732:  _ struct{} `type:\"structure\"`",
          "3735:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4103:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3774:  return s.String()",
          "3775: }",
          "3778: func (s *Invitation) SetCreationDate(v time.Time) *Invitation {",
          "3779:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4149: func (s *Invitation) SetArn(v string) *Invitation {",
          "4150:  s.Arn = &v",
          "4151:  return s",
          "4152: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4481:  return s",
          "4482: }",
          "4485: type LogConfiguration struct {",
          "4486:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4861: type ListTagsForResourceInput struct {",
          "4862:  _ struct{} `type:\"structure\"`",
          "4869:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "4870: }",
          "4873: func (s ListTagsForResourceInput) String() string {",
          "4874:  return awsutil.Prettify(s)",
          "4875: }",
          "4878: func (s ListTagsForResourceInput) GoString() string {",
          "4879:  return s.String()",
          "4880: }",
          "4883: func (s *ListTagsForResourceInput) Validate() error {",
          "4884:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "4885:  if s.ResourceArn == nil {",
          "4886:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "4887:  }",
          "4888:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "4889:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "4890:  }",
          "4892:  if invalidParams.Len() > 0 {",
          "4893:   return invalidParams",
          "4894:  }",
          "4895:  return nil",
          "4896: }",
          "4899: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "4900:  s.ResourceArn = &v",
          "4901:  return s",
          "4902: }",
          "4904: type ListTagsForResourceOutput struct {",
          "4905:  _ struct{} `type:\"structure\"`",
          "4908:  Tags map[string]*string `type:\"map\"`",
          "4909: }",
          "4912: func (s ListTagsForResourceOutput) String() string {",
          "4913:  return awsutil.Prettify(s)",
          "4914: }",
          "4917: func (s ListTagsForResourceOutput) GoString() string {",
          "4918:  return s.String()",
          "4919: }",
          "4922: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "4923:  s.Tags = v",
          "4924:  return s",
          "4925: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4535: type Member struct {",
          "4536:  _ struct{} `type:\"structure\"`",
          "4539:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4984:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4578:  Status *string `type:\"string\" enum:\"MemberStatus\"`",
          "4579: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5031:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4588:  return s.String()",
          "4589: }",
          "4592: func (s *Member) SetCreationDate(v time.Time) *Member {",
          "4593:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5045: func (s *Member) SetArn(v string) *Member {",
          "5046:  s.Arn = &v",
          "5047:  return s",
          "5048: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4636:  return s",
          "4637: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5099: func (s *Member) SetTags(v map[string]*string) *Member {",
          "5100:  s.Tags = v",
          "5101:  return s",
          "5102: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4660:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4661: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5133:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4718:  return s",
          "4719: }",
          "4723: type MemberFabricAttributes struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5195: func (s *MemberConfiguration) SetTags(v map[string]*string) *MemberConfiguration {",
          "5196:  s.Tags = v",
          "5197:  return s",
          "5198: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4942: type MemberSummary struct {",
          "4943:  _ struct{} `type:\"structure\"`",
          "4946:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5427:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4989:  return s.String()",
          "4990: }",
          "4993: func (s *MemberSummary) SetCreationDate(v time.Time) *MemberSummary {",
          "4994:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5477: func (s *MemberSummary) SetArn(v string) *MemberSummary {",
          "5478:  s.Arn = &v",
          "5479:  return s",
          "5480: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "5029: type Network struct {",
          "5030:  _ struct{} `type:\"structure\"`",
          "5033:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5525:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "5054:  Status *string `type:\"string\" enum:\"NetworkStatus\"`",
          "5057:  VotingPolicy *VotingPolicy `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5557:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "5072:  return s.String()",
          "5073: }",
          "5076: func (s *Network) SetCreationDate(v time.Time) *Network {",
          "5077:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5579: func (s *Network) SetArn(v string) *Network {",
          "5580:  s.Arn = &v",
          "5581:  return s",
          "5582: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5120:  return s",
          "5121: }",
          "5124: func (s *Network) SetVotingPolicy(v *VotingPolicy) *Network {",
          "5125:  s.VotingPolicy = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5633: func (s *Network) SetTags(v map[string]*string) *Network {",
          "5634:  s.Tags = v",
          "5635:  return s",
          "5636: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5318: type NetworkSummary struct {",
          "5319:  _ struct{} `type:\"structure\"`",
          "5322:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5841:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "5350:  return s.String()",
          "5351: }",
          "5354: func (s *NetworkSummary) SetCreationDate(v time.Time) *NetworkSummary {",
          "5355:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5876: func (s *NetworkSummary) SetArn(v string) *NetworkSummary {",
          "5877:  s.Arn = &v",
          "5878:  return s",
          "5879: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "5396: type Node struct {",
          "5397:  _ struct{} `type:\"structure\"`",
          "5400:  AvailabilityZone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5930:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5432:  Status *string `type:\"string\" enum:\"NodeStatus\"`",
          "5433: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5974:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5442:  return s.String()",
          "5443: }",
          "5446: func (s *Node) SetAvailabilityZone(v string) *Node {",
          "5447:  s.AvailabilityZone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5988: func (s *Node) SetArn(v string) *Node {",
          "5989:  s.Arn = &v",
          "5990:  return s",
          "5991: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "5502:  return s",
          "5503: }",
          "5506: type NodeConfiguration struct {",
          "5507:  _ struct{} `type:\"structure\"`",
          "5510:  AvailabilityZone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6054: func (s *Node) SetTags(v map[string]*string) *Node {",
          "6055:  s.Tags = v",
          "6056:  return s",
          "6057: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "5755: type NodeSummary struct {",
          "5756:  _ struct{} `type:\"structure\"`",
          "5759:  AvailabilityZone *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6318:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "5781:  return s.String()",
          "5782: }",
          "5785: func (s *NodeSummary) SetAvailabilityZone(v string) *NodeSummary {",
          "5786:  s.AvailabilityZone = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6347: func (s *NodeSummary) SetArn(v string) *NodeSummary {",
          "6348:  s.Arn = &v",
          "6349:  return s",
          "6350: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "5821:  Actions *ProposalActions `type:\"structure\"`",
          "5824:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6394:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "5875:  Status *string `type:\"string\" enum:\"ProposalStatus\"`",
          "5878:  YesVoteCount *int64 `type:\"integer\"`",
          "5879: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6456:  Tags map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "5894:  return s",
          "5895: }",
          "5898: func (s *Proposal) SetCreationDate(v time.Time) *Proposal {",
          "5899:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6479: func (s *Proposal) SetArn(v string) *Proposal {",
          "6480:  s.Arn = &v",
          "6481:  return s",
          "6482: }",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "5954:  return s",
          "5955: }",
          "5958: func (s *Proposal) SetYesVoteCount(v int64) *Proposal {",
          "5959:  s.YesVoteCount = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6545: func (s *Proposal) SetTags(v map[string]*string) *Proposal {",
          "6546:  s.Tags = v",
          "6547:  return s",
          "6548: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6034: type ProposalSummary struct {",
          "6035:  _ struct{} `type:\"structure\"`",
          "6038:  CreationDate *time.Time `type:\"timestamp\" timestampFormat:\"iso8601\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6633:  Arn *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "6087:  return s.String()",
          "6088: }",
          "6091: func (s *ProposalSummary) SetCreationDate(v time.Time) *ProposalSummary {",
          "6092:  s.CreationDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6689: func (s *ProposalSummary) SetArn(v string) *ProposalSummary {",
          "6690:  s.Arn = &v",
          "6691:  return s",
          "6692: }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "6344:  return s.RespMetadata.RequestID",
          "6345: }",
          "6349: type ResourceNotFoundException struct {",
          "6350:  _            struct{}                  `type:\"structure\"`",
          "6351:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6353:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "6354: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6961:  ResourceName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "6388: }",
          "6390: func (s *ResourceNotFoundException) Error() string {",
          "6392: }",
          "",
          "[Removed Lines]",
          "6391:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "",
          "[Added Lines]",
          "6999:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "6458:  return s.RespMetadata.RequestID",
          "6459: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7069: type TagResourceInput struct {",
          "7070:  _ struct{} `type:\"structure\"`",
          "7077:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7084:  Tags map[string]*string `type:\"map\" required:\"true\"`",
          "7085: }",
          "7088: func (s TagResourceInput) String() string {",
          "7089:  return awsutil.Prettify(s)",
          "7090: }",
          "7093: func (s TagResourceInput) GoString() string {",
          "7094:  return s.String()",
          "7095: }",
          "7098: func (s *TagResourceInput) Validate() error {",
          "7099:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "7100:  if s.ResourceArn == nil {",
          "7101:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7102:  }",
          "7103:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7104:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "7105:  }",
          "7106:  if s.Tags == nil {",
          "7107:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "7108:  }",
          "7110:  if invalidParams.Len() > 0 {",
          "7111:   return invalidParams",
          "7112:  }",
          "7113:  return nil",
          "7114: }",
          "7117: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "7118:  s.ResourceArn = &v",
          "7119:  return s",
          "7120: }",
          "7123: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "7124:  s.Tags = v",
          "7125:  return s",
          "7126: }",
          "7128: type TagResourceOutput struct {",
          "7129:  _ struct{} `type:\"structure\"`",
          "7130: }",
          "7133: func (s TagResourceOutput) String() string {",
          "7134:  return awsutil.Prettify(s)",
          "7135: }",
          "7138: func (s TagResourceOutput) GoString() string {",
          "7139:  return s.String()",
          "7140: }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "6517:  return s.RespMetadata.RequestID",
          "6518: }",
          "6520: type UpdateMemberInput struct {",
          "6521:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7201: type TooManyTagsException struct {",
          "7202:  _            struct{}                  `type:\"structure\"`",
          "7203:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7205:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "7207:  ResourceName *string `min:\"1\" type:\"string\"`",
          "7208: }",
          "7211: func (s TooManyTagsException) String() string {",
          "7212:  return awsutil.Prettify(s)",
          "7213: }",
          "7216: func (s TooManyTagsException) GoString() string {",
          "7217:  return s.String()",
          "7218: }",
          "7220: func newErrorTooManyTagsException(v protocol.ResponseMetadata) error {",
          "7221:  return &TooManyTagsException{",
          "7222:   RespMetadata: v,",
          "7223:  }",
          "7224: }",
          "7227: func (s *TooManyTagsException) Code() string {",
          "7228:  return \"TooManyTagsException\"",
          "7229: }",
          "7232: func (s *TooManyTagsException) Message() string {",
          "7233:  if s.Message_ != nil {",
          "7234:   return *s.Message_",
          "7235:  }",
          "7236:  return \"\"",
          "7237: }",
          "7240: func (s *TooManyTagsException) OrigErr() error {",
          "7241:  return nil",
          "7242: }",
          "7244: func (s *TooManyTagsException) Error() string {",
          "7245:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "7246: }",
          "7249: func (s *TooManyTagsException) StatusCode() int {",
          "7250:  return s.RespMetadata.StatusCode",
          "7251: }",
          "7254: func (s *TooManyTagsException) RequestID() string {",
          "7255:  return s.RespMetadata.RequestID",
          "7256: }",
          "7258: type UntagResourceInput struct {",
          "7259:  _ struct{} `type:\"structure\"`",
          "7266:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7271:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" type:\"list\" required:\"true\"`",
          "7272: }",
          "7275: func (s UntagResourceInput) String() string {",
          "7276:  return awsutil.Prettify(s)",
          "7277: }",
          "7280: func (s UntagResourceInput) GoString() string {",
          "7281:  return s.String()",
          "7282: }",
          "7285: func (s *UntagResourceInput) Validate() error {",
          "7286:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "7287:  if s.ResourceArn == nil {",
          "7288:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7289:  }",
          "7290:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7291:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "7292:  }",
          "7293:  if s.TagKeys == nil {",
          "7294:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "7295:  }",
          "7297:  if invalidParams.Len() > 0 {",
          "7298:   return invalidParams",
          "7299:  }",
          "7300:  return nil",
          "7301: }",
          "7304: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "7305:  s.ResourceArn = &v",
          "7306:  return s",
          "7307: }",
          "7310: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "7311:  s.TagKeys = v",
          "7312:  return s",
          "7313: }",
          "7315: type UntagResourceOutput struct {",
          "7316:  _ struct{} `type:\"structure\"`",
          "7317: }",
          "7320: func (s UntagResourceOutput) String() string {",
          "7321:  return awsutil.Prettify(s)",
          "7322: }",
          "7325: func (s UntagResourceOutput) GoString() string {",
          "7326:  return s.String()",
          "7327: }",
          "",
          "---------------"
        ],
        "service/managedblockchain/doc.go||service/managedblockchain/doc.go": [
          "File: service/managedblockchain/doc.go -> service/managedblockchain/doc.go"
        ],
        "service/managedblockchain/errors.go||service/managedblockchain/errors.go": [
          "File: service/managedblockchain/errors.go -> service/managedblockchain/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  ErrCodeThrottlingException = \"ThrottlingException\"",
          "71: )",
          "73: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:  ErrCodeTooManyTagsException = \"TooManyTagsException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:  \"ResourceNotFoundException\":      newErrorResourceNotFoundException,",
          "81:  \"ResourceNotReadyException\":      newErrorResourceNotReadyException,",
          "82:  \"ThrottlingException\":            newErrorThrottlingException,",
          "83: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:  \"TooManyTagsException\":           newErrorTooManyTagsException,",
          "",
          "---------------"
        ],
        "service/managedblockchain/managedblockchainiface/interface.go||service/managedblockchain/managedblockchainiface/interface.go": [
          "File: service/managedblockchain/managedblockchainiface/interface.go -> service/managedblockchain/managedblockchainiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:  ListProposalsPages(*managedblockchain.ListProposalsInput, func(*managedblockchain.ListProposalsOutput, bool) bool) error",
          "143:  ListProposalsPagesWithContext(aws.Context, *managedblockchain.ListProposalsInput, func(*managedblockchain.ListProposalsOutput, bool) bool, ...request.Option) error",
          "145:  RejectInvitation(*managedblockchain.RejectInvitationInput) (*managedblockchain.RejectInvitationOutput, error)",
          "146:  RejectInvitationWithContext(aws.Context, *managedblockchain.RejectInvitationInput, ...request.Option) (*managedblockchain.RejectInvitationOutput, error)",
          "147:  RejectInvitationRequest(*managedblockchain.RejectInvitationInput) (*request.Request, *managedblockchain.RejectInvitationOutput)",
          "149:  UpdateMember(*managedblockchain.UpdateMemberInput) (*managedblockchain.UpdateMemberOutput, error)",
          "150:  UpdateMemberWithContext(aws.Context, *managedblockchain.UpdateMemberInput, ...request.Option) (*managedblockchain.UpdateMemberOutput, error)",
          "151:  UpdateMemberRequest(*managedblockchain.UpdateMemberInput) (*request.Request, *managedblockchain.UpdateMemberOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:  ListTagsForResource(*managedblockchain.ListTagsForResourceInput) (*managedblockchain.ListTagsForResourceOutput, error)",
          "146:  ListTagsForResourceWithContext(aws.Context, *managedblockchain.ListTagsForResourceInput, ...request.Option) (*managedblockchain.ListTagsForResourceOutput, error)",
          "147:  ListTagsForResourceRequest(*managedblockchain.ListTagsForResourceInput) (*request.Request, *managedblockchain.ListTagsForResourceOutput)",
          "153:  TagResource(*managedblockchain.TagResourceInput) (*managedblockchain.TagResourceOutput, error)",
          "154:  TagResourceWithContext(aws.Context, *managedblockchain.TagResourceInput, ...request.Option) (*managedblockchain.TagResourceOutput, error)",
          "155:  TagResourceRequest(*managedblockchain.TagResourceInput) (*request.Request, *managedblockchain.TagResourceOutput)",
          "157:  UntagResource(*managedblockchain.UntagResourceInput) (*managedblockchain.UntagResourceOutput, error)",
          "158:  UntagResourceWithContext(aws.Context, *managedblockchain.UntagResourceInput, ...request.Option) (*managedblockchain.UntagResourceOutput, error)",
          "159:  UntagResourceRequest(*managedblockchain.UntagResourceInput) (*request.Request, *managedblockchain.UntagResourceOutput)",
          "",
          "---------------"
        ],
        "service/robomaker/api.go||service/robomaker/api.go": [
          "File: service/robomaker/api.go -> service/robomaker/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14155:  LaunchConfig *LaunchConfig `locationName:\"launchConfig\" type:\"structure\" required:\"true\"`",
          "14156: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14158:  UploadConfigurations []*UploadConfiguration `locationName:\"uploadConfigurations\" type:\"list\"`",
          "14165:  UseDefaultUploadConfigurations *bool `locationName:\"useDefaultUploadConfigurations\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14185:    invalidParams.AddNested(\"LaunchConfig\", err.(request.ErrInvalidParams))",
          "14186:   }",
          "14187:  }",
          "14189:  if invalidParams.Len() > 0 {",
          "14190:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14198:  if s.UploadConfigurations != nil {",
          "14199:   for i, v := range s.UploadConfigurations {",
          "14200:    if v == nil {",
          "14201:     continue",
          "14202:    }",
          "14203:    if err := v.Validate(); err != nil {",
          "14204:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"UploadConfigurations\", i), err.(request.ErrInvalidParams))",
          "14205:    }",
          "14206:   }",
          "14207:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "14210:  return s",
          "14211: }",
          "14214: type RobotApplicationSummary struct {",
          "14215:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14234: func (s *RobotApplicationConfig) SetUploadConfigurations(v []*UploadConfiguration) *RobotApplicationConfig {",
          "14235:  s.UploadConfigurations = v",
          "14236:  return s",
          "14237: }",
          "14240: func (s *RobotApplicationConfig) SetUseDefaultUploadConfigurations(v bool) *RobotApplicationConfig {",
          "14241:  s.UseDefaultUploadConfigurations = &v",
          "14242:  return s",
          "14243: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "14557:  LaunchConfig *LaunchConfig `locationName:\"launchConfig\" type:\"structure\" required:\"true\"`",
          "14560:  WorldConfigs []*WorldConfig `locationName:\"worldConfigs\" type:\"list\"`",
          "14561: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14592:  UploadConfigurations []*UploadConfiguration `locationName:\"uploadConfigurations\" type:\"list\"`",
          "14599:  UseDefaultUploadConfigurations *bool `locationName:\"useDefaultUploadConfigurations\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "14590:    invalidParams.AddNested(\"LaunchConfig\", err.(request.ErrInvalidParams))",
          "14591:   }",
          "14592:  }",
          "14593:  if s.WorldConfigs != nil {",
          "14594:   for i, v := range s.WorldConfigs {",
          "14595:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14635:  if s.UploadConfigurations != nil {",
          "14636:   for i, v := range s.UploadConfigurations {",
          "14637:    if v == nil {",
          "14638:     continue",
          "14639:    }",
          "14640:    if err := v.Validate(); err != nil {",
          "14641:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"UploadConfigurations\", i), err.(request.ErrInvalidParams))",
          "14642:    }",
          "14643:   }",
          "14644:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "14625:  return s",
          "14626: }",
          "14629: func (s *SimulationApplicationConfig) SetWorldConfigs(v []*WorldConfig) *SimulationApplicationConfig {",
          "14630:  s.WorldConfigs = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14681: func (s *SimulationApplicationConfig) SetUploadConfigurations(v []*UploadConfiguration) *SimulationApplicationConfig {",
          "14682:  s.UploadConfigurations = v",
          "14683:  return s",
          "14684: }",
          "14687: func (s *SimulationApplicationConfig) SetUseDefaultUploadConfigurations(v bool) *SimulationApplicationConfig {",
          "14688:  s.UseDefaultUploadConfigurations = &v",
          "14689:  return s",
          "14690: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16748:  return s",
          "16749: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16818: type UploadConfiguration struct {",
          "16819:  _ struct{} `type:\"structure\"`",
          "16828:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "16836:  Path *string `locationName:\"path\" min:\"1\" type:\"string\" required:\"true\"`",
          "16856:  UploadBehavior *string `locationName:\"uploadBehavior\" type:\"string\" required:\"true\" enum:\"UploadBehavior\"`",
          "16857: }",
          "16860: func (s UploadConfiguration) String() string {",
          "16861:  return awsutil.Prettify(s)",
          "16862: }",
          "16865: func (s UploadConfiguration) GoString() string {",
          "16866:  return s.String()",
          "16867: }",
          "16870: func (s *UploadConfiguration) Validate() error {",
          "16871:  invalidParams := request.ErrInvalidParams{Context: \"UploadConfiguration\"}",
          "16872:  if s.Name == nil {",
          "16873:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "16874:  }",
          "16875:  if s.Name != nil && len(*s.Name) < 1 {",
          "16876:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "16877:  }",
          "16878:  if s.Path == nil {",
          "16879:   invalidParams.Add(request.NewErrParamRequired(\"Path\"))",
          "16880:  }",
          "16881:  if s.Path != nil && len(*s.Path) < 1 {",
          "16882:   invalidParams.Add(request.NewErrParamMinLen(\"Path\", 1))",
          "16883:  }",
          "16884:  if s.UploadBehavior == nil {",
          "16885:   invalidParams.Add(request.NewErrParamRequired(\"UploadBehavior\"))",
          "16886:  }",
          "16888:  if invalidParams.Len() > 0 {",
          "16889:   return invalidParams",
          "16890:  }",
          "16891:  return nil",
          "16892: }",
          "16895: func (s *UploadConfiguration) SetName(v string) *UploadConfiguration {",
          "16896:  s.Name = &v",
          "16897:  return s",
          "16898: }",
          "16901: func (s *UploadConfiguration) SetPath(v string) *UploadConfiguration {",
          "16902:  s.Path = &v",
          "16903:  return s",
          "16904: }",
          "16907: func (s *UploadConfiguration) SetUploadBehavior(v string) *UploadConfiguration {",
          "16908:  s.UploadBehavior = &v",
          "16909:  return s",
          "16910: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17655:  SimulationJobErrorCodeWrongRegionSimulationApplication = \"WrongRegionSimulationApplication\"",
          "17656: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17819:  SimulationJobErrorCodeUploadContentMismatchError = \"UploadContentMismatchError\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "17685:   SimulationJobErrorCodeWrongRegionS3output,",
          "17686:   SimulationJobErrorCodeWrongRegionRobotApplication,",
          "17687:   SimulationJobErrorCodeWrongRegionSimulationApplication,",
          "17688:  }",
          "17689: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17852:   SimulationJobErrorCodeUploadContentMismatchError,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "17752:  }",
          "17753: }",
          "17755: const (",
          "17757:  WorldExportJobErrorCodeInternalServiceError = \"InternalServiceError\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17920: const (",
          "17922:  UploadBehaviorUploadOnTerminate = \"UPLOAD_ON_TERMINATE\"",
          "17925:  UploadBehaviorUploadRollingAutoRemove = \"UPLOAD_ROLLING_AUTO_REMOVE\"",
          "17926: )",
          "17929: func UploadBehavior_Values() []string {",
          "17930:  return []string{",
          "17931:   UploadBehaviorUploadOnTerminate,",
          "17932:   UploadBehaviorUploadRollingAutoRemove,",
          "17933:  }",
          "17934: }",
          "",
          "---------------"
        ],
        "service/wellarchitected/api.go||service/wellarchitected/api.go": [
          "File: service/wellarchitected/api.go -> service/wellarchitected/api.go"
        ],
        "service/wellarchitected/doc.go||service/wellarchitected/doc.go": [
          "File: service/wellarchitected/doc.go -> service/wellarchitected/doc.go"
        ]
      }
    }
  ]
}