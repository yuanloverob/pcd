{
  "cve_id": "CVE-2021-43805",
  "cve_desc": "Solidus is a free, open-source ecommerce platform built on Rails. Versions of Solidus prior to 3.1.4, 3.0.4, and 2.11.13 have a denial of service vulnerability that could be exploited during a guest checkout. The regular expression used to validate a guest order's email was subject to exponential backtracking through a fragment like `a.a.` Versions 3.1.4, 3.0.4, and 2.11.13 have been patched to use a different regular expression. The maintainers added a check for email addresses that are no longer valid that will print information about any affected orders that exist. If a prompt upgrade is not an option, a workaround is available. It is possible to edit the file `config/application.rb` manually (with code provided by the maintainers in the GitHub Security Advisory) to check email validity.",
  "repo": "solidusio/solidus",
  "patch_hash": "9867153e01e3c3b898cdbcedd7b43375ea922401",
  "patch_info": {
    "commit_hash": "9867153e01e3c3b898cdbcedd7b43375ea922401",
    "repo": "solidusio/solidus",
    "commit_url": "https://github.com/solidusio/solidus/commit/9867153e01e3c3b898cdbcedd7b43375ea922401",
    "files": [
      "core/lib/spree/core/validators/email.rb",
      "core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
      "core/spec/lib/spree/core/validators/email_spec.rb",
      "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
    ],
    "message": "Merge pull request from GHSA-qxmr-qxh6-2cc9\n\nFix ReDos vulnerability on Spree::EmailValidator::EMAIL_REGEXP",
    "before_after_code_files": [
      "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
      "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
      "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
      "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
    ]
  },
  "patch_diff": {
    "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb": [
      "File: core/lib/spree/core/validators/email.rb -> core/lib/spree/core/validators/email.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:   #     end",
      "13:   #",
      "14:   class EmailValidator < ActiveModel::EachValidator",
      "17:     def validate_each(record, attribute, value)",
      "18:       unless EMAIL_REGEXP.match? value",
      "",
      "[Removed Lines]",
      "15:     EMAIL_REGEXP = /\\A([^@\\.]|[^@\\.]([^@\\s]*)[^@\\.])@([^@\\s]+\\.)+[^@\\s]+\\z/",
      "",
      "[Added Lines]",
      "15:     EMAIL_REGEXP = URI::MailTo::EMAIL_REGEXP",
      "",
      "---------------"
    ],
    "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake": [
      "File: core/lib/tasks/solidus/check_orders_with_invalid_email.rake -> core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: # frozen_string_literal: true",
      "3: namespace :solidus do",
      "4:   desc 'Prints orders with invalid email (after fix for GHSA-qxmr-qxh6-2cc9)'",
      "5:   task check_orders_with_invalid_email: :environment do",
      "6:     matches = Spree::Order.find_each.reduce([]) do |matches, order|",
      "7:       order.email.nil? || Spree::EmailValidator::EMAIL_REGEXP.match?(order.email) ? matches : matches + [order]",
      "8:     end",
      "9:     if matches.any?",
      "10:       puts 'Email / ID / Number'",
      "11:       puts(matches.map do |order|",
      "12:         \"#{order.email} / #{order.id} / #{order.number}\"",
      "13:       end.join(\"\\n\"))",
      "14:     else",
      "15:       puts 'NO MATCHES'",
      "16:     end",
      "17:   end",
      "18: end",
      "",
      "---------------"
    ],
    "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb": [
      "File: core/spec/lib/spree/core/validators/email_spec.rb -> core/spec/lib/spree/core/validators/email_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "24:   let(:invalid_emails) {",
      "25:     [",
      "26:       'invalid email@email.com',",
      "29:       '@email.com',",
      "31:       'invalidemailemail.com',",
      "32:       '@invalid.email@email.com',",
      "33:       'invalid@email@email.com',",
      "",
      "[Removed Lines]",
      "27:       '.invalid.email@email.com',",
      "28:       'invalid.email.@email.com',",
      "30:       '.@email.com',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35:     ]",
      "36:   }",
      "39:     tester = Tester.new",
      "40:     valid_emails.each do |email|",
      "41:       tester.email_address = email",
      "43:     end",
      "44:   end",
      "47:     tester = Tester.new",
      "48:     invalid_emails.each do |email|",
      "49:       tester.email_address = email",
      "51:     end",
      "52:   end",
      "53: end",
      "",
      "[Removed Lines]",
      "38:   it 'validates valid email addresses' do",
      "42:       expect(tester.valid?).to be true",
      "46:   it 'validates invalid email addresses' do",
      "50:       expect(tester.valid?).to be false",
      "",
      "[Added Lines]",
      "35:   it 'validates valid email addresses', :aggregate_failures do",
      "39:       expect(tester.valid?).to be(true), \"expected #{email} to be valid\"",
      "43:   it 'validates invalid email addresses', :aggregate_failures do",
      "47:       expect(tester.valid?).to be(false), \"expected #{email} not to be valid\"",
      "",
      "---------------"
    ],
    "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb": [
      "File: core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb -> core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: # frozen_string_literal: true",
      "3: require 'rails_helper'",
      "5: path = Spree::Core::Engine.root.join('lib/tasks/solidus/check_orders_with_invalid_email.rake')",
      "7: RSpec.describe 'solidus' do",
      "8:   describe 'check_orders_with_invalid_email' do",
      "9:     include_context(",
      "10:       'rake',",
      "11:       task_path: path,",
      "12:       task_name: 'solidus:check_orders_with_invalid_email'",
      "13:     )",
      "15:     it 'includes orders with invalid email' do",
      "16:       order = create(:order)",
      "17:       order.update_column(:email, 'invalid email@email.com')",
      "19:       expect { task.invoke }.to output(/invalid email@email.com \\/ #{order.id} \\/ #{order.number}\\n/).to_stdout",
      "20:     end",
      "22:     it \"doesn't include orders with valid email\" do",
      "23:       order = create(:order, email: 'valid@email.com')",
      "25:       expect { task.invoke }.not_to output(/valid@email.com/).to_stdout",
      "26:     end",
      "28:     it \"doesn't include orders with no email\" do",
      "29:       order = create(:order, user: nil, email: nil, number: '123')",
      "31:       expect { task.invoke }.not_to output(/#{order.number}/).to_stdout",
      "32:     end",
      "34:     it \"prints message when no matches found\" do",
      "35:       expect { task.invoke }.to output(/NO MATCHES/).to_stdout",
      "36:     end",
      "37:   end",
      "38: end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f44070561f91a3617a6442e4c5062c15f53b8590",
      "candidate_info": {
        "commit_hash": "f44070561f91a3617a6442e4c5062c15f53b8590",
        "repo": "solidusio/solidus",
        "commit_url": "https://github.com/solidusio/solidus/commit/f44070561f91a3617a6442e4c5062c15f53b8590",
        "files": [
          "core/lib/spree/core/validators/email.rb",
          "core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "core/spec/lib/spree/core/validators/email_spec.rb",
          "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
        ],
        "message": "Merge pull request from GHSA-qxmr-qxh6-2cc9\n\nFix ReDos vulnerability on Spree::EmailValidator::EMAIL_REGEXP",
        "before_after_code_files": [
          "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
          "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
          "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
            "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
            "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
            "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
          ],
          "candidate": [
            "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
            "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
            "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
            "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb": [
          "File: core/lib/spree/core/validators/email.rb -> core/lib/spree/core/validators/email.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   #     end",
          "13:   #",
          "14:   class EmailValidator < ActiveModel::EachValidator",
          "17:     def validate_each(record, attribute, value)",
          "18:       unless EMAIL_REGEXP.match? value",
          "",
          "[Removed Lines]",
          "15:     EMAIL_REGEXP = /\\A([^@\\.]|[^@\\.]([^@\\s]*)[^@\\.])@([^@\\s]+\\.)+[^@\\s]+\\z/",
          "",
          "[Added Lines]",
          "15:     EMAIL_REGEXP = URI::MailTo::EMAIL_REGEXP",
          "",
          "---------------"
        ],
        "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake": [
          "File: core/lib/tasks/solidus/check_orders_with_invalid_email.rake -> core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: namespace :solidus do",
          "4:   desc 'Prints orders with invalid email (after fix for GHSA-qxmr-qxh6-2cc9)'",
          "5:   task check_orders_with_invalid_email: :environment do",
          "6:     matches = Spree::Order.find_each.reduce([]) do |matches, order|",
          "7:       order.email.nil? || Spree::EmailValidator::EMAIL_REGEXP.match?(order.email) ? matches : matches + [order]",
          "8:     end",
          "9:     if matches.any?",
          "10:       puts 'Email / ID / Number'",
          "11:       puts(matches.map do |order|",
          "12:         \"#{order.email} / #{order.id} / #{order.number}\"",
          "13:       end.join(\"\\n\"))",
          "14:     else",
          "15:       puts 'NO MATCHES'",
          "16:     end",
          "17:   end",
          "18: end",
          "",
          "---------------"
        ],
        "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb": [
          "File: core/spec/lib/spree/core/validators/email_spec.rb -> core/spec/lib/spree/core/validators/email_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   let(:invalid_emails) {",
          "25:     [",
          "26:       'invalid email@email.com',",
          "29:       '@email.com',",
          "31:       'invalidemailemail.com',",
          "32:       '@invalid.email@email.com',",
          "33:       'invalid@email@email.com',",
          "",
          "[Removed Lines]",
          "27:       '.invalid.email@email.com',",
          "28:       'invalid.email.@email.com',",
          "30:       '.@email.com',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:     ]",
          "36:   }",
          "39:     tester = Tester.new",
          "40:     valid_emails.each do |email|",
          "41:       tester.email_address = email",
          "43:     end",
          "44:   end",
          "47:     tester = Tester.new",
          "48:     invalid_emails.each do |email|",
          "49:       tester.email_address = email",
          "51:     end",
          "52:   end",
          "53: end",
          "",
          "[Removed Lines]",
          "38:   it 'validates valid email addresses' do",
          "42:       expect(tester.valid?).to be true",
          "46:   it 'validates invalid email addresses' do",
          "50:       expect(tester.valid?).to be false",
          "",
          "[Added Lines]",
          "35:   it 'validates valid email addresses', :aggregate_failures do",
          "39:       expect(tester.valid?).to be(true), \"expected #{email} to be valid\"",
          "43:   it 'validates invalid email addresses', :aggregate_failures do",
          "47:       expect(tester.valid?).to be(false), \"expected #{email} not to be valid\"",
          "",
          "---------------"
        ],
        "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb": [
          "File: core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb -> core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: require 'rails_helper'",
          "5: path = Spree::Core::Engine.root.join('lib/tasks/solidus/check_orders_with_invalid_email.rake')",
          "7: RSpec.describe 'solidus' do",
          "8:   describe 'check_orders_with_invalid_email' do",
          "9:     include_context(",
          "10:       'rake',",
          "11:       task_path: path,",
          "12:       task_name: 'solidus:check_orders_with_invalid_email'",
          "13:     )",
          "15:     it 'includes orders with invalid email' do",
          "16:       order = create(:order)",
          "17:       order.update_column(:email, 'invalid email@email.com')",
          "19:       expect { task.invoke }.to output(/invalid email@email.com \\/ #{order.id} \\/ #{order.number}\\n/).to_stdout",
          "20:     end",
          "22:     it \"doesn't include orders with valid email\" do",
          "23:       order = create(:order, email: 'valid@email.com')",
          "25:       expect { task.invoke }.not_to output(/valid@email.com/).to_stdout",
          "26:     end",
          "28:     it \"doesn't include orders with no email\" do",
          "29:       order = create(:order, user: nil, email: nil, number: '123')",
          "31:       expect { task.invoke }.not_to output(/#{order.number}/).to_stdout",
          "32:     end",
          "34:     it \"prints message when no matches found\" do",
          "35:       expect { task.invoke }.to output(/NO MATCHES/).to_stdout",
          "36:     end",
          "37:   end",
          "38: end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c1158d792d482fc49857e56002a7b5ebbaab607d",
      "candidate_info": {
        "commit_hash": "c1158d792d482fc49857e56002a7b5ebbaab607d",
        "repo": "solidusio/solidus",
        "commit_url": "https://github.com/solidusio/solidus/commit/c1158d792d482fc49857e56002a7b5ebbaab607d",
        "files": [
          "core/lib/spree/core/validators/email.rb",
          "core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "core/spec/lib/spree/core/validators/email_spec.rb",
          "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
        ],
        "message": "Merge pull request from GHSA-qxmr-qxh6-2cc9\n\nFix ReDos vulnerability on Spree::EmailValidator::EMAIL_REGEXP",
        "before_after_code_files": [
          "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
          "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
          "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
            "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
            "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
            "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
          ],
          "candidate": [
            "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
            "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
            "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
            "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb": [
          "File: core/lib/spree/core/validators/email.rb -> core/lib/spree/core/validators/email.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   #     end",
          "13:   #",
          "14:   class EmailValidator < ActiveModel::EachValidator",
          "17:     def validate_each(record, attribute, value)",
          "18:       unless EMAIL_REGEXP.match? value",
          "",
          "[Removed Lines]",
          "15:     EMAIL_REGEXP = /\\A([^@\\.]|[^@\\.]([^@\\s]*)[^@\\.])@([^@\\s]+\\.)+[^@\\s]+\\z/",
          "",
          "[Added Lines]",
          "15:     EMAIL_REGEXP = URI::MailTo::EMAIL_REGEXP",
          "",
          "---------------"
        ],
        "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake": [
          "File: core/lib/tasks/solidus/check_orders_with_invalid_email.rake -> core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: namespace :solidus do",
          "4:   desc 'Prints orders with invalid email (after fix for GHSA-qxmr-qxh6-2cc9)'",
          "5:   task check_orders_with_invalid_email: :environment do",
          "6:     matches = Spree::Order.find_each.reduce([]) do |matches, order|",
          "7:       order.email.nil? || Spree::EmailValidator::EMAIL_REGEXP.match?(order.email) ? matches : matches + [order]",
          "8:     end",
          "9:     if matches.any?",
          "10:       puts 'Email / ID / Number'",
          "11:       puts(matches.map do |order|",
          "12:         \"#{order.email} / #{order.id} / #{order.number}\"",
          "13:       end.join(\"\\n\"))",
          "14:     else",
          "15:       puts 'NO MATCHES'",
          "16:     end",
          "17:   end",
          "18: end",
          "",
          "---------------"
        ],
        "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb": [
          "File: core/spec/lib/spree/core/validators/email_spec.rb -> core/spec/lib/spree/core/validators/email_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   let(:invalid_emails) {",
          "25:     [",
          "26:       'invalid email@email.com',",
          "29:       '@email.com',",
          "31:       'invalidemailemail.com',",
          "32:       '@invalid.email@email.com',",
          "33:       'invalid@email@email.com',",
          "",
          "[Removed Lines]",
          "27:       '.invalid.email@email.com',",
          "28:       'invalid.email.@email.com',",
          "30:       '.@email.com',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:     ]",
          "36:   }",
          "39:     tester = Tester.new",
          "40:     valid_emails.each do |email|",
          "41:       tester.email_address = email",
          "43:     end",
          "44:   end",
          "47:     tester = Tester.new",
          "48:     invalid_emails.each do |email|",
          "49:       tester.email_address = email",
          "51:     end",
          "52:   end",
          "53: end",
          "",
          "[Removed Lines]",
          "38:   it 'validates valid email addresses' do",
          "42:       expect(tester.valid?).to be true",
          "46:   it 'validates invalid email addresses' do",
          "50:       expect(tester.valid?).to be false",
          "",
          "[Added Lines]",
          "35:   it 'validates valid email addresses', :aggregate_failures do",
          "39:       expect(tester.valid?).to be(true), \"expected #{email} to be valid\"",
          "43:   it 'validates invalid email addresses', :aggregate_failures do",
          "47:       expect(tester.valid?).to be(false), \"expected #{email} not to be valid\"",
          "",
          "---------------"
        ],
        "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb": [
          "File: core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb -> core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: require 'rails_helper'",
          "5: path = Spree::Core::Engine.root.join('lib/tasks/solidus/check_orders_with_invalid_email.rake')",
          "7: RSpec.describe 'solidus' do",
          "8:   describe 'check_orders_with_invalid_email' do",
          "9:     include_context(",
          "10:       'rake',",
          "11:       task_path: path,",
          "12:       task_name: 'solidus:check_orders_with_invalid_email'",
          "13:     )",
          "15:     it 'includes orders with invalid email' do",
          "16:       order = create(:order)",
          "17:       order.update_column(:email, 'invalid email@email.com')",
          "19:       expect { task.invoke }.to output(/invalid email@email.com \\/ #{order.id} \\/ #{order.number}\\n/).to_stdout",
          "20:     end",
          "22:     it \"doesn't include orders with valid email\" do",
          "23:       order = create(:order, email: 'valid@email.com')",
          "25:       expect { task.invoke }.not_to output(/valid@email.com/).to_stdout",
          "26:     end",
          "28:     it \"doesn't include orders with no email\" do",
          "29:       order = create(:order, user: nil, email: nil, number: '123')",
          "31:       expect { task.invoke }.not_to output(/#{order.number}/).to_stdout",
          "32:     end",
          "34:     it \"prints message when no matches found\" do",
          "35:       expect { task.invoke }.to output(/NO MATCHES/).to_stdout",
          "36:     end",
          "37:   end",
          "38: end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6be174c955fad84017ca67589c676526bc5ade71",
      "candidate_info": {
        "commit_hash": "6be174c955fad84017ca67589c676526bc5ade71",
        "repo": "solidusio/solidus",
        "commit_url": "https://github.com/solidusio/solidus/commit/6be174c955fad84017ca67589c676526bc5ade71",
        "files": [
          "core/lib/spree/core/validators/email.rb",
          "core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "core/spec/lib/spree/core/validators/email_spec.rb",
          "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
        ],
        "message": "Merge pull request from GHSA-qxmr-qxh6-2cc9\n\nFix ReDos vulnerability on Spree::EmailValidator::EMAIL_REGEXP",
        "before_after_code_files": [
          "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
          "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
          "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
            "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
            "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
            "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
          ],
          "candidate": [
            "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb",
            "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
            "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb",
            "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "core/lib/spree/core/validators/email.rb||core/lib/spree/core/validators/email.rb": [
          "File: core/lib/spree/core/validators/email.rb -> core/lib/spree/core/validators/email.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   #     end",
          "13:   #",
          "14:   class EmailValidator < ActiveModel::EachValidator",
          "17:     def validate_each(record, attribute, value)",
          "18:       unless EMAIL_REGEXP.match? value",
          "",
          "[Removed Lines]",
          "15:     EMAIL_REGEXP = /\\A([^@\\.]|[^@\\.]([^@\\s]*)[^@\\.])@([^@\\s]+\\.)+[^@\\s]+\\z/",
          "",
          "[Added Lines]",
          "15:     EMAIL_REGEXP = URI::MailTo::EMAIL_REGEXP",
          "",
          "---------------"
        ],
        "core/lib/tasks/solidus/check_orders_with_invalid_email.rake||core/lib/tasks/solidus/check_orders_with_invalid_email.rake": [
          "File: core/lib/tasks/solidus/check_orders_with_invalid_email.rake -> core/lib/tasks/solidus/check_orders_with_invalid_email.rake",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: namespace :solidus do",
          "4:   desc 'Prints orders with invalid email (after fix for GHSA-qxmr-qxh6-2cc9)'",
          "5:   task check_orders_with_invalid_email: :environment do",
          "6:     matches = Spree::Order.find_each.reduce([]) do |matches, order|",
          "7:       order.email.nil? || Spree::EmailValidator::EMAIL_REGEXP.match?(order.email) ? matches : matches + [order]",
          "8:     end",
          "9:     if matches.any?",
          "10:       puts 'Email / ID / Number'",
          "11:       puts(matches.map do |order|",
          "12:         \"#{order.email} / #{order.id} / #{order.number}\"",
          "13:       end.join(\"\\n\"))",
          "14:     else",
          "15:       puts 'NO MATCHES'",
          "16:     end",
          "17:   end",
          "18: end",
          "",
          "---------------"
        ],
        "core/spec/lib/spree/core/validators/email_spec.rb||core/spec/lib/spree/core/validators/email_spec.rb": [
          "File: core/spec/lib/spree/core/validators/email_spec.rb -> core/spec/lib/spree/core/validators/email_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   let(:invalid_emails) {",
          "25:     [",
          "26:       'invalid email@email.com',",
          "29:       '@email.com',",
          "31:       'invalidemailemail.com',",
          "32:       '@invalid.email@email.com',",
          "33:       'invalid@email@email.com',",
          "",
          "[Removed Lines]",
          "27:       '.invalid.email@email.com',",
          "28:       'invalid.email.@email.com',",
          "30:       '.@email.com',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:     ]",
          "36:   }",
          "39:     tester = Tester.new",
          "40:     valid_emails.each do |email|",
          "41:       tester.email_address = email",
          "43:     end",
          "44:   end",
          "47:     tester = Tester.new",
          "48:     invalid_emails.each do |email|",
          "49:       tester.email_address = email",
          "51:     end",
          "52:   end",
          "53: end",
          "",
          "[Removed Lines]",
          "38:   it 'validates valid email addresses' do",
          "42:       expect(tester.valid?).to be true",
          "46:   it 'validates invalid email addresses' do",
          "50:       expect(tester.valid?).to be false",
          "",
          "[Added Lines]",
          "35:   it 'validates valid email addresses', :aggregate_failures do",
          "39:       expect(tester.valid?).to be(true), \"expected #{email} to be valid\"",
          "43:   it 'validates invalid email addresses', :aggregate_failures do",
          "47:       expect(tester.valid?).to be(false), \"expected #{email} not to be valid\"",
          "",
          "---------------"
        ],
        "core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb||core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb": [
          "File: core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb -> core/spec/lib/tasks/solidus/check_orders_with_invalid_email_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: require 'rails_helper'",
          "5: path = Spree::Core::Engine.root.join('lib/tasks/solidus/check_orders_with_invalid_email.rake')",
          "7: RSpec.describe 'solidus' do",
          "8:   describe 'check_orders_with_invalid_email' do",
          "9:     include_context(",
          "10:       'rake',",
          "11:       task_path: path,",
          "12:       task_name: 'solidus:check_orders_with_invalid_email'",
          "13:     )",
          "15:     it 'includes orders with invalid email' do",
          "16:       order = create(:order)",
          "17:       order.update_column(:email, 'invalid email@email.com')",
          "19:       expect { task.invoke }.to output(/invalid email@email.com \\/ #{order.id} \\/ #{order.number}\\n/).to_stdout",
          "20:     end",
          "22:     it \"doesn't include orders with valid email\" do",
          "23:       order = create(:order, email: 'valid@email.com')",
          "25:       expect { task.invoke }.not_to output(/valid@email.com/).to_stdout",
          "26:     end",
          "28:     it \"doesn't include orders with no email\" do",
          "29:       order = create(:order, user: nil, email: nil, number: '123')",
          "31:       expect { task.invoke }.not_to output(/#{order.number}/).to_stdout",
          "32:     end",
          "34:     it \"prints message when no matches found\" do",
          "35:       expect { task.invoke }.to output(/NO MATCHES/).to_stdout",
          "36:     end",
          "37:   end",
          "38: end",
          "",
          "---------------"
        ]
      }
    }
  ]
}