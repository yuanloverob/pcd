{
  "cve_id": "CVE-2021-3583",
  "cve_desc": "A flaw was found in Ansible, where a user's controller is vulnerable to template injection. This issue can occur through facts used in the template if the user is trying to put templates in multi-line YAML strings and the facts being handled do not routinely include special template characters. This flaw allows attackers to perform command injection, which discloses sensitive information. The highest threat from this vulnerability is to confidentiality and integrity.",
  "repo": "ansible/ansible",
  "patch_hash": "8aa850e3573e48c9a2f12aef84e8a3a6f5ba4847",
  "patch_info": {
    "commit_hash": "8aa850e3573e48c9a2f12aef84e8a3a6f5ba4847",
    "repo": "ansible/ansible",
    "commit_url": "https://github.com/ansible/ansible/commit/8aa850e3573e48c9a2f12aef84e8a3a6f5ba4847",
    "files": [
      "changelogs/fragments/fix_unsafe_newline.yml",
      "lib/ansible/template/__init__.py",
      "test/integration/targets/template/runme.sh",
      "test/integration/targets/template/unsafe.yml"
    ],
    "message": "fix unsafe preservation across newlines (#74960) (#74975)\n\n  CVE-2021-3583\n  ensure we always have unsafe\n\nCo-authored-by: Rick Elrod <rick@elrod.me>\n(cherry picked from commit 4c8c40fd3d4a58defdc80e7d22aa8d26b731353e)",
    "before_after_code_files": [
      "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
      "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
    ]
  },
  "patch_diff": {
    "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
      "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1065:             try:",
      "1066:                 res = j2_concat(rf)",
      "1068:                     res = wrap_var(res)",
      "1069:             except TypeError as te:",
      "1070:                 if 'AnsibleUndefined' in to_native(te):",
      "",
      "[Removed Lines]",
      "1067:                 if getattr(new_context, 'unsafe', False):",
      "",
      "[Added Lines]",
      "1067:                 unsafe = getattr(new_context, 'unsafe', False)",
      "1068:                 if unsafe:",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1094:                 res_newlines = _count_newlines_from_end(res)",
      "1095:                 if data_newlines > res_newlines:",
      "1096:                     res += self.environment.newline_sequence * (data_newlines - res_newlines)",
      "1097:             return res",
      "1098:         except (UndefinedError, AnsibleUndefinedVariable) as e:",
      "1099:             if fail_on_undefined:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1098:                     if unsafe:",
      "1099:                         res = wrap_var(res)",
      "",
      "---------------"
    ],
    "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh": [
      "File: test/integration/targets/template/runme.sh -> test/integration/targets/template/runme.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: # https://github.com/ansible/ansible/issues/72262",
      "36: ansible-playbook 72262.yml -v \"$@\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "38: # ensure unsafe is preserved, even with extra newlines",
      "39: ansible-playbook unsafe.yml -v \"$@\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03aff644cc1c00e1f7551195c68fbd0d13a39e6e",
      "candidate_info": {
        "commit_hash": "03aff644cc1c00e1f7551195c68fbd0d13a39e6e",
        "repo": "ansible/ansible",
        "commit_url": "https://github.com/ansible/ansible/commit/03aff644cc1c00e1f7551195c68fbd0d13a39e6e",
        "files": [
          "changelogs/fragments/fix_unsafe_newline.yml",
          "lib/ansible/template/__init__.py",
          "test/integration/targets/template/runme.sh",
          "test/integration/targets/template/unsafe.yml"
        ],
        "message": "fix unsafe preservation across newlines (#74960) (#74973)\n\n  CVE-2021-3583\n  ensure we always have unsafe\n\nCo-authored-by: Rick Elrod <rick@elrod.me>\n(cherry picked from commit 4c8c40fd3d4a58defdc80e7d22aa8d26b731353e)",
        "before_after_code_files": [
          "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
          "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
            "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
          ],
          "candidate": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
            "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
          ]
        }
      },
      "candidate_diff": {
        "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
          "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1092:                     res = ansible_native_concat(rf)",
          "1093:                 else:",
          "1094:                     res = j2_concat(rf)",
          "1096:                     res = wrap_var(res)",
          "1097:             except TypeError as te:",
          "1098:                 if 'AnsibleUndefined' in to_native(te):",
          "",
          "[Removed Lines]",
          "1095:                 if getattr(new_context, 'unsafe', False):",
          "",
          "[Added Lines]",
          "1095:                 unsafe = getattr(new_context, 'unsafe', False)",
          "1096:                 if unsafe:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1122:                 res_newlines = _count_newlines_from_end(res)",
          "1123:                 if data_newlines > res_newlines:",
          "1124:                     res += self.environment.newline_sequence * (data_newlines - res_newlines)",
          "1125:             return res",
          "1126:         except (UndefinedError, AnsibleUndefinedVariable) as e:",
          "1127:             if fail_on_undefined:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1126:                     if unsafe:",
          "1127:                         res = wrap_var(res)",
          "",
          "---------------"
        ],
        "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh": [
          "File: test/integration/targets/template/runme.sh -> test/integration/targets/template/runme.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: # https://github.com/ansible/ansible/issues/72262",
          "36: ansible-playbook 72262.yml -v \"$@\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: # ensure unsafe is preserved, even with extra newlines",
          "39: ansible-playbook unsafe.yml -v \"$@\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b17e5b9229ffaecfe10a4881bc3f87dd2c184e1",
      "candidate_info": {
        "commit_hash": "8b17e5b9229ffaecfe10a4881bc3f87dd2c184e1",
        "repo": "ansible/ansible",
        "commit_url": "https://github.com/ansible/ansible/commit/8b17e5b9229ffaecfe10a4881bc3f87dd2c184e1",
        "files": [
          "changelogs/fragments/fix_unsafe_newline.yml",
          "lib/ansible/template/__init__.py",
          "test/integration/targets/template/runme.sh",
          "test/integration/targets/template/unsafe.yml"
        ],
        "message": "fix unsafe preservation across newlines (#74960) (#74976)\n\n  CVE-2021-3583\n  ensure we always have unsafe\n\nCo-authored-by: Rick Elrod <rick@elrod.me>\n(cherry picked from commit 4c8c40fd3d4a58defdc80e7d22aa8d26b731353e)",
        "before_after_code_files": [
          "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
          "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
            "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
          ],
          "candidate": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
            "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
          ]
        }
      },
      "candidate_diff": {
        "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
          "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "876:             try:",
          "877:                 res = j2_concat(rf)",
          "879:                     res = wrap_var(res)",
          "880:             except TypeError as te:",
          "881:                 if 'AnsibleUndefined' in to_native(te):",
          "",
          "[Removed Lines]",
          "878:                 if getattr(new_context, 'unsafe', False):",
          "",
          "[Added Lines]",
          "878:                 unsafe = getattr(new_context, 'unsafe', False)",
          "879:                 if unsafe:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "905:                 res_newlines = _count_newlines_from_end(res)",
          "906:                 if data_newlines > res_newlines:",
          "907:                     res += self.environment.newline_sequence * (data_newlines - res_newlines)",
          "908:             return res",
          "909:         except (UndefinedError, AnsibleUndefinedVariable) as e:",
          "910:             if fail_on_undefined:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "909:                     if unsafe:",
          "910:                         res = wrap_var(res)",
          "",
          "---------------"
        ],
        "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh": [
          "File: test/integration/targets/template/runme.sh -> test/integration/targets/template/runme.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: # https://github.com/ansible/ansible/issues/72262",
          "36: ansible-playbook 72262.yml -v \"$@\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: # ensure unsafe is preserved, even with extra newlines",
          "39: ansible-playbook unsafe.yml -v \"$@\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c8c40fd3d4a58defdc80e7d22aa8d26b731353e",
      "candidate_info": {
        "commit_hash": "4c8c40fd3d4a58defdc80e7d22aa8d26b731353e",
        "repo": "ansible/ansible",
        "commit_url": "https://github.com/ansible/ansible/commit/4c8c40fd3d4a58defdc80e7d22aa8d26b731353e",
        "files": [
          "changelogs/fragments/fix_unsafe_newline.yml",
          "lib/ansible/template/__init__.py",
          "test/integration/targets/template/runme.sh",
          "test/integration/targets/template/unsafe.yml"
        ],
        "message": "fix unsafe preservation across newlines (#74960)\n\n* fix unsafe preservation across newlines\n\n  CVE-2021-3583\n  ensure we always have unsafe\n\nCo-authored-by: Rick Elrod <rick@elrod.me>",
        "before_after_code_files": [
          "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
          "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
            "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
          ],
          "candidate": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py",
            "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh"
          ]
        }
      },
      "candidate_diff": {
        "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
          "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1114:                     res = ansible_native_concat(rf)",
          "1115:                 else:",
          "1116:                     res = j2_concat(rf)",
          "1118:                     res = wrap_var(res)",
          "1119:             except TypeError as te:",
          "1120:                 if 'AnsibleUndefined' in to_native(te):",
          "",
          "[Removed Lines]",
          "1117:                 if getattr(new_context, 'unsafe', False):",
          "",
          "[Added Lines]",
          "1117:                 unsafe = getattr(new_context, 'unsafe', False)",
          "1118:                 if unsafe:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1144:                 res_newlines = _count_newlines_from_end(res)",
          "1145:                 if data_newlines > res_newlines:",
          "1146:                     res += self.environment.newline_sequence * (data_newlines - res_newlines)",
          "1147:             return res",
          "1148:         except (UndefinedError, AnsibleUndefinedVariable) as e:",
          "1149:             if fail_on_undefined:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1148:                     if unsafe:",
          "1149:                         res = wrap_var(res)",
          "",
          "---------------"
        ],
        "test/integration/targets/template/runme.sh||test/integration/targets/template/runme.sh": [
          "File: test/integration/targets/template/runme.sh -> test/integration/targets/template/runme.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: # https://github.com/ansible/ansible/issues/72262",
          "36: ansible-playbook 72262.yml -v \"$@\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: # ensure unsafe is preserved, even with extra newlines",
          "39: ansible-playbook unsafe.yml -v \"$@\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}