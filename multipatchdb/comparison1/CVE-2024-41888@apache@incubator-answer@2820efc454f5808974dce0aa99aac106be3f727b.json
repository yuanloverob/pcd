{
  "cve_id": "CVE-2024-41888",
  "cve_desc": "Missing Release of Resource after Effective Lifetime vulnerability in Apache Answer.\n\nThis issue affects Apache Answer: through 1.3.5.\n\nThe password reset link remains valid within its expiration period even after it has been used. This could potentially lead to the link being misused or hijacked.\nUsers are recommended to upgrade to version 1.3.6, which fixes the issue.",
  "repo": "apache/incubator-answer",
  "patch_hash": "2820efc454f5808974dce0aa99aac106be3f727b",
  "patch_info": {
    "commit_hash": "2820efc454f5808974dce0aa99aac106be3f727b",
    "repo": "apache/incubator-answer",
    "commit_url": "https://github.com/apache/incubator-answer/commit/2820efc454f5808974dce0aa99aac106be3f727b",
    "files": [
      "internal/base/constant/cache_key.go",
      "internal/repo/export/email_repo.go",
      "internal/schema/email_template.go",
      "internal/service/content/user_service.go",
      "internal/service/export/email_service.go",
      "internal/service/notification/invite_answer_notification.go",
      "internal/service/notification/new_answer_notification.go",
      "internal/service/notification/new_comment_notification.go",
      "internal/service/notification/new_question_notification.go",
      "internal/service/siteinfo/siteinfo_service.go",
      "internal/service/user_admin/user_backyard.go",
      "internal/service/user_external_login/user_external_login_service.go"
    ],
    "message": "feat(user): ensure that only one link is active at a time",
    "before_after_code_files": [
      "internal/base/constant/cache_key.go||internal/base/constant/cache_key.go",
      "internal/repo/export/email_repo.go||internal/repo/export/email_repo.go",
      "internal/schema/email_template.go||internal/schema/email_template.go",
      "internal/service/content/user_service.go||internal/service/content/user_service.go",
      "internal/service/export/email_service.go||internal/service/export/email_service.go",
      "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go",
      "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go",
      "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go",
      "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go",
      "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go",
      "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go",
      "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go"
    ]
  },
  "patch_diff": {
    "internal/base/constant/cache_key.go||internal/base/constant/cache_key.go": [
      "File: internal/base/constant/cache_key.go -> internal/base/constant/cache_key.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "32:  AdminTokenCacheKey                         = \"answer:admin:token:\"",
      "33:  AdminTokenCacheTime                        = 7 * 24 * time.Hour",
      "34:  UserTokenMappingCacheKey                   = \"answer:user-token:mapping:\"",
      "35:  SiteInfoCacheKey                           = \"answer:site-info:\"",
      "36:  SiteInfoCacheTime                          = 1 * time.Hour",
      "37:  ConfigID2KEYCacheKeyPrefix                 = \"answer:config:id:\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:  UserEmailCodeCacheKey                      = \"answer:user:email-code:\"",
      "36:  UserEmailCodeCacheTime                     = 10 * time.Minute",
      "37:  UserLatestEmailCodeCacheKey                = \"answer:user-id:email-code:\"",
      "",
      "---------------"
    ],
    "internal/repo/export/email_repo.go||internal/repo/export/email_repo.go": [
      "File: internal/repo/export/email_repo.go -> internal/repo/export/email_repo.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: import (",
      "23:  \"context\"",
      "24:  \"time\"",
      "26:  \"github.com/apache/incubator-answer/internal/base/data\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
      "25:  \"github.com/tidwall/gjson\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42: }",
      "48:   return errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
      "49:  }",
      "50:  return nil",
      "",
      "[Removed Lines]",
      "45: func (e *emailRepo) SetCode(ctx context.Context, code, content string, duration time.Duration) error {",
      "46:  err := e.data.Cache.SetString(ctx, code, content, duration)",
      "47:  if err != nil {",
      "",
      "[Added Lines]",
      "47: func (e *emailRepo) SetCode(ctx context.Context, userID, code, content string, duration time.Duration) error {",
      "50:  if err := e.data.Cache.SetString(ctx, constant.UserLatestEmailCodeCacheKey+userID, code, duration); err != nil {",
      "51:   return errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
      "52:  }",
      "55:  if err := e.data.Cache.SetString(ctx, constant.UserEmailCodeCacheKey+code, content, duration); err != nil {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "54: func (e *emailRepo) VerifyCode(ctx context.Context, code string) (content string, err error) {",
      "56:  if err != nil {",
      "57:   return \"\", err",
      "58:  }",
      "59:  if !exist {",
      "60:   return \"\", nil",
      "61:  }",
      "62:  return content, nil",
      "63: }",
      "",
      "[Removed Lines]",
      "55:  content, exist, err := e.data.Cache.GetString(ctx, code)",
      "",
      "[Added Lines]",
      "64:  codeCacheKey := constant.UserEmailCodeCacheKey + code",
      "65:  content, exist, err := e.data.Cache.GetString(ctx, codeCacheKey)",
      "74:  _ = e.data.Cache.Del(ctx, codeCacheKey)",
      "79:  if skipValidationLatestCode := gjson.Get(content, \"skip_validation_latest_code\").Bool(); skipValidationLatestCode {",
      "80:   return content, nil",
      "81:  }",
      "82:  userID := gjson.Get(content, \"user_id\").String()",
      "85:  latestCode, exist, err := e.data.Cache.GetString(ctx, constant.UserLatestEmailCodeCacheKey+userID)",
      "86:  if err != nil {",
      "87:   return \"\", err",
      "88:  }",
      "89:  if !exist {",
      "90:   return \"\", nil",
      "91:  }",
      "94:  if latestCode != code {",
      "95:   return \"\", nil",
      "96:  }",
      "",
      "---------------"
    ],
    "internal/schema/email_template.go||internal/schema/email_template.go": [
      "File: internal/schema/email_template.go -> internal/schema/email_template.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "42:  NotificationSources []constant.NotificationSource `json:\"notification_source,omitempty\"`",
      "44:  BindingKey string `json:\"binding_key,omitempty\"`",
      "45: }",
      "47: func (r *EmailCodeContent) ToJSONString() string {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46:  SkipValidationLatestCode bool `json:\"skip_validation_latest_code\"`",
      "",
      "---------------"
    ],
    "internal/service/content/user_service.go||internal/service/content/user_service.go": [
      "File: internal/service/content/user_service.go -> internal/service/content/user_service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "227:  if err != nil {",
      "228:   return err",
      "229:  }",
      "231:  return nil",
      "232: }",
      "",
      "[Removed Lines]",
      "230:  go us.emailService.SendAndSaveCode(ctx, req.Email, title, body, code, data.ToJSONString())",
      "",
      "[Added Lines]",
      "230:  go us.emailService.SendAndSaveCode(ctx, userInfo.ID, req.Email, title, body, code, data.ToJSONString())",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "450:  if err != nil {",
      "451:   return nil, nil, err",
      "452:  }",
      "455:  roleID, err := us.userRoleService.GetUserRole(ctx, userInfo.ID)",
      "456:  if err != nil {",
      "",
      "[Removed Lines]",
      "453:  go us.emailService.SendAndSaveCode(ctx, userInfo.EMail, title, body, code, data.ToJSONString())",
      "",
      "[Added Lines]",
      "453:  go us.emailService.SendAndSaveCode(ctx, userInfo.ID, userInfo.EMail, title, body, code, data.ToJSONString())",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "500:  if err != nil {",
      "501:   return err",
      "502:  }",
      "504:  return nil",
      "505: }",
      "",
      "[Removed Lines]",
      "503:  go us.emailService.SendAndSaveCode(ctx, userInfo.EMail, title, body, code, data.ToJSONString())",
      "",
      "[Added Lines]",
      "503:  go us.emailService.SendAndSaveCode(ctx, userInfo.ID, userInfo.EMail, title, body, code, data.ToJSONString())",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "621:  }",
      "622:  log.Infof(\"send email confirmation %s\", verifyEmailURL)",
      "625:  return nil, nil",
      "626: }",
      "",
      "[Removed Lines]",
      "624:  go us.emailService.SendAndSaveCode(ctx, req.Email, title, body, code, data.ToJSONString())",
      "",
      "[Added Lines]",
      "624:  go us.emailService.SendAndSaveCode(ctx, userInfo.ID, req.Email, title, body, code, data.ToJSONString())",
      "",
      "---------------"
    ],
    "internal/service/export/email_service.go||internal/service/export/email_service.go": [
      "File: internal/service/export/email_service.go -> internal/service/export/email_service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "53: type EmailRepo interface {",
      "55:  VerifyCode(ctx context.Context, code string) (content string, err error)",
      "56: }",
      "",
      "[Removed Lines]",
      "54:  SetCode(ctx context.Context, code, content string, duration time.Duration) error",
      "",
      "[Added Lines]",
      "54:  SetCode(ctx context.Context, userID, code, content string, duration time.Duration) error",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "89: }",
      "94:  if err != nil {",
      "95:   log.Error(err)",
      "96:  }",
      "97: }",
      "103:  if err != nil {",
      "104:   log.Error(err)",
      "105:  }",
      "106: }",
      "109: func (es *EmailService) SendAndSaveCodeWithTime(",
      "113:  if err != nil {",
      "114:   log.Error(err)",
      "115:  }",
      "116: }",
      "",
      "[Removed Lines]",
      "92: func (es *EmailService) SaveCode(ctx context.Context, code, codeContent string) {",
      "93:  err := es.emailRepo.SetCode(ctx, code, codeContent, 10*time.Minute)",
      "100: func (es *EmailService) SendAndSaveCode(ctx context.Context, toEmailAddr, subject, body, code, codeContent string) {",
      "101:  es.Send(ctx, toEmailAddr, subject, body)",
      "102:  err := es.emailRepo.SetCode(ctx, code, codeContent, 10*time.Minute)",
      "110:  ctx context.Context, toEmailAddr, subject, body, code, codeContent string, duration time.Duration) {",
      "111:  es.Send(ctx, toEmailAddr, subject, body)",
      "112:  err := es.emailRepo.SetCode(ctx, code, codeContent, duration)",
      "",
      "[Added Lines]",
      "92: func (es *EmailService) SaveCode(ctx context.Context, userID, code, codeContent string) {",
      "93:  err := es.emailRepo.SetCode(ctx, userID, code, codeContent, constant.UserEmailCodeCacheTime)",
      "100: func (es *EmailService) SendAndSaveCode(ctx context.Context, userID, toEmailAddr, subject, body, code, codeContent string) {",
      "101:  err := es.emailRepo.SetCode(ctx, userID, code, codeContent, constant.UserEmailCodeCacheTime)",
      "104:   return",
      "106:  es.Send(ctx, toEmailAddr, subject, body)",
      "111:  ctx context.Context, userID, toEmailAddr, subject, body, code, codeContent string, duration time.Duration) {",
      "112:  err := es.emailRepo.SetCode(ctx, userID, code, codeContent, duration)",
      "115:   return",
      "117:  es.Send(ctx, toEmailAddr, subject, body)",
      "",
      "---------------"
    ],
    "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go": [
      "File: internal/service/notification/invite_answer_notification.go -> internal/service/notification/invite_answer_notification.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:   NotificationSources: []constant.NotificationSource{",
      "60:    constant.InboxSource,",
      "61:   },",
      "64:  }",
      "",
      "[Removed Lines]",
      "62:   Email:  email,",
      "63:   UserID: userID,",
      "",
      "[Added Lines]",
      "62:   Email:                    email,",
      "63:   UserID:                   userID,",
      "64:   SkipValidationLatestCode: true,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "74:  }",
      "76:  ns.emailService.SendAndSaveCodeWithTime(",
      "78: }",
      "",
      "[Removed Lines]",
      "77:   ctx, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "[Added Lines]",
      "78:   ctx, userID, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "---------------"
    ],
    "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go": [
      "File: internal/service/notification/new_answer_notification.go -> internal/service/notification/new_answer_notification.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:   NotificationSources: []constant.NotificationSource{",
      "60:    constant.InboxSource,",
      "61:   },",
      "64:  }",
      "",
      "[Removed Lines]",
      "62:   Email:  email,",
      "63:   UserID: userID,",
      "",
      "[Added Lines]",
      "62:   Email:                    email,",
      "63:   UserID:                   userID,",
      "64:   SkipValidationLatestCode: true,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "74:  }",
      "76:  ns.emailService.SendAndSaveCodeWithTime(",
      "78: }",
      "",
      "[Removed Lines]",
      "77:   ctx, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "[Added Lines]",
      "78:   ctx, userID, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "---------------"
    ],
    "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go": [
      "File: internal/service/notification/new_comment_notification.go -> internal/service/notification/new_comment_notification.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:   NotificationSources: []constant.NotificationSource{",
      "60:    constant.InboxSource,",
      "61:   },",
      "64:  }",
      "66:  if len(lang) > 0 {",
      "",
      "[Removed Lines]",
      "62:   Email:  email,",
      "63:   UserID: userID,",
      "",
      "[Added Lines]",
      "62:   Email:                    email,",
      "63:   UserID:                   userID,",
      "64:   SkipValidationLatestCode: true,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "73:  }",
      "75:  ns.emailService.SendAndSaveCodeWithTime(",
      "77: }",
      "",
      "[Removed Lines]",
      "76:   ctx, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "[Added Lines]",
      "77:   ctx, userID, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "---------------"
    ],
    "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go": [
      "File: internal/service/notification/new_question_notification.go -> internal/service/notification/new_question_notification.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "189:    constant.AllNewQuestionSource,",
      "190:    constant.AllNewQuestionForFollowingTagsSource,",
      "191:   },",
      "192:  }",
      "193:  ns.emailService.SendAndSaveCodeWithTime(",
      "195: }",
      "197: func (ns *ExternalNotificationService) syncNewQuestionNotificationToPlugin(ctx context.Context,",
      "",
      "[Removed Lines]",
      "194:   ctx, userInfo.EMail, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "[Added Lines]",
      "192:   SkipValidationLatestCode: true,",
      "195:   ctx, userInfo.ID, userInfo.EMail, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
      "",
      "---------------"
    ],
    "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go": [
      "File: internal/service/siteinfo/siteinfo_service.go -> internal/service/siteinfo/siteinfo_service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "274:   if err != nil {",
      "275:    return err",
      "276:   }",
      "278:  }",
      "279:  return nil",
      "280: }",
      "",
      "[Removed Lines]",
      "277:   go s.emailService.SendAndSaveCode(ctx, req.TestEmailRecipient, title, body, \"\", \"\")",
      "",
      "[Added Lines]",
      "277:   go s.emailService.Send(ctx, req.TestEmailRecipient, title, body)",
      "",
      "---------------"
    ],
    "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go": [
      "File: internal/service/user_admin/user_backyard.go -> internal/service/user_admin/user_backyard.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "514: func (us *UserAdminService) GetUserActivation(ctx context.Context, req *schema.GetUserActivationReq) (",
      "515:  resp *schema.GetUserActivationResp, err error) {",
      "517:  if err != nil {",
      "518:   return nil, err",
      "519:  }",
      "",
      "[Removed Lines]",
      "516:  user, exist, err := us.userRepo.GetUserInfo(ctx, req.UserID)",
      "",
      "[Added Lines]",
      "516:  userInfo, exist, err := us.userRepo.GetUserInfo(ctx, req.UserID)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "527:  }",
      "529:  data := &schema.EmailCodeContent{",
      "532:  }",
      "533:  code := uuid.NewString()",
      "535:  resp = &schema.GetUserActivationResp{",
      "536:   ActivationURL: fmt.Sprintf(\"%s/users/account-activation?code=%s\", general.SiteUrl, code),",
      "537:  }",
      "",
      "[Removed Lines]",
      "530:   Email:  user.EMail,",
      "531:   UserID: user.ID,",
      "534:  us.emailService.SaveCode(ctx, code, data.ToJSONString())",
      "",
      "[Added Lines]",
      "530:   Email:  userInfo.EMail,",
      "531:   UserID: userInfo.ID,",
      "534:  us.emailService.SaveCode(ctx, userInfo.ID, code, data.ToJSONString())",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "542: func (us *UserAdminService) SendUserActivation(ctx context.Context, req *schema.SendUserActivationReq) (err error) {",
      "544:  if err != nil {",
      "545:   return err",
      "546:  }",
      "",
      "[Removed Lines]",
      "543:  user, exist, err := us.userRepo.GetUserInfo(ctx, req.UserID)",
      "",
      "[Added Lines]",
      "543:  userInfo, exist, err := us.userRepo.GetUserInfo(ctx, req.UserID)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "554:  }",
      "556:  data := &schema.EmailCodeContent{",
      "559:  }",
      "560:  code := uuid.NewString()",
      "563:  verifyEmailURL := fmt.Sprintf(\"%s/users/account-activation?code=%s\", general.SiteUrl, code)",
      "564:  title, body, err := us.emailService.RegisterTemplate(ctx, verifyEmailURL)",
      "565:  if err != nil {",
      "566:   return err",
      "567:  }",
      "569:  return nil",
      "570: }",
      "",
      "[Removed Lines]",
      "557:   Email:  user.EMail,",
      "558:   UserID: user.ID,",
      "561:  us.emailService.SaveCode(ctx, code, data.ToJSONString())",
      "568:  go us.emailService.SendAndSaveCode(ctx, user.EMail, title, body, code, data.ToJSONString())",
      "",
      "[Added Lines]",
      "557:   Email:  userInfo.EMail,",
      "558:   UserID: userInfo.ID,",
      "567:  go us.emailService.SendAndSaveCode(ctx, userInfo.ID, userInfo.EMail, title, body, code, data.ToJSONString())",
      "",
      "---------------"
    ],
    "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go": [
      "File: internal/service/user_external_login/user_external_login_service.go -> internal/service/user_external_login/user_external_login_service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:  if err != nil {",
      "329:   return nil, err",
      "330:  }",
      "332:  return resp, nil",
      "333: }",
      "",
      "[Removed Lines]",
      "331:  go us.emailService.SendAndSaveCode(ctx, userInfo.EMail, title, body, code, data.ToJSONString())",
      "",
      "[Added Lines]",
      "331:  go us.emailService.SendAndSaveCode(ctx, userInfo.ID, userInfo.EMail, title, body, code, data.ToJSONString())",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "82e656821dcce1c2ae58c681065db17c169aa4dc",
      "candidate_info": {
        "commit_hash": "82e656821dcce1c2ae58c681065db17c169aa4dc",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/82e656821dcce1c2ae58c681065db17c169aa4dc",
        "files": [
          "cmd/command.go",
          "internal/cli/i18n.go",
          "internal/cli/install.go"
        ],
        "message": "feat(cmd): add i18n command",
        "before_after_code_files": [
          "cmd/command.go||cmd/command.go",
          "internal/cli/i18n.go||internal/cli/i18n.go",
          "internal/cli/install.go||internal/cli/install.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cmd/command.go||cmd/command.go": [
          "File: cmd/command.go -> cmd/command.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:  upgradeVersion string",
          "51:  configFields []string",
          "52: )",
          "54: func init() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:  i18nSourcePath string",
          "55:  i18nTargetPath string",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:  configCmd.Flags().StringSliceVarP(&configFields, \"with\", \"w\", []string{}, \"the fields that need to be set to the default value, eg: -w allow_password_login\")",
          "72:   rootCmd.AddCommand(cmd)",
          "73:  }",
          "74: }",
          "",
          "[Removed Lines]",
          "71:  for _, cmd := range []*cobra.Command{initCmd, checkCmd, runCmd, dumpCmd, upgradeCmd, buildCmd, pluginCmd, configCmd} {",
          "",
          "[Added Lines]",
          "75:  i18nCmd.Flags().StringVarP(&i18nSourcePath, \"source\", \"s\", \"\", \"i18n source path, eg: -f ./i18n/source\")",
          "77:  i18nCmd.Flags().StringVarP(&i18nTargetPath, \"target\", \"t\", \"\", \"i18n target path, eg: -t ./i18n/target\")",
          "79:  for _, cmd := range []*cobra.Command{initCmd, checkCmd, runCmd, dumpCmd, upgradeCmd, buildCmd, pluginCmd, configCmd, i18nCmd} {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:    }",
          "272:   },",
          "273:  }",
          "274: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284:  i18nCmd = &cobra.Command{",
          "285:   Use:   \"i18n\",",
          "286:   Short: \"overwrite i18n files\",",
          "287:   Long:  `Merge i18n files from plugins to original i18n files. It will overwrite the original i18n files`,",
          "288:   Run: func(_ *cobra.Command, _ []string) {",
          "289:    if err := cli.ReplaceI18nFilesLocal(i18nTargetPath); err != nil {",
          "290:     fmt.Printf(\"replace i18n files failed %v\", err)",
          "291:    } else {",
          "292:     fmt.Printf(\"replace i18n files successfully\\n\")",
          "293:    }",
          "295:    fmt.Printf(\"try to merge i18n files from %q to %q\\n\", i18nSourcePath, i18nTargetPath)",
          "297:    if err := cli.MergeI18nFilesLocal(i18nTargetPath, i18nSourcePath); err != nil {",
          "298:     fmt.Printf(\"merge i18n files failed %v\", err)",
          "299:    } else {",
          "300:     fmt.Printf(\"merge i18n files successfully\\n\")",
          "301:    }",
          "302:   },",
          "303:  }",
          "",
          "---------------"
        ],
        "internal/cli/i18n.go||internal/cli/i18n.go": [
          "File: internal/cli/i18n.go -> internal/cli/i18n.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package cli",
          "3: import (",
          "4:  \"fmt\"",
          "5:  \"github.com/apache/incubator-answer/i18n\"",
          "6:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "7:  \"github.com/apache/incubator-answer/pkg/writer\"",
          "8:  \"gopkg.in/yaml.v3\"",
          "9:  \"os\"",
          "10:  \"path/filepath\"",
          "11:  \"strings\"",
          "12: )",
          "14: type YamlPluginContent struct {",
          "15:  Plugin map[string]any `yaml:\"plugin\"`",
          "16: }",
          "19: func ReplaceI18nFilesLocal(i18nDir string) error {",
          "20:  i18nList, err := i18n.I18n.ReadDir(\".\")",
          "21:  if err != nil {",
          "22:   fmt.Println(err.Error())",
          "23:   return err",
          "24:  }",
          "25:  fmt.Printf(\"[i18n] find i18n bundle %d\\n\", len(i18nList))",
          "26:  for _, item := range i18nList {",
          "27:   path := filepath.Join(i18nDir, item.Name())",
          "28:   content, err := i18n.I18n.ReadFile(item.Name())",
          "29:   if err != nil {",
          "30:    continue",
          "31:   }",
          "32:   exist := dir.CheckFileExist(path)",
          "33:   if exist {",
          "34:    fmt.Printf(\"[i18n] install %s file exist, try to replace it\\n\", item.Name())",
          "35:    if err = os.Remove(path); err != nil {",
          "36:     fmt.Println(err)",
          "37:    }",
          "38:   }",
          "39:   fmt.Printf(\"[i18n] install %s bundle...\\n\", item.Name())",
          "40:   err = writer.WriteFile(path, string(content))",
          "41:   if err != nil {",
          "42:    fmt.Printf(\"[i18n] install %s bundle fail: %s\\n\", item.Name(), err.Error())",
          "43:   } else {",
          "44:    fmt.Printf(\"[i18n] install %s bundle success\\n\", item.Name())",
          "45:   }",
          "46:  }",
          "47:  return nil",
          "48: }",
          "51: func MergeI18nFilesLocal(originalI18nDir, targetI18nDir string) (err error) {",
          "52:  pluginAllTranslations := make(map[string]*YamlPluginContent)",
          "54:  err = findI18nFileInDir(pluginAllTranslations, targetI18nDir)",
          "55:  if err != nil {",
          "56:   return err",
          "57:  }",
          "59:  entries, err := os.ReadDir(originalI18nDir)",
          "60:  if err != nil {",
          "61:   return err",
          "62:  }",
          "64:  for _, file := range entries {",
          "66:   if file.IsDir() {",
          "67:    continue",
          "68:   }",
          "70:   filename := file.Name()",
          "71:   if filepath.Ext(filename) != \".yaml\" && filename != \"i18n.yaml\" {",
          "72:    continue",
          "73:   }",
          "76:   if pluginAllTranslations[filename] == nil {",
          "77:    continue",
          "78:   }",
          "80:   out, _ := yaml.Marshal(pluginAllTranslations[filename])",
          "82:   buf, err := os.OpenFile(filepath.Join(originalI18nDir, filename), os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)",
          "83:   if err != nil {",
          "84:    fmt.Printf(\"[i18n] read translation file failed: %s %s\\n\", filename, err)",
          "85:    continue",
          "86:   }",
          "88:   _, _ = buf.WriteString(\"\\n\")",
          "89:   _, _ = buf.Write(out)",
          "90:   _ = buf.Close()",
          "91:   fmt.Printf(\"[i18n] merge i18n file: %s success\\n\", filename)",
          "92:  }",
          "94:  return nil",
          "95: }",
          "98: func findI18nFileInDir(pluginAllTranslations map[string]*YamlPluginContent, i18nDir string) error {",
          "100:  dirBase := filepath.Base(i18nDir)",
          "101:  if dirBase != \"i18n\" {",
          "102:   if strings.HasPrefix(dirBase, \".\") {",
          "103:    return nil",
          "104:   }",
          "106:   targetDirs, err := os.ReadDir(i18nDir)",
          "107:   if err != nil {",
          "108:    return err",
          "109:   }",
          "111:   for _, targetDir := range targetDirs {",
          "112:    if targetDir.IsDir() {",
          "113:     if err := findI18nFileInDir(pluginAllTranslations, filepath.Join(i18nDir, targetDir.Name())); err != nil {",
          "114:      fmt.Printf(\"[i18n] find i18n file in dir failed: %s %s\\n\", targetDir.Name(), err)",
          "115:     }",
          "116:    }",
          "117:   }",
          "118:   return nil",
          "119:  }",
          "121:  fmt.Printf(\"[i18n] find i18n file in dir: %s\\n\", i18nDir)",
          "124:  entries, err := os.ReadDir(i18nDir)",
          "125:  if err != nil {",
          "126:   return err",
          "127:  }",
          "129:  for _, file := range entries {",
          "131:   if file.IsDir() {",
          "132:    continue",
          "133:   }",
          "135:   if filepath.Ext(file.Name()) != \".yaml\" {",
          "136:    continue",
          "137:   }",
          "138:   buf, err := os.ReadFile(filepath.Join(i18nDir, file.Name()))",
          "139:   if err != nil {",
          "140:    fmt.Printf(\"[i18n] read translation file failed: %s %s\\n\", file.Name(), err)",
          "141:    continue",
          "142:   }",
          "144:   translation := &YamlPluginContent{}",
          "145:   if err = yaml.Unmarshal(buf, translation); err != nil {",
          "146:    fmt.Printf(\"[i18n] unmarshal translation file failed: %s %s\\n\", file.Name(), err)",
          "147:    continue",
          "148:   }",
          "150:   if pluginAllTranslations[file.Name()] == nil {",
          "151:    pluginAllTranslations[file.Name()] = &YamlPluginContent{Plugin: make(map[string]any)}",
          "152:   }",
          "153:   for k, v := range translation.Plugin {",
          "154:    pluginAllTranslations[file.Name()].Plugin[k] = v",
          "155:   }",
          "156:  }",
          "157:  return nil",
          "158: }",
          "",
          "---------------"
        ],
        "internal/cli/install.go||internal/cli/install.go": [
          "File: internal/cli/install.go -> internal/cli/install.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"fmt\"",
          "24:  \"os\"",
          "25:  \"path/filepath\"",
          "27:  \"github.com/apache/incubator-answer/configs\"",
          "28:  \"github.com/apache/incubator-answer/i18n\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:  \"sync\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: )",
          "39: var (",
          "44: )",
          "",
          "[Removed Lines]",
          "40:  ConfigFileDir  = \"/conf/\"",
          "41:  UploadFilePath = \"/uploads/\"",
          "42:  I18nPath       = \"/i18n/\"",
          "43:  CacheDir       = \"/cache/\"",
          "",
          "[Added Lines]",
          "41:  ConfigFileDir     = \"/conf/\"",
          "42:  UploadFilePath    = \"/uploads/\"",
          "43:  I18nPath          = \"/i18n/\"",
          "44:  CacheDir          = \"/cache/\"",
          "45:  formatAllPathONCE sync.Once",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49: }",
          "51: func FormatAllPath(dataDirPath string) {",
          "56: }",
          "",
          "[Removed Lines]",
          "52:  ConfigFileDir = filepath.Join(dataDirPath, ConfigFileDir)",
          "53:  UploadFilePath = filepath.Join(dataDirPath, UploadFilePath)",
          "54:  I18nPath = filepath.Join(dataDirPath, I18nPath)",
          "55:  CacheDir = filepath.Join(dataDirPath, CacheDir)",
          "",
          "[Added Lines]",
          "54:  formatAllPathONCE.Do(func() {",
          "55:   ConfigFileDir = filepath.Join(dataDirPath, ConfigFileDir)",
          "56:   UploadFilePath = filepath.Join(dataDirPath, UploadFilePath)",
          "57:   I18nPath = filepath.Join(dataDirPath, I18nPath)",
          "58:   CacheDir = filepath.Join(dataDirPath, CacheDir)",
          "59:  })",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71aa297cc8e0469766c5a7dd146c2d395d00d4dd",
      "candidate_info": {
        "commit_hash": "71aa297cc8e0469766c5a7dd146c2d395d00d4dd",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/71aa297cc8e0469766c5a7dd146c2d395d00d4dd",
        "files": [
          ".gitignore",
          "answer.db"
        ],
        "message": "fix: delete db files",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "83a8e9eb0926de1e345661c72dc0a629c431d735",
      "candidate_info": {
        "commit_hash": "83a8e9eb0926de1e345661c72dc0a629c431d735",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/83a8e9eb0926de1e345661c72dc0a629c431d735",
        "files": [
          "ui/src/components/TagSelector/index.scss",
          "ui/src/components/TagSelector/index.tsx"
        ],
        "message": "fix: tagSelector show all recommended tags",
        "before_after_code_files": [
          "ui/src/components/TagSelector/index.scss||ui/src/components/TagSelector/index.scss",
          "ui/src/components/TagSelector/index.tsx||ui/src/components/TagSelector/index.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/src/components/TagSelector/index.scss||ui/src/components/TagSelector/index.scss": [
          "File: ui/src/components/TagSelector/index.scss -> ui/src/components/TagSelector/index.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: .tag-selector-wrap {",
          "21:   .dropdown-menu {",
          "22:     min-width: 15rem;",
          "23:   }",
          "24:   .dropdown-toggle {",
          "25:     &::after {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:     max-height: 178px;",
          "24:     overflow-y: auto;",
          "",
          "---------------"
        ],
        "ui/src/components/TagSelector/index.tsx||ui/src/components/TagSelector/index.tsx": [
          "File: ui/src/components/TagSelector/index.tsx -> ui/src/components/TagSelector/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:     queryTags(str).then((res) => {",
          "155:       const tagArray: Type.Tag[] = filterTags(res || []);",
          "156:       if (str === '') {",
          "158:       }",
          "159:       handleMenuShow(tagArray.length > 0);",
          "161:     });",
          "162:   };",
          "",
          "[Removed Lines]",
          "157:         setRequiredTags(res?.length > 5 ? res.slice(0, 5) : res);",
          "160:       setTags(tagArray?.length > 5 ? tagArray.slice(0, 5) : tagArray);",
          "",
          "[Added Lines]",
          "157:         setRequiredTags(res);",
          "160:       setTags(tagArray);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ed0ab480ff3df549ca556ec35cca4b7a31101cf",
      "candidate_info": {
        "commit_hash": "9ed0ab480ff3df549ca556ec35cca4b7a31101cf",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/9ed0ab480ff3df549ca556ec35cca4b7a31101cf",
        "files": [
          "ui/src/utils/common.ts"
        ],
        "message": "fix: delete log",
        "before_after_code_files": [
          "ui/src/utils/common.ts||ui/src/utils/common.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/src/utils/common.ts||ui/src/utils/common.ts": [
          "File: ui/src/utils/common.ts -> ui/src/utils/common.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "189: }",
          "191: function formatDiffPart(part: any, className: string): string {",
          "193:   if (part.value.replace(/\\n/g, '').length <= 0) {",
          "194:     if (part.value.match(/\\n/g)?.length > 1) {",
          "195:       const value = part.value.replace(/\\n/, '');",
          "",
          "[Removed Lines]",
          "192:   console.log('333333', part);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec16ac9ad2e1eeaf9f39db29589f69edebce5e47",
      "candidate_info": {
        "commit_hash": "ec16ac9ad2e1eeaf9f39db29589f69edebce5e47",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/ec16ac9ad2e1eeaf9f39db29589f69edebce5e47",
        "files": [
          "ui/package.json",
          "ui/pnpm-lock.yaml",
          "ui/scripts/plugin.js"
        ],
        "message": "chore(scripts): Remove humps dependency",
        "before_after_code_files": [
          "ui/scripts/plugin.js||ui/scripts/plugin.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/scripts/plugin.js||ui/scripts/plugin.js": [
          "File: ui/scripts/plugin.js -> ui/scripts/plugin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: const path = require('path');",
          "21: const fs = require('fs');",
          "24: const pluginPath = path.join(__dirname, '../src/plugins');",
          "25: const pluginFolders = fs.readdirSync(pluginPath);",
          "27: function resetPackageJson() {",
          "28:   const packageJsonPath = path.join(__dirname, '..', 'package.json');",
          "29:   const packageJsonContent = require(packageJsonPath);",
          "",
          "[Removed Lines]",
          "22: const humps = require('humps');",
          "",
          "[Added Lines]",
          "26: function pascalize(str) {",
          "27:   return str.split(/[_-]/).map((part) => part.charAt(0).toUpperCase() + part.slice(1)).join('');",
          "28: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:   const indexTsPath = path.join(pluginPath, 'index.ts');",
          "60:   const indexTsContent = fs.readFileSync(indexTsPath, 'utf-8');",
          "61:   const lines = indexTsContent.split('\\n');",
          "63:   const importLine = `export { default as ${ComponentName} } from '${packageName}';`;",
          "64:   if (!lines.includes(importLine)) {",
          "65:     lines.push(importLine);",
          "",
          "[Removed Lines]",
          "62:   const ComponentName = humps.pascalize(packageName);",
          "",
          "[Added Lines]",
          "65:   const ComponentName = pascalize(packageName);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d580cab48c775800a016f9f58ec7281d2c88c52e",
      "candidate_info": {
        "commit_hash": "d580cab48c775800a016f9f58ec7281d2c88c52e",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/d580cab48c775800a016f9f58ec7281d2c88c52e",
        "files": [
          "ui/public/index.html"
        ],
        "message": "fix: test add",
        "before_after_code_files": [
          "ui/public/index.html||ui/public/index.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/public/index.html||ui/public/index.html": [
          "File: ui/public/index.html -> ui/public/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   <body>",
          "31:     <noscript>You need to enable JavaScript to run this app.</noscript>",
          "32:     <div id=\"root\">",
          "37:       <div id=\"spin-mask\">",
          "38:         <noscript>",
          "39:           <style>",
          "",
          "[Removed Lines]",
          "33:       <!--customize_header-->",
          "34:       \u8fd9\u90e8\u5206\u662fheader233",
          "35:       <h1>123</h1>",
          "36:       <!--customize_header-->",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f014602ec7a5303a84b9a80458fca0589c7128bb",
      "candidate_info": {
        "commit_hash": "f014602ec7a5303a84b9a80458fca0589c7128bb",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/f014602ec7a5303a84b9a80458fca0589c7128bb",
        "files": [
          "pkg/gravatar/gravatar.go"
        ],
        "message": "feat(user): change the hash way of gravatar",
        "before_after_code_files": [
          "pkg/gravatar/gravatar.go||pkg/gravatar/gravatar.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pkg/gravatar/gravatar.go||pkg/gravatar/gravatar.go": [
          "File: pkg/gravatar/gravatar.go -> pkg/gravatar/gravatar.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package gravatar",
          "22: import (",
          "24:  \"encoding/hex\"",
          "25:  \"fmt\"",
          "26:  \"net/url\"",
          "27: )",
          "30: func GetAvatarURL(baseURL, email string) string {",
          "34: }",
          "",
          "[Removed Lines]",
          "23:  \"crypto/md5\"",
          "31:  h := md5.New()",
          "32:  h.Write([]byte(email))",
          "33:  return baseURL + hex.EncodeToString(h.Sum(nil))",
          "",
          "[Added Lines]",
          "23:  \"crypto/sha256\"",
          "27:  \"strings\"",
          "32:  hasher := sha256.Sum256([]byte(strings.TrimSpace(email)))",
          "33:  hash := hex.EncodeToString(hasher[:])",
          "34:  return baseURL + hash",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a2ab45c4b9c57dcdb1371a762be0290c4e0a572",
      "candidate_info": {
        "commit_hash": "2a2ab45c4b9c57dcdb1371a762be0290c4e0a572",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/2a2ab45c4b9c57dcdb1371a762be0290c4e0a572",
        "files": [
          "internal/base/conf/conf.go"
        ],
        "message": "refactor(conf): go fmt conf.go",
        "before_after_code_files": [
          "internal/base/conf/conf.go||internal/base/conf/conf.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "internal/base/conf/conf.go||internal/base/conf/conf.go": [
          "File: internal/base/conf/conf.go -> internal/base/conf/conf.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: }",
          "49: type envConfigOverrides struct {",
          "51:  SwaggerAddressPort string",
          "54: }",
          "56: func loadEnvs() (envOverrides *envConfigOverrides) {",
          "57:  return &envConfigOverrides{",
          "61:  }",
          "62: }",
          "",
          "[Removed Lines]",
          "50:  SwaggerHost         string",
          "53:  SiteAddr string",
          "58:   SwaggerHost:         os.Getenv(\"SWAGGER_HOST\"),",
          "59:   SwaggerAddressPort:  os.Getenv(\"SWAGGER_ADDRESS_PORT\"),",
          "60:   SiteAddr:            os.Getenv(\"SITE_ADDR\"),",
          "",
          "[Added Lines]",
          "50:  SwaggerHost        string",
          "52:  SiteAddr           string",
          "57:   SwaggerHost:        os.Getenv(\"SWAGGER_HOST\"),",
          "58:   SwaggerAddressPort: os.Getenv(\"SWAGGER_ADDRESS_PORT\"),",
          "59:   SiteAddr:           os.Getenv(\"SITE_ADDR\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf4f8a70dce67dba111b523a7823a519daecb498",
      "candidate_info": {
        "commit_hash": "bf4f8a70dce67dba111b523a7823a519daecb498",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/bf4f8a70dce67dba111b523a7823a519daecb498",
        "files": [
          "ui/template/footer.html",
          "ui/template/header.html"
        ],
        "message": "fix(template): add template HTML",
        "before_after_code_files": [
          "ui/template/footer.html||ui/template/footer.html",
          "ui/template/header.html||ui/template/header.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/template/footer.html||ui/template/footer.html": [
          "File: ui/template/footer.html -> ui/template/footer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:         </footer>",
          "32:     </div>",
          "33: <!--customize_footer-->",
          "35: <!--customize_footer-->",
          "36: </body>",
          "37: </html>",
          "",
          "[Removed Lines]",
          "34: {{if .FooterCode }}{{.FooterCode}}{{end}}",
          "",
          "[Added Lines]",
          "34: {{if .FooterCode }}{{.FooterCode | templateHTML}}{{end}}",
          "",
          "---------------"
        ],
        "ui/template/header.html||ui/template/header.html": [
          "File: ui/template/header.html -> ui/template/header.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:             content=\"{{if $.siteinfo.Branding.Favicon }}{{$.siteinfo.Branding.Favicon}}{{else}}{{$.baseURL}}/favicon.ico{{end}}\"}",
          "78:     />",
          "79:     <!--customize_head-->",
          "81:     <!--customize_head-->",
          "82:   </head>",
          "84:   <body>",
          "85:     <!--customize_header-->",
          "87:     <!--customize_header-->",
          "88:     <div id=\"root\">",
          "",
          "[Removed Lines]",
          "80:     {{if .HeadCode }} {{.HeadCode}} {{end}}",
          "86:     {{if .HeaderCode }} {{.HeaderCode}} {{end}}",
          "",
          "[Added Lines]",
          "80:     {{if .HeadCode }} {{.HeadCode | templateHTML}} {{end}}",
          "86:     {{if .HeaderCode }} {{.HeaderCode | templateHTML}} {{end}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "912bc7a8f56e1861abb7a7bab92d36012aa6b622",
      "candidate_info": {
        "commit_hash": "912bc7a8f56e1861abb7a7bab92d36012aa6b622",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/912bc7a8f56e1861abb7a7bab92d36012aa6b622",
        "files": [
          "ui/template/footer.html",
          "ui/template/header.html"
        ],
        "message": "feat(template): add custom html in template #895",
        "before_after_code_files": [
          "ui/template/footer.html||ui/template/footer.html",
          "ui/template/header.html||ui/template/header.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/template/footer.html||ui/template/footer.html": [
          "File: ui/template/footer.html -> ui/template/footer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:             </div>",
          "31:         </footer>",
          "32:     </div>",
          "33: </body>",
          "34: </html>",
          "35: {{end}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: <!--customize_footer-->",
          "34: {{if .FooterCode }}{{.FooterCode}}{{end}}",
          "35: <!--customize_footer-->",
          "",
          "---------------"
        ],
        "ui/template/header.html||ui/template/header.html": [
          "File: ui/template/header.html -> ui/template/header.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:             name=\"twitter:image\"",
          "77:             content=\"{{if $.siteinfo.Branding.Favicon }}{{$.siteinfo.Branding.Favicon}}{{else}}{{$.baseURL}}/favicon.ico{{end}}\"}",
          "78:     />",
          "79:   </head>",
          "81:   <body>",
          "82:     <div id=\"root\">",
          "84:       <div id=\"spin-mask\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     <!--customize_head-->",
          "80:     {{if .HeadCode }} {{.HeadCode}} {{end}}",
          "81:     <!--customize_head-->",
          "85:     <!--customize_header-->",
          "86:     {{if .HeaderCode }} {{.HeaderCode}} {{end}}",
          "87:     <!--customize_header-->",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4318f1d18f96d73b9e2b90458f8ad5c2ece62e0",
      "candidate_info": {
        "commit_hash": "c4318f1d18f96d73b9e2b90458f8ad5c2ece62e0",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/c4318f1d18f96d73b9e2b90458f8ad5c2ece62e0",
        "files": [
          "internal/service/siteinfo/siteinfo_service.go"
        ],
        "message": "feat(tag): recommend tags can't contain reserved tag",
        "before_after_code_files": [
          "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
          ],
          "candidate": [
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go": [
          "File: internal/service/siteinfo/siteinfo_service.go -> internal/service/siteinfo/siteinfo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "182: func (s *SiteInfoService) SaveSiteWrite(ctx context.Context, req *schema.SiteWriteReq) (resp interface{}, err error) {",
          "183:  recommendTags, reservedTags := make([]string, 0), make([]string, 0)",
          "187:  for _, tag := range req.ReservedTags {",
          "189:  }",
          "190:  errData, err := s.tagCommonService.SetSiteWriteTag(ctx, recommendTags, reservedTags, req.UserID)",
          "191:  if err != nil {",
          "",
          "[Removed Lines]",
          "184:  for _, tag := range req.RecommendTags {",
          "185:   recommendTags = append(recommendTags, tag.SlugName)",
          "186:  }",
          "188:   reservedTags = append(reservedTags, tag.SlugName)",
          "",
          "[Added Lines]",
          "184:  recommendTagMapping, reservedTagMapping := make(map[string]bool), make(map[string]bool)",
          "186:   if !recommendTagMapping[tag.SlugName] {",
          "187:    reservedTagMapping[tag.SlugName] = true",
          "188:    reservedTags = append(reservedTags, tag.SlugName)",
          "189:   }",
          "190:  }",
          "193:  for _, tag := range req.RecommendTags {",
          "194:   if reservedTagMapping[tag.SlugName] {",
          "195:    continue",
          "196:   }",
          "197:   if !recommendTagMapping[tag.SlugName] {",
          "198:    recommendTagMapping[tag.SlugName] = true",
          "199:    recommendTags = append(recommendTags, tag.SlugName)",
          "200:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eba1d4d8d61d99d92dad5f3de357b79dd9aa793d",
      "candidate_info": {
        "commit_hash": "eba1d4d8d61d99d92dad5f3de357b79dd9aa793d",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/eba1d4d8d61d99d92dad5f3de357b79dd9aa793d",
        "files": [
          "ui/src/components/Pagination/index.tsx",
          "ui/src/pages/Layout/index.tsx",
          "ui/src/pages/Questions/Detail/index.tsx",
          "ui/src/pages/Questions/EditAnswer/index.tsx",
          "ui/src/pages/Tags/Detail/index.tsx"
        ],
        "message": "fix: use ScrollRestoration component control page position",
        "before_after_code_files": [
          "ui/src/components/Pagination/index.tsx||ui/src/components/Pagination/index.tsx",
          "ui/src/pages/Layout/index.tsx||ui/src/pages/Layout/index.tsx",
          "ui/src/pages/Questions/Detail/index.tsx||ui/src/pages/Questions/Detail/index.tsx",
          "ui/src/pages/Questions/EditAnswer/index.tsx||ui/src/pages/Questions/EditAnswer/index.tsx",
          "ui/src/pages/Tags/Detail/index.tsx||ui/src/pages/Tags/Detail/index.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/src/components/Pagination/index.tsx||ui/src/components/Pagination/index.tsx": [
          "File: ui/src/components/Pagination/index.tsx -> ui/src/components/Pagination/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import { useTranslation } from 'react-i18next';",
          "23: import { useSearchParams, useNavigate, useLocation } from 'react-router-dom';",
          "27: interface Props {",
          "28:   currentPage: number;",
          "",
          "[Removed Lines]",
          "25: import { scrollToDocTop, floppyNavigation } from '@/utils';",
          "",
          "[Added Lines]",
          "25: import { floppyNavigation } from '@/utils';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:           e.preventDefault();",
          "72:           e.stopPropagation();",
          "73:           navigate(path);",
          "75:         }",
          "76:       }}>",
          "77:       {page}",
          "",
          "[Removed Lines]",
          "74:           scrollToDocTop();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:             if (floppyNavigation.shouldProcessLinkClick(e)) {",
          "116:               e.preventDefault();",
          "117:               navigate(handleParams(currentPage - 1));",
          "119:             }",
          "120:           }}>",
          "121:           {t('prev')}",
          "",
          "[Removed Lines]",
          "118:               scrollToDocTop();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:             if (floppyNavigation.shouldProcessLinkClick(e)) {",
          "213:               e.preventDefault();",
          "214:               navigate(handleParams(currentPage + 1));",
          "216:             }",
          "217:           }}>",
          "218:           {t('next')}",
          "",
          "[Removed Lines]",
          "215:               scrollToDocTop();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ui/src/pages/Layout/index.tsx||ui/src/pages/Layout/index.tsx": [
          "File: ui/src/pages/Layout/index.tsx -> ui/src/pages/Layout/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import { FC, memo, useEffect } from 'react';",
          "22: import { HelmetProvider } from 'react-helmet-async';",
          "24: import { SWRConfig } from 'swr';",
          "",
          "[Removed Lines]",
          "21: import { Outlet, useLocation } from 'react-router-dom';",
          "",
          "[Added Lines]",
          "21: import { Outlet, useLocation, ScrollRestoration } from 'react-router-dom';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:         <Footer />",
          "87:         <Customize />",
          "88:         <LoginToContinueModal visible={showLoginToContinueModal} />",
          "89:       </SWRConfig>",
          "90:     </HelmetProvider>",
          "91:   );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:         <ScrollRestoration />",
          "",
          "---------------"
        ],
        "ui/src/pages/Questions/Detail/index.tsx||ui/src/pages/Questions/Detail/index.tsx": [
          "File: ui/src/pages/Questions/Detail/index.tsx -> ui/src/pages/Questions/Detail/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:     if (!qid) {",
          "215:       return;",
          "216:     }",
          "218:     getDetail();",
          "219:     requestAnswers();",
          "220:   }, [qid]);",
          "",
          "[Removed Lines]",
          "217:     scrollToDocTop();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ui/src/pages/Questions/EditAnswer/index.tsx||ui/src/pages/Questions/EditAnswer/index.tsx": [
          "File: ui/src/pages/Questions/EditAnswer/index.tsx -> ui/src/pages/Questions/EditAnswer/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import { Row, Col, Form, Button, Card } from 'react-bootstrap';",
          "22: import { useParams, useNavigate, Link } from 'react-router-dom';",
          "23: import { useTranslation } from 'react-i18next';",
          "",
          "[Removed Lines]",
          "20: import React, { useState, useRef, useEffect, useLayoutEffect } from 'react';",
          "",
          "[Added Lines]",
          "20: import React, { useState, useRef, useEffect } from 'react';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: import dayjs from 'dayjs';",
          "26: import classNames from 'classnames';",
          "29: import { usePageTags, usePromptWithUnload } from '@/hooks';",
          "30: import { useCaptchaPlugin, useRenderHtmlPlugin } from '@/utils/pluginKit';",
          "31: import { pathFactory } from '@/router/pathFactory';",
          "",
          "[Removed Lines]",
          "28: import { handleFormError, scrollToDocTop } from '@/utils';",
          "",
          "[Added Lines]",
          "28: import { handleFormError } from '@/utils';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "47: const Index = () => {",
          "48:   const { aid = '', qid = '' } = useParams();",
          "49:   const [focusType, setForceType] = useState('');",
          "54:   const { t } = useTranslation('translation', { keyPrefix: 'edit_answer' });",
          "55:   const navigate = useNavigate();",
          "",
          "[Removed Lines]",
          "50:   useLayoutEffect(() => {",
          "51:     scrollToDocTop();",
          "52:   }, []);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ui/src/pages/Tags/Detail/index.tsx||ui/src/pages/Tags/Detail/index.tsx": [
          "File: ui/src/pages/Tags/Detail/index.tsx -> ui/src/pages/Tags/Detail/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: } from '@/services';",
          "39: import QuestionList, { QUESTION_ORDER_KEYS } from '@/components/QuestionList';",
          "40: import HotQuestions from '@/components/HotQuestions';",
          "42: import { pathFactory } from '@/router/pathFactory';",
          "44: const Index: FC = () => {",
          "",
          "[Removed Lines]",
          "41: import { escapeRemove, guard, scrollToDocTop } from '@/utils';",
          "",
          "[Added Lines]",
          "41: import { escapeRemove, guard } from '@/utils';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     });",
          "76:   };",
          "84:   useEffect(() => {",
          "85:     if (tagResp) {",
          "86:       const info = { ...tagResp };",
          "",
          "[Removed Lines]",
          "78:   useEffect(() => {",
          "79:     if (!listLoading) {",
          "80:       scrollToDocTop();",
          "81:     }",
          "82:   }, [listLoading]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c553f52f849082c8799930d37718772a595e7f8",
      "candidate_info": {
        "commit_hash": "6c553f52f849082c8799930d37718772a595e7f8",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/6c553f52f849082c8799930d37718772a595e7f8",
        "files": [
          "internal/migrations/v18.go",
          "internal/schema/siteinfo_schema.go",
          "internal/service/siteinfo/siteinfo_service.go",
          "internal/service/tag_common/tag_common.go"
        ],
        "message": "feat(admin): update recommend_tags and reserved_tags filed in site write req",
        "before_after_code_files": [
          "internal/migrations/v18.go||internal/migrations/v18.go",
          "internal/schema/siteinfo_schema.go||internal/schema/siteinfo_schema.go",
          "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go",
          "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
          ],
          "candidate": [
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/migrations/v18.go||internal/migrations/v18.go": [
          "File: internal/migrations/v18.go -> internal/migrations/v18.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:   return fmt.Errorf(\"get config failed: %w\", err)",
          "58:  }",
          "59:  if exist {",
          "61:   _ = json.Unmarshal([]byte(writeSiteInfo.Content), content)",
          "62:   content.RestrictAnswer = true",
          "63:   data, _ := json.Marshal(content)",
          "",
          "[Removed Lines]",
          "60:   content := &schema.SiteWriteReq{}",
          "",
          "[Added Lines]",
          "60:   type OldSiteWriteReq struct {",
          "61:    RestrictAnswer bool     `validate:\"omitempty\" form:\"restrict_answer\" json:\"restrict_answer\"`",
          "62:    RequiredTag    bool     `validate:\"omitempty\" form:\"required_tag\" json:\"required_tag\"`",
          "63:    RecommendTags  []string `validate:\"omitempty\" form:\"recommend_tags\" json:\"recommend_tags\"`",
          "64:    ReservedTags   []string `validate:\"omitempty\" form:\"reserved_tags\" json:\"reserved_tags\"`",
          "65:    UserID         string   `json:\"-\"`",
          "66:   }",
          "67:   content := &OldSiteWriteReq{}",
          "",
          "---------------"
        ],
        "internal/schema/siteinfo_schema.go||internal/schema/siteinfo_schema.go": [
          "File: internal/schema/siteinfo_schema.go -> internal/schema/siteinfo_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: type SiteWriteReq struct {",
          "80: }",
          "",
          "[Removed Lines]",
          "75:  RestrictAnswer bool     `validate:\"omitempty\" form:\"restrict_answer\" json:\"restrict_answer\"`",
          "76:  RequiredTag    bool     `validate:\"omitempty\" form:\"required_tag\" json:\"required_tag\"`",
          "77:  RecommendTags  []string `validate:\"omitempty\" form:\"recommend_tags\" json:\"recommend_tags\"`",
          "78:  ReservedTags   []string `validate:\"omitempty\" form:\"reserved_tags\" json:\"reserved_tags\"`",
          "79:  UserID         string   `json:\"-\"`",
          "",
          "[Added Lines]",
          "75:  RestrictAnswer bool            `validate:\"omitempty\" json:\"restrict_answer\"`",
          "76:  RequiredTag    bool            `validate:\"omitempty\" json:\"required_tag\"`",
          "77:  RecommendTags  []*SiteWriteTag `validate:\"omitempty,dive\" json:\"recommend_tags\"`",
          "78:  ReservedTags   []*SiteWriteTag `validate:\"omitempty,dive\" json:\"reserved_tags\"`",
          "79:  UserID         string          `json:\"-\"`",
          "80: }",
          "83: type SiteWriteTag struct {",
          "84:  SlugName    string `validate:\"required\" json:\"slug_name\"`",
          "85:  DisplayName string `json:\"display_name\"`",
          "",
          "---------------"
        ],
        "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go": [
          "File: internal/service/siteinfo/siteinfo_service.go -> internal/service/siteinfo/siteinfo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "182: func (s *SiteInfoService) SaveSiteWrite(ctx context.Context, req *schema.SiteWriteReq) (resp interface{}, err error) {",
          "184:  if err != nil {",
          "185:   return errData, err",
          "186:  }",
          "",
          "[Removed Lines]",
          "183:  errData, err := s.tagCommonService.SetSiteWriteTag(ctx, req.RecommendTags, req.ReservedTags, req.UserID)",
          "",
          "[Added Lines]",
          "183:  recommendTags, reservedTags := make([]string, 0), make([]string, 0)",
          "184:  for _, tag := range req.RecommendTags {",
          "185:   recommendTags = append(recommendTags, tag.SlugName)",
          "186:  }",
          "187:  for _, tag := range req.ReservedTags {",
          "188:   reservedTags = append(reservedTags, tag.SlugName)",
          "189:  }",
          "190:  errData, err := s.tagCommonService.SetSiteWriteTag(ctx, recommendTags, reservedTags, req.UserID)",
          "",
          "---------------"
        ],
        "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go": [
          "File: internal/service/tag_common/tag_common.go -> internal/service/tag_common/tag_common.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:  return resp, nil",
          "159: }",
          "163:  list, err := ts.tagCommonRepo.GetRecommendTagList(ctx)",
          "164:  if err != nil {",
          "165:   return tags, err",
          "166:  }",
          "167:  for _, item := range list {",
          "169:  }",
          "170:  return tags, nil",
          "171: }",
          "",
          "[Removed Lines]",
          "161: func (ts *TagCommonService) GetSiteWriteRecommendTag(ctx context.Context) (tags []string, err error) {",
          "162:  tags = make([]string, 0)",
          "168:   tags = append(tags, item.SlugName)",
          "",
          "[Added Lines]",
          "161: func (ts *TagCommonService) GetSiteWriteRecommendTag(ctx context.Context) (tags []*schema.SiteWriteTag, err error) {",
          "162:  tags = make([]*schema.SiteWriteTag, 0)",
          "168:   tags = append(tags, &schema.SiteWriteTag{",
          "169:    SlugName:    item.SlugName,",
          "170:    DisplayName: item.DisplayName,",
          "171:   })",
          "172:  }",
          "173:  return tags, nil",
          "174: }",
          "176: func (ts *TagCommonService) GetSiteWriteReservedTag(ctx context.Context) (tags []*schema.SiteWriteTag, err error) {",
          "177:  tags = make([]*schema.SiteWriteTag, 0)",
          "178:  list, err := ts.tagCommonRepo.GetReservedTagList(ctx)",
          "179:  if err != nil {",
          "180:   return tags, err",
          "181:  }",
          "182:  for _, item := range list {",
          "183:   tags = append(tags, &schema.SiteWriteTag{",
          "184:    SlugName:    item.SlugName,",
          "185:    DisplayName: item.DisplayName,",
          "186:   })",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "203:  return nil, nil",
          "204: }",
          "219: func (ts *TagCommonService) SetTagsAttribute(ctx context.Context, tags []string, attribute string) (err error) {",
          "221:  switch attribute {",
          "222:  case \"recommend\":",
          "224:  case \"reserved\":",
          "226:  default:",
          "227:   return",
          "228:  }",
          "229:  if err != nil {",
          "230:   return err",
          "231:  }",
          "233:  if err != nil {",
          "234:   return err",
          "235:  }",
          "",
          "[Removed Lines]",
          "206: func (ts *TagCommonService) GetSiteWriteReservedTag(ctx context.Context) (tags []string, err error) {",
          "207:  tags = make([]string, 0)",
          "208:  list, err := ts.tagCommonRepo.GetReservedTagList(ctx)",
          "209:  if err != nil {",
          "210:   return tags, err",
          "211:  }",
          "212:  for _, item := range list {",
          "213:   tags = append(tags, item.SlugName)",
          "214:  }",
          "215:  return tags, nil",
          "216: }",
          "220:  var tagslist []string",
          "223:   tagslist, err = ts.GetSiteWriteRecommendTag(ctx)",
          "225:   tagslist, err = ts.GetSiteWriteReservedTag(ctx)",
          "232:  err = ts.tagCommonRepo.UpdateTagsAttribute(ctx, tagslist, attribute, false)",
          "",
          "[Added Lines]",
          "226:  var oldTags []*entity.Tag",
          "229:   oldTags, err = ts.tagCommonRepo.GetRecommendTagList(ctx)",
          "231:   oldTags, err = ts.tagCommonRepo.GetReservedTagList(ctx)",
          "238:  oldTagSlugNameList := make([]string, 0)",
          "239:  for _, tag := range oldTags {",
          "240:   oldTagSlugNameList = append(oldTagSlugNameList, tag.SlugName)",
          "241:  }",
          "243:  err = ts.tagCommonRepo.UpdateTagsAttribute(ctx, oldTagSlugNameList, attribute, false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ba1ad9fa2fa9c40ae2f1c814dc9177c6c559edc",
      "candidate_info": {
        "commit_hash": "1ba1ad9fa2fa9c40ae2f1c814dc9177c6c559edc",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/1ba1ad9fa2fa9c40ae2f1c814dc9177c6c559edc",
        "files": [
          "internal/service/tag_common/tag_common.go"
        ],
        "message": "fix(tag): remove check when recommend tags is empty",
        "before_after_code_files": [
          "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go": [
          "File: internal/service/tag_common/tag_common.go -> internal/service/tag_common/tag_common.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:  if err != nil {",
          "269:   return false, err",
          "270:  }",
          "272:   return true, nil",
          "273:  }",
          "274:  tagNames := make([]string, 0)",
          "",
          "[Removed Lines]",
          "271:  if !taginfo.RequiredTag {",
          "",
          "[Added Lines]",
          "271:  if !taginfo.RequiredTag || len(taginfo.RecommendTags) == 0 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f30a1530cd2c354c16eeb6043e779502980515b",
      "candidate_info": {
        "commit_hash": "8f30a1530cd2c354c16eeb6043e779502980515b",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/8f30a1530cd2c354c16eeb6043e779502980515b",
        "files": [
          "cmd/wire_gen.go",
          "internal/service/review/review_service.go"
        ],
        "message": "fix(question): update answer count after reviewing",
        "before_after_code_files": [
          "cmd/wire_gen.go||cmd/wire_gen.go",
          "internal/service/review/review_service.go||internal/service/review/review_service.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cmd/wire_gen.go||cmd/wire_gen.go": [
          "File: cmd/wire_gen.go -> cmd/wire_gen.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:  answerActivityService := activity2.NewAnswerActivityService(answerActivityRepo, configService)",
          "194:  externalNotificationService := notification.NewExternalNotificationService(dataData, userNotificationConfigRepo, followRepo, emailService, userRepo, externalNotificationQueueService, userExternalLoginRepo, siteInfoCommonService)",
          "195:  reviewRepo := review.NewReviewRepo(dataData)",
          "197:  questionService := content.NewQuestionService(questionRepo, tagCommonService, questionCommon, userCommon, userRepo, userRoleRelService, revisionService, metaCommonService, collectionCommon, answerActivityService, emailService, notificationQueueService, externalNotificationQueueService, activityQueueService, siteInfoCommonService, externalNotificationService, reviewService, configService)",
          "198:  answerService := content.NewAnswerService(answerRepo, questionRepo, questionCommon, userCommon, collectionCommon, userRepo, revisionService, answerActivityService, answerCommon, voteRepo, emailService, userRoleRelService, notificationQueueService, externalNotificationQueueService, activityQueueService, reviewService)",
          "199:  reportHandle := report_handle.NewReportHandle(questionService, answerService, commentService)",
          "",
          "[Removed Lines]",
          "196:  reviewService := review2.NewReviewService(reviewRepo, objService, userCommon, userRepo, questionRepo, answerRepo, userRoleRelService, externalNotificationQueueService, tagCommonService, notificationQueueService, siteInfoCommonService)",
          "",
          "[Added Lines]",
          "196:  reviewService := review2.NewReviewService(reviewRepo, objService, userCommon, userRepo, questionRepo, answerRepo, userRoleRelService, externalNotificationQueueService, tagCommonService, questionCommon, notificationQueueService, siteInfoCommonService)",
          "",
          "---------------"
        ],
        "internal/service/review/review_service.go||internal/service/review/review_service.go": [
          "File: internal/service/review/review_service.go -> internal/service/review/review_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:  answerRepo                       answercommon.AnswerRepo",
          "64:  userRoleService                  *role.UserRoleRelService",
          "65:  tagCommon                        *tagcommon.TagCommonService",
          "66:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService",
          "67:  notificationQueueService         notice_queue.NotificationQueueService",
          "68:  siteInfoService                  siteinfo_common.SiteInfoCommonService",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:  questionCommon                   *questioncommon.QuestionCommon",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:  userRoleService *role.UserRoleRelService,",
          "80:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService,",
          "81:  tagCommon *tagcommon.TagCommonService,",
          "82:  notificationQueueService notice_queue.NotificationQueueService,",
          "83:  siteInfoService siteinfo_common.SiteInfoCommonService,",
          "84: ) *ReviewService {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  questionCommon *questioncommon.QuestionCommon,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:   userRoleService:                  userRoleService,",
          "93:   externalNotificationQueueService: externalNotificationQueueService,",
          "94:   tagCommon:                        tagCommon,",
          "95:   notificationQueueService:         notificationQueueService,",
          "96:   siteInfoService:                  siteInfoService,",
          "97:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   questionCommon:                   questionCommon,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "295:    cs.notificationAnswerTheQuestion(ctx, questionInfo.UserID, questionInfo.ID, answerInfo.ID,",
          "296:     answerInfo.UserID, questionInfo.Title, answerInfo.OriginalText)",
          "297:   }",
          "298:   userAnswerCount, err := cs.answerRepo.GetCountByUserID(ctx, answerInfo.UserID)",
          "299:   if err != nil {",
          "300:    log.Errorf(\"get user answer count failed, err: %v\", err)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301:   if err := cs.questionCommon.UpdateAnswerCount(ctx, answerInfo.QuestionID); err != nil {",
          "302:    log.Errorf(\"update question answer count failed, err: %v\", err)",
          "303:   }",
          "304:   if err := cs.questionCommon.UpdateLastAnswer(ctx, answerInfo.QuestionID, uid.DeShortID(answerInfo.ID)); err != nil {",
          "305:    log.Errorf(\"update question last answer failed, err: %v\", err)",
          "306:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2120ff582e30adca01e314885d6703a0ff907f0",
      "candidate_info": {
        "commit_hash": "f2120ff582e30adca01e314885d6703a0ff907f0",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/f2120ff582e30adca01e314885d6703a0ff907f0",
        "files": [
          "answer.db",
          "cmd/wire_gen.go",
          "internal/service/mock/siteinfo_repo_mock.go",
          "ui/public/index.html",
          "ui/src/components/Customize/index.tsx"
        ],
        "message": "fix: test custome content",
        "before_after_code_files": [
          "cmd/wire_gen.go||cmd/wire_gen.go",
          "internal/service/mock/siteinfo_repo_mock.go||internal/service/mock/siteinfo_repo_mock.go",
          "ui/public/index.html||ui/public/index.html",
          "ui/src/components/Customize/index.tsx||ui/src/components/Customize/index.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cmd/wire_gen.go||cmd/wire_gen.go": [
          "File: cmd/wire_gen.go -> cmd/wire_gen.go"
        ],
        "internal/service/mock/siteinfo_repo_mock.go||internal/service/mock/siteinfo_repo_mock.go": [
          "File: internal/service/mock/siteinfo_repo_mock.go -> internal/service/mock/siteinfo_repo_mock.go"
        ],
        "ui/public/index.html||ui/public/index.html": [
          "File: ui/public/index.html -> ui/public/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   <body>",
          "31:     <noscript>You need to enable JavaScript to run this app.</noscript>",
          "32:     <div id=\"root\">",
          "34:       <div id=\"spin-mask\">",
          "35:         <noscript>",
          "36:           <style>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:       <!--customize_header-->",
          "34:       \u8fd9\u90e8\u5206\u662fheader233",
          "35:       <h1>123</h1>",
          "36:       <!--customize_header-->",
          "",
          "---------------"
        ],
        "ui/src/components/Customize/index.tsx||ui/src/components/Customize/index.tsx": [
          "File: ui/src/components/Customize/index.tsx -> ui/src/components/Customize/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: const renderCustomArea = (el, part, pos: pos, content: string = '') => {",
          "69:   let startMarkNode;",
          "70:   let endMarkNode;",
          "71:   const { childNodes } = el;",
          "72:   for (let i = 0; i < childNodes.length; i += 1) {",
          "73:     const node = childNodes[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:   let accumulatedContent = ''; //",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:       }",
          "81:     }",
          "82:   }",
          "83:   if (startMarkNode && endMarkNode) {",
          "84:     while (",
          "85:       startMarkNode.nextSibling &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:   if (startMarkNode && endMarkNode) {",
          "87:     let contentNode = startMarkNode.nextSibling;",
          "88:     while (contentNode && contentNode !== endMarkNode) {",
          "89:       if (contentNode.nodeType === 1) {",
          "91:         accumulatedContent += contentNode.outerHTML;",
          "92:       } else if (contentNode.nodeType === 3) {",
          "94:         accumulatedContent += contentNode.textContent;",
          "95:       }",
          "96:       contentNode = contentNode.nextSibling;",
          "97:     }",
          "98:   }",
          "100:   console.log('====', accumulatedContent);",
          "103:   if (accumulatedContent.includes(content)) {",
          "104:     console.log('Content already exists. No insertion needed.');",
          "105:     return;",
          "106:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107: const handleCustomHeader = (content) => {",
          "108:   const el = document.body;",
          "109:   renderCustomArea(el, CUSTOM_MARK_HEADER, 'afterbegin', content);",
          "110: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:   console.log('====11', content);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d33a6572758fa07d2e7f2af4c1ed69965f0ca37d",
      "candidate_info": {
        "commit_hash": "d33a6572758fa07d2e7f2af4c1ed69965f0ca37d",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/d33a6572758fa07d2e7f2af4c1ed69965f0ca37d",
        "files": [
          "ui/src/utils/common.ts"
        ],
        "message": "fix: remove  content  classname",
        "before_after_code_files": [
          "ui/src/utils/common.ts||ui/src/utils/common.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/src/utils/common.ts||ui/src/utils/common.ts": [
          "File: ui/src/utils/common.ts -> ui/src/utils/common.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "189: }",
          "191: function formatDiffPart(part: any, className: string): string {",
          "192:   if (part.value.replace(/\\n/g, '').length <= 0) {",
          "193:     if (part.value.match(/\\n/g)?.length > 1) {",
          "194:       const value = part.value.replace(/\\n/, '');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:   console.log('333333', part);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "220:       return formatDiffPart(part, 'review-text-add');",
          "221:     }",
          "222:     if (part.removed) {",
          "224:     }",
          "226:     return part.value;",
          "",
          "[Removed Lines]",
          "223:       return formatDiffPart(part, 'review-text-remove text-decoration-none');",
          "",
          "[Added Lines]",
          "224:       return formatDiffPart(part, 'review-text-delete text-decoration-none');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ad8a83f8c05e95bf9bb505293970037033ba999",
      "candidate_info": {
        "commit_hash": "7ad8a83f8c05e95bf9bb505293970037033ba999",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/7ad8a83f8c05e95bf9bb505293970037033ba999",
        "files": [
          "internal/cli/build.go"
        ],
        "message": "fix(build): get specific version of plugins",
        "before_after_code_files": [
          "internal/cli/build.go||internal/cli/build.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "internal/cli/build.go||internal/cli/build.go": [
          "File: internal/cli/build.go -> internal/cli/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:  }",
          "185:  for _, p := range b.plugins {",
          "188:   }",
          "191:   if err != nil {",
          "192:    return err",
          "193:   }",
          "",
          "[Removed Lines]",
          "186:   if len(p.Path) == 0 {",
          "187:    continue",
          "189:   replacement := fmt.Sprintf(\"%s@v%s=%s\", p.Name, p.Version, p.Path)",
          "190:   err = b.newExecCmd(\"go\", \"mod\", \"edit\", \"-replace\", replacement).Run()",
          "",
          "[Added Lines]",
          "187:   if len(p.Path) > 0 {",
          "188:    replacement := fmt.Sprintf(\"%s@%s=%s\", p.Name, p.Version, p.Path)",
          "189:    err = b.newExecCmd(\"go\", \"mod\", \"edit\", \"-replace\", replacement).Run()",
          "190:   } else if len(p.Version) > 0 {",
          "192:    err = b.newExecCmd(\"go\", \"get\", fmt.Sprintf(\"%s@%s\", p.Name, p.Version)).Run()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c43e85d89095e239ce6a2250514be1b177f211e",
      "candidate_info": {
        "commit_hash": "4c43e85d89095e239ce6a2250514be1b177f211e",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/4c43e85d89095e239ce6a2250514be1b177f211e",
        "files": [
          "internal/base/constant/site_info.go",
          "internal/service/export/email_service.go",
          "internal/service/siteinfo/siteinfo_service.go"
        ],
        "message": "feat(email): add mask for email config\u02c6",
        "before_after_code_files": [
          "internal/base/constant/site_info.go||internal/base/constant/site_info.go",
          "internal/service/export/email_service.go||internal/service/export/email_service.go",
          "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [
            "internal/service/export/email_service.go||internal/service/export/email_service.go",
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
          ],
          "candidate": [
            "internal/service/export/email_service.go||internal/service/export/email_service.go",
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/base/constant/site_info.go||internal/base/constant/site_info.go": [
          "File: internal/base/constant/site_info.go -> internal/base/constant/site_info.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:  ColorSchemeDark    = \"dark\"",
          "45:  ColorSchemeSystem  = \"system\"",
          "46: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: const (",
          "49:  EmailConfigKey = \"email.config\"",
          "50: )",
          "",
          "---------------"
        ],
        "internal/service/export/email_service.go||internal/service/export/email_service.go": [
          "File: internal/service/export/email_service.go -> internal/service/export/email_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "328: }",
          "330: func (es *EmailService) GetEmailConfig(ctx context.Context) (ec *EmailConfig, err error) {",
          "332:  if err != nil {",
          "333:   return nil, err",
          "334:  }",
          "",
          "[Removed Lines]",
          "331:  emailConf, err := es.configService.GetStringValue(ctx, \"email.config\")",
          "",
          "[Added Lines]",
          "331:  emailConf, err := es.configService.GetStringValue(ctx, constant.EmailConfigKey)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "345: func (es *EmailService) SetEmailConfig(ctx context.Context, ec *EmailConfig) (err error) {",
          "346:  data, _ := json.Marshal(ec)",
          "348: }",
          "",
          "[Removed Lines]",
          "347:  return es.configService.UpdateConfig(ctx, \"email.config\", string(data))",
          "",
          "[Added Lines]",
          "347:  return es.configService.UpdateConfig(ctx, constant.EmailConfigKey, string(data))",
          "",
          "---------------"
        ],
        "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go": [
          "File: internal/service/siteinfo/siteinfo_service.go -> internal/service/siteinfo/siteinfo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "257:  }",
          "258:  resp = &schema.GetSMTPConfigResp{}",
          "259:  _ = copier.Copy(resp, emailConfig)",
          "260:  return resp, nil",
          "261: }",
          "264: func (s *SiteInfoService) UpdateSMTPConfig(ctx context.Context, req *schema.UpdateSMTPConfigReq) (err error) {",
          "265:  ec := &export.EmailConfig{}",
          "266:  _ = copier.Copy(ec, req)",
          "268:  err = s.emailService.SetEmailConfig(ctx, ec)",
          "269:  if err != nil {",
          "270:   return err",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "261:  resp.SMTPPassword = strings.Repeat(\"*\", len(resp.SMTPPassword))",
          "267:  emailConfig, err := s.emailService.GetEmailConfig(ctx)",
          "268:  if err != nil {",
          "269:   return err",
          "270:  }",
          "275:  if len(ec.SMTPPassword) > 0 && ec.SMTPPassword == strings.Repeat(\"*\", len(ec.SMTPPassword)) {",
          "276:   ec.SMTPPassword = emailConfig.SMTPPassword",
          "277:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7ebe3083b717f0556ab5f27c79502b5380be1c3",
      "candidate_info": {
        "commit_hash": "b7ebe3083b717f0556ab5f27c79502b5380be1c3",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/b7ebe3083b717f0556ab5f27c79502b5380be1c3",
        "files": [
          "internal/controller/tag_controller.go",
          "internal/schema/tag_schema.go",
          "internal/service/tag/tag_service.go",
          "internal/service/tag_common/tag_common.go"
        ],
        "message": "feat(tag): update tags search API",
        "before_after_code_files": [
          "internal/controller/tag_controller.go||internal/controller/tag_controller.go",
          "internal/schema/tag_schema.go||internal/schema/tag_schema.go",
          "internal/service/tag/tag_service.go||internal/service/tag/tag_service.go",
          "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "internal/controller/tag_controller.go||internal/controller/tag_controller.go": [
          "File: internal/controller/tag_controller.go -> internal/controller/tag_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "",
          "[Removed Lines]",
          "23:  \"strings\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:  handler.HandleResponse(ctx, err, resp)",
          "69: }",
          "79: func (tc *TagController) GetTagsBySlugName(ctx *gin.Context) {",
          "80:  req := &schema.SearchTagsBySlugName{}",
          "81:  if handler.BindAndCheck(ctx, req) {",
          "82:   return",
          "83:  }",
          "87:  handler.HandleResponse(ctx, err, resp)",
          "88: }",
          "",
          "[Removed Lines]",
          "84:  req.TagList = strings.Split(req.Tags, \",\")",
          "86:  resp, err := tc.tagService.GetTagsBySlugName(ctx, req.TagList)",
          "",
          "[Added Lines]",
          "83:  resp, err := tc.tagService.GetTagsBySlugName(ctx, req)",
          "",
          "---------------"
        ],
        "internal/schema/tag_schema.go||internal/schema/tag_schema.go": [
          "File: internal/schema/tag_schema.go -> internal/schema/tag_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:  IsAdmin bool   `json:\"-\"`",
          "34: }",
          "36: type SearchTagsBySlugName struct {",
          "40: }",
          "",
          "[Removed Lines]",
          "37:  Tags    string   `json:\"tags\" form:\"tags\"`",
          "38:  TagList []string `json:\"-\"`",
          "39:  IsAdmin bool     `json:\"-\"`",
          "",
          "[Added Lines]",
          "39:  Tags string `form:\"tags\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "298:  Reserved        bool   `json:\"reserved\"`",
          "299: }",
          "302:  SlugName    string `json:\"slug_name\"`",
          "303:  DisplayName string `json:\"display_name\"`",
          "304:  Recommend   bool   `json:\"recommend\"`",
          "",
          "[Removed Lines]",
          "301: type SearchTagLikeResp struct {",
          "",
          "[Added Lines]",
          "302: type GetTagBasicResp struct {",
          "",
          "---------------"
        ],
        "internal/service/tag/tag_service.go||internal/service/tag/tag_service.go": [
          "File: internal/service/tag/tag_service.go -> internal/service/tag/tag_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "190:  return resp, nil",
          "191: }",
          "196:  if err != nil {",
          "198:  }",
          "203:  }",
          "205: }",
          "",
          "[Removed Lines]",
          "193: func (ts *TagService) GetTagsBySlugName(ctx context.Context, tagNames []string) ([]*schema.TagItem, error) {",
          "194:  tagList := make([]*schema.TagItem, 0)",
          "195:  tagListInDB, err := ts.tagCommonService.GetTagListByNames(ctx, tagNames)",
          "197:   return tagList, err",
          "199:  for _, tag := range tagListInDB {",
          "200:   tagItem := &schema.TagItem{}",
          "201:   copier.Copy(tagItem, tag)",
          "202:   tagList = append(tagList, tagItem)",
          "204:  return tagList, nil",
          "",
          "[Added Lines]",
          "195: func (ts *TagService) GetTagsBySlugName(ctx context.Context, req *schema.SearchTagsBySlugName) (",
          "196:  resp []*schema.GetTagBasicResp, err error) {",
          "197:  resp = make([]*schema.GetTagBasicResp, 0)",
          "198:  tagSlugNames := strings.Split(req.Tags, \",\")",
          "199:  if len(tagSlugNames) == 0 {",
          "200:   return resp, nil",
          "201:  }",
          "202:  tagList, err := ts.tagCommonService.GetTagListByNames(ctx, tagSlugNames)",
          "204:   return resp, err",
          "206:  for _, tag := range tagList {",
          "207:   tagItem := &schema.GetTagBasicResp{}",
          "208:   _ = copier.Copy(tagItem, tag)",
          "209:   resp = append(resp, tagItem)",
          "211:  return resp, nil",
          "",
          "---------------"
        ],
        "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go": [
          "File: internal/service/tag_common/tag_common.go -> internal/service/tag_common/tag_common.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: }",
          "112:  tags, err := ts.tagCommonRepo.GetTagListByName(ctx, req.Tag, len(req.Tag) == 0, false)",
          "113:  if err != nil {",
          "114:   return",
          "",
          "[Removed Lines]",
          "111: func (ts *TagCommonService) SearchTagLike(ctx context.Context, req *schema.SearchTagLikeReq) (resp []schema.SearchTagLikeResp, err error) {",
          "",
          "[Added Lines]",
          "111: func (ts *TagCommonService) SearchTagLike(ctx context.Context, req *schema.SearchTagLikeReq) (resp []schema.GetTagBasicResp, err error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:    tag.Recommend = mainTagMap[mainTagID].Recommend",
          "143:   }",
          "144:  }",
          "146:  repetitiveTag := make(map[string]bool)",
          "147:  for _, tag := range tags {",
          "148:   if _, ok := repetitiveTag[tag.SlugName]; !ok {",
          "150:    item.SlugName = tag.SlugName",
          "151:    item.DisplayName = tag.DisplayName",
          "152:    item.Recommend = tag.Recommend",
          "",
          "[Removed Lines]",
          "145:  resp = make([]schema.SearchTagLikeResp, 0)",
          "149:    item := schema.SearchTagLikeResp{}",
          "",
          "[Added Lines]",
          "145:  resp = make([]schema.GetTagBasicResp, 0)",
          "149:    item := schema.GetTagBasicResp{}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfe04cfa246f5346771f202889335fcd2f3628e4",
      "candidate_info": {
        "commit_hash": "bfe04cfa246f5346771f202889335fcd2f3628e4",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/bfe04cfa246f5346771f202889335fcd2f3628e4",
        "files": [
          "ui/src/components/Customize/index.tsx",
          "ui/template/header.html"
        ],
        "message": "fix: template adds logo to distinguish html source #895",
        "before_after_code_files": [
          "ui/src/components/Customize/index.tsx||ui/src/components/Customize/index.tsx",
          "ui/template/header.html||ui/template/header.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/src/components/Customize/index.tsx||ui/src/components/Customize/index.tsx": [
          "File: ui/src/components/Customize/index.tsx -> ui/src/components/Customize/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:   }",
          "54:   scriptList?.forEach((so) => {",
          "55:     const script = document.createElement('script');",
          "59:     for (let i = 0; i < so.attributes.length; i += 1) {",
          "60:       const attr = so.attributes[i];",
          "61:       script.setAttribute(attr.name, attr.value);",
          "",
          "[Removed Lines]",
          "56:     script.text = `(() => {",
          "57:       ${so.text}",
          "58:     })();`;",
          "",
          "[Added Lines]",
          "56:     script.text = `(() => {${so.text}})();`;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68: const renderCustomArea = (el, part, pos: pos, content: string = '') => {",
          "69:   let startMarkNode;",
          "70:   let endMarkNode;",
          "72:   const { childNodes } = el;",
          "73:   for (let i = 0; i < childNodes.length; i += 1) {",
          "74:     const node = childNodes[i];",
          "",
          "[Removed Lines]",
          "71:   let accumulatedContent = ''; //",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:     }",
          "83:   }",
          "108:   if (startMarkNode && endMarkNode) {",
          "109:     while (",
          "110:       startMarkNode.nextSibling &&",
          "",
          "[Removed Lines]",
          "86:   if (startMarkNode && endMarkNode) {",
          "87:     let contentNode = startMarkNode.nextSibling;",
          "88:     while (contentNode && contentNode !== endMarkNode) {",
          "89:       if (contentNode.nodeType === 1) {",
          "91:         accumulatedContent += contentNode.outerHTML;",
          "92:       } else if (contentNode.nodeType === 3) {",
          "94:         accumulatedContent += contentNode.textContent;",
          "95:       }",
          "96:       contentNode = contentNode.nextSibling;",
          "97:     }",
          "98:   }",
          "100:   console.log('====', accumulatedContent);",
          "103:   if (accumulatedContent.includes(content)) {",
          "104:     console.log('Content already exists. No insertion needed.');",
          "105:     return;",
          "106:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "132: const handleCustomHeader = (content) => {",
          "133:   const el = document.body;",
          "135:   renderCustomArea(el, CUSTOM_MARK_HEADER, 'afterbegin', content);",
          "136: };",
          "",
          "[Removed Lines]",
          "134:   console.log('====11', content);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "145:     (state) => state,",
          "146:   );",
          "147:   useEffect(() => {",
          "153:   }, [custom_head, custom_header, custom_footer]);",
          "154:   return null;",
          "155: };",
          "",
          "[Removed Lines]",
          "148:     setTimeout(() => {",
          "149:       handleCustomHead(custom_head);",
          "150:     }, 1000);",
          "151:     handleCustomHeader(custom_header);",
          "152:     handleCustomFooter(custom_footer);",
          "",
          "[Added Lines]",
          "121:     const isSeo = document.querySelector('meta[name=\"go-template\"]');",
          "122:     if (!isSeo) {",
          "123:       setTimeout(() => {",
          "124:         handleCustomHead(custom_head);",
          "125:       }, 1000);",
          "126:       handleCustomHeader(custom_header);",
          "127:       handleCustomFooter(custom_footer);",
          "128:     }",
          "",
          "---------------"
        ],
        "ui/template/header.html||ui/template/header.html": [
          "File: ui/template/header.html -> ui/template/header.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:             name=\"twitter:image\"",
          "77:             content=\"{{if $.siteinfo.Branding.Favicon }}{{$.siteinfo.Branding.Favicon}}{{else}}{{$.baseURL}}/favicon.ico{{end}}\"}",
          "78:     />",
          "79:     <!--customize_head-->",
          "80:     {{if .HeadCode }} {{.HeadCode | templateHTML}} {{end}}",
          "81:     <!--customize_head-->",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     <meta name=\"go-template\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a92adfcc2b08079b374fb39c4ff5776cb0b15b5",
      "candidate_info": {
        "commit_hash": "4a92adfcc2b08079b374fb39c4ff5776cb0b15b5",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/4a92adfcc2b08079b374fb39c4ff5776cb0b15b5",
        "files": [
          "ui/config-overrides.js"
        ],
        "message": "fix: remove node-async chunks",
        "before_after_code_files": [
          "ui/config-overrides.js||ui/config-overrides.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/config-overrides.js||ui/config-overrides.js": [
          "File: ui/config-overrides.js -> ui/config-overrides.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:           chunks: 'all',",
          "105:           enforce: true,",
          "106:         },",
          "115:         nodesInitial: {",
          "116:           name: 'chunk-nodesInitial',",
          "117:           filename: 'static/js/[name].[contenthash:8].chunk.js',",
          "",
          "[Removed Lines]",
          "107:         nodesAsync: {",
          "108:           name: 'chunk-nodesAsync',",
          "109:           test: /[\\/]node_modules[\\/]/,",
          "110:           priority: 2,",
          "111:           minChunks: 2,",
          "112:           chunks: 'async', // only package dependencies that are referenced asynchronously",
          "113:           reuseExistingChunk: true, // reuse an existing block",
          "114:         },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86dd5af6ba8f540575777e8b9f0e7ebe3c795ad5",
      "candidate_info": {
        "commit_hash": "86dd5af6ba8f540575777e8b9f0e7ebe3c795ad5",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/86dd5af6ba8f540575777e8b9f0e7ebe3c795ad5",
        "files": [
          "ui/src/router/routes.ts"
        ],
        "message": "fix: restoring route interception",
        "before_after_code_files": [
          "ui/src/router/routes.ts||ui/src/router/routes.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/src/router/routes.ts||ui/src/router/routes.ts": [
          "File: ui/src/router/routes.ts -> ui/src/router/routes.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:       {",
          "286:         path: '/users/account-activation/failed',",
          "287:         page: 'pages/Users/ActivationResult',",
          "291:       },",
          "292:       {",
          "293:         path: '/users/confirm-new-email',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:         guard: () => {",
          "289:           return guard.notActivated();",
          "290:         },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d841396c1996a5a0d031a83bcb4b26bf96b36ce5",
      "candidate_info": {
        "commit_hash": "d841396c1996a5a0d031a83bcb4b26bf96b36ce5",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/d841396c1996a5a0d031a83bcb4b26bf96b36ce5",
        "files": [
          "Makefile",
          "README.md"
        ],
        "message": "docs(makefile): upgrade version",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/answer/pull/1050"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "0618947350917ecd58a5797365058da17bf8169a",
      "candidate_info": {
        "commit_hash": "0618947350917ecd58a5797365058da17bf8169a",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/0618947350917ecd58a5797365058da17bf8169a",
        "files": [
          ".goreleaser.yaml",
          ".vaunt/config.yaml",
          "DISCLAIMER",
          "Dockerfile",
          "Makefile",
          "NOTICE",
          "README.md",
          "cmd/answer/main.go",
          "cmd/command.go",
          "cmd/main.go",
          "cmd/wire.go",
          "cmd/wire_gen.go",
          "docs/release/NOTICE",
          "go.mod",
          "internal/base/conf/conf.go",
          "internal/base/constant/privilege.go",
          "internal/base/cron/cron.go",
          "internal/base/data/data.go",
          "internal/base/handler/handler.go",
          "internal/base/handler/lang.go",
          "internal/base/handler/response.go",
          "internal/base/handler/short_id.go",
          "internal/base/middleware/accept_language.go",
          "internal/base/middleware/auth.go",
          "internal/base/middleware/avatar.go",
          "internal/base/middleware/rate_limit.go",
          "internal/base/middleware/short_id.go",
          "internal/base/middleware/user_center_plugin_auth.go",
          "internal/base/middleware/visit_img_auth.go",
          "internal/base/server/http.go",
          "internal/base/server/http_funcmap.go",
          "internal/base/validator/validator.go",
          "internal/cli/build.go",
          "internal/cli/config.go",
          "internal/cli/dump.go",
          "internal/cli/i18n.go",
          "internal/cli/install.go",
          "internal/cli/install_check.go",
          "internal/controller/activity_controller.go",
          "internal/controller/answer_controller.go",
          "internal/controller/badge_controller.go",
          "internal/controller/collection_controller.go",
          "internal/controller/comment_controller.go",
          "internal/controller/connector_controller.go",
          "internal/controller/dashboard_controller.go",
          "internal/controller/embed_controller.go",
          "internal/controller/follow_controller.go",
          "internal/controller/lang_controller.go",
          "internal/controller/meta_controller.go",
          "internal/controller/notification_controller.go",
          "internal/controller/permission_controller.go",
          "internal/controller/plugin_captcha_controller.go",
          "internal/controller/plugin_user_center_controller.go",
          "internal/controller/question_controller.go",
          "internal/controller/rank_controller.go",
          "internal/controller/reason_controller.go",
          "internal/controller/render_controller.go",
          "internal/controller/report_controller.go",
          "internal/controller/review_controller.go",
          "internal/controller/revision_controller.go",
          "internal/controller/search_controller.go",
          "internal/controller/siteinfo_controller.go",
          "internal/controller/tag_controller.go",
          "internal/controller/template_controller.go",
          "internal/controller/template_render/answer.go",
          "internal/controller/template_render/comment.go",
          "internal/controller/template_render/controller.go",
          "internal/controller/template_render/question.go",
          "internal/controller/template_render/tags.go",
          "internal/controller/template_render/userinfo.go",
          "internal/controller/upload_controller.go",
          "internal/controller/user_controller.go",
          "internal/controller/user_plugin_controller.go",
          "internal/controller/vote_controller.go",
          "internal/controller_admin/badge_controller.go",
          "internal/controller_admin/plugin_controller.go",
          "internal/controller_admin/role_controller.go",
          "internal/controller_admin/siteinfo_controller.go",
          "internal/controller_admin/theme_controller.go",
          "internal/controller_admin/user_backyard_controller.go",
          "internal/entity/comment_entity.go",
          "internal/entity/config_entity.go",
          "internal/install/install_controller.go",
          "internal/install/install_main.go",
          "internal/install/install_req.go",
          "internal/install/install_server.go",
          "internal/migrations/init.go",
          "internal/migrations/init_data.go",
          "internal/migrations/migrations.go",
          "internal/migrations/v10.go",
          "internal/migrations/v11.go",
          "internal/migrations/v12.go",
          "internal/migrations/v13.go",
          "internal/migrations/v15.go",
          "internal/migrations/v16.go",
          "internal/migrations/v17.go",
          "internal/migrations/v18.go",
          "internal/migrations/v19.go",
          "internal/migrations/v20.go",
          "internal/migrations/v22.go",
          "internal/migrations/v23.go",
          "internal/migrations/v24.go",
          "internal/migrations/v3.go",
          "internal/migrations/v4.go",
          "internal/migrations/v5.go",
          "internal/migrations/v6.go",
          "internal/migrations/v7.go",
          "internal/migrations/v8.go",
          "internal/migrations/v9.go",
          "internal/repo/activity/activity_repo.go",
          "internal/repo/activity/answer_repo.go",
          "internal/repo/activity/follow_repo.go",
          "internal/repo/activity/review_repo.go",
          "internal/repo/activity/user_active_repo.go",
          "internal/repo/activity/vote_repo.go",
          "internal/repo/activity_common/activity_repo.go",
          "internal/repo/activity_common/follow.go",
          "internal/repo/activity_common/vote.go",
          "internal/repo/answer/answer_repo.go",
          "internal/repo/auth/auth.go",
          "internal/repo/badge/badge_event_rule.go",
          "internal/repo/badge/badge_repo.go",
          "internal/repo/badge_award/badge_award_repo.go",
          "internal/repo/badge_group/badge_group_repo.go",
          "internal/repo/captcha/captcha.go",
          "internal/repo/collection/collection_group_repo.go",
          "internal/repo/collection/collection_repo.go",
          "internal/repo/comment/comment_repo.go",
          "internal/repo/config/config_repo.go",
          "internal/repo/export/email_repo.go",
          "internal/repo/limit/limit.go",
          "internal/repo/meta/meta_repo.go",
          "internal/repo/notification/notification_repo.go",
          "internal/repo/plugin_config/plugin_config_repo.go",
          "internal/repo/plugin_config/plugin_user_config_repo.go",
          "internal/repo/provider.go",
          "internal/repo/question/question_repo.go",
          "internal/repo/rank/user_rank_repo.go",
          "internal/repo/reason/reason_repo.go",
          "internal/repo/repo_test/auth_test.go",
          "internal/repo/repo_test/captcha_test.go",
          "internal/repo/repo_test/comment_repo_test.go",
          "internal/repo/repo_test/email_repo_test.go",
          "internal/repo/repo_test/meta_repo_test.go",
          "internal/repo/repo_test/notification_repo_test.go",
          "internal/repo/repo_test/reason_repo_test.go",
          "internal/repo/repo_test/recommend_test.go",
          "internal/repo/repo_test/repo_main_test.go",
          "internal/repo/repo_test/revision_repo_test.go",
          "internal/repo/repo_test/siteinfo_repo_test.go",
          "internal/repo/repo_test/tag_rel_repo_test.go",
          "internal/repo/repo_test/tag_repo_test.go",
          "internal/repo/repo_test/user_backyard_repo_test.go",
          "internal/repo/repo_test/user_repo_test.go",
          "internal/repo/report/report_repo.go",
          "internal/repo/review/review_repo.go",
          "internal/repo/revision/revision_repo.go",
          "internal/repo/role/power_repo.go",
          "internal/repo/role/role_power_rel_repo.go",
          "internal/repo/role/role_repo.go",
          "internal/repo/role/user_role_rel_repo.go",
          "internal/repo/search_common/search_repo.go",
          "internal/repo/search_sync/search_sync.go",
          "internal/repo/site_info/siteinfo_repo.go",
          "internal/repo/tag/tag_rel_repo.go",
          "internal/repo/tag/tag_repo.go",
          "internal/repo/tag_common/tag_common_repo.go",
          "internal/repo/unique/uniqid_repo.go",
          "internal/repo/user/user_backyard_repo.go",
          "internal/repo/user/user_repo.go",
          "internal/repo/user_external_login/user_external_login_repo.go",
          "internal/repo/user_notification_config/user_notification_config_repo.go",
          "internal/router/answer_api_router.go",
          "internal/router/plugin_api_router.go",
          "internal/router/static_router.go",
          "internal/router/swagger_router.go",
          "internal/router/template_router.go",
          "internal/router/ui.go",
          "internal/schema/activity.go",
          "internal/schema/answer_schema.go",
          "internal/schema/backyard_user_schema.go",
          "internal/schema/badge_schema.go",
          "internal/schema/comment_schema.go",
          "internal/schema/email_template.go",
          "internal/schema/event_schema.go",
          "internal/schema/new_question_queue_schema.go",
          "internal/schema/notification_schema.go",
          "internal/schema/permission.go",
          "internal/schema/plugin_admin_schema.go",
          "internal/schema/plugin_user_schema.go",
          "internal/schema/question_schema.go",
          "internal/schema/reason_schema.go",
          "internal/schema/review_schema.go",
          "internal/schema/revision_schema.go",
          "internal/schema/search_schema.go",
          "internal/schema/simple_obj_info_schema.go",
          "internal/schema/siteinfo_schema.go",
          "internal/schema/tag_schema.go",
          "internal/schema/user_notification_schema.go",
          "internal/schema/user_schema.go",
          "internal/service/action/captcha_service.go",
          "internal/service/action/captcha_strategy.go",
          "internal/service/activity/activity.go",
          "internal/service/activity/answer_activity_service.go",
          "internal/service/activity/review_active.go",
          "internal/service/activity_common/activity.go",
          "internal/service/activity_queue/activity_queue.go",
          "internal/service/answer_common/answer.go",
          "internal/service/auth/auth.go",
          "internal/service/badge/badge_award_service.go",
          "internal/service/badge/badge_event_handler.go",
          "internal/service/badge/badge_group_service.go",
          "internal/service/badge/badge_service.go",
          "internal/service/collection/collection_group_service.go",
          "internal/service/collection/collection_service.go",
          "internal/service/collection_common/collection.go",
          "internal/service/comment/comment_service.go",
          "internal/service/comment_common/comment_service.go",
          "internal/service/config/config_service.go",
          "internal/service/content/answer_service.go",
          "internal/service/content/question_hottest_service.go",
          "internal/service/content/question_service.go",
          "internal/service/content/revision_service.go",
          "internal/service/content/search_service.go",
          "internal/service/content/user_service.go",
          "internal/service/content/vote_service.go",
          "internal/service/dashboard/dashboard_service.go",
          "internal/service/event_queue/event_queue.go",
          "internal/service/export/email_service.go",
          "internal/service/follow/follow_service.go",
          "internal/service/importer/importer_service.go",
          "internal/service/meta/meta_service.go",
          "internal/service/meta_common/meta_common_service.go",
          "internal/service/mock/siteinfo_repo_mock.go",
          "internal/service/notice_queue/external_notification_queue.go",
          "internal/service/notice_queue/notice_queue.go",
          "internal/service/notification/external_notification.go",
          "internal/service/notification/invite_answer_notification.go",
          "internal/service/notification/new_answer_notification.go",
          "internal/service/notification/new_comment_notification.go",
          "internal/service/notification/new_question_notification.go",
          "internal/service/notification/notification_service.go",
          "internal/service/notification_common/notification.go",
          "internal/service/object_info/object_info.go",
          "internal/service/permission/answer_permission.go",
          "internal/service/permission/comment_permission.go",
          "internal/service/permission/question_permission.go",
          "internal/service/permission/tag_permission.go",
          "internal/service/plugin_common/plugin_common_service.go",
          "internal/service/provider.go",
          "internal/service/question_common/question.go",
          "internal/service/rank/rank_service.go",
          "internal/service/reason/reason_service.go",
          "internal/service/reason_common/reason.go",
          "internal/service/report/report_service.go",
          "internal/service/report_common/report_common.go",
          "internal/service/report_handle/report_handle.go",
          "internal/service/review/review_service.go",
          "internal/service/revision/revision.go",
          "internal/service/revision_common/revision_service.go",
          "internal/service/role/power_service.go",
          "internal/service/role/role_service.go",
          "internal/service/role/user_role_rel_service.go",
          "internal/service/search_common/search.go",
          "internal/service/search_parser/search_parser.go",
          "internal/service/siteinfo/siteinfo_service.go",
          "internal/service/siteinfo_common/siteinfo_service.go",
          "internal/service/siteinfo_common/siteinfo_service_test.go",
          "internal/service/tag/tag_service.go",
          "internal/service/tag_common/tag_common.go",
          "internal/service/uploader/upload.go",
          "internal/service/user_admin/user_backyard.go",
          "internal/service/user_common/user.go",
          "internal/service/user_external_login/user_center_login_service.go",
          "internal/service/user_external_login/user_external_login_service.go",
          "internal/service/user_notification_config/user_notification_config_service.go",
          "pkg/checker/path_ignore.go",
          "pkg/checker/question_link.go",
          "pkg/checker/question_link_test.go",
          "pkg/checker/reserved_username.go",
          "pkg/display/url.go",
          "pkg/gravatar/gravatar_test.go",
          "pkg/htmltext/htmltext.go",
          "pkg/obj/obj.go",
          "plugin/plugin.go",
          "script/plugin_list",
          "ui/public/index.html",
          "ui/src/components/PageTags/index.tsx",
          "ui/src/pages/Admin/Dashboard/components/AnswerLinks/index.tsx",
          "ui/src/pages/Admin/Dashboard/components/HealthStatus/index.tsx",
          "ui/src/pages/Admin/Plugins/Installed/index.tsx",
          "ui/src/plugins/builtin/ThirdPartyConnector/info.yaml",
          "ui/template/header.html"
        ],
        "message": "refactor(name): rename incubator-answer",
        "before_after_code_files": [
          "cmd/answer/main.go||cmd/answer/main.go",
          "cmd/command.go||cmd/command.go",
          "cmd/main.go||cmd/main.go",
          "cmd/wire.go||cmd/wire.go",
          "cmd/wire_gen.go||cmd/wire_gen.go",
          "go.mod||go.mod",
          "internal/base/conf/conf.go||internal/base/conf/conf.go",
          "internal/base/constant/privilege.go||internal/base/constant/privilege.go",
          "internal/base/cron/cron.go||internal/base/cron/cron.go",
          "internal/base/data/data.go||internal/base/data/data.go",
          "internal/base/handler/handler.go||internal/base/handler/handler.go",
          "internal/base/handler/lang.go||internal/base/handler/lang.go",
          "internal/base/handler/response.go||internal/base/handler/response.go",
          "internal/base/handler/short_id.go||internal/base/handler/short_id.go",
          "internal/base/middleware/accept_language.go||internal/base/middleware/accept_language.go",
          "internal/base/middleware/auth.go||internal/base/middleware/auth.go",
          "internal/base/middleware/avatar.go||internal/base/middleware/avatar.go",
          "internal/base/middleware/rate_limit.go||internal/base/middleware/rate_limit.go",
          "internal/base/middleware/short_id.go||internal/base/middleware/short_id.go",
          "internal/base/middleware/user_center_plugin_auth.go||internal/base/middleware/user_center_plugin_auth.go",
          "internal/base/middleware/visit_img_auth.go||internal/base/middleware/visit_img_auth.go",
          "internal/base/server/http.go||internal/base/server/http.go",
          "internal/base/server/http_funcmap.go||internal/base/server/http_funcmap.go",
          "internal/base/validator/validator.go||internal/base/validator/validator.go",
          "internal/cli/build.go||internal/cli/build.go",
          "internal/cli/config.go||internal/cli/config.go",
          "internal/cli/dump.go||internal/cli/dump.go",
          "internal/cli/i18n.go||internal/cli/i18n.go",
          "internal/cli/install.go||internal/cli/install.go",
          "internal/cli/install_check.go||internal/cli/install_check.go",
          "internal/controller/activity_controller.go||internal/controller/activity_controller.go",
          "internal/controller/answer_controller.go||internal/controller/answer_controller.go",
          "internal/controller/badge_controller.go||internal/controller/badge_controller.go",
          "internal/controller/collection_controller.go||internal/controller/collection_controller.go",
          "internal/controller/comment_controller.go||internal/controller/comment_controller.go",
          "internal/controller/connector_controller.go||internal/controller/connector_controller.go",
          "internal/controller/dashboard_controller.go||internal/controller/dashboard_controller.go",
          "internal/controller/embed_controller.go||internal/controller/embed_controller.go",
          "internal/controller/follow_controller.go||internal/controller/follow_controller.go",
          "internal/controller/lang_controller.go||internal/controller/lang_controller.go",
          "internal/controller/meta_controller.go||internal/controller/meta_controller.go",
          "internal/controller/notification_controller.go||internal/controller/notification_controller.go",
          "internal/controller/permission_controller.go||internal/controller/permission_controller.go",
          "internal/controller/plugin_captcha_controller.go||internal/controller/plugin_captcha_controller.go",
          "internal/controller/plugin_user_center_controller.go||internal/controller/plugin_user_center_controller.go",
          "internal/controller/question_controller.go||internal/controller/question_controller.go",
          "internal/controller/rank_controller.go||internal/controller/rank_controller.go",
          "internal/controller/reason_controller.go||internal/controller/reason_controller.go",
          "internal/controller/render_controller.go||internal/controller/render_controller.go",
          "internal/controller/report_controller.go||internal/controller/report_controller.go",
          "internal/controller/review_controller.go||internal/controller/review_controller.go",
          "internal/controller/revision_controller.go||internal/controller/revision_controller.go",
          "internal/controller/search_controller.go||internal/controller/search_controller.go",
          "internal/controller/siteinfo_controller.go||internal/controller/siteinfo_controller.go",
          "internal/controller/tag_controller.go||internal/controller/tag_controller.go",
          "internal/controller/template_controller.go||internal/controller/template_controller.go",
          "internal/controller/template_render/answer.go||internal/controller/template_render/answer.go",
          "internal/controller/template_render/comment.go||internal/controller/template_render/comment.go",
          "internal/controller/template_render/controller.go||internal/controller/template_render/controller.go",
          "internal/controller/template_render/question.go||internal/controller/template_render/question.go",
          "internal/controller/template_render/tags.go||internal/controller/template_render/tags.go",
          "internal/controller/template_render/userinfo.go||internal/controller/template_render/userinfo.go",
          "internal/controller/upload_controller.go||internal/controller/upload_controller.go",
          "internal/controller/user_controller.go||internal/controller/user_controller.go",
          "internal/controller/user_plugin_controller.go||internal/controller/user_plugin_controller.go",
          "internal/controller/vote_controller.go||internal/controller/vote_controller.go",
          "internal/controller_admin/badge_controller.go||internal/controller_admin/badge_controller.go",
          "internal/controller_admin/plugin_controller.go||internal/controller_admin/plugin_controller.go",
          "internal/controller_admin/role_controller.go||internal/controller_admin/role_controller.go",
          "internal/controller_admin/siteinfo_controller.go||internal/controller_admin/siteinfo_controller.go",
          "internal/controller_admin/theme_controller.go||internal/controller_admin/theme_controller.go",
          "internal/controller_admin/user_backyard_controller.go||internal/controller_admin/user_backyard_controller.go",
          "internal/entity/comment_entity.go||internal/entity/comment_entity.go",
          "internal/entity/config_entity.go||internal/entity/config_entity.go",
          "internal/install/install_controller.go||internal/install/install_controller.go",
          "internal/install/install_main.go||internal/install/install_main.go",
          "internal/install/install_req.go||internal/install/install_req.go",
          "internal/install/install_server.go||internal/install/install_server.go",
          "internal/migrations/init.go||internal/migrations/init.go",
          "internal/migrations/init_data.go||internal/migrations/init_data.go",
          "internal/migrations/migrations.go||internal/migrations/migrations.go",
          "internal/migrations/v10.go||internal/migrations/v10.go",
          "internal/migrations/v11.go||internal/migrations/v11.go",
          "internal/migrations/v12.go||internal/migrations/v12.go",
          "internal/migrations/v13.go||internal/migrations/v13.go",
          "internal/migrations/v15.go||internal/migrations/v15.go",
          "internal/migrations/v16.go||internal/migrations/v16.go",
          "internal/migrations/v17.go||internal/migrations/v17.go",
          "internal/migrations/v18.go||internal/migrations/v18.go",
          "internal/migrations/v19.go||internal/migrations/v19.go",
          "internal/migrations/v20.go||internal/migrations/v20.go",
          "internal/migrations/v22.go||internal/migrations/v22.go",
          "internal/migrations/v23.go||internal/migrations/v23.go",
          "internal/migrations/v24.go||internal/migrations/v24.go",
          "internal/migrations/v3.go||internal/migrations/v3.go",
          "internal/migrations/v4.go||internal/migrations/v4.go",
          "internal/migrations/v5.go||internal/migrations/v5.go",
          "internal/migrations/v6.go||internal/migrations/v6.go",
          "internal/migrations/v7.go||internal/migrations/v7.go",
          "internal/migrations/v8.go||internal/migrations/v8.go",
          "internal/migrations/v9.go||internal/migrations/v9.go",
          "internal/repo/activity/activity_repo.go||internal/repo/activity/activity_repo.go",
          "internal/repo/activity/answer_repo.go||internal/repo/activity/answer_repo.go",
          "internal/repo/activity/follow_repo.go||internal/repo/activity/follow_repo.go",
          "internal/repo/activity/review_repo.go||internal/repo/activity/review_repo.go",
          "internal/repo/activity/user_active_repo.go||internal/repo/activity/user_active_repo.go",
          "internal/repo/activity/vote_repo.go||internal/repo/activity/vote_repo.go",
          "internal/repo/activity_common/activity_repo.go||internal/repo/activity_common/activity_repo.go",
          "internal/repo/activity_common/follow.go||internal/repo/activity_common/follow.go",
          "internal/repo/activity_common/vote.go||internal/repo/activity_common/vote.go",
          "internal/repo/answer/answer_repo.go||internal/repo/answer/answer_repo.go",
          "internal/repo/auth/auth.go||internal/repo/auth/auth.go",
          "internal/repo/badge/badge_event_rule.go||internal/repo/badge/badge_event_rule.go",
          "internal/repo/badge/badge_repo.go||internal/repo/badge/badge_repo.go",
          "internal/repo/badge_award/badge_award_repo.go||internal/repo/badge_award/badge_award_repo.go",
          "internal/repo/badge_group/badge_group_repo.go||internal/repo/badge_group/badge_group_repo.go",
          "internal/repo/captcha/captcha.go||internal/repo/captcha/captcha.go",
          "internal/repo/collection/collection_group_repo.go||internal/repo/collection/collection_group_repo.go",
          "internal/repo/collection/collection_repo.go||internal/repo/collection/collection_repo.go",
          "internal/repo/comment/comment_repo.go||internal/repo/comment/comment_repo.go",
          "internal/repo/config/config_repo.go||internal/repo/config/config_repo.go",
          "internal/repo/export/email_repo.go||internal/repo/export/email_repo.go",
          "internal/repo/limit/limit.go||internal/repo/limit/limit.go",
          "internal/repo/meta/meta_repo.go||internal/repo/meta/meta_repo.go",
          "internal/repo/notification/notification_repo.go||internal/repo/notification/notification_repo.go",
          "internal/repo/plugin_config/plugin_config_repo.go||internal/repo/plugin_config/plugin_config_repo.go",
          "internal/repo/plugin_config/plugin_user_config_repo.go||internal/repo/plugin_config/plugin_user_config_repo.go",
          "internal/repo/provider.go||internal/repo/provider.go",
          "internal/repo/question/question_repo.go||internal/repo/question/question_repo.go",
          "internal/repo/rank/user_rank_repo.go||internal/repo/rank/user_rank_repo.go",
          "internal/repo/reason/reason_repo.go||internal/repo/reason/reason_repo.go",
          "internal/repo/repo_test/auth_test.go||internal/repo/repo_test/auth_test.go",
          "internal/repo/repo_test/captcha_test.go||internal/repo/repo_test/captcha_test.go",
          "internal/repo/repo_test/comment_repo_test.go||internal/repo/repo_test/comment_repo_test.go",
          "internal/repo/repo_test/email_repo_test.go||internal/repo/repo_test/email_repo_test.go",
          "internal/repo/repo_test/meta_repo_test.go||internal/repo/repo_test/meta_repo_test.go",
          "internal/repo/repo_test/notification_repo_test.go||internal/repo/repo_test/notification_repo_test.go",
          "internal/repo/repo_test/reason_repo_test.go||internal/repo/repo_test/reason_repo_test.go",
          "internal/repo/repo_test/recommend_test.go||internal/repo/repo_test/recommend_test.go",
          "internal/repo/repo_test/repo_main_test.go||internal/repo/repo_test/repo_main_test.go",
          "internal/repo/repo_test/revision_repo_test.go||internal/repo/repo_test/revision_repo_test.go",
          "internal/repo/repo_test/siteinfo_repo_test.go||internal/repo/repo_test/siteinfo_repo_test.go",
          "internal/repo/repo_test/tag_rel_repo_test.go||internal/repo/repo_test/tag_rel_repo_test.go",
          "internal/repo/repo_test/tag_repo_test.go||internal/repo/repo_test/tag_repo_test.go",
          "internal/repo/repo_test/user_backyard_repo_test.go||internal/repo/repo_test/user_backyard_repo_test.go",
          "internal/repo/repo_test/user_repo_test.go||internal/repo/repo_test/user_repo_test.go",
          "internal/repo/report/report_repo.go||internal/repo/report/report_repo.go",
          "internal/repo/review/review_repo.go||internal/repo/review/review_repo.go",
          "internal/repo/revision/revision_repo.go||internal/repo/revision/revision_repo.go",
          "internal/repo/role/power_repo.go||internal/repo/role/power_repo.go",
          "internal/repo/role/role_power_rel_repo.go||internal/repo/role/role_power_rel_repo.go",
          "internal/repo/role/role_repo.go||internal/repo/role/role_repo.go",
          "internal/repo/role/user_role_rel_repo.go||internal/repo/role/user_role_rel_repo.go",
          "internal/repo/search_common/search_repo.go||internal/repo/search_common/search_repo.go",
          "internal/repo/search_sync/search_sync.go||internal/repo/search_sync/search_sync.go",
          "internal/repo/site_info/siteinfo_repo.go||internal/repo/site_info/siteinfo_repo.go",
          "internal/repo/tag/tag_rel_repo.go||internal/repo/tag/tag_rel_repo.go",
          "internal/repo/tag/tag_repo.go||internal/repo/tag/tag_repo.go",
          "internal/repo/tag_common/tag_common_repo.go||internal/repo/tag_common/tag_common_repo.go",
          "internal/repo/unique/uniqid_repo.go||internal/repo/unique/uniqid_repo.go",
          "internal/repo/user/user_backyard_repo.go||internal/repo/user/user_backyard_repo.go",
          "internal/repo/user/user_repo.go||internal/repo/user/user_repo.go",
          "internal/repo/user_external_login/user_external_login_repo.go||internal/repo/user_external_login/user_external_login_repo.go",
          "internal/repo/user_notification_config/user_notification_config_repo.go||internal/repo/user_notification_config/user_notification_config_repo.go",
          "internal/router/answer_api_router.go||internal/router/answer_api_router.go",
          "internal/router/plugin_api_router.go||internal/router/plugin_api_router.go",
          "internal/router/static_router.go||internal/router/static_router.go",
          "internal/router/swagger_router.go||internal/router/swagger_router.go",
          "internal/router/template_router.go||internal/router/template_router.go",
          "internal/router/ui.go||internal/router/ui.go",
          "internal/schema/activity.go||internal/schema/activity.go",
          "internal/schema/answer_schema.go||internal/schema/answer_schema.go",
          "internal/schema/backyard_user_schema.go||internal/schema/backyard_user_schema.go",
          "internal/schema/badge_schema.go||internal/schema/badge_schema.go",
          "internal/schema/comment_schema.go||internal/schema/comment_schema.go",
          "internal/schema/email_template.go||internal/schema/email_template.go",
          "internal/schema/event_schema.go||internal/schema/event_schema.go",
          "internal/schema/new_question_queue_schema.go||internal/schema/new_question_queue_schema.go",
          "internal/schema/notification_schema.go||internal/schema/notification_schema.go",
          "internal/schema/permission.go||internal/schema/permission.go",
          "internal/schema/plugin_admin_schema.go||internal/schema/plugin_admin_schema.go",
          "internal/schema/plugin_user_schema.go||internal/schema/plugin_user_schema.go",
          "internal/schema/question_schema.go||internal/schema/question_schema.go",
          "internal/schema/reason_schema.go||internal/schema/reason_schema.go",
          "internal/schema/review_schema.go||internal/schema/review_schema.go",
          "internal/schema/revision_schema.go||internal/schema/revision_schema.go",
          "internal/schema/search_schema.go||internal/schema/search_schema.go",
          "internal/schema/simple_obj_info_schema.go||internal/schema/simple_obj_info_schema.go",
          "internal/schema/siteinfo_schema.go||internal/schema/siteinfo_schema.go",
          "internal/schema/tag_schema.go||internal/schema/tag_schema.go",
          "internal/schema/user_notification_schema.go||internal/schema/user_notification_schema.go",
          "internal/schema/user_schema.go||internal/schema/user_schema.go",
          "internal/service/action/captcha_service.go||internal/service/action/captcha_service.go",
          "internal/service/action/captcha_strategy.go||internal/service/action/captcha_strategy.go",
          "internal/service/activity/activity.go||internal/service/activity/activity.go",
          "internal/service/activity/answer_activity_service.go||internal/service/activity/answer_activity_service.go",
          "internal/service/activity/review_active.go||internal/service/activity/review_active.go",
          "internal/service/activity_common/activity.go||internal/service/activity_common/activity.go",
          "internal/service/activity_queue/activity_queue.go||internal/service/activity_queue/activity_queue.go",
          "internal/service/answer_common/answer.go||internal/service/answer_common/answer.go",
          "internal/service/auth/auth.go||internal/service/auth/auth.go",
          "internal/service/badge/badge_award_service.go||internal/service/badge/badge_award_service.go",
          "internal/service/badge/badge_event_handler.go||internal/service/badge/badge_event_handler.go",
          "internal/service/badge/badge_group_service.go||internal/service/badge/badge_group_service.go",
          "internal/service/badge/badge_service.go||internal/service/badge/badge_service.go",
          "internal/service/collection/collection_group_service.go||internal/service/collection/collection_group_service.go",
          "internal/service/collection/collection_service.go||internal/service/collection/collection_service.go",
          "internal/service/collection_common/collection.go||internal/service/collection_common/collection.go",
          "internal/service/comment/comment_service.go||internal/service/comment/comment_service.go",
          "internal/service/comment_common/comment_service.go||internal/service/comment_common/comment_service.go",
          "internal/service/config/config_service.go||internal/service/config/config_service.go",
          "internal/service/content/answer_service.go||internal/service/content/answer_service.go",
          "internal/service/content/question_hottest_service.go||internal/service/content/question_hottest_service.go",
          "internal/service/content/question_service.go||internal/service/content/question_service.go",
          "internal/service/content/revision_service.go||internal/service/content/revision_service.go",
          "internal/service/content/search_service.go||internal/service/content/search_service.go",
          "internal/service/content/user_service.go||internal/service/content/user_service.go",
          "internal/service/content/vote_service.go||internal/service/content/vote_service.go",
          "internal/service/dashboard/dashboard_service.go||internal/service/dashboard/dashboard_service.go",
          "internal/service/event_queue/event_queue.go||internal/service/event_queue/event_queue.go",
          "internal/service/export/email_service.go||internal/service/export/email_service.go",
          "internal/service/follow/follow_service.go||internal/service/follow/follow_service.go",
          "internal/service/importer/importer_service.go||internal/service/importer/importer_service.go",
          "internal/service/meta/meta_service.go||internal/service/meta/meta_service.go",
          "internal/service/meta_common/meta_common_service.go||internal/service/meta_common/meta_common_service.go",
          "internal/service/mock/siteinfo_repo_mock.go||internal/service/mock/siteinfo_repo_mock.go",
          "internal/service/notice_queue/external_notification_queue.go||internal/service/notice_queue/external_notification_queue.go",
          "internal/service/notice_queue/notice_queue.go||internal/service/notice_queue/notice_queue.go",
          "internal/service/notification/external_notification.go||internal/service/notification/external_notification.go",
          "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go",
          "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go",
          "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go",
          "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go",
          "internal/service/notification/notification_service.go||internal/service/notification/notification_service.go",
          "internal/service/notification_common/notification.go||internal/service/notification_common/notification.go",
          "internal/service/object_info/object_info.go||internal/service/object_info/object_info.go",
          "internal/service/permission/answer_permission.go||internal/service/permission/answer_permission.go",
          "internal/service/permission/comment_permission.go||internal/service/permission/comment_permission.go",
          "internal/service/permission/question_permission.go||internal/service/permission/question_permission.go",
          "internal/service/permission/tag_permission.go||internal/service/permission/tag_permission.go",
          "internal/service/plugin_common/plugin_common_service.go||internal/service/plugin_common/plugin_common_service.go",
          "internal/service/provider.go||internal/service/provider.go",
          "internal/service/question_common/question.go||internal/service/question_common/question.go",
          "internal/service/rank/rank_service.go||internal/service/rank/rank_service.go",
          "internal/service/reason/reason_service.go||internal/service/reason/reason_service.go",
          "internal/service/reason_common/reason.go||internal/service/reason_common/reason.go",
          "internal/service/report/report_service.go||internal/service/report/report_service.go",
          "internal/service/report_common/report_common.go||internal/service/report_common/report_common.go",
          "internal/service/report_handle/report_handle.go||internal/service/report_handle/report_handle.go",
          "internal/service/review/review_service.go||internal/service/review/review_service.go",
          "internal/service/revision/revision.go||internal/service/revision/revision.go",
          "internal/service/revision_common/revision_service.go||internal/service/revision_common/revision_service.go",
          "internal/service/role/power_service.go||internal/service/role/power_service.go",
          "internal/service/role/role_service.go||internal/service/role/role_service.go",
          "internal/service/role/user_role_rel_service.go||internal/service/role/user_role_rel_service.go",
          "internal/service/search_common/search.go||internal/service/search_common/search.go",
          "internal/service/search_parser/search_parser.go||internal/service/search_parser/search_parser.go",
          "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go",
          "internal/service/siteinfo_common/siteinfo_service.go||internal/service/siteinfo_common/siteinfo_service.go",
          "internal/service/siteinfo_common/siteinfo_service_test.go||internal/service/siteinfo_common/siteinfo_service_test.go",
          "internal/service/tag/tag_service.go||internal/service/tag/tag_service.go",
          "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go",
          "internal/service/uploader/upload.go||internal/service/uploader/upload.go",
          "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go",
          "internal/service/user_common/user.go||internal/service/user_common/user.go",
          "internal/service/user_external_login/user_center_login_service.go||internal/service/user_external_login/user_center_login_service.go",
          "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go",
          "internal/service/user_notification_config/user_notification_config_service.go||internal/service/user_notification_config/user_notification_config_service.go",
          "pkg/checker/path_ignore.go||pkg/checker/path_ignore.go",
          "pkg/checker/question_link.go||pkg/checker/question_link.go",
          "pkg/checker/question_link_test.go||pkg/checker/question_link_test.go",
          "pkg/checker/reserved_username.go||pkg/checker/reserved_username.go",
          "pkg/display/url.go||pkg/display/url.go",
          "pkg/gravatar/gravatar_test.go||pkg/gravatar/gravatar_test.go",
          "pkg/htmltext/htmltext.go||pkg/htmltext/htmltext.go",
          "pkg/obj/obj.go||pkg/obj/obj.go",
          "plugin/plugin.go||plugin/plugin.go",
          "ui/public/index.html||ui/public/index.html",
          "ui/src/components/PageTags/index.tsx||ui/src/components/PageTags/index.tsx",
          "ui/src/pages/Admin/Dashboard/components/AnswerLinks/index.tsx||ui/src/pages/Admin/Dashboard/components/AnswerLinks/index.tsx",
          "ui/src/pages/Admin/Dashboard/components/HealthStatus/index.tsx||ui/src/pages/Admin/Dashboard/components/HealthStatus/index.tsx",
          "ui/src/pages/Admin/Plugins/Installed/index.tsx||ui/src/pages/Admin/Plugins/Installed/index.tsx",
          "ui/template/header.html||ui/template/header.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/repo/export/email_repo.go||internal/repo/export/email_repo.go",
            "internal/schema/email_template.go||internal/schema/email_template.go",
            "internal/service/content/user_service.go||internal/service/content/user_service.go",
            "internal/service/export/email_service.go||internal/service/export/email_service.go",
            "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go",
            "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go",
            "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go",
            "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go",
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go",
            "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go",
            "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go"
          ],
          "candidate": [
            "internal/repo/export/email_repo.go||internal/repo/export/email_repo.go",
            "internal/schema/email_template.go||internal/schema/email_template.go",
            "internal/service/content/user_service.go||internal/service/content/user_service.go",
            "internal/service/export/email_service.go||internal/service/export/email_service.go",
            "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go",
            "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go",
            "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go",
            "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go",
            "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go",
            "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go",
            "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go"
          ]
        }
      },
      "candidate_diff": {
        "cmd/answer/main.go||cmd/answer/main.go": [
          "File: cmd/answer/main.go -> cmd/answer/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: package main",
          "24: import (",
          "26: )",
          "",
          "[Removed Lines]",
          "25:  answercmd \"github.com/apache/incubator-answer/cmd\"",
          "",
          "[Added Lines]",
          "25:  answercmd \"github.com/apache/answer/cmd\"",
          "",
          "---------------"
        ],
        "cmd/command.go||cmd/command.go": [
          "File: cmd/command.go -> cmd/command.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"os\"",
          "25:  \"strings\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "33:  \"github.com/spf13/cobra\"",
          "34: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/conf\"",
          "28:  \"github.com/apache/incubator-answer/internal/cli\"",
          "29:  \"github.com/apache/incubator-answer/internal/install\"",
          "30:  \"github.com/apache/incubator-answer/internal/migrations\"",
          "31:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/conf\"",
          "28:  \"github.com/apache/answer/internal/cli\"",
          "29:  \"github.com/apache/answer/internal/install\"",
          "30:  \"github.com/apache/answer/internal/migrations\"",
          "31:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "cmd/main.go||cmd/main.go": [
          "File: cmd/main.go -> cmd/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"os\"",
          "26:  \"time\"",
          "33:  \"github.com/gin-gonic/gin\"",
          "34:  \"github.com/segmentfault/pacman\"",
          "35:  \"github.com/segmentfault/pacman/contrib/log/zap\"",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/base/conf\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/cron\"",
          "31:  \"github.com/apache/incubator-answer/internal/cli\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/base/conf\"",
          "29:  \"github.com/apache/answer/internal/base/constant\"",
          "30:  \"github.com/apache/answer/internal/base/cron\"",
          "31:  \"github.com/apache/answer/internal/cli\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "cmd/wire.go||cmd/wire.go": [
          "File: cmd/wire.go -> cmd/wire.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package answercmd",
          "27: import (",
          "41:  \"github.com/google/wire\"",
          "42:  \"github.com/segmentfault/pacman\"",
          "43:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/base/conf\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/cron\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/server\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "34:  \"github.com/apache/incubator-answer/internal/controller\"",
          "35:  \"github.com/apache/incubator-answer/internal/controller/template_render\"",
          "36:  \"github.com/apache/incubator-answer/internal/controller_admin\"",
          "37:  \"github.com/apache/incubator-answer/internal/repo\"",
          "38:  \"github.com/apache/incubator-answer/internal/router\"",
          "39:  \"github.com/apache/incubator-answer/internal/service\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/service_config\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/base/conf\"",
          "29:  \"github.com/apache/answer/internal/base/cron\"",
          "30:  \"github.com/apache/answer/internal/base/data\"",
          "31:  \"github.com/apache/answer/internal/base/middleware\"",
          "32:  \"github.com/apache/answer/internal/base/server\"",
          "33:  \"github.com/apache/answer/internal/base/translator\"",
          "34:  \"github.com/apache/answer/internal/controller\"",
          "35:  \"github.com/apache/answer/internal/controller/template_render\"",
          "36:  \"github.com/apache/answer/internal/controller_admin\"",
          "37:  \"github.com/apache/answer/internal/repo\"",
          "38:  \"github.com/apache/answer/internal/router\"",
          "39:  \"github.com/apache/answer/internal/service\"",
          "40:  \"github.com/apache/answer/internal/service/service_config\"",
          "",
          "---------------"
        ],
        "cmd/wire_gen.go||cmd/wire_gen.go": [
          "File: cmd/wire_gen.go -> cmd/wire_gen.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: package answercmd",
          "29: import (",
          "115:  \"github.com/segmentfault/pacman\"",
          "116:  \"github.com/segmentfault/pacman/log\"",
          "117: )",
          "",
          "[Removed Lines]",
          "30:  \"github.com/apache/incubator-answer/internal/base/conf\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/cron\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/server\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "36:  \"github.com/apache/incubator-answer/internal/controller\"",
          "37:  \"github.com/apache/incubator-answer/internal/controller/template_render\"",
          "38:  \"github.com/apache/incubator-answer/internal/controller_admin\"",
          "39:  \"github.com/apache/incubator-answer/internal/repo/activity\"",
          "40:  \"github.com/apache/incubator-answer/internal/repo/activity_common\"",
          "41:  \"github.com/apache/incubator-answer/internal/repo/answer\"",
          "42:  \"github.com/apache/incubator-answer/internal/repo/auth\"",
          "43:  \"github.com/apache/incubator-answer/internal/repo/badge\"",
          "44:  \"github.com/apache/incubator-answer/internal/repo/badge_award\"",
          "45:  \"github.com/apache/incubator-answer/internal/repo/badge_group\"",
          "46:  \"github.com/apache/incubator-answer/internal/repo/captcha\"",
          "47:  \"github.com/apache/incubator-answer/internal/repo/collection\"",
          "48:  \"github.com/apache/incubator-answer/internal/repo/comment\"",
          "49:  \"github.com/apache/incubator-answer/internal/repo/config\"",
          "50:  \"github.com/apache/incubator-answer/internal/repo/export\"",
          "51:  \"github.com/apache/incubator-answer/internal/repo/limit\"",
          "52:  \"github.com/apache/incubator-answer/internal/repo/meta\"",
          "53:  notification2 \"github.com/apache/incubator-answer/internal/repo/notification\"",
          "54:  \"github.com/apache/incubator-answer/internal/repo/plugin_config\"",
          "55:  \"github.com/apache/incubator-answer/internal/repo/question\"",
          "56:  \"github.com/apache/incubator-answer/internal/repo/rank\"",
          "57:  \"github.com/apache/incubator-answer/internal/repo/reason\"",
          "58:  \"github.com/apache/incubator-answer/internal/repo/report\"",
          "59:  \"github.com/apache/incubator-answer/internal/repo/review\"",
          "60:  \"github.com/apache/incubator-answer/internal/repo/revision\"",
          "61:  \"github.com/apache/incubator-answer/internal/repo/role\"",
          "62:  \"github.com/apache/incubator-answer/internal/repo/search_common\"",
          "63:  \"github.com/apache/incubator-answer/internal/repo/site_info\"",
          "64:  \"github.com/apache/incubator-answer/internal/repo/tag\"",
          "65:  \"github.com/apache/incubator-answer/internal/repo/tag_common\"",
          "66:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "67:  \"github.com/apache/incubator-answer/internal/repo/user\"",
          "68:  \"github.com/apache/incubator-answer/internal/repo/user_external_login\"",
          "69:  \"github.com/apache/incubator-answer/internal/repo/user_notification_config\"",
          "70:  \"github.com/apache/incubator-answer/internal/router\"",
          "71:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "72:  activity2 \"github.com/apache/incubator-answer/internal/service/activity\"",
          "73:  activity_common2 \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "74:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "75:  \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "76:  auth2 \"github.com/apache/incubator-answer/internal/service/auth\"",
          "77:  badge2 \"github.com/apache/incubator-answer/internal/service/badge\"",
          "78:  collection2 \"github.com/apache/incubator-answer/internal/service/collection\"",
          "79:  \"github.com/apache/incubator-answer/internal/service/collection_common\"",
          "80:  comment2 \"github.com/apache/incubator-answer/internal/service/comment\"",
          "81:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "82:  config2 \"github.com/apache/incubator-answer/internal/service/config\"",
          "83:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "84:  \"github.com/apache/incubator-answer/internal/service/dashboard\"",
          "85:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "86:  export2 \"github.com/apache/incubator-answer/internal/service/export\"",
          "87:  \"github.com/apache/incubator-answer/internal/service/follow\"",
          "88:  \"github.com/apache/incubator-answer/internal/service/importer\"",
          "89:  meta2 \"github.com/apache/incubator-answer/internal/service/meta\"",
          "90:  \"github.com/apache/incubator-answer/internal/service/meta_common\"",
          "91:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "92:  \"github.com/apache/incubator-answer/internal/service/notification\"",
          "93:  \"github.com/apache/incubator-answer/internal/service/notification_common\"",
          "94:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "95:  \"github.com/apache/incubator-answer/internal/service/plugin_common\"",
          "96:  \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "97:  rank2 \"github.com/apache/incubator-answer/internal/service/rank\"",
          "98:  reason2 \"github.com/apache/incubator-answer/internal/service/reason\"",
          "99:  report2 \"github.com/apache/incubator-answer/internal/service/report\"",
          "100:  \"github.com/apache/incubator-answer/internal/service/report_handle\"",
          "101:  review2 \"github.com/apache/incubator-answer/internal/service/review\"",
          "102:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "103:  role2 \"github.com/apache/incubator-answer/internal/service/role\"",
          "104:  \"github.com/apache/incubator-answer/internal/service/search_parser\"",
          "105:  \"github.com/apache/incubator-answer/internal/service/service_config\"",
          "106:  \"github.com/apache/incubator-answer/internal/service/siteinfo\"",
          "107:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "108:  tag2 \"github.com/apache/incubator-answer/internal/service/tag\"",
          "109:  tag_common2 \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "110:  \"github.com/apache/incubator-answer/internal/service/uploader\"",
          "111:  \"github.com/apache/incubator-answer/internal/service/user_admin\"",
          "112:  \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "113:  user_external_login2 \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "114:  user_notification_config2 \"github.com/apache/incubator-answer/internal/service/user_notification_config\"",
          "",
          "[Added Lines]",
          "30:  \"github.com/apache/answer/internal/base/conf\"",
          "31:  \"github.com/apache/answer/internal/base/cron\"",
          "32:  \"github.com/apache/answer/internal/base/data\"",
          "33:  \"github.com/apache/answer/internal/base/middleware\"",
          "34:  \"github.com/apache/answer/internal/base/server\"",
          "35:  \"github.com/apache/answer/internal/base/translator\"",
          "36:  \"github.com/apache/answer/internal/controller\"",
          "37:  \"github.com/apache/answer/internal/controller/template_render\"",
          "38:  \"github.com/apache/answer/internal/controller_admin\"",
          "39:  \"github.com/apache/answer/internal/repo/activity\"",
          "40:  \"github.com/apache/answer/internal/repo/activity_common\"",
          "41:  \"github.com/apache/answer/internal/repo/answer\"",
          "42:  \"github.com/apache/answer/internal/repo/auth\"",
          "43:  \"github.com/apache/answer/internal/repo/badge\"",
          "44:  \"github.com/apache/answer/internal/repo/badge_award\"",
          "45:  \"github.com/apache/answer/internal/repo/badge_group\"",
          "46:  \"github.com/apache/answer/internal/repo/captcha\"",
          "47:  \"github.com/apache/answer/internal/repo/collection\"",
          "48:  \"github.com/apache/answer/internal/repo/comment\"",
          "49:  \"github.com/apache/answer/internal/repo/config\"",
          "50:  \"github.com/apache/answer/internal/repo/export\"",
          "51:  \"github.com/apache/answer/internal/repo/limit\"",
          "52:  \"github.com/apache/answer/internal/repo/meta\"",
          "53:  notification2 \"github.com/apache/answer/internal/repo/notification\"",
          "54:  \"github.com/apache/answer/internal/repo/plugin_config\"",
          "55:  \"github.com/apache/answer/internal/repo/question\"",
          "56:  \"github.com/apache/answer/internal/repo/rank\"",
          "57:  \"github.com/apache/answer/internal/repo/reason\"",
          "58:  \"github.com/apache/answer/internal/repo/report\"",
          "59:  \"github.com/apache/answer/internal/repo/review\"",
          "60:  \"github.com/apache/answer/internal/repo/revision\"",
          "61:  \"github.com/apache/answer/internal/repo/role\"",
          "62:  \"github.com/apache/answer/internal/repo/search_common\"",
          "63:  \"github.com/apache/answer/internal/repo/site_info\"",
          "64:  \"github.com/apache/answer/internal/repo/tag\"",
          "65:  \"github.com/apache/answer/internal/repo/tag_common\"",
          "66:  \"github.com/apache/answer/internal/repo/unique\"",
          "67:  \"github.com/apache/answer/internal/repo/user\"",
          "68:  \"github.com/apache/answer/internal/repo/user_external_login\"",
          "69:  \"github.com/apache/answer/internal/repo/user_notification_config\"",
          "70:  \"github.com/apache/answer/internal/router\"",
          "71:  \"github.com/apache/answer/internal/service/action\"",
          "72:  activity2 \"github.com/apache/answer/internal/service/activity\"",
          "73:  activity_common2 \"github.com/apache/answer/internal/service/activity_common\"",
          "74:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "75:  \"github.com/apache/answer/internal/service/answer_common\"",
          "76:  auth2 \"github.com/apache/answer/internal/service/auth\"",
          "77:  badge2 \"github.com/apache/answer/internal/service/badge\"",
          "78:  collection2 \"github.com/apache/answer/internal/service/collection\"",
          "79:  \"github.com/apache/answer/internal/service/collection_common\"",
          "80:  comment2 \"github.com/apache/answer/internal/service/comment\"",
          "81:  \"github.com/apache/answer/internal/service/comment_common\"",
          "82:  config2 \"github.com/apache/answer/internal/service/config\"",
          "83:  \"github.com/apache/answer/internal/service/content\"",
          "84:  \"github.com/apache/answer/internal/service/dashboard\"",
          "85:  \"github.com/apache/answer/internal/service/event_queue\"",
          "86:  export2 \"github.com/apache/answer/internal/service/export\"",
          "87:  \"github.com/apache/answer/internal/service/follow\"",
          "88:  \"github.com/apache/answer/internal/service/importer\"",
          "89:  meta2 \"github.com/apache/answer/internal/service/meta\"",
          "90:  \"github.com/apache/answer/internal/service/meta_common\"",
          "91:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "92:  \"github.com/apache/answer/internal/service/notification\"",
          "93:  \"github.com/apache/answer/internal/service/notification_common\"",
          "94:  \"github.com/apache/answer/internal/service/object_info\"",
          "95:  \"github.com/apache/answer/internal/service/plugin_common\"",
          "96:  \"github.com/apache/answer/internal/service/question_common\"",
          "97:  rank2 \"github.com/apache/answer/internal/service/rank\"",
          "98:  reason2 \"github.com/apache/answer/internal/service/reason\"",
          "99:  report2 \"github.com/apache/answer/internal/service/report\"",
          "100:  \"github.com/apache/answer/internal/service/report_handle\"",
          "101:  review2 \"github.com/apache/answer/internal/service/review\"",
          "102:  \"github.com/apache/answer/internal/service/revision_common\"",
          "103:  role2 \"github.com/apache/answer/internal/service/role\"",
          "104:  \"github.com/apache/answer/internal/service/search_parser\"",
          "105:  \"github.com/apache/answer/internal/service/service_config\"",
          "106:  \"github.com/apache/answer/internal/service/siteinfo\"",
          "107:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "108:  tag2 \"github.com/apache/answer/internal/service/tag\"",
          "109:  tag_common2 \"github.com/apache/answer/internal/service/tag_common\"",
          "110:  \"github.com/apache/answer/internal/service/uploader\"",
          "111:  \"github.com/apache/answer/internal/service/user_admin\"",
          "112:  \"github.com/apache/answer/internal/service/user_common\"",
          "113:  user_external_login2 \"github.com/apache/answer/internal/service/user_external_login\"",
          "114:  user_notification_config2 \"github.com/apache/answer/internal/service/user_notification_config\"",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: go 1.22.0",
          "",
          "[Removed Lines]",
          "18: module github.com/apache/incubator-answer",
          "",
          "[Added Lines]",
          "18: module github.com/apache/answer",
          "",
          "---------------"
        ],
        "internal/base/conf/conf.go||internal/base/conf/conf.go": [
          "File: internal/base/conf/conf.go -> internal/base/conf/conf.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"os\"",
          "25:  \"path/filepath\"",
          "34:  \"github.com/segmentfault/pacman/contrib/conf/viper\"",
          "35:  \"gopkg.in/yaml.v3\"",
          "36: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/server\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "30:  \"github.com/apache/incubator-answer/internal/cli\"",
          "31:  \"github.com/apache/incubator-answer/internal/router\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/service_config\"",
          "33:  \"github.com/apache/incubator-answer/pkg/writer\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/server\"",
          "29:  \"github.com/apache/answer/internal/base/translator\"",
          "30:  \"github.com/apache/answer/internal/cli\"",
          "31:  \"github.com/apache/answer/internal/router\"",
          "32:  \"github.com/apache/answer/internal/service/service_config\"",
          "33:  \"github.com/apache/answer/pkg/writer\"",
          "",
          "---------------"
        ],
        "internal/base/constant/privilege.go||internal/base/constant/privilege.go": [
          "File: internal/base/constant/privilege.go -> internal/base/constant/privilege.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package constant",
          "24: type Privilege struct {",
          "25:  Key   string `json:\"key\"`",
          "",
          "[Removed Lines]",
          "22: import \"github.com/apache/incubator-answer/internal/base/reason\"",
          "",
          "[Added Lines]",
          "22: import \"github.com/apache/answer/internal/base/reason\"",
          "",
          "---------------"
        ],
        "internal/base/cron/cron.go||internal/base/cron/cron.go": [
          "File: internal/base/cron/cron.go -> internal/base/cron/cron.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "28:  \"github.com/robfig/cron/v3\"",
          "29:  \"github.com/segmentfault/pacman/log\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/service/content\"",
          "27:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "",
          "---------------"
        ],
        "internal/base/data/data.go||internal/base/data/data.go": [
          "File: internal/base/data/data.go -> internal/base/data/data.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"path/filepath\"",
          "24:  \"time\"",
          "28:  _ \"github.com/go-sql-driver/mysql\"",
          "29:  _ \"github.com/lib/pq\"",
          "30:  \"github.com/segmentfault/pacman/cache\"",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "27:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/pkg/dir\"",
          "27:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/base/handler/handler.go||internal/base/handler/handler.go": [
          "File: internal/base/handler/handler.go -> internal/base/handler/handler.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"errors\"",
          "27:  \"github.com/gin-gonic/gin\"",
          "28:  myErrors \"github.com/segmentfault/pacman/errors\"",
          "29:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/validator\"",
          "",
          "---------------"
        ],
        "internal/base/handler/lang.go||internal/base/handler/lang.go": [
          "File: internal/base/handler/lang.go -> internal/base/handler/lang.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/gin-gonic/gin\"",
          "27:  \"github.com/segmentfault/pacman/i18n\"",
          "28: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "",
          "---------------"
        ],
        "internal/base/handler/response.go||internal/base/handler/response.go": [
          "File: internal/base/handler/response.go -> internal/base/handler/response.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package handler",
          "22: import (",
          "24:  \"github.com/segmentfault/pacman/errors\"",
          "25:  \"github.com/segmentfault/pacman/i18n\"",
          "26: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/translator\"",
          "",
          "---------------"
        ],
        "internal/base/handler/short_id.go||internal/base/handler/short_id.go": [
          "File: internal/base/handler/short_id.go -> internal/base/handler/short_id.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "",
          "---------------"
        ],
        "internal/base/middleware/accept_language.go||internal/base/middleware/accept_language.go": [
          "File: internal/base/middleware/accept_language.go -> internal/base/middleware/accept_language.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package middleware",
          "22: import (",
          "25:  \"github.com/gin-gonic/gin\"",
          "26:  \"github.com/segmentfault/pacman/i18n\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/internal/base/handler\"",
          "",
          "---------------"
        ],
        "internal/base/middleware/auth.go||internal/base/middleware/auth.go": [
          "File: internal/base/middleware/auth.go -> internal/base/middleware/auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"net/http\"",
          "24:  \"strings\"",
          "30:  \"github.com/gin-gonic/gin\"",
          "37:  \"github.com/segmentfault/pacman/errors\"",
          "38:  \"github.com/segmentfault/pacman/log\"",
          "39: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "29:  \"github.com/apache/incubator-answer/ui\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "34:  \"github.com/apache/incubator-answer/internal/entity\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "36:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/role\"",
          "28:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "29:  \"github.com/apache/answer/ui\"",
          "32:  \"github.com/apache/answer/internal/base/handler\"",
          "33:  \"github.com/apache/answer/internal/base/reason\"",
          "34:  \"github.com/apache/answer/internal/entity\"",
          "35:  \"github.com/apache/answer/internal/service/auth\"",
          "36:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/base/middleware/avatar.go||internal/base/middleware/avatar.go": [
          "File: internal/base/middleware/avatar.go -> internal/base/middleware/avatar.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  \"path/filepath\"",
          "28:  \"strings\"",
          "33:  \"github.com/gin-gonic/gin\"",
          "34:  \"github.com/segmentfault/pacman/log\"",
          "35: )",
          "",
          "[Removed Lines]",
          "30:  \"github.com/apache/incubator-answer/internal/service/service_config\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/uploader\"",
          "32:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "30:  \"github.com/apache/answer/internal/service/service_config\"",
          "31:  \"github.com/apache/answer/internal/service/uploader\"",
          "32:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/base/middleware/rate_limit.go||internal/base/middleware/rate_limit.go": [
          "File: internal/base/middleware/rate_limit.go -> internal/base/middleware/rate_limit.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "24:  \"fmt\"",
          "29:  \"github.com/gin-gonic/gin\"",
          "30:  \"github.com/segmentfault/pacman/errors\"",
          "31:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/limit\"",
          "28:  \"github.com/apache/incubator-answer/pkg/encryption\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/repo/limit\"",
          "28:  \"github.com/apache/answer/pkg/encryption\"",
          "",
          "---------------"
        ],
        "internal/base/middleware/short_id.go||internal/base/middleware/short_id.go": [
          "File: internal/base/middleware/short_id.go -> internal/base/middleware/short_id.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package middleware",
          "22: import (",
          "25:  \"github.com/gin-gonic/gin\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "",
          "---------------"
        ],
        "internal/base/middleware/user_center_plugin_auth.go||internal/base/middleware/user_center_plugin_auth.go": [
          "File: internal/base/middleware/user_center_plugin_auth.go -> internal/base/middleware/user_center_plugin_auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package middleware",
          "22: import (",
          "26:  \"github.com/gin-gonic/gin\"",
          "27:  \"github.com/segmentfault/pacman/errors\"",
          "28: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "25:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/reason\"",
          "25:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/base/middleware/visit_img_auth.go||internal/base/middleware/visit_img_auth.go": [
          "File: internal/base/middleware/visit_img_auth.go -> internal/base/middleware/visit_img_auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package middleware",
          "22: import (",
          "24:  \"github.com/gin-gonic/gin\"",
          "25:  \"net/http\"",
          "26:  \"strings\"",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "",
          "---------------"
        ],
        "internal/base/server/http.go||internal/base/server/http.go": [
          "File: internal/base/server/http.go -> internal/base/server/http.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"io/fs\"",
          "26:  brotli \"github.com/anargu/gin-brotli\"",
          "31:  \"github.com/gin-gonic/gin\"",
          "32: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "28:  \"github.com/apache/incubator-answer/internal/router\"",
          "29:  \"github.com/apache/incubator-answer/plugin\"",
          "30:  \"github.com/apache/incubator-answer/ui\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/middleware\"",
          "28:  \"github.com/apache/answer/internal/router\"",
          "29:  \"github.com/apache/answer/plugin\"",
          "30:  \"github.com/apache/answer/ui\"",
          "",
          "---------------"
        ],
        "internal/base/server/http_funcmap.go||internal/base/server/http_funcmap.go": [
          "File: internal/base/server/http_funcmap.go -> internal/base/server/http_funcmap.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  \"strings\"",
          "28:  \"time\"",
          "36:  \"github.com/segmentfault/pacman/i18n\"",
          "37: )",
          "",
          "[Removed Lines]",
          "30:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "31:  \"github.com/apache/incubator-answer/internal/controller\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "34:  \"github.com/apache/incubator-answer/pkg/day\"",
          "35:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "",
          "[Added Lines]",
          "30:  \"github.com/apache/answer/internal/base/translator\"",
          "31:  \"github.com/apache/answer/internal/controller\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/pkg/converter\"",
          "34:  \"github.com/apache/answer/pkg/day\"",
          "35:  \"github.com/apache/answer/pkg/htmltext\"",
          "",
          "---------------"
        ],
        "internal/base/validator/validator.go||internal/base/validator/validator.go": [
          "File: internal/base/validator/validator.go -> internal/base/validator/validator.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"strings\"",
          "27:  \"unicode\"",
          "31:  \"github.com/go-playground/locales\"",
          "32:  german \"github.com/go-playground/locales/de\"",
          "33:  english \"github.com/go-playground/locales/en\"",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/base/translator\"",
          "",
          "---------------"
        ],
        "internal/cli/build.go||internal/cli/build.go": [
          "File: internal/cli/build.go -> internal/cli/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  \"text/template\"",
          "34:  \"github.com/Masterminds/semver/v3\"",
          "38:  \"github.com/segmentfault/pacman/log\"",
          "39:  \"gopkg.in/yaml.v3\"",
          "40: )",
          "",
          "[Removed Lines]",
          "35:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "36:  \"github.com/apache/incubator-answer/pkg/writer\"",
          "37:  \"github.com/apache/incubator-answer/ui\"",
          "",
          "[Added Lines]",
          "35:  \"github.com/apache/answer/pkg/dir\"",
          "36:  \"github.com/apache/answer/pkg/writer\"",
          "37:  \"github.com/apache/answer/ui\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:  mainGoTpl = `package main",
          "45: import (",
          "49:  {{- range .remote_plugins}}",
          "",
          "[Removed Lines]",
          "46:  answercmd \"github.com/apache/incubator-answer/cmd\"",
          "",
          "[Added Lines]",
          "46:  answercmd \"github.com/apache/answer/cmd\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "202: func downloadGoModFile(b *buildingMaterial) (err error) {",
          "204:  if len(b.answerModuleReplacement) > 0 {",
          "206:   err = b.newExecCmd(\"go\", \"mod\", \"edit\", \"-replace\", replacement).Run()",
          "207:   if err != nil {",
          "208:    return err",
          "",
          "[Removed Lines]",
          "205:   replacement := fmt.Sprintf(\"%s=%s\", \"github.com/apache/incubator-answer\", b.answerModuleReplacement)",
          "",
          "[Added Lines]",
          "205:   replacement := fmt.Sprintf(\"%s=%s\", \"github.com/apache/answer\", b.answerModuleReplacement)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "225: func copyUIFiles(b *buildingMaterial) (err error) {",
          "227:  buf := new(bytes.Buffer)",
          "228:  goListCmd.Stdout = buf",
          "229:  if err = goListCmd.Run(); err != nil {",
          "",
          "[Removed Lines]",
          "226:  goListCmd := b.newExecCmd(\"go\", \"list\", \"-mod=mod\", \"-m\", \"-f\", \"{{.Dir}}\", \"github.com/apache/incubator-answer\")",
          "",
          "[Added Lines]",
          "226:  goListCmd := b.newExecCmd(\"go\", \"list\", \"-mod=mod\", \"-m\", \"-f\", \"{{.Dir}}\", \"github.com/apache/answer\")",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "233:  answerDir := strings.TrimSpace(buf.String())",
          "234:  goModUIDir := filepath.Join(answerDir, \"ui\")",
          "237:  if err = copyDirEntries(os.DirFS(goModUIDir), \".\", localUIBuildDir, \"node_modules\"); err != nil {",
          "238:   return fmt.Errorf(\"failed to copy ui files: %w\", err)",
          "239:  }",
          "242:  localUIPluginDir := filepath.Join(localUIBuildDir, \"src/plugins/\")",
          "",
          "[Removed Lines]",
          "235:  localUIBuildDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/incubator-answer/ui/\")",
          "241:  pluginsDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/incubator-answer-plugins/\")",
          "",
          "[Added Lines]",
          "235:  localUIBuildDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/answer/ui/\")",
          "241:  pluginsDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/answer-plugins/\")",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "285: func overwriteIndexTs(b *buildingMaterial) (err error) {",
          "288:  folders, err := getFolders(localUIPluginDir)",
          "289:  if err != nil {",
          "",
          "[Removed Lines]",
          "286:  localUIPluginDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/incubator-answer/ui/src/plugins/\")",
          "",
          "[Added Lines]",
          "286:  localUIPluginDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/answer/ui/src/plugins/\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "329: func buildUI(b *buildingMaterial) (err error) {",
          "332:  pnpmInstallCmd := b.newExecCmd(\"pnpm\", \"pre-install\")",
          "333:  pnpmInstallCmd.Dir = localUIBuildDir",
          "",
          "[Removed Lines]",
          "330:  localUIBuildDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/incubator-answer/ui\")",
          "",
          "[Added Lines]",
          "330:  localUIBuildDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/answer/ui\")",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "346: func replaceNecessaryFile(b *buildingMaterial) (err error) {",
          "347:  fmt.Printf(\"try to replace ui build directory\\n\")",
          "349:  err = copyDirEntries(ui.Build, \".\", uiBuildDir)",
          "350:  return err",
          "351: }",
          "",
          "[Removed Lines]",
          "348:  uiBuildDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/incubator-answer/ui\")",
          "",
          "[Added Lines]",
          "348:  uiBuildDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/answer/ui\")",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "401:   }",
          "402:  }",
          "405:  entries, err := os.ReadDir(originalI18nDir)",
          "406:  if err != nil {",
          "407:   return err",
          "",
          "[Removed Lines]",
          "404:  originalI18nDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/incubator-answer/i18n\")",
          "",
          "[Added Lines]",
          "404:  originalI18nDir := filepath.Join(b.tmpDir, \"vendor/github.com/apache/answer/i18n\")",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "527: func buildBinary(b *buildingMaterial) (err error) {",
          "528:  versionInfo := b.originalAnswerInfo",
          "530:  ldflags := fmt.Sprintf(\"-X %s.Version=%s -X %s.Revision=%s -X %s.Time=%s\",",
          "531:   cmdPkg, versionInfo.Version, cmdPkg, versionInfo.Revision, cmdPkg, versionInfo.Time)",
          "532:  err = b.newExecCmd(\"go\", \"build\",",
          "",
          "[Removed Lines]",
          "529:  cmdPkg := \"github.com/apache/incubator-answer/cmd\"",
          "",
          "[Added Lines]",
          "529:  cmdPkg := \"github.com/apache/answer/cmd\"",
          "",
          "---------------"
        ],
        "internal/cli/config.go||internal/cli/config.go": [
          "File: internal/cli/config.go -> internal/cli/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "29:  \"xorm.io/xorm\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/cli/dump.go||internal/cli/dump.go": [
          "File: internal/cli/dump.go -> internal/cli/dump.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"path/filepath\"",
          "25:  \"time\"",
          "28:  \"xorm.io/xorm/schemas\"",
          "29: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "",
          "---------------"
        ],
        "internal/cli/i18n.go||internal/cli/i18n.go": [
          "File: internal/cli/i18n.go -> internal/cli/i18n.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"fmt\"",
          "27:  \"gopkg.in/yaml.v3\"",
          "28:  \"os\"",
          "29:  \"path/filepath\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/i18n\"",
          "25:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "26:  \"github.com/apache/incubator-answer/pkg/writer\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/i18n\"",
          "25:  \"github.com/apache/answer/pkg/dir\"",
          "26:  \"github.com/apache/answer/pkg/writer\"",
          "",
          "---------------"
        ],
        "internal/cli/install.go||internal/cli/install.go": [
          "File: internal/cli/install.go -> internal/cli/install.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"path/filepath\"",
          "26:  \"sync\"",
          "32: )",
          "34: const (",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/configs\"",
          "29:  \"github.com/apache/incubator-answer/i18n\"",
          "30:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "31:  \"github.com/apache/incubator-answer/pkg/writer\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/configs\"",
          "29:  \"github.com/apache/answer/i18n\"",
          "30:  \"github.com/apache/answer/pkg/dir\"",
          "31:  \"github.com/apache/answer/pkg/writer\"",
          "",
          "---------------"
        ],
        "internal/cli/install_check.go||internal/cli/install_check.go": [
          "File: internal/cli/install_check.go -> internal/cli/install_check.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"fmt\"",
          "28: )",
          "30: func CheckConfigFile(configPath string) bool {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/pkg/dir\"",
          "",
          "---------------"
        ],
        "internal/controller/activity_controller.go||internal/controller/activity_controller.go": [
          "File: internal/controller/activity_controller.go -> internal/controller/activity_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "29:  \"github.com/gin-gonic/gin\"",
          "30: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "28:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/activity\"",
          "27:  \"github.com/apache/answer/internal/service/role\"",
          "28:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/answer_controller.go||internal/controller/answer_controller.go": [
          "File: internal/controller/answer_controller.go -> internal/controller/answer_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"fmt\"",
          "24:  \"net/http\"",
          "39:  \"github.com/gin-gonic/gin\"",
          "40:  \"github.com/segmentfault/pacman/errors\"",
          "41: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/middleware\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/base/translator\"",
          "30:  \"github.com/apache/answer/internal/base/validator\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/action\"",
          "34:  \"github.com/apache/answer/internal/service/content\"",
          "35:  \"github.com/apache/answer/internal/service/permission\"",
          "36:  \"github.com/apache/answer/internal/service/rank\"",
          "37:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/badge_controller.go||internal/controller/badge_controller.go": [
          "File: internal/controller/badge_controller.go -> internal/controller/badge_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "29:  \"github.com/gin-gonic/gin\"",
          "30: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "28:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/pager\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/badge\"",
          "28:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/collection_controller.go||internal/controller/collection_controller.go": [
          "File: internal/controller/collection_controller.go -> internal/controller/collection_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "28:  \"github.com/gin-gonic/gin\"",
          "29: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/collection\"",
          "27:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/collection\"",
          "27:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/comment_controller.go||internal/controller/comment_controller.go": [
          "File: internal/controller/comment_controller.go -> internal/controller/comment_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "35:  \"github.com/gin-gonic/gin\"",
          "36:  \"github.com/segmentfault/pacman/errors\"",
          "37:  \"net/http\"",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/comment\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "34:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/base/validator\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/internal/service/action\"",
          "31:  \"github.com/apache/answer/internal/service/comment\"",
          "32:  \"github.com/apache/answer/internal/service/permission\"",
          "33:  \"github.com/apache/answer/internal/service/rank\"",
          "34:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/connector_controller.go||internal/controller/connector_controller.go": [
          "File: internal/controller/connector_controller.go -> internal/controller/connector_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"fmt\"",
          "24:  \"net/http\"",
          "33:  \"github.com/gin-gonic/gin\"",
          "34:  \"github.com/segmentfault/pacman/log\"",
          "35: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "32:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/middleware\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "29:  \"github.com/apache/answer/internal/service/export\"",
          "30:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "31:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "32:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/dashboard_controller.go||internal/controller/dashboard_controller.go": [
          "File: internal/controller/dashboard_controller.go -> internal/controller/dashboard_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "25:  \"github.com/gin-gonic/gin\"",
          "26: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/service/dashboard\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/service/dashboard\"",
          "",
          "---------------"
        ],
        "internal/controller/embed_controller.go||internal/controller/embed_controller.go": [
          "File: internal/controller/embed_controller.go -> internal/controller/embed_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "25:  \"github.com/gin-gonic/gin\"",
          "26: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/follow_controller.go||internal/controller/follow_controller.go": [
          "File: internal/controller/follow_controller.go -> internal/controller/follow_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "28:  \"github.com/gin-gonic/gin\"",
          "29:  \"github.com/jinzhu/copier\"",
          "30: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/follow\"",
          "27:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/follow\"",
          "27:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/lang_controller.go||internal/controller/lang_controller.go": [
          "File: internal/controller/lang_controller.go -> internal/controller/lang_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "28:  \"github.com/gin-gonic/gin\"",
          "29:  \"github.com/segmentfault/pacman/i18n\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "",
          "---------------"
        ],
        "internal/controller/meta_controller.go||internal/controller/meta_controller.go": [
          "File: internal/controller/meta_controller.go -> internal/controller/meta_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "28:  \"github.com/gin-gonic/gin\"",
          "29: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/meta\"",
          "27:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/meta\"",
          "27:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/notification_controller.go||internal/controller/notification_controller.go": [
          "File: internal/controller/notification_controller.go -> internal/controller/notification_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "29:  \"github.com/gin-gonic/gin\"",
          "30: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/notification\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/notification\"",
          "27:  \"github.com/apache/answer/internal/service/permission\"",
          "28:  \"github.com/apache/answer/internal/service/rank\"",
          "",
          "---------------"
        ],
        "internal/controller/permission_controller.go||internal/controller/permission_controller.go": [
          "File: internal/controller/permission_controller.go -> internal/controller/permission_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "27:  \"github.com/gin-gonic/gin\"",
          "28: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/rank\"",
          "",
          "---------------"
        ],
        "internal/controller/plugin_captcha_controller.go||internal/controller/plugin_captcha_controller.go": [
          "File: internal/controller/plugin_captcha_controller.go -> internal/controller/plugin_captcha_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "27:  \"github.com/gin-gonic/gin\"",
          "28: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/plugin_user_center_controller.go||internal/controller/plugin_user_center_controller.go": [
          "File: internal/controller/plugin_user_center_controller.go -> internal/controller/plugin_user_center_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"fmt\"",
          "24:  \"net/http\"",
          "32:  \"github.com/gin-gonic/gin\"",
          "33:  \"github.com/segmentfault/pacman/log\"",
          "34: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "31:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/middleware\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "29:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "30:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "31:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/question_controller.go||internal/controller/question_controller.go": [
          "File: internal/controller/question_controller.go -> internal/controller/question_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"net/http\"",
          "39:  \"github.com/gin-gonic/gin\"",
          "40:  \"github.com/jinzhu/copier\"",
          "41:  \"github.com/segmentfault/pacman/errors\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/base/middleware\"",
          "27:  \"github.com/apache/answer/internal/base/pager\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/base/translator\"",
          "30:  \"github.com/apache/answer/internal/base/validator\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/action\"",
          "34:  \"github.com/apache/answer/internal/service/content\"",
          "35:  \"github.com/apache/answer/internal/service/permission\"",
          "36:  \"github.com/apache/answer/internal/service/rank\"",
          "37:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/rank_controller.go||internal/controller/rank_controller.go": [
          "File: internal/controller/rank_controller.go -> internal/controller/rank_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "27:  \"github.com/gin-gonic/gin\"",
          "28: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/rank\"",
          "",
          "---------------"
        ],
        "internal/controller/reason_controller.go||internal/controller/reason_controller.go": [
          "File: internal/controller/reason_controller.go -> internal/controller/reason_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "26:  \"github.com/gin-gonic/gin\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/schema\"",
          "25:  \"github.com/apache/incubator-answer/internal/service/reason\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/schema\"",
          "25:  \"github.com/apache/answer/internal/service/reason\"",
          "",
          "---------------"
        ],
        "internal/controller/render_controller.go||internal/controller/render_controller.go": [
          "File: internal/controller/render_controller.go -> internal/controller/render_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "25:  \"github.com/gin-gonic/gin\"",
          "26: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/report_controller.go||internal/controller/report_controller.go": [
          "File: internal/controller/report_controller.go -> internal/controller/report_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "35:  \"github.com/gin-gonic/gin\"",
          "36:  \"github.com/segmentfault/pacman/errors\"",
          "37: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/report\"",
          "34:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/base/validator\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/internal/service/action\"",
          "31:  \"github.com/apache/answer/internal/service/permission\"",
          "32:  \"github.com/apache/answer/internal/service/rank\"",
          "33:  \"github.com/apache/answer/internal/service/report\"",
          "34:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/review_controller.go||internal/controller/review_controller.go": [
          "File: internal/controller/review_controller.go -> internal/controller/review_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "31:  \"github.com/gin-gonic/gin\"",
          "32:  \"github.com/segmentfault/pacman/errors\"",
          "33: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "30:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/action\"",
          "28:  \"github.com/apache/answer/internal/service/rank\"",
          "29:  \"github.com/apache/answer/internal/service/review\"",
          "30:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/revision_controller.go||internal/controller/revision_controller.go": [
          "File: internal/controller/revision_controller.go -> internal/controller/revision_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "34:  \"github.com/gin-gonic/gin\"",
          "35:  \"github.com/segmentfault/pacman/errors\"",
          "36: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "32:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "33:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/internal/base/handler\"",
          "25:  \"github.com/apache/answer/internal/base/middleware\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "29:  \"github.com/apache/answer/internal/service/content\"",
          "30:  \"github.com/apache/answer/internal/service/permission\"",
          "31:  \"github.com/apache/answer/internal/service/rank\"",
          "32:  \"github.com/apache/answer/pkg/obj\"",
          "33:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller/search_controller.go||internal/controller/search_controller.go": [
          "File: internal/controller/search_controller.go -> internal/controller/search_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "33:  \"github.com/gin-gonic/gin\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "35: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "32:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/base/validator\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/internal/service/action\"",
          "31:  \"github.com/apache/answer/internal/service/content\"",
          "32:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/siteinfo_controller.go||internal/controller/siteinfo_controller.go": [
          "File: internal/controller/siteinfo_controller.go -> internal/controller/siteinfo_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"net/http\"",
          "29:  \"github.com/gin-gonic/gin\"",
          "30:  \"github.com/segmentfault/pacman/log\"",
          "31: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "",
          "---------------"
        ],
        "internal/controller/tag_controller.go||internal/controller/tag_controller.go": [
          "File: internal/controller/tag_controller.go -> internal/controller/tag_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "32:  \"github.com/gin-gonic/gin\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/tag\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/pager\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/internal/service/permission\"",
          "29:  \"github.com/apache/answer/internal/service/rank\"",
          "30:  \"github.com/apache/answer/internal/service/tag\"",
          "31:  \"github.com/apache/answer/internal/service/tag_common\"",
          "",
          "---------------"
        ],
        "internal/controller/template_controller.go||internal/controller/template_controller.go": [
          "File: internal/controller/template_controller.go -> internal/controller/template_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "24:  \"fmt\"",
          "30:  \"html/template\"",
          "31:  \"net/http\"",
          "32:  \"net/url\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "29:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/middleware\"",
          "26:  \"github.com/apache/answer/internal/base/pager\"",
          "27:  \"github.com/apache/answer/internal/service/content\"",
          "28:  \"github.com/apache/answer/internal/service/event_queue\"",
          "29:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:  \"strings\"",
          "35:  \"time\"",
          "50:  \"github.com/gin-gonic/gin\"",
          "51:  \"github.com/segmentfault/pacman/log\"",
          "52: )",
          "",
          "[Removed Lines]",
          "37:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "38:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "39:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "40:  templaterender \"github.com/apache/incubator-answer/internal/controller/template_render\"",
          "41:  \"github.com/apache/incubator-answer/internal/entity\"",
          "42:  \"github.com/apache/incubator-answer/internal/schema\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "44:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "45:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "46:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "47:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "48:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "49:  \"github.com/apache/incubator-answer/ui\"",
          "",
          "[Added Lines]",
          "37:  \"github.com/apache/answer/internal/base/constant\"",
          "38:  \"github.com/apache/answer/internal/base/handler\"",
          "39:  \"github.com/apache/answer/internal/base/translator\"",
          "40:  templaterender \"github.com/apache/answer/internal/controller/template_render\"",
          "41:  \"github.com/apache/answer/internal/entity\"",
          "42:  \"github.com/apache/answer/internal/schema\"",
          "43:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "44:  \"github.com/apache/answer/pkg/checker\"",
          "45:  \"github.com/apache/answer/pkg/converter\"",
          "46:  \"github.com/apache/answer/pkg/htmltext\"",
          "47:  \"github.com/apache/answer/pkg/obj\"",
          "48:  \"github.com/apache/answer/pkg/uid\"",
          "49:  \"github.com/apache/answer/ui\"",
          "",
          "---------------"
        ],
        "internal/controller/template_render/answer.go||internal/controller/template_render/answer.go": [
          "File: internal/controller/template_render/answer.go -> internal/controller/template_render/answer.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "28: func (t *TemplateRenderController) AnswerList(ctx context.Context, req *schema.AnswerListReq) ([]*schema.AnswerInfo, int64, error) {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/controller/template_render/comment.go||internal/controller/template_render/comment.go": [
          "File: internal/controller/template_render/comment.go -> internal/controller/template_render/comment.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "28: func (t *TemplateRenderController) CommentList(",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/pager\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/controller/template_render/controller.go||internal/controller/template_render/controller.go": [
          "File: internal/controller/template_render/controller.go -> internal/controller/template_render/controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"math\"",
          "30:  \"github.com/google/wire\"",
          "34: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "26:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/comment\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/tag\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/service/content\"",
          "26:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "28:  \"github.com/apache/answer/internal/service/comment\"",
          "29:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/tag\"",
          "",
          "---------------"
        ],
        "internal/controller/template_render/question.go||internal/controller/template_render/question.go": [
          "File: internal/controller/template_render/question.go -> internal/controller/template_render/question.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"math\"",
          "25:  \"net/http\"",
          "29:  \"github.com/gin-gonic/gin\"",
          "30:  \"github.com/segmentfault/pacman/log\"",
          "31: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/controller/template_render/tags.go||internal/controller/template_render/tags.go": [
          "File: internal/controller/template_render/tags.go -> internal/controller/template_render/tags.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package templaterender",
          "22: import (",
          "25:  \"github.com/jinzhu/copier\"",
          "26:  \"golang.org/x/net/context\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "24:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/pager\"",
          "24:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/controller/template_render/userinfo.go||internal/controller/template_render/userinfo.go": [
          "File: internal/controller/template_render/userinfo.go -> internal/controller/template_render/userinfo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package templaterender",
          "22: import (",
          "24:  \"golang.org/x/net/context\"",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/controller/upload_controller.go||internal/controller/upload_controller.go": [
          "File: internal/controller/upload_controller.go -> internal/controller/upload_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "29:  \"github.com/gin-gonic/gin\"",
          "30:  \"github.com/segmentfault/pacman/errors\"",
          "31: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/uploader\"",
          "28:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/uploader\"",
          "28:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/controller/user_controller.go||internal/controller/user_controller.go": [
          "File: internal/controller/user_controller.go -> internal/controller/user_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"net/url\"",
          "40:  \"github.com/gin-gonic/gin\"",
          "41:  \"github.com/segmentfault/pacman/errors\"",
          "42:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/user_notification_config\"",
          "39:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/middleware\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/base/translator\"",
          "30:  \"github.com/apache/answer/internal/base/validator\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/action\"",
          "34:  \"github.com/apache/answer/internal/service/auth\"",
          "35:  \"github.com/apache/answer/internal/service/content\"",
          "36:  \"github.com/apache/answer/internal/service/export\"",
          "37:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/answer/internal/service/user_notification_config\"",
          "39:  \"github.com/apache/answer/pkg/checker\"",
          "",
          "---------------"
        ],
        "internal/controller/user_plugin_controller.go||internal/controller/user_plugin_controller.go": [
          "File: internal/controller/user_plugin_controller.go -> internal/controller/user_plugin_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "26:  \"github.com/segmentfault/pacman/errors\"",
          "27:  \"net/http\"",
          "33:  \"github.com/gin-gonic/gin\"",
          "34: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "30:  \"github.com/apache/incubator-answer/internal/schema\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/plugin_common\"",
          "32:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/base/handler\"",
          "30:  \"github.com/apache/answer/internal/schema\"",
          "31:  \"github.com/apache/answer/internal/service/plugin_common\"",
          "32:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller/vote_controller.go||internal/controller/vote_controller.go": [
          "File: internal/controller/vote_controller.go -> internal/controller/vote_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller",
          "22: import (",
          "34:  \"github.com/gin-gonic/gin\"",
          "35:  \"github.com/segmentfault/pacman/errors\"",
          "36: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "33:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/base/validator\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/internal/service/action\"",
          "31:  \"github.com/apache/answer/internal/service/content\"",
          "32:  \"github.com/apache/answer/internal/service/rank\"",
          "33:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/controller_admin/badge_controller.go||internal/controller_admin/badge_controller.go": [
          "File: internal/controller_admin/badge_controller.go -> internal/controller_admin/badge_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller_admin",
          "22: import (",
          "27:  \"github.com/gin-gonic/gin\"",
          "28: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/pager\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/badge\"",
          "",
          "---------------"
        ],
        "internal/controller_admin/plugin_controller.go||internal/controller_admin/plugin_controller.go": [
          "File: internal/controller_admin/plugin_controller.go -> internal/controller_admin/plugin_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "29:  \"github.com/gin-gonic/gin\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/plugin_common\"",
          "28:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/plugin_common\"",
          "28:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/controller_admin/role_controller.go||internal/controller_admin/role_controller.go": [
          "File: internal/controller_admin/role_controller.go -> internal/controller_admin/role_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller_admin",
          "22: import (",
          "26:  \"github.com/gin-gonic/gin\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/schema\"",
          "25:  service \"github.com/apache/incubator-answer/internal/service/role\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/schema\"",
          "25:  service \"github.com/apache/answer/internal/service/role\"",
          "",
          "---------------"
        ],
        "internal/controller_admin/siteinfo_controller.go||internal/controller_admin/siteinfo_controller.go": [
          "File: internal/controller_admin/siteinfo_controller.go -> internal/controller_admin/siteinfo_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"html\"",
          "24:  \"net/http\"",
          "30:  \"github.com/gin-gonic/gin\"",
          "31: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/siteinfo\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/middleware\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "29:  \"github.com/apache/answer/internal/service/siteinfo\"",
          "",
          "---------------"
        ],
        "internal/controller_admin/theme_controller.go||internal/controller_admin/theme_controller.go": [
          "File: internal/controller_admin/theme_controller.go -> internal/controller_admin/theme_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller_admin",
          "22: import (",
          "25:  \"github.com/gin-gonic/gin\"",
          "26: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/controller_admin/user_backyard_controller.go||internal/controller_admin/user_backyard_controller.go": [
          "File: internal/controller_admin/user_backyard_controller.go -> internal/controller_admin/user_backyard_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package controller_admin",
          "22: import (",
          "30:  \"github.com/gin-gonic/gin\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/user_admin\"",
          "29:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/handler\"",
          "24:  \"github.com/apache/answer/internal/base/middleware\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/internal/service/user_admin\"",
          "29:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/entity/comment_entity.go||internal/entity/comment_entity.go": [
          "File: internal/entity/comment_entity.go -> internal/entity/comment_entity.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"time\"",
          "28: )",
          "30: const (",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/entity/config_entity.go||internal/entity/config_entity.go": [
          "File: internal/entity/config_entity.go -> internal/entity/config_entity.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"encoding/json\"",
          "24:  \"github.com/segmentfault/pacman/log\"",
          "27: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/install/install_controller.go||internal/install/install_controller.go": [
          "File: internal/install/install_controller.go -> internal/install/install_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"path/filepath\"",
          "27:  \"time\"",
          "38:  \"github.com/gin-gonic/gin\"",
          "39:  \"github.com/jinzhu/copier\"",
          "40:  \"github.com/segmentfault/pacman/errors\"",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/configs\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/conf\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "35:  \"github.com/apache/incubator-answer/internal/cli\"",
          "36:  \"github.com/apache/incubator-answer/internal/migrations\"",
          "37:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/configs\"",
          "30:  \"github.com/apache/answer/internal/base/conf\"",
          "31:  \"github.com/apache/answer/internal/base/data\"",
          "32:  \"github.com/apache/answer/internal/base/handler\"",
          "33:  \"github.com/apache/answer/internal/base/reason\"",
          "34:  \"github.com/apache/answer/internal/base/translator\"",
          "35:  \"github.com/apache/answer/internal/cli\"",
          "36:  \"github.com/apache/answer/internal/migrations\"",
          "37:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/install/install_main.go||internal/install/install_main.go": [
          "File: internal/install/install_main.go -> internal/install/install_main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"fmt\"",
          "24:  \"os\"",
          "28: )",
          "30: var (",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/cli\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/cli\"",
          "",
          "---------------"
        ],
        "internal/install/install_req.go||internal/install/install_req.go": [
          "File: internal/install/install_req.go -> internal/install/install_req.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"net/url\"",
          "25:  \"strings\"",
          "30:  \"github.com/segmentfault/pacman/errors\"",
          "31:  \"xorm.io/xorm/schemas\"",
          "32: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "29:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/base/validator\"",
          "29:  \"github.com/apache/answer/pkg/checker\"",
          "",
          "---------------"
        ],
        "internal/install/install_server.go||internal/install/install_server.go": [
          "File: internal/install/install_server.go -> internal/install/install_server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"io/fs\"",
          "26:  \"net/http\"",
          "31:  \"github.com/gin-gonic/gin\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "33:  \"gopkg.in/yaml.v3\"",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/configs\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/conf\"",
          "30:  \"github.com/apache/incubator-answer/ui\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/configs\"",
          "29:  \"github.com/apache/answer/internal/base/conf\"",
          "30:  \"github.com/apache/answer/ui\"",
          "",
          "---------------"
        ],
        "internal/migrations/init.go||internal/migrations/init.go": [
          "File: internal/migrations/init.go -> internal/migrations/init.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "27:  \"time\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "35:  \"golang.org/x/crypto/bcrypt\"",
          "36:  \"xorm.io/xorm\"",
          "37: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "30:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "31:  \"github.com/apache/incubator-answer/internal/schema\"",
          "34:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "29:  \"github.com/apache/answer/internal/base/data\"",
          "30:  \"github.com/apache/answer/internal/repo/unique\"",
          "31:  \"github.com/apache/answer/internal/schema\"",
          "34:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/init_data.go||internal/migrations/init_data.go": [
          "File: internal/migrations/init_data.go -> internal/migrations/init_data.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package migrations",
          "22: import (",
          "25: )",
          "27: const (",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/entity\"",
          "24:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/entity\"",
          "24:  \"github.com/apache/answer/internal/service/permission\"",
          "",
          "---------------"
        ],
        "internal/migrations/migrations.go||internal/migrations/migrations.go": [
          "File: internal/migrations/migrations.go -> internal/migrations/migrations.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/data\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v10.go||internal/migrations/v10.go": [
          "File: internal/migrations/v10.go -> internal/migrations/v10.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "30:  \"github.com/tidwall/gjson\"",
          "31:  \"xorm.io/xorm\"",
          "32: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/migrations/v11.go||internal/migrations/v11.go": [
          "File: internal/migrations/v11.go -> internal/migrations/v11.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v12.go||internal/migrations/v12.go": [
          "File: internal/migrations/v12.go -> internal/migrations/v12.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"time\"",
          "28:  \"github.com/segmentfault/pacman/log\"",
          "29:  \"xorm.io/xorm\"",
          "30: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v13.go||internal/migrations/v13.go": [
          "File: internal/migrations/v13.go -> internal/migrations/v13.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"time\"",
          "27:  \"xorm.io/builder\"",
          "33:  \"github.com/segmentfault/pacman/log\"",
          "34:  \"xorm.io/xorm\"",
          "35: )",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/schema\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/internal/base/constant\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/schema\"",
          "32:  \"github.com/apache/answer/internal/service/permission\"",
          "",
          "---------------"
        ],
        "internal/migrations/v15.go||internal/migrations/v15.go": [
          "File: internal/migrations/v15.go -> internal/migrations/v15.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "25:  \"xorm.io/xorm\"",
          "26: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v16.go||internal/migrations/v16.go": [
          "File: internal/migrations/v16.go -> internal/migrations/v16.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27:  \"xorm.io/xorm\"",
          "28: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v17.go||internal/migrations/v17.go": [
          "File: internal/migrations/v17.go -> internal/migrations/v17.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/service/permission\"",
          "",
          "---------------"
        ],
        "internal/migrations/v18.go||internal/migrations/v18.go": [
          "File: internal/migrations/v18.go -> internal/migrations/v18.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "29:  \"xorm.io/xorm\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/migrations/v19.go||internal/migrations/v19.go": [
          "File: internal/migrations/v19.go -> internal/migrations/v19.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "25:  \"xorm.io/xorm\"",
          "26: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v20.go||internal/migrations/v20.go": [
          "File: internal/migrations/v20.go -> internal/migrations/v20.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v22.go||internal/migrations/v22.go": [
          "File: internal/migrations/v22.go -> internal/migrations/v22.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/unique\"",
          "",
          "---------------"
        ],
        "internal/migrations/v23.go||internal/migrations/v23.go": [
          "File: internal/migrations/v23.go -> internal/migrations/v23.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"xorm.io/xorm\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v24.go||internal/migrations/v24.go": [
          "File: internal/migrations/v24.go -> internal/migrations/v24.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "30:  \"xorm.io/xorm\"",
          "31: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/migrations/v3.go||internal/migrations/v3.go": [
          "File: internal/migrations/v3.go -> internal/migrations/v3.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"time\"",
          "28:  \"github.com/segmentfault/pacman/log\"",
          "29:  \"xorm.io/xorm\"",
          "30:  \"xorm.io/xorm/schemas\"",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v4.go||internal/migrations/v4.go": [
          "File: internal/migrations/v4.go -> internal/migrations/v4.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "28:  \"github.com/segmentfault/pacman/log\"",
          "29:  \"xorm.io/xorm\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/service/permission\"",
          "",
          "---------------"
        ],
        "internal/migrations/v5.go||internal/migrations/v5.go": [
          "File: internal/migrations/v5.go -> internal/migrations/v5.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v6.go||internal/migrations/v6.go": [
          "File: internal/migrations/v6.go -> internal/migrations/v6.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v7.go||internal/migrations/v7.go": [
          "File: internal/migrations/v7.go -> internal/migrations/v7.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/migrations/v8.go||internal/migrations/v8.go": [
          "File: internal/migrations/v8.go -> internal/migrations/v8.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"time\"",
          "29:  \"github.com/segmentfault/pacman/log\"",
          "30:  \"xorm.io/xorm\"",
          "31: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/permission\"",
          "",
          "---------------"
        ],
        "internal/migrations/v9.go||internal/migrations/v9.go": [
          "File: internal/migrations/v9.go -> internal/migrations/v9.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"xorm.io/xorm\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/repo/activity/activity_repo.go||internal/repo/activity/activity_repo.go": [
          "File: internal/repo/activity/activity_repo.go -> internal/repo/activity/activity_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "33: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/activity_type\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/activity\"",
          "29:  \"github.com/apache/answer/internal/service/activity_type\"",
          "30:  \"github.com/apache/answer/internal/service/config\"",
          "",
          "---------------"
        ],
        "internal/repo/activity/answer_repo.go||internal/repo/activity/answer_repo.go": [
          "File: internal/repo/activity/answer_repo.go -> internal/repo/activity/answer_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"time\"",
          "27:  \"xorm.io/builder\"",
          "39:  \"github.com/segmentfault/pacman/errors\"",
          "40:  \"xorm.io/xorm\"",
          "41: )",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/schema\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "38:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/internal/base/constant\"",
          "30:  \"github.com/apache/answer/internal/base/data\"",
          "31:  \"github.com/apache/answer/internal/base/reason\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/schema\"",
          "34:  \"github.com/apache/answer/internal/service/activity\"",
          "35:  \"github.com/apache/answer/internal/service/activity_common\"",
          "36:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "37:  \"github.com/apache/answer/internal/service/rank\"",
          "38:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/repo/activity/follow_repo.go||internal/repo/activity/follow_repo.go": [
          "File: internal/repo/activity/follow_repo.go -> internal/repo/activity/follow_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"time\"",
          "29:  \"github.com/segmentfault/pacman/log\"",
          "30:  \"xorm.io/builder\"",
          "36:  \"github.com/segmentfault/pacman/errors\"",
          "37:  \"xorm.io/xorm\"",
          "38: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/follow\"",
          "28:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "34:  \"github.com/apache/incubator-answer/internal/entity\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/service/activity_common\"",
          "27:  \"github.com/apache/answer/internal/service/follow\"",
          "28:  \"github.com/apache/answer/pkg/obj\"",
          "32:  \"github.com/apache/answer/internal/base/data\"",
          "33:  \"github.com/apache/answer/internal/base/reason\"",
          "34:  \"github.com/apache/answer/internal/entity\"",
          "35:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/activity/review_repo.go||internal/repo/activity/review_repo.go": [
          "File: internal/repo/activity/review_repo.go -> internal/repo/activity/review_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "28:  \"xorm.io/builder\"",
          "37:  \"github.com/segmentfault/pacman/errors\"",
          "38:  \"xorm.io/xorm\"",
          "39: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/pkg/converter\"",
          "30:  \"github.com/apache/answer/internal/base/data\"",
          "31:  \"github.com/apache/answer/internal/base/reason\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/service/activity\"",
          "34:  \"github.com/apache/answer/internal/service/activity_common\"",
          "35:  \"github.com/apache/answer/internal/service/config\"",
          "36:  \"github.com/apache/answer/internal/service/rank\"",
          "",
          "---------------"
        ],
        "internal/repo/activity/user_active_repo.go||internal/repo/activity/user_active_repo.go": [
          "File: internal/repo/activity/user_active_repo.go -> internal/repo/activity/user_active_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"xorm.io/builder\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "35:  \"xorm.io/xorm\"",
          "36: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/service/activity\"",
          "31:  \"github.com/apache/answer/internal/service/activity_common\"",
          "32:  \"github.com/apache/answer/internal/service/config\"",
          "33:  \"github.com/apache/answer/internal/service/rank\"",
          "",
          "---------------"
        ],
        "internal/repo/activity/vote_repo.go||internal/repo/activity/vote_repo.go": [
          "File: internal/repo/activity/vote_repo.go -> internal/repo/activity/vote_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"time\"",
          "28:  \"github.com/segmentfault/pacman/log\"",
          "38:  \"xorm.io/builder\"",
          "45:  \"github.com/segmentfault/pacman/errors\"",
          "46:  \"xorm.io/xorm\"",
          "47: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "32:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "36:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "40:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "41:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "42:  \"github.com/apache/incubator-answer/internal/entity\"",
          "43:  \"github.com/apache/incubator-answer/internal/schema\"",
          "44:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/service/content\"",
          "30:  \"github.com/apache/answer/internal/base/constant\"",
          "31:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "32:  \"github.com/apache/answer/pkg/converter\"",
          "34:  \"github.com/apache/answer/internal/base/pager\"",
          "35:  \"github.com/apache/answer/internal/service/rank\"",
          "36:  \"github.com/apache/answer/pkg/obj\"",
          "40:  \"github.com/apache/answer/internal/base/data\"",
          "41:  \"github.com/apache/answer/internal/base/reason\"",
          "42:  \"github.com/apache/answer/internal/entity\"",
          "43:  \"github.com/apache/answer/internal/schema\"",
          "44:  \"github.com/apache/answer/internal/service/activity_common\"",
          "",
          "---------------"
        ],
        "internal/repo/activity_common/activity_repo.go||internal/repo/activity_common/activity_repo.go": [
          "File: internal/repo/activity_common/activity_repo.go -> internal/repo/activity_common/activity_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"time\"",
          "31:  \"xorm.io/builder\"",
          "32:  \"xorm.io/xorm\"",
          "38:  \"github.com/segmentfault/pacman/errors\"",
          "39: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/activity_type\"",
          "30:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/answer/internal/service/activity_type\"",
          "30:  \"github.com/apache/answer/pkg/obj\"",
          "34:  \"github.com/apache/answer/internal/base/data\"",
          "35:  \"github.com/apache/answer/internal/base/reason\"",
          "36:  \"github.com/apache/answer/internal/service/config\"",
          "37:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/activity_common/follow.go||internal/repo/activity_common/follow.go": [
          "File: internal/repo/activity_common/follow.go -> internal/repo/activity_common/follow.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "33: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "30:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/answer/internal/service/unique\"",
          "30:  \"github.com/apache/answer/pkg/obj\"",
          "",
          "---------------"
        ],
        "internal/repo/activity_common/vote.go||internal/repo/activity_common/vote.go": [
          "File: internal/repo/activity_common/vote.go -> internal/repo/activity_common/vote.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "30:  \"github.com/segmentfault/pacman/errors\"",
          "31:  \"github.com/segmentfault/pacman/log\"",
          "32: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/pkg/uid\"",
          "26:  \"github.com/apache/answer/internal/base/data\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/service/activity_common\"",
          "",
          "---------------"
        ],
        "internal/repo/answer/answer_repo.go||internal/repo/answer/answer_repo.go": [
          "File: internal/repo/answer/answer_repo.go -> internal/repo/answer/answer_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"time\"",
          "39:  \"github.com/segmentfault/pacman/errors\"",
          "40:  \"github.com/segmentfault/pacman/log\"",
          "41: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "34:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "37:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "38:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/handler\"",
          "29:  \"github.com/apache/answer/internal/base/pager\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/activity_common\"",
          "34:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "35:  \"github.com/apache/answer/internal/service/rank\"",
          "36:  \"github.com/apache/answer/internal/service/unique\"",
          "37:  \"github.com/apache/answer/pkg/uid\"",
          "38:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/repo/auth/auth.go||internal/repo/auth/auth.go": [
          "File: internal/repo/auth/auth.go -> internal/repo/auth/auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "33: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/service/auth\"",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/base/data\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/repo/badge/badge_event_rule.go||internal/repo/badge/badge_event_rule.go": [
          "File: internal/repo/badge/badge_event_rule.go -> internal/repo/badge/badge_event_rule.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "30:  \"github.com/segmentfault/pacman/errors\"",
          "31:  \"github.com/segmentfault/pacman/log\"",
          "32:  \"strconv\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "29:  \"github.com/apache/answer/internal/service/badge\"",
          "",
          "---------------"
        ],
        "internal/repo/badge/badge_repo.go||internal/repo/badge/badge_repo.go": [
          "File: internal/repo/badge/badge_repo.go -> internal/repo/badge/badge_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "30:  \"github.com/segmentfault/pacman/errors\"",
          "31:  \"xorm.io/xorm\"",
          "32: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/data\"",
          "25:  \"github.com/apache/answer/internal/base/pager\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/badge\"",
          "29:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/badge_award/badge_award_repo.go||internal/repo/badge_award/badge_award_repo.go": [
          "File: internal/repo/badge_award/badge_award_repo.go -> internal/repo/badge_award/badge_award_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32:  \"xorm.io/xorm\"",
          "33: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/pager\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/service/badge\"",
          "30:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/badge_group/badge_group_repo.go||internal/repo/badge_group/badge_group_repo.go": [
          "File: internal/repo/badge_group/badge_group_repo.go -> internal/repo/badge_group/badge_group_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "28: )",
          "30: type badgeGroupRepo struct {",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/data\"",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/service/badge\"",
          "27:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/captcha/captcha.go||internal/repo/captcha/captcha.go": [
          "File: internal/repo/captcha/captcha.go -> internal/repo/captcha/captcha.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"fmt\"",
          "26:  \"time\"",
          "32:  \"github.com/segmentfault/pacman/errors\"",
          "33:  \"github.com/segmentfault/pacman/log\"",
          "34: )",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/base/data\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/service/action\"",
          "",
          "---------------"
        ],
        "internal/repo/collection/collection_group_repo.go||internal/repo/collection/collection_group_repo.go": [
          "File: internal/repo/collection/collection_group_repo.go -> internal/repo/collection/collection_group_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"xorm.io/xorm\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/service/collection\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/service/collection\"",
          "28:  \"github.com/apache/answer/internal/base/data\"",
          "29:  \"github.com/apache/answer/internal/base/pager\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/repo/collection/collection_repo.go||internal/repo/collection/collection_repo.go": [
          "File: internal/repo/collection/collection_repo.go -> internal/repo/collection/collection_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34:  \"xorm.io/xorm\"",
          "35: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  collectioncommon \"github.com/apache/incubator-answer/internal/service/collection_common\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "32:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/pager\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  collectioncommon \"github.com/apache/answer/internal/service/collection_common\"",
          "31:  \"github.com/apache/answer/internal/service/unique\"",
          "32:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/repo/comment/comment_repo.go||internal/repo/comment/comment_repo.go": [
          "File: internal/repo/comment/comment_repo.go -> internal/repo/comment/comment_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"github.com/segmentfault/pacman/log\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "35: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/comment\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/pager\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/service/comment\"",
          "32:  \"github.com/apache/answer/internal/service/comment_common\"",
          "33:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/config/config_repo.go||internal/repo/config/config_repo.go": [
          "File: internal/repo/config/config_repo.go -> internal/repo/config/config_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "33: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/service/config\"",
          "",
          "---------------"
        ],
        "internal/repo/export/email_repo.go||internal/repo/export/email_repo.go": [
          "File: internal/repo/export/email_repo.go -> internal/repo/export/email_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "25:  \"github.com/tidwall/gjson\"",
          "26:  \"time\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/base/data\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/service/export\"",
          "",
          "---------------"
        ],
        "internal/repo/limit/limit.go||internal/repo/limit/limit.go": [
          "File: internal/repo/limit/limit.go -> internal/repo/limit/limit.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "28:  \"github.com/segmentfault/pacman/errors\"",
          "29:  \"time\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/base/data\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "",
          "---------------"
        ],
        "internal/repo/meta/meta_repo.go||internal/repo/meta/meta_repo.go": [
          "File: internal/repo/meta/meta_repo.go -> internal/repo/meta/meta_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30:  \"xorm.io/builder\"",
          "31:  \"xorm.io/xorm\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/meta_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/meta_common\"",
          "",
          "---------------"
        ],
        "internal/repo/notification/notification_repo.go||internal/repo/notification/notification_repo.go": [
          "File: internal/repo/notification/notification_repo.go -> internal/repo/notification/notification_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"time\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/schema\"",
          "31:  notficationcommon \"github.com/apache/incubator-answer/internal/service/notification_common\"",
          "32:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/data\"",
          "27:  \"github.com/apache/answer/internal/base/pager\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/schema\"",
          "31:  notficationcommon \"github.com/apache/answer/internal/service/notification_common\"",
          "32:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/repo/plugin_config/plugin_config_repo.go||internal/repo/plugin_config/plugin_config_repo.go": [
          "File: internal/repo/plugin_config/plugin_config_repo.go -> internal/repo/plugin_config/plugin_config_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/plugin_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/plugin_common\"",
          "",
          "---------------"
        ],
        "internal/repo/plugin_config/plugin_user_config_repo.go||internal/repo/plugin_config/plugin_user_config_repo.go": [
          "File: internal/repo/plugin_config/plugin_user_config_repo.go -> internal/repo/plugin_config/plugin_user_config_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "25:  \"xorm.io/xorm\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/plugin_common\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/pager\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/service/plugin_common\"",
          "",
          "---------------"
        ],
        "internal/repo/provider.go||internal/repo/provider.go": [
          "File: internal/repo/provider.go -> internal/repo/provider.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package repo",
          "22: import (",
          "55:  \"github.com/google/wire\"",
          "56: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "24:  \"github.com/apache/incubator-answer/internal/repo/activity\"",
          "25:  \"github.com/apache/incubator-answer/internal/repo/activity_common\"",
          "26:  \"github.com/apache/incubator-answer/internal/repo/answer\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/auth\"",
          "28:  \"github.com/apache/incubator-answer/internal/repo/badge\"",
          "29:  \"github.com/apache/incubator-answer/internal/repo/badge_award\"",
          "30:  \"github.com/apache/incubator-answer/internal/repo/badge_group\"",
          "31:  \"github.com/apache/incubator-answer/internal/repo/captcha\"",
          "32:  \"github.com/apache/incubator-answer/internal/repo/collection\"",
          "33:  \"github.com/apache/incubator-answer/internal/repo/comment\"",
          "34:  \"github.com/apache/incubator-answer/internal/repo/config\"",
          "35:  \"github.com/apache/incubator-answer/internal/repo/export\"",
          "36:  \"github.com/apache/incubator-answer/internal/repo/limit\"",
          "37:  \"github.com/apache/incubator-answer/internal/repo/meta\"",
          "38:  \"github.com/apache/incubator-answer/internal/repo/notification\"",
          "39:  \"github.com/apache/incubator-answer/internal/repo/plugin_config\"",
          "40:  \"github.com/apache/incubator-answer/internal/repo/question\"",
          "41:  \"github.com/apache/incubator-answer/internal/repo/rank\"",
          "42:  \"github.com/apache/incubator-answer/internal/repo/reason\"",
          "43:  \"github.com/apache/incubator-answer/internal/repo/report\"",
          "44:  \"github.com/apache/incubator-answer/internal/repo/review\"",
          "45:  \"github.com/apache/incubator-answer/internal/repo/revision\"",
          "46:  \"github.com/apache/incubator-answer/internal/repo/role\"",
          "47:  \"github.com/apache/incubator-answer/internal/repo/search_common\"",
          "48:  \"github.com/apache/incubator-answer/internal/repo/site_info\"",
          "49:  \"github.com/apache/incubator-answer/internal/repo/tag\"",
          "50:  \"github.com/apache/incubator-answer/internal/repo/tag_common\"",
          "51:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "52:  \"github.com/apache/incubator-answer/internal/repo/user\"",
          "53:  \"github.com/apache/incubator-answer/internal/repo/user_external_login\"",
          "54:  \"github.com/apache/incubator-answer/internal/repo/user_notification_config\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/data\"",
          "24:  \"github.com/apache/answer/internal/repo/activity\"",
          "25:  \"github.com/apache/answer/internal/repo/activity_common\"",
          "26:  \"github.com/apache/answer/internal/repo/answer\"",
          "27:  \"github.com/apache/answer/internal/repo/auth\"",
          "28:  \"github.com/apache/answer/internal/repo/badge\"",
          "29:  \"github.com/apache/answer/internal/repo/badge_award\"",
          "30:  \"github.com/apache/answer/internal/repo/badge_group\"",
          "31:  \"github.com/apache/answer/internal/repo/captcha\"",
          "32:  \"github.com/apache/answer/internal/repo/collection\"",
          "33:  \"github.com/apache/answer/internal/repo/comment\"",
          "34:  \"github.com/apache/answer/internal/repo/config\"",
          "35:  \"github.com/apache/answer/internal/repo/export\"",
          "36:  \"github.com/apache/answer/internal/repo/limit\"",
          "37:  \"github.com/apache/answer/internal/repo/meta\"",
          "38:  \"github.com/apache/answer/internal/repo/notification\"",
          "39:  \"github.com/apache/answer/internal/repo/plugin_config\"",
          "40:  \"github.com/apache/answer/internal/repo/question\"",
          "41:  \"github.com/apache/answer/internal/repo/rank\"",
          "42:  \"github.com/apache/answer/internal/repo/reason\"",
          "43:  \"github.com/apache/answer/internal/repo/report\"",
          "44:  \"github.com/apache/answer/internal/repo/review\"",
          "45:  \"github.com/apache/answer/internal/repo/revision\"",
          "46:  \"github.com/apache/answer/internal/repo/role\"",
          "47:  \"github.com/apache/answer/internal/repo/search_common\"",
          "48:  \"github.com/apache/answer/internal/repo/site_info\"",
          "49:  \"github.com/apache/answer/internal/repo/tag\"",
          "50:  \"github.com/apache/answer/internal/repo/tag_common\"",
          "51:  \"github.com/apache/answer/internal/repo/unique\"",
          "52:  \"github.com/apache/answer/internal/repo/user\"",
          "53:  \"github.com/apache/answer/internal/repo/user_external_login\"",
          "54:  \"github.com/apache/answer/internal/repo/user_notification_config\"",
          "",
          "---------------"
        ],
        "internal/repo/question/question_repo.go||internal/repo/question/question_repo.go": [
          "File: internal/repo/question/question_repo.go -> internal/repo/question/question_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  \"time\"",
          "28:  \"unicode\"",
          "42:  \"github.com/segmentfault/pacman/errors\"",
          "43:  \"github.com/segmentfault/pacman/log\"",
          "44:  \"xorm.io/builder\"",
          "",
          "[Removed Lines]",
          "30:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "35:  \"github.com/apache/incubator-answer/internal/entity\"",
          "36:  \"github.com/apache/incubator-answer/internal/schema\"",
          "37:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "39:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "40:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "41:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "30:  \"github.com/apache/answer/internal/base/constant\"",
          "31:  \"github.com/apache/answer/internal/base/data\"",
          "32:  \"github.com/apache/answer/internal/base/handler\"",
          "33:  \"github.com/apache/answer/internal/base/pager\"",
          "34:  \"github.com/apache/answer/internal/base/reason\"",
          "35:  \"github.com/apache/answer/internal/entity\"",
          "36:  \"github.com/apache/answer/internal/schema\"",
          "37:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "38:  \"github.com/apache/answer/internal/service/unique\"",
          "39:  \"github.com/apache/answer/pkg/htmltext\"",
          "40:  \"github.com/apache/answer/pkg/uid\"",
          "41:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/repo/rank/user_rank_repo.go||internal/repo/rank/user_rank_repo.go": [
          "File: internal/repo/rank/user_rank_repo.go -> internal/repo/rank/user_rank_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "32:  \"github.com/jinzhu/now\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "31:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/pager\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/service/config\"",
          "30:  \"github.com/apache/answer/internal/service/rank\"",
          "31:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/repo/reason/reason_repo.go||internal/repo/reason/reason_repo.go": [
          "File: internal/repo/reason/reason_repo.go -> internal/repo/reason/reason_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "31:  \"github.com/segmentfault/pacman/log\"",
          "32: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/reason_common\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/handler\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "29:  \"github.com/apache/answer/internal/service/config\"",
          "30:  \"github.com/apache/answer/internal/service/reason_common\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/auth_test.go||internal/repo/repo_test/auth_test.go": [
          "File: internal/repo/repo_test/auth_test.go -> internal/repo/repo_test/auth_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "28:  \"github.com/stretchr/testify/assert\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/auth\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/auth\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/captcha_test.go||internal/repo/repo_test/captcha_test.go": [
          "File: internal/repo/repo_test/captcha_test.go -> internal/repo/repo_test/captcha_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "27:  \"github.com/stretchr/testify/assert\"",
          "28: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/repo/captcha\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/repo/captcha\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/comment_repo_test.go||internal/repo/repo_test/comment_repo_test.go": [
          "File: internal/repo/repo_test/comment_repo_test.go -> internal/repo/repo_test/comment_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "31:  \"github.com/stretchr/testify/assert\"",
          "32: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/repo/comment\"",
          "29:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "30:  commentService \"github.com/apache/incubator-answer/internal/service/comment\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/pager\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/repo/comment\"",
          "29:  \"github.com/apache/answer/internal/repo/unique\"",
          "30:  commentService \"github.com/apache/answer/internal/service/comment\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/email_repo_test.go||internal/repo/repo_test/email_repo_test.go": [
          "File: internal/repo/repo_test/email_repo_test.go -> internal/repo/repo_test/email_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"testing\"",
          "25:  \"time\"",
          "28:  \"github.com/stretchr/testify/assert\"",
          "29: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/repo/export\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/repo/export\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/meta_repo_test.go||internal/repo/repo_test/meta_repo_test.go": [
          "File: internal/repo/repo_test/meta_repo_test.go -> internal/repo/repo_test/meta_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "28:  \"github.com/stretchr/testify/assert\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/meta\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/meta\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/notification_repo_test.go||internal/repo/repo_test/notification_repo_test.go": [
          "File: internal/repo/repo_test/notification_repo_test.go -> internal/repo/repo_test/notification_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "29:  \"github.com/stretchr/testify/assert\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/notification\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/notification\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/reason_repo_test.go||internal/repo/repo_test/reason_repo_test.go": [
          "File: internal/repo/repo_test/reason_repo_test.go -> internal/repo/repo_test/reason_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "30:  \"github.com/stretchr/testify/assert\"",
          "31: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/repo/config\"",
          "27:  serviceconfig \"github.com/apache/incubator-answer/internal/service/config\"",
          "29:  \"github.com/apache/incubator-answer/internal/repo/reason\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/repo/config\"",
          "27:  serviceconfig \"github.com/apache/answer/internal/service/config\"",
          "29:  \"github.com/apache/answer/internal/repo/reason\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/recommend_test.go||internal/repo/repo_test/recommend_test.go": [
          "File: internal/repo/repo_test/recommend_test.go -> internal/repo/repo_test/recommend_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "36:  \"github.com/stretchr/testify/assert\"",
          "37: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/activity\"",
          "28:  \"github.com/apache/incubator-answer/internal/repo/activity_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/repo/config\"",
          "30:  \"github.com/apache/incubator-answer/internal/repo/question\"",
          "31:  \"github.com/apache/incubator-answer/internal/repo/tag\"",
          "32:  \"github.com/apache/incubator-answer/internal/repo/tag_common\"",
          "33:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "34:  \"github.com/apache/incubator-answer/internal/repo/user\"",
          "35:  config2 \"github.com/apache/incubator-answer/internal/service/config\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/activity\"",
          "28:  \"github.com/apache/answer/internal/repo/activity_common\"",
          "29:  \"github.com/apache/answer/internal/repo/config\"",
          "30:  \"github.com/apache/answer/internal/repo/question\"",
          "31:  \"github.com/apache/answer/internal/repo/tag\"",
          "32:  \"github.com/apache/answer/internal/repo/tag_common\"",
          "33:  \"github.com/apache/answer/internal/repo/unique\"",
          "34:  \"github.com/apache/answer/internal/repo/user\"",
          "35:  config2 \"github.com/apache/answer/internal/service/config\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/repo_main_test.go||internal/repo/repo_test/repo_main_test.go": [
          "File: internal/repo/repo_test/repo_main_test.go -> internal/repo/repo_test/repo_main_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  \"testing\"",
          "29:  \"time\"",
          "33:  \"github.com/ory/dockertest/v3\"",
          "34:  \"github.com/ory/dockertest/v3/docker\"",
          "35:  \"github.com/segmentfault/pacman/cache\"",
          "",
          "[Removed Lines]",
          "31:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "32:  \"github.com/apache/incubator-answer/internal/migrations\"",
          "",
          "[Added Lines]",
          "31:  \"github.com/apache/answer/internal/base/data\"",
          "32:  \"github.com/apache/answer/internal/migrations\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/revision_repo_test.go||internal/repo/repo_test/revision_repo_test.go": [
          "File: internal/repo/repo_test/revision_repo_test.go -> internal/repo/repo_test/revision_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"testing\"",
          "31:  \"github.com/stretchr/testify/assert\"",
          "32: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/repo/question\"",
          "29:  \"github.com/apache/incubator-answer/internal/repo/revision\"",
          "30:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/repo/question\"",
          "29:  \"github.com/apache/answer/internal/repo/revision\"",
          "30:  \"github.com/apache/answer/internal/repo/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/siteinfo_repo_test.go||internal/repo/repo_test/siteinfo_repo_test.go": [
          "File: internal/repo/repo_test/siteinfo_repo_test.go -> internal/repo/repo_test/siteinfo_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "28:  \"github.com/stretchr/testify/assert\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/site_info\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/site_info\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/tag_rel_repo_test.go||internal/repo/repo_test/tag_rel_repo_test.go": [
          "File: internal/repo/repo_test/tag_rel_repo_test.go -> internal/repo/repo_test/tag_rel_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"sync\"",
          "26:  \"testing\"",
          "32:  \"github.com/stretchr/testify/assert\"",
          "33: )",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/repo/tag\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/repo/unique\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/repo/tag\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/tag_repo_test.go||internal/repo/repo_test/tag_repo_test.go": [
          "File: internal/repo/repo_test/tag_repo_test.go -> internal/repo/repo_test/tag_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"sync\"",
          "27:  \"testing\"",
          "34:  \"github.com/stretchr/testify/assert\"",
          "35: )",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/repo/tag\"",
          "31:  \"github.com/apache/incubator-answer/internal/repo/tag_common\"",
          "32:  \"github.com/apache/incubator-answer/internal/repo/unique\"",
          "33:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/repo/tag\"",
          "31:  \"github.com/apache/answer/internal/repo/tag_common\"",
          "32:  \"github.com/apache/answer/internal/repo/unique\"",
          "33:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/user_backyard_repo_test.go||internal/repo/repo_test/user_backyard_repo_test.go": [
          "File: internal/repo/repo_test/user_backyard_repo_test.go -> internal/repo/repo_test/user_backyard_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "29:  \"github.com/stretchr/testify/assert\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/auth\"",
          "28:  \"github.com/apache/incubator-answer/internal/repo/user\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/auth\"",
          "28:  \"github.com/apache/answer/internal/repo/user\"",
          "",
          "---------------"
        ],
        "internal/repo/repo_test/user_repo_test.go||internal/repo/repo_test/user_repo_test.go": [
          "File: internal/repo/repo_test/user_repo_test.go -> internal/repo/repo_test/user_repo_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "28:  \"github.com/stretchr/testify/assert\"",
          "29: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/user\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/repo/user\"",
          "",
          "---------------"
        ],
        "internal/repo/report/report_repo.go||internal/repo/report/report_repo.go": [
          "File: internal/repo/report/report_repo.go -> internal/repo/report/report_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/report_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/pager\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/report_common\"",
          "29:  \"github.com/apache/answer/internal/base/data\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/review/review_repo.go||internal/repo/review/review_repo.go": [
          "File: internal/repo/review/review_repo.go -> internal/repo/review/review_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "30:  \"github.com/segmentfault/pacman/errors\"",
          "31: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/pager\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/service/review\"",
          "",
          "---------------"
        ],
        "internal/repo/revision/revision_repo.go||internal/repo/revision/revision_repo.go": [
          "File: internal/repo/revision/revision_repo.go -> internal/repo/revision/revision_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "35:  \"xorm.io/builder\"",
          "36:  \"xorm.io/xorm\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/revision\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "32:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "33:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/base/data\"",
          "27:  \"github.com/apache/answer/internal/base/pager\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/service/revision\"",
          "31:  \"github.com/apache/answer/internal/service/unique\"",
          "32:  \"github.com/apache/answer/pkg/converter\"",
          "33:  \"github.com/apache/answer/pkg/obj\"",
          "",
          "---------------"
        ],
        "internal/repo/role/power_repo.go||internal/repo/role/power_repo.go": [
          "File: internal/repo/role/power_repo.go -> internal/repo/role/power_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/role\"",
          "",
          "---------------"
        ],
        "internal/repo/role/role_power_rel_repo.go||internal/repo/role/role_power_rel_repo.go": [
          "File: internal/repo/role/role_power_rel_repo.go -> internal/repo/role/role_power_rel_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "28:  \"github.com/segmentfault/pacman/errors\"",
          "29:  \"xorm.io/builder\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/service/role\"",
          "",
          "---------------"
        ],
        "internal/repo/role/role_repo.go||internal/repo/role/role_repo.go": [
          "File: internal/repo/role/role_repo.go -> internal/repo/role/role_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  service \"github.com/apache/incubator-answer/internal/service/role\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  service \"github.com/apache/answer/internal/service/role\"",
          "",
          "---------------"
        ],
        "internal/repo/role/user_role_rel_repo.go||internal/repo/role/user_role_rel_repo.go": [
          "File: internal/repo/role/user_role_rel_repo.go -> internal/repo/role/user_role_rel_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30:  \"xorm.io/builder\"",
          "31:  \"xorm.io/xorm\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/role\"",
          "",
          "---------------"
        ],
        "internal/repo/search_common/search_repo.go||internal/repo/search_common/search_repo.go": [
          "File: internal/repo/search_common/search_repo.go -> internal/repo/search_common/search_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"strings\"",
          "27:  \"time\"",
          "45:  \"github.com/segmentfault/pacman/errors\"",
          "46:  \"xorm.io/builder\"",
          "47: )",
          "",
          "[Removed Lines]",
          "29:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "30:  \"github.com/apache/incubator-answer/plugin\"",
          "32:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "36:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "37:  \"github.com/apache/incubator-answer/internal/entity\"",
          "38:  \"github.com/apache/incubator-answer/internal/schema\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/search_common\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "41:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "42:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "43:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "44:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "29:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "30:  \"github.com/apache/answer/plugin\"",
          "32:  \"github.com/apache/answer/pkg/htmltext\"",
          "34:  \"github.com/apache/answer/internal/base/data\"",
          "35:  \"github.com/apache/answer/internal/base/handler\"",
          "36:  \"github.com/apache/answer/internal/base/reason\"",
          "37:  \"github.com/apache/answer/internal/entity\"",
          "38:  \"github.com/apache/answer/internal/schema\"",
          "39:  \"github.com/apache/answer/internal/service/search_common\"",
          "40:  \"github.com/apache/answer/internal/service/unique\"",
          "41:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "42:  \"github.com/apache/answer/pkg/converter\"",
          "43:  \"github.com/apache/answer/pkg/obj\"",
          "44:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/repo/search_sync/search_sync.go||internal/repo/search_sync/search_sync.go": [
          "File: internal/repo/search_sync/search_sync.go -> internal/repo/search_sync/search_sync.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "30:  \"github.com/segmentfault/pacman/log\"",
          "31: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "29:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/pkg/uid\"",
          "29:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/repo/site_info/siteinfo_repo.go||internal/repo/site_info/siteinfo_repo.go": [
          "File: internal/repo/site_info/siteinfo_repo.go -> internal/repo/site_info/siteinfo_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32:  \"github.com/segmentfault/pacman/log\"",
          "33:  \"xorm.io/builder\"",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "",
          "---------------"
        ],
        "internal/repo/tag/tag_rel_repo.go||internal/repo/tag/tag_rel_repo.go": [
          "File: internal/repo/tag/tag_rel_repo.go -> internal/repo/tag/tag_rel_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "32:  \"github.com/segmentfault/pacman/errors\"",
          "33: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "31:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "30:  \"github.com/apache/answer/internal/service/unique\"",
          "31:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/repo/tag/tag_repo.go||internal/repo/tag/tag_repo.go": [
          "File: internal/repo/tag/tag_repo.go -> internal/repo/tag/tag_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32:  \"xorm.io/builder\"",
          "33: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "30:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/tag_common\"",
          "29:  \"github.com/apache/answer/internal/service/unique\"",
          "30:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/repo/tag_common/tag_common_repo.go||internal/repo/tag_common/tag_common_repo.go": [
          "File: internal/repo/tag_common/tag_common_repo.go -> internal/repo/tag_common/tag_common_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"strconv\"",
          "26:  \"strings\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "35:  \"xorm.io/builder\"",
          "36: )",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/base/data\"",
          "29:  \"github.com/apache/answer/internal/base/pager\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "33:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/unique/uniqid_repo.go||internal/repo/unique/uniqid_repo.go": [
          "File: internal/repo/unique/uniqid_repo.go -> internal/repo/unique/uniqid_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "31:  \"github.com/segmentfault/pacman/errors\"",
          "32: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/unique\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/service/unique\"",
          "",
          "---------------"
        ],
        "internal/repo/user/user_backyard_repo.go||internal/repo/user/user_backyard_repo.go": [
          "File: internal/repo/user/user_backyard_repo.go -> internal/repo/user/user_backyard_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  \"xorm.io/builder\"",
          "35:  \"github.com/segmentfault/pacman/errors\"",
          "36:  \"github.com/segmentfault/pacman/log\"",
          "37: )",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/user_admin\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/internal/base/data\"",
          "30:  \"github.com/apache/answer/internal/base/pager\"",
          "31:  \"github.com/apache/answer/internal/base/reason\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/service/auth\"",
          "34:  \"github.com/apache/answer/internal/service/user_admin\"",
          "",
          "---------------"
        ],
        "internal/repo/user/user_repo.go||internal/repo/user/user_repo.go": [
          "File: internal/repo/user/user_repo.go -> internal/repo/user/user_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"strings\"",
          "25:  \"time\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "35:  \"github.com/segmentfault/pacman/log\"",
          "36:  \"xorm.io/xorm\"",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/schema\"",
          "31:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "32:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "33:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/schema\"",
          "31:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "32:  \"github.com/apache/answer/pkg/converter\"",
          "33:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/repo/user_external_login/user_external_login_repo.go||internal/repo/user_external_login/user_external_login_repo.go": [
          "File: internal/repo/user_external_login/user_external_login_repo.go -> internal/repo/user_external_login/user_external_login_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "32:  \"github.com/segmentfault/pacman/errors\"",
          "33: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "30:  \"github.com/apache/incubator-answer/internal/schema\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "30:  \"github.com/apache/answer/internal/schema\"",
          "31:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "",
          "---------------"
        ],
        "internal/repo/user_notification_config/user_notification_config_repo.go||internal/repo/user_notification_config/user_notification_config_repo.go": [
          "File: internal/repo/user_notification_config/user_notification_config_repo.go -> internal/repo/user_notification_config/user_notification_config_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/user_notification_config\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/user_notification_config\"",
          "",
          "---------------"
        ],
        "internal/router/answer_api_router.go||internal/router/answer_api_router.go": [
          "File: internal/router/answer_api_router.go -> internal/router/answer_api_router.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package router",
          "22: import (",
          "26:  \"github.com/gin-gonic/gin\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "24:  \"github.com/apache/incubator-answer/internal/controller\"",
          "25:  \"github.com/apache/incubator-answer/internal/controller_admin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/middleware\"",
          "24:  \"github.com/apache/answer/internal/controller\"",
          "25:  \"github.com/apache/answer/internal/controller_admin\"",
          "",
          "---------------"
        ],
        "internal/router/plugin_api_router.go||internal/router/plugin_api_router.go": [
          "File: internal/router/plugin_api_router.go -> internal/router/plugin_api_router.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package router",
          "22: import (",
          "24:  \"github.com/gin-gonic/gin\"",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/controller\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/controller\"",
          "",
          "---------------"
        ],
        "internal/router/static_router.go||internal/router/static_router.go": [
          "File: internal/router/static_router.go -> internal/router/static_router.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package router",
          "22: import (",
          "25:  \"github.com/gin-gonic/gin\"",
          "26:  \"path/filepath\"",
          "27:  \"strings\"",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/internal/service/service_config\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/internal/service/service_config\"",
          "",
          "---------------"
        ],
        "internal/router/swagger_router.go||internal/router/swagger_router.go": [
          "File: internal/router/swagger_router.go -> internal/router/swagger_router.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"fmt\"",
          "26:  \"github.com/gin-gonic/gin\"",
          "27:  swaggerfiles \"github.com/swaggo/files\"",
          "28:  ginSwagger \"github.com/swaggo/gin-swagger\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/docs\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/docs\"",
          "",
          "---------------"
        ],
        "internal/router/template_router.go||internal/router/template_router.go": [
          "File: internal/router/template_router.go -> internal/router/template_router.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package router",
          "22: import (",
          "27:  \"github.com/gin-gonic/gin\"",
          "28: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/middleware\"",
          "24:  \"github.com/apache/incubator-answer/internal/controller\"",
          "25:  templaterender \"github.com/apache/incubator-answer/internal/controller/template_render\"",
          "26:  \"github.com/apache/incubator-answer/internal/controller_admin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/middleware\"",
          "24:  \"github.com/apache/answer/internal/controller\"",
          "25:  templaterender \"github.com/apache/answer/internal/controller/template_render\"",
          "26:  \"github.com/apache/answer/internal/controller_admin\"",
          "",
          "---------------"
        ],
        "internal/router/ui.go||internal/router/ui.go": [
          "File: internal/router/ui.go -> internal/router/ui.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"embed\"",
          "24:  \"fmt\"",
          "26:  \"io/fs\"",
          "27:  \"net/http\"",
          "28:  \"os\"",
          "29:  \"strings\"",
          "35:  \"github.com/gin-gonic/gin\"",
          "36:  \"github.com/segmentfault/pacman/log\"",
          "37: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/plugin\"",
          "31:  \"github.com/apache/incubator-answer/internal/controller\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "33:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "34:  \"github.com/apache/incubator-answer/ui\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/plugin\"",
          "31:  \"github.com/apache/answer/internal/controller\"",
          "32:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "33:  \"github.com/apache/answer/pkg/htmltext\"",
          "34:  \"github.com/apache/answer/ui\"",
          "",
          "---------------"
        ],
        "internal/schema/activity.go||internal/schema/activity.go": [
          "File: internal/schema/activity.go -> internal/schema/activity.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "25: type ActivityMsg struct {",
          "",
          "[Removed Lines]",
          "22: import \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Added Lines]",
          "22: import \"github.com/apache/answer/internal/base/constant\"",
          "",
          "---------------"
        ],
        "internal/schema/answer_schema.go||internal/schema/answer_schema.go": [
          "File: internal/schema/answer_schema.go -> internal/schema/answer_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "24:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/validator\"",
          "24:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/schema/backyard_user_schema.go||internal/schema/backyard_user_schema.go": [
          "File: internal/schema/backyard_user_schema.go -> internal/schema/backyard_user_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30:  \"strings\"",
          "31: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/base/translator\"",
          "28:  \"github.com/apache/answer/internal/base/validator\"",
          "",
          "---------------"
        ],
        "internal/schema/badge_schema.go||internal/schema/badge_schema.go": [
          "File: internal/schema/badge_schema.go -> internal/schema/badge_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "24: const (",
          "25:  BadgeStatusActive   BadgeStatus = \"active\"",
          "",
          "[Removed Lines]",
          "22: import \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "22: import \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/schema/comment_schema.go||internal/schema/comment_schema.go": [
          "File: internal/schema/comment_schema.go -> internal/schema/comment_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "26:  \"github.com/jinzhu/copier\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "25:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/validator\"",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "25:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/schema/email_template.go||internal/schema/email_template.go": [
          "File: internal/schema/email_template.go -> internal/schema/email_template.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "25: )",
          "27: const (",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "",
          "---------------"
        ],
        "internal/schema/event_schema.go||internal/schema/event_schema.go": [
          "File: internal/schema/event_schema.go -> internal/schema/event_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/schema/new_question_queue_schema.go||internal/schema/new_question_queue_schema.go": [
          "File: internal/schema/new_question_queue_schema.go -> internal/schema/new_question_queue_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "25: )",
          "27: type ExternalNotificationMsg struct {",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/entity\"",
          "24:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/entity\"",
          "24:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/schema/notification_schema.go||internal/schema/notification_schema.go": [
          "File: internal/schema/notification_schema.go -> internal/schema/notification_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "25:  \"sort\"",
          "26: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/schema/permission.go||internal/schema/permission.go": [
          "File: internal/schema/permission.go -> internal/schema/permission.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"strings\"",
          "28:  \"github.com/segmentfault/pacman/i18n\"",
          "29: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/base/validator\"",
          "",
          "---------------"
        ],
        "internal/schema/plugin_admin_schema.go||internal/schema/plugin_admin_schema.go": [
          "File: internal/schema/plugin_admin_schema.go -> internal/schema/plugin_admin_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "24:  \"github.com/gin-gonic/gin\"",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/schema/plugin_user_schema.go||internal/schema/plugin_user_schema.go": [
          "File: internal/schema/plugin_user_schema.go -> internal/schema/plugin_user_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "24:  \"github.com/gin-gonic/gin\"",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/schema/question_schema.go||internal/schema/question_schema.go": [
          "File: internal/schema/question_schema.go -> internal/schema/question_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"strings\"",
          "24:  \"time\"",
          "30: )",
          "32: const (",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "29:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/validator\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/pkg/converter\"",
          "29:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/schema/reason_schema.go||internal/schema/reason_schema.go": [
          "File: internal/schema/reason_schema.go -> internal/schema/reason_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "24:  \"github.com/segmentfault/pacman/i18n\"",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/translator\"",
          "",
          "---------------"
        ],
        "internal/schema/review_schema.go||internal/schema/review_schema.go": [
          "File: internal/schema/review_schema.go -> internal/schema/review_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "24:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/validator\"",
          "24:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/schema/revision_schema.go||internal/schema/revision_schema.go": [
          "File: internal/schema/revision_schema.go -> internal/schema/revision_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"time\"",
          "26: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "",
          "---------------"
        ],
        "internal/schema/search_schema.go||internal/schema/search_schema.go": [
          "File: internal/schema/search_schema.go -> internal/schema/search_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"regexp\"",
          "24:  \"strings\"",
          "29: )",
          "31: type SearchDTO struct {",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "28:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/validator\"",
          "28:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/schema/simple_obj_info_schema.go||internal/schema/simple_obj_info_schema.go": [
          "File: internal/schema/simple_obj_info_schema.go -> internal/schema/simple_obj_info_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package schema",
          "22: import (",
          "25: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/schema/siteinfo_schema.go||internal/schema/siteinfo_schema.go": [
          "File: internal/schema/siteinfo_schema.go -> internal/schema/siteinfo_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"net/url\"",
          "27:  \"strings\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "35: )",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/internal/base/constant\"",
          "30:  \"github.com/apache/answer/internal/base/handler\"",
          "31:  \"github.com/apache/answer/internal/base/reason\"",
          "32:  \"github.com/apache/answer/internal/base/translator\"",
          "33:  \"github.com/apache/answer/internal/base/validator\"",
          "",
          "---------------"
        ],
        "internal/schema/tag_schema.go||internal/schema/tag_schema.go": [
          "File: internal/schema/tag_schema.go -> internal/schema/tag_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"strings\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "26:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/validator\"",
          "26:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/schema/user_notification_schema.go||internal/schema/user_notification_schema.go": [
          "File: internal/schema/user_notification_schema.go -> internal/schema/user_notification_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "26: )",
          "28: type NotificationChannelConfig struct {",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/schema/user_schema.go||internal/schema/user_schema.go": [
          "File: internal/schema/user_schema.go -> internal/schema/user_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "27:  \"github.com/segmentfault/pacman/errors\"",
          "34:  \"github.com/jinzhu/copier\"",
          "35: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "33:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "29:  \"github.com/apache/answer/internal/base/constant\"",
          "30:  \"github.com/apache/answer/internal/base/validator\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/pkg/checker\"",
          "33:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/service/action/captcha_service.go||internal/service/action/captcha_service.go": [
          "File: internal/service/action/captcha_service.go -> internal/service/action/captcha_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/log\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/pkg/token\"",
          "28:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/pkg/token\"",
          "28:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/action/captcha_strategy.go||internal/service/action/captcha_strategy.go": [
          "File: internal/service/action/captcha_strategy.go -> internal/service/action/captcha_strategy.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"time\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/plugin\"",
          "29:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/plugin\"",
          "29:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/activity/activity.go||internal/service/activity/activity.go": [
          "File: internal/service/activity/activity.go -> internal/service/activity/activity.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"fmt\"",
          "26:  \"strings\"",
          "44:  \"github.com/segmentfault/pacman/log\"",
          "45: )",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/meta_common\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "33:  \"github.com/apache/incubator-answer/internal/entity\"",
          "34:  \"github.com/apache/incubator-answer/internal/schema\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "40:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "41:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "42:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "43:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/answer/internal/service/meta_common\"",
          "31:  \"github.com/apache/answer/internal/base/constant\"",
          "32:  \"github.com/apache/answer/internal/base/handler\"",
          "33:  \"github.com/apache/answer/internal/entity\"",
          "34:  \"github.com/apache/answer/internal/schema\"",
          "35:  \"github.com/apache/answer/internal/service/comment_common\"",
          "36:  \"github.com/apache/answer/internal/service/config\"",
          "37:  \"github.com/apache/answer/internal/service/object_info\"",
          "38:  \"github.com/apache/answer/internal/service/revision_common\"",
          "39:  \"github.com/apache/answer/internal/service/tag_common\"",
          "40:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "41:  \"github.com/apache/answer/pkg/converter\"",
          "42:  \"github.com/apache/answer/pkg/obj\"",
          "43:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/activity/answer_activity_service.go||internal/service/activity/answer_activity_service.go": [
          "File: internal/service/activity/answer_activity_service.go -> internal/service/activity/answer_activity_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/schema\"",
          "25:  \"github.com/apache/incubator-answer/internal/service/activity_type\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/schema\"",
          "25:  \"github.com/apache/answer/internal/service/activity_type\"",
          "26:  \"github.com/apache/answer/internal/service/config\"",
          "",
          "---------------"
        ],
        "internal/service/activity/review_active.go||internal/service/activity/review_active.go": [
          "File: internal/service/activity/review_active.go -> internal/service/activity/review_active.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/activity_common/activity.go||internal/service/activity_common/activity.go": [
          "File: internal/service/activity_common/activity.go -> internal/service/activity_common/activity.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"time\"",
          "31:  \"github.com/segmentfault/pacman/log\"",
          "32:  \"xorm.io/xorm\"",
          "33: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "29:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "30:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "29:  \"github.com/apache/answer/pkg/converter\"",
          "30:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/activity_queue/activity_queue.go||internal/service/activity_queue/activity_queue.go": [
          "File: internal/service/activity_queue/activity_queue.go -> internal/service/activity_queue/activity_queue.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/answer_common/answer.go||internal/service/answer_common/answer.go": [
          "File: internal/service/answer_common/answer.go -> internal/service/answer_common/answer.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "30: )",
          "32: type AnswerRepo interface {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "29:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/pkg/htmltext\"",
          "29:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/auth/auth.go||internal/service/auth/auth.go": [
          "File: internal/service/auth/auth.go -> internal/service/auth/auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "28: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/pkg/token\"",
          "27:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/pkg/token\"",
          "27:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/badge/badge_award_service.go||internal/service/badge/badge_award_service.go": [
          "File: internal/service/badge/badge_award_service.go -> internal/service/badge/badge_award_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "34:  \"github.com/gin-gonic/gin\"",
          "35:  \"github.com/jinzhu/copier\"",
          "36:  \"github.com/segmentfault/pacman/errors\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "32:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "33:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/base/reason\"",
          "27:  \"github.com/apache/answer/internal/base/translator\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "31:  \"github.com/apache/answer/internal/service/object_info\"",
          "32:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "33:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/badge/badge_event_handler.go||internal/service/badge/badge_event_handler.go": [
          "File: internal/service/badge/badge_event_handler.go -> internal/service/badge/badge_event_handler.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "28:  \"github.com/segmentfault/pacman/log\"",
          "29: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/data\"",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/event_queue\"",
          "",
          "---------------"
        ],
        "internal/service/badge/badge_group_service.go||internal/service/badge/badge_group_service.go": [
          "File: internal/service/badge/badge_group_service.go -> internal/service/badge/badge_group_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "25: )",
          "27: type BadgeGroupRepo interface {",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/badge/badge_service.go||internal/service/badge/badge_service.go": [
          "File: internal/service/badge/badge_service.go -> internal/service/badge/badge_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "32:  \"github.com/gin-gonic/gin\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "30:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "31:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/handler\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "29:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "30:  \"github.com/apache/answer/pkg/converter\"",
          "31:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/collection/collection_group_service.go||internal/service/collection/collection_group_service.go": [
          "File: internal/service/collection/collection_group_service.go -> internal/service/collection/collection_group_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "28:  \"github.com/jinzhu/copier\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/collection/collection_service.go||internal/service/collection/collection_service.go": [
          "File: internal/service/collection/collection_service.go -> internal/service/collection/collection_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  collectioncommon \"github.com/apache/incubator-answer/internal/service/collection_common\"",
          "28:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  collectioncommon \"github.com/apache/answer/internal/service/collection_common\"",
          "28:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "",
          "---------------"
        ],
        "internal/service/collection_common/collection.go||internal/service/collection_common/collection.go": [
          "File: internal/service/collection_common/collection.go -> internal/service/collection_common/collection.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/comment/comment_service.go||internal/service/comment/comment_service.go": [
          "File: internal/service/comment/comment_service.go -> internal/service/comment/comment_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "25:  \"time\"",
          "43:  \"github.com/jinzhu/copier\"",
          "44:  \"github.com/segmentfault/pacman/errors\"",
          "45:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/schema\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "39:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "40:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "41:  \"github.com/apache/incubator-answer/pkg/token\"",
          "42:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/service/event_queue\"",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/base/pager\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/schema\"",
          "32:  \"github.com/apache/answer/internal/service/activity_common\"",
          "33:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "34:  \"github.com/apache/answer/internal/service/comment_common\"",
          "35:  \"github.com/apache/answer/internal/service/export\"",
          "36:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "37:  \"github.com/apache/answer/internal/service/object_info\"",
          "38:  \"github.com/apache/answer/internal/service/permission\"",
          "39:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "40:  \"github.com/apache/answer/pkg/htmltext\"",
          "41:  \"github.com/apache/answer/pkg/token\"",
          "42:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/comment_common/comment_service.go||internal/service/comment_common/comment_service.go": [
          "File: internal/service/comment_common/comment_service.go -> internal/service/comment_common/comment_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "28:  \"github.com/segmentfault/pacman/errors\"",
          "29: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/config/config_service.go||internal/service/config/config_service.go": [
          "File: internal/service/config/config_service.go -> internal/service/config/config_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "28: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/content/answer_service.go||internal/service/content/answer_service.go": [
          "File: internal/service/content/answer_service.go -> internal/service/content/answer_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"time\"",
          "50:  \"github.com/segmentfault/pacman/errors\"",
          "51:  \"github.com/segmentfault/pacman/log\"",
          "52: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "36:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "37:  collectioncommon \"github.com/apache/incubator-answer/internal/service/collection_common\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "41:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "42:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "44:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "45:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "46:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "47:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "48:  \"github.com/apache/incubator-answer/pkg/token\"",
          "49:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/service/event_queue\"",
          "29:  \"github.com/apache/answer/internal/base/constant\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/activity\"",
          "34:  \"github.com/apache/answer/internal/service/activity_common\"",
          "35:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "36:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "37:  collectioncommon \"github.com/apache/answer/internal/service/collection_common\"",
          "38:  \"github.com/apache/answer/internal/service/export\"",
          "39:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "40:  \"github.com/apache/answer/internal/service/permission\"",
          "41:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "42:  \"github.com/apache/answer/internal/service/review\"",
          "43:  \"github.com/apache/answer/internal/service/revision_common\"",
          "44:  \"github.com/apache/answer/internal/service/role\"",
          "45:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "46:  \"github.com/apache/answer/pkg/converter\"",
          "47:  \"github.com/apache/answer/pkg/htmltext\"",
          "48:  \"github.com/apache/answer/pkg/token\"",
          "49:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/content/question_hottest_service.go||internal/service/content/question_hottest_service.go": [
          "File: internal/service/content/question_hottest_service.go -> internal/service/content/question_hottest_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27:  \"math\"",
          "28:  \"time\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/content/question_service.go||internal/service/content/question_service.go": [
          "File: internal/service/content/question_service.go -> internal/service/content/question_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"strings\"",
          "26:  \"time\"",
          "62:  \"github.com/jinzhu/copier\"",
          "63:  \"github.com/segmentfault/pacman/errors\"",
          "64:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "36:  \"github.com/apache/incubator-answer/internal/entity\"",
          "37:  \"github.com/apache/incubator-answer/internal/schema\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "41:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "42:  collectioncommon \"github.com/apache/incubator-answer/internal/service/collection_common\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "44:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "45:  metacommon \"github.com/apache/incubator-answer/internal/service/meta_common\"",
          "46:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "47:  \"github.com/apache/incubator-answer/internal/service/notification\"",
          "48:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "49:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "50:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "51:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "52:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "53:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "54:  \"github.com/apache/incubator-answer/internal/service/tag\"",
          "55:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "56:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "57:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "58:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "59:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "60:  \"github.com/apache/incubator-answer/pkg/token\"",
          "61:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/service/event_queue\"",
          "30:  \"github.com/apache/answer/internal/base/constant\"",
          "31:  \"github.com/apache/answer/internal/base/handler\"",
          "32:  \"github.com/apache/answer/internal/base/pager\"",
          "33:  \"github.com/apache/answer/internal/base/reason\"",
          "34:  \"github.com/apache/answer/internal/base/translator\"",
          "35:  \"github.com/apache/answer/internal/base/validator\"",
          "36:  \"github.com/apache/answer/internal/entity\"",
          "37:  \"github.com/apache/answer/internal/schema\"",
          "38:  \"github.com/apache/answer/internal/service/activity\"",
          "39:  \"github.com/apache/answer/internal/service/activity_common\"",
          "40:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "41:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "42:  collectioncommon \"github.com/apache/answer/internal/service/collection_common\"",
          "43:  \"github.com/apache/answer/internal/service/config\"",
          "44:  \"github.com/apache/answer/internal/service/export\"",
          "45:  metacommon \"github.com/apache/answer/internal/service/meta_common\"",
          "46:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "47:  \"github.com/apache/answer/internal/service/notification\"",
          "48:  \"github.com/apache/answer/internal/service/permission\"",
          "49:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "50:  \"github.com/apache/answer/internal/service/review\"",
          "51:  \"github.com/apache/answer/internal/service/revision_common\"",
          "52:  \"github.com/apache/answer/internal/service/role\"",
          "53:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "54:  \"github.com/apache/answer/internal/service/tag\"",
          "55:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "56:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "57:  \"github.com/apache/answer/pkg/checker\"",
          "58:  \"github.com/apache/answer/pkg/converter\"",
          "59:  \"github.com/apache/answer/pkg/htmltext\"",
          "60:  \"github.com/apache/answer/pkg/token\"",
          "61:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/content/revision_service.go||internal/service/content/revision_service.go": [
          "File: internal/service/content/revision_service.go -> internal/service/content/revision_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"time\"",
          "50:  \"github.com/jinzhu/copier\"",
          "51:  \"github.com/segmentfault/pacman/errors\"",
          "52:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/schema\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "36:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "39:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/report_common\"",
          "41:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "42:  \"github.com/apache/incubator-answer/internal/service/revision\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "44:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "45:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "46:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "47:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "48:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "49:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/base/handler\"",
          "29:  \"github.com/apache/answer/internal/base/pager\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/base/translator\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/schema\"",
          "34:  \"github.com/apache/answer/internal/service/activity\"",
          "35:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "36:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "37:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "38:  \"github.com/apache/answer/internal/service/object_info\"",
          "39:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "40:  \"github.com/apache/answer/internal/service/report_common\"",
          "41:  \"github.com/apache/answer/internal/service/review\"",
          "42:  \"github.com/apache/answer/internal/service/revision\"",
          "43:  \"github.com/apache/answer/internal/service/tag_common\"",
          "44:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "45:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "46:  \"github.com/apache/answer/pkg/converter\"",
          "47:  \"github.com/apache/answer/pkg/htmltext\"",
          "48:  \"github.com/apache/answer/pkg/obj\"",
          "49:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/content/search_service.go||internal/service/content/search_service.go": [
          "File: internal/service/content/search_service.go -> internal/service/content/search_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29: )",
          "31: type SearchService struct {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/search_common\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/search_parser\"",
          "28:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/search_common\"",
          "27:  \"github.com/apache/answer/internal/service/search_parser\"",
          "28:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/content/user_service.go||internal/service/content/user_service.go": [
          "File: internal/service/content/user_service.go -> internal/service/content/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "28:  \"time\"",
          "50:  \"github.com/segmentfault/pacman/errors\"",
          "51:  \"github.com/segmentfault/pacman/log\"",
          "52:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "27:  \"github.com/apache/incubator-answer/pkg/token\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "31:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/user_notification_config\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "36:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "37:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "38:  \"github.com/apache/incubator-answer/internal/entity\"",
          "39:  \"github.com/apache/incubator-answer/internal/schema\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "41:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "42:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "44:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "45:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "46:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "47:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "48:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "49:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/service/event_queue\"",
          "27:  \"github.com/apache/answer/pkg/token\"",
          "30:  \"github.com/apache/answer/internal/base/constant\"",
          "31:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "32:  \"github.com/apache/answer/internal/service/user_notification_config\"",
          "34:  \"github.com/apache/answer/internal/base/handler\"",
          "35:  \"github.com/apache/answer/internal/base/reason\"",
          "36:  \"github.com/apache/answer/internal/base/translator\"",
          "37:  \"github.com/apache/answer/internal/base/validator\"",
          "38:  \"github.com/apache/answer/internal/entity\"",
          "39:  \"github.com/apache/answer/internal/schema\"",
          "40:  \"github.com/apache/answer/internal/service/activity\"",
          "41:  \"github.com/apache/answer/internal/service/activity_common\"",
          "42:  \"github.com/apache/answer/internal/service/auth\"",
          "43:  \"github.com/apache/answer/internal/service/export\"",
          "44:  \"github.com/apache/answer/internal/service/role\"",
          "45:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "46:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "47:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "48:  \"github.com/apache/answer/pkg/checker\"",
          "49:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/content/vote_service.go||internal/service/content/vote_service.go": [
          "File: internal/service/content/vote_service.go -> internal/service/content/vote_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "26:  \"strings\"",
          "40:  \"github.com/segmentfault/pacman/log\"",
          "46:  \"github.com/segmentfault/pacman/errors\"",
          "47: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "34:  \"github.com/apache/incubator-answer/internal/entity\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/activity_type\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "39:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "42:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "43:  \"github.com/apache/incubator-answer/internal/schema\"",
          "44:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "45:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/service/event_queue\"",
          "28:  \"github.com/apache/answer/internal/service/activity_common\"",
          "30:  \"github.com/apache/answer/internal/base/constant\"",
          "31:  \"github.com/apache/answer/internal/base/handler\"",
          "32:  \"github.com/apache/answer/internal/base/pager\"",
          "33:  \"github.com/apache/answer/internal/base/translator\"",
          "34:  \"github.com/apache/answer/internal/entity\"",
          "35:  \"github.com/apache/answer/internal/service/activity_type\"",
          "36:  \"github.com/apache/answer/internal/service/comment_common\"",
          "37:  \"github.com/apache/answer/internal/service/config\"",
          "38:  \"github.com/apache/answer/internal/service/object_info\"",
          "39:  \"github.com/apache/answer/pkg/htmltext\"",
          "42:  \"github.com/apache/answer/internal/base/reason\"",
          "43:  \"github.com/apache/answer/internal/schema\"",
          "44:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "45:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "",
          "---------------"
        ],
        "internal/service/dashboard/dashboard_service.go||internal/service/dashboard/dashboard_service.go": [
          "File: internal/service/dashboard/dashboard_service.go -> internal/service/dashboard/dashboard_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  \"net/url\"",
          "29:  \"time\"",
          "34:  \"xorm.io/xorm/schemas\"",
          "50:  \"github.com/segmentfault/pacman/log\"",
          "51: )",
          "",
          "[Removed Lines]",
          "31:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/revision\"",
          "33:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "36:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "37:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "38:  \"github.com/apache/incubator-answer/internal/schema\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "40:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "41:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "42:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "44:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "45:  \"github.com/apache/incubator-answer/internal/service/report_common\"",
          "46:  \"github.com/apache/incubator-answer/internal/service/service_config\"",
          "47:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "48:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "49:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "",
          "[Added Lines]",
          "31:  \"github.com/apache/answer/internal/service/review\"",
          "32:  \"github.com/apache/answer/internal/service/revision\"",
          "33:  \"github.com/apache/answer/pkg/converter\"",
          "36:  \"github.com/apache/answer/internal/base/constant\"",
          "37:  \"github.com/apache/answer/internal/base/data\"",
          "38:  \"github.com/apache/answer/internal/schema\"",
          "39:  \"github.com/apache/answer/internal/service/activity_common\"",
          "40:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "41:  \"github.com/apache/answer/internal/service/comment_common\"",
          "42:  \"github.com/apache/answer/internal/service/config\"",
          "43:  \"github.com/apache/answer/internal/service/export\"",
          "44:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "45:  \"github.com/apache/answer/internal/service/report_common\"",
          "46:  \"github.com/apache/answer/internal/service/service_config\"",
          "47:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "48:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "49:  \"github.com/apache/answer/pkg/dir\"",
          "",
          "---------------"
        ],
        "internal/service/event_queue/event_queue.go||internal/service/event_queue/event_queue.go": [
          "File: internal/service/event_queue/event_queue.go -> internal/service/event_queue/event_queue.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/export/email_service.go||internal/service/export/email_service.go": [
          "File: internal/service/export/email_service.go -> internal/service/export/email_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"crypto/tls\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "27:  \"mime\"",
          "28:  \"os\"",
          "29:  \"strings\"",
          "30:  \"time\"",
          "39:  \"github.com/segmentfault/pacman/errors\"",
          "40:  \"github.com/segmentfault/pacman/log\"",
          "41:  \"golang.org/x/net/context\"",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/pkg/display\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "36:  \"github.com/apache/incubator-answer/internal/schema\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/pkg/display\"",
          "32:  \"github.com/apache/answer/internal/base/constant\"",
          "33:  \"github.com/apache/answer/internal/base/handler\"",
          "34:  \"github.com/apache/answer/internal/base/reason\"",
          "35:  \"github.com/apache/answer/internal/base/translator\"",
          "36:  \"github.com/apache/answer/internal/schema\"",
          "37:  \"github.com/apache/answer/internal/service/config\"",
          "38:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "",
          "---------------"
        ],
        "internal/service/follow/follow_service.go||internal/service/follow/follow_service.go": [
          "File: internal/service/follow/follow_service.go -> internal/service/follow/follow_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29: )",
          "31: type FollowRepo interface {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "28:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  \"github.com/apache/answer/internal/service/activity_common\"",
          "28:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "",
          "---------------"
        ],
        "internal/service/importer/importer_service.go||internal/service/importer/importer_service.go": [
          "File: internal/service/importer/importer_service.go -> internal/service/importer/importer_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "36:  \"github.com/gin-gonic/gin\"",
          "37:  \"github.com/segmentfault/pacman/errors\"",
          "38:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "30:  \"github.com/apache/incubator-answer/internal/schema\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "34:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "35:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/base/translator\"",
          "29:  \"github.com/apache/answer/internal/base/validator\"",
          "30:  \"github.com/apache/answer/internal/schema\"",
          "31:  \"github.com/apache/answer/internal/service/content\"",
          "32:  \"github.com/apache/answer/internal/service/permission\"",
          "33:  \"github.com/apache/answer/internal/service/rank\"",
          "34:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "35:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/meta/meta_service.go||internal/service/meta/meta_service.go": [
          "File: internal/service/meta/meta_service.go -> internal/service/meta/meta_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"errors\"",
          "27:  \"strconv\"",
          "28:  \"strings\"",
          "41:  myErrors \"github.com/segmentfault/pacman/errors\"",
          "42: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "34:  \"github.com/apache/incubator-answer/internal/entity\"",
          "35:  \"github.com/apache/incubator-answer/internal/schema\"",
          "36:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "37:  metacommon \"github.com/apache/incubator-answer/internal/service/meta_common\"",
          "38:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "39:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "40:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/service/event_queue\"",
          "30:  \"github.com/apache/answer/internal/base/constant\"",
          "31:  \"github.com/apache/answer/internal/base/handler\"",
          "32:  \"github.com/apache/answer/internal/base/reason\"",
          "33:  \"github.com/apache/answer/internal/base/translator\"",
          "34:  \"github.com/apache/answer/internal/entity\"",
          "35:  \"github.com/apache/answer/internal/schema\"",
          "36:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "37:  metacommon \"github.com/apache/answer/internal/service/meta_common\"",
          "38:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "39:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "40:  \"github.com/apache/answer/pkg/obj\"",
          "",
          "---------------"
        ],
        "internal/service/meta_common/meta_common_service.go||internal/service/meta_common/meta_common_service.go": [
          "File: internal/service/meta_common/meta_common_service.go -> internal/service/meta_common/meta_common_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "27:  myErrors \"github.com/segmentfault/pacman/errors\"",
          "28: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/mock/siteinfo_repo_mock.go||internal/service/mock/siteinfo_repo_mock.go": [
          "File: internal/service/mock/siteinfo_repo_mock.go -> internal/service/mock/siteinfo_repo_mock.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  context \"context\"",
          "33:  reflect \"reflect\"",
          "37:  gomock \"go.uber.org/mock/gomock\"",
          "38: )",
          "",
          "[Removed Lines]",
          "35:  entity \"github.com/apache/incubator-answer/internal/entity\"",
          "36:  schema \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "35:  entity \"github.com/apache/answer/internal/entity\"",
          "36:  schema \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/notice_queue/external_notification_queue.go||internal/service/notice_queue/external_notification_queue.go": [
          "File: internal/service/notice_queue/external_notification_queue.go -> internal/service/notice_queue/external_notification_queue.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/notice_queue/notice_queue.go||internal/service/notice_queue/notice_queue.go": [
          "File: internal/service/notice_queue/notice_queue.go -> internal/service/notice_queue/notice_queue.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/notification/external_notification.go||internal/service/notification/external_notification.go": [
          "File: internal/service/notification/external_notification.go -> internal/service/notification/external_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "35:  \"github.com/segmentfault/pacman/log\"",
          "36: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "32:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/user_notification_config\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/data\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/internal/service/activity_common\"",
          "29:  \"github.com/apache/answer/internal/service/export\"",
          "30:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "31:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "32:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "33:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "34:  \"github.com/apache/answer/internal/service/user_notification_config\"",
          "",
          "---------------"
        ],
        "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go": [
          "File: internal/service/notification/invite_answer_notification.go -> internal/service/notification/invite_answer_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/i18n\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"time\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go": [
          "File: internal/service/notification/new_answer_notification.go -> internal/service/notification/new_answer_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/i18n\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"time\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go": [
          "File: internal/service/notification/new_comment_notification.go -> internal/service/notification/new_comment_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"github.com/segmentfault/pacman/i18n\"",
          "27:  \"github.com/segmentfault/pacman/log\"",
          "28:  \"time\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go": [
          "File: internal/service/notification/new_question_notification.go -> internal/service/notification/new_question_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"strings\"",
          "25:  \"time\"",
          "33:  \"github.com/jinzhu/copier\"",
          "34:  \"github.com/segmentfault/pacman/i18n\"",
          "35:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/pkg/display\"",
          "31:  \"github.com/apache/incubator-answer/pkg/token\"",
          "32:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/base/translator\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/pkg/display\"",
          "31:  \"github.com/apache/answer/pkg/token\"",
          "32:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/notification/notification_service.go||internal/service/notification/notification_service.go": [
          "File: internal/service/notification/notification_service.go -> internal/service/notification/notification_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "41:  \"github.com/jinzhu/copier\"",
          "42:  \"github.com/segmentfault/pacman/log\"",
          "43: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "34:  notficationcommon \"github.com/apache/incubator-answer/internal/service/notification_common\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/report_common\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "38:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "39:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "40:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/data\"",
          "28:  \"github.com/apache/answer/internal/base/handler\"",
          "29:  \"github.com/apache/answer/internal/base/pager\"",
          "30:  \"github.com/apache/answer/internal/base/translator\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/badge\"",
          "34:  notficationcommon \"github.com/apache/answer/internal/service/notification_common\"",
          "35:  \"github.com/apache/answer/internal/service/report_common\"",
          "36:  \"github.com/apache/answer/internal/service/review\"",
          "37:  \"github.com/apache/answer/internal/service/revision_common\"",
          "38:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "39:  \"github.com/apache/answer/pkg/converter\"",
          "40:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "internal/service/notification_common/notification.go||internal/service/notification_common/notification.go": [
          "File: internal/service/notification_common/notification.go -> internal/service/notification_common/notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"fmt\"",
          "25:  \"time\"",
          "43:  \"github.com/goccy/go-json\"",
          "44:  \"github.com/jinzhu/copier\"",
          "45:  \"github.com/segmentfault/pacman/errors\"",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "30:  \"github.com/apache/incubator-answer/pkg/display\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "35:  \"github.com/apache/incubator-answer/internal/entity\"",
          "36:  \"github.com/apache/incubator-answer/internal/schema\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "40:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "41:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "42:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/translator\"",
          "28:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "29:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "30:  \"github.com/apache/answer/pkg/display\"",
          "32:  \"github.com/apache/answer/internal/base/constant\"",
          "33:  \"github.com/apache/answer/internal/base/data\"",
          "34:  \"github.com/apache/answer/internal/base/reason\"",
          "35:  \"github.com/apache/answer/internal/entity\"",
          "36:  \"github.com/apache/answer/internal/schema\"",
          "37:  \"github.com/apache/answer/internal/service/activity_common\"",
          "38:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "39:  \"github.com/apache/answer/internal/service/object_info\"",
          "40:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "41:  \"github.com/apache/answer/pkg/uid\"",
          "42:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/object_info/object_info.go||internal/service/object_info/object_info.go": [
          "File: internal/service/object_info/object_info.go -> internal/service/object_info/object_info.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "33:  \"github.com/segmentfault/pacman/errors\"",
          "34: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "29:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "30:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "31:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "32:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "28:  \"github.com/apache/answer/internal/service/comment_common\"",
          "29:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "30:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "31:  \"github.com/apache/answer/pkg/checker\"",
          "32:  \"github.com/apache/answer/pkg/obj\"",
          "",
          "---------------"
        ],
        "internal/service/permission/answer_permission.go||internal/service/permission/answer_permission.go": [
          "File: internal/service/permission/answer_permission.go -> internal/service/permission/answer_permission.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/translator\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/permission/comment_permission.go||internal/service/permission/comment_permission.go": [
          "File: internal/service/permission/comment_permission.go -> internal/service/permission/comment_permission.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"time\"",
          "30: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/handler\"",
          "28:  \"github.com/apache/answer/internal/base/translator\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/permission/question_permission.go||internal/service/permission/question_permission.go": [
          "File: internal/service/permission/question_permission.go -> internal/service/permission/question_permission.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/translator\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/permission/tag_permission.go||internal/service/permission/tag_permission.go": [
          "File: internal/service/permission/tag_permission.go -> internal/service/permission/tag_permission.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/translator\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/plugin_common/plugin_common_service.go||internal/service/plugin_common/plugin_common_service.go": [
          "File: internal/service/plugin_common/plugin_common_service.go -> internal/service/plugin_common/plugin_common_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30:  \"github.com/segmentfault/pacman/log\"",
          "39: )",
          "41: type PluginConfigRepo interface {",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "27:  \"github.com/apache/incubator-answer/internal/repo/search_sync\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "34:  \"github.com/apache/incubator-answer/internal/entity\"",
          "35:  \"github.com/apache/incubator-answer/internal/schema\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/importer\"",
          "38:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/data\"",
          "27:  \"github.com/apache/answer/internal/repo/search_sync\"",
          "32:  \"github.com/apache/answer/internal/base/constant\"",
          "33:  \"github.com/apache/answer/internal/base/reason\"",
          "34:  \"github.com/apache/answer/internal/entity\"",
          "35:  \"github.com/apache/answer/internal/schema\"",
          "36:  \"github.com/apache/answer/internal/service/config\"",
          "37:  \"github.com/apache/answer/internal/service/importer\"",
          "38:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/provider.go||internal/service/provider.go": [
          "File: internal/service/provider.go -> internal/service/provider.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package service",
          "22: import (",
          "66:  \"github.com/google/wire\"",
          "67: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/service/action\"",
          "24:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "25:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "27:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/badge\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/collection\"",
          "31:  collectioncommon \"github.com/apache/incubator-answer/internal/service/collection_common\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/comment\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/dashboard\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/follow\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/importer\"",
          "41:  \"github.com/apache/incubator-answer/internal/service/meta\"",
          "42:  \"github.com/apache/incubator-answer/internal/service/meta_common\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "44:  \"github.com/apache/incubator-answer/internal/service/notification\"",
          "45:  notficationcommon \"github.com/apache/incubator-answer/internal/service/notification_common\"",
          "46:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "47:  \"github.com/apache/incubator-answer/internal/service/plugin_common\"",
          "48:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "49:  \"github.com/apache/incubator-answer/internal/service/rank\"",
          "50:  \"github.com/apache/incubator-answer/internal/service/reason\"",
          "51:  \"github.com/apache/incubator-answer/internal/service/report\"",
          "52:  \"github.com/apache/incubator-answer/internal/service/report_handle\"",
          "53:  \"github.com/apache/incubator-answer/internal/service/review\"",
          "54:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "55:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "56:  \"github.com/apache/incubator-answer/internal/service/search_parser\"",
          "57:  \"github.com/apache/incubator-answer/internal/service/siteinfo\"",
          "58:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "59:  \"github.com/apache/incubator-answer/internal/service/tag\"",
          "60:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "61:  \"github.com/apache/incubator-answer/internal/service/uploader\"",
          "62:  \"github.com/apache/incubator-answer/internal/service/user_admin\"",
          "63:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "64:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "65:  \"github.com/apache/incubator-answer/internal/service/user_notification_config\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/service/action\"",
          "24:  \"github.com/apache/answer/internal/service/activity\"",
          "25:  \"github.com/apache/answer/internal/service/activity_common\"",
          "26:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "27:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "28:  \"github.com/apache/answer/internal/service/auth\"",
          "29:  \"github.com/apache/answer/internal/service/badge\"",
          "30:  \"github.com/apache/answer/internal/service/collection\"",
          "31:  collectioncommon \"github.com/apache/answer/internal/service/collection_common\"",
          "32:  \"github.com/apache/answer/internal/service/comment\"",
          "33:  \"github.com/apache/answer/internal/service/comment_common\"",
          "34:  \"github.com/apache/answer/internal/service/config\"",
          "35:  \"github.com/apache/answer/internal/service/content\"",
          "36:  \"github.com/apache/answer/internal/service/dashboard\"",
          "37:  \"github.com/apache/answer/internal/service/event_queue\"",
          "38:  \"github.com/apache/answer/internal/service/export\"",
          "39:  \"github.com/apache/answer/internal/service/follow\"",
          "40:  \"github.com/apache/answer/internal/service/importer\"",
          "41:  \"github.com/apache/answer/internal/service/meta\"",
          "42:  \"github.com/apache/answer/internal/service/meta_common\"",
          "43:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "44:  \"github.com/apache/answer/internal/service/notification\"",
          "45:  notficationcommon \"github.com/apache/answer/internal/service/notification_common\"",
          "46:  \"github.com/apache/answer/internal/service/object_info\"",
          "47:  \"github.com/apache/answer/internal/service/plugin_common\"",
          "48:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "49:  \"github.com/apache/answer/internal/service/rank\"",
          "50:  \"github.com/apache/answer/internal/service/reason\"",
          "51:  \"github.com/apache/answer/internal/service/report\"",
          "52:  \"github.com/apache/answer/internal/service/report_handle\"",
          "53:  \"github.com/apache/answer/internal/service/review\"",
          "54:  \"github.com/apache/answer/internal/service/revision_common\"",
          "55:  \"github.com/apache/answer/internal/service/role\"",
          "56:  \"github.com/apache/answer/internal/service/search_parser\"",
          "57:  \"github.com/apache/answer/internal/service/siteinfo\"",
          "58:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "59:  \"github.com/apache/answer/internal/service/tag\"",
          "60:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "61:  \"github.com/apache/answer/internal/service/uploader\"",
          "62:  \"github.com/apache/answer/internal/service/user_admin\"",
          "63:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "64:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "65:  \"github.com/apache/answer/internal/service/user_notification_config\"",
          "",
          "---------------"
        ],
        "internal/service/question_common/question.go||internal/service/question_common/question.go": [
          "File: internal/service/question_common/question.go -> internal/service/question_common/question.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "27:  \"math\"",
          "28:  \"strings\"",
          "29:  \"time\"",
          "43:  \"github.com/segmentfault/pacman/errors\"",
          "51:  \"github.com/segmentfault/pacman/log\"",
          "52: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "32:  \"github.com/apache/incubator-answer/internal/base/data\"",
          "33:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "34:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "38:  metacommon \"github.com/apache/incubator-answer/internal/service/meta_common\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/revision\"",
          "40:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "41:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "42:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "45:  \"github.com/apache/incubator-answer/internal/entity\"",
          "46:  \"github.com/apache/incubator-answer/internal/schema\"",
          "47:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "48:  collectioncommon \"github.com/apache/incubator-answer/internal/service/collection_common\"",
          "49:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "50:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "31:  \"github.com/apache/answer/internal/base/constant\"",
          "32:  \"github.com/apache/answer/internal/base/data\"",
          "33:  \"github.com/apache/answer/internal/base/handler\"",
          "34:  \"github.com/apache/answer/internal/base/reason\"",
          "35:  \"github.com/apache/answer/internal/service/activity_common\"",
          "36:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "37:  \"github.com/apache/answer/internal/service/config\"",
          "38:  metacommon \"github.com/apache/answer/internal/service/meta_common\"",
          "39:  \"github.com/apache/answer/internal/service/revision\"",
          "40:  \"github.com/apache/answer/pkg/checker\"",
          "41:  \"github.com/apache/answer/pkg/htmltext\"",
          "42:  \"github.com/apache/answer/pkg/uid\"",
          "45:  \"github.com/apache/answer/internal/entity\"",
          "46:  \"github.com/apache/answer/internal/schema\"",
          "47:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "48:  collectioncommon \"github.com/apache/answer/internal/service/collection_common\"",
          "49:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "50:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "",
          "---------------"
        ],
        "internal/service/rank/rank_service.go||internal/service/rank/rank_service.go": [
          "File: internal/service/rank/rank_service.go -> internal/service/rank/rank_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "41:  \"github.com/segmentfault/pacman/errors\"",
          "42:  \"github.com/segmentfault/pacman/log\"",
          "43:  \"xorm.io/xorm\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/schema\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/activity_type\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "37:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "38:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "39:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "40:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/pager\"",
          "28:  \"github.com/apache/answer/internal/base/reason\"",
          "29:  \"github.com/apache/answer/internal/base/translator\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/schema\"",
          "32:  \"github.com/apache/answer/internal/service/activity_type\"",
          "33:  \"github.com/apache/answer/internal/service/config\"",
          "34:  \"github.com/apache/answer/internal/service/object_info\"",
          "35:  \"github.com/apache/answer/internal/service/permission\"",
          "36:  \"github.com/apache/answer/internal/service/role\"",
          "37:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "38:  \"github.com/apache/answer/pkg/htmltext\"",
          "39:  \"github.com/apache/answer/pkg/uid\"",
          "40:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/reason/reason_service.go||internal/service/reason/reason_service.go": [
          "File: internal/service/reason/reason_service.go -> internal/service/reason/reason_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "27: )",
          "29: type ReasonService struct {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/reason_common\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/internal/service/reason_common\"",
          "",
          "---------------"
        ],
        "internal/service/reason_common/reason.go||internal/service/reason_common/reason.go": [
          "File: internal/service/reason_common/reason.go -> internal/service/reason_common/reason.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "28: type ReasonRepo interface {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/report/report_service.go||internal/service/report/report_service.go": [
          "File: internal/service/report/report_service.go -> internal/service/report/report_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"encoding/json\"",
          "43:  \"github.com/jinzhu/copier\"",
          "44:  \"github.com/segmentfault/pacman/errors\"",
          "45:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/schema\"",
          "32:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "36:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/report_common\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/report_handle\"",
          "39:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "40:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "41:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "42:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/service/event_queue\"",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/base/handler\"",
          "28:  \"github.com/apache/answer/internal/base/pager\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/schema\"",
          "32:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "33:  \"github.com/apache/answer/internal/service/comment_common\"",
          "34:  \"github.com/apache/answer/internal/service/config\"",
          "35:  \"github.com/apache/answer/internal/service/object_info\"",
          "36:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "37:  \"github.com/apache/answer/internal/service/report_common\"",
          "38:  \"github.com/apache/answer/internal/service/report_handle\"",
          "39:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "40:  \"github.com/apache/answer/pkg/checker\"",
          "41:  \"github.com/apache/answer/pkg/htmltext\"",
          "42:  \"github.com/apache/answer/pkg/obj\"",
          "",
          "---------------"
        ],
        "internal/service/report_common/report_common.go||internal/service/report_common/report_common.go": [
          "File: internal/service/report_common/report_common.go -> internal/service/report_common/report_common.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/report_handle/report_handle.go||internal/service/report_handle/report_handle.go": [
          "File: internal/service/report_handle/report_handle.go -> internal/service/report_handle/report_handle.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "32: )",
          "34: type ReportHandle struct {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/entity\"",
          "27:  \"github.com/apache/incubator-answer/internal/schema\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/comment\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/content\"",
          "30:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "31:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/entity\"",
          "27:  \"github.com/apache/answer/internal/schema\"",
          "28:  \"github.com/apache/answer/internal/service/comment\"",
          "29:  \"github.com/apache/answer/internal/service/content\"",
          "30:  \"github.com/apache/answer/pkg/converter\"",
          "31:  \"github.com/apache/answer/pkg/obj\"",
          "",
          "---------------"
        ],
        "internal/service/review/review_service.go||internal/service/review/review_service.go": [
          "File: internal/service/review/review_service.go -> internal/service/review/review_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "42:  \"github.com/jinzhu/copier\"",
          "43:  \"github.com/segmentfault/pacman/errors\"",
          "44:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/notice_queue\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/object_info\"",
          "33:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "36:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "37:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "38:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "39:  \"github.com/apache/incubator-answer/pkg/token\"",
          "40:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "41:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/base/pager\"",
          "27:  \"github.com/apache/answer/internal/base/reason\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "31:  \"github.com/apache/answer/internal/service/notice_queue\"",
          "32:  \"github.com/apache/answer/internal/service/object_info\"",
          "33:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "34:  \"github.com/apache/answer/internal/service/role\"",
          "35:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "36:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "37:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "38:  \"github.com/apache/answer/pkg/htmltext\"",
          "39:  \"github.com/apache/answer/pkg/token\"",
          "40:  \"github.com/apache/answer/pkg/uid\"",
          "41:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/revision/revision.go||internal/service/revision/revision.go": [
          "File: internal/service/revision/revision.go -> internal/service/revision/revision.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26:  \"xorm.io/xorm\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/revision_common/revision_service.go||internal/service/revision_common/revision_service.go": [
          "File: internal/service/revision_common/revision_service.go -> internal/service/revision_common/revision_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/segmentfault/pacman/errors\"",
          "30:  \"github.com/segmentfault/pacman/log\"",
          "34:  \"github.com/jinzhu/copier\"",
          "35: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/revision\"",
          "27:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "28:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/reason\"",
          "26:  \"github.com/apache/answer/internal/service/revision\"",
          "27:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "28:  \"github.com/apache/answer/pkg/uid\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/role/power_service.go||internal/service/role/power_service.go": [
          "File: internal/service/role/power_service.go -> internal/service/role/power_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/role/role_service.go||internal/service/role/role_service.go": [
          "File: internal/service/role/role_service.go -> internal/service/role/role_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "29:  \"github.com/jinzhu/copier\"",
          "30: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/schema\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/handler\"",
          "26:  \"github.com/apache/answer/internal/base/translator\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/schema\"",
          "",
          "---------------"
        ],
        "internal/service/role/user_role_rel_service.go||internal/service/role/user_role_rel_service.go": [
          "File: internal/service/role/user_role_rel_service.go -> internal/service/role/user_role_rel_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "26: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "",
          "---------------"
        ],
        "internal/service/search_common/search.go||internal/service/search_common/search.go": [
          "File: internal/service/search_common/search.go -> internal/service/search_common/search.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "27: )",
          "29: type SearchRepo interface {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/schema\"",
          "26:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/schema\"",
          "26:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/search_parser/search_parser.go||internal/service/search_parser/search_parser.go": [
          "File: internal/service/search_parser/search_parser.go -> internal/service/search_parser/search_parser.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "26:  \"regexp\"",
          "27:  \"strings\"",
          "33: )",
          "35: type SearchParser struct {",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "31:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "32:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/internal/service/tag_common\"",
          "31:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "32:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/service/siteinfo/siteinfo_service.go||internal/service/siteinfo/siteinfo_service.go": [
          "File: internal/service/siteinfo/siteinfo_service.go -> internal/service/siteinfo/siteinfo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"fmt\"",
          "26:  \"strings\"",
          "40:  \"github.com/jinzhu/copier\"",
          "41:  \"github.com/segmentfault/pacman/errors\"",
          "42:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/schema\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/config\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "36:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "38:  tagcommon \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "39:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/base/constant\"",
          "29:  \"github.com/apache/answer/internal/base/handler\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/base/translator\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/schema\"",
          "34:  \"github.com/apache/answer/internal/service/config\"",
          "35:  \"github.com/apache/answer/internal/service/export\"",
          "36:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "37:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "38:  tagcommon \"github.com/apache/answer/internal/service/tag_common\"",
          "39:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/siteinfo_common/siteinfo_service.go||internal/service/siteinfo_common/siteinfo_service.go": [
          "File: internal/service/siteinfo_common/siteinfo_service.go -> internal/service/siteinfo_common/siteinfo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"html\"",
          "31:  \"github.com/segmentfault/pacman/log\"",
          "32: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/entity\"",
          "29:  \"github.com/apache/incubator-answer/internal/schema\"",
          "30:  \"github.com/apache/incubator-answer/pkg/gravatar\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/entity\"",
          "29:  \"github.com/apache/answer/internal/schema\"",
          "30:  \"github.com/apache/answer/pkg/gravatar\"",
          "",
          "---------------"
        ],
        "internal/service/siteinfo_common/siteinfo_service_test.go||internal/service/siteinfo_common/siteinfo_service_test.go": [
          "File: internal/service/siteinfo_common/siteinfo_service_test.go -> internal/service/siteinfo_common/siteinfo_service_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"testing\"",
          "29:  \"github.com/stretchr/testify/assert\"",
          "30:  \"go.uber.org/mock/gomock\"",
          "31: )",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/internal/entity\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/mock\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/internal/entity\"",
          "28:  \"github.com/apache/answer/internal/service/mock\"",
          "",
          "---------------"
        ],
        "internal/service/tag/tag_service.go||internal/service/tag/tag_service.go": [
          "File: internal/service/tag/tag_service.go -> internal/service/tag/tag_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"strings\"",
          "33:  \"github.com/jinzhu/copier\"",
          "42:  \"github.com/segmentfault/pacman/errors\"",
          "43:  \"github.com/segmentfault/pacman/log\"",
          "44: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "29:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "31:  tagcommonser \"github.com/apache/incubator-answer/internal/service/tag_common\"",
          "32:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "36:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "37:  \"github.com/apache/incubator-answer/internal/entity\"",
          "38:  \"github.com/apache/incubator-answer/internal/schema\"",
          "39:  \"github.com/apache/incubator-answer/internal/service/activity_common\"",
          "40:  \"github.com/apache/incubator-answer/internal/service/permission\"",
          "41:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "29:  \"github.com/apache/answer/internal/service/revision_common\"",
          "30:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "31:  tagcommonser \"github.com/apache/answer/internal/service/tag_common\"",
          "32:  \"github.com/apache/answer/pkg/htmltext\"",
          "35:  \"github.com/apache/answer/internal/base/pager\"",
          "36:  \"github.com/apache/answer/internal/base/reason\"",
          "37:  \"github.com/apache/answer/internal/entity\"",
          "38:  \"github.com/apache/answer/internal/schema\"",
          "39:  \"github.com/apache/answer/internal/service/activity_common\"",
          "40:  \"github.com/apache/answer/internal/service/permission\"",
          "41:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/service/tag_common/tag_common.go||internal/service/tag_common/tag_common.go": [
          "File: internal/service/tag_common/tag_common.go -> internal/service/tag_common/tag_common.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"sort\"",
          "27:  \"strings\"",
          "38:  \"github.com/segmentfault/pacman/errors\"",
          "39:  \"github.com/segmentfault/pacman/log\"",
          "40: )",
          "",
          "[Removed Lines]",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/schema\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/activity_queue\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/revision_common\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "37:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/apache/answer/internal/base/constant\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/base/validator\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/schema\"",
          "34:  \"github.com/apache/answer/internal/service/activity_queue\"",
          "35:  \"github.com/apache/answer/internal/service/revision_common\"",
          "36:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "37:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "internal/service/uploader/upload.go||internal/service/uploader/upload.go": [
          "File: internal/service/uploader/upload.go -> internal/service/uploader/upload.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  \"path/filepath\"",
          "32:  \"strings\"",
          "42:  \"github.com/disintegration/imaging\"",
          "43:  \"github.com/gin-gonic/gin\"",
          "44:  exifremove \"github.com/scottleedavis/go-exif-remove\"",
          "",
          "[Removed Lines]",
          "34:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "35:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/service_config\"",
          "37:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "39:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "40:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "41:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "34:  \"github.com/apache/answer/internal/base/constant\"",
          "35:  \"github.com/apache/answer/internal/base/reason\"",
          "36:  \"github.com/apache/answer/internal/service/service_config\"",
          "37:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "38:  \"github.com/apache/answer/pkg/checker\"",
          "39:  \"github.com/apache/answer/pkg/dir\"",
          "40:  \"github.com/apache/answer/pkg/uid\"",
          "41:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go": [
          "File: internal/service/user_admin/user_backyard.go -> internal/service/user_admin/user_backyard.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "24:  \"fmt\"",
          "34:  \"net/mail\"",
          "35:  \"strings\"",
          "36:  \"time\"",
          "37:  \"unicode\"",
          "50:  \"github.com/jinzhu/copier\"",
          "51:  \"github.com/segmentfault/pacman/errors\"",
          "52:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "26:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "27:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/validator\"",
          "29:  answercommon \"github.com/apache/incubator-answer/internal/service/answer_common\"",
          "30:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "32:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "33:  \"github.com/apache/incubator-answer/pkg/token\"",
          "39:  \"github.com/apache/incubator-answer/internal/base/pager\"",
          "40:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "41:  \"github.com/apache/incubator-answer/internal/entity\"",
          "42:  \"github.com/apache/incubator-answer/internal/schema\"",
          "43:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "44:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "45:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "46:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "47:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "48:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "49:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/internal/base/constant\"",
          "26:  \"github.com/apache/answer/internal/base/handler\"",
          "27:  \"github.com/apache/answer/internal/base/translator\"",
          "28:  \"github.com/apache/answer/internal/base/validator\"",
          "29:  answercommon \"github.com/apache/answer/internal/service/answer_common\"",
          "30:  \"github.com/apache/answer/internal/service/comment_common\"",
          "31:  \"github.com/apache/answer/internal/service/export\"",
          "32:  questioncommon \"github.com/apache/answer/internal/service/question_common\"",
          "33:  \"github.com/apache/answer/pkg/token\"",
          "39:  \"github.com/apache/answer/internal/base/pager\"",
          "40:  \"github.com/apache/answer/internal/base/reason\"",
          "41:  \"github.com/apache/answer/internal/entity\"",
          "42:  \"github.com/apache/answer/internal/schema\"",
          "43:  \"github.com/apache/answer/internal/service/activity\"",
          "44:  \"github.com/apache/answer/internal/service/auth\"",
          "45:  \"github.com/apache/answer/internal/service/role\"",
          "46:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "47:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "48:  \"github.com/apache/answer/internal/service/user_external_login\"",
          "49:  \"github.com/apache/answer/pkg/checker\"",
          "",
          "---------------"
        ],
        "internal/service/user_common/user.go||internal/service/user_common/user.go": [
          "File: internal/service/user_common/user.go -> internal/service/user_common/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"context\"",
          "24:  \"strings\"",
          "37:  \"github.com/mozillazg/go-pinyin\"",
          "38:  \"github.com/segmentfault/pacman/errors\"",
          "39:  \"github.com/segmentfault/pacman/log\"",
          "",
          "[Removed Lines]",
          "26:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "27:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/entity\"",
          "31:  \"github.com/apache/incubator-answer/internal/schema\"",
          "32:  \"github.com/apache/incubator-answer/internal/service/auth\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/role\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "35:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "36:  \"github.com/apache/incubator-answer/pkg/random\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/apache/answer/internal/base/constant\"",
          "27:  \"github.com/apache/answer/pkg/converter\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/entity\"",
          "31:  \"github.com/apache/answer/internal/schema\"",
          "32:  \"github.com/apache/answer/internal/service/auth\"",
          "33:  \"github.com/apache/answer/internal/service/role\"",
          "34:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "35:  \"github.com/apache/answer/pkg/checker\"",
          "36:  \"github.com/apache/answer/pkg/random\"",
          "",
          "---------------"
        ],
        "internal/service/user_external_login/user_center_login_service.go||internal/service/user_external_login/user_center_login_service.go": [
          "File: internal/service/user_external_login/user_center_login_service.go -> internal/service/user_external_login/user_center_login_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"time\"",
          "40:  \"github.com/segmentfault/pacman/log\"",
          "41: )",
          "",
          "[Removed Lines]",
          "27:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "28:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "31:  \"github.com/apache/incubator-answer/internal/entity\"",
          "32:  \"github.com/apache/incubator-answer/internal/schema\"",
          "33:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "35:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "36:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "37:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "38:  \"github.com/apache/incubator-answer/pkg/random\"",
          "39:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/answer/internal/base/constant\"",
          "28:  \"github.com/apache/answer/internal/base/handler\"",
          "29:  \"github.com/apache/answer/internal/base/reason\"",
          "30:  \"github.com/apache/answer/internal/base/translator\"",
          "31:  \"github.com/apache/answer/internal/entity\"",
          "32:  \"github.com/apache/answer/internal/schema\"",
          "33:  \"github.com/apache/answer/internal/service/activity\"",
          "34:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "35:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "36:  \"github.com/apache/answer/pkg/checker\"",
          "37:  \"github.com/apache/answer/pkg/converter\"",
          "38:  \"github.com/apache/answer/pkg/random\"",
          "39:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go": [
          "File: internal/service/user_external_login/user_external_login_service.go -> internal/service/user_external_login/user_external_login_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"fmt\"",
          "26:  \"time\"",
          "43:  \"github.com/segmentfault/pacman/errors\"",
          "44:  \"github.com/segmentfault/pacman/log\"",
          "45: )",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "30:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "31:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "32:  \"github.com/apache/incubator-answer/internal/entity\"",
          "33:  \"github.com/apache/incubator-answer/internal/schema\"",
          "34:  \"github.com/apache/incubator-answer/internal/service/activity\"",
          "35:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "36:  \"github.com/apache/incubator-answer/internal/service/siteinfo_common\"",
          "37:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "38:  \"github.com/apache/incubator-answer/internal/service/user_notification_config\"",
          "39:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "40:  \"github.com/apache/incubator-answer/pkg/random\"",
          "41:  \"github.com/apache/incubator-answer/pkg/token\"",
          "42:  \"github.com/apache/incubator-answer/plugin\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/base/constant\"",
          "29:  \"github.com/apache/answer/internal/base/handler\"",
          "30:  \"github.com/apache/answer/internal/base/reason\"",
          "31:  \"github.com/apache/answer/internal/base/translator\"",
          "32:  \"github.com/apache/answer/internal/entity\"",
          "33:  \"github.com/apache/answer/internal/schema\"",
          "34:  \"github.com/apache/answer/internal/service/activity\"",
          "35:  \"github.com/apache/answer/internal/service/export\"",
          "36:  \"github.com/apache/answer/internal/service/siteinfo_common\"",
          "37:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "38:  \"github.com/apache/answer/internal/service/user_notification_config\"",
          "39:  \"github.com/apache/answer/pkg/checker\"",
          "40:  \"github.com/apache/answer/pkg/random\"",
          "41:  \"github.com/apache/answer/pkg/token\"",
          "42:  \"github.com/apache/answer/plugin\"",
          "",
          "---------------"
        ],
        "internal/service/user_notification_config/user_notification_config_service.go||internal/service/user_notification_config/user_notification_config_service.go": [
          "File: internal/service/user_notification_config/user_notification_config_service.go -> internal/service/user_notification_config/user_notification_config_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"context\"",
          "28: )",
          "30: type UserNotificationConfigRepo interface {",
          "",
          "[Removed Lines]",
          "24:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "25:  \"github.com/apache/incubator-answer/internal/entity\"",
          "26:  \"github.com/apache/incubator-answer/internal/schema\"",
          "27:  usercommon \"github.com/apache/incubator-answer/internal/service/user_common\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/apache/answer/internal/base/constant\"",
          "25:  \"github.com/apache/answer/internal/entity\"",
          "26:  \"github.com/apache/answer/internal/schema\"",
          "27:  usercommon \"github.com/apache/answer/internal/service/user_common\"",
          "",
          "---------------"
        ],
        "pkg/checker/path_ignore.go||pkg/checker/path_ignore.go": [
          "File: pkg/checker/path_ignore.go -> pkg/checker/path_ignore.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"sync\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27:  \"gopkg.in/yaml.v3\"",
          "28: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/configs\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/configs\"",
          "",
          "---------------"
        ],
        "pkg/checker/question_link.go||pkg/checker/question_link.go": [
          "File: pkg/checker/question_link.go -> pkg/checker/question_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package checker",
          "22: import (",
          "26: )",
          "28: const (",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/pkg/obj\"",
          "25:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/pkg/obj\"",
          "25:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "pkg/checker/question_link_test.go||pkg/checker/question_link_test.go": [
          "File: pkg/checker/question_link_test.go -> pkg/checker/question_link_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import (",
          "23:  \"testing\"",
          "26:  \"github.com/stretchr/testify/assert\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/apache/answer/pkg/checker\"",
          "",
          "---------------"
        ],
        "pkg/checker/reserved_username.go||pkg/checker/reserved_username.go": [
          "File: pkg/checker/reserved_username.go -> pkg/checker/reserved_username.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"path/filepath\"",
          "26:  \"sync\"",
          "31: )",
          "33: var (",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/configs\"",
          "29:  \"github.com/apache/incubator-answer/internal/cli\"",
          "30:  \"github.com/apache/incubator-answer/pkg/dir\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/configs\"",
          "29:  \"github.com/apache/answer/internal/cli\"",
          "30:  \"github.com/apache/answer/pkg/dir\"",
          "",
          "---------------"
        ],
        "pkg/display/url.go||pkg/display/url.go": [
          "File: pkg/display/url.go -> pkg/display/url.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package display",
          "22: import (",
          "26: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/pkg/htmltext\"",
          "25:  \"github.com/apache/incubator-answer/pkg/uid\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/pkg/htmltext\"",
          "25:  \"github.com/apache/answer/pkg/uid\"",
          "",
          "---------------"
        ],
        "pkg/gravatar/gravatar_test.go||pkg/gravatar/gravatar_test.go": [
          "File: pkg/gravatar/gravatar_test.go -> pkg/gravatar/gravatar_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package gravatar",
          "22: import (",
          "24:  \"testing\"",
          "26:  \"github.com/stretchr/testify/assert\"",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "",
          "---------------"
        ],
        "pkg/htmltext/htmltext.go||pkg/htmltext/htmltext.go": [
          "File: pkg/htmltext/htmltext.go -> pkg/htmltext/htmltext.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  \"unicode/utf8\"",
          "30:  \"github.com/Machiel/slugify\"",
          "33:  strip \"github.com/grokify/html-strip-tags-go\"",
          "34:  \"github.com/mozillazg/go-pinyin\"",
          "35: )",
          "",
          "[Removed Lines]",
          "31:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "32:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "31:  \"github.com/apache/answer/pkg/checker\"",
          "32:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "pkg/obj/obj.go||pkg/obj/obj.go": [
          "File: pkg/obj/obj.go -> pkg/obj/obj.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package obj",
          "22: import (",
          "26:  \"github.com/segmentfault/pacman/errors\"",
          "27: )",
          "",
          "[Removed Lines]",
          "23:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "24:  \"github.com/apache/incubator-answer/internal/base/reason\"",
          "25:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "",
          "[Added Lines]",
          "23:  \"github.com/apache/answer/internal/base/constant\"",
          "24:  \"github.com/apache/answer/internal/base/reason\"",
          "25:  \"github.com/apache/answer/pkg/converter\"",
          "",
          "---------------"
        ],
        "plugin/plugin.go||plugin/plugin.go": [
          "File: plugin/plugin.go -> plugin/plugin.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"github.com/segmentfault/pacman/i18n\"",
          "30:  \"github.com/gin-gonic/gin\"",
          "31: )",
          "",
          "[Removed Lines]",
          "28:  \"github.com/apache/incubator-answer/internal/base/handler\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/translator\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/apache/answer/internal/base/handler\"",
          "29:  \"github.com/apache/answer/internal/base/translator\"",
          "",
          "---------------"
        ],
        "ui/public/index.html||ui/public/index.html": [
          "File: ui/public/index.html -> ui/public/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:     <meta charset=\"utf-8\" />",
          "25:     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\" />",
          "26:     <meta name=\"theme-color\" />",
          "28:     <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />",
          "29:   </head>",
          "30:   <body>",
          "",
          "[Removed Lines]",
          "27:     <meta name=\"generator\" content=\"Answer - https://github.com/apache/incubator-answer\">",
          "",
          "[Added Lines]",
          "27:     <meta name=\"generator\" content=\"Answer - https://github.com/apache/answer\">",
          "",
          "---------------"
        ],
        "ui/src/components/PageTags/index.tsx||ui/src/components/PageTags/index.tsx": [
          "File: ui/src/components/PageTags/index.tsx -> ui/src/components/PageTags/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     if (generatorMetaNode) {",
          "43:       generatorMetaNode.setAttribute(",
          "44:         'content',",
          "46:       );",
          "47:     }",
          "48:   };",
          "",
          "[Removed Lines]",
          "45:         `Answer ${appVersion} - https://github.com/apache/incubator-answer version ${hashVersion}`,",
          "",
          "[Added Lines]",
          "45:         `Answer ${appVersion} - https://github.com/apache/answer version ${hashVersion}`,",
          "",
          "---------------"
        ],
        "ui/src/pages/Admin/Dashboard/components/AnswerLinks/index.tsx||ui/src/pages/Admin/Dashboard/components/AnswerLinks/index.tsx": [
          "File: ui/src/pages/Admin/Dashboard/components/AnswerLinks/index.tsx -> ui/src/pages/Admin/Dashboard/components/AnswerLinks/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:           </Col>",
          "68:           <Col xs={6}>",
          "69:             <a",
          "71:               target=\"_blank\"",
          "72:               rel=\"noreferrer\">",
          "73:               {t('github')}",
          "",
          "[Removed Lines]",
          "70:               href=\"https://github.com/apache/incubator-answer\"",
          "",
          "[Added Lines]",
          "70:               href=\"https://github.com/apache/answer\"",
          "",
          "---------------"
        ],
        "ui/src/pages/Admin/Dashboard/components/HealthStatus/index.tsx||ui/src/pages/Admin/Dashboard/components/HealthStatus/index.tsx": [
          "File: ui/src/pages/Admin/Dashboard/components/HealthStatus/index.tsx -> ui/src/pages/Admin/Dashboard/components/HealthStatus/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:               <a",
          "54:                 className=\"ms-1 badge rounded-pill text-bg-success\"",
          "55:                 target=\"_blank\"",
          "57:                 rel=\"noreferrer\">",
          "58:                 {t('latest')}",
          "59:               </a>",
          "",
          "[Removed Lines]",
          "56:                 href=\"https://github.com/apache/incubator-answer/releases\"",
          "",
          "[Added Lines]",
          "56:                 href=\"https://github.com/apache/answer/releases\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:               <a",
          "63:                 className=\"ms-1 badge rounded-pill text-bg-warning\"",
          "64:                 target=\"_blank\"",
          "66:                 rel=\"noreferrer\">",
          "67:                 {t('update_to')} {remote_version}",
          "68:               </a>",
          "",
          "[Removed Lines]",
          "65:                 href=\"https://github.com/apache/incubator-answer/releases\"",
          "",
          "[Added Lines]",
          "65:                 href=\"https://github.com/apache/answer/releases\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:               <a",
          "72:                 className=\"ms-1 badge rounded-pill text-bg-danger\"",
          "73:                 target=\"_blank\"",
          "75:                 rel=\"noreferrer\">",
          "76:                 {t('check_failed')}",
          "77:               </a>",
          "",
          "[Removed Lines]",
          "74:                 href=\"https://github.com/apache/incubator-answer/releases\"",
          "",
          "[Added Lines]",
          "74:                 href=\"https://github.com/apache/answer/releases\"",
          "",
          "---------------"
        ],
        "ui/src/pages/Admin/Plugins/Installed/index.tsx||ui/src/pages/Admin/Plugins/Installed/index.tsx": [
          "File: ui/src/pages/Admin/Plugins/Installed/index.tsx -> ui/src/pages/Admin/Plugins/Installed/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:           Plugins extend and expand the functionality. You may find plugins in",
          "86:           the",
          "87:           <a",
          "89:             target=\"_blank\"",
          "90:             rel=\"noreferrer\">",
          "91:             Plugin Repository",
          "",
          "[Removed Lines]",
          "88:             href=\"https://github.com/apache/incubator-answer-plugins\"",
          "",
          "[Added Lines]",
          "88:             href=\"https://github.com/apache/answer-plugins\"",
          "",
          "---------------"
        ],
        "ui/template/header.html||ui/template/header.html": [
          "File: ui/template/header.html -> ui/template/header.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\" />",
          "28:     <meta name=\"theme-color\" />",
          "29:     <meta name=\"description\" content=\"{{.description}}\" data-rh=\"true\" />",
          "31:     {{if .keywords }}<meta name=\"keywords\" content=\"{{.keywords}}\" data-rh=\"true\" />{{end}}",
          "32:     {{if .noindex }}<meta name=\"robots\" content=\"noindex\">{{end}}",
          "",
          "[Removed Lines]",
          "30:     <meta name=\"generator\" content=\"Answer {{.Version}} - https://github.com/apache/incubator-answer version {{.Revision}}\">",
          "",
          "[Added Lines]",
          "30:     <meta name=\"generator\" content=\"Answer {{.Version}} - https://github.com/apache/answer version {{.Revision}}\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2bd8f7f771b2192a86616baa491e6a8c7a95f1f4",
      "candidate_info": {
        "commit_hash": "2bd8f7f771b2192a86616baa491e6a8c7a95f1f4",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/2bd8f7f771b2192a86616baa491e6a8c7a95f1f4",
        "files": [
          "cmd/wire_gen.go",
          "docs/docs.go",
          "docs/swagger.json",
          "docs/swagger.yaml",
          "i18n/en_US.yaml",
          "internal/base/constant/email_tpl_key.go",
          "internal/base/constant/notification.go",
          "internal/controller/user_controller.go",
          "internal/entity/user_entity.go",
          "internal/entity/user_notification_config_entity.go",
          "internal/migrations/v15.go",
          "internal/repo/provider.go",
          "internal/repo/user/user_repo.go",
          "internal/repo/user_notification_config/user_notification_config_repo.go",
          "internal/router/answer_api_router.go",
          "internal/schema/email_template.go",
          "internal/schema/new_question_queue_schema.go",
          "internal/schema/user_notification_schema.go",
          "internal/schema/user_schema.go",
          "internal/service/answer_service.go",
          "internal/service/comment/comment_service.go",
          "internal/service/export/email_service.go",
          "internal/service/notice_queue/external_notification_queue.go",
          "internal/service/notification/external_notification.go",
          "internal/service/notification/invite_answer_notification.go",
          "internal/service/notification/new_answer_notification.go",
          "internal/service/notification/new_comment_notification.go",
          "internal/service/notification/new_question_notification.go",
          "internal/service/provider.go",
          "internal/service/question_service.go",
          "internal/service/user_common/user.go",
          "internal/service/user_notification_config/user_notification_config_service.go",
          "internal/service/user_service.go"
        ],
        "message": "feat(notification): add new question notification",
        "before_after_code_files": [
          "cmd/wire_gen.go||cmd/wire_gen.go",
          "internal/base/constant/email_tpl_key.go||internal/base/constant/email_tpl_key.go",
          "internal/base/constant/notification.go||internal/base/constant/notification.go",
          "internal/controller/user_controller.go||internal/controller/user_controller.go",
          "internal/entity/user_entity.go||internal/entity/user_entity.go",
          "internal/entity/user_notification_config_entity.go||internal/entity/user_notification_config_entity.go",
          "internal/migrations/v15.go||internal/migrations/v15.go",
          "internal/repo/provider.go||internal/repo/provider.go",
          "internal/repo/user/user_repo.go||internal/repo/user/user_repo.go",
          "internal/repo/user_notification_config/user_notification_config_repo.go||internal/repo/user_notification_config/user_notification_config_repo.go",
          "internal/router/answer_api_router.go||internal/router/answer_api_router.go",
          "internal/schema/email_template.go||internal/schema/email_template.go",
          "internal/schema/new_question_queue_schema.go||internal/schema/new_question_queue_schema.go",
          "internal/schema/user_notification_schema.go||internal/schema/user_notification_schema.go",
          "internal/schema/user_schema.go||internal/schema/user_schema.go",
          "internal/service/answer_service.go||internal/service/answer_service.go",
          "internal/service/comment/comment_service.go||internal/service/comment/comment_service.go",
          "internal/service/export/email_service.go||internal/service/export/email_service.go",
          "internal/service/notice_queue/external_notification_queue.go||internal/service/notice_queue/external_notification_queue.go",
          "internal/service/notification/external_notification.go||internal/service/notification/external_notification.go",
          "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go",
          "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go",
          "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go",
          "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go",
          "internal/service/provider.go||internal/service/provider.go",
          "internal/service/question_service.go||internal/service/question_service.go",
          "internal/service/user_common/user.go||internal/service/user_common/user.go",
          "internal/service/user_notification_config/user_notification_config_service.go||internal/service/user_notification_config/user_notification_config_service.go",
          "internal/service/user_service.go||internal/service/user_service.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/schema/email_template.go||internal/schema/email_template.go",
            "internal/service/export/email_service.go||internal/service/export/email_service.go",
            "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go",
            "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go",
            "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go",
            "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go"
          ],
          "candidate": [
            "internal/schema/email_template.go||internal/schema/email_template.go",
            "internal/service/export/email_service.go||internal/service/export/email_service.go",
            "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go",
            "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go",
            "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go",
            "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go"
          ]
        }
      },
      "candidate_diff": {
        "cmd/wire_gen.go||cmd/wire_gen.go": [
          "File: cmd/wire_gen.go -> cmd/wire_gen.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"github.com/answerdev/answer/internal/repo/config\"",
          "27:  \"github.com/answerdev/answer/internal/repo/export\"",
          "28:  \"github.com/answerdev/answer/internal/repo/meta\"",
          "30:  \"github.com/answerdev/answer/internal/repo/plugin_config\"",
          "31:  \"github.com/answerdev/answer/internal/repo/question\"",
          "32:  \"github.com/answerdev/answer/internal/repo/rank\"",
          "",
          "[Removed Lines]",
          "29:  \"github.com/answerdev/answer/internal/repo/notification\"",
          "",
          "[Added Lines]",
          "29:  notification2 \"github.com/answerdev/answer/internal/repo/notification\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:  \"github.com/answerdev/answer/internal/repo/unique\"",
          "42:  \"github.com/answerdev/answer/internal/repo/user\"",
          "43:  \"github.com/answerdev/answer/internal/repo/user_external_login\"",
          "44:  \"github.com/answerdev/answer/internal/router\"",
          "45:  \"github.com/answerdev/answer/internal/service\"",
          "46:  \"github.com/answerdev/answer/internal/service/action\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:  \"github.com/answerdev/answer/internal/repo/user_notification_config\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58:  \"github.com/answerdev/answer/internal/service/follow\"",
          "59:  meta2 \"github.com/answerdev/answer/internal/service/meta\"",
          "60:  \"github.com/answerdev/answer/internal/service/notice_queue\"",
          "62:  \"github.com/answerdev/answer/internal/service/notification_common\"",
          "63:  \"github.com/answerdev/answer/internal/service/object_info\"",
          "64:  \"github.com/answerdev/answer/internal/service/plugin_common\"",
          "",
          "[Removed Lines]",
          "61:  notification2 \"github.com/answerdev/answer/internal/service/notification\"",
          "",
          "[Added Lines]",
          "62:  \"github.com/answerdev/answer/internal/service/notification\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "80:  \"github.com/answerdev/answer/internal/service/user_admin\"",
          "81:  \"github.com/answerdev/answer/internal/service/user_common\"",
          "82:  user_external_login2 \"github.com/answerdev/answer/internal/service/user_external_login\"",
          "83:  \"github.com/segmentfault/pacman\"",
          "84:  \"github.com/segmentfault/pacman/log\"",
          "85: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:  user_notification_config2 \"github.com/answerdev/answer/internal/service/user_notification_config\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "127:  userCommon := usercommon.NewUserCommon(userRepo, userRoleRelService, authService, siteInfoCommonService)",
          "128:  userExternalLoginRepo := user_external_login.NewUserExternalLoginRepo(dataData)",
          "129:  userExternalLoginService := user_external_login2.NewUserExternalLoginService(userRepo, userCommon, userExternalLoginRepo, emailService, siteInfoCommonService, userActiveActivityRepo)",
          "131:  captchaRepo := captcha.NewCaptchaRepo(dataData)",
          "132:  captchaService := action.NewCaptchaService(captchaRepo)",
          "134:  commentRepo := comment.NewCommentRepo(dataData, uniqueIDRepo)",
          "135:  commentCommonRepo := comment.NewCommentCommonRepo(dataData, uniqueIDRepo)",
          "136:  answerRepo := answer.NewAnswerRepo(dataData, uniqueIDRepo, userRankRepo, activityRepo)",
          "",
          "[Removed Lines]",
          "130:  userService := service.NewUserService(userRepo, userActiveActivityRepo, activityRepo, emailService, authService, siteInfoCommonService, userRoleRelService, userCommon, userExternalLoginService)",
          "133:  userController := controller.NewUserController(authService, userService, captchaService, emailService, siteInfoCommonService)",
          "",
          "[Added Lines]",
          "132:  userNotificationConfigRepo := user_notification_config.NewUserNotificationConfigRepo(dataData)",
          "133:  userService := service.NewUserService(userRepo, userActiveActivityRepo, activityRepo, emailService, authService, siteInfoCommonService, userRoleRelService, userCommon, userExternalLoginService, userNotificationConfigRepo)",
          "136:  userNotificationConfigService := user_notification_config2.NewUserNotificationConfigService(userRepo, userNotificationConfigRepo)",
          "137:  userController := controller.NewUserController(authService, userService, captchaService, emailService, siteInfoCommonService, userNotificationConfigService)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "145:  objService := object_info.NewObjService(answerRepo, questionRepo, commentCommonRepo, tagCommonRepo, tagCommonService)",
          "146:  voteRepo := activity_common.NewVoteRepo(dataData, activityRepo)",
          "147:  notificationQueueService := notice_queue.NewNotificationQueueService()",
          "149:  rolePowerRelRepo := role.NewRolePowerRelRepo(dataData)",
          "150:  rolePowerRelService := role2.NewRolePowerRelService(rolePowerRelRepo, userRoleRelService)",
          "151:  rankService := rank2.NewRankService(userCommon, userRankRepo, objService, userRoleRelService, rolePowerRelService, configService)",
          "",
          "[Removed Lines]",
          "148:  commentService := comment2.NewCommentService(commentRepo, commentCommonRepo, userCommon, objService, voteRepo, emailService, userRepo, notificationQueueService, activityQueueService)",
          "",
          "[Added Lines]",
          "152:  externalNotificationQueueService := notice_queue.NewNewQuestionNotificationQueueService()",
          "153:  commentService := comment2.NewCommentService(commentRepo, commentCommonRepo, userCommon, objService, voteRepo, emailService, userRepo, notificationQueueService, externalNotificationQueueService, activityQueueService)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "173:  collectionController := controller.NewCollectionController(collectionService)",
          "174:  answerActivityRepo := activity.NewAnswerActivityRepo(dataData, activityRepo, userRankRepo, notificationQueueService)",
          "175:  answerActivityService := activity2.NewAnswerActivityService(answerActivityRepo, configService)",
          "178:  questionController := controller.NewQuestionController(questionService, answerService, rankService, siteInfoCommonService, captchaService)",
          "179:  answerController := controller.NewAnswerController(answerService, rankService, captchaService)",
          "180:  searchParser := search_parser.NewSearchParser(tagCommonService, userCommon)",
          "",
          "[Removed Lines]",
          "176:  questionService := service.NewQuestionService(questionRepo, tagCommonService, questionCommon, userCommon, userRepo, revisionService, metaService, collectionCommon, answerActivityService, emailService, notificationQueueService, activityQueueService, siteInfoCommonService)",
          "177:  answerService := service.NewAnswerService(answerRepo, questionRepo, questionCommon, userCommon, collectionCommon, userRepo, revisionService, answerActivityService, answerCommon, voteRepo, emailService, userRoleRelService, notificationQueueService, activityQueueService)",
          "",
          "[Added Lines]",
          "181:  externalNotificationService := notification.NewExternalNotificationService(userNotificationConfigRepo, followRepo, emailService, userRepo, externalNotificationQueueService)",
          "182:  questionService := service.NewQuestionService(questionRepo, tagCommonService, questionCommon, userCommon, userRepo, revisionService, metaService, collectionCommon, answerActivityService, emailService, notificationQueueService, externalNotificationQueueService, activityQueueService, siteInfoCommonService, externalNotificationService)",
          "183:  answerService := service.NewAnswerService(answerRepo, questionRepo, questionCommon, userCommon, collectionCommon, userRepo, revisionService, answerActivityService, answerCommon, voteRepo, emailService, userRoleRelService, notificationQueueService, externalNotificationQueueService, activityQueueService)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "197:  siteInfoService := siteinfo.NewSiteInfoService(siteInfoRepo, siteInfoCommonService, emailService, tagCommonService, configService, questionCommon)",
          "198:  siteInfoController := controller_admin.NewSiteInfoController(siteInfoService)",
          "199:  controllerSiteInfoController := controller.NewSiteInfoController(siteInfoCommonService)",
          "201:  notificationCommon := notificationcommon.NewNotificationCommon(dataData, notificationRepo, userCommon, activityRepo, followRepo, objService, notificationQueueService)",
          "203:  notificationController := controller.NewNotificationController(notificationService, rankService)",
          "204:  dashboardService := dashboard.NewDashboardService(questionRepo, answerRepo, commentCommonRepo, voteRepo, userRepo, reportRepo, configService, siteInfoCommonService, serviceConf, dataData)",
          "205:  dashboardController := controller.NewDashboardController(dashboardService)",
          "",
          "[Removed Lines]",
          "200:  notificationRepo := notification.NewNotificationRepo(dataData)",
          "202:  notificationService := notification2.NewNotificationService(dataData, notificationRepo, notificationCommon, revisionService)",
          "",
          "[Added Lines]",
          "206:  notificationRepo := notification2.NewNotificationRepo(dataData)",
          "208:  notificationService := notification.NewNotificationService(dataData, notificationRepo, notificationCommon, revisionService)",
          "",
          "---------------"
        ],
        "internal/base/constant/email_tpl_key.go||internal/base/constant/email_tpl_key.go": [
          "File: internal/base/constant/email_tpl_key.go -> internal/base/constant/email_tpl_key.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:  EmailTplKeyInvitedAnswerTitle = \"email_tpl.invited_you_to_answer.title\"",
          "23:  EmailTplKeyInvitedAnswerBody  = \"email_tpl.invited_you_to_answer.body\"",
          "24: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:  EmailTplKeyNewQuestionTitle = \"email_tpl.new_question.title\"",
          "26:  EmailTplKeyNewQuestionBody  = \"email_tpl.new_question.body\"",
          "",
          "---------------"
        ],
        "internal/base/constant/notification.go||internal/base/constant/notification.go": [
          "File: internal/base/constant/notification.go -> internal/base/constant/notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:  NotificationInvitedYouToAnswer = \"notification.action.invited_you_to_answer\"",
          "40: )",
          "43: type NotificationSource string",
          "45: const (",
          "49: )",
          "51: const (",
          "53: )",
          "55: var (",
          "",
          "[Removed Lines]",
          "42: type NotificationChannel string",
          "46:  InboxChannel                          NotificationSource = \"inbox\"",
          "47:  AllNewQuestionChannel                 NotificationSource = \"all_new_question\"",
          "48:  AllNewQuestionForFollowingTagsChannel NotificationSource = \"all_new_question_for_following_tags\"",
          "52:  EmailChannel NotificationChannel = \"email\"",
          "",
          "[Added Lines]",
          "42: type NotificationChannelKey string",
          "46:  InboxSource                          NotificationSource = \"inbox\"",
          "47:  AllNewQuestionSource                 NotificationSource = \"all_new_question\"",
          "48:  AllNewQuestionForFollowingTagsSource NotificationSource = \"all_new_question_for_following_tags\"",
          "52:  EmailChannel NotificationChannelKey = \"email\"",
          "",
          "---------------"
        ],
        "internal/controller/user_controller.go||internal/controller/user_controller.go": [
          "File: internal/controller/user_controller.go -> internal/controller/user_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/answerdev/answer/internal/service/auth\"",
          "14:  \"github.com/answerdev/answer/internal/service/export\"",
          "15:  \"github.com/answerdev/answer/internal/service/siteinfo_common\"",
          "16:  \"github.com/answerdev/answer/pkg/checker\"",
          "17:  \"github.com/gin-gonic/gin\"",
          "18:  \"github.com/segmentfault/pacman/errors\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:  \"github.com/answerdev/answer/internal/service/user_notification_config\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23: type UserController struct {",
          "29: }",
          "",
          "[Removed Lines]",
          "24:  userService           *service.UserService",
          "25:  authService           *auth.AuthService",
          "26:  actionService         *action.CaptchaService",
          "27:  emailService          *export.EmailService",
          "28:  siteInfoCommonService siteinfo_common.SiteInfoCommonService",
          "",
          "[Added Lines]",
          "25:  userService                   *service.UserService",
          "26:  authService                   *auth.AuthService",
          "27:  actionService                 *action.CaptchaService",
          "28:  emailService                  *export.EmailService",
          "29:  siteInfoCommonService         siteinfo_common.SiteInfoCommonService",
          "30:  userNotificationConfigService *user_notification_config.UserNotificationConfigService",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:  actionService *action.CaptchaService,",
          "36:  emailService *export.EmailService,",
          "37:  siteInfoCommonService siteinfo_common.SiteInfoCommonService,",
          "38: ) *UserController {",
          "39:  return &UserController{",
          "45:  }",
          "46: }",
          "",
          "[Removed Lines]",
          "40:   authService:           authService,",
          "41:   userService:           userService,",
          "42:   actionService:         actionService,",
          "43:   emailService:          emailService,",
          "44:   siteInfoCommonService: siteInfoCommonService,",
          "",
          "[Added Lines]",
          "40:  userNotificationConfigService *user_notification_config.UserNotificationConfigService,",
          "43:   authService:                   authService,",
          "44:   userService:                   userService,",
          "45:   actionService:                 actionService,",
          "46:   emailService:                  emailService,",
          "47:   siteInfoCommonService:         siteInfoCommonService,",
          "48:   userNotificationConfigService: userNotificationConfigService,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "500: func (uc *UserController) GetUserNotificationConfig(ctx *gin.Context) {",
          "501:  userID := middleware.GetLoginUserIDFromContext(ctx)",
          "503:  handler.HandleResponse(ctx, err, resp)",
          "504: }",
          "",
          "[Removed Lines]",
          "502:  resp, err := uc.userService.GetUserNotificationConfig(ctx, userID)",
          "",
          "[Added Lines]",
          "506:  resp, err := uc.userNotificationConfigService.GetUserNotificationConfig(ctx, userID)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "520:  }",
          "522:  req.UserID = middleware.GetLoginUserIDFromContext(ctx)",
          "524:  handler.HandleResponse(ctx, err, nil)",
          "525: }",
          "",
          "[Removed Lines]",
          "523:  err := uc.userService.UpdateUserNotificationConfig(ctx, req)",
          "",
          "[Added Lines]",
          "527:  err := uc.userNotificationConfigService.UpdateUserNotificationConfig(ctx, req)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "623:  handler.HandleResponse(ctx, err, resp)",
          "624: }",
          "636:  if handler.BindAndCheck(ctx, req) {",
          "637:   return",
          "638:  }",
          "",
          "[Removed Lines]",
          "634: func (uc *UserController) UserUnsubscribeEmailNotification(ctx *gin.Context) {",
          "635:  req := &schema.UserUnsubscribeEmailNotificationReq{}",
          "",
          "[Added Lines]",
          "639: func (uc *UserController) UserUnsubscribeNotification(ctx *gin.Context) {",
          "640:  req := &schema.UserUnsubscribeNotificationReq{}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "644:   return",
          "645:  }",
          "648:  handler.HandleResponse(ctx, err, nil)",
          "649: }",
          "",
          "[Removed Lines]",
          "647:  err := uc.userService.UserUnsubscribeEmailNotification(ctx, req)",
          "",
          "[Added Lines]",
          "652:  err := uc.userService.UserUnsubscribeNotification(ctx, req)",
          "",
          "---------------"
        ],
        "internal/entity/user_entity.go||internal/entity/user_entity.go": [
          "File: internal/entity/user_entity.go -> internal/entity/user_entity.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:  IPInfo         string    `xorm:\"not null default '' VARCHAR(255) ip_info\"`",
          "47:  IsAdmin        bool      `xorm:\"not null default false BOOL is_admin\"`",
          "48:  Language       string    `xorm:\"not null default '' VARCHAR(100) language\"`",
          "50: }",
          "",
          "[Removed Lines]",
          "49:  NoticeConfig   string    `xorm:\"not null TEXT notice_config\"`",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/entity/user_notification_config_entity.go||internal/entity/user_notification_config_entity.go": [
          "File: internal/entity/user_notification_config_entity.go -> internal/entity/user_notification_config_entity.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package entity",
          "3: import \"time\"",
          "6: type UserNotificationConfig struct {",
          "7:  ID        string    `xorm:\"not null pk autoincr BIGINT(20) id\"`",
          "8:  CreatedAt time.Time `xorm:\"created TIMESTAMP created_at\"`",
          "9:  UpdatedAt time.Time `xorm:\"updated TIMESTAMP updated_at\"`",
          "10:  UserID    string    `xorm:\"not null default 0 INDEX UNIQUE(uk_us) BIGINT(20) INDEX user_id\"`",
          "11:  Source    string    `xorm:\"not null default '' INDEX UNIQUE(uk_us) VARCHAR(64) source\"`",
          "12:  Channels  string    `xorm:\"not null TEXT channels\"`",
          "13:  Enabled   bool      `xorm:\"not null default false BOOL enabled\"`",
          "14: }",
          "17: func (UserNotificationConfig) TableName() string {",
          "18:  return \"user_notification_config\"",
          "19: }",
          "",
          "---------------"
        ],
        "internal/migrations/v15.go||internal/migrations/v15.go": [
          "File: internal/migrations/v15.go -> internal/migrations/v15.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"xorm.io/xorm\"",
          "6: )",
          "8: func addNoticeConfig(ctx context.Context, x *xorm.Engine) error {",
          "13: }",
          "",
          "[Removed Lines]",
          "9:  type User struct {",
          "10:   NoticeConfig string `xorm:\"not null TEXT notice_config\"`",
          "11:  }",
          "12:  return x.Context(ctx).Sync(new(User))",
          "",
          "[Added Lines]",
          "5:  \"github.com/answerdev/answer/internal/entity\"",
          "10:  return x.Context(ctx).Sync(new(entity.UserNotificationConfig))",
          "",
          "---------------"
        ],
        "internal/repo/provider.go||internal/repo/provider.go": [
          "File: internal/repo/provider.go -> internal/repo/provider.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  \"github.com/answerdev/answer/internal/repo/unique\"",
          "28:  \"github.com/answerdev/answer/internal/repo/user\"",
          "29:  \"github.com/answerdev/answer/internal/repo/user_external_login\"",
          "30:  \"github.com/google/wire\"",
          "31: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:  \"github.com/answerdev/answer/internal/repo/user_notification_config\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:  role.NewPowerRepo,",
          "74:  user_external_login.NewUserExternalLoginRepo,",
          "75:  plugin_config.NewPluginConfigRepo,",
          "76: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:  user_notification_config.NewUserNotificationConfigRepo,",
          "",
          "---------------"
        ],
        "internal/repo/user/user_repo.go||internal/repo/user/user_repo.go": [
          "File: internal/repo/user/user_repo.go -> internal/repo/user/user_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  return nil",
          "121: }",
          "133: func (ur *userRepo) UpdatePass(ctx context.Context, userID, pass string) error {",
          "134:  _, err := ur.data.DB.Context(ctx).Where(\"id = ?\", userID).Cols(\"pass\").Update(&entity.User{Pass: pass})",
          "135:  if err != nil {",
          "",
          "[Removed Lines]",
          "124: func (ur *userRepo) UpdateNoticeConfig(ctx context.Context, userID string, noticeConfig string) error {",
          "125:  cond := &entity.User{NoticeConfig: noticeConfig}",
          "126:  _, err := ur.data.DB.Context(ctx).Where(\"id = ?\", userID).Cols(\"notice_config\").Update(cond)",
          "127:  if err != nil {",
          "128:   return errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
          "129:  }",
          "130:  return nil",
          "131: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/repo/user_notification_config/user_notification_config_repo.go||internal/repo/user_notification_config/user_notification_config_repo.go": [
          "File: internal/repo/user_notification_config/user_notification_config_repo.go -> internal/repo/user_notification_config/user_notification_config_repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package user_notification_config",
          "3: import (",
          "4:  \"context\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6:  \"github.com/answerdev/answer/internal/base/data\"",
          "7:  \"github.com/answerdev/answer/internal/base/reason\"",
          "8:  \"github.com/answerdev/answer/internal/entity\"",
          "9:  \"github.com/answerdev/answer/internal/service/user_notification_config\"",
          "10:  \"github.com/segmentfault/pacman/errors\"",
          "11: )",
          "14: type userNotificationConfigRepo struct {",
          "15:  data *data.Data",
          "16: }",
          "19: func NewUserNotificationConfigRepo(data *data.Data) user_notification_config.UserNotificationConfigRepo {",
          "20:  return &userNotificationConfigRepo{",
          "21:   data: data,",
          "22:  }",
          "23: }",
          "26: func (ur *userNotificationConfigRepo) Save(ctx context.Context, uc *entity.UserNotificationConfig) (err error) {",
          "27:  old := &entity.UserNotificationConfig{UserID: uc.UserID, Source: uc.Source}",
          "28:  exist, err := ur.data.DB.Context(ctx).Get(old)",
          "29:  if err != nil {",
          "30:   return errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
          "31:  }",
          "32:  if exist {",
          "33:   old.Channels = uc.Channels",
          "34:   old.Enabled = uc.Enabled",
          "35:   _, err = ur.data.DB.Context(ctx).ID(old.ID).UseBool(\"enabled\").Cols(\"channels\", \"enabled\").Update(old)",
          "36:  } else {",
          "37:   _, err = ur.data.DB.Context(ctx).Insert(uc)",
          "38:  }",
          "39:  if err != nil {",
          "40:   return errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
          "41:  }",
          "42:  return nil",
          "43: }",
          "46: func (ur *userNotificationConfigRepo) GetByUserID(ctx context.Context, userID string) (",
          "47:  []*entity.UserNotificationConfig, error) {",
          "48:  var configs []*entity.UserNotificationConfig",
          "49:  err := ur.data.DB.Context(ctx).Where(\"user_id = ?\", userID).Find(&configs)",
          "50:  if err != nil {",
          "51:   return nil, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
          "52:  }",
          "53:  return configs, nil",
          "54: }",
          "57: func (ur *userNotificationConfigRepo) GetBySource(ctx context.Context, source constant.NotificationSource) (",
          "58:  []*entity.UserNotificationConfig, error) {",
          "59:  var configs []*entity.UserNotificationConfig",
          "60:  err := ur.data.DB.Context(ctx).UseBool(\"enabled\").",
          "61:   Find(&configs, &entity.UserNotificationConfig{Source: string(source), Enabled: true})",
          "62:  if err != nil {",
          "63:   return nil, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
          "64:  }",
          "65:  return configs, nil",
          "66: }",
          "69: func (ur *userNotificationConfigRepo) GetByUserIDAndSource(ctx context.Context, userID string, source constant.NotificationSource) (",
          "70:  conf *entity.UserNotificationConfig, exist bool, err error) {",
          "71:  config := &entity.UserNotificationConfig{UserID: userID, Source: string(source)}",
          "72:  exist, err = ur.data.DB.Context(ctx).Get(config)",
          "73:  if err != nil {",
          "74:   return nil, false, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
          "75:  }",
          "76:  return config, exist, nil",
          "77: }",
          "80: func (ur *userNotificationConfigRepo) GetByUsersAndSource(",
          "81:  ctx context.Context, userIDs []string, source constant.NotificationSource) (",
          "82:  []*entity.UserNotificationConfig, error) {",
          "83:  var configs []*entity.UserNotificationConfig",
          "84:  err := ur.data.DB.Context(ctx).UseBool(\"enabled\").In(\"user_id\", userIDs).",
          "85:   Find(&configs, &entity.UserNotificationConfig{Source: string(source), Enabled: true})",
          "86:  if err != nil {",
          "87:   return nil, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()",
          "88:  }",
          "89:  return configs, nil",
          "90: }",
          "",
          "---------------"
        ],
        "internal/router/answer_api_router.go||internal/router/answer_api_router.go": [
          "File: internal/router/answer_api_router.go -> internal/router/answer_api_router.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:  routerGroup.PUT(\"/user/email\", a.userController.UserChangeEmailVerify)",
          "114:  routerGroup.POST(\"/user/password/reset\", a.userController.RetrievePassWord)",
          "115:  routerGroup.POST(\"/user/password/replacement\", a.userController.UseRePassWord)",
          "117: }",
          "119: func (a *AnswerAPIRouter) RegisterUnAuthAnswerAPIRouter(r *gin.RouterGroup) {",
          "",
          "[Removed Lines]",
          "116:  routerGroup.PUT(\"/user/email/notification\", a.userController.UserUnsubscribeEmailNotification)",
          "",
          "[Added Lines]",
          "116:  routerGroup.PUT(\"/user/notification/unsubscribe\", a.userController.UserUnsubscribeNotification)",
          "",
          "---------------"
        ],
        "internal/schema/email_template.go||internal/schema/email_template.go": [
          "File: internal/schema/email_template.go -> internal/schema/email_template.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package schema",
          "5: const (",
          "6:  AccountActivationSourceType EmailSourceType = \"account-activation\"",
          "",
          "[Removed Lines]",
          "3: import \"encoding/json\"",
          "",
          "[Added Lines]",
          "3: import (",
          "4:  \"encoding/json\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:  SourceType EmailSourceType `json:\"source_type\"`",
          "17:  Email      string          `json:\"e_mail\"`",
          "18:  UserID     string          `json:\"user_id\"`",
          "21: }",
          "23: func (r *EmailCodeContent) ToJSONString() string {",
          "",
          "[Removed Lines]",
          "20:  BindingKey string `json:\"binding_key\"`",
          "",
          "[Added Lines]",
          "23:  NotificationSources []constant.NotificationSource `json:\"notification_source,omitempty\"`",
          "25:  BindingKey string `json:\"binding_key,omitempty\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:  CommentSummary string",
          "81:  UnsubscribeUrl string",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: type NewQuestionTemplateRawData struct {",
          "90:  QuestionTitle   string",
          "91:  QuestionID      string",
          "92:  UnsubscribeCode string",
          "93:  Tags            []string",
          "94:  TagIDs          []string",
          "95: }",
          "97: type NewQuestionTemplateData struct {",
          "98:  SiteName       string",
          "99:  QuestionTitle  string",
          "100:  QuestionUrl    string",
          "101:  Tags           string",
          "102:  UnsubscribeUrl string",
          "103: }",
          "",
          "---------------"
        ],
        "internal/schema/new_question_queue_schema.go||internal/schema/new_question_queue_schema.go": [
          "File: internal/schema/new_question_queue_schema.go -> internal/schema/new_question_queue_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package schema",
          "3: import (",
          "4:  \"github.com/answerdev/answer/internal/entity\"",
          "5:  \"github.com/answerdev/answer/pkg/uid\"",
          "6: )",
          "8: type ExternalNotificationMsg struct {",
          "9:  ReceiverUserID string `json:\"receiver_user_id\"`",
          "10:  ReceiverEmail  string `json:\"receiver_email\"`",
          "11:  ReceiverLang   string `json:\"receiver_lang\"`",
          "13:  NewAnswerTemplateRawData       *NewAnswerTemplateRawData       `json:\"new_answer_template_raw_data,omitempty\"`",
          "14:  NewInviteAnswerTemplateRawData *NewInviteAnswerTemplateRawData `json:\"new_invite_answer_template_raw_data,omitempty\"`",
          "15:  NewCommentTemplateRawData      *NewCommentTemplateRawData      `json:\"new_comment_template_raw_data,omitempty\"`",
          "16:  NewQuestionTemplateRawData     *NewQuestionTemplateRawData     `json:\"new_question_template_raw_data,omitempty\"`",
          "17: }",
          "19: func CreateNewQuestionNotificationMsg(questionID, questionTitle string, tags []*entity.Tag) *ExternalNotificationMsg {",
          "20:  questionID = uid.DeShortID(questionID)",
          "21:  msg := &ExternalNotificationMsg{",
          "22:   NewQuestionTemplateRawData: &NewQuestionTemplateRawData{",
          "23:    QuestionID:    questionID,",
          "24:    QuestionTitle: questionTitle,",
          "25:   },",
          "26:  }",
          "27:  for _, tag := range tags {",
          "28:   msg.NewQuestionTemplateRawData.Tags = append(msg.NewQuestionTemplateRawData.Tags, tag.SlugName)",
          "29:   msg.NewQuestionTemplateRawData.TagIDs = append(msg.NewQuestionTemplateRawData.TagIDs, tag.ID)",
          "30:  }",
          "31:  return msg",
          "32: }",
          "",
          "---------------"
        ],
        "internal/schema/user_notification_schema.go||internal/schema/user_notification_schema.go": [
          "File: internal/schema/user_notification_schema.go -> internal/schema/user_notification_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"encoding/json\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6: )",
          "8: type NotificationChannelConfig struct {",
          "11: }",
          "16:  if n == nil {",
          "18:   return",
          "19:  }",
          "22:  for _, item := range *n {",
          "23:   mapping[item.Key] = &NotificationChannelConfig{",
          "24:    Key:    item.Key,",
          "25:    Enable: item.Enable,",
          "26:   }",
          "27:  }",
          "28:  for _, ch := range sequences {",
          "29:   if c, ok := mapping[ch]; ok {",
          "30:    newList = append(newList, c)",
          "",
          "[Removed Lines]",
          "9:  Key    constant.NotificationChannel `json:\"key\"`",
          "10:  Enable bool                         `json:\"enable\"`",
          "13: type NotificationChannelConfigList []*NotificationChannelConfig",
          "15: func (n *NotificationChannelConfigList) Format(sequences []constant.NotificationChannel) {",
          "20:  newList := make([]*NotificationChannelConfig, 0)",
          "21:  mapping := make(map[constant.NotificationChannel]*NotificationChannelConfig)",
          "",
          "[Added Lines]",
          "6:  \"github.com/answerdev/answer/internal/entity\"",
          "10:  Key    constant.NotificationChannelKey `json:\"key\"`",
          "11:  Enable bool                            `json:\"enable\"`",
          "14: type NotificationChannels []*NotificationChannelConfig",
          "16: func NewNotificationChannelsFormJson(jsonStr string) NotificationChannels {",
          "17:  var list NotificationChannels",
          "18:  _ = json.Unmarshal([]byte(jsonStr), &list)",
          "19:  return list",
          "20: }",
          "22: func (n *NotificationChannels) Format(sequences []constant.NotificationChannelKey) {",
          "27:  mapping := make(map[constant.NotificationChannelKey]*NotificationChannelConfig)",
          "34:  newList := make([]*NotificationChannelConfig, 0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: }",
          "41:  if n == nil {",
          "42:   return false",
          "43:  }",
          "",
          "[Removed Lines]",
          "40: func (n *NotificationChannelConfigList) CheckEnable(ch constant.NotificationChannel) bool {",
          "",
          "[Added Lines]",
          "47: func (n *NotificationChannels) CheckEnable(ch constant.NotificationChannelKey) bool {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:  return false",
          "50: }",
          "52: type NotificationConfig struct {",
          "56: }",
          "58: func (n *NotificationConfig) ToJsonString() string {",
          "",
          "[Removed Lines]",
          "53:  Inbox                          NotificationChannelConfigList `json:\"inbox\"`",
          "54:  AllNewQuestion                 NotificationChannelConfigList `json:\"all_new_question\"`",
          "55:  AllNewQuestionForFollowingTags NotificationChannelConfigList `json:\"all_new_question_for_following_tags\"`",
          "",
          "[Added Lines]",
          "59: func (n *NotificationChannels) ToJsonString() string {",
          "60:  data, _ := json.Marshal(n)",
          "61:  return string(data)",
          "62: }",
          "65:  Inbox                          NotificationChannels `json:\"inbox\"`",
          "66:  AllNewQuestion                 NotificationChannels `json:\"all_new_question\"`",
          "67:  AllNewQuestionForFollowingTags NotificationChannels `json:\"all_new_question_for_following_tags\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "60:  return string(data)",
          "61: }",
          "66:  return nc",
          "67: }",
          "",
          "[Removed Lines]",
          "63: func NewNotificationConfig(data string) *NotificationConfig {",
          "64:  nc := &NotificationConfig{}",
          "65:  nc.FromJsonString(data)",
          "",
          "[Added Lines]",
          "75: func NewNotificationConfig(configs []*entity.UserNotificationConfig) NotificationConfig {",
          "76:  nc := NotificationConfig{}",
          "77:  nc.Inbox = make([]*NotificationChannelConfig, 0)",
          "78:  nc.AllNewQuestion = make([]*NotificationChannelConfig, 0)",
          "79:  nc.AllNewQuestionForFollowingTags = make([]*NotificationChannelConfig, 0)",
          "80:  for _, item := range configs {",
          "81:   switch item.Source {",
          "82:   case string(constant.InboxSource):",
          "83:    nc.Inbox = NewNotificationChannelsFormJson(item.Channels)",
          "84:   case string(constant.AllNewQuestionSource):",
          "85:    nc.AllNewQuestion = NewNotificationChannelsFormJson(item.Channels)",
          "86:   case string(constant.AllNewQuestionForFollowingTagsSource):",
          "87:    nc.AllNewQuestionForFollowingTags = NewNotificationChannelsFormJson(item.Channels)",
          "88:   }",
          "89:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "78: }",
          "80: func (n *NotificationConfig) Format() {",
          "84: }",
          "86: func (n *NotificationConfig) CheckEnable(",
          "88:  switch source {",
          "90:   return n.Inbox.CheckEnable(channel)",
          "92:   return n.AllNewQuestion.CheckEnable(channel)",
          "94:   return n.AllNewQuestionForFollowingTags.CheckEnable(channel)",
          "95:  }",
          "96:  return false",
          "",
          "[Removed Lines]",
          "81:  n.Inbox.Format([]constant.NotificationChannel{constant.EmailChannel})",
          "82:  n.AllNewQuestion.Format([]constant.NotificationChannel{constant.EmailChannel})",
          "83:  n.AllNewQuestionForFollowingTags.Format([]constant.NotificationChannel{constant.EmailChannel})",
          "87:  source constant.NotificationSource, channel constant.NotificationChannel) bool {",
          "89:  case constant.InboxChannel:",
          "91:  case constant.AllNewQuestionChannel:",
          "93:  case constant.AllNewQuestionForFollowingTagsChannel:",
          "",
          "[Added Lines]",
          "105:  n.Inbox.Format([]constant.NotificationChannelKey{constant.EmailChannel})",
          "106:  n.AllNewQuestion.Format([]constant.NotificationChannelKey{constant.EmailChannel})",
          "107:  n.AllNewQuestionForFollowingTags.Format([]constant.NotificationChannelKey{constant.EmailChannel})",
          "111:  source constant.NotificationSource, channel constant.NotificationChannelKey) bool {",
          "113:  case constant.InboxSource:",
          "115:  case constant.AllNewQuestionSource:",
          "117:  case constant.AllNewQuestionForFollowingTagsSource:",
          "",
          "---------------"
        ],
        "internal/schema/user_schema.go||internal/schema/user_schema.go": [
          "File: internal/schema/user_schema.go -> internal/schema/user_schema.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:  Avatar string `json:\"avatar\"`",
          "365: }",
          "369:  Code    string `validate:\"required,gt=0,lte=500\" json:\"code\"`",
          "370:  Content string `json:\"-\"`",
          "371: }",
          "",
          "[Removed Lines]",
          "368: type UserUnsubscribeEmailNotificationReq struct {",
          "",
          "[Added Lines]",
          "368: type UserUnsubscribeNotificationReq struct {",
          "",
          "---------------"
        ],
        "internal/service/answer_service.go||internal/service/answer_service.go": [
          "File: internal/service/answer_service.go -> internal/service/answer_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"github.com/answerdev/answer/pkg/encryption\"",
          "26:  \"github.com/answerdev/answer/pkg/uid\"",
          "27:  \"github.com/segmentfault/pacman/errors\"",
          "29:  \"github.com/segmentfault/pacman/log\"",
          "30: )",
          "33: type AnswerService struct {",
          "48: }",
          "50: func NewAnswerService(",
          "",
          "[Removed Lines]",
          "28:  \"github.com/segmentfault/pacman/i18n\"",
          "34:  answerRepo               answercommon.AnswerRepo",
          "35:  questionRepo             questioncommon.QuestionRepo",
          "36:  questionCommon           *questioncommon.QuestionCommon",
          "37:  answerActivityService    *activity.AnswerActivityService",
          "38:  userCommon               *usercommon.UserCommon",
          "39:  collectionCommon         *collectioncommon.CollectionCommon",
          "40:  userRepo                 usercommon.UserRepo",
          "41:  revisionService          *revision_common.RevisionService",
          "42:  AnswerCommon             *answercommon.AnswerCommon",
          "43:  voteRepo                 activity_common.VoteRepo",
          "44:  emailService             *export.EmailService",
          "45:  roleService              *role.UserRoleRelService",
          "46:  notificationQueueService notice_queue.NotificationQueueService",
          "47:  activityQueueService     activity_queue.ActivityQueueService",
          "",
          "[Added Lines]",
          "33:  answerRepo                       answercommon.AnswerRepo",
          "34:  questionRepo                     questioncommon.QuestionRepo",
          "35:  questionCommon                   *questioncommon.QuestionCommon",
          "36:  answerActivityService            *activity.AnswerActivityService",
          "37:  userCommon                       *usercommon.UserCommon",
          "38:  collectionCommon                 *collectioncommon.CollectionCommon",
          "39:  userRepo                         usercommon.UserRepo",
          "40:  revisionService                  *revision_common.RevisionService",
          "41:  AnswerCommon                     *answercommon.AnswerCommon",
          "42:  voteRepo                         activity_common.VoteRepo",
          "43:  emailService                     *export.EmailService",
          "44:  roleService                      *role.UserRoleRelService",
          "45:  notificationQueueService         notice_queue.NotificationQueueService",
          "46:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService",
          "47:  activityQueueService             activity_queue.ActivityQueueService",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:  emailService *export.EmailService,",
          "62:  roleService *role.UserRoleRelService,",
          "63:  notificationQueueService notice_queue.NotificationQueueService,",
          "64:  activityQueueService activity_queue.ActivityQueueService,",
          "65: ) *AnswerService {",
          "66:  return &AnswerService{",
          "81:  }",
          "82: }",
          "",
          "[Removed Lines]",
          "67:   answerRepo:               answerRepo,",
          "68:   questionRepo:             questionRepo,",
          "69:   userCommon:               userCommon,",
          "70:   collectionCommon:         collectionCommon,",
          "71:   questionCommon:           questionCommon,",
          "72:   userRepo:                 userRepo,",
          "73:   revisionService:          revisionService,",
          "74:   answerActivityService:    answerAcceptActivityRepo,",
          "75:   AnswerCommon:             answerCommon,",
          "76:   voteRepo:                 voteRepo,",
          "77:   emailService:             emailService,",
          "78:   roleService:              roleService,",
          "79:   notificationQueueService: notificationQueueService,",
          "80:   activityQueueService:     activityQueueService,",
          "",
          "[Added Lines]",
          "64:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService,",
          "68:   answerRepo:                       answerRepo,",
          "69:   questionRepo:                     questionRepo,",
          "70:   userCommon:                       userCommon,",
          "71:   collectionCommon:                 collectionCommon,",
          "72:   questionCommon:                   questionCommon,",
          "73:   userRepo:                         userRepo,",
          "74:   revisionService:                  revisionService,",
          "75:   answerActivityService:            answerAcceptActivityRepo,",
          "76:   AnswerCommon:                     answerCommon,",
          "77:   voteRepo:                         voteRepo,",
          "78:   emailService:                     emailService,",
          "79:   roleService:                      roleService,",
          "80:   notificationQueueService:         notificationQueueService,",
          "81:   externalNotificationQueueService: externalNotificationQueueService,",
          "82:   activityQueueService:             activityQueueService,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "604:  msg.NotificationAction = constant.NotificationAnswerTheQuestion",
          "605:  as.notificationQueueService.Send(ctx, msg)",
          "608:  if err != nil {",
          "609:   log.Error(err)",
          "610:   return",
          "",
          "[Removed Lines]",
          "607:  userInfo, exist, err := as.userRepo.GetByUserID(ctx, questionUserID)",
          "",
          "[Added Lines]",
          "609:  receiverUserInfo, exist, err := as.userRepo.GetByUserID(ctx, questionUserID)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "613:   log.Warnf(\"user %s not found\", questionUserID)",
          "614:   return",
          "615:  }",
          "621:  rawData := &schema.NewAnswerTemplateRawData{",
          "622:   QuestionTitle:   questionTitle,",
          "623:   QuestionID:      questionID,",
          "624:   AnswerID:        answerID,",
          "625:   AnswerSummary:   answerSummary,",
          "627:  }",
          "628:  answerUser, _, _ := as.userCommon.GetUserBasicInfoByID(ctx, answerUserID)",
          "629:  if answerUser != nil {",
          "630:   rawData.AnswerUserDisplayName = answerUser.DisplayName",
          "631:  }",
          "650: }",
          "",
          "[Removed Lines]",
          "616:  if len(userInfo.EMail) == 0 ||",
          "617:   schema.NewNotificationConfig(userInfo.NoticeConfig).CheckEnable(constant.InboxChannel, constant.EmailChannel) {",
          "618:   return",
          "619:  }",
          "626:   UnsubscribeCode: encryption.MD5(userInfo.Pass),",
          "632:  codeContent := &schema.EmailCodeContent{",
          "633:   SourceType: schema.UnsubscribeSourceType,",
          "634:   Email:      userInfo.EMail,",
          "635:   UserID:     userInfo.ID,",
          "636:  }",
          "639:  if len(userInfo.Language) > 0 {",
          "640:   ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(userInfo.Language))",
          "641:  }",
          "642:  title, body, err := as.emailService.NewAnswerTemplate(ctx, rawData)",
          "643:  if err != nil {",
          "644:   log.Error(err)",
          "645:   return",
          "646:  }",
          "648:  go as.emailService.SendAndSaveCodeWithTime(",
          "649:   ctx, userInfo.EMail, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 7*24*time.Hour)",
          "",
          "[Added Lines]",
          "619:  externalNotificationMsg := &schema.ExternalNotificationMsg{",
          "620:   ReceiverUserID: receiverUserInfo.ID,",
          "621:   ReceiverEmail:  receiverUserInfo.EMail,",
          "622:   ReceiverLang:   receiverUserInfo.Language,",
          "623:  }",
          "629:   UnsubscribeCode: encryption.MD5(receiverUserInfo.Pass),",
          "635:  externalNotificationMsg.NewAnswerTemplateRawData = rawData",
          "636:  as.externalNotificationQueueService.Send(ctx, externalNotificationMsg)",
          "",
          "---------------"
        ],
        "internal/service/comment/comment_service.go||internal/service/comment/comment_service.go": [
          "File: internal/service/comment/comment_service.go -> internal/service/comment/comment_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:  \"github.com/answerdev/answer/pkg/uid\"",
          "23:  \"github.com/jinzhu/copier\"",
          "24:  \"github.com/segmentfault/pacman/errors\"",
          "26:  \"github.com/segmentfault/pacman/log\"",
          "27: )",
          "",
          "[Removed Lines]",
          "25:  \"github.com/segmentfault/pacman/i18n\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: type CommentService struct {",
          "70: }",
          "",
          "[Removed Lines]",
          "61:  commentRepo              CommentRepo",
          "62:  commentCommonRepo        comment_common.CommentCommonRepo",
          "63:  userCommon               *usercommon.UserCommon",
          "64:  voteCommon               activity_common.VoteRepo",
          "65:  objectInfoService        *object_info.ObjService",
          "66:  emailService             *export.EmailService",
          "67:  userRepo                 usercommon.UserRepo",
          "68:  notificationQueueService notice_queue.NotificationQueueService",
          "69:  activityQueueService     activity_queue.ActivityQueueService",
          "",
          "[Added Lines]",
          "60:  commentRepo                      CommentRepo",
          "61:  commentCommonRepo                comment_common.CommentCommonRepo",
          "62:  userCommon                       *usercommon.UserCommon",
          "63:  voteCommon                       activity_common.VoteRepo",
          "64:  objectInfoService                *object_info.ObjService",
          "65:  emailService                     *export.EmailService",
          "66:  userRepo                         usercommon.UserRepo",
          "67:  notificationQueueService         notice_queue.NotificationQueueService",
          "68:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService",
          "69:  activityQueueService             activity_queue.ActivityQueueService",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:  emailService *export.EmailService,",
          "80:  userRepo usercommon.UserRepo,",
          "81:  notificationQueueService notice_queue.NotificationQueueService,",
          "82:  activityQueueService activity_queue.ActivityQueueService,",
          "83: ) *CommentService {",
          "84:  return &CommentService{",
          "94:  }",
          "95: }",
          "",
          "[Removed Lines]",
          "85:   commentRepo:              commentRepo,",
          "86:   commentCommonRepo:        commentCommonRepo,",
          "87:   userCommon:               userCommon,",
          "88:   voteCommon:               voteCommon,",
          "89:   objectInfoService:        objectInfoService,",
          "90:   emailService:             emailService,",
          "91:   userRepo:                 userRepo,",
          "92:   notificationQueueService: notificationQueueService,",
          "93:   activityQueueService:     activityQueueService,",
          "",
          "[Added Lines]",
          "82:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService,",
          "86:   commentRepo:                      commentRepo,",
          "87:   commentCommonRepo:                commentCommonRepo,",
          "88:   userCommon:                       userCommon,",
          "89:   voteCommon:                       voteCommon,",
          "90:   objectInfoService:                objectInfoService,",
          "91:   emailService:                     emailService,",
          "92:   userRepo:                         userRepo,",
          "93:   notificationQueueService:         notificationQueueService,",
          "94:   externalNotificationQueueService: externalNotificationQueueService,",
          "95:   activityQueueService:             activityQueueService,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "493:   log.Warnf(\"user %s not found\", questionUserID)",
          "494:   return",
          "495:  }",
          "502:  rawData := &schema.NewCommentTemplateRawData{",
          "503:   QuestionTitle:   questionTitle,",
          "504:   QuestionID:      questionID,",
          "",
          "[Removed Lines]",
          "496:  if len(receiverUserInfo.EMail) == 0 ||",
          "497:   schema.NewNotificationConfig(receiverUserInfo.NoticeConfig).",
          "498:    CheckEnable(constant.InboxChannel, constant.EmailChannel) {",
          "499:   return",
          "500:  }",
          "",
          "[Added Lines]",
          "501:  externalNotificationMsg := &schema.ExternalNotificationMsg{",
          "502:   ReceiverUserID: receiverUserInfo.ID,",
          "503:   ReceiverEmail:  receiverUserInfo.EMail,",
          "504:   ReceiverLang:   receiverUserInfo.Language,",
          "505:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "510:  if commentUser != nil {",
          "511:   rawData.CommentUserDisplayName = commentUser.DisplayName",
          "512:  }",
          "531: }",
          "533: func (cs *CommentService) notificationAnswerComment(ctx context.Context,",
          "",
          "[Removed Lines]",
          "513:  codeContent := &schema.EmailCodeContent{",
          "514:   SourceType: schema.UnsubscribeSourceType,",
          "515:   Email:      receiverUserInfo.EMail,",
          "516:   UserID:     receiverUserInfo.ID,",
          "517:  }",
          "520:  if len(receiverUserInfo.Language) > 0 {",
          "521:   ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(receiverUserInfo.Language))",
          "522:  }",
          "523:  title, body, err := cs.emailService.NewCommentTemplate(ctx, rawData)",
          "524:  if err != nil {",
          "525:   log.Error(err)",
          "526:   return",
          "527:  }",
          "529:  go cs.emailService.SendAndSaveCodeWithTime(",
          "530:   ctx, receiverUserInfo.EMail, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 7*24*time.Hour)",
          "",
          "[Added Lines]",
          "517:  externalNotificationMsg.NewCommentTemplateRawData = rawData",
          "518:  cs.externalNotificationQueueService.Send(ctx, externalNotificationMsg)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "554:   log.Warnf(\"user %s not found\", answerUserID)",
          "555:   return",
          "556:  }",
          "561:  }",
          "563:  rawData := &schema.NewCommentTemplateRawData{",
          "564:   QuestionTitle:   questionTitle,",
          "565:   QuestionID:      questionID,",
          "",
          "[Removed Lines]",
          "557:  if len(receiverUserInfo.EMail) == 0 ||",
          "558:   schema.NewNotificationConfig(receiverUserInfo.NoticeConfig).",
          "559:    CheckEnable(constant.InboxChannel, constant.EmailChannel) {",
          "560:   return",
          "",
          "[Added Lines]",
          "548:  externalNotificationMsg := &schema.ExternalNotificationMsg{",
          "549:   ReceiverUserID: receiverUserInfo.ID,",
          "550:   ReceiverEmail:  receiverUserInfo.EMail,",
          "551:   ReceiverLang:   receiverUserInfo.Language,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "572:  if commentUser != nil {",
          "573:   rawData.CommentUserDisplayName = commentUser.DisplayName",
          "574:  }",
          "593: }",
          "595: func (cs *CommentService) notificationCommentReply(ctx context.Context, replyUserID, commentID, commentUserID string) {",
          "",
          "[Removed Lines]",
          "575:  codeContent := &schema.EmailCodeContent{",
          "576:   SourceType: schema.UnsubscribeSourceType,",
          "577:   Email:      receiverUserInfo.EMail,",
          "578:   UserID:     receiverUserInfo.ID,",
          "579:  }",
          "582:  if len(receiverUserInfo.Language) > 0 {",
          "583:   ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(receiverUserInfo.Language))",
          "584:  }",
          "585:  title, body, err := cs.emailService.NewCommentTemplate(ctx, rawData)",
          "586:  if err != nil {",
          "587:   log.Error(err)",
          "588:   return",
          "589:  }",
          "591:  go cs.emailService.SendAndSaveCodeWithTime(",
          "592:   ctx, receiverUserInfo.EMail, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 7*24*time.Hour)",
          "",
          "[Added Lines]",
          "565:  externalNotificationMsg.NewCommentTemplateRawData = rawData",
          "566:  cs.externalNotificationQueueService.Send(ctx, externalNotificationMsg)",
          "",
          "---------------"
        ],
        "internal/service/export/email_service.go||internal/service/export/email_service.go": [
          "File: internal/service/export/email_service.go -> internal/service/export/email_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"fmt\"",
          "7:  \"mime\"",
          "8:  \"os\"",
          "9:  \"time\"",
          "11:  \"github.com/answerdev/answer/internal/base/constant\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149:  return content",
          "150: }",
          "153:  var (",
          "154:   siteType = \"general\"",
          "155:   siteInfo *entity.SiteInfo",
          "",
          "[Removed Lines]",
          "152: func (es *EmailService) GetSiteGeneral(ctx context.Context) (resp schema.SiteGeneralResp, err error) {",
          "",
          "[Added Lines]",
          "153: func (es *EmailService) getSiteGeneral(ctx context.Context) (resp schema.SiteGeneralResp, err error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "167: }",
          "169: func (es *EmailService) RegisterTemplate(ctx context.Context, registerUrl string) (title, body string, err error) {",
          "171:  if err != nil {",
          "172:   return",
          "173:  }",
          "",
          "[Removed Lines]",
          "170:  siteInfo, err := es.GetSiteGeneral(ctx)",
          "",
          "[Added Lines]",
          "171:  siteInfo, err := es.getSiteGeneral(ctx)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "183: }",
          "185: func (es *EmailService) PassResetTemplate(ctx context.Context, passResetUrl string) (title, body string, err error) {",
          "187:  if err != nil {",
          "188:   return",
          "189:  }",
          "",
          "[Removed Lines]",
          "186:  siteInfo, err := es.GetSiteGeneral(ctx)",
          "",
          "[Added Lines]",
          "187:  siteInfo, err := es.getSiteGeneral(ctx)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "197: }",
          "199: func (es *EmailService) ChangeEmailTemplate(ctx context.Context, changeEmailUrl string) (title, body string, err error) {",
          "201:  if err != nil {",
          "202:   return",
          "203:  }",
          "",
          "[Removed Lines]",
          "200:  siteInfo, err := es.GetSiteGeneral(ctx)",
          "",
          "[Added Lines]",
          "201:  siteInfo, err := es.getSiteGeneral(ctx)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "216: func (es *EmailService) TestTemplate(ctx context.Context) (title, body string, err error) {",
          "218:  if err != nil {",
          "219:   return",
          "220:  }",
          "",
          "[Removed Lines]",
          "217:  siteInfo, err := es.GetSiteGeneral(ctx)",
          "",
          "[Added Lines]",
          "218:  siteInfo, err := es.getSiteGeneral(ctx)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "230: func (es *EmailService) NewAnswerTemplate(ctx context.Context, raw *schema.NewAnswerTemplateRawData) (",
          "231:  title, body string, err error) {",
          "233:  if err != nil {",
          "234:   return",
          "235:  }",
          "",
          "[Removed Lines]",
          "232:  siteInfo, err := es.GetSiteGeneral(ctx)",
          "",
          "[Added Lines]",
          "233:  siteInfo, err := es.getSiteGeneral(ctx)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "252: func (es *EmailService) NewInviteAnswerTemplate(ctx context.Context, raw *schema.NewInviteAnswerTemplateRawData) (",
          "253:  title, body string, err error) {",
          "255:  if err != nil {",
          "256:   return",
          "257:  }",
          "",
          "[Removed Lines]",
          "254:  siteInfo, err := es.GetSiteGeneral(ctx)",
          "",
          "[Added Lines]",
          "255:  siteInfo, err := es.getSiteGeneral(ctx)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "273: func (es *EmailService) NewCommentTemplate(ctx context.Context, raw *schema.NewCommentTemplateRawData) (",
          "274:  title, body string, err error) {",
          "276:  if err != nil {",
          "277:   return",
          "278:  }",
          "",
          "[Removed Lines]",
          "275:  siteInfo, err := es.GetSiteGeneral(ctx)",
          "",
          "[Added Lines]",
          "276:  siteInfo, err := es.getSiteGeneral(ctx)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "297:  return title, body, nil",
          "298: }",
          "300: func (es *EmailService) GetEmailConfig(ctx context.Context) (ec *EmailConfig, err error) {",
          "301:  emailConf, err := es.configService.GetStringValue(ctx, \"email.config\")",
          "302:  if err != nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302: func (es *EmailService) NewQuestionTemplate(ctx context.Context, raw *schema.NewQuestionTemplateRawData) (",
          "303:  title, body string, err error) {",
          "304:  siteInfo, err := es.getSiteGeneral(ctx)",
          "305:  if err != nil {",
          "306:   return",
          "307:  }",
          "308:  templateData := &schema.NewQuestionTemplateData{",
          "309:   SiteName:       siteInfo.Name,",
          "310:   QuestionTitle:  raw.QuestionTitle,",
          "311:   Tags:           strings.Join(raw.Tags, \", \"),",
          "312:   UnsubscribeUrl: fmt.Sprintf(\"%s/users/unsubscribe?code=%s\", siteInfo.SiteUrl, raw.UnsubscribeCode),",
          "313:  }",
          "314:  templateData.QuestionUrl = fmt.Sprintf(\"%s/questions/%s\", siteInfo.SiteUrl, raw.QuestionID)",
          "316:  lang := handler.GetLangByCtx(ctx)",
          "317:  title = translator.TrWithData(lang, constant.EmailTplKeyNewQuestionTitle, templateData)",
          "318:  body = translator.TrWithData(lang, constant.EmailTplKeyNewQuestionBody, templateData)",
          "319:  return title, body, nil",
          "320: }",
          "",
          "---------------"
        ],
        "internal/service/notice_queue/external_notification_queue.go||internal/service/notice_queue/external_notification_queue.go": [
          "File: internal/service/notice_queue/external_notification_queue.go -> internal/service/notice_queue/external_notification_queue.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package notice_queue",
          "3: import (",
          "4:  \"context\"",
          "6:  \"github.com/answerdev/answer/internal/schema\"",
          "7:  \"github.com/segmentfault/pacman/log\"",
          "8: )",
          "10: type ExternalNotificationQueueService interface {",
          "11:  Send(ctx context.Context, msg *schema.ExternalNotificationMsg)",
          "12:  RegisterHandler(handler func(ctx context.Context, msg *schema.ExternalNotificationMsg) error)",
          "13: }",
          "15: type externalNotificationQueueService struct {",
          "16:  Queue   chan *schema.ExternalNotificationMsg",
          "17:  Handler func(ctx context.Context, msg *schema.ExternalNotificationMsg) error",
          "18: }",
          "20: func (ns *externalNotificationQueueService) Send(ctx context.Context, msg *schema.ExternalNotificationMsg) {",
          "21:  ns.Queue <- msg",
          "22: }",
          "24: func (ns *externalNotificationQueueService) RegisterHandler(",
          "25:  handler func(ctx context.Context, msg *schema.ExternalNotificationMsg) error) {",
          "26:  ns.Handler = handler",
          "27: }",
          "29: func (ns *externalNotificationQueueService) working() {",
          "30:  go func() {",
          "31:   for msg := range ns.Queue {",
          "32:    log.Debugf(\"received notification %+v\", msg)",
          "33:    if ns.Handler == nil {",
          "34:     log.Warnf(\"no handler for notification\")",
          "35:     continue",
          "36:    }",
          "37:    if err := ns.Handler(context.Background(), msg); err != nil {",
          "38:     log.Error(err)",
          "39:    }",
          "40:   }",
          "41:  }()",
          "42: }",
          "45: func NewNewQuestionNotificationQueueService() ExternalNotificationQueueService {",
          "46:  ns := &externalNotificationQueueService{}",
          "47:  ns.Queue = make(chan *schema.ExternalNotificationMsg, 128)",
          "48:  ns.working()",
          "49:  return ns",
          "50: }",
          "",
          "---------------"
        ],
        "internal/service/notification/external_notification.go||internal/service/notification/external_notification.go": [
          "File: internal/service/notification/external_notification.go -> internal/service/notification/external_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package notification",
          "3: import (",
          "4:  \"context\"",
          "5:  \"github.com/answerdev/answer/internal/base/data\"",
          "6:  \"github.com/answerdev/answer/internal/schema\"",
          "7:  \"github.com/answerdev/answer/internal/service/activity_common\"",
          "8:  \"github.com/answerdev/answer/internal/service/export\"",
          "9:  \"github.com/answerdev/answer/internal/service/notice_queue\"",
          "10:  usercommon \"github.com/answerdev/answer/internal/service/user_common\"",
          "11:  \"github.com/answerdev/answer/internal/service/user_notification_config\"",
          "12:  \"github.com/segmentfault/pacman/log\"",
          "13: )",
          "15: type ExternalNotificationService struct {",
          "16:  data                       *data.Data",
          "17:  userNotificationConfigRepo user_notification_config.UserNotificationConfigRepo",
          "18:  followRepo                 activity_common.FollowRepo",
          "19:  emailService               *export.EmailService",
          "20:  userRepo                   usercommon.UserRepo",
          "21:  notificationQueueService   notice_queue.ExternalNotificationQueueService",
          "22: }",
          "24: func NewExternalNotificationService(",
          "25:  userNotificationConfigRepo user_notification_config.UserNotificationConfigRepo,",
          "26:  followRepo activity_common.FollowRepo,",
          "27:  emailService *export.EmailService,",
          "28:  userRepo usercommon.UserRepo,",
          "29:  notificationQueueService notice_queue.ExternalNotificationQueueService,",
          "30: ) *ExternalNotificationService {",
          "31:  n := &ExternalNotificationService{",
          "32:   userNotificationConfigRepo: userNotificationConfigRepo,",
          "33:   followRepo:                 followRepo,",
          "34:   emailService:               emailService,",
          "35:   userRepo:                   userRepo,",
          "36:   notificationQueueService:   notificationQueueService,",
          "37:  }",
          "38:  notificationQueueService.RegisterHandler(n.Handler)",
          "39:  return n",
          "40: }",
          "42: func (ns *ExternalNotificationService) Handler(ctx context.Context, msg *schema.ExternalNotificationMsg) error {",
          "43:  log.Debugf(\"try to send external notification %+v\", msg)",
          "45:  if msg.NewQuestionTemplateRawData != nil {",
          "46:   return ns.handleNewQuestionNotification(ctx, msg)",
          "47:  }",
          "48:  if msg.NewCommentTemplateRawData != nil {",
          "49:   return ns.handleNewCommentNotification(ctx, msg)",
          "50:  }",
          "51:  if msg.NewAnswerTemplateRawData != nil {",
          "52:   return ns.handleNewAnswerNotification(ctx, msg)",
          "53:  }",
          "54:  if msg.NewInviteAnswerTemplateRawData != nil {",
          "55:   return ns.handleInviteAnswerNotification(ctx, msg)",
          "56:  }",
          "57:  log.Errorf(\"unknown notification message: %+v\", msg)",
          "58:  return nil",
          "59: }",
          "",
          "---------------"
        ],
        "internal/service/notification/invite_answer_notification.go||internal/service/notification/invite_answer_notification.go": [
          "File: internal/service/notification/invite_answer_notification.go -> internal/service/notification/invite_answer_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package notification",
          "3: import (",
          "4:  \"context\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6:  \"github.com/answerdev/answer/internal/schema\"",
          "7:  \"github.com/segmentfault/pacman/i18n\"",
          "8:  \"github.com/segmentfault/pacman/log\"",
          "9:  \"time\"",
          "10: )",
          "12: func (ns *ExternalNotificationService) handleInviteAnswerNotification(ctx context.Context,",
          "13:  msg *schema.ExternalNotificationMsg) error {",
          "14:  log.Debugf(\"try to send invite answer notification %+v\", msg)",
          "16:  notificationConfig, exist, err := ns.userNotificationConfigRepo.GetByUserIDAndSource(ctx, msg.ReceiverUserID, constant.InboxSource)",
          "17:  if err != nil {",
          "18:   return err",
          "19:  }",
          "20:  if !exist {",
          "21:   return nil",
          "22:  }",
          "23:  channels := schema.NewNotificationChannelsFormJson(notificationConfig.Channels)",
          "24:  for _, channel := range channels {",
          "25:   if !channel.Enable {",
          "26:    continue",
          "27:   }",
          "28:   switch channel.Key {",
          "29:   case constant.EmailChannel:",
          "30:    ns.sendInviteAnswerNotificationEmail(ctx, msg.ReceiverUserID, msg.ReceiverEmail, msg.ReceiverLang, msg.NewInviteAnswerTemplateRawData)",
          "31:   }",
          "32:  }",
          "33:  return nil",
          "34: }",
          "36: func (ns *ExternalNotificationService) sendInviteAnswerNotificationEmail(ctx context.Context,",
          "37:  userID, email, lang string, rawData *schema.NewInviteAnswerTemplateRawData) {",
          "38:  codeContent := &schema.EmailCodeContent{",
          "39:   SourceType: schema.UnsubscribeSourceType,",
          "40:   NotificationSources: []constant.NotificationSource{",
          "41:    constant.InboxSource,",
          "42:   },",
          "43:   Email:  email,",
          "44:   UserID: userID,",
          "45:  }",
          "48:  if len(lang) > 0 {",
          "49:   ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(lang))",
          "50:  }",
          "51:  title, body, err := ns.emailService.NewInviteAnswerTemplate(ctx, rawData)",
          "52:  if err != nil {",
          "53:   log.Error(err)",
          "54:   return",
          "55:  }",
          "57:  ns.emailService.SendAndSaveCodeWithTime(",
          "58:   ctx, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
          "59: }",
          "",
          "---------------"
        ],
        "internal/service/notification/new_answer_notification.go||internal/service/notification/new_answer_notification.go": [
          "File: internal/service/notification/new_answer_notification.go -> internal/service/notification/new_answer_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package notification",
          "3: import (",
          "4:  \"context\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6:  \"github.com/answerdev/answer/internal/schema\"",
          "7:  \"github.com/segmentfault/pacman/i18n\"",
          "8:  \"github.com/segmentfault/pacman/log\"",
          "9:  \"time\"",
          "10: )",
          "12: func (ns *ExternalNotificationService) handleNewAnswerNotification(ctx context.Context,",
          "13:  msg *schema.ExternalNotificationMsg) error {",
          "14:  log.Debugf(\"try to send new comment notification %+v\", msg)",
          "16:  notificationConfig, exist, err := ns.userNotificationConfigRepo.GetByUserIDAndSource(ctx, msg.ReceiverUserID, constant.InboxSource)",
          "17:  if err != nil {",
          "18:   return err",
          "19:  }",
          "20:  if !exist {",
          "21:   return nil",
          "22:  }",
          "23:  channels := schema.NewNotificationChannelsFormJson(notificationConfig.Channels)",
          "24:  for _, channel := range channels {",
          "25:   if !channel.Enable {",
          "26:    continue",
          "27:   }",
          "28:   switch channel.Key {",
          "29:   case constant.EmailChannel:",
          "30:    ns.sendNewAnswerNotificationEmail(ctx, msg.ReceiverUserID, msg.ReceiverEmail, msg.ReceiverLang, msg.NewAnswerTemplateRawData)",
          "31:   }",
          "32:  }",
          "33:  return nil",
          "34: }",
          "36: func (ns *ExternalNotificationService) sendNewAnswerNotificationEmail(ctx context.Context,",
          "37:  userID, email, lang string, rawData *schema.NewAnswerTemplateRawData) {",
          "38:  codeContent := &schema.EmailCodeContent{",
          "39:   SourceType: schema.UnsubscribeSourceType,",
          "40:   NotificationSources: []constant.NotificationSource{",
          "41:    constant.InboxSource,",
          "42:   },",
          "43:   Email:  email,",
          "44:   UserID: userID,",
          "45:  }",
          "48:  if len(lang) > 0 {",
          "49:   ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(lang))",
          "50:  }",
          "51:  title, body, err := ns.emailService.NewAnswerTemplate(ctx, rawData)",
          "52:  if err != nil {",
          "53:   log.Error(err)",
          "54:   return",
          "55:  }",
          "57:  ns.emailService.SendAndSaveCodeWithTime(",
          "58:   ctx, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
          "59: }",
          "",
          "---------------"
        ],
        "internal/service/notification/new_comment_notification.go||internal/service/notification/new_comment_notification.go": [
          "File: internal/service/notification/new_comment_notification.go -> internal/service/notification/new_comment_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package notification",
          "3: import (",
          "4:  \"context\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6:  \"github.com/answerdev/answer/internal/schema\"",
          "7:  \"github.com/segmentfault/pacman/i18n\"",
          "8:  \"github.com/segmentfault/pacman/log\"",
          "9:  \"time\"",
          "10: )",
          "12: func (ns *ExternalNotificationService) handleNewCommentNotification(ctx context.Context,",
          "13:  msg *schema.ExternalNotificationMsg) error {",
          "14:  log.Debugf(\"try to send new comment notification %+v\", msg)",
          "16:  notificationConfig, exist, err := ns.userNotificationConfigRepo.GetByUserIDAndSource(ctx, msg.ReceiverUserID, constant.InboxSource)",
          "17:  if err != nil {",
          "18:   return err",
          "19:  }",
          "20:  if !exist {",
          "21:   return nil",
          "22:  }",
          "23:  channels := schema.NewNotificationChannelsFormJson(notificationConfig.Channels)",
          "24:  for _, channel := range channels {",
          "25:   if !channel.Enable {",
          "26:    continue",
          "27:   }",
          "28:   switch channel.Key {",
          "29:   case constant.EmailChannel:",
          "30:    ns.sendNewCommentNotificationEmail(ctx, msg.ReceiverUserID, msg.ReceiverEmail, msg.ReceiverLang, msg.NewCommentTemplateRawData)",
          "31:   }",
          "32:  }",
          "34:  return nil",
          "35: }",
          "37: func (ns *ExternalNotificationService) sendNewCommentNotificationEmail(ctx context.Context,",
          "38:  userID, email, lang string, rawData *schema.NewCommentTemplateRawData) {",
          "39:  codeContent := &schema.EmailCodeContent{",
          "40:   SourceType: schema.UnsubscribeSourceType,",
          "41:   NotificationSources: []constant.NotificationSource{",
          "42:    constant.InboxSource,",
          "43:   },",
          "44:   Email:  email,",
          "45:   UserID: userID,",
          "46:  }",
          "48:  if len(lang) > 0 {",
          "49:   ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(lang))",
          "50:  }",
          "51:  title, body, err := ns.emailService.NewCommentTemplate(ctx, rawData)",
          "52:  if err != nil {",
          "53:   log.Error(err)",
          "54:   return",
          "55:  }",
          "57:  ns.emailService.SendAndSaveCodeWithTime(",
          "58:   ctx, email, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
          "59: }",
          "",
          "---------------"
        ],
        "internal/service/notification/new_question_notification.go||internal/service/notification/new_question_notification.go": [
          "File: internal/service/notification/new_question_notification.go -> internal/service/notification/new_question_notification.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package notification",
          "3: import (",
          "4:  \"context\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6:  \"github.com/answerdev/answer/internal/schema\"",
          "7:  \"github.com/segmentfault/pacman/i18n\"",
          "8:  \"github.com/segmentfault/pacman/log\"",
          "9:  \"time\"",
          "10: )",
          "12: type NewQuestionSubscriber struct {",
          "13:  UserID   string                      `json:\"user_id\"`",
          "14:  Channels schema.NotificationChannels `json:\"channels\"`",
          "15: }",
          "17: func (ns *ExternalNotificationService) handleNewQuestionNotification(ctx context.Context,",
          "18:  msg *schema.ExternalNotificationMsg) error {",
          "19:  log.Debugf(\"try to send new question notification %+v\", msg)",
          "20:  subscribers, err := ns.getNewQuestionSubscribers(ctx, msg)",
          "21:  if err != nil {",
          "22:   return err",
          "23:  }",
          "24:  log.Debugf(\"get subscribers %d for question %s\", len(subscribers), msg.NewQuestionTemplateRawData.QuestionID)",
          "26:  for _, subscriber := range subscribers {",
          "27:   for _, channel := range subscriber.Channels {",
          "28:    if !channel.Enable {",
          "29:     continue",
          "30:    }",
          "31:    switch channel.Key {",
          "32:    case constant.EmailChannel:",
          "33:     ns.sendNewQuestionNotificationEmail(ctx, subscriber.UserID, &schema.NewQuestionTemplateRawData{",
          "34:      QuestionTitle: msg.NewQuestionTemplateRawData.QuestionTitle,",
          "35:      QuestionID:    msg.NewQuestionTemplateRawData.QuestionID,",
          "36:      Tags:          msg.NewQuestionTemplateRawData.Tags,",
          "37:     })",
          "38:    }",
          "39:   }",
          "40:  }",
          "41:  return nil",
          "42: }",
          "44: func (ns *ExternalNotificationService) getNewQuestionSubscribers(ctx context.Context, msg *schema.ExternalNotificationMsg) (",
          "45:  subscribers []*NewQuestionSubscriber, err error) {",
          "46:  subscribersMapping := make(map[string]*NewQuestionSubscriber)",
          "49:  tagsFollowerIDs := make([]string, 0)",
          "50:  followerMapping := make(map[string]bool)",
          "51:  for _, tagID := range msg.NewQuestionTemplateRawData.TagIDs {",
          "52:   userIDs, err := ns.followRepo.GetFollowUserIDs(ctx, tagID)",
          "53:   if err != nil {",
          "54:    log.Error(err)",
          "55:    continue",
          "56:   }",
          "57:   for _, userID := range userIDs {",
          "58:    if _, ok := followerMapping[userID]; ok {",
          "59:     continue",
          "60:    }",
          "61:    followerMapping[userID] = true",
          "62:    tagsFollowerIDs = append(tagsFollowerIDs, userID)",
          "63:   }",
          "64:  }",
          "65:  userNotificationConfigs, err := ns.userNotificationConfigRepo.GetByUsersAndSource(",
          "66:   ctx, tagsFollowerIDs, constant.AllNewQuestionForFollowingTagsSource)",
          "67:  if err != nil {",
          "68:   return nil, err",
          "69:  }",
          "70:  for _, userNotificationConfig := range userNotificationConfigs {",
          "71:   if _, ok := subscribersMapping[userNotificationConfig.UserID]; ok {",
          "72:    continue",
          "73:   }",
          "74:   subscribersMapping[userNotificationConfig.UserID] = &NewQuestionSubscriber{",
          "75:    UserID:   userNotificationConfig.UserID,",
          "76:    Channels: schema.NewNotificationChannelsFormJson(userNotificationConfig.Channels),",
          "77:   }",
          "78:   subscribers = append(subscribers, subscribersMapping[userNotificationConfig.UserID])",
          "79:  }",
          "80:  log.Debugf(\"get %d subscribers from tags\", len(subscribersMapping))",
          "83:  notificationConfigs, err := ns.userNotificationConfigRepo.GetBySource(ctx, constant.AllNewQuestionSource)",
          "84:  if err != nil {",
          "85:   return nil, err",
          "86:  }",
          "87:  for _, notificationConfig := range notificationConfigs {",
          "88:   if _, ok := subscribersMapping[notificationConfig.UserID]; ok {",
          "89:    continue",
          "90:   }",
          "91:   if ns.checkSendNewQuestionNotificationEmailLimit(ctx, notificationConfig.UserID) {",
          "92:    continue",
          "93:   }",
          "94:   subscribersMapping[notificationConfig.UserID] = &NewQuestionSubscriber{",
          "95:    UserID:   notificationConfig.UserID,",
          "96:    Channels: schema.NewNotificationChannelsFormJson(notificationConfig.Channels),",
          "97:   }",
          "98:   subscribers = append(subscribers, subscribersMapping[notificationConfig.UserID])",
          "99:  }",
          "100:  log.Debugf(\"get %d subscribers from all new question config\", len(subscribers))",
          "101:  return subscribers, nil",
          "102: }",
          "104: func (ns *ExternalNotificationService) checkSendNewQuestionNotificationEmailLimit(ctx context.Context, userID string) bool {",
          "106:  return false",
          "107: }",
          "109: func (ns *ExternalNotificationService) sendNewQuestionNotificationEmail(ctx context.Context,",
          "110:  userID string, rawData *schema.NewQuestionTemplateRawData) {",
          "111:  userInfo, exist, err := ns.userRepo.GetByUserID(ctx, userID)",
          "112:  if err != nil {",
          "113:   log.Error(err)",
          "114:   return",
          "115:  }",
          "116:  if !exist {",
          "117:   log.Errorf(\"user %s not exist\", userID)",
          "118:   return",
          "119:  }",
          "121:  if len(userInfo.Language) > 0 {",
          "122:   ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(userInfo.Language))",
          "123:  }",
          "124:  title, body, err := ns.emailService.NewQuestionTemplate(ctx, rawData)",
          "125:  if err != nil {",
          "126:   log.Error(err)",
          "127:   return",
          "128:  }",
          "130:  codeContent := &schema.EmailCodeContent{",
          "131:   SourceType: schema.UnsubscribeSourceType,",
          "132:   Email:      userInfo.EMail,",
          "133:   UserID:     userID,",
          "134:   NotificationSources: []constant.NotificationSource{",
          "135:    constant.AllNewQuestionSource,",
          "136:    constant.AllNewQuestionForFollowingTagsSource,",
          "137:   },",
          "138:  }",
          "139:  ns.emailService.SendAndSaveCodeWithTime(",
          "140:   ctx, userInfo.EMail, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 1*24*time.Hour)",
          "141: }",
          "",
          "---------------"
        ],
        "internal/service/provider.go||internal/service/provider.go": [
          "File: internal/service/provider.go -> internal/service/provider.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:  \"github.com/answerdev/answer/internal/service/user_admin\"",
          "38:  usercommon \"github.com/answerdev/answer/internal/service/user_common\"",
          "39:  \"github.com/answerdev/answer/internal/service/user_external_login\"",
          "40:  \"github.com/google/wire\"",
          "41: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:  \"github.com/answerdev/answer/internal/service/user_notification_config\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:  config.NewConfigService,",
          "91:  notice_queue.NewNotificationQueueService,",
          "92:  activity_queue.NewActivityQueueService,",
          "93: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:  user_notification_config.NewUserNotificationConfigService,",
          "95:  notification.NewExternalNotificationService,",
          "96:  notice_queue.NewNewQuestionNotificationQueueService,",
          "",
          "---------------"
        ],
        "internal/service/question_service.go||internal/service/question_service.go": [
          "File: internal/service/question_service.go -> internal/service/question_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"encoding/json\"",
          "5:  \"fmt\"",
          "6:  \"github.com/answerdev/answer/internal/service/siteinfo_common\"",
          "7:  \"strings\"",
          "8:  \"time\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"github.com/answerdev/answer/internal/service/notification\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:  \"github.com/answerdev/answer/pkg/uid\"",
          "33:  \"github.com/jinzhu/copier\"",
          "34:  \"github.com/segmentfault/pacman/errors\"",
          "36:  \"github.com/segmentfault/pacman/log\"",
          "37:  \"golang.org/x/net/context\"",
          "38: )",
          "",
          "[Removed Lines]",
          "35:  \"github.com/segmentfault/pacman/i18n\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43: type QuestionService struct {",
          "57: }",
          "59: func NewQuestionService(",
          "",
          "[Removed Lines]",
          "44:  questionRepo             questioncommon.QuestionRepo",
          "45:  tagCommon                *tagcommon.TagCommonService",
          "46:  questioncommon           *questioncommon.QuestionCommon",
          "47:  userCommon               *usercommon.UserCommon",
          "48:  userRepo                 usercommon.UserRepo",
          "49:  revisionService          *revision_common.RevisionService",
          "50:  metaService              *meta.MetaService",
          "51:  collectionCommon         *collectioncommon.CollectionCommon",
          "52:  answerActivityService    *activity.AnswerActivityService",
          "53:  emailService             *export.EmailService",
          "54:  notificationQueueService notice_queue.NotificationQueueService",
          "55:  activityQueueService     activity_queue.ActivityQueueService",
          "56:  siteInfoService          siteinfo_common.SiteInfoCommonService",
          "",
          "[Added Lines]",
          "44:  questionRepo                     questioncommon.QuestionRepo",
          "45:  tagCommon                        *tagcommon.TagCommonService",
          "46:  questioncommon                   *questioncommon.QuestionCommon",
          "47:  userCommon                       *usercommon.UserCommon",
          "48:  userRepo                         usercommon.UserRepo",
          "49:  revisionService                  *revision_common.RevisionService",
          "50:  metaService                      *meta.MetaService",
          "51:  collectionCommon                 *collectioncommon.CollectionCommon",
          "52:  answerActivityService            *activity.AnswerActivityService",
          "53:  emailService                     *export.EmailService",
          "54:  notificationQueueService         notice_queue.NotificationQueueService",
          "55:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService",
          "56:  activityQueueService             activity_queue.ActivityQueueService",
          "57:  siteInfoService                  siteinfo_common.SiteInfoCommonService",
          "58:  newQuestionNotificationService   *notification.ExternalNotificationService",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "68:  answerActivityService *activity.AnswerActivityService,",
          "69:  emailService *export.EmailService,",
          "70:  notificationQueueService notice_queue.NotificationQueueService,",
          "71:  activityQueueService activity_queue.ActivityQueueService,",
          "72:  siteInfoService siteinfo_common.SiteInfoCommonService,",
          "73: ) *QuestionService {",
          "74:  return &QuestionService{",
          "88:  }",
          "89: }",
          "",
          "[Removed Lines]",
          "75:   questionRepo:             questionRepo,",
          "76:   tagCommon:                tagCommon,",
          "77:   questioncommon:           questioncommon,",
          "78:   userCommon:               userCommon,",
          "79:   userRepo:                 userRepo,",
          "80:   revisionService:          revisionService,",
          "81:   metaService:              metaService,",
          "82:   collectionCommon:         collectionCommon,",
          "83:   answerActivityService:    answerActivityService,",
          "84:   emailService:             emailService,",
          "85:   notificationQueueService: notificationQueueService,",
          "86:   activityQueueService:     activityQueueService,",
          "87:   siteInfoService:          siteInfoService,",
          "",
          "[Added Lines]",
          "73:  externalNotificationQueueService notice_queue.ExternalNotificationQueueService,",
          "76:  newQuestionNotificationService *notification.ExternalNotificationService,",
          "79:   questionRepo:                     questionRepo,",
          "80:   tagCommon:                        tagCommon,",
          "81:   questioncommon:                   questioncommon,",
          "82:   userCommon:                       userCommon,",
          "83:   userRepo:                         userRepo,",
          "84:   revisionService:                  revisionService,",
          "85:   metaService:                      metaService,",
          "86:   collectionCommon:                 collectionCommon,",
          "87:   answerActivityService:            answerActivityService,",
          "88:   emailService:                     emailService,",
          "89:   notificationQueueService:         notificationQueueService,",
          "90:   externalNotificationQueueService: externalNotificationQueueService,",
          "91:   activityQueueService:             activityQueueService,",
          "92:   siteInfoService:                  siteInfoService,",
          "93:   newQuestionNotificationService:   newQuestionNotificationService,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "241:   tag.SlugName = strings.ReplaceAll(tag.SlugName, \" \", \"-\")",
          "242:   tagNameList = append(tagNameList, tag.SlugName)",
          "243:  }",
          "245:  if tagerr != nil {",
          "246:   return questionInfo, tagerr",
          "247:  }",
          "248:  if !req.QuestionPermission.CanUseReservedTag {",
          "250:   errMsg := fmt.Sprintf(`\"%s\" can only be used by moderators.`,",
          "251:    strings.Join(taglist, \",\"))",
          "252:   if err != nil {",
          "",
          "[Removed Lines]",
          "244:  Tags, tagerr := qs.tagCommon.GetTagListByNames(ctx, tagNameList)",
          "249:   taglist, err := qs.AddQuestionCheckTags(ctx, Tags)",
          "",
          "[Added Lines]",
          "250:  tags, tagerr := qs.tagCommon.GetTagListByNames(ctx, tagNameList)",
          "255:   taglist, err := qs.AddQuestionCheckTags(ctx, tags)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "296:   Title:    question.Title,",
          "297:  }",
          "300:  if err != nil {",
          "301:   return nil, err",
          "302:  }",
          "",
          "[Removed Lines]",
          "299:  questionWithTagsRevision, err := qs.changeQuestionToRevision(ctx, question, Tags)",
          "",
          "[Added Lines]",
          "305:  questionWithTagsRevision, err := qs.changeQuestionToRevision(ctx, question, tags)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "326:   RevisionID:       revisionID,",
          "327:  })",
          "329:  questionInfo, err = qs.GetQuestion(ctx, question.ID, question.UserID, req.QuestionPermission)",
          "330:  return",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "335:  qs.externalNotificationQueueService.Send(ctx,",
          "336:   schema.CreateNewQuestionNotificationMsg(question.ID, question.Title, tags))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "640:   msg.NotificationAction = constant.NotificationInvitedYouToAnswer",
          "641:   qs.notificationQueueService.Send(ctx, msg)",
          "644:   if !ok {",
          "645:    log.Warnf(\"user %s not found\", userID)",
          "646:    return",
          "647:   }",
          "652:   }",
          "654:   rawData := &schema.NewInviteAnswerTemplateRawData{",
          "655:    InviterDisplayName: inviter.DisplayName,",
          "656:    QuestionTitle:      questionTitle,",
          "657:    QuestionID:         questionID,",
          "664:   }",
          "678:  }",
          "679: }",
          "",
          "[Removed Lines]",
          "643:   userInfo, ok := invitee[userID]",
          "648:   if len(userInfo.EMail) == 0 ||",
          "649:    schema.NewNotificationConfig(userInfo.NoticeConfig).",
          "650:     CheckEnable(constant.InboxChannel, constant.EmailChannel) {",
          "651:    return",
          "658:    UnsubscribeCode:    encryption.MD5(userInfo.Pass),",
          "659:   }",
          "660:   codeContent := &schema.EmailCodeContent{",
          "661:    SourceType: schema.UnsubscribeSourceType,",
          "662:    Email:      userInfo.EMail,",
          "663:    UserID:     userInfo.ID,",
          "667:   if len(userInfo.Language) > 0 {",
          "668:    ctx = context.WithValue(ctx, constant.AcceptLanguageFlag, i18n.Language(userInfo.Language))",
          "669:   }",
          "670:   title, body, err := qs.emailService.NewInviteAnswerTemplate(ctx, rawData)",
          "671:   if err != nil {",
          "672:    log.Error(err)",
          "673:    return",
          "674:   }",
          "676:   go qs.emailService.SendAndSaveCodeWithTime(",
          "677:    ctx, userInfo.EMail, title, body, rawData.UnsubscribeCode, codeContent.ToJSONString(), 7*24*time.Hour)",
          "",
          "[Added Lines]",
          "652:   receiverUserInfo, ok := invitee[userID]",
          "657:   externalNotificationMsg := &schema.ExternalNotificationMsg{",
          "658:    ReceiverUserID: receiverUserInfo.ID,",
          "659:    ReceiverEmail:  receiverUserInfo.EMail,",
          "660:    ReceiverLang:   receiverUserInfo.Language,",
          "666:    UnsubscribeCode:    encryption.MD5(receiverUserInfo.Pass),",
          "668:   externalNotificationMsg.NewInviteAnswerTemplateRawData = rawData",
          "669:   qs.externalNotificationQueueService.Send(ctx, externalNotificationMsg)",
          "",
          "---------------"
        ],
        "internal/service/user_common/user.go||internal/service/user_common/user.go": [
          "File: internal/service/user_common/user.go -> internal/service/user_common/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  UpdateLastLoginDate(ctx context.Context, userID string) (err error)",
          "28:  UpdateEmailStatus(ctx context.Context, userID string, emailStatus int) error",
          "29:  UpdateNoticeStatus(ctx context.Context, userID string, noticeStatus int) error",
          "31:  UpdateEmail(ctx context.Context, userID, email string) error",
          "32:  UpdateLanguage(ctx context.Context, userID, language string) error",
          "33:  UpdatePass(ctx context.Context, userID, pass string) error",
          "",
          "[Removed Lines]",
          "30:  UpdateNoticeConfig(ctx context.Context, userID string, noticeConfig string) error",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/service/user_notification_config/user_notification_config_service.go||internal/service/user_notification_config/user_notification_config_service.go": [
          "File: internal/service/user_notification_config/user_notification_config_service.go -> internal/service/user_notification_config/user_notification_config_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package user_notification_config",
          "3: import (",
          "4:  \"context\"",
          "5:  \"github.com/answerdev/answer/internal/base/constant\"",
          "6:  \"github.com/answerdev/answer/internal/entity\"",
          "7:  \"github.com/answerdev/answer/internal/schema\"",
          "8:  usercommon \"github.com/answerdev/answer/internal/service/user_common\"",
          "9: )",
          "11: type UserNotificationConfigRepo interface {",
          "12:  Save(ctx context.Context, uc *entity.UserNotificationConfig) (err error)",
          "13:  GetByUserID(ctx context.Context, userID string) ([]*entity.UserNotificationConfig, error)",
          "14:  GetBySource(ctx context.Context, source constant.NotificationSource) ([]*entity.UserNotificationConfig, error)",
          "15:  GetByUserIDAndSource(ctx context.Context, userID string, source constant.NotificationSource) (",
          "16:   conf *entity.UserNotificationConfig, exist bool, err error)",
          "17:  GetByUsersAndSource(ctx context.Context, userIDs []string, source constant.NotificationSource) (",
          "18:   []*entity.UserNotificationConfig, error)",
          "19: }",
          "21: type UserNotificationConfigService struct {",
          "22:  userRepo                   usercommon.UserRepo",
          "23:  userNotificationConfigRepo UserNotificationConfigRepo",
          "24: }",
          "26: func NewUserNotificationConfigService(",
          "27:  userRepo usercommon.UserRepo,",
          "28:  userNotificationConfigRepo UserNotificationConfigRepo,",
          "29: ) *UserNotificationConfigService {",
          "30:  return &UserNotificationConfigService{",
          "31:   userRepo:                   userRepo,",
          "32:   userNotificationConfigRepo: userNotificationConfigRepo,",
          "33:  }",
          "34: }",
          "36: func (us *UserNotificationConfigService) GetUserNotificationConfig(ctx context.Context, userID string) (",
          "37:  resp *schema.GetUserNotificationConfigResp, err error) {",
          "38:  notificationConfigs, err := us.userNotificationConfigRepo.GetByUserID(ctx, userID)",
          "39:  if err != nil {",
          "40:   return nil, err",
          "41:  }",
          "42:  resp = &schema.GetUserNotificationConfigResp{}",
          "43:  resp.NotificationConfig = schema.NewNotificationConfig(notificationConfigs)",
          "44:  resp.Format()",
          "45:  return resp, nil",
          "46: }",
          "48: func (us *UserNotificationConfigService) UpdateUserNotificationConfig(",
          "49:  ctx context.Context, req *schema.UpdateUserNotificationConfigReq) (err error) {",
          "50:  req.NotificationConfig.Format()",
          "52:  err = us.userNotificationConfigRepo.Save(ctx,",
          "53:   us.convertToEntity(ctx, req.UserID, constant.InboxSource, req.NotificationConfig.Inbox))",
          "54:  if err != nil {",
          "55:   return err",
          "56:  }",
          "57:  err = us.userNotificationConfigRepo.Save(ctx,",
          "58:   us.convertToEntity(ctx, req.UserID, constant.AllNewQuestionSource, req.NotificationConfig.AllNewQuestion))",
          "59:  if err != nil {",
          "60:   return err",
          "61:  }",
          "62:  err = us.userNotificationConfigRepo.Save(ctx,",
          "63:   us.convertToEntity(ctx, req.UserID, constant.AllNewQuestionForFollowingTagsSource,",
          "64:    req.NotificationConfig.AllNewQuestionForFollowingTags))",
          "65:  if err != nil {",
          "66:   return err",
          "67:  }",
          "68:  return nil",
          "69: }",
          "71: func (us *UserNotificationConfigService) convertToEntity(ctx context.Context, userID string,",
          "72:  source constant.NotificationSource, channels schema.NotificationChannels) (c *entity.UserNotificationConfig) {",
          "73:  c = &entity.UserNotificationConfig{",
          "74:   UserID:   userID,",
          "75:   Source:   string(source),",
          "76:   Channels: channels.ToJsonString(),",
          "77:  }",
          "78:  for _, ch := range channels {",
          "79:   if ch.Enable {",
          "80:    c.Enabled = true",
          "81:    break",
          "82:   }",
          "83:  }",
          "84:  return c",
          "85: }",
          "87: func (us *UserNotificationConfigService) CheckEnable(",
          "88:  ctx context.Context, userID string, source constant.NotificationSource,",
          "89:  channel constant.NotificationChannelKey) (enable bool, err error) {",
          "90:  conf, exist, err := us.userNotificationConfigRepo.GetByUserIDAndSource(ctx, userID, source)",
          "91:  if err != nil {",
          "92:   return false, err",
          "93:  }",
          "94:  if !exist {",
          "95:   return false, nil",
          "96:  }",
          "97:  notificationChannels := schema.NewNotificationChannelsFormJson(conf.Channels)",
          "98:  return notificationChannels.CheckEnable(channel), nil",
          "99: }",
          "",
          "---------------"
        ],
        "internal/service/user_service.go||internal/service/user_service.go": [
          "File: internal/service/user_service.go -> internal/service/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/answerdev/answer/internal/base/handler\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"github.com/answerdev/answer/internal/base/constant\"",
          "8:  \"github.com/answerdev/answer/internal/service/user_notification_config\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: type UserService struct {",
          "42: }",
          "44: func NewUserService(userRepo usercommon.UserRepo,",
          "",
          "[Removed Lines]",
          "33:  userCommonService        *usercommon.UserCommon",
          "34:  userRepo                 usercommon.UserRepo",
          "35:  userActivity             activity.UserActiveActivityRepo",
          "36:  activityRepo             activity_common.ActivityRepo",
          "37:  emailService             *export.EmailService",
          "38:  authService              *auth.AuthService",
          "39:  siteInfoService          siteinfo_common.SiteInfoCommonService",
          "40:  userRoleService          *role.UserRoleRelService",
          "41:  userExternalLoginService *user_external_login.UserExternalLoginService",
          "",
          "[Added Lines]",
          "35:  userCommonService          *usercommon.UserCommon",
          "36:  userRepo                   usercommon.UserRepo",
          "37:  userActivity               activity.UserActiveActivityRepo",
          "38:  activityRepo               activity_common.ActivityRepo",
          "39:  emailService               *export.EmailService",
          "40:  authService                *auth.AuthService",
          "41:  siteInfoService            siteinfo_common.SiteInfoCommonService",
          "42:  userRoleService            *role.UserRoleRelService",
          "43:  userExternalLoginService   *user_external_login.UserExternalLoginService",
          "44:  userNotificationConfigRepo user_notification_config.UserNotificationConfigRepo",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:  userRoleService *role.UserRoleRelService,",
          "51:  userCommonService *usercommon.UserCommon,",
          "52:  userExternalLoginService *user_external_login.UserExternalLoginService,",
          "53: ) *UserService {",
          "54:  return &UserService{",
          "64:  }",
          "65: }",
          "",
          "[Removed Lines]",
          "55:   userCommonService:        userCommonService,",
          "56:   userRepo:                 userRepo,",
          "57:   userActivity:             userActivity,",
          "58:   activityRepo:             activityRepo,",
          "59:   emailService:             emailService,",
          "60:   authService:              authService,",
          "61:   siteInfoService:          siteInfoService,",
          "62:   userRoleService:          userRoleService,",
          "63:   userExternalLoginService: userExternalLoginService,",
          "",
          "[Added Lines]",
          "56:  userNotificationConfigRepo user_notification_config.UserNotificationConfigRepo,",
          "59:   userCommonService:          userCommonService,",
          "60:   userRepo:                   userRepo,",
          "61:   userActivity:               userActivity,",
          "62:   activityRepo:               activityRepo,",
          "63:   emailService:               emailService,",
          "64:   authService:                authService,",
          "65:   siteInfoService:            siteInfoService,",
          "66:   userRoleService:            userRoleService,",
          "67:   userExternalLoginService:   userExternalLoginService,",
          "68:   userNotificationConfigRepo: userNotificationConfigRepo,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "459:  return nil",
          "460: }",
          "489: func (us *UserService) UserVerifyEmail(ctx context.Context, req *schema.UserVerifyEmailReq) (resp *schema.UserLoginResp, err error) {",
          "490:  data := &schema.EmailCodeContent{}",
          "491:  err = data.FromJSONString(req.Content)",
          "",
          "[Removed Lines]",
          "462: func (us *UserService) GetUserNotificationConfig(ctx context.Context, userID string) (",
          "463:  resp *schema.GetUserNotificationConfigResp, err error) {",
          "464:  userInfo, exist, err := us.userRepo.GetByUserID(ctx, userID)",
          "465:  if err != nil {",
          "466:   return nil, err",
          "467:  }",
          "468:  if !exist {",
          "469:   return nil, errors.BadRequest(reason.UserNotFound)",
          "470:  }",
          "471:  resp = &schema.GetUserNotificationConfigResp{}",
          "472:  resp.FromJsonString(userInfo.NoticeConfig)",
          "473:  resp.Format()",
          "474:  return resp, nil",
          "475: }",
          "477: func (us *UserService) UpdateUserNotificationConfig(ctx context.Context, req *schema.UpdateUserNotificationConfigReq) (err error) {",
          "478:  _, exist, err := us.userRepo.GetByUserID(ctx, req.UserID)",
          "479:  if err != nil {",
          "480:   return err",
          "481:  }",
          "482:  if !exist {",
          "483:   return errors.BadRequest(reason.UserNotFound)",
          "484:  }",
          "485:  req.NotificationConfig.Format()",
          "486:  return us.userRepo.UpdateNoticeConfig(ctx, req.UserID, req.NotificationConfig.ToJsonString())",
          "487: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "717:  return us.warpStatRankingResp(userInfoMapping, rankStat, voteStat, userRoleRels), nil",
          "718: }",
          "723:  data := &schema.EmailCodeContent{}",
          "724:  err = data.FromJSONString(req.Content)",
          "725:  if err != nil || len(data.UserID) == 0 {",
          "726:   return errors.BadRequest(reason.EmailVerifyURLExpired)",
          "727:  }",
          "735:  }",
          "737: }",
          "739: func (us *UserService) getActivityUserRankStat(ctx context.Context, startTime, endTime time.Time, limit int,",
          "",
          "[Removed Lines]",
          "721: func (us *UserService) UserUnsubscribeEmailNotification(",
          "722:  ctx context.Context, req *schema.UserUnsubscribeEmailNotificationReq) (err error) {",
          "729:  userInfo, exist, err := us.userRepo.GetByUserID(ctx, data.UserID)",
          "730:  if err != nil {",
          "731:   return err",
          "732:  }",
          "733:  if !exist {",
          "734:   return errors.BadRequest(reason.UserNotFound)",
          "736:  return us.userRepo.UpdateNoticeStatus(ctx, userInfo.ID, schema.NoticeStatusOff)",
          "",
          "[Added Lines]",
          "699: func (us *UserService) UserUnsubscribeNotification(",
          "700:  ctx context.Context, req *schema.UserUnsubscribeNotificationReq) (err error) {",
          "707:  for _, source := range data.NotificationSources {",
          "708:   notificationConfig, exist, err := us.userNotificationConfigRepo.GetByUserIDAndSource(",
          "709:    ctx, data.UserID, source)",
          "710:   if err != nil {",
          "711:    return err",
          "712:   }",
          "713:   if !exist {",
          "714:    continue",
          "715:   }",
          "716:   channels := schema.NewNotificationChannelsFormJson(notificationConfig.Channels)",
          "718:   for _, channel := range channels {",
          "719:    if channel.Key == constant.EmailChannel {",
          "720:     channel.Enable = false",
          "721:    }",
          "722:   }",
          "723:   notificationConfig.Channels = channels.ToJsonString()",
          "724:   if err = us.userNotificationConfigRepo.Save(ctx, notificationConfig); err != nil {",
          "725:    return err",
          "726:   }",
          "728:  return nil",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d6ea89ad389a523b63711e9ef5e65adbe63ffad",
      "candidate_info": {
        "commit_hash": "0d6ea89ad389a523b63711e9ef5e65adbe63ffad",
        "repo": "apache/incubator-answer",
        "commit_url": "https://github.com/apache/incubator-answer/commit/0d6ea89ad389a523b63711e9ef5e65adbe63ffad",
        "files": [
          "Dockerfile",
          "cmd/wire_gen.go",
          "go.mod",
          "go.sum",
          "internal/service/content/user_service.go",
          "internal/service/user_admin/user_backyard.go",
          "internal/service/user_external_login/user_external_login_service.go",
          "pkg/htmltext/htmltext.go",
          "pkg/token/token.go"
        ],
        "message": "refactor(gomod): upgrade golang and dependence version",
        "before_after_code_files": [
          "cmd/wire_gen.go||cmd/wire_gen.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "internal/service/content/user_service.go||internal/service/content/user_service.go",
          "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go",
          "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go",
          "pkg/htmltext/htmltext.go||pkg/htmltext/htmltext.go",
          "pkg/token/token.go||pkg/token/token.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/service/content/user_service.go||internal/service/content/user_service.go",
            "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go",
            "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go"
          ],
          "candidate": [
            "internal/service/content/user_service.go||internal/service/content/user_service.go",
            "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go",
            "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go"
          ]
        }
      },
      "candidate_diff": {
        "cmd/wire_gen.go||cmd/wire_gen.go": [
          "File: cmd/wire_gen.go -> cmd/wire_gen.go"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: module github.com/apache/incubator-answer",
          "22: require (",
          "23:  github.com/Chain-Zhang/pinyin v0.1.3",
          "24:  github.com/Machiel/slugify v1.0.1",
          "26:  github.com/anargu/gin-brotli v0.0.0-20220116052358-12bf532d5267",
          "28:  github.com/bwmarrin/snowflake v0.3.0",
          "29:  github.com/disintegration/imaging v1.6.2",
          "31:  github.com/go-playground/locales v0.14.1",
          "32:  github.com/go-playground/universal-translator v0.18.1",
          "36:  github.com/golang/mock v1.6.0",
          "38:  github.com/google/wire v0.5.0",
          "41:  github.com/jinzhu/now v1.1.5",
          "45:  github.com/robfig/cron/v3 v3.0.1",
          "46:  github.com/scottleedavis/go-exif-remove v0.0.0-20230314195146-7e059d593405",
          "47:  github.com/segmentfault/pacman v1.0.5-0.20230822083413-c0075a2d401f",
          "48:  github.com/segmentfault/pacman/contrib/cache/memory v0.0.0-20230822083413-c0075a2d401f",
          "57:  github.com/swaggo/swag v1.16.3",
          "63:  gopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df",
          "64:  gopkg.in/yaml.v3 v3.0.1",
          "68: )",
          "70: require (",
          "71:  github.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 // indirect",
          "72:  github.com/KyleBanks/depth v1.2.1 // indirect",
          "73:  github.com/LinkinStars/go-i18n/v2 v2.2.2 // indirect",
          "75:  github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5 // indirect",
          "77:  github.com/aymerick/douceur v0.2.0 // indirect",
          "86:  github.com/docker/go-units v0.5.0 // indirect",
          "91:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "94:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "100:  github.com/gogo/protobuf v1.3.2 // indirect",
          "102:  github.com/golang/snappy v0.0.4 // indirect",
          "103:  github.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 // indirect",
          "105:  github.com/hashicorp/hcl v1.0.0 // indirect",
          "108:  github.com/josharian/intern v1.0.0 // indirect",
          "109:  github.com/json-iterator/go v1.1.12 // indirect",
          "113:  github.com/lestrrat-go/file-rotatelogs v2.4.0+incompatible // indirect",
          "116:  github.com/mailru/easyjson v0.7.7 // indirect",
          "118:  github.com/mitchellh/mapstructure v1.5.0 // indirect",
          "119:  github.com/moby/term v0.5.0 // indirect",
          "120:  github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect",
          "121:  github.com/modern-go/reflect2 v1.0.2 // indirect",
          "122:  github.com/opencontainers/go-digest v1.0.0 // indirect",
          "125:  github.com/patrickmn/go-cache v2.1.0+incompatible // indirect",
          "128:  github.com/pkg/errors v0.9.1 // indirect",
          "130:  github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect",
          "131:  github.com/sirupsen/logrus v1.9.3 // indirect",
          "135:  github.com/spf13/pflag v1.0.5 // indirect",
          "138:  github.com/syndtr/goleveldb v1.0.0 // indirect",
          "139:  github.com/tidwall/match v1.1.1 // indirect",
          "141:  github.com/twitchyliquid64/golang-asm v0.15.1 // indirect",
          "143:  github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect",
          "144:  github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect",
          "145:  github.com/xeipuuv/gojsonschema v1.2.0 // indirect",
          "155:  gopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc // indirect",
          "156:  gopkg.in/ini.v1 v1.67.0 // indirect",
          "157:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "168: )",
          "170: replace lukechampine.com/uint128 v1.1.1 => github.com/aichy126/uint128 v1.1.1",
          "",
          "[Removed Lines]",
          "20: go 1.18",
          "25:  github.com/Masterminds/semver/v3 v3.1.1",
          "27:  github.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d",
          "30:  github.com/gin-gonic/gin v1.9.1",
          "33:  github.com/go-playground/validator/v10 v10.14.0",
          "34:  github.com/go-sql-driver/mysql v1.6.0",
          "35:  github.com/goccy/go-json v0.10.2",
          "37:  github.com/google/uuid v1.3.0",
          "39:  github.com/grokify/html-strip-tags-go v0.0.1",
          "40:  github.com/jinzhu/copier v0.3.5",
          "42:  github.com/lib/pq v1.10.7",
          "43:  github.com/microcosm-cc/bluemonday v1.0.21",
          "44:  github.com/ory/dockertest/v3 v3.10.0",
          "49:  github.com/segmentfault/pacman/contrib/conf/viper v0.0.0-20221018072427-a15dd1434e05",
          "50:  github.com/segmentfault/pacman/contrib/i18n v0.0.0-20230516093754-b76aef1c1150",
          "51:  github.com/segmentfault/pacman/contrib/log/zap v0.0.0-20221018072427-a15dd1434e05",
          "52:  github.com/segmentfault/pacman/contrib/server/http v0.0.0-20221018072427-a15dd1434e05",
          "53:  github.com/spf13/cobra v1.6.1",
          "54:  github.com/stretchr/testify v1.8.4",
          "55:  github.com/swaggo/files v1.0.0",
          "56:  github.com/swaggo/gin-swagger v1.5.3",
          "58:  github.com/tidwall/gjson v1.14.4",
          "59:  github.com/yuin/goldmark v1.4.13",
          "60:  golang.org/x/crypto v0.21.0",
          "61:  golang.org/x/image v0.13.0",
          "62:  golang.org/x/net v0.21.0",
          "65:  modernc.org/sqlite v1.24.0",
          "66:  xorm.io/builder v0.3.12",
          "67:  xorm.io/xorm v1.3.2",
          "74:  github.com/Microsoft/go-winio v0.6.1 // indirect",
          "76:  github.com/andybalholm/brotli v1.0.4 // indirect",
          "78:  github.com/bytedance/sonic v1.9.1 // indirect",
          "79:  github.com/cenkalti/backoff/v4 v4.2.1 // indirect",
          "80:  github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect",
          "81:  github.com/containerd/continuity v0.4.2 // indirect",
          "82:  github.com/davecgh/go-spew v1.1.1 // indirect",
          "83:  github.com/docker/cli v24.0.6+incompatible // indirect",
          "84:  github.com/docker/docker v24.0.6+incompatible // indirect",
          "85:  github.com/docker/go-connections v0.4.0 // indirect",
          "87:  github.com/dsoprea/go-exif v0.0.0-20190901173045-3ce78807c90f // indirect",
          "88:  github.com/dsoprea/go-jpeg-image-structure v0.0.0-20190422055009-d6f9ba25cf48 // indirect",
          "89:  github.com/dsoprea/go-logging v0.0.0-20190624164917-c4f10aab7696 // indirect",
          "90:  github.com/dsoprea/go-png-image-structure v0.0.0-20190624104353-c9b28dcdc5c8 // indirect",
          "92:  github.com/fsnotify/fsnotify v1.6.0 // indirect",
          "93:  github.com/gabriel-vasile/mimetype v1.4.2 // indirect",
          "95:  github.com/go-errors/errors v1.0.1 // indirect",
          "96:  github.com/go-openapi/jsonpointer v0.20.0 // indirect",
          "97:  github.com/go-openapi/jsonreference v0.20.2 // indirect",
          "98:  github.com/go-openapi/spec v0.20.9 // indirect",
          "99:  github.com/go-openapi/swag v0.22.4 // indirect",
          "101:  github.com/golang/geo v0.0.0-20190812012225-f41920e961ce // indirect",
          "104:  github.com/gorilla/css v1.0.0 // indirect",
          "106:  github.com/imdario/mergo v0.3.16 // indirect",
          "107:  github.com/inconshreveable/mousetrap v1.0.1 // indirect",
          "110:  github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 // indirect",
          "111:  github.com/klauspost/cpuid/v2 v2.2.4 // indirect",
          "112:  github.com/leodido/go-urn v1.2.4 // indirect",
          "114:  github.com/lestrrat-go/strftime v1.0.6 // indirect",
          "115:  github.com/magiconair/properties v1.8.6 // indirect",
          "117:  github.com/mattn/go-isatty v0.0.19 // indirect",
          "123:  github.com/opencontainers/image-spec v1.0.2 // indirect",
          "124:  github.com/opencontainers/runc v1.1.9 // indirect",
          "126:  github.com/pelletier/go-toml v1.9.5 // indirect",
          "127:  github.com/pelletier/go-toml/v2 v2.0.8 // indirect",
          "129:  github.com/pmezard/go-difflib v1.0.0 // indirect",
          "132:  github.com/spf13/afero v1.9.2 // indirect",
          "133:  github.com/spf13/cast v1.5.0 // indirect",
          "134:  github.com/spf13/jwalterweatherman v1.1.0 // indirect",
          "136:  github.com/spf13/viper v1.13.0 // indirect",
          "137:  github.com/subosito/gotenv v1.4.1 // indirect",
          "140:  github.com/tidwall/pretty v1.2.0 // indirect",
          "142:  github.com/ugorji/go/codec v1.2.11 // indirect",
          "146:  go.uber.org/atomic v1.10.0 // indirect",
          "147:  go.uber.org/multierr v1.10.0 // indirect",
          "148:  go.uber.org/zap v1.24.0 // indirect",
          "149:  golang.org/x/arch v0.3.0 // indirect",
          "150:  golang.org/x/mod v0.12.0 // indirect",
          "151:  golang.org/x/sys v0.18.0 // indirect",
          "152:  golang.org/x/text v0.14.0 // indirect",
          "153:  golang.org/x/tools v0.13.0 // indirect",
          "154:  google.golang.org/protobuf v1.30.0 // indirect",
          "158:  lukechampine.com/uint128 v1.2.0 // indirect",
          "159:  modernc.org/cc/v3 v3.40.0 // indirect",
          "160:  modernc.org/ccgo/v3 v3.16.13 // indirect",
          "161:  modernc.org/libc v1.22.5 // indirect",
          "162:  modernc.org/mathutil v1.5.0 // indirect",
          "163:  modernc.org/memory v1.5.0 // indirect",
          "164:  modernc.org/opt v0.1.3 // indirect",
          "165:  modernc.org/strutil v1.1.3 // indirect",
          "166:  modernc.org/token v1.0.1 // indirect",
          "167:  sigs.k8s.io/yaml v1.3.0 // indirect",
          "",
          "[Added Lines]",
          "20: go 1.22.0",
          "25:  github.com/Masterminds/semver/v3 v3.3.0",
          "27:  github.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2",
          "30:  github.com/gin-gonic/gin v1.10.0",
          "33:  github.com/go-playground/validator/v10 v10.22.1",
          "34:  github.com/go-sql-driver/mysql v1.8.1",
          "35:  github.com/goccy/go-json v0.10.3",
          "37:  github.com/google/uuid v1.6.0",
          "39:  github.com/grokify/html-strip-tags-go v0.1.0",
          "40:  github.com/jinzhu/copier v0.4.0",
          "42:  github.com/lib/pq v1.10.9",
          "43:  github.com/microcosm-cc/bluemonday v1.0.27",
          "44:  github.com/ory/dockertest/v3 v3.11.0",
          "49:  github.com/segmentfault/pacman/contrib/conf/viper v0.0.0-20230822083413-c0075a2d401f",
          "50:  github.com/segmentfault/pacman/contrib/i18n v0.0.0-20230822083413-c0075a2d401f",
          "51:  github.com/segmentfault/pacman/contrib/log/zap v0.0.0-20230822083413-c0075a2d401f",
          "52:  github.com/segmentfault/pacman/contrib/server/http v0.0.0-20230822083413-c0075a2d401f",
          "53:  github.com/spf13/cobra v1.8.1",
          "54:  github.com/stretchr/testify v1.9.0",
          "55:  github.com/swaggo/files v1.0.1",
          "56:  github.com/swaggo/gin-swagger v1.6.0",
          "58:  github.com/tidwall/gjson v1.17.3",
          "59:  github.com/yuin/goldmark v1.7.4",
          "60:  golang.org/x/crypto v0.27.0",
          "61:  golang.org/x/image v0.20.0",
          "62:  golang.org/x/net v0.29.0",
          "65:  modernc.org/sqlite v1.33.0",
          "66:  xorm.io/builder v0.3.13",
          "67:  xorm.io/xorm v1.3.9",
          "71:  dario.cat/mergo v1.0.1 // indirect",
          "72:  filippo.io/edwards25519 v1.1.0 // indirect",
          "76:  github.com/Microsoft/go-winio v0.6.2 // indirect",
          "78:  github.com/andybalholm/brotli v1.1.0 // indirect",
          "80:  github.com/bytedance/sonic v1.12.2 // indirect",
          "81:  github.com/bytedance/sonic/loader v0.2.0 // indirect",
          "82:  github.com/cenkalti/backoff/v4 v4.3.0 // indirect",
          "83:  github.com/cloudwego/base64x v0.1.4 // indirect",
          "84:  github.com/cloudwego/iasm v0.2.0 // indirect",
          "85:  github.com/containerd/continuity v0.4.3 // indirect",
          "86:  github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect",
          "87:  github.com/docker/cli v27.2.1+incompatible // indirect",
          "88:  github.com/docker/docker v27.2.1+incompatible // indirect",
          "89:  github.com/docker/go-connections v0.5.0 // indirect",
          "91:  github.com/dsoprea/go-exif v0.0.0-20230826092837-6579e82b732d // indirect",
          "92:  github.com/dsoprea/go-exif/v2 v2.0.0-20230826092837-6579e82b732d // indirect",
          "93:  github.com/dsoprea/go-iptc v0.0.0-20200610044640-bc9ca208b413 // indirect",
          "94:  github.com/dsoprea/go-jpeg-image-structure v0.0.0-20221012074422-4f3f7e934102 // indirect",
          "95:  github.com/dsoprea/go-logging v0.0.0-20200710184922-b02d349568dd // indirect",
          "96:  github.com/dsoprea/go-photoshop-info-format v0.0.0-20200610045659-121dd752914d // indirect",
          "97:  github.com/dsoprea/go-png-image-structure v0.0.0-20210512210324-29b889a6093d // indirect",
          "98:  github.com/dsoprea/go-utility v0.0.0-20221003172846-a3e1774ef349 // indirect",
          "100:  github.com/fsnotify/fsnotify v1.7.0 // indirect",
          "101:  github.com/gabriel-vasile/mimetype v1.4.5 // indirect",
          "103:  github.com/go-errors/errors v1.5.1 // indirect",
          "104:  github.com/go-openapi/jsonpointer v0.21.0 // indirect",
          "105:  github.com/go-openapi/jsonreference v0.21.0 // indirect",
          "106:  github.com/go-openapi/spec v0.21.0 // indirect",
          "107:  github.com/go-openapi/swag v0.23.0 // indirect",
          "108:  github.com/go-viper/mapstructure/v2 v2.1.0 // indirect",
          "109:  github.com/go-xmlfmt/xmlfmt v1.1.2 // indirect",
          "111:  github.com/golang/geo v0.0.0-20230421003525-6adc56603217 // indirect",
          "114:  github.com/gorilla/css v1.0.1 // indirect",
          "115:  github.com/hashicorp/golang-lru/v2 v2.0.7 // indirect",
          "117:  github.com/inconshreveable/mousetrap v1.1.0 // indirect",
          "120:  github.com/klauspost/cpuid/v2 v2.2.8 // indirect",
          "121:  github.com/leodido/go-urn v1.4.0 // indirect",
          "123:  github.com/lestrrat-go/strftime v1.1.0 // indirect",
          "124:  github.com/magiconair/properties v1.8.7 // indirect",
          "126:  github.com/mattn/go-isatty v0.0.20 // indirect",
          "128:  github.com/moby/docker-image-spec v1.3.1 // indirect",
          "132:  github.com/ncruces/go-strftime v0.1.9 // indirect",
          "134:  github.com/opencontainers/image-spec v1.1.0 // indirect",
          "135:  github.com/opencontainers/runc v1.1.14 // indirect",
          "137:  github.com/pelletier/go-toml/v2 v2.2.3 // indirect",
          "139:  github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect",
          "141:  github.com/sagikazarmark/locafero v0.6.0 // indirect",
          "142:  github.com/sagikazarmark/slog-shim v0.1.0 // indirect",
          "144:  github.com/sourcegraph/conc v0.3.0 // indirect",
          "145:  github.com/spf13/afero v1.11.0 // indirect",
          "146:  github.com/spf13/cast v1.7.0 // indirect",
          "148:  github.com/spf13/viper v1.19.0 // indirect",
          "149:  github.com/subosito/gotenv v1.6.0 // indirect",
          "152:  github.com/tidwall/pretty v1.2.1 // indirect",
          "154:  github.com/ugorji/go/codec v1.2.12 // indirect",
          "158:  go.uber.org/multierr v1.11.0 // indirect",
          "159:  go.uber.org/zap v1.27.0 // indirect",
          "160:  golang.org/x/arch v0.10.0 // indirect",
          "161:  golang.org/x/exp v0.0.0-20240909161429-701f63a606c0 // indirect",
          "162:  golang.org/x/sys v0.25.0 // indirect",
          "163:  golang.org/x/text v0.18.0 // indirect",
          "164:  golang.org/x/tools v0.25.0 // indirect",
          "165:  google.golang.org/protobuf v1.34.2 // indirect",
          "169:  modernc.org/gc/v3 v3.0.0-20240801135723-a856999a2e4a // indirect",
          "170:  modernc.org/mathutil v1.6.0 // indirect",
          "171:  modernc.org/memory v1.8.0 // indirect",
          "172:  modernc.org/strutil v1.2.0 // indirect",
          "173:  modernc.org/token v1.1.0 // indirect",
          "174:  sigs.k8s.io/yaml v1.4.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: gitea.com/xorm/sqlfiddle v0.0.0-20180821085327-62ce714f951a h1:lSA0F4e9A2NcQSqGqTOXqu2aRi/XEQxDCBwM8yJtE6s=",
          "40: gitea.com/xorm/sqlfiddle v0.0.0-20180821085327-62ce714f951a/go.mod h1:EXuID2Zs0pAQhH8yz+DNjUbjppKQzKFAn28TMYPB6IU=",
          "42: github.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=",
          "43: github.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=",
          "45: github.com/BurntSushi/toml v1.0.0 h1:dtDWrepsVPfW9H/4y7dDgFc2MBUSeJhlaDtK13CxFlU=",
          "46: github.com/BurntSushi/toml v1.0.0/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=",
          "48: github.com/Chain-Zhang/pinyin v0.1.3 h1:RzErNyNwVa8z2sOLCuXSOtVdY/AsARb8mBzI2p2qtnE=",
          "49: github.com/Chain-Zhang/pinyin v0.1.3/go.mod h1:5iHpt9p4znrnaP59/hfPMnAojajkDxQaP9io+tRMPho=",
          "51: github.com/KyleBanks/depth v1.2.1 h1:5h8fQADFrWtarTdtDudMmGsC7GPbOAu6RVB3ffsVFHc=",
          "52: github.com/KyleBanks/depth v1.2.1/go.mod h1:jzSb9d0L43HxTQfT+oSA1EEp2q+ne2uh6XgeJcm8brE=",
          "53: github.com/LinkinStars/go-i18n/v2 v2.2.2 h1:ZfjpzbW13dv6btv3RALKZkpN9A+7K1JA//2QcNeWaxU=",
          "54: github.com/LinkinStars/go-i18n/v2 v2.2.2/go.mod h1:hLglSJ4/3M0Y7ZVcoEJI+OwqkglHCA32DdjuJJR2LbM=",
          "55: github.com/Machiel/slugify v1.0.1 h1:EfWSlRWstMadsgzmiV7d0yVd2IFlagWH68Q+DcYCm4E=",
          "56: github.com/Machiel/slugify v1.0.1/go.mod h1:fTFGn5uWEynW4CUMG7sWkYXOf1UgDxyTM3DbR6Qfg3k=",
          "61: github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5 h1:TngWCqHvy9oXAN6lEVMRuU21PR1EtLVZJmdB18Gu3Rw=",
          "62: github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5/go.mod h1:lmUJ/7eu/Q8D7ML55dXQrVaamCz2vxCfdQBasLZfHKk=",
          "75: github.com/anargu/gin-brotli v0.0.0-20220116052358-12bf532d5267 h1:vDHsaEcs/Q0dwetADENtwus6W1ccaZ9h3KBTm0d2X0g=",
          "76: github.com/anargu/gin-brotli v0.0.0-20220116052358-12bf532d5267/go.mod h1:Yj3yPP/vi87JjwylUTCMyd6FrOfGqP1AHk0305hDm2o=",
          "77: github.com/andybalholm/brotli v1.0.1/go.mod h1:loMXtMfwqflxFJPmdbJO0a3KNoPuLBgiu3qAvBg8x/Y=",
          "91: github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=",
          "92: github.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=",
          "98: github.com/bwmarrin/snowflake v0.3.0 h1:xm67bEhkKh6ij1790JB83OujPR5CzNe8QuQqAgISZN0=",
          "99: github.com/bwmarrin/snowflake v0.3.0/go.mod h1:NdZxfVWX+oR6y2K0o6qAYv6gIOP9rjG0/E9WsDpxqwE=",
          "134: github.com/creack/pty v1.1.18 h1:n56/Zwd5o6whRC5PMGretI4IdRLlmBXYNjScPaBgsbY=",
          "135: github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "137: github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "140: github.com/disintegration/imaging v1.6.2 h1:w1LecBlG2Lnp8B3jk5zSuNqd7b4DXhcjwek1ei82L+c=",
          "141: github.com/disintegration/imaging v1.6.2/go.mod h1:44/5580QXChDfwIclfc/PCwrr44amcmDAg8hxG0Ewe4=",
          "148: github.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=",
          "149: github.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=",
          "151: github.com/dsoprea/go-exif v0.0.0-20190901173045-3ce78807c90f/go.mod h1:DmMpU91/Ax6BAwoRkjgRCr2rmgEgS4tsmatfV7M+U+c=",
          "153: github.com/dsoprea/go-jpeg-image-structure v0.0.0-20190422055009-d6f9ba25cf48/go.mod h1:H1hAaFyv9cRV1ywoHvaqVoNSThBvWZ0JarRBcV+FSnE=",
          "155: github.com/dsoprea/go-logging v0.0.0-20190624164917-c4f10aab7696/go.mod h1:Nm/x2ZUNRW6Fe5C3LxdY1PyZY5wmDv/s5dkPJ/VB3iA=",
          "157: github.com/dsoprea/go-png-image-structure v0.0.0-20190624104353-c9b28dcdc5c8/go.mod h1:Bf0nmcDFFRQBjZwr9qY6c0zTxKQa+Q8YWZmlYxXGxY0=",
          "160: github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=",
          "161: github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=",
          "177: github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=",
          "183: github.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=",
          "184: github.com/gin-contrib/gzip v0.0.6/go.mod h1:QOJlmV2xmayAjkNS2Y8NQsMneuRShOU/kjovCXNuzzk=",
          "185: github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=",
          "186: github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=",
          "187: github.com/gin-gonic/gin v1.7.0/go.mod h1:jD2toBW3GZUr5UMcdrwQA10I7RuaFOl/SGeDjXkfUtY=",
          "192: github.com/go-errors/errors v1.0.1/go.mod h1:f4zRHt4oKfwPJE5k8C9vpYG+aDHdBFUsgrm6/TyX73Q=",
          "219: github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=",
          "220: github.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=",
          "221: github.com/go-playground/locales v0.13.0/go.mod h1:taPMhCMXrRLJO55olJkUXHZBHCxTMfnGwq/HNwmWNS8=",
          "223: github.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=",
          "224: github.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=",
          "225: github.com/go-playground/universal-translator v0.17.0/go.mod h1:UkSxE5sNxxRwHyU+Scu5vgOQjsIJAF8j9muTVoKLVtA=",
          "227: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
          "228: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
          "229: github.com/go-playground/validator/v10 v10.4.1/go.mod h1:nlOn6nFhuKACm19sB/8EGNn9GlaMV7XkbRSipzJ0Ii4=",
          "247: github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
          "248: github.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=",
          "251: github.com/golang/geo v0.0.0-20190812012225-f41920e961ce/go.mod h1:QZ0nwyI2jOfgRAoBvP+ab5aRr7c9x7lhGEJrKvBwjWI=",
          "264: github.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=",
          "265: github.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=",
          "266: github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=",
          "269: github.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=",
          "281: github.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "283: github.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=",
          "284: github.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "287: github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=",
          "299: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "315: github.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=",
          "316: github.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=",
          "317: github.com/google/subcommands v1.0.1/go.mod h1:ZjhPrFU+Olkh9WazFPsl27BQ4UPiG37m3yTrtFlrHVk=",
          "322: github.com/google/wire v0.5.0 h1:I7ELFeVBr3yfPIcc8+MWvrjk+3VjbcSzoXm3JVa+jD8=",
          "323: github.com/google/wire v0.5.0/go.mod h1:ngWDr9Qvq3yZA10YrxfyGELY/AFWGVpy9c1LTRi1EoU=",
          "355: github.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=",
          "356: github.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=",
          "361: github.com/hpcloud/tail v1.0.0 h1:nfCOvKYfkgYP8hkirhJocXT2+zOD8yUNjXaWfTlyFKI=",
          "362: github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=",
          "421: github.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=",
          "422: github.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=",
          "425: github.com/jonboulle/clockwork v0.3.0 h1:9BSCMi8C+0qdApAp4auwX0RkLGUjs956h0EkuQymUhg=",
          "426: github.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=",
          "427: github.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=",
          "431: github.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=",
          "432: github.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=",
          "433: github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=",
          "441: github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=",
          "442: github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=",
          "443: github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=",
          "450: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "453: github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=",
          "454: github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=",
          "456: github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=",
          "457: github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=",
          "458: github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=",
          "459: github.com/leodido/go-urn v1.2.0/go.mod h1:+8+nEpDfqqsY+g338gtMEUOtuK+4dEMhiQEgxpxOKII=",
          "463: github.com/lestrrat-go/envload v0.0.0-20180220234015-a3eb8ddeffcc h1:RKf14vYWi2ttpEmkA4aQ3j4u9dStX2t4M8UM6qqNsG8=",
          "464: github.com/lestrrat-go/envload v0.0.0-20180220234015-a3eb8ddeffcc/go.mod h1:kopuH9ugFRkIXf3YoqHKyrJ9YfUFsckUU9S7B+XP+is=",
          "465: github.com/lestrrat-go/file-rotatelogs v2.4.0+incompatible h1:Y6sqxHMyB1D2YSzWkLibYKgg+SwmyFU9dF2hn6MdTj4=",
          "466: github.com/lestrrat-go/file-rotatelogs v2.4.0+incompatible/go.mod h1:ZQnN8lSECaebrkQytbHj4xNgtg8CR7RYXnPok8e0EHA=",
          "484: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "485: github.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=",
          "496: github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=",
          "502: github.com/mattn/go-sqlite3 v1.14.16 h1:yOQRA0RpS5PFz/oikGwBEqvAWhWg5ufRz4ETLjwpU1Y=",
          "514: github.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=",
          "515: github.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=",
          "516: github.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=",
          "517: github.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=",
          "518: github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "519: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=",
          "520: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "521: github.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=",
          "523: github.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=",
          "524: github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=",
          "537: github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=",
          "538: github.com/onsi/ginkgo v1.7.0 h1:WSHQ+IS43OoUrWtD1/bbclrwK8TTH5hzp+umCiuxHgs=",
          "539: github.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=",
          "540: github.com/onsi/gomega v1.4.3 h1:RE1xgDvH7imwFD45h+u2SgIfERHlS2yNG4DObb5BSKU=",
          "541: github.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=",
          "543: github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=",
          "544: github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=",
          "566: github.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=",
          "567: github.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=",
          "580: github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=",
          "581: github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "585: github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=",
          "605: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=",
          "606: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "607: github.com/robfig/cron/v3 v3.0.1 h1:WdRxkvbJztn8LMz/QEvLN5sBU+xKpSqwwUO1Pjr4qDs=",
          "608: github.com/robfig/cron/v3 v3.0.1/go.mod h1:eQICP3HwyT7UooqI/z+Ov+PtYAWygg1TEWWzGIFLtro=",
          "618: github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=",
          "622: github.com/scottleedavis/go-exif-remove v0.0.0-20230314195146-7e059d593405 h1:2ieGkj4z/YPXVyQ2ayZUg3GwE1pYWd5f1RB6DzAOXKM=",
          "623: github.com/scottleedavis/go-exif-remove v0.0.0-20230314195146-7e059d593405/go.mod h1:rIxVzVLKlBwLxO+lC+k/I4HJfRQcemg/f/76Xmmzsec=",
          "625: github.com/segmentfault/pacman v1.0.5-0.20230822083413-c0075a2d401f h1:9f2Bjf6bdMvNyUop32wAGJCdp+Jdm/d6nKBYvFvkRo0=",
          "626: github.com/segmentfault/pacman v1.0.5-0.20230822083413-c0075a2d401f/go.mod h1:5lNp5REd8QMThmBUvR3Fi9Y3AsOB4GRq7soCB4QLqOs=",
          "627: github.com/segmentfault/pacman/contrib/cache/memory v0.0.0-20230822083413-c0075a2d401f h1:1KHe0uN6p798E7XJZPhZkgm/hXk5CTjisCvFMqaZSKI=",
          "628: github.com/segmentfault/pacman/contrib/cache/memory v0.0.0-20230822083413-c0075a2d401f/go.mod h1:rmf1TCwz67dyM+AmTwSd1BxTo2AOYHj262lP93bOZbs=",
          "644: github.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=",
          "645: github.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=",
          "660: github.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=",
          "661: github.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=",
          "667: github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=",
          "670: github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=",
          "671: github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=",
          "673: github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=",
          "674: github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=",
          "677: github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "678: github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "679: github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=",
          "680: github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "693: github.com/swaggo/swag v1.16.3 h1:PnCYjPCah8FK4I26l2F/KQ4yz3sILcVUN3cTlBFA9Pg=",
          "694: github.com/swaggo/swag v1.16.3/go.mod h1:DImHIuOFXKpMFAQjcC7FG4m3Dg4+QuUgUzJmKjI/gRk=",
          "695: github.com/syndtr/goleveldb v1.0.0 h1:fBdIW9lB4Iz0n9khmH8w27SJ3QEJ7+IgjPEwGSZiFdE=",
          "696: github.com/syndtr/goleveldb v1.0.0/go.mod h1:ZVVdQEZoIme9iO1Ch2Jdy24qqXrMMOU6lpPAyBWyWuQ=",
          "699: github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=",
          "700: github.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=",
          "702: github.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=",
          "704: github.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=",
          "705: github.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=",
          "706: github.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=",
          "708: github.com/ugorji/go/codec v1.1.7/go.mod h1:Ax+UKWsSmolVDwsd+7N3ZtXu+yMGCf907BLYF3GoBXY=",
          "715: github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=",
          "716: github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=",
          "717: github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=",
          "",
          "[Removed Lines]",
          "1: cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "2: cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "3: cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=",
          "4: cloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=",
          "5: cloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=",
          "6: cloud.google.com/go v0.44.3/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=",
          "7: cloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=",
          "8: cloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=",
          "9: cloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=",
          "10: cloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=",
          "11: cloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=",
          "12: cloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=",
          "13: cloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=",
          "14: cloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=",
          "15: cloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=",
          "16: cloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=",
          "17: cloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=",
          "18: cloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=",
          "19: cloud.google.com/go v0.75.0/go.mod h1:VGuuCn7PG0dwsd5XPVm2Mm3wlh3EL55/79EKB6hlPTY=",
          "20: cloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=",
          "21: cloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=",
          "22: cloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=",
          "23: cloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=",
          "24: cloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=",
          "25: cloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=",
          "26: cloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=",
          "27: cloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=",
          "28: cloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=",
          "29: cloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=",
          "30: cloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=",
          "31: cloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=",
          "32: cloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=",
          "33: cloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=",
          "34: cloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=",
          "35: cloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=",
          "36: cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=",
          "37: cloud.google.com/go/storage v1.14.0/go.mod h1:GrKmX003DSIwi9o29oFT7YDnHYwZoctc3fOKtUw0Xmo=",
          "38: dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=",
          "41: gitee.com/travelliu/dm v1.8.11192/go.mod h1:DHTzyhCrM843x9VdKVbZ+GKXGRbKM2sJ4LxihRxShkE=",
          "44: github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=",
          "47: github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=",
          "50: github.com/Knetic/govaluate v3.0.1-0.20171022003610-9aa49832a739+incompatible/go.mod h1:r7JcOSlj0wfOMncg0iLm8Leh48TZaKVeNIfJntJ2wa0=",
          "57: github.com/Masterminds/semver/v3 v3.1.1 h1:hLg3sBzpNErnxhQtUy/mmLR2I9foDujNK030IGemrRc=",
          "58: github.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=",
          "59: github.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=",
          "60: github.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=",
          "63: github.com/PuerkitoBio/purell v1.1.1/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=",
          "64: github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578/go.mod h1:uGdkoq3SwY9Y+13GIhn11/XLaGBb4BfwItxLd5jeuXE=",
          "65: github.com/Shopify/sarama v1.19.0/go.mod h1:FVkBWblsNy7DGZRfXLU0O9RCGt5g3g3yEuWXgklEdEo=",
          "66: github.com/Shopify/toxiproxy v2.1.4+incompatible/go.mod h1:OXgGpZ6Cli1/URJOF1DMxUHB2q5Ap20/P/eIdh4G0pI=",
          "67: github.com/VividCortex/gohistogram v1.0.0/go.mod h1:Pf5mBqqDxYaXu3hDrrU+w6nw50o/4+TcAqDqk/vUH7g=",
          "68: github.com/afex/hystrix-go v0.0.0-20180502004556-fa1af6a1f4f5/go.mod h1:SkGFH1ia65gfNATL8TAiHDNxPzPdmEL5uirI2Uyuz6c=",
          "69: github.com/agiledragon/gomonkey/v2 v2.3.1/go.mod h1:ap1AmDzcVOAz1YpeJ3TCzIgstoaWLA6jbbgxfB4w2iY=",
          "70: github.com/aichy126/uint128 v1.1.1/go.mod h1:Hke/MPGXUxOl0OXHoNcVesBL4N+XalHEJ9e1jaIbl8o=",
          "71: github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=",
          "72: github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=",
          "73: github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=",
          "74: github.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=",
          "78: github.com/andybalholm/brotli v1.0.4 h1:V7DdXeJtZscaqfNuAdSRuRFzuiKlHSC/Zh3zl9qY3JY=",
          "79: github.com/andybalholm/brotli v1.0.4/go.mod h1:fO7iG3H7G2nSZ7m0zPUDn85XEX2GTukHGRSepvi9Eig=",
          "80: github.com/apache/thrift v0.12.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=",
          "81: github.com/apache/thrift v0.13.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=",
          "82: github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=",
          "83: github.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=",
          "84: github.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=",
          "85: github.com/aryann/difflib v0.0.0-20170710044230-e206f873d14a/go.mod h1:DAHtR1m6lCRdSC2Tm3DSWRPvIPr6xNKyeHdqDQSQT+A=",
          "86: github.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d h1:Byv0BzEl3/e6D5CLfI0j/7hiIEtvGVFPCZ7Ei2oq8iQ=",
          "87: github.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d/go.mod h1:WaHUgvxTVq04UNunO+XhnAqY/wQc+bxr74GqbsZ/Jqw=",
          "88: github.com/aws/aws-lambda-go v1.13.3/go.mod h1:4UKl9IzQMoD+QF79YdCuzCwp8VbmG4VAQwij/eHl5CU=",
          "89: github.com/aws/aws-sdk-go v1.27.0/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=",
          "90: github.com/aws/aws-sdk-go-v2 v0.18.0/go.mod h1:JWVYvqSMppoMJC0x5wdwiImzgXTI9FuZwxzkQq9wy+g=",
          "93: github.com/benbjohnson/clock v1.1.0 h1:Q92kusRqC1XV2MjkWETPvjJVqKetz1OzxZB7mHJLju8=",
          "94: github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=",
          "95: github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=",
          "96: github.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=",
          "97: github.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=",
          "100: github.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=",
          "101: github.com/bytedance/sonic v1.9.1 h1:6iJ6NqdoxCDr6mbY8h18oSO+cShGSMRGCEo7F2h0x8s=",
          "102: github.com/bytedance/sonic v1.9.1/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "103: github.com/casbin/casbin/v2 v2.1.2/go.mod h1:YcPU1XXisHhLzuxH9coDNf2FbKpjGlbCg3n9yuLkIJQ=",
          "104: github.com/cenkalti/backoff v2.2.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=",
          "105: github.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=",
          "106: github.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=",
          "107: github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=",
          "108: github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "109: github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=",
          "110: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=",
          "111: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=",
          "112: github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=",
          "113: github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=",
          "114: github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=",
          "115: github.com/clbanning/x2j v0.0.0-20191024224557-825249438eec/go.mod h1:jMjuTZXRI4dUb/I5gc9Hdhagfvm9+RyrPryS/auMzxE=",
          "116: github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=",
          "117: github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=",
          "118: github.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "119: github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "120: github.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=",
          "121: github.com/cockroachdb/datadriven v0.0.0-20190809214429-80d97fb3cbaa/go.mod h1:zn76sxSg3SzpJ0PPJaLDCu+Bu0Lg3sKTORVIj19EIF8=",
          "122: github.com/codahale/hdrhistogram v0.0.0-20161010025455-3a0bb77429bd/go.mod h1:sE/e/2PUdi/liOCUjSTXgM1o87ZssimdTWN964YiIeI=",
          "123: github.com/containerd/continuity v0.4.2 h1:v3y/4Yz5jwnvqPKJJ+7Wf93fyWoCB3F5EclWG023MDM=",
          "124: github.com/containerd/continuity v0.4.2/go.mod h1:F6PTNCKepoxEaXLQp3wDAjygEnImnZ/7o4JzpodfroQ=",
          "125: github.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=",
          "126: github.com/coreos/go-systemd v0.0.0-20180511133405-39ca1b05acc7/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=",
          "127: github.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=",
          "128: github.com/coreos/go-systemd v0.0.0-20190719114852-fd7a80b32e1f/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=",
          "129: github.com/coreos/pkg v0.0.0-20160727233714-3ac0863d7acf/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=",
          "130: github.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=",
          "131: github.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=",
          "132: github.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=",
          "133: github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=",
          "136: github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=",
          "138: github.com/denisenkom/go-mssqldb v0.10.0/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=",
          "139: github.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=",
          "142: github.com/docker/cli v24.0.6+incompatible h1:fF+XCQCgJjjQNIMjzaSmiKJSCcfcXb3TWTcc7GAneOY=",
          "143: github.com/docker/cli v24.0.6+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=",
          "144: github.com/docker/docker v24.0.6+incompatible h1:hceabKCtUgDqPu+qm0NgsaXf28Ljf4/pWFL7xjWWDgE=",
          "145: github.com/docker/docker v24.0.6+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=",
          "146: github.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=",
          "147: github.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=",
          "150: github.com/dsoprea/go-exif v0.0.0-20190901173045-3ce78807c90f h1:vqfYiZ+xF0xJvl9SZ1kovmMgKjaGZIz/Hn8JDQdyd9A=",
          "152: github.com/dsoprea/go-jpeg-image-structure v0.0.0-20190422055009-d6f9ba25cf48 h1:9zARagUAxQJjibcDy+0+koUMR6sbX38L49Bk2Vni628=",
          "154: github.com/dsoprea/go-logging v0.0.0-20190624164917-c4f10aab7696 h1:VGFnZAcLwPpt1sHlAxml+pGLZz9A2s+K/s1YNhPC91Y=",
          "156: github.com/dsoprea/go-png-image-structure v0.0.0-20190624104353-c9b28dcdc5c8 h1:SVQfy5rBFZXzvGkU2MZ0RzpS912/1sJrEJ+FMmeaC9U=",
          "158: github.com/dustin/go-humanize v0.0.0-20171111073723-bb3d318650d4/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=",
          "159: github.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=",
          "162: github.com/eapache/go-resiliency v1.1.0/go.mod h1:kFI+JgMyC7bLPUVY133qvEBtVayf5mFgVsvEsIPBvNs=",
          "163: github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21/go.mod h1:+020luEh2TKB4/GOp8oxxtq0Daoen/Cii55CzbTV6DU=",
          "164: github.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=",
          "165: github.com/edsrzf/mmap-go v1.0.0/go.mod h1:YO35OhQPt3KJa3ryjFM5Bs14WD66h8eGKpfaBNrHW5M=",
          "166: github.com/envoyproxy/go-control-plane v0.6.9/go.mod h1:SBwIajubJHhxtWwsL9s8ss4safvEdbitLhGGK48rN6g=",
          "167: github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=",
          "168: github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=",
          "169: github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=",
          "170: github.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=",
          "171: github.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=",
          "172: github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=",
          "173: github.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=",
          "174: github.com/franela/goblin v0.0.0-20200105215937-c9ffbefa60db/go.mod h1:7dvUGVsVBjqR7JHJk0brhHOZYGmfBYOrK0ZhYMEtBr4=",
          "175: github.com/franela/goreq v0.0.0-20171204163338-bcd34c9993f8/go.mod h1:ZhphrRTfi2rbfLwlschooIH4+wKKDR4Pdxhh+TRoA20=",
          "176: github.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=",
          "178: github.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=",
          "179: github.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=",
          "180: github.com/gabriel-vasile/mimetype v1.4.2 h1:w5qFW6JKBz9Y393Y4q372O9A7cUSequkh1Q7OhCmWKU=",
          "181: github.com/gabriel-vasile/mimetype v1.4.2/go.mod h1:zApsH/mKG4w07erKIaJPFiX0Tsq9BFQgN3qGY5GnNgA=",
          "182: github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=",
          "188: github.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=",
          "189: github.com/gin-gonic/gin v1.9.1 h1:4idEAncQnU5cB7BeOkPtxjfCSye0AAm1R0RVIqJ+Jmg=",
          "190: github.com/gin-gonic/gin v1.9.1/go.mod h1:hPrL7YrpYKXt5YId3A/Tnip5kqbEAP+KLuI3SUcPTeU=",
          "191: github.com/go-errors/errors v1.0.1 h1:LUHzmkK3GUKUrL/1gfBUxAHzcev3apQlezX/+O7ma6w=",
          "193: github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=",
          "194: github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=",
          "195: github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=",
          "196: github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "197: github.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "198: github.com/go-kit/kit v0.10.0/go.mod h1:xUsJbQ/Fp4kEt7AFgCuvyX4a71u8h9jB8tj/ORgOZ7o=",
          "199: github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=",
          "200: github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=",
          "201: github.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=",
          "202: github.com/go-openapi/jsonpointer v0.19.3/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=",
          "203: github.com/go-openapi/jsonpointer v0.19.5/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=",
          "204: github.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=",
          "205: github.com/go-openapi/jsonpointer v0.20.0 h1:ESKJdU9ASRfaPNOPRx12IUyA1vn3R9GiE3KYD14BXdQ=",
          "206: github.com/go-openapi/jsonpointer v0.20.0/go.mod h1:6PGzBjjIIumbLYysB73Klnms1mwnU4G3YHOECG3CedA=",
          "207: github.com/go-openapi/jsonreference v0.19.6/go.mod h1:diGHMEHg2IqXZGKxqyvWdfWU/aim5Dprw5bqpKkTvns=",
          "208: github.com/go-openapi/jsonreference v0.20.0/go.mod h1:Ag74Ico3lPc+zR+qjn4XBUmXymS4zJbYVCZmcgkasdo=",
          "209: github.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=",
          "210: github.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=",
          "211: github.com/go-openapi/spec v0.20.4/go.mod h1:faYFR1CvsJZ0mNsmsphTMSoRrNV3TEDoAM7FOEWeq8I=",
          "212: github.com/go-openapi/spec v0.20.9 h1:xnlYNQAwKd2VQRRfwTEI0DcK+2cbuvI/0c7jx3gA8/8=",
          "213: github.com/go-openapi/spec v0.20.9/go.mod h1:2OpW+JddWPrpXSCIX8eOx7lZ5iyuWj3RYR6VaaBKcWA=",
          "214: github.com/go-openapi/swag v0.19.5/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=",
          "215: github.com/go-openapi/swag v0.19.15/go.mod h1:QYRuS/SOXUCsnplDa677K7+DxSOj6IPNl/eQntq43wQ=",
          "216: github.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=",
          "217: github.com/go-openapi/swag v0.22.4 h1:QLMzNJnMGPRNDCbySlcj1x01tzU8/9LTTL9hZZZogBU=",
          "218: github.com/go-openapi/swag v0.22.4/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=",
          "222: github.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=",
          "226: github.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=",
          "230: github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=",
          "231: github.com/go-playground/validator/v10 v10.14.0 h1:vgvQWe3XCz3gIeFDm/HnTIbj6UGmg/+t63MyGU2n5js=",
          "232: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "233: github.com/go-sql-driver/mysql v1.4.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=",
          "234: github.com/go-sql-driver/mysql v1.6.0 h1:BCTh4TKNUYmOmMUcQ3IipzF5prigylS7XXjEkfCHuOE=",
          "235: github.com/go-sql-driver/mysql v1.6.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=",
          "236: github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=",
          "237: github.com/goccy/go-json v0.8.1/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "238: github.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "239: github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=",
          "240: github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "241: github.com/gofrs/uuid v3.2.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=",
          "242: github.com/gofrs/uuid v4.0.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=",
          "243: github.com/gogo/googleapis v1.1.0/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=",
          "244: github.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=",
          "245: github.com/gogo/protobuf v1.2.0/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=",
          "246: github.com/gogo/protobuf v1.2.1/go.mod h1:hp+jE20tsWTFYpLwKvXlhS1hjn+gTNwPg2I6zVXpSg4=",
          "249: github.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=",
          "250: github.com/golang/geo v0.0.0-20190812012225-f41920e961ce h1:rqIKPpIcEgiNn0KYNFYD34TbMO86l4woyhNzSP+Oegs=",
          "252: github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=",
          "253: github.com/golang/groupcache v0.0.0-20160516000752-02826c3e7903/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "254: github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "255: github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "256: github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "257: github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=",
          "258: github.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=",
          "259: github.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=",
          "260: github.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=",
          "261: github.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=",
          "262: github.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=",
          "263: github.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=",
          "267: github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=",
          "268: github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=",
          "270: github.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=",
          "271: github.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=",
          "272: github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=",
          "273: github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=",
          "274: github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=",
          "275: github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=",
          "276: github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=",
          "277: github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=",
          "278: github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=",
          "279: github.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=",
          "280: github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=",
          "282: github.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "285: github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "286: github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "288: github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=",
          "289: github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=",
          "290: github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "291: github.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "292: github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "293: github.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "294: github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "295: github.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "296: github.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "297: github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "298: github.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=",
          "300: github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=",
          "301: github.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=",
          "302: github.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=",
          "303: github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=",
          "304: github.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=",
          "305: github.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "306: github.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "307: github.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "308: github.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "309: github.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "310: github.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "311: github.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "312: github.com/google/pprof v0.0.0-20201218002935-b9804c9f04c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "313: github.com/google/pprof v0.0.0-20221118152302-e6195bd50e26 h1:Xim43kblpZXfIBQsbuBVKCudVG457BR2GZFIz3uw3hQ=",
          "314: github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=",
          "318: github.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "319: github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "320: github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=",
          "321: github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "324: github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=",
          "325: github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=",
          "326: github.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=",
          "327: github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=",
          "328: github.com/gorilla/context v1.1.1/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=",
          "329: github.com/gorilla/css v1.0.0 h1:BQqNyPTi50JCFMTw/b67hByjMVXZRwGha6wxVGkeihY=",
          "330: github.com/gorilla/css v1.0.0/go.mod h1:Dn721qIggHpt4+EFCcTLTU/vk5ySda2ReITrtgBl60c=",
          "331: github.com/gorilla/mux v1.6.2/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=",
          "332: github.com/gorilla/mux v1.7.3/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=",
          "333: github.com/gorilla/websocket v0.0.0-20170926233335-4201258b820c/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=",
          "334: github.com/grokify/html-strip-tags-go v0.0.1 h1:0fThFwLbW7P/kOiTBs03FsJSV9RM2M/Q/MOnCQxKMo0=",
          "335: github.com/grokify/html-strip-tags-go v0.0.1/go.mod h1:2Su6romC5/1VXOQMaWL2yb618ARB8iVo6/DR99A6d78=",
          "336: github.com/grpc-ecosystem/go-grpc-middleware v1.0.1-0.20190118093823-f849b5445de4/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=",
          "337: github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=",
          "338: github.com/grpc-ecosystem/grpc-gateway v1.9.5/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=",
          "339: github.com/hashicorp/consul/api v1.3.0/go.mod h1:MmDNSzIMUjNpY/mQ398R4bk2FnqQLoPndWW5VkKPlCE=",
          "340: github.com/hashicorp/consul/sdk v0.3.0/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=",
          "341: github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=",
          "342: github.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=",
          "343: github.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=",
          "344: github.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=",
          "345: github.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=",
          "346: github.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=",
          "347: github.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=",
          "348: github.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=",
          "349: github.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=",
          "350: github.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=",
          "351: github.com/hashicorp/go-version v1.2.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=",
          "352: github.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=",
          "353: github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "354: github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "357: github.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=",
          "358: github.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=",
          "359: github.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=",
          "360: github.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=",
          "363: github.com/hudl/fargo v1.3.0/go.mod h1:y3CKSmjA+wD2gak7sUSXTAoopbhU08POFhmITJgmKTg=",
          "364: github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=",
          "365: github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=",
          "366: github.com/imdario/mergo v0.3.16 h1:wwQJbIsHYGMUyLSPrEq1CT16AhnhNJQ51+4fdHUnCl4=",
          "367: github.com/imdario/mergo v0.3.16/go.mod h1:WBLT9ZmE3lPoWsEzCh9LPo3TiwVN+ZKEjmz+hD27ysY=",
          "368: github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=",
          "369: github.com/inconshreveable/mousetrap v1.0.1 h1:U3uMjPSQEBMNp1lFxmllqCPM6P5u/Xq7Pgzkat/bFNc=",
          "370: github.com/inconshreveable/mousetrap v1.0.1/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=",
          "371: github.com/influxdata/influxdb1-client v0.0.0-20191209144304-8bf82d3c094d/go.mod h1:qj24IKcXYK6Iy9ceXlo3Tc+vtHo9lIhSX5JddghvEPo=",
          "372: github.com/jackc/chunkreader v1.0.0/go.mod h1:RT6O25fNZIuasFJRyZ4R/Y2BbhasbmZXF9QQ7T3kePo=",
          "373: github.com/jackc/chunkreader/v2 v2.0.0/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=",
          "374: github.com/jackc/chunkreader/v2 v2.0.1/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=",
          "375: github.com/jackc/pgconn v0.0.0-20190420214824-7e0022ef6ba3/go.mod h1:jkELnwuX+w9qN5YIfX0fl88Ehu4XC3keFuOJJk9pcnA=",
          "376: github.com/jackc/pgconn v0.0.0-20190824142844-760dd75542eb/go.mod h1:lLjNuW/+OfW9/pnVKPazfWOgNfH2aPem8YQ7ilXGvJE=",
          "377: github.com/jackc/pgconn v0.0.0-20190831204454-2fabfa3c18b7/go.mod h1:ZJKsE/KZfsUgOEh9hBm+xYTstcNHg7UPMVJqRfQxq4s=",
          "378: github.com/jackc/pgconn v1.4.0/go.mod h1:Y2O3ZDF0q4mMacyWV3AstPJpeHXWGEetiFttmq5lahk=",
          "379: github.com/jackc/pgconn v1.5.0/go.mod h1:QeD3lBfpTFe8WUnPZWN5KY/mB8FGMIYRdd8P8Jr0fAI=",
          "380: github.com/jackc/pgconn v1.5.1-0.20200601181101-fa742c524853/go.mod h1:QeD3lBfpTFe8WUnPZWN5KY/mB8FGMIYRdd8P8Jr0fAI=",
          "381: github.com/jackc/pgconn v1.8.0/go.mod h1:1C2Pb36bGIP9QHGBYCjnyhqu7Rv3sGshaQUvmfGIB/o=",
          "382: github.com/jackc/pgconn v1.8.1/go.mod h1:JV6m6b6jhjdmzchES0drzCcYcAHS1OPD5xu3OZ/lE2g=",
          "383: github.com/jackc/pgconn v1.9.0/go.mod h1:YctiPyvzfU11JFxoXokUOOKQXQmDMoJL9vJzHH8/2JY=",
          "384: github.com/jackc/pgio v1.0.0/go.mod h1:oP+2QK2wFfUWgr+gxjoBH9KGBb31Eio69xUb0w5bYf8=",
          "385: github.com/jackc/pgmock v0.0.0-20190831213851-13a1b77aafa2/go.mod h1:fGZlG77KXmcq05nJLRkk0+p82V8B8Dw8KN2/V9c/OAE=",
          "386: github.com/jackc/pgmock v0.0.0-20201204152224-4fe30f7445fd/go.mod h1:hrBW0Enj2AZTNpt/7Y5rr2xe/9Mn757Wtb2xeBzPv2c=",
          "387: github.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=",
          "388: github.com/jackc/pgproto3 v1.1.0/go.mod h1:eR5FA3leWg7p9aeAqi37XOTgTIbkABlvcPB3E5rlc78=",
          "389: github.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190420180111-c116219b62db/go.mod h1:bhq50y+xrl9n5mRYyCBFKkpRVTLYJVWeCc+mEAI3yXA=",
          "390: github.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190609003834-432c2951c711/go.mod h1:uH0AWtUmuShn0bcesswc4aBTWGvw0cAxIJp+6OB//Wg=",
          "391: github.com/jackc/pgproto3/v2 v2.0.0-rc3/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=",
          "392: github.com/jackc/pgproto3/v2 v2.0.0-rc3.0.20190831210041-4c03ce451f29/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=",
          "393: github.com/jackc/pgproto3/v2 v2.0.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=",
          "394: github.com/jackc/pgproto3/v2 v2.0.6/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=",
          "395: github.com/jackc/pgproto3/v2 v2.1.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=",
          "396: github.com/jackc/pgservicefile v0.0.0-20200307190119-3430c5407db8/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=",
          "397: github.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=",
          "398: github.com/jackc/pgtype v0.0.0-20190421001408-4ed0de4755e0/go.mod h1:hdSHsc1V01CGwFsrv11mJRHWJ6aifDLfdV3aVjFF0zg=",
          "399: github.com/jackc/pgtype v0.0.0-20190824184912-ab885b375b90/go.mod h1:KcahbBH1nCMSo2DXpzsoWOAfFkdEtEJpPbVLq8eE+mc=",
          "400: github.com/jackc/pgtype v0.0.0-20190828014616-a8802b16cc59/go.mod h1:MWlu30kVJrUS8lot6TQqcg7mtthZ9T0EoIBFiJcmcyw=",
          "401: github.com/jackc/pgtype v1.2.0/go.mod h1:5m2OfMh1wTK7x+Fk952IDmI4nw3nPrvtQdM0ZT4WpC0=",
          "402: github.com/jackc/pgtype v1.3.1-0.20200510190516-8cd94a14c75a/go.mod h1:vaogEUkALtxZMCH411K+tKzNpwzCKU+AnPzBKZ+I+Po=",
          "403: github.com/jackc/pgtype v1.3.1-0.20200606141011-f6355165a91c/go.mod h1:cvk9Bgu/VzJ9/lxTO5R5sf80p0DiucVtN7ZxvaC4GmQ=",
          "404: github.com/jackc/pgtype v1.7.0/go.mod h1:ZnHF+rMePVqDKaOfJVI4Q8IVvAQMryDlDkZnKOI75BE=",
          "405: github.com/jackc/pgtype v1.8.0/go.mod h1:PqDKcEBtllAtk/2p6z6SHdXW5UB+MhE75tUol2OKexE=",
          "406: github.com/jackc/pgx/v4 v4.0.0-20190420224344-cc3461e65d96/go.mod h1:mdxmSJJuR08CZQyj1PVQBHy9XOp5p8/SHH6a0psbY9Y=",
          "407: github.com/jackc/pgx/v4 v4.0.0-20190421002000-1b8f0016e912/go.mod h1:no/Y67Jkk/9WuGR0JG/JseM9irFbnEPbuWV2EELPNuM=",
          "408: github.com/jackc/pgx/v4 v4.0.0-pre1.0.20190824185557-6972a5742186/go.mod h1:X+GQnOEnf1dqHGpw7JmHqHc1NxDoalibchSk9/RWuDc=",
          "409: github.com/jackc/pgx/v4 v4.5.0/go.mod h1:EpAKPLdnTorwmPUUsqrPxy5fphV18j9q3wrfRXgo+kA=",
          "410: github.com/jackc/pgx/v4 v4.6.1-0.20200510190926-94ba730bb1e9/go.mod h1:t3/cdRQl6fOLDxqtlyhe9UWgfIi9R8+8v8GKV5TRA/o=",
          "411: github.com/jackc/pgx/v4 v4.6.1-0.20200606145419-4e5062306904/go.mod h1:ZDaNWkt9sW1JMiNn0kdYBaLelIhw7Pg4qd+Vk6tw7Hg=",
          "412: github.com/jackc/pgx/v4 v4.11.0/go.mod h1:i62xJgdrtVDsnL3U8ekyrQXEwGNTRoG7/8r+CIdYfcc=",
          "413: github.com/jackc/pgx/v4 v4.12.0/go.mod h1:fE547h6VulLPA3kySjfnSG/e2D861g/50JlVUa/ub60=",
          "414: github.com/jackc/puddle v0.0.0-20190413234325-e4ced69a3a2b/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=",
          "415: github.com/jackc/puddle v0.0.0-20190608224051-11cab39313c9/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=",
          "416: github.com/jackc/puddle v1.1.0/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=",
          "417: github.com/jackc/puddle v1.1.1/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=",
          "418: github.com/jackc/puddle v1.1.3/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=",
          "419: github.com/jinzhu/copier v0.3.5 h1:GlvfUwHk62RokgqVNvYsku0TATCF7bAHVwEXoBh3iJg=",
          "420: github.com/jinzhu/copier v0.3.5/go.mod h1:DfbEm0FYsaqBcKcFuvmOZb218JkPGtvSHsKg8S8hyyg=",
          "423: github.com/jmespath/go-jmespath v0.0.0-20180206201540-c2b33e8439af/go.mod h1:Nht3zPeWKUH0NzdCt2Blrr5ys8VGpn0CEB0cQHVjt7k=",
          "424: github.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=",
          "428: github.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=",
          "429: github.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=",
          "430: github.com/json-iterator/go v1.1.8/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=",
          "434: github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=",
          "435: github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=",
          "436: github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=",
          "437: github.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=",
          "438: github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=",
          "439: github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=",
          "440: github.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=",
          "444: github.com/klauspost/cpuid/v2 v2.2.4 h1:acbojRNwl3o09bUq+yDCtZFc1aiwaAAxtcn8YkZXnvk=",
          "445: github.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=",
          "446: github.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=",
          "447: github.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=",
          "448: github.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=",
          "449: github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=",
          "451: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "452: github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=",
          "455: github.com/kr/pty v1.1.8/go.mod h1:O1sed60cT9XZ5uDucP5qwvh+TE3NnUj51EiZO/lmSfw=",
          "460: github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=",
          "461: github.com/leodido/go-urn v1.2.4 h1:XlAE/cm/ms7TE/VMVoduSpNBoyc2dOxHs5MZSwAN63Q=",
          "462: github.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "467: github.com/lestrrat-go/strftime v1.0.6 h1:CFGsDEt1pOpFNU+TJB0nhz9jl+K0hZSLE205AhTIGQQ=",
          "468: github.com/lestrrat-go/strftime v1.0.6/go.mod h1:f7jQKgV5nnJpYgdEasS+/y7EsTb8ykN2z68n3TtcTaw=",
          "469: github.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "470: github.com/lib/pq v1.1.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "471: github.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "472: github.com/lib/pq v1.3.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "473: github.com/lib/pq v1.10.2/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=",
          "474: github.com/lib/pq v1.10.7 h1:p7ZhMD+KsSRozJr34udlUrhboJwWAgCg34+/ZZNvZZw=",
          "475: github.com/lib/pq v1.10.7/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=",
          "476: github.com/lightstep/lightstep-tracer-common/golang/gogo v0.0.0-20190605223551-bc2310a04743/go.mod h1:qklhhLq1aX+mtWk9cPHPzaBjWImj5ULL6C7HFJtXQMM=",
          "477: github.com/lightstep/lightstep-tracer-go v0.18.1/go.mod h1:jlF1pusYV4pidLvZ+XD0UBX0ZE6WURAspgAczcDHrL4=",
          "478: github.com/lyft/protoc-gen-validate v0.0.13/go.mod h1:XbGvPuh87YZc5TdIa2/I4pLk0QoUACkjt2znoq26NVQ=",
          "479: github.com/magiconair/properties v1.8.6 h1:5ibWZ6iY0NctNGWo87LalDlEZ6R41TqbbDamhfG/Qzo=",
          "480: github.com/magiconair/properties v1.8.6/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=",
          "481: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "482: github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "483: github.com/mailru/easyjson v0.7.6/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=",
          "486: github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=",
          "487: github.com/mattn/go-colorable v0.1.1/go.mod h1:FuOcm+DKB9mbwrcAfNl7/TZVBZ6rcnceauSikq3lYCQ=",
          "488: github.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=",
          "489: github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=",
          "490: github.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=",
          "491: github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=",
          "492: github.com/mattn/go-isatty v0.0.5/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=",
          "493: github.com/mattn/go-isatty v0.0.7/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=",
          "494: github.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=",
          "495: github.com/mattn/go-isatty v0.0.9/go.mod h1:YNRxwqDuOph6SZLI9vUUz6OYw3QyUt7WiY2yME+cCiQ=",
          "497: github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=",
          "498: github.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=",
          "499: github.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=",
          "500: github.com/mattn/go-runewidth v0.0.2/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=",
          "501: github.com/mattn/go-sqlite3 v1.14.9/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=",
          "503: github.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=",
          "504: github.com/microcosm-cc/bluemonday v1.0.21 h1:dNH3e4PSyE4vNX+KlRGHT5KrSvjeUkoNPwEORjffHJg=",
          "505: github.com/microcosm-cc/bluemonday v1.0.21/go.mod h1:ytNkv4RrDrLJ2pqlsSI46O6IVXmZOBBD4SaJyDwwTkM=",
          "506: github.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=",
          "507: github.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=",
          "508: github.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=",
          "509: github.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=",
          "510: github.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=",
          "511: github.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=",
          "512: github.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=",
          "513: github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=",
          "522: github.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=",
          "525: github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "526: github.com/nats-io/jwt v0.3.0/go.mod h1:fRYCDE99xlTsqUzISS1Bi75UBJ6ljOJQOAAu5VglpSg=",
          "527: github.com/nats-io/jwt v0.3.2/go.mod h1:/euKqTS1ZD+zzjYrY7pseZrTtWQSjujC7xjPc8wL6eU=",
          "528: github.com/nats-io/nats-server/v2 v2.1.2/go.mod h1:Afk+wRZqkMQs/p45uXdrVLuab3gwv3Z8C4HTBu8GD/k=",
          "529: github.com/nats-io/nats.go v1.9.1/go.mod h1:ZjDU1L/7fJ09jvUSRVBR2e7+RnLiiIQyqyzEE/Zbp4w=",
          "530: github.com/nats-io/nkeys v0.1.0/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=",
          "531: github.com/nats-io/nkeys v0.1.3/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=",
          "532: github.com/nats-io/nuid v1.0.1/go.mod h1:19wcPz3Ph3q0Jbyiqsd0kePYG7A95tJPxeL+1OSON2c=",
          "533: github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=",
          "534: github.com/oklog/oklog v0.3.2/go.mod h1:FCV+B7mhrz4o+ueLpx+KqkyXRGMWOYEvfiXtdGtbWGs=",
          "535: github.com/oklog/run v1.0.0/go.mod h1:dlhp/R75TPv97u0XWUtDeV/lRKWPKSdTuV0TZvrmrQA=",
          "536: github.com/olekukonko/tablewriter v0.0.0-20170122224234-a0225b3f23b5/go.mod h1:vsDQFd/mU46D+Z4whnwzcISnGGzXWMclvtLoiIKAKIo=",
          "542: github.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=",
          "545: github.com/opencontainers/image-spec v1.0.2 h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=",
          "546: github.com/opencontainers/image-spec v1.0.2/go.mod h1:BtxoFyWECRxE4U/7sNtV5W15zMzWCbyJoFRP3s7yZA0=",
          "547: github.com/opencontainers/runc v1.1.9 h1:XR0VIHTGce5eWPkaPesqTBrhW2yAcaraWfsEalNwQLM=",
          "548: github.com/opencontainers/runc v1.1.9/go.mod h1:CbUumNnWCuTGFukNXahoo/RFBZvDAgRh/smNYNOhA50=",
          "549: github.com/opentracing-contrib/go-observer v0.0.0-20170622124052-a52f23424492/go.mod h1:Ngi6UdF0k5OKD5t5wlmGhe/EDKPoUM3BXZSSfIuJbis=",
          "550: github.com/opentracing/basictracer-go v1.0.0/go.mod h1:QfBfYuafItcjQuMwinw9GhYKwFXS9KnPs5lxoYwgW74=",
          "551: github.com/opentracing/opentracing-go v1.0.2/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=",
          "552: github.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=",
          "553: github.com/openzipkin-contrib/zipkin-go-opentracing v0.4.5/go.mod h1:/wsWhb9smxSfWAKL3wpBW7V8scJMt8N8gnaMCS9E/cA=",
          "554: github.com/openzipkin/zipkin-go v0.1.6/go.mod h1:QgAqvLzwWbR/WpD4A3cGpPtJrZXNIiJc5AZX7/PBEpw=",
          "555: github.com/openzipkin/zipkin-go v0.2.1/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=",
          "556: github.com/openzipkin/zipkin-go v0.2.2/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=",
          "557: github.com/ory/dockertest/v3 v3.10.0 h1:4K3z2VMe8Woe++invjaTB7VRyQXQy5UY+loujO4aNE4=",
          "558: github.com/ory/dockertest/v3 v3.10.0/go.mod h1:nr57ZbRWMqfsdGdFNLHz5jjNdDb7VVFnzAeW1n5N1Lg=",
          "559: github.com/otiai10/copy v1.7.0/go.mod h1:rmRl6QPdJj6EiUqXQ/4Nn2lLXoNQjFCQbbNrxgc/t3U=",
          "560: github.com/otiai10/curr v0.0.0-20150429015615-9b4961190c95/go.mod h1:9qAhocn7zKJG+0mI8eUu6xqkFDYS2kb2saOteoSB3cE=",
          "561: github.com/otiai10/curr v1.0.0/go.mod h1:LskTG5wDwr8Rs+nNQ+1LlxRjAtTZZjtJW4rMXl6j4vs=",
          "562: github.com/otiai10/mint v1.3.0/go.mod h1:F5AjcsTsWUqX+Na9fpHb52P8pcRX2CI6A3ctIT91xUo=",
          "563: github.com/otiai10/mint v1.3.3/go.mod h1:/yxELlJQ0ufhjUwhshSj+wFjZ78CnZ48/1wtmBH1OTc=",
          "564: github.com/pact-foundation/pact-go v1.0.4/go.mod h1:uExwJY4kCzNPcHRj+hCR/HBbOOIwwtUjcrb0b5/5kLM=",
          "565: github.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=",
          "568: github.com/pborman/uuid v1.2.0/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=",
          "569: github.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=",
          "570: github.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=",
          "571: github.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=",
          "572: github.com/pelletier/go-toml/v2 v2.0.8 h1:0ctb6s9mE31h0/lhu+J6OPmVeDxJn+kYnJc2jZR9tGQ=",
          "573: github.com/pelletier/go-toml/v2 v2.0.8/go.mod h1:vuYfssBdrU2XDZ9bYydBu6t+6a6PYNcZljzZR9VXg+4=",
          "574: github.com/performancecopilot/speed v3.0.0+incompatible/go.mod h1:/CLtqpZ5gBg1M9iaPbIdPPGyKcA8hKdoy6hAWba7Yac=",
          "575: github.com/pierrec/lz4 v1.0.2-0.20190131084431-473cd7ce01a1/go.mod h1:3/3N9NVKO0jef7pBehbT1qWhCMrIgbYNnFAZCqQ5LRc=",
          "576: github.com/pierrec/lz4 v2.0.5+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=",
          "577: github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=",
          "578: github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "579: github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "582: github.com/pkg/profile v1.2.1/go.mod h1:hJw3o1OdXxsrSjjVksARp5W95eeEaEfptyVZyv6JUPA=",
          "583: github.com/pkg/sftp v1.13.1/go.mod h1:3HaPG6Dq1ILlpPZRO0HVMrsydcdLt6HRDccSgb87qRg=",
          "584: github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=",
          "586: github.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=",
          "587: github.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=",
          "588: github.com/prometheus/client_golang v0.9.3-0.20190127221311-3c4408c8b829/go.mod h1:p2iRAGwDERtqlqzRXnrOVns+ignqQo//hLXqYxZYVNs=",
          "589: github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=",
          "590: github.com/prometheus/client_golang v1.3.0/go.mod h1:hJaj2vgQTGQmVCsAACORcieXFeDPbaTKGT+JTgUa3og=",
          "591: github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "592: github.com/prometheus/client_model v0.0.0-20190115171406-56726106282f/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "593: github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "594: github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "595: github.com/prometheus/client_model v0.1.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "596: github.com/prometheus/common v0.2.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=",
          "597: github.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=",
          "598: github.com/prometheus/common v0.7.0/go.mod h1:DjGbpBbp5NYNiECxcL/VnbXCCaQpKd3tt26CguLLsqA=",
          "599: github.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=",
          "600: github.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=",
          "601: github.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=",
          "602: github.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=",
          "603: github.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=",
          "604: github.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "609: github.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=",
          "610: github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=",
          "611: github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=",
          "612: github.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=",
          "613: github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=",
          "614: github.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=",
          "615: github.com/rs/zerolog v1.13.0/go.mod h1:YbFCdg8HfsridGWAh22vktObvhZbQsZXe4/zB0OKkWU=",
          "616: github.com/rs/zerolog v1.15.0/go.mod h1:xYTKnLHcpfU2225ny5qZjxnj9NvkumZYjJHlAThCjNc=",
          "617: github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=",
          "619: github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=",
          "620: github.com/samuel/go-zookeeper v0.0.0-20190923202752-2cc03de413da/go.mod h1:gi+0XIa01GRL2eRQVjQkKGqKF3SF9vZR/HnPullcV2E=",
          "621: github.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=",
          "624: github.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=",
          "629: github.com/segmentfault/pacman/contrib/conf/viper v0.0.0-20221018072427-a15dd1434e05 h1:BlqTgc3/MYKG6vMI2MI+6o+7P4Gy5PXlawu185wPXAk=",
          "630: github.com/segmentfault/pacman/contrib/conf/viper v0.0.0-20221018072427-a15dd1434e05/go.mod h1:prPjFam7MyZ5b3S9dcDOt2tMPz6kf7C9c243s9zSwPY=",
          "631: github.com/segmentfault/pacman/contrib/i18n v0.0.0-20230516093754-b76aef1c1150 h1:OEuW1D7RGDE0CZDr0oGMw9Eiq7fAbD9C4WMrvSixamk=",
          "632: github.com/segmentfault/pacman/contrib/i18n v0.0.0-20230516093754-b76aef1c1150/go.mod h1:7QcRmnV7OYq4hNOOCWXT5HXnN/u756JUsqIW0Bw8n9E=",
          "633: github.com/segmentfault/pacman/contrib/log/zap v0.0.0-20221018072427-a15dd1434e05 h1:jcGZU2juv0L3eFEkuZYV14ESLUlWfGMWnP0mjOfrSZc=",
          "634: github.com/segmentfault/pacman/contrib/log/zap v0.0.0-20221018072427-a15dd1434e05/go.mod h1:L4GqtXLoR73obTYqUQIzfkm8NG8pvZafxFb6KZFSSHk=",
          "635: github.com/segmentfault/pacman/contrib/server/http v0.0.0-20221018072427-a15dd1434e05 h1:91is1nKNbfTOl8CvMYiFgg4c5Vmol+5mVmMV/jDXD+A=",
          "636: github.com/segmentfault/pacman/contrib/server/http v0.0.0-20221018072427-a15dd1434e05/go.mod h1:UjNiOFYv1uGCq1ZCcONaKq4eE7MW3nbgpLqgl8f9N40=",
          "637: github.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=",
          "638: github.com/shopspring/decimal v0.0.0-20200227202807-02e2044944cc/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=",
          "639: github.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=",
          "640: github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=",
          "641: github.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=",
          "642: github.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=",
          "643: github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=",
          "646: github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=",
          "647: github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=",
          "648: github.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=",
          "649: github.com/sony/gobreaker v0.4.1/go.mod h1:ZKptC7FHNvhBz7dN2LGjPVBz2sZJmc0/PkyDJOjmxWY=",
          "650: github.com/spf13/afero v1.9.2 h1:j49Hj62F0n+DaZ1dDCvhABaPNSGNkt32oRFxI33IEMw=",
          "651: github.com/spf13/afero v1.9.2/go.mod h1:iUV7ddyEEZPO5gA3zD4fJt6iStLlL+Lg4m2cihcDf8Y=",
          "652: github.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=",
          "653: github.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=",
          "654: github.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=",
          "655: github.com/spf13/cobra v1.6.1 h1:o94oiPyS4KD1mPy2fmcYYHHfCxLqYjJOhGsCHFZtEzA=",
          "656: github.com/spf13/cobra v1.6.1/go.mod h1:IOw/AERYS7UzyrGinqmz6HLUo219MORXGxhbaJUqzrY=",
          "657: github.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=",
          "658: github.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=",
          "659: github.com/spf13/pflag v1.0.1/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=",
          "662: github.com/spf13/viper v1.13.0 h1:BWSJ/M+f+3nmdz9bxB+bWX28kkALN2ok11D0rSo8EJU=",
          "663: github.com/spf13/viper v1.13.0/go.mod h1:Icm2xNL3/8uyh/wFuB1jI7TiTNKp8632Nwegu+zgdYw=",
          "664: github.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=",
          "665: github.com/streadway/amqp v0.0.0-20190827072141-edfb9018d271/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=",
          "666: github.com/streadway/handy v0.0.0-20190108123426-d5acb3125c2a/go.mod h1:qNTQ5P5JnDBl6z3cMAg/SywNDC5ABu5ApDIw6lUbRmI=",
          "668: github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=",
          "669: github.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=",
          "672: github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=",
          "675: github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=",
          "676: github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "681: github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "682: github.com/stretchr/testify v1.8.3/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "683: github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=",
          "684: github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "685: github.com/subosito/gotenv v1.4.1 h1:jyEFiXpy21Wm81FBN71l9VoMMV8H8jG+qIK3GCpY6Qs=",
          "686: github.com/subosito/gotenv v1.4.1/go.mod h1:ayKnFf/c6rvx/2iiLrJUk1e6plDbT3edrFNGqEflhK0=",
          "687: github.com/swaggo/files v0.0.0-20220728132757-551d4a08d97a/go.mod h1:lKJPbtWzJ9JhsTN1k1gZgleJWY/cqq0psdoMmaThG3w=",
          "688: github.com/swaggo/files v1.0.0 h1:1gGXVIeUFCS/dta17rnP0iOpr6CXFwKD7EO5ID233e4=",
          "689: github.com/swaggo/files v1.0.0/go.mod h1:N59U6URJLyU1PQgFqPM7wXLMhJx7QAolnvfQkqO13kc=",
          "690: github.com/swaggo/gin-swagger v1.5.3 h1:8mWmHLolIbrhJJTflsaFoZzRBYVmEE7JZGIq08EiC0Q=",
          "691: github.com/swaggo/gin-swagger v1.5.3/go.mod h1:3XJKSfHjDMB5dBo/0rrTXidPmgLeqsX89Yp4uA50HpI=",
          "692: github.com/swaggo/swag v1.8.1/go.mod h1:ugemnJsPZm/kRwFUnzBlbHRd0JY9zE1M4F+uy2pAaPQ=",
          "697: github.com/tidwall/gjson v1.14.4 h1:uo0p8EbA09J7RQaflQ1aBRffTR7xedD2bcIVSYxLnkM=",
          "698: github.com/tidwall/gjson v1.14.4/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=",
          "701: github.com/tidwall/pretty v1.2.0 h1:RWIZEg2iJ8/g6fDDYzMpobmaoGh5OLl4AXtGUGPcqCs=",
          "703: github.com/tmc/grpc-websocket-proxy v0.0.0-20170815181823-89b8d40f7ca8/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=",
          "707: github.com/ugorji/go v1.2.7/go.mod h1:nF9osbDWLy6bDVv/Rtoh6QgnvNDpmCalQV5urGCCS6M=",
          "709: github.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=",
          "710: github.com/ugorji/go/codec v1.2.11 h1:BMaWp1Bb6fHwEtbplGBGJ498wD+LKlNSl25MjdZY4dU=",
          "711: github.com/ugorji/go/codec v1.2.11/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "712: github.com/urfave/cli v1.20.0/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=",
          "713: github.com/urfave/cli v1.22.1/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=",
          "714: github.com/urfave/cli/v2 v2.3.0/go.mod h1:LJmUH05zAU44vOAcrfzZQKsZbVcdbOG8rtL3/XcUArI=",
          "",
          "[Added Lines]",
          "1: dario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=",
          "2: dario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=",
          "3: filippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=",
          "4: filippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=",
          "19: github.com/Masterminds/semver/v3 v3.3.0 h1:B8LGeaivUe71a5qox1ICM/JLl0NqZSW5CHyL+hmvYS0=",
          "20: github.com/Masterminds/semver/v3 v3.3.0/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=",
          "21: github.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=",
          "22: github.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=",
          "28: github.com/andybalholm/brotli v1.1.0 h1:eLKJA0d02Lf0mVpIDgYnqXcUn0GqVmEFny3VuID1U3M=",
          "29: github.com/andybalholm/brotli v1.1.0/go.mod h1:sms7XGricyQI9K10gOSf56VKKWS4oLer58Q+mhRPtnY=",
          "30: github.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2 h1:DklsrG3dyBCFEj5IhUbnKptjxatkF07cF2ak3yi77so=",
          "31: github.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2/go.mod h1:WaHUgvxTVq04UNunO+XhnAqY/wQc+bxr74GqbsZ/Jqw=",
          "36: github.com/bytedance/sonic v1.12.2 h1:oaMFuRTpMHYLpCntGca65YWt5ny+wAceDERTkT2L9lg=",
          "37: github.com/bytedance/sonic v1.12.2/go.mod h1:B8Gt/XvtZ3Fqj+iSKMypzymZxw/FVwgIGKzMzT9r/rk=",
          "38: github.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=",
          "39: github.com/bytedance/sonic/loader v0.2.0 h1:zNprn+lsIP06C/IqCHs3gPQIvnvpKbbxyXQP1iU4kWM=",
          "40: github.com/bytedance/sonic/loader v0.2.0/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=",
          "41: github.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=",
          "42: github.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=",
          "43: github.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=",
          "44: github.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=",
          "45: github.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=",
          "46: github.com/cloudwego/iasm v0.2.0/go.mod h1:8rXZaNYT2n95jn+zTI1sDr+IgcD2GVs0nlbbQPiEFhY=",
          "47: github.com/containerd/continuity v0.4.3 h1:6HVkalIp+2u1ZLH1J/pYX2oBVXlJZvh1X1A7bEZ9Su8=",
          "48: github.com/containerd/continuity v0.4.3/go.mod h1:F6PTNCKepoxEaXLQp3wDAjygEnImnZ/7o4JzpodfroQ=",
          "49: github.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=",
          "51: github.com/creack/pty v1.1.18/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=",
          "54: github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=",
          "55: github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "58: github.com/docker/cli v27.2.1+incompatible h1:U5BPtiD0viUzjGAjV1p0MGB8eVA3L3cbIrnyWmSJI70=",
          "59: github.com/docker/cli v27.2.1+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=",
          "60: github.com/docker/docker v27.2.1+incompatible h1:fQdiLfW7VLscyoeYEBz7/J8soYFDZV1u6VW6gJEjNMI=",
          "61: github.com/docker/docker v27.2.1+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=",
          "62: github.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=",
          "63: github.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=",
          "67: github.com/dsoprea/go-exif v0.0.0-20230826092837-6579e82b732d h1:ygcRCGNKuEiA98k7X35hknEN8RIRUF1jrz7k1rZCvsk=",
          "68: github.com/dsoprea/go-exif v0.0.0-20230826092837-6579e82b732d/go.mod h1:lOaOt7+UEppOgyvRy749v3do836U/hw0YVJNjoyPaEs=",
          "69: github.com/dsoprea/go-exif/v2 v2.0.0-20200321225314-640175a69fe4/go.mod h1:Lm2lMM2zx8p4a34ZemkaUV95AnMl4ZvLbCUbwOvLC2E=",
          "70: github.com/dsoprea/go-exif/v2 v2.0.0-20200604193436-ca8584a0e1c4/go.mod h1:9EXlPeHfblFFnwu5UOqmP2eoZfJyAZ2Ri/Vki33ajO0=",
          "71: github.com/dsoprea/go-exif/v2 v2.0.0-20230826092837-6579e82b732d h1:yeH8wrJa3+8uKKDAdURHUK1ds2UvKhMqX2MiOdVeKPs=",
          "72: github.com/dsoprea/go-exif/v2 v2.0.0-20230826092837-6579e82b732d/go.mod h1:oKrjk2kb3rAR5NbtSTLUMvMSbc+k8ZosI3MaVH47noc=",
          "73: github.com/dsoprea/go-exif/v3 v3.0.0-20200717053412-08f1b6708903/go.mod h1:0nsO1ce0mh5czxGeLo4+OCZ/C6Eo6ZlMWsz7rH/Gxv8=",
          "74: github.com/dsoprea/go-exif/v3 v3.0.0-20210512043655-120bcdb2a55e/go.mod h1:cg5SNYKHMmzxsr9X6ZeLh/nfBRHHp5PngtEPcujONtk=",
          "75: github.com/dsoprea/go-iptc v0.0.0-20200609062250-162ae6b44feb/go.mod h1:kYIdx9N9NaOyD7U6D+YtExN7QhRm+5kq7//yOsRXQtM=",
          "76: github.com/dsoprea/go-iptc v0.0.0-20200610044640-bc9ca208b413 h1:YDRiMEm32T60Kpm35YzOK9ZHgjsS1Qrid+XskNcsdp8=",
          "77: github.com/dsoprea/go-iptc v0.0.0-20200610044640-bc9ca208b413/go.mod h1:kYIdx9N9NaOyD7U6D+YtExN7QhRm+5kq7//yOsRXQtM=",
          "79: github.com/dsoprea/go-jpeg-image-structure v0.0.0-20221012074422-4f3f7e934102 h1:P1dsxzctGkmG6Zf7gH2xrZhNXWP5/FuLDI7xbCGsWTo=",
          "80: github.com/dsoprea/go-jpeg-image-structure v0.0.0-20221012074422-4f3f7e934102/go.mod h1:6+tQXZ+I62x13UZ+hemLVoZIuq/usVzvau7bqwUo9P0=",
          "82: github.com/dsoprea/go-logging v0.0.0-20200517223158-a10564966e9d/go.mod h1:7I+3Pe2o/YSU88W0hWlm9S22W7XI1JFNJ86U0zPKMf8=",
          "83: github.com/dsoprea/go-logging v0.0.0-20200710184922-b02d349568dd h1:l+vLbuxptsC6VQyQsfD7NnEC8BZuFpz45PgY+pH8YTg=",
          "84: github.com/dsoprea/go-logging v0.0.0-20200710184922-b02d349568dd/go.mod h1:7I+3Pe2o/YSU88W0hWlm9S22W7XI1JFNJ86U0zPKMf8=",
          "85: github.com/dsoprea/go-photoshop-info-format v0.0.0-20200609050348-3db9b63b202c/go.mod h1:pqKB+ijp27cEcrHxhXVgUUMlSDRuGJJp1E+20Lj5H0E=",
          "86: github.com/dsoprea/go-photoshop-info-format v0.0.0-20200610045659-121dd752914d h1:dg6UMHa50VI01WuPWXPbNJpO8QSyvIF5T5n2IZiqX3A=",
          "87: github.com/dsoprea/go-photoshop-info-format v0.0.0-20200610045659-121dd752914d/go.mod h1:pqKB+ijp27cEcrHxhXVgUUMlSDRuGJJp1E+20Lj5H0E=",
          "89: github.com/dsoprea/go-png-image-structure v0.0.0-20210512210324-29b889a6093d h1:8+qI8ant/vZkNSsbwSjIR6XJfWcDVTg/qx/3pRUUZNA=",
          "90: github.com/dsoprea/go-png-image-structure v0.0.0-20210512210324-29b889a6093d/go.mod h1:yTR3tKgyk20phAFg6IE9ulMA5NjEDD2wyx+okRFLVtw=",
          "91: github.com/dsoprea/go-utility v0.0.0-20200711062821-fab8125e9bdf/go.mod h1:95+K3z2L0mqsVYd6yveIv1lmtT3tcQQ3dVakPySffW8=",
          "92: github.com/dsoprea/go-utility v0.0.0-20221003172846-a3e1774ef349 h1:/py11NlxDaOxkT9OKN+gXgT+QOH5xj1ZRoyusfRIlo4=",
          "93: github.com/dsoprea/go-utility v0.0.0-20221003172846-a3e1774ef349/go.mod h1:KVK+/Hul09ujXAGq+42UBgCTnXkiJZRnLYdURGjQUwo=",
          "94: github.com/dsoprea/go-utility/v2 v2.0.0-20200717064901-2fccff4aa15e/go.mod h1:uAzdkPTub5Y9yQwXe8W4m2XuP0tK4a9Q/dantD0+uaU=",
          "97: github.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=",
          "98: github.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=",
          "100: github.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=",
          "101: github.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=",
          "102: github.com/gabriel-vasile/mimetype v1.4.5 h1:J7wGKdGu33ocBOhGy0z653k/lFKLFDPJMG8Gql0kxn4=",
          "103: github.com/gabriel-vasile/mimetype v1.4.5/go.mod h1:ibHel+/kbxn9x2407k1izTA1S81ku1z/DlgOW2QE0M4=",
          "109: github.com/gin-gonic/gin v1.10.0 h1:nTuyha1TYqgedzytsKYqna+DfLos46nTv2ygFy86HFU=",
          "110: github.com/gin-gonic/gin v1.10.0/go.mod h1:4PMNQiOhvDRa013RKVbsiNwoyezlm2rm0uX/T7kzp5Y=",
          "112: github.com/go-errors/errors v1.0.2/go.mod h1:psDX2osz5VnTOnFWbDeWwS7yejl+uV3FEWEp4lssFEs=",
          "113: github.com/go-errors/errors v1.1.1/go.mod h1:psDX2osz5VnTOnFWbDeWwS7yejl+uV3FEWEp4lssFEs=",
          "114: github.com/go-errors/errors v1.5.1 h1:ZwEMSLRCapFLflTpT7NKaAc7ukJ8ZPEjzlxt8rPN8bk=",
          "115: github.com/go-errors/errors v1.5.1/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=",
          "116: github.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=",
          "117: github.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=",
          "118: github.com/go-openapi/jsonreference v0.21.0 h1:Rs+Y7hSXT83Jacb7kFyjn4ijOuVGSvOdF2+tg1TRrwQ=",
          "119: github.com/go-openapi/jsonreference v0.21.0/go.mod h1:LmZmgsrTkVg9LG4EaHeY8cBDslNPMo06cago5JNLkm4=",
          "120: github.com/go-openapi/spec v0.21.0 h1:LTVzPc3p/RzRnkQqLRndbAzjY0d0BCL72A6j3CdL9ZY=",
          "121: github.com/go-openapi/spec v0.21.0/go.mod h1:78u6VdPw81XU44qEWGhtr982gJ5BWg2c0I5XwVMotYk=",
          "122: github.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=",
          "123: github.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=",
          "126: github.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=",
          "134: github.com/go-playground/validator/v10 v10.22.1 h1:40JcKH+bBNGFczGuoBYgX4I6m/i27HYW8P9FDk5PbgA=",
          "135: github.com/go-playground/validator/v10 v10.22.1/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=",
          "136: github.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=",
          "137: github.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=",
          "138: github.com/go-viper/mapstructure/v2 v2.1.0 h1:gHnMa2Y/pIxElCH2GlZZ1lZSsn6XMtufpGyP1XxdC/w=",
          "139: github.com/go-viper/mapstructure/v2 v2.1.0/go.mod h1:oJDH3BJKyqBA2TXFhDsKDGDTlndYOZ6rGS0BRZIxGhM=",
          "140: github.com/go-xmlfmt/xmlfmt v0.0.0-20191208150333-d5b6f63a941b/go.mod h1:aUCEOzzezBEjDBbFBoSiya/gduyIiWYRP6CnSFIV8AM=",
          "141: github.com/go-xmlfmt/xmlfmt v1.1.2 h1:Nea7b4icn8s57fTx1M5AI4qQT5HEM3rVUO8MuE6g80U=",
          "142: github.com/go-xmlfmt/xmlfmt v1.1.2/go.mod h1:aUCEOzzezBEjDBbFBoSiya/gduyIiWYRP6CnSFIV8AM=",
          "143: github.com/goccy/go-json v0.10.3 h1:KZ5WoDbxAIgm2HNbYckL0se1fHD6rz5j4ywS6ebzDqA=",
          "144: github.com/goccy/go-json v0.10.3/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=",
          "148: github.com/golang/geo v0.0.0-20190916061304-5b978397cfec/go.mod h1:QZ0nwyI2jOfgRAoBvP+ab5aRr7c9x7lhGEJrKvBwjWI=",
          "149: github.com/golang/geo v0.0.0-20200319012246-673a6f80352d/go.mod h1:QZ0nwyI2jOfgRAoBvP+ab5aRr7c9x7lhGEJrKvBwjWI=",
          "150: github.com/golang/geo v0.0.0-20230421003525-6adc56603217 h1:HKlyj6in2JV6wVkmQ4XmG/EIm+SCYlPZ+V4GWit7Z+I=",
          "151: github.com/golang/geo v0.0.0-20230421003525-6adc56603217/go.mod h1:8wI0hitZ3a1IxZfeH3/5I97CI8i5cLGsYe7xNhQGs9U=",
          "160: github.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=",
          "161: github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=",
          "162: github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=",
          "164: github.com/google/pprof v0.0.0-20240409012703-83162a5b38cd h1:gbpYu9NMq8jhDVbvlGkMFWCjLFlqqEZjEmObmhUy6Vo=",
          "165: github.com/google/pprof v0.0.0-20240409012703-83162a5b38cd/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=",
          "169: github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=",
          "170: github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "173: github.com/gorilla/css v1.0.1 h1:ntNaBIghp6JmvWnxbZKANoLyuXTPZ4cAMlo6RyhlbO8=",
          "174: github.com/gorilla/css v1.0.1/go.mod h1:BvnYkspnSzMmwRK+b8/xgNPLiIuNZr6vbZBTPQ2A3b0=",
          "175: github.com/grokify/html-strip-tags-go v0.1.0 h1:03UrQLjAny8xci+R+qjCce/MYnpNXCtgzltlQbOBae4=",
          "176: github.com/grokify/html-strip-tags-go v0.1.0/go.mod h1:ZdzgfHEzAfz9X6Xe5eBLVblWIxXfYSQ40S/VKrAOGpc=",
          "177: github.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=",
          "178: github.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=",
          "183: github.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=",
          "184: github.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=",
          "185: github.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=",
          "186: github.com/jinzhu/copier v0.4.0 h1:w3ciUoD19shMCRargcpm0cm91ytaBhDvuRpz1ODO/U8=",
          "187: github.com/jinzhu/copier v0.4.0/go.mod h1:DfbEm0FYsaqBcKcFuvmOZb218JkPGtvSHsKg8S8hyyg=",
          "191: github.com/jonboulle/clockwork v0.3.0/go.mod h1:Pkfl5aHPm1nk2H9h0bjmnJD/BcgbGXUBGnn1kMkgxc8=",
          "200: github.com/klauspost/cpuid/v2 v2.2.8 h1:+StwCXwm9PdpiEkPyzBXIy+M9KUb4ODm0Zarf1kS5BM=",
          "201: github.com/klauspost/cpuid/v2 v2.2.8/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=",
          "202: github.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=",
          "205: github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=",
          "211: github.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=",
          "212: github.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=",
          "217: github.com/lestrrat-go/strftime v1.1.0 h1:gMESpZy44/4pXLO/m+sL0yBd1W6LjgjrrD4a68Gapyg=",
          "218: github.com/lestrrat-go/strftime v1.1.0/go.mod h1:uzeIB52CeUJenCo1syghlugshMysrqUT51HlxphXVeI=",
          "219: github.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=",
          "220: github.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=",
          "221: github.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=",
          "222: github.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=",
          "226: github.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=",
          "227: github.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=",
          "229: github.com/mattn/go-sqlite3 v1.14.16/go.mod h1:2eHXhiwb8IkHr+BDWZGa96P6+rkvnG63S2DGjv9HUNg=",
          "230: github.com/microcosm-cc/bluemonday v1.0.27 h1:MpEUotklkwCSLeH+Qdx1VJgNqLlpY2KXwXFM08ygZfk=",
          "231: github.com/microcosm-cc/bluemonday v1.0.27/go.mod h1:jFi9vgW+H7c3V0lb6nR74Ib/DIB5OBs92Dimizgw2cA=",
          "234: github.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=",
          "235: github.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=",
          "244: github.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=",
          "245: github.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=",
          "253: github.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=",
          "254: github.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=",
          "255: github.com/opencontainers/runc v1.1.14 h1:rgSuzbmgz5DUJjeSnw337TxDbRuqjs6iqQck/2weR6w=",
          "256: github.com/opencontainers/runc v1.1.14/go.mod h1:E4C2z+7BxR7GHXp0hAY53mek+x49X1LjPNeMTfRGvOA=",
          "257: github.com/ory/dockertest/v3 v3.11.0 h1:OiHcxKAvSDUwsEVh2BjxQQc/5EHz9n0va9awCtNGuyA=",
          "258: github.com/ory/dockertest/v3 v3.11.0/go.mod h1:VIPxS1gwT9NpPOrfD3rACs8Y9Z7yhzO4SB194iUDnUI=",
          "261: github.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=",
          "262: github.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=",
          "266: github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=",
          "267: github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=",
          "272: github.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=",
          "273: github.com/rogpeppe/go-internal v1.11.0/go.mod h1:ddIwULY96R17DhadqLgMfk9H9tvdUzkipdSkR5nkCZA=",
          "275: github.com/sagikazarmark/locafero v0.6.0 h1:ON7AQg37yzcRPU69mt7gwhFEBwxI6P9T4Qu3N51bwOk=",
          "276: github.com/sagikazarmark/locafero v0.6.0/go.mod h1:77OmuIc6VTraTXKXIs/uvUxKGUXjE1GbemJYHqdNjX0=",
          "277: github.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=",
          "278: github.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=",
          "285: github.com/segmentfault/pacman/contrib/conf/viper v0.0.0-20230822083413-c0075a2d401f h1:/nA4C3UfWw+3XYVBkgVMY1p3nX3uhl22hL2LW3FNcVs=",
          "286: github.com/segmentfault/pacman/contrib/conf/viper v0.0.0-20230822083413-c0075a2d401f/go.mod h1:prPjFam7MyZ5b3S9dcDOt2tMPz6kf7C9c243s9zSwPY=",
          "287: github.com/segmentfault/pacman/contrib/i18n v0.0.0-20230822083413-c0075a2d401f h1:xia6AXJor4UV4T6htmHlfN7CGXZ04vlWwybVtFKJ/mA=",
          "288: github.com/segmentfault/pacman/contrib/i18n v0.0.0-20230822083413-c0075a2d401f/go.mod h1:7QcRmnV7OYq4hNOOCWXT5HXnN/u756JUsqIW0Bw8n9E=",
          "289: github.com/segmentfault/pacman/contrib/log/zap v0.0.0-20230822083413-c0075a2d401f h1:0mrzVRrQ+mz5MWQSdC1y6dwKWiewYKkpRDqNf3nOhmk=",
          "290: github.com/segmentfault/pacman/contrib/log/zap v0.0.0-20230822083413-c0075a2d401f/go.mod h1:L4GqtXLoR73obTYqUQIzfkm8NG8pvZafxFb6KZFSSHk=",
          "291: github.com/segmentfault/pacman/contrib/server/http v0.0.0-20230822083413-c0075a2d401f h1:2gjiRmSj3J/F3A1A22UU1BzO4gQypEZx/4D7c7Ue4Ag=",
          "292: github.com/segmentfault/pacman/contrib/server/http v0.0.0-20230822083413-c0075a2d401f/go.mod h1:UjNiOFYv1uGCq1ZCcONaKq4eE7MW3nbgpLqgl8f9N40=",
          "295: github.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=",
          "296: github.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=",
          "297: github.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=",
          "298: github.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=",
          "299: github.com/spf13/cast v1.7.0 h1:ntdiHjuueXFgm5nzDRdOS4yfT43P5Fnud6DH50rz/7w=",
          "300: github.com/spf13/cast v1.7.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=",
          "301: github.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=",
          "302: github.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=",
          "305: github.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=",
          "306: github.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=",
          "316: github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=",
          "317: github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=",
          "318: github.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=",
          "319: github.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=",
          "320: github.com/swaggo/files v1.0.1 h1:J1bVJ4XHZNq0I46UU90611i9/YzdrF7x92oX1ig5IdE=",
          "321: github.com/swaggo/files v1.0.1/go.mod h1:0qXmMNH6sXNf+73t65aKeB+ApmgxdnkQzVTAj2uaMUg=",
          "322: github.com/swaggo/gin-swagger v1.6.0 h1:y8sxvQ3E20/RCyrXeFfg60r6H0Z+SwpTjMYsMm+zy8M=",
          "323: github.com/swaggo/gin-swagger v1.6.0/go.mod h1:BG00cCEy294xtVpyIAHG6+e2Qzj/xKlRdOqDkvq0uzo=",
          "328: github.com/tidwall/gjson v1.17.3 h1:bwWLZU7icoKRG+C+0PNwIKC6FCJO/Q3p2pZvuP0jN94=",
          "329: github.com/tidwall/gjson v1.17.3/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=",
          "333: github.com/tidwall/pretty v1.2.1 h1:qjsOFOWWQl+N3RsoF5/ssm1pHmJJwhjlSbZ51I6wMl4=",
          "334: github.com/tidwall/pretty v1.2.1/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=",
          "339: github.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=",
          "340: github.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "719: github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=",
          "720: github.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=",
          "721: github.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=",
          "724: github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "726: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "727: github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=",
          "730: github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=",
          "768: golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=",
          "776: golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "778: golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "784: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "800: golang.org/x/image v0.0.0-20191009234506-e7c1f5e7dbb8/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=",
          "820: golang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "821: golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "824: golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "825: golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=",
          "830: golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "838: golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "839: golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "844: golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "848: golang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "852: golang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "855: golang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=",
          "857: golang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=",
          "858: golang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=",
          "862: golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=",
          "866: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "867: golang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=",
          "871: golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "873: golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "885: golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "889: golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "890: golang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "893: golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "895: golang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "896: golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "901: golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "906: golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "910: golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "925: golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "931: golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "939: golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "940: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "946: golang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "950: golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "951: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "952: golang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "959: golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "961: golang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "962: golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "965: golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "966: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "970: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "971: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "973: golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=",
          "975: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "977: golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=",
          "978: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "981: golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=",
          "982: golang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=",
          "983: golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=",
          "992: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "999: golang.org/x/tools v0.0.0-20190422233926-fe54fb35175b/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "1015: golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1036: golang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "1046: golang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "1049: golang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=",
          "1051: golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=",
          "1056: golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1057: golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1058: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1059: golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1161: gopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc h1:2gGKlE2+asNV9m7xrywl36YYNnBG5ZQ0r/BOOxqPpmk=",
          "1162: gopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc/go.mod h1:m7x9LTH6d71AHyAX77c9yqWCCa3UKHcVEj9y7hAtKDk=",
          "1163: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1165: gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1167: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "1168: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "1171: gopkg.in/fsnotify.v1 v1.4.7 h1:xOHLXZwVvI9hhs+cLKq5+I5onOuwQLhQwiu63xxlHs4=",
          "1172: gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=",
          "1174: gopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df h1:n7WqCuqOuCbNr617RXOY0AWRXxgwEyPp2z+p0+hgMuE=",
          "1175: gopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df/go.mod h1:LRQQ+SO6ZHR7tOkpBDuZnXENFzX8qRjMDMyPD6BRkCw=",
          "1177: gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=",
          "1178: gopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=",
          "1180: gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=",
          "1181: gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=",
          "1184: gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1185: gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1187: gopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1188: gopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1189: gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=",
          "1190: gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=",
          "1191: gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1194: gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=",
          "1195: gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "",
          "[Removed Lines]",
          "722: github.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=",
          "723: github.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "725: github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "728: github.com/yuin/goldmark v1.4.0/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=",
          "729: github.com/yuin/goldmark v1.4.13 h1:fVcFKWvrslecOb/tg+Cc05dkeYx540o0FuFt3nUVDoE=",
          "731: github.com/zenazn/goji v0.9.0/go.mod h1:7S9M489iMyHBNxwZnk9/EHS098H4/F6TATF2mIxtB1Q=",
          "732: github.com/ziutek/mymysql v1.5.4/go.mod h1:LMSpPZ6DbqWFxNCHW77HeMg9I646SAhApZ/wKdgO/C0=",
          "733: gitlab.com/cznic/cc/v3 v3.40.0 h1:3yn6qVCeHjTSJio35QIhNsD5POKm7ETHXS54yKqzDEo=",
          "734: gitlab.com/cznic/cc/v3 v3.40.0/go.mod h1:/bTg4dnWkSXowUO6ssQKnOV0yMVxDYNIsIrzqTFDGH0=",
          "735: go.etcd.io/bbolt v1.3.3/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=",
          "736: go.etcd.io/etcd v0.0.0-20191023171146-3cf2f69b5738/go.mod h1:dnLIgRNXwCJa5e+c6mIZCrds/GIG4ncV9HhK5PX7jPg=",
          "737: go.opencensus.io v0.20.1/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=",
          "738: go.opencensus.io v0.20.2/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=",
          "739: go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=",
          "740: go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=",
          "741: go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=",
          "742: go.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=",
          "743: go.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=",
          "744: go.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=",
          "745: go.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=",
          "746: go.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=",
          "747: go.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=",
          "748: go.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=",
          "749: go.uber.org/atomic v1.10.0 h1:9qC72Qh0+3MqyJbAn8YU5xVq1frD8bn3JtD2oXtafVQ=",
          "750: go.uber.org/atomic v1.10.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=",
          "751: go.uber.org/goleak v1.1.11 h1:wy28qYRKZgnJTxGxvye5/wgWr1EKjmUDGYox5mGlRlI=",
          "752: go.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=",
          "753: go.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=",
          "754: go.uber.org/multierr v1.5.0/go.mod h1:FeouvMocqHpRaaGuG9EjoKcStLC43Zu/fmqdUMPcKYU=",
          "755: go.uber.org/multierr v1.10.0 h1:S0h4aNzvfcFsC3dRF1jLoaov7oRaKqRGC/pUEJ2yvPQ=",
          "756: go.uber.org/multierr v1.10.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=",
          "757: go.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=",
          "758: go.uber.org/zap v1.9.1/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=",
          "759: go.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=",
          "760: go.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=",
          "761: go.uber.org/zap v1.24.0 h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=",
          "762: go.uber.org/zap v1.24.0/go.mod h1:2kMP+WWQ8aoFoedH3T2sq6iJ2yDWpHbP0f6MQbS9Gkg=",
          "763: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "764: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "765: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "766: golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "767: golang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "769: golang.org/x/crypto v0.0.0-20190325154230-a5d413f7728c/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=",
          "770: golang.org/x/crypto v0.0.0-20190411191339-88737f569e3a/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=",
          "771: golang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "772: golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "773: golang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "774: golang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "775: golang.org/x/crypto v0.0.0-20190911031432-227b76d455e7/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "777: golang.org/x/crypto v0.0.0-20200323165209-0ec3e9974c59/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "779: golang.org/x/crypto v0.0.0-20201203163018-be400aefbc4c/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "780: golang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "781: golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "782: golang.org/x/crypto v0.0.0-20210616213533-5ff15b29337e/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "783: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "785: golang.org/x/crypto v0.0.0-20211108221036-ceb1ce70b4fa/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "786: golang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=",
          "787: golang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=",
          "788: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "789: golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "790: golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=",
          "791: golang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=",
          "792: golang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=",
          "793: golang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=",
          "794: golang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=",
          "795: golang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=",
          "796: golang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=",
          "797: golang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=",
          "798: golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=",
          "799: golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=",
          "801: golang.org/x/image v0.13.0 h1:3cge/F/QTkNLauhf2QoE9zp+7sr+ZcL4HnoZmdwg9sg=",
          "802: golang.org/x/image v0.13.0/go.mod h1:6mmbMOeV28HuMTgA6OSRkdXKYw/t5W9Uwn2Yv1r3Yxk=",
          "803: golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=",
          "804: golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=",
          "805: golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=",
          "806: golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=",
          "807: golang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=",
          "808: golang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=",
          "809: golang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=",
          "810: golang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=",
          "811: golang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=",
          "812: golang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=",
          "813: golang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=",
          "814: golang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=",
          "815: golang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=",
          "816: golang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=",
          "817: golang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=",
          "818: golang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=",
          "819: golang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=",
          "822: golang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "823: golang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "826: golang.org/x/mod v0.12.0 h1:rmsUpXtvNzj340zd98LZ4KntptpfRHwpFOHG188oHXc=",
          "827: golang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=",
          "828: golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "829: golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "831: golang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "832: golang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "833: golang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "834: golang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "835: golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "836: golang.org/x/net v0.0.0-20190125091013-d26f9f9a57f3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "837: golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "840: golang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "841: golang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "842: golang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=",
          "843: golang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "845: golang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "846: golang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "847: golang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "849: golang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "850: golang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "851: golang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "853: golang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "854: golang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=",
          "856: golang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=",
          "859: golang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=",
          "860: golang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=",
          "861: golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=",
          "863: golang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=",
          "864: golang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "865: golang.org/x/net v0.0.0-20201224014010-6772e930b67b/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "868: golang.org/x/net v0.0.0-20210421230115-4e50805a0758/go.mod h1:72T/g9IO56b78aLF+1Kcs5dz7/ng1VjMUvfKvpfy+jM=",
          "869: golang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "870: golang.org/x/net v0.0.0-20220425223048-2871e0cb64e4/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=",
          "872: golang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=",
          "874: golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=",
          "875: golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=",
          "876: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "877: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "878: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "879: golang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "880: golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "881: golang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "882: golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "883: golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "884: golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "886: golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "887: golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "888: golang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "891: golang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "892: golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "894: golang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "897: golang.org/x/sync v0.3.0 h1:ftCYgMx6zT/asHUrPw8BLLscYtGznsLAnjq5RH9P66E=",
          "898: golang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "899: golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "900: golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "902: golang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "903: golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "904: golang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "905: golang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "907: golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "908: golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "909: golang.org/x/sys v0.0.0-20190403152447-81d4e9dc473e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "911: golang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "912: golang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "913: golang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "914: golang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "915: golang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "916: golang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "917: golang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "918: golang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "919: golang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "920: golang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "921: golang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "922: golang.org/x/sys v0.0.0-20191220142924-d4481acd189f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "923: golang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "924: golang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "926: golang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "927: golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "928: golang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "929: golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "930: golang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "932: golang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "933: golang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "934: golang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "935: golang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "936: golang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "937: golang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "938: golang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "941: golang.org/x/sys v0.0.0-20201126233918-771906719818/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "942: golang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "943: golang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "944: golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "945: golang.org/x/sys v0.0.0-20210225134936-a50acf3fe073/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "947: golang.org/x/sys v0.0.0-20210420072515-93ed5bcd2bfe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "948: golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "949: golang.org/x/sys v0.0.0-20210423185535-09eb48e85fd7/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "953: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "954: golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "955: golang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "956: golang.org/x/sys v0.0.0-20210902050250-f475640dd07b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "957: golang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "958: golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "960: golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "963: golang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "964: golang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "967: golang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=",
          "968: golang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "969: golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=",
          "972: golang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=",
          "974: golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "976: golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "979: golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "980: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "984: golang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=",
          "985: golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=",
          "986: golang.org/x/time v0.0.0-20180412165947-fbb02b2291d2/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "987: golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "988: golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "989: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "990: golang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "991: golang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "993: golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "994: golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=",
          "995: golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "996: golang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "997: golang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "998: golang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "1000: golang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=",
          "1001: golang.org/x/tools v0.0.0-20190425163242-31fd60d6bfdc/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=",
          "1002: golang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=",
          "1003: golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=",
          "1004: golang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=",
          "1005: golang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=",
          "1006: golang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=",
          "1007: golang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1008: golang.org/x/tools v0.0.0-20190823170909-c4a336ef6a2f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1009: golang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1010: golang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1011: golang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1012: golang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1013: golang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1014: golang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1016: golang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1017: golang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "1018: golang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1019: golang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1020: golang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1021: golang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1022: golang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1023: golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1024: golang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1025: golang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1026: golang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1027: golang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1028: golang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=",
          "1029: golang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=",
          "1030: golang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=",
          "1031: golang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=",
          "1032: golang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "1033: golang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "1034: golang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "1035: golang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "1037: golang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=",
          "1038: golang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=",
          "1039: golang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=",
          "1040: golang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=",
          "1041: golang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "1042: golang.org/x/tools v0.0.0-20201124115921-2c860bdd6e78/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "1043: golang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "1044: golang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "1045: golang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "1047: golang.org/x/tools v0.0.0-20210108195828-e2f9c7f1fc8e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "1048: golang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=",
          "1050: golang.org/x/tools v0.1.7/go.mod h1:LGqMHiF4EqQNHR1JncWGqT5BVaXmza+X+BDGol+dOxo=",
          "1052: golang.org/x/tools v0.13.0 h1:Iey4qkscZuv0VvIt8E0neZjtPVQFSc870HQ448QgEmQ=",
          "1053: golang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=",
          "1054: golang.org/x/xerrors v0.0.0-20190410155217-1f06c39b4373/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1055: golang.org/x/xerrors v0.0.0-20190513163551-3ee3066db522/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1060: google.golang.org/api v0.3.1/go.mod h1:6wY9I6uQWHQ8EM57III9mq/AjF+i8G65rmVagqKMtkk=",
          "1061: google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=",
          "1062: google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=",
          "1063: google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=",
          "1064: google.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=",
          "1065: google.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=",
          "1066: google.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=",
          "1067: google.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=",
          "1068: google.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=",
          "1069: google.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=",
          "1070: google.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=",
          "1071: google.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=",
          "1072: google.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=",
          "1073: google.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=",
          "1074: google.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=",
          "1075: google.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=",
          "1076: google.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=",
          "1077: google.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=",
          "1078: google.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=",
          "1079: google.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=",
          "1080: google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=",
          "1081: google.golang.org/appengine v1.2.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=",
          "1082: google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=",
          "1083: google.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=",
          "1084: google.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=",
          "1085: google.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=",
          "1086: google.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=",
          "1087: google.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=",
          "1088: google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "1089: google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1090: google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1091: google.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1092: google.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1093: google.golang.org/genproto v0.0.0-20190530194941-fb225487d101/go.mod h1:z3L6/3dTEVtUr6QSP8miRzeRqwQOioJ9I66odjN4I7s=",
          "1094: google.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=",
          "1095: google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=",
          "1096: google.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=",
          "1097: google.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=",
          "1098: google.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=",
          "1099: google.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=",
          "1100: google.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=",
          "1101: google.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=",
          "1102: google.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=",
          "1103: google.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=",
          "1104: google.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1105: google.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1106: google.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1107: google.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1108: google.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1109: google.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1110: google.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1111: google.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=",
          "1112: google.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=",
          "1113: google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=",
          "1114: google.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=",
          "1115: google.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1116: google.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1117: google.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1118: google.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1119: google.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1120: google.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1121: google.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1122: google.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1123: google.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1124: google.golang.org/genproto v0.0.0-20210226172003-ab064af71705/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "1125: google.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=",
          "1126: google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "1127: google.golang.org/grpc v1.20.0/go.mod h1:chYK+tFQF0nDUGJgXMSgLCQk3phJEuONr2DCgLDdAQM=",
          "1128: google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=",
          "1129: google.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "1130: google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "1131: google.golang.org/grpc v1.22.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=",
          "1132: google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=",
          "1133: google.golang.org/grpc v1.23.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=",
          "1134: google.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=",
          "1135: google.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=",
          "1136: google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=",
          "1137: google.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=",
          "1138: google.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=",
          "1139: google.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=",
          "1140: google.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=",
          "1141: google.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=",
          "1142: google.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=",
          "1143: google.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=",
          "1144: google.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=",
          "1145: google.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=",
          "1146: google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=",
          "1147: google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=",
          "1148: google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=",
          "1149: google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=",
          "1150: google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=",
          "1151: google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=",
          "1152: google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=",
          "1153: google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=",
          "1154: google.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=",
          "1155: google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=",
          "1156: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "1157: google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "1158: google.golang.org/protobuf v1.30.0 h1:kPPoIgf3TsEvrm0PFe15JQ+570QVxYzEvvHqChK+cng=",
          "1159: google.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "1160: gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=",
          "1164: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1166: gopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1169: gopkg.in/cheggaaa/pb.v1 v1.0.25/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=",
          "1170: gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=",
          "1173: gopkg.in/gcfg.v1 v1.2.3/go.mod h1:yesOnuUOFQAhST5vPY4nbZsb/huCgGGXlipJsBn0b3o=",
          "1176: gopkg.in/inconshreveable/log15.v2 v2.0.0-20180818164646-67afb5ed74ec/go.mod h1:aPpfJ7XW+gOuirDoZ8gHhLh3kZ1B08FtV2bbmy7Jv3s=",
          "1179: gopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=",
          "1182: gopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=",
          "1183: gopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=",
          "1186: gopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1192: gopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1193: gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1196: gotest.tools/v3 v3.3.0 h1:MfDY1b1/0xN1CyMlQDac0ziEy9zJQd9CXBRRDHw2jJo=",
          "1197: honnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "1198: honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "1199: honnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "1200: honnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "1201: honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "1202: honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=",
          "1203: honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "1204: honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "1205: lukechampine.com/uint128 v1.2.0 h1:mBi/5l91vocEN8otkC5bDLhi2KdCticRiwbdB0O+rjI=",
          "1206: lukechampine.com/uint128 v1.2.0/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=",
          "1207: modernc.org/cc/v3 v3.33.6/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1208: modernc.org/cc/v3 v3.33.9/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1209: modernc.org/cc/v3 v3.33.11/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1210: modernc.org/cc/v3 v3.34.0/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1211: modernc.org/cc/v3 v3.35.0/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1212: modernc.org/cc/v3 v3.35.4/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1213: modernc.org/cc/v3 v3.35.5/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1214: modernc.org/cc/v3 v3.35.7/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1215: modernc.org/cc/v3 v3.35.8/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1216: modernc.org/cc/v3 v3.35.10/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1217: modernc.org/cc/v3 v3.35.15/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1218: modernc.org/cc/v3 v3.35.16/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1219: modernc.org/cc/v3 v3.35.17/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1220: modernc.org/cc/v3 v3.35.18/go.mod h1:iPJg1pkwXqAV16SNgFBVYmggfMg6xhs+2oiO0vclK3g=",
          "1221: modernc.org/ccgo/v3 v3.9.5/go.mod h1:umuo2EP2oDSBnD3ckjaVUXMrmeAw8C8OSICVa0iFf60=",
          "1222: modernc.org/ccgo/v3 v3.10.0/go.mod h1:c0yBmkRFi7uW4J7fwx/JiijwOjeAeR2NoSaRVFPmjMw=",
          "1223: modernc.org/ccgo/v3 v3.11.0/go.mod h1:dGNposbDp9TOZ/1KBxghxtUp/bzErD0/0QW4hhSaBMI=",
          "1224: modernc.org/ccgo/v3 v3.11.1/go.mod h1:lWHxfsn13L3f7hgGsGlU28D9eUOf6y3ZYHKoPaKU0ag=",
          "1225: modernc.org/ccgo/v3 v3.11.3/go.mod h1:0oHunRBMBiXOKdaglfMlRPBALQqsfrCKXgw9okQ3GEw=",
          "1226: modernc.org/ccgo/v3 v3.12.4/go.mod h1:Bk+m6m2tsooJchP/Yk5ji56cClmN6R1cqc9o/YtbgBQ=",
          "1227: modernc.org/ccgo/v3 v3.12.6/go.mod h1:0Ji3ruvpFPpz+yu+1m0wk68pdr/LENABhTrDkMDWH6c=",
          "1228: modernc.org/ccgo/v3 v3.12.8/go.mod h1:Hq9keM4ZfjCDuDXxaHptpv9N24JhgBZmUG5q60iLgUo=",
          "1229: modernc.org/ccgo/v3 v3.12.11/go.mod h1:0jVcmyDwDKDGWbcrzQ+xwJjbhZruHtouiBEvDfoIsdg=",
          "1230: modernc.org/ccgo/v3 v3.12.14/go.mod h1:GhTu1k0YCpJSuWwtRAEHAol5W7g1/RRfS4/9hc9vF5I=",
          "1231: modernc.org/ccgo/v3 v3.12.18/go.mod h1:jvg/xVdWWmZACSgOiAhpWpwHWylbJaSzayCqNOJKIhs=",
          "1232: modernc.org/ccgo/v3 v3.12.20/go.mod h1:aKEdssiu7gVgSy/jjMastnv/q6wWGRbszbheXgWRHc8=",
          "1233: modernc.org/ccgo/v3 v3.12.21/go.mod h1:ydgg2tEprnyMn159ZO/N4pLBqpL7NOkJ88GT5zNU2dE=",
          "1234: modernc.org/ccgo/v3 v3.12.22/go.mod h1:nyDVFMmMWhMsgQw+5JH6B6o4MnZ+UQNw1pp52XYFPRk=",
          "1235: modernc.org/ccgo/v3 v3.12.25/go.mod h1:UaLyWI26TwyIT4+ZFNjkyTbsPsY3plAEB6E7L/vZV3w=",
          "1236: modernc.org/ccgo/v3 v3.12.29/go.mod h1:FXVjG7YLf9FetsS2OOYcwNhcdOLGt8S9bQ48+OP75cE=",
          "1237: modernc.org/ccgo/v3 v3.12.36/go.mod h1:uP3/Fiezp/Ga8onfvMLpREq+KUjUmYMxXPO8tETHtA8=",
          "1238: modernc.org/ccgo/v3 v3.12.38/go.mod h1:93O0G7baRST1vNj4wnZ49b1kLxt0xCW5Hsa2qRaZPqc=",
          "1239: modernc.org/ccgo/v3 v3.12.43/go.mod h1:k+DqGXd3o7W+inNujK15S5ZYuPoWYLpF5PYougCmthU=",
          "1240: modernc.org/ccgo/v3 v3.12.46/go.mod h1:UZe6EvMSqOxaJ4sznY7b23/k13R8XNlyWsO5bAmSgOE=",
          "1241: modernc.org/ccgo/v3 v3.12.47/go.mod h1:m8d6p0zNps187fhBwzY/ii6gxfjob1VxWb919Nk1HUk=",
          "1242: modernc.org/ccgo/v3 v3.12.50/go.mod h1:bu9YIwtg+HXQxBhsRDE+cJjQRuINuT9PUK4orOco/JI=",
          "1243: modernc.org/ccgo/v3 v3.12.51/go.mod h1:gaIIlx4YpmGO2bLye04/yeblmvWEmE4BBBls4aJXFiE=",
          "1244: modernc.org/ccgo/v3 v3.12.53/go.mod h1:8xWGGTFkdFEWBEsUmi+DBjwu/WLy3SSOrqEmKUjMeEg=",
          "1245: modernc.org/ccgo/v3 v3.12.54/go.mod h1:yANKFTm9llTFVX1FqNKHE0aMcQb1fuPJx6p8AcUx+74=",
          "1246: modernc.org/ccgo/v3 v3.12.55/go.mod h1:rsXiIyJi9psOwiBkplOaHye5L4MOOaCjHg1Fxkj7IeU=",
          "1247: modernc.org/ccgo/v3 v3.12.56/go.mod h1:ljeFks3faDseCkr60JMpeDb2GSO3TKAmrzm7q9YOcMU=",
          "1248: modernc.org/ccgo/v3 v3.12.57/go.mod h1:hNSF4DNVgBl8wYHpMvPqQWDQx8luqxDnNGCMM4NFNMc=",
          "1249: modernc.org/ccgo/v3 v3.12.60/go.mod h1:k/Nn0zdO1xHVWjPYVshDeWKqbRWIfif5dtsIOCUVMqM=",
          "1250: modernc.org/ccgo/v3 v3.12.65/go.mod h1:D6hQtKxPNZiY6wDBtehSGKFKmyXn53F8nGTpH+POmS4=",
          "1251: modernc.org/ccgo/v3 v3.12.66/go.mod h1:jUuxlCFZTUZLMV08s7B1ekHX5+LIAurKTTaugUr/EhQ=",
          "1252: modernc.org/ccgo/v3 v3.12.67/go.mod h1:Bll3KwKvGROizP2Xj17GEGOTrlvB1XcVaBrC90ORO84=",
          "1253: modernc.org/ccgo/v3 v3.12.73/go.mod h1:hngkB+nUUqzOf3iqsM48Gf1FZhY599qzVg1iX+BT3cQ=",
          "1254: modernc.org/ccgo/v3 v3.12.81/go.mod h1:p2A1duHoBBg1mFtYvnhAnQyI6vL0uw5PGYLSIgF6rYY=",
          "1255: modernc.org/ccgo/v3 v3.12.82/go.mod h1:ApbflUfa5BKadjHynCficldU1ghjen84tuM5jRynB7w=",
          "1256: modernc.org/ccgo/v3 v3.16.13 h1:Mkgdzl46i5F/CNR/Kj80Ri59hC8TKAhZrYSaqvkwzUw=",
          "1257: modernc.org/ccgo/v3 v3.16.13/go.mod h1:2Quk+5YgpImhPjv2Qsob1DnZ/4som1lJTodubIcoUkY=",
          "1258: modernc.org/ccorpus v1.11.1/go.mod h1:2gEUTrWqdpH2pXsmTM1ZkjeSrUWDpjMu2T6m29L/ErQ=",
          "1259: modernc.org/ccorpus v1.11.6 h1:J16RXiiqiCgua6+ZvQot4yUuUy8zxgqbqEEUuGPlISk=",
          "1260: modernc.org/httpfs v1.0.6 h1:AAgIpFZRXuYnkjftxTAZwMIiwEqAfk8aVB2/oA6nAeM=",
          "1261: modernc.org/httpfs v1.0.6/go.mod h1:7dosgurJGp0sPaRanU53W4xZYKh14wfzX420oZADeHM=",
          "1262: modernc.org/libc v1.9.8/go.mod h1:U1eq8YWr/Kc1RWCMFUWEdkTg8OTcfLw2kY8EDwl039w=",
          "1263: modernc.org/libc v1.9.11/go.mod h1:NyF3tsA5ArIjJ83XB0JlqhjTabTCHm9aX4XMPHyQn0Q=",
          "1264: modernc.org/libc v1.11.0/go.mod h1:2lOfPmj7cz+g1MrPNmX65QCzVxgNq2C5o0jdLY2gAYg=",
          "1265: modernc.org/libc v1.11.2/go.mod h1:ioIyrl3ETkugDO3SGZ+6EOKvlP3zSOycUETe4XM4n8M=",
          "1266: modernc.org/libc v1.11.5/go.mod h1:k3HDCP95A6U111Q5TmG3nAyUcp3kR5YFZTeDS9v8vSU=",
          "1267: modernc.org/libc v1.11.6/go.mod h1:ddqmzR6p5i4jIGK1d/EiSw97LBcE3dK24QEwCFvgNgE=",
          "1268: modernc.org/libc v1.11.11/go.mod h1:lXEp9QOOk4qAYOtL3BmMve99S5Owz7Qyowzvg6LiZso=",
          "1269: modernc.org/libc v1.11.13/go.mod h1:ZYawJWlXIzXy2Pzghaf7YfM8OKacP3eZQI81PDLFdY8=",
          "1270: modernc.org/libc v1.11.16/go.mod h1:+DJquzYi+DMRUtWI1YNxrlQO6TcA5+dRRiq8HWBWRC8=",
          "1271: modernc.org/libc v1.11.19/go.mod h1:e0dgEame6mkydy19KKaVPBeEnyJB4LGNb0bBH1EtQ3I=",
          "1272: modernc.org/libc v1.11.24/go.mod h1:FOSzE0UwookyT1TtCJrRkvsOrX2k38HoInhw+cSCUGk=",
          "1273: modernc.org/libc v1.11.26/go.mod h1:SFjnYi9OSd2W7f4ct622o/PAYqk7KHv6GS8NZULIjKY=",
          "1274: modernc.org/libc v1.11.27/go.mod h1:zmWm6kcFXt/jpzeCgfvUNswM0qke8qVwxqZrnddlDiE=",
          "1275: modernc.org/libc v1.11.28/go.mod h1:Ii4V0fTFcbq3qrv3CNn+OGHAvzqMBvC7dBNyC4vHZlg=",
          "1276: modernc.org/libc v1.11.31/go.mod h1:FpBncUkEAtopRNJj8aRo29qUiyx5AvAlAxzlx9GNaVM=",
          "1277: modernc.org/libc v1.11.34/go.mod h1:+Tzc4hnb1iaX/SKAutJmfzES6awxfU1BPvrrJO0pYLg=",
          "1278: modernc.org/libc v1.11.37/go.mod h1:dCQebOwoO1046yTrfUE5nX1f3YpGZQKNcITUYWlrAWo=",
          "1279: modernc.org/libc v1.11.39/go.mod h1:mV8lJMo2S5A31uD0k1cMu7vrJbSA3J3waQJxpV4iqx8=",
          "1280: modernc.org/libc v1.11.42/go.mod h1:yzrLDU+sSjLE+D4bIhS7q1L5UwXDOw99PLSX0BlZvSQ=",
          "1281: modernc.org/libc v1.11.44/go.mod h1:KFq33jsma7F5WXiYelU8quMJasCCTnHK0mkri4yPHgA=",
          "1282: modernc.org/libc v1.11.45/go.mod h1:Y192orvfVQQYFzCNsn+Xt0Hxt4DiO4USpLNXBlXg/tM=",
          "1283: modernc.org/libc v1.11.47/go.mod h1:tPkE4PzCTW27E6AIKIR5IwHAQKCAtudEIeAV1/SiyBg=",
          "1284: modernc.org/libc v1.11.49/go.mod h1:9JrJuK5WTtoTWIFQ7QjX2Mb/bagYdZdscI3xrvHbXjE=",
          "1285: modernc.org/libc v1.11.51/go.mod h1:R9I8u9TS+meaWLdbfQhq2kFknTW0O3aw3kEMqDDxMaM=",
          "1286: modernc.org/libc v1.11.53/go.mod h1:5ip5vWYPAoMulkQ5XlSJTy12Sz5U6blOQiYasilVPsU=",
          "1287: modernc.org/libc v1.11.54/go.mod h1:S/FVnskbzVUrjfBqlGFIPA5m7UwB3n9fojHhCNfSsnw=",
          "1288: modernc.org/libc v1.11.55/go.mod h1:j2A5YBRm6HjNkoSs/fzZrSxCuwWqcMYTDPLNx0URn3M=",
          "1289: modernc.org/libc v1.11.56/go.mod h1:pakHkg5JdMLt2OgRadpPOTnyRXm/uzu+Yyg/LSLdi18=",
          "1290: modernc.org/libc v1.11.58/go.mod h1:ns94Rxv0OWyoQrDqMFfWwka2BcaF6/61CqJRK9LP7S8=",
          "1291: modernc.org/libc v1.11.70/go.mod h1:DUOmMYe+IvKi9n6Mycyx3DbjfzSKrdr/0Vgt3j7P5gw=",
          "1292: modernc.org/libc v1.11.71/go.mod h1:DUOmMYe+IvKi9n6Mycyx3DbjfzSKrdr/0Vgt3j7P5gw=",
          "1293: modernc.org/libc v1.11.75/go.mod h1:dGRVugT6edz361wmD9gk6ax1AbDSe0x5vji0dGJiPT0=",
          "1294: modernc.org/libc v1.11.82/go.mod h1:NF+Ek1BOl2jeC7lw3a7Jj5PWyHPwWD4aq3wVKxqV1fI=",
          "1295: modernc.org/libc v1.11.86/go.mod h1:ePuYgoQLmvxdNT06RpGnaDKJmDNEkV7ZPKI2jnsvZoE=",
          "1296: modernc.org/libc v1.11.87/go.mod h1:Qvd5iXTeLhI5PS0XSyqMY99282y+3euapQFxM7jYnpY=",
          "1297: modernc.org/libc v1.22.5 h1:91BNch/e5B0uPbJFgqbxXuOnxBQjlS//icfQEGmvyjE=",
          "1298: modernc.org/libc v1.22.5/go.mod h1:jj+Z7dTNX8fBScMVNRAYZ/jF91K8fdT2hYMThc3YjBY=",
          "1299: modernc.org/mathutil v1.1.1/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=",
          "1300: modernc.org/mathutil v1.2.2/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=",
          "1301: modernc.org/mathutil v1.4.0/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=",
          "1302: modernc.org/mathutil v1.4.1/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=",
          "1303: modernc.org/mathutil v1.5.0 h1:rV0Ko/6SfM+8G+yKiyI830l3Wuz1zRutdslNoQ0kfiQ=",
          "1304: modernc.org/mathutil v1.5.0/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=",
          "1305: modernc.org/memory v1.0.4/go.mod h1:nV2OApxradM3/OVbs2/0OsP6nPfakXpi50C7dcoHXlc=",
          "1306: modernc.org/memory v1.0.5/go.mod h1:B7OYswTRnfGg+4tDH1t1OeUNnsy2viGTdME4tzd+IjM=",
          "1307: modernc.org/memory v1.5.0 h1:N+/8c5rE6EqugZwHii4IFsaJ7MUhoWX07J5tC/iI5Ds=",
          "1308: modernc.org/memory v1.5.0/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=",
          "1309: modernc.org/opt v0.1.1/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=",
          "1310: modernc.org/opt v0.1.3 h1:3XOZf2yznlhC+ibLltsDGzABUGVx8J6pnFMS3E4dcq4=",
          "1311: modernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=",
          "1312: modernc.org/sqlite v1.14.2/go.mod h1:yqfn85u8wVOE6ub5UT8VI9JjhrwBUUCNyTACN0h6Sx8=",
          "1313: modernc.org/sqlite v1.24.0 h1:EsClRIWHGhLTCX44p+Ri/JLD+vFGo0QGjasg2/F9TlI=",
          "1314: modernc.org/sqlite v1.24.0/go.mod h1:OrDj17Mggn6MhE+iPbBNf7RGKODDE9NFT0f3EwDzJqk=",
          "1315: modernc.org/strutil v1.1.1/go.mod h1:DE+MQQ/hjKBZS2zNInV5hhcipt5rLPWkmpbGeW5mmdw=",
          "1316: modernc.org/strutil v1.1.3 h1:fNMm+oJklMGYfU9Ylcywl0CO5O6nTfaowNsh2wpPjzY=",
          "1317: modernc.org/strutil v1.1.3/go.mod h1:MEHNA7PdEnEwLvspRMtWTNnp2nnyvMfkimT1NKNAGbw=",
          "1318: modernc.org/tcl v1.8.13/go.mod h1:V+q/Ef0IJaNUSECieLU4o+8IScapxnMyFV6i/7uQlAY=",
          "1319: modernc.org/tcl v1.15.2 h1:C4ybAYCGJw968e+Me18oW55kD/FexcHbqH2xak1ROSY=",
          "1320: modernc.org/token v1.0.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=",
          "1321: modernc.org/token v1.0.1 h1:A3qvTqOwexpfZZeyI0FeGPDlSWX5pjZu9hF4lU+EKWg=",
          "1322: modernc.org/token v1.0.1/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=",
          "1323: modernc.org/z v1.2.19/go.mod h1:+ZpP0pc4zz97eukOzW3xagV/lS82IpPN9NGG5pNF9vY=",
          "1324: modernc.org/z v1.7.3 h1:zDJf6iHjrnB+WRD88stbXokugjyc0/pB91ri1gO6LZY=",
          "1325: rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=",
          "1326: rsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=",
          "1327: rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=",
          "1328: rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=",
          "1329: sigs.k8s.io/yaml v1.1.0/go.mod h1:UJmg0vDUVViEyp3mgSv9WPwZCDxu4rQW1olrI1uml+o=",
          "1330: sigs.k8s.io/yaml v1.3.0 h1:a2VclLzOGrwOHDiV8EfBGhvjHvP46CtW5j6POvhYGGo=",
          "1331: sigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=",
          "1332: sourcegraph.com/sourcegraph/appdash v0.0.0-20190731080439-ebfcffb1b5c0/go.mod h1:hI742Nqp5OhwiqlzhgfbWU4mW4yO10fP+LoT9WOswdU=",
          "1333: xorm.io/builder v0.3.11-0.20220531020008-1bd24a7dc978/go.mod h1:aUW0S9eb9VCaPohFCH3j7czOx1PMW3i1HrSzbLYGBSE=",
          "1334: xorm.io/builder v0.3.12 h1:ASZYX7fQmy+o8UJdhlLHSW57JDOkM8DNhcAF5d0LiJM=",
          "1335: xorm.io/builder v0.3.12/go.mod h1:aUW0S9eb9VCaPohFCH3j7czOx1PMW3i1HrSzbLYGBSE=",
          "1336: xorm.io/xorm v1.3.2 h1:uTRRKF2jYzbZ5nsofXVUx6ncMaek+SHjWYtCXyZo1oM=",
          "1337: xorm.io/xorm v1.3.2/go.mod h1:9NbjqdnjX6eyjRRhh01GHm64r6N9shTb/8Ak3YRt8Nw=",
          "",
          "[Added Lines]",
          "352: github.com/yuin/goldmark v1.7.4 h1:BDXOHExt+A7gwPCJgPIIq7ENvceR7we7rOS9TNoLZeg=",
          "353: github.com/yuin/goldmark v1.7.4/go.mod h1:uzxRWxtg69N339t3louHJ7+O03ezfj6PlliRlaOzY1E=",
          "354: go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=",
          "355: go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=",
          "356: go.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=",
          "357: go.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=",
          "358: go.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=",
          "359: go.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=",
          "360: golang.org/x/arch v0.10.0 h1:S3huipmSclq3PJMNe76NGwkBR504WFkQ5dhzWzP8ZW8=",
          "361: golang.org/x/arch v0.10.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=",
          "366: golang.org/x/crypto v0.27.0 h1:GXm2NjJrPaiv/h1tb2UH8QfgC/hOf/+z0p6PT8o1w7A=",
          "367: golang.org/x/crypto v0.27.0/go.mod h1:1Xngt8kV6Dvbssa53Ziq6Eqn0HqbZi5Z6R0ZpwQzt70=",
          "368: golang.org/x/exp v0.0.0-20240909161429-701f63a606c0 h1:e66Fs6Z+fZTbFBAxKfP3PALWBtpfqks2bwGcexMxgtk=",
          "369: golang.org/x/exp v0.0.0-20240909161429-701f63a606c0/go.mod h1:2TbTHSBQa924w8M6Xs1QcRcFwyucIwBGpK1p2f1YFFY=",
          "371: golang.org/x/image v0.20.0 h1:7cVCUjQwfL18gyBJOmYvptfSHS8Fb3YUDtfLIZ7Nbpw=",
          "372: golang.org/x/image v0.20.0/go.mod h1:0a88To4CYVBAHp5FXJm8o7QbUl37Vd85ply1vyD8auM=",
          "377: golang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=",
          "378: golang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=",
          "385: golang.org/x/net v0.0.0-20200320220750-118fecf932d8/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "394: golang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=",
          "395: golang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=",
          "402: golang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=",
          "403: golang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=",
          "420: golang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=",
          "421: golang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "431: golang.org/x/text v0.18.0 h1:XvMDiNzPAl0jr17s6W9lcaIhGUfUORdGCNsuLmPG224=",
          "432: golang.org/x/text v0.18.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=",
          "440: golang.org/x/tools v0.25.0 h1:oFU9pkj/iJgs+0DT+VMHrx+oBKs/LJMV+Uvg78sl+fE=",
          "441: golang.org/x/tools v0.25.0/go.mod h1:/vtpO8WL1N9cQC3FN5zPqb//fRXskFHbLKk4OW1Q7rg=",
          "446: google.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=",
          "447: google.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=",
          "464: gopkg.in/yaml.v2 v2.2.7/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "472: gotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=",
          "473: gotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=",
          "474: modernc.org/fileutil v1.3.0 h1:gQ5SIzK3H9kdfai/5x41oQiKValumqNTDXMvKo62HvE=",
          "475: modernc.org/fileutil v1.3.0/go.mod h1:XatxS8fZi3pS8/hKG2GH/ArUogfxjpEKs3Ku3aK4JyQ=",
          "476: modernc.org/gc/v3 v3.0.0-20240801135723-a856999a2e4a h1:CfbpOLEo2IwNzJdMvE8aiRbPMxoTpgAJeyePh0SmO8M=",
          "477: modernc.org/gc/v3 v3.0.0-20240801135723-a856999a2e4a/go.mod h1:Qz0X07sNOR1jWYCrJMEnbW/X55x206Q7Vt4mz6/wHp4=",
          "478: modernc.org/mathutil v1.6.0 h1:fRe9+AmYlaej+64JsEEhoWuAYBkOtQiMEU7n/XgfYi4=",
          "479: modernc.org/mathutil v1.6.0/go.mod h1:Ui5Q9q1TR2gFm0AQRqQUaBWFLAhQpCwNcuhBOSedWPo=",
          "480: modernc.org/memory v1.8.0 h1:IqGTL6eFMaDZZhEWwcREgeMXYwmW83LYW8cROZYkg+E=",
          "481: modernc.org/memory v1.8.0/go.mod h1:XPZ936zp5OMKGWPqbD3JShgd/ZoQ7899TUuQqxY+peU=",
          "482: modernc.org/sqlite v1.33.0 h1:WWkA/T2G17okiLGgKAj4/RMIvgyMT19yQ038160IeYk=",
          "483: modernc.org/sqlite v1.33.0/go.mod h1:9uQ9hF/pCZoYZK73D/ud5Z7cIRIILSZI8NdIemVMTX8=",
          "484: modernc.org/strutil v1.2.0 h1:agBi9dp1I+eOnxXeiZawM8F4LawKv4NzGWSaLfyeNZA=",
          "485: modernc.org/strutil v1.2.0/go.mod h1:/mdcBmfOibveCTBxUl5B5l6W+TTH1FXPLHZE6bTosX0=",
          "486: modernc.org/token v1.1.0 h1:Xl7Ap9dKaEs5kLoOQeQmPWevfnk/DM5qcLcYlA8ys6Y=",
          "487: modernc.org/token v1.1.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=",
          "488: nullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=",
          "489: sigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=",
          "490: sigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=",
          "491: xorm.io/builder v0.3.13 h1:a3jmiVVL19psGeXx8GIurTp7p0IIgqeDmwhcR6BAOAo=",
          "492: xorm.io/builder v0.3.13/go.mod h1:aUW0S9eb9VCaPohFCH3j7czOx1PMW3i1HrSzbLYGBSE=",
          "493: xorm.io/xorm v1.3.9 h1:TUovzS0ko+IQ1XnNLfs5dqK1cJl1H5uHpWbWqAQ04nU=",
          "494: xorm.io/xorm v1.3.9/go.mod h1:LsCCffeeYp63ssk0pKumP6l96WZcHix7ChpurcLNuMw=",
          "",
          "---------------"
        ],
        "internal/service/content/user_service.go||internal/service/content/user_service.go": [
          "File: internal/service/content/user_service.go -> internal/service/content/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"encoding/json\"",
          "25:  \"fmt\"",
          "26:  \"github.com/apache/incubator-answer/internal/service/event_queue\"",
          "27:  \"time\"",
          "29:  \"github.com/apache/incubator-answer/internal/base/constant\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:  \"github.com/apache/incubator-answer/pkg/token\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:  \"github.com/apache/incubator-answer/internal/service/user_external_login\"",
          "47:  \"github.com/apache/incubator-answer/pkg/checker\"",
          "48:  \"github.com/apache/incubator-answer/plugin\"",
          "50:  \"github.com/segmentfault/pacman/errors\"",
          "51:  \"github.com/segmentfault/pacman/log\"",
          "52:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "[Removed Lines]",
          "49:  \"github.com/google/uuid\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:   Email:  req.Email,",
          "226:   UserID: userInfo.ID,",
          "227:  }",
          "229:  verifyEmailURL := fmt.Sprintf(\"%s/users/password-reset?code=%s\", us.getSiteUrl(ctx), code)",
          "230:  title, body, err := us.emailService.PassResetTemplate(ctx, verifyEmailURL)",
          "231:  if err != nil {",
          "",
          "[Removed Lines]",
          "228:  code := uuid.NewString()",
          "",
          "[Added Lines]",
          "228:  code := token.GenerateToken()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "452:   Email:  registerUserInfo.Email,",
          "453:   UserID: userInfo.ID,",
          "454:  }",
          "456:  verifyEmailURL := fmt.Sprintf(\"%s/users/account-activation?code=%s\", us.getSiteUrl(ctx), code)",
          "457:  title, body, err := us.emailService.RegisterTemplate(ctx, verifyEmailURL)",
          "458:  if err != nil {",
          "",
          "[Removed Lines]",
          "455:  code := uuid.NewString()",
          "",
          "[Added Lines]",
          "455:  code := token.GenerateToken()",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "502:   Email:  userInfo.EMail,",
          "503:   UserID: userInfo.ID,",
          "504:  }",
          "506:  verifyEmailURL := fmt.Sprintf(\"%s/users/account-activation?code=%s\", us.getSiteUrl(ctx), code)",
          "507:  title, body, err := us.emailService.RegisterTemplate(ctx, verifyEmailURL)",
          "508:  if err != nil {",
          "",
          "[Removed Lines]",
          "505:  code := uuid.NewString()",
          "",
          "[Added Lines]",
          "505:  code := token.GenerateToken()",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "617:   Email:  req.Email,",
          "618:   UserID: req.UserID,",
          "619:  }",
          "621:  var title, body string",
          "622:  verifyEmailURL := fmt.Sprintf(\"%s/users/confirm-new-email?code=%s\", us.getSiteUrl(ctx), code)",
          "623:  if userInfo.MailStatus == entity.EmailStatusToBeVerified {",
          "",
          "[Removed Lines]",
          "620:  code := uuid.NewString()",
          "",
          "[Added Lines]",
          "620:  code := token.GenerateToken()",
          "",
          "---------------"
        ],
        "internal/service/user_admin/user_backyard.go||internal/service/user_admin/user_backyard.go": [
          "File: internal/service/user_admin/user_backyard.go -> internal/service/user_admin/user_backyard.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  \"github.com/apache/incubator-answer/internal/service/comment_common\"",
          "31:  \"github.com/apache/incubator-answer/internal/service/export\"",
          "32:  questioncommon \"github.com/apache/incubator-answer/internal/service/question_common\"",
          "34:  \"net/mail\"",
          "35:  \"strings\"",
          "36:  \"time\"",
          "",
          "[Removed Lines]",
          "33:  \"github.com/google/uuid\"",
          "",
          "[Added Lines]",
          "33:  \"github.com/apache/incubator-answer/pkg/token\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "531:   Email:  userInfo.EMail,",
          "532:   UserID: userInfo.ID,",
          "533:  }",
          "535:  us.emailService.SaveCode(ctx, userInfo.ID, code, data.ToJSONString())",
          "536:  resp = &schema.GetUserActivationResp{",
          "537:   ActivationURL: fmt.Sprintf(\"%s/users/account-activation?code=%s\", general.SiteUrl, code),",
          "",
          "[Removed Lines]",
          "534:  code := uuid.NewString()",
          "",
          "[Added Lines]",
          "534:  code := token.GenerateToken()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "558:   Email:  userInfo.EMail,",
          "559:   UserID: userInfo.ID,",
          "560:  }",
          "563:  verifyEmailURL := fmt.Sprintf(\"%s/users/account-activation?code=%s\", general.SiteUrl, code)",
          "564:  title, body, err := us.emailService.RegisterTemplate(ctx, verifyEmailURL)",
          "565:  if err != nil {",
          "",
          "[Removed Lines]",
          "561:  code := uuid.NewString()",
          "",
          "[Added Lines]",
          "561:  code := token.GenerateToken()",
          "",
          "---------------"
        ],
        "internal/service/user_external_login/user_external_login_service.go||internal/service/user_external_login/user_external_login_service.go": [
          "File: internal/service/user_external_login/user_external_login_service.go -> internal/service/user_external_login/user_external_login_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  \"github.com/apache/incubator-answer/pkg/random\"",
          "41:  \"github.com/apache/incubator-answer/pkg/token\"",
          "42:  \"github.com/apache/incubator-answer/plugin\"",
          "44:  \"github.com/segmentfault/pacman/errors\"",
          "45:  \"github.com/segmentfault/pacman/log\"",
          "46: )",
          "",
          "[Removed Lines]",
          "43:  \"github.com/google/uuid\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:   UserID:     userInfo.ID,",
          "323:   BindingKey: req.BindingKey,",
          "324:  }",
          "326:  verifyEmailURL := fmt.Sprintf(\"%s/users/account-activation?code=%s\", siteGeneral.SiteUrl, code)",
          "327:  title, body, err := us.emailService.RegisterTemplate(ctx, verifyEmailURL)",
          "328:  if err != nil {",
          "",
          "[Removed Lines]",
          "325:  code := uuid.NewString()",
          "",
          "[Added Lines]",
          "324:  code := token.GenerateToken()",
          "",
          "---------------"
        ],
        "pkg/htmltext/htmltext.go||pkg/htmltext/htmltext.go": [
          "File: pkg/htmltext/htmltext.go -> pkg/htmltext/htmltext.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  \"github.com/apache/incubator-answer/pkg/converter\"",
          "36: )",
          "54: func ClearText(html string) (text string) {",
          "55:  if len(html) == 0 {",
          "",
          "[Removed Lines]",
          "39: func max(a, b int) int {",
          "40:  if a > b {",
          "41:   return a",
          "42:  }",
          "43:  return b",
          "44: }",
          "46: func min(a, b int) int {",
          "47:  if a < b {",
          "48:   return a",
          "49:  }",
          "50:  return b",
          "51: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/token/token.go||pkg/token/token.go": [
          "File: pkg/token/token.go -> pkg/token/token.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: func GenerateToken() string {",
          "27:  return uid.String()",
          "28: }",
          "",
          "[Removed Lines]",
          "26:  uid, _ := uuid.NewUUID()",
          "",
          "[Added Lines]",
          "26:  uid, _ := uuid.NewV7()",
          "",
          "---------------"
        ]
      }
    }
  ]
}