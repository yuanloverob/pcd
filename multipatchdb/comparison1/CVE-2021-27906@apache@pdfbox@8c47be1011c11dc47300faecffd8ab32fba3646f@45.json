{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f25397fab9b9823201932899e43e0663a70498ac",
      "candidate_info": {
        "commit_hash": "f25397fab9b9823201932899e43e0663a70498ac",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f25397fab9b9823201932899e43e0663a70498ac",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java",
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/TestRadioButtons.java"
        ],
        "message": "PDFBOX-4617: enable getting the selected index\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883439 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java",
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/TestRadioButtons.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/TestRadioButtons.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import org.apache.pdfbox.cos.COSDictionary;",
          "25: import org.apache.pdfbox.cos.COSName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:         return getCOSObject().getFlag(COSName.FF, FLAG_RADIOS_IN_UNISON);",
          "82:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:     public int getSelectedIndex()",
          "97:     {",
          "98:         int idx = 0;",
          "99:         for (PDAnnotationWidget widget : getWidgets())",
          "100:         {",
          "101:             if (!COSName.Off.equals(widget.getAppearanceState()))",
          "102:             {",
          "103:                 return idx;",
          "104:             }",
          "105:             idx ++;",
          "106:         }",
          "107:         return -1;",
          "108:     }",
          "",
          "---------------"
        ],
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/TestRadioButtons.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/TestRadioButtons.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/TestRadioButtons.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/TestRadioButtons.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:         {",
          "309:             IOUtils.closeQuietly(testPdf);",
          "310:         }",
          "312: }",
          "",
          "[Removed Lines]",
          "311:    }",
          "",
          "[Added Lines]",
          "310:     }",
          "317:     @Test",
          "318:     public void testPDFBox4617IndexNoneSelected() throws IOException",
          "319:     {",
          "320:         String sourceUrl = \"https://issues.apache.org/jira/secure/attachment/12848122/SF1199AEG%20%28Complete%29.pdf\";",
          "322:         PDDocument testPdf = null;",
          "323:         try",
          "324:         {",
          "325:             testPdf = PDDocument.load(new URL(sourceUrl).openStream());",
          "326:             PDAcroForm acroForm = testPdf.getDocumentCatalog().getAcroForm();",
          "327:             PDRadioButton field = (PDRadioButton) acroForm.getField(\"Checking/Savings\");",
          "328:             assertEquals(\"if there is no value set the index shall be -1\", -1, field.getSelectedIndex());",
          "329:         }",
          "330:         finally",
          "331:         {",
          "332:             IOUtils.closeQuietly(testPdf);",
          "333:         }",
          "334:     }",
          "341:     @Test",
          "342:     public void testPDFBox4617IndexForSetByOption() throws IOException",
          "343:     {",
          "344:         String sourceUrl = \"https://issues.apache.org/jira/secure/attachment/12848122/SF1199AEG%20%28Complete%29.pdf\";",
          "346:         PDDocument testPdf = null;",
          "347:         try",
          "348:         {",
          "349:             testPdf = PDDocument.load(new URL(sourceUrl).openStream());",
          "350:             PDAcroForm acroForm = testPdf.getDocumentCatalog().getAcroForm();",
          "351:             PDRadioButton field = (PDRadioButton) acroForm.getField(\"Checking/Savings\");",
          "352:             field.setValue( \"Checking\");",
          "353:             assertEquals(\"the index shall be equal with the first entry of Checking which is 0\", 0, field.getSelectedIndex());",
          "354:         }",
          "355:         finally",
          "356:         {",
          "357:             IOUtils.closeQuietly(testPdf);",
          "358:         }",
          "359:     }",
          "366:     @Test",
          "367:     public void testPDFBox4617IndexForSetByIndex() throws IOException",
          "368:     {",
          "369:         String sourceUrl = \"https://issues.apache.org/jira/secure/attachment/12848122/SF1199AEG%20%28Complete%29.pdf\";",
          "371:         PDDocument testPdf = null;",
          "372:         try",
          "373:         {",
          "374:             testPdf = PDDocument.load(new URL(sourceUrl).openStream());",
          "375:             PDAcroForm acroForm = testPdf.getDocumentCatalog().getAcroForm();",
          "376:             PDRadioButton field = (PDRadioButton) acroForm.getField(\"Checking/Savings\");",
          "377:             field.setValue(4);",
          "378:             assertEquals(\"setting by the index value should return the corresponding export\", \"Checking\", field.getValue());",
          "379:             assertEquals(\"the index shall be equals with the set value of 4\", 4, field.getSelectedIndex());",
          "380:         }",
          "381:         finally",
          "382:         {",
          "383:             IOUtils.closeQuietly(testPdf);",
          "384:         }",
          "385:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9126ca563db8b3f2269024d1f5c755ccbfebcfa1",
      "candidate_info": {
        "commit_hash": "9126ca563db8b3f2269024d1f5c755ccbfebcfa1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9126ca563db8b3f2269024d1f5c755ccbfebcfa1",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java"
        ],
        "message": "PDFBOX-5207: skip nested arrays instead of throwing an IOException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890583 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "651:                 byte[] string = ((COSString)obj).getBytes();",
          "652:                 showText(string);",
          "653:             }",
          "654:             else",
          "655:             {",
          "658:             }",
          "659:         }",
          "660:     }",
          "",
          "[Removed Lines]",
          "656:                 throw new IOException(\"Unknown type \" + obj.getClass().getSimpleName() +",
          "657:                         \" in array for TJ operation:\" + obj);",
          "",
          "[Added Lines]",
          "654:             else if (obj instanceof COSArray)",
          "655:             {",
          "656:                 LOG.error(\"Nested arrays are not allowed in an array for TJ operation:\" + obj);",
          "657:             }",
          "660:                 throw new IOException(\"Unknown type \" + obj.getClass().getSimpleName()",
          "661:                         + \" in array for TJ operation:\" + obj);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7417a72e6f9a99e3443f272dd1be0d686a6a65e0",
      "candidate_info": {
        "commit_hash": "7417a72e6f9a99e3443f272dd1be0d686a6a65e0",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/7417a72e6f9a99e3443f272dd1be0d686a6a65e0",
        "files": [
          "tools/src/main/java/org/apache/pdfbox/tools/TextToPDF.java"
        ],
        "message": "PDFBOX-4892: simplify, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891631 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "tools/src/main/java/org/apache/pdfbox/tools/TextToPDF.java||tools/src/main/java/org/apache/pdfbox/tools/TextToPDF.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/src/main/java/org/apache/pdfbox/tools/TextToPDF.java||tools/src/main/java/org/apache/pdfbox/tools/TextToPDF.java": [
          "File: tools/src/main/java/org/apache/pdfbox/tools/TextToPDF.java -> tools/src/main/java/org/apache/pdfbox/tools/TextToPDF.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:             final int margin = 40;",
          "117:             float height = font.getBoundingBox().getHeight() / FONTSCALE;",
          "125:             height = height*fontSize*LINE_HEIGHT_FACTOR;",
          "",
          "[Removed Lines]",
          "118:             PDRectangle actualMediaBox = mediaBox;",
          "119:             if (landscape)",
          "120:             {",
          "121:                 actualMediaBox = new PDRectangle(mediaBox.getHeight(), mediaBox.getWidth());",
          "122:             }",
          "",
          "[Added Lines]",
          "118:             PDRectangle actualMediaBox =",
          "119:                     landscape ? new PDRectangle(mediaBox.getHeight(), mediaBox.getWidth()) : mediaBox;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:                                 nextWord = nextWord.substring(0, indexFF);",
          "199:                             }",
          "202:                             lengthIfUsingNextWord =",
          "203:                                 (font.getStringWidth( lineWithNextWord )/FONTSCALE) * fontSize;",
          "204:                         }",
          "",
          "[Removed Lines]",
          "201:                             String lineWithNextWord = nextLineToDraw.toString() + \" \" + nextWord;",
          "",
          "[Added Lines]",
          "198:                             String lineWithNextWord = nextLineToDraw + \" \" + nextWord;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f8308f43f122e9e6e6950f5de603feb7df0f1a3",
      "candidate_info": {
        "commit_hash": "1f8308f43f122e9e6e6950f5de603feb7df0f1a3",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1f8308f43f122e9e6e6950f5de603feb7df0f1a3",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java",
          "pdfbox/src/test/resources/input/eu-001.pdf-sorted.txt",
          "pdfbox/src/test/resources/input/eu-001.pdf.txt"
        ],
        "message": "PDFBOX-5002: avoid merged text when a big font is followed by at least two lines of text in a smaller font, as suggested by Thierry Gu\u00e9rin\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883174 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java||pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java||pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java -> pdfbox/src/main/java/org/apache/pdfbox/text/PDFTextStripper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "686:                     {",
          "687:                         line.add(LineItem.getWordSeparator());",
          "688:                     }",
          "689:                 }",
          "690:                 if (positionY >= maxYForLine)",
          "691:                 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "692:                     if (Math.abs(position.getX()",
          "693:                             - lastPosition.getTextPosition().getX()) > (wordSpacing + deltaSpace))",
          "694:                     {",
          "695:                         maxYForLine = MAX_Y_FOR_LINE_RESET_VALUE;",
          "696:                         maxHeightForLine = MAX_HEIGHT_FOR_LINE_RESET_VALUE;",
          "697:                         minYTopForLine = MIN_Y_TOP_FOR_LINE_RESET_VALUE;",
          "698:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3b15bb201beef00cb965c18568502ae4401ce7f",
      "candidate_info": {
        "commit_hash": "a3b15bb201beef00cb965c18568502ae4401ce7f",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a3b15bb201beef00cb965c18568502ae4401ce7f",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/ui/RecentFiles.java",
          "debugger/src/main/java/org/apache/pdfbox/debugger/ui/WindowPrefs.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "pdfbox/src/main/java/org/apache/pdfbox/io/MemoryUsageSetting.java",
          "pdfbox/src/main/java/org/apache/pdfbox/io/ScratchFile.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892290 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/ui/RecentFiles.java||debugger/src/main/java/org/apache/pdfbox/debugger/ui/RecentFiles.java",
          "debugger/src/main/java/org/apache/pdfbox/debugger/ui/WindowPrefs.java||debugger/src/main/java/org/apache/pdfbox/debugger/ui/WindowPrefs.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "pdfbox/src/main/java/org/apache/pdfbox/io/MemoryUsageSetting.java||pdfbox/src/main/java/org/apache/pdfbox/io/MemoryUsageSetting.java",
          "pdfbox/src/main/java/org/apache/pdfbox/io/ScratchFile.java||pdfbox/src/main/java/org/apache/pdfbox/io/ScratchFile.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/ui/RecentFiles.java||debugger/src/main/java/org/apache/pdfbox/debugger/ui/RecentFiles.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/ui/RecentFiles.java -> debugger/src/main/java/org/apache/pdfbox/debugger/ui/RecentFiles.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     {",
          "50:         this.maximum = maximumFile;",
          "51:         this.pref = Preferences.userNodeForPackage(className);",
          "",
          "[Removed Lines]",
          "48:     public RecentFiles(Class className, int maximumFile)",
          "",
          "[Added Lines]",
          "48:     public RecentFiles(Class<?> className, int maximumFile)",
          "",
          "---------------"
        ],
        "debugger/src/main/java/org/apache/pdfbox/debugger/ui/WindowPrefs.java||debugger/src/main/java/org/apache/pdfbox/debugger/ui/WindowPrefs.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/ui/WindowPrefs.java -> debugger/src/main/java/org/apache/pdfbox/debugger/ui/WindowPrefs.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     private static final String KEY = \"window_prefs_\";",
          "33:     private final Preferences pref;",
          "36:     {",
          "37:         this.pref = Preferences.userNodeForPackage(className);",
          "38:     }",
          "",
          "[Removed Lines]",
          "35:     public WindowPrefs(Class className)",
          "",
          "[Added Lines]",
          "35:     public WindowPrefs(Class<?> className)",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1508:         {",
          "1509:             if (retval instanceof COSArray)",
          "1510:             {",
          "1512:                 retval = ((COSArray) retval).getObject(idx);",
          "1513:             }",
          "1514:             else if (retval instanceof COSDictionary)",
          "",
          "[Removed Lines]",
          "1511:                 int idx = Integer.parseInt(pathString.replaceAll(\"\\\\[\", \"\").replaceAll(\"\\\\]\", \"\"));",
          "",
          "[Added Lines]",
          "1511:                 int idx = Integer.parseInt(pathString.replace(\"\\\\[\", \"\").replace(\"\\\\]\", \"\"));",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/io/MemoryUsageSetting.java||pdfbox/src/main/java/org/apache/pdfbox/io/MemoryUsageSetting.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/io/MemoryUsageSetting.java -> pdfbox/src/main/java/org/apache/pdfbox/io/MemoryUsageSetting.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:                         long maxMainMemoryBytes, long maxStorageBytes)",
          "59:     {",
          "62:         long    locMaxMainMemoryBytes = useMainMemory ? maxMainMemoryBytes : -1;",
          "63:         long    locMaxStorageBytes = maxStorageBytes > 0 ? maxStorageBytes : -1;",
          "",
          "[Removed Lines]",
          "61:         boolean locUseMainMemory = useTempFile ? useMainMemory : true;",
          "",
          "[Added Lines]",
          "61:         boolean locUseMainMemory = !useTempFile || useMainMemory;",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/io/ScratchFile.java||pdfbox/src/main/java/org/apache/pdfbox/io/ScratchFile.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/io/ScratchFile.java -> pdfbox/src/main/java/org/apache/pdfbox/io/ScratchFile.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     public ScratchFile(MemoryUsageSetting memUsageSetting) throws IOException",
          "109:     {",
          "110:         maxMainMemoryIsRestricted = (!memUsageSetting.useMainMemory()) || memUsageSetting.isMainMemoryRestricted();",
          "112:         scratchFileDirectory = useScratchFile ? memUsageSetting.getTempDir() : null;",
          "114:         if ((scratchFileDirectory != null) && (!scratchFileDirectory.isDirectory()))",
          "",
          "[Removed Lines]",
          "111:         useScratchFile = maxMainMemoryIsRestricted ? memUsageSetting.useTempFile() : false;",
          "",
          "[Added Lines]",
          "111:         useScratchFile = maxMainMemoryIsRestricted && memUsageSetting.useTempFile();",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "332:         cs.drawShape(width, hasStroke,",
          "336:     }",
          "",
          "[Removed Lines]",
          "335:                      INTERIOR_COLOR_STYLES.contains(style) ? hasBackground : false);",
          "",
          "[Added Lines]",
          "335:                      INTERIOR_COLOR_STYLES.contains(style) && hasBackground);",
          "",
          "---------------"
        ]
      }
    }
  ]
}