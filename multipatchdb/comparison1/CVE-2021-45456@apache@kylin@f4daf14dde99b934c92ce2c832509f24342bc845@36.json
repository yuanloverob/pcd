{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "93671dfb0a2d3d21025e1dbf1e872daf0e217cc5",
      "candidate_info": {
        "commit_hash": "93671dfb0a2d3d21025e1dbf1e872daf0e217cc5",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/93671dfb0a2d3d21025e1dbf1e872daf0e217cc5",
        "files": [
          "webapp/app/js/directives/ui-grid.js"
        ],
        "message": "KYLIN-5086, fix query pushdown with agg func without alias get an empty appearance",
        "before_after_code_files": [
          "webapp/app/js/directives/ui-grid.js||webapp/app/js/directives/ui-grid.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "webapp/app/js/directives/ui-grid.js||webapp/app/js/directives/ui-grid.js": [
          "File: webapp/app/js/directives/ui-grid.js -> webapp/app/js/directives/ui-grid.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "11454:       var parts = path.split(uiGridConstants.DOT_REGEXP);",
          "11455:       var preparsed = [parts.shift()];    // first item must be var notation, thus skip",
          "11456:       angular.forEach(parts, function (part) {",
          "11458:       });",
          "11459:       return preparsed.join('[\\'');",
          "11460:     }",
          "",
          "[Removed Lines]",
          "11457:         preparsed.push(part.replace(uiGridConstants.FUNC_REGEXP, '\\']$1'));",
          "",
          "[Added Lines]",
          "11457:         var specialFun = ['COUNT', 'SUM', 'MIN', 'MAX', 'AVG'];",
          "11458:         var parttemp = part.replace(uiGridConstants.FUNC_REGEXP, '');",
          "11459:         if (specialFun.indexOf(parttemp) > -1) {",
          "11460:           preparsed.push(part + '\\']');",
          "11461:         } else {",
          "11462:           preparsed.push(part.replace(uiGridConstants.FUNC_REGEXP, '\\']$1'));",
          "11463:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "401e9b49d160cda23f9d7015d0c94a64296be6c3",
      "candidate_info": {
        "commit_hash": "401e9b49d160cda23f9d7015d0c94a64296be6c3",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/401e9b49d160cda23f9d7015d0c94a64296be6c3",
        "files": [
          "core-cube/src/main/java/org/apache/kylin/cube/CubeManager.java"
        ],
        "message": "KYLIN-3628 Fix the silently swallow legit exceptions and reduce code duplication\n\n(cherry picked from commit e16a4beeaa1c2889c55356a5283f662e908f3122)",
        "before_after_code_files": [
          "core-cube/src/main/java/org/apache/kylin/cube/CubeManager.java||core-cube/src/main/java/org/apache/kylin/cube/CubeManager.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-cube/src/main/java/org/apache/kylin/cube/CubeManager.java||core-cube/src/main/java/org/apache/kylin/cube/CubeManager.java": [
          "File: core-cube/src/main/java/org/apache/kylin/cube/CubeManager.java -> core-cube/src/main/java/org/apache/kylin/cube/CubeManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: import org.apache.kylin.cube.cuboid.Cuboid;",
          "48: import org.apache.kylin.cube.model.CubeDesc;",
          "49: import org.apache.kylin.cube.model.CubeDescTiretreeGlobalDomainDictUtil;",
          "51: import org.apache.kylin.cube.model.SnapshotTableDesc;",
          "52: import org.apache.kylin.dict.DictionaryInfo;",
          "53: import org.apache.kylin.dict.DictionaryManager;",
          "",
          "[Removed Lines]",
          "50: import org.apache.kylin.cube.model.DimensionDesc;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1269:                     IRealization realization = registry.getRealization(entry.getType(), entry.getRealization());",
          "1270:                     if (realization != null && realization.isReady() && realization instanceof CubeInstance) {",
          "1271:                         CubeInstance current = (CubeInstance) realization;",
          "1273:                             CubeSegment segment = current.getLatestReadySegment();",
          "1274:                             if (segment != null) {",
          "1275:                                 long latestBuildTime = segment.getLastBuildTime();",
          "",
          "[Removed Lines]",
          "1272:                         if (checkMeetSnapshotTable(current, lookupTableName)) {",
          "",
          "[Added Lines]",
          "1271:                         if (current.getDescriptor().findDimensionByTable(lookupTableName) != null) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1284:             }",
          "1285:         } catch (Exception e) {",
          "1286:             logger.info(\"Unexpected error.\", e);",
          "1287:         }",
          "1288:         if (!cubeInstance.equals(cube)) {",
          "1289:             logger.debug(\"Picked cube {} over {} as it provides a more recent snapshot of the lookup table {}\", cube,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1286:             throw e;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1291:         }",
          "1292:         return cube == null ? cubeInstance : cube;",
          "1293:     }",
          "1314: }",
          "",
          "[Removed Lines]",
          "1299:     private boolean checkMeetSnapshotTable(CubeInstance toCheck, String lookupTableName) {",
          "1300:         boolean checkRes = false;",
          "1301:         String lookupTbl = lookupTableName;",
          "1302:         String[] strArr = lookupTableName.split(\"\\\\.\");",
          "1303:         if (strArr.length > 1) {",
          "1304:             lookupTbl = strArr[strArr.length - 1];",
          "1305:         }",
          "1306:         for (DimensionDesc dimensionDesc : toCheck.getDescriptor().getDimensions()) {",
          "1307:             if (dimensionDesc.getTableRef().getTableName().equalsIgnoreCase(lookupTbl)) {",
          "1308:                 checkRes = true;",
          "1309:                 break;",
          "1310:             }",
          "1311:         }",
          "1312:         return checkRes;",
          "1313:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fa14239c49c800f69369321eafdc4ef9727ba33",
      "candidate_info": {
        "commit_hash": "6fa14239c49c800f69369321eafdc4ef9727ba33",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/6fa14239c49c800f69369321eafdc4ef9727ba33",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeSnapshotBuilder.scala"
        ],
        "message": "KYLIN-5182, support to ignore only one null count in check duplicate key",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeSnapshotBuilder.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeSnapshotBuilder.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2321:         return Boolean.valueOf(getOptional(\"kylin.engine.build-base-cuboid-enabled\", TRUE));",
          "2322:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2324:     @ConfigTag(ConfigTag.Tag.CUBE_LEVEL)",
          "2325:     public boolean isIgnoringNullInCheckDupKeyEnabled() {",
          "2326:         return Boolean.valueOf(this.getOptional(\"kylin.job.ignoring-null-in-check-dup-key-enabled\", FALSE));",
          "2327:     }",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeSnapshotBuilder.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeSnapshotBuilder.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeSnapshotBuilder.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeSnapshotBuilder.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:           val lookupTablePKS = joinDesc.PKS.map(lookupTablePK => lookupTablePK.columnName)",
          "198:           val countDistinctColumn = df.agg(countDistinct(lookupTablePKS.head, lookupTablePKS.tail: _*)).collect().map(_.getLong(0)).head",
          "199:           if (countColumn != countDistinctColumn) {",
          "201:           }",
          "202:         } else {",
          "203:           logInfo(\"Skip check duplicate primary key on table : \" + tableInfo.identity)",
          "",
          "[Removed Lines]",
          "200:             throw new IllegalStateException(s\"Failed to build lookup table ${lookupTableName} snapshot for Dup key found, key= ${lookupTablePKS.mkString(\",\")}\")",
          "",
          "[Added Lines]",
          "200:             if (seg.kylinconf.isIgnoringNullInCheckDupKeyEnabled && countDistinctColumn + 1 == countColumn) {",
          "202:               logInfo(\"Using config: kylin.job.ignoring-null-in-check-dup-key-enabled=true to ignore only one null count.\")",
          "203:             } else {",
          "204:               throw new IllegalStateException(s\"Failed to build lookup table ${lookupTableName} snapshot for Dup key found, key= ${lookupTablePKS.mkString(\",\")}\")",
          "205:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "66840a964ce54cfb06c3b231762d863f136fcd80",
      "candidate_info": {
        "commit_hash": "66840a964ce54cfb06c3b231762d863f136fcd80",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/66840a964ce54cfb06c3b231762d863f136fcd80",
        "files": [
          "cache/src/main/java/net/spy/memcached/protocol/TCPMemcachedNodeImpl.java",
          "cache/src/main/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManager.java",
          "cache/src/test/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManagerTest.java"
        ],
        "message": "KYLIN-4507 Override getSocketAddress() in TCPMemcachedNodeImpl to auto detect memcached instance ip change\n\n(cherry picked from commit a585119a59f4520114dd2d6fb357aeab41b32977)",
        "before_after_code_files": [
          "cache/src/main/java/net/spy/memcached/protocol/TCPMemcachedNodeImpl.java||cache/src/main/java/net/spy/memcached/protocol/TCPMemcachedNodeImpl.java",
          "cache/src/main/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManager.java||cache/src/main/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManager.java",
          "cache/src/test/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManagerTest.java||cache/src/test/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManagerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cache/src/main/java/net/spy/memcached/protocol/TCPMemcachedNodeImpl.java||cache/src/main/java/net/spy/memcached/protocol/TCPMemcachedNodeImpl.java": [
          "File: cache/src/main/java/net/spy/memcached/protocol/TCPMemcachedNodeImpl.java -> cache/src/main/java/net/spy/memcached/protocol/TCPMemcachedNodeImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package net.spy.memcached.protocol;",
          "21: import java.io.IOException;",
          "22: import java.net.SocketAddress;",
          "23: import java.nio.ByteBuffer;",
          "24: import java.nio.channels.SelectionKey;",
          "25: import java.nio.channels.SocketChannel;",
          "26: import java.util.ArrayList;",
          "27: import java.util.Collection;",
          "28: import java.util.concurrent.BlockingQueue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.net.InetSocketAddress;",
          "27: import java.nio.channels.UnsupportedAddressTypeException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "417:     public final SocketAddress getSocketAddress() {",
          "419:     }",
          "",
          "[Removed Lines]",
          "418:         return socketAddress;",
          "",
          "[Added Lines]",
          "423:         if (!(socketAddress instanceof InetSocketAddress)) {",
          "424:             throw new UnsupportedAddressTypeException();",
          "425:         }",
          "426:         InetSocketAddress inetSocketAddress = (InetSocketAddress) socketAddress;",
          "427:         return new InetSocketAddress(inetSocketAddress.getHostName(), inetSocketAddress.getPort());",
          "",
          "---------------"
        ],
        "cache/src/main/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManager.java||cache/src/main/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManager.java": [
          "File: cache/src/main/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManager.java -> cache/src/main/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     void enableRemoteCacheManager() {",
          "69:         remoteCacheManager.setClusterHealth(true);",
          "70:     }",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:     @VisibleForTesting",
          "73:     MemcachedCacheManager getRemoteCacheManager() {",
          "74:         return remoteCacheManager;",
          "75:     }",
          "",
          "---------------"
        ],
        "cache/src/test/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManagerTest.java||cache/src/test/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManagerTest.java": [
          "File: cache/src/test/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManagerTest.java -> cache/src/test/java/org/apache/kylin/cache/cachemanager/RemoteLocalFailOverCacheManagerTest.java"
        ]
      }
    },
    {
      "candidate_hash": "3e73e421322e9e42f669c4a2a7510de3755b3558",
      "candidate_info": {
        "commit_hash": "3e73e421322e9e42f669c4a2a7510de3755b3558",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/3e73e421322e9e42f669c4a2a7510de3755b3558",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/CacheService.java",
          "storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/CubeHBaseEndpointRPC.java"
        ],
        "message": "KYLIN-4667 Automatically set kylin.query.cache-signature-enabled to be true when memcached is enabled (#1540)\n\n(cherry picked from commit 49d7b9bd6c022bf842c731c0521f0898e16566bf)",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/CacheService.java||server-base/src/main/java/org/apache/kylin/rest/service/CacheService.java",
          "storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/CubeHBaseEndpointRPC.java||storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/CubeHBaseEndpointRPC.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1973:         return Boolean.parseBoolean(this.getOptional(\"kylin.query.ignore-unknown-function\", FALSE));",
          "1974:     }",
          "1976:     public String getMemCachedHosts() {",
          "1978:     }",
          "1980:     public boolean isQuerySegmentCacheEnabled() {",
          "",
          "[Removed Lines]",
          "1977:         return getRequired(\"kylin.cache.memcached.hosts\");",
          "",
          "[Added Lines]",
          "1976:     public boolean isMemcachedEnabled() {",
          "1977:         return !StringUtil.isEmpty(getMemCachedHosts());",
          "1978:     }",
          "1981:         return getOptional(\"kylin.cache.memcached.hosts\", null);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2152:     }",
          "2154:     public boolean isQueryCacheSignatureEnabled() {",
          "2156:     }",
          "2158:     public int getFlatFilterMaxChildrenSize() {",
          "",
          "[Removed Lines]",
          "2155:         return Boolean.parseBoolean(this.getOptional(\"kylin.query.cache-signature-enabled\", FALSE));",
          "",
          "[Added Lines]",
          "2159:         return Boolean.parseBoolean(",
          "2160:                 this.getOptional(\"kylin.query.cache-signature-enabled\", String.valueOf(isMemcachedEnabled())));",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/service/CacheService.java||server-base/src/main/java/org/apache/kylin/rest/service/CacheService.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/service/CacheService.java -> server-base/src/main/java/org/apache/kylin/rest/service/CacheService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import org.slf4j.Logger;",
          "28: import org.slf4j.LoggerFactory;",
          "29: import org.springframework.beans.factory.InitializingBean;",
          "30: import org.springframework.beans.factory.annotation.Autowired;",
          "31: import org.springframework.beans.factory.annotation.Qualifier;",
          "32: import org.springframework.stereotype.Component;",
          "",
          "[Removed Lines]",
          "34: import net.sf.ehcache.CacheManager;",
          "",
          "[Added Lines]",
          "30: import org.springframework.cache.CacheManager;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:                 logger.info(\"cleaning cache for project \" + project + \" (currently remove nothing)\");",
          "122:             } else {",
          "123:                 logger.info(\"cleaning cache for project \" + project + \" (currently remove all entries)\");",
          "125:             }",
          "126:         } else {",
          "127:             logger.warn(\"skip cleaning cache for project \" + project);",
          "",
          "[Removed Lines]",
          "124:                 cacheManager.getCache(QueryService.QUERY_CACHE).removeAll();",
          "",
          "[Added Lines]",
          "124:                 cacheManager.getCache(QueryService.QUERY_CACHE).clear();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "131:     protected void cleanAllDataCache() {",
          "132:         if (cacheManager != null) {",
          "133:             logger.warn(\"cleaning all storage cache\");",
          "135:         } else {",
          "136:             logger.warn(\"skip cleaning all storage cache\");",
          "137:         }",
          "",
          "[Removed Lines]",
          "134:             cacheManager.clearAll();",
          "",
          "[Added Lines]",
          "134:             for (String cacheName : cacheManager.getCacheNames()) {",
          "135:                 logger.warn(\"cleaning storage cache for {}\", cacheName);",
          "136:                 cacheManager.getCache(cacheName).clear();",
          "137:             }",
          "",
          "---------------"
        ],
        "storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/CubeHBaseEndpointRPC.java||storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/CubeHBaseEndpointRPC.java": [
          "File: storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/CubeHBaseEndpointRPC.java -> storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/CubeHBaseEndpointRPC.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "517:             return false;",
          "518:         }",
          "519:         try {",
          "521:                 return false;",
          "522:             }",
          "523:         } catch (Exception e) {",
          "",
          "[Removed Lines]",
          "520:             if (KylinConfig.getInstanceFromEnv().getMemCachedHosts() == null) {",
          "",
          "[Added Lines]",
          "520:             if (!KylinConfig.getInstanceFromEnv().isMemcachedEnabled()) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}